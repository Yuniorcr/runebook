<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="f15d4b738a0087cf720ac4747cac6e2115d2a1e5" translate="yes" xml:space="preserve">
          <source>If the named environment variable exists:</source>
          <target state="translated">명명 된 환경 변수가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="817a6ea1afc02fcab23cb57f4505f6c4b0aca470" translate="yes" xml:space="preserve">
          <source>If the number can be represented as 0.xxxxxx*10**n where xxxxxx is a string of digits with no leading zeros, then n is the exponent.</source>
          <target state="translated">숫자를 0.xxxxxx * 10 ** n으로 표시 할 수 있습니다. 여기서 xxxxxx는 앞에 0이없는 숫자 문자열이며 n은 지수입니다.</target>
        </trans-unit>
        <trans-unit id="94d0c5e4248f58e761f2db8b6963e7375cee4189" translate="yes" xml:space="preserve">
          <source>If the number of nested arrays or objects exceeds &lt;em&gt;limit&lt;/em&gt;, an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; exception is raised. This argument is similar (but not exactly the same!) to the &lt;em&gt;limit&lt;/em&gt; argument in &lt;a href=&quot;marshal#method-c-dump&quot;&gt;&lt;code&gt;Marshal.dump&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">중첩 배열이나 객체의 수가 &lt;em&gt;limit을&lt;/em&gt; 초과 하면 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 이 인수는 &lt;a href=&quot;marshal#method-c-dump&quot;&gt; &lt;code&gt;Marshal.dump&lt;/code&gt; &lt;/a&gt; 의 &lt;em&gt;limit&lt;/em&gt; 인수 와 유사하지만 정확히 동일하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1f0368b9474020bd574b371db52d52dc0d5f14d4" translate="yes" xml:space="preserve">
          <source>If the number of objects in the &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; do not match the number of arguments for the method, an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 의 객체 수가 메서드의 인수 개수와 일치하지 않으면 &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="87746b152d3edc0ebfd60c7d3182e0e25ea58987" translate="yes" xml:space="preserve">
          <source>If the object was shareable, &lt;code&gt;move: true&lt;/code&gt; has no effect on it:</source>
          <target state="translated">객체를 공유 할 수있는 경우 &lt;code&gt;move: true&lt;/code&gt; 는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f4b23b0d7536ac45af6c28e7a6daec01332114e8" translate="yes" xml:space="preserve">
          <source>If the objects are both strings they are compatible when they are concatenatable. The encoding of the concatenated string will be returned if they are compatible, nil if they are not.</source>
          <target state="translated">객체가 모두 문자열 인 경우 연결 가능할 때 호환됩니다. 연결된 문자열의 인코딩은 호환 가능한 경우 반환되며, 그렇지 않으면 nil입니다.</target>
        </trans-unit>
        <trans-unit id="eb90c038ff4d1082fe5c7baf72a5c2474a2f6fcf" translate="yes" xml:space="preserve">
          <source>If the objects are non-strings their encodings are compatible when they have an encoding and:</source>
          <target state="translated">객체가 문자열이 아닌 경우 인코딩이있을 때 인코딩이 호환되며</target>
        </trans-unit>
        <trans-unit id="6b32354457d14fa0e1bc33e18ced8b795ce04cc2" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;half&lt;/code&gt; keyword argument is given, numbers that are half-way between two possible rounded values will be rounded according to the specified tie-breaking &lt;code&gt;mode&lt;/code&gt;:</source>
          <target state="translated">선택적인 &lt;code&gt;half&lt;/code&gt; 키워드 인수가 제공되면 가능한 두 반올림 값 사이의 중간 숫자는 지정된 타이 브레이킹 &lt;code&gt;mode&lt;/code&gt; 에 따라 반올림 됩니다 .</target>
        </trans-unit>
        <trans-unit id="2377e55140248658a623c57a45250c4d28001463" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;keyword_init&lt;/code&gt; keyword argument is set to &lt;code&gt;true&lt;/code&gt;, .new takes keyword arguments instead of normal arguments.</source>
          <target state="translated">선택적 &lt;code&gt;keyword_init&lt;/code&gt; 키워드 인수가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 .new는 일반 인수 대신 키워드 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="65824381d5e3e99dcac48202e3472d730ac0766f" translate="yes" xml:space="preserve">
          <source>If the optional &lt;em&gt;filename&lt;/em&gt; parameter is provided, then it is read in and parsed via parse_config.</source>
          <target state="translated">선택적 &lt;em&gt;filename&lt;/em&gt; 매개 변수가 제공되면 parse_config를 통해 읽히고 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="61edf21217fecddf3af41af2bfdf23745939dece" translate="yes" xml:space="preserve">
          <source>If the optional &lt;em&gt;outbuf&lt;/em&gt; argument is present, it must reference a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, which will receive the data. The &lt;em&gt;outbuf&lt;/em&gt; will contain only the received data after the method call even if it is not empty at the beginning.</source>
          <target state="translated">선택적 &lt;em&gt;outbuf&lt;/em&gt; 인수가 있으면 데이터를 수신 할 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 을&lt;/a&gt; 참조해야합니다 . &lt;em&gt;있었던 outbuf는&lt;/em&gt; 그것이 처음에 비어 있지 않은 경우에도 메서드 호출을 시작한 후 수신 된 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="55e697eb9a9e01e0379ba179ba5a3c4639561a99" translate="yes" xml:space="preserve">
          <source>If the optional &lt;em&gt;wrap&lt;/em&gt; parameter is &lt;code&gt;true&lt;/code&gt;, the loaded script will be executed under an anonymous module, protecting the calling program's global namespace. In no circumstance will any local variables in the loaded file be propagated to the loading environment.</source>
          <target state="translated">선택적 &lt;em&gt;wrap&lt;/em&gt; 매개 변수가 &lt;code&gt;true&lt;/code&gt; 이면 로드 된 스크립트가 익명 모듈에서 실행되어 호출 프로그램의 전역 네임 스페이스를 보호합니다. 어떤 경우에도로드 된 파일의 로컬 변수는로드 환경으로 전파되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="24a6c6b84f86ea57bea48327b33eb38152c0ded1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;code&gt;result_hash&lt;/code&gt; is given, it is overwritten and returned. This is intended to avoid probe effect.</source>
          <target state="translated">선택적 인수 &lt;code&gt;result_hash&lt;/code&gt; 가 제공되면 겹쳐 쓰여 리턴됩니다. 이것은 프로브 효과를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="0e8ff4a0f4657b691b5b816a7afe99b8e8801d62" translate="yes" xml:space="preserve">
          <source>If the optional argument, hash, is given, it is overwritten and returned. This is intended to avoid probe effect.</source>
          <target state="translated">선택적 인수 인 hash가 제공되면 덮어 써지고 반환됩니다. 이것은 프로브 효과를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="1bbce9b42226481c8cd71d79a18111e750faa1fa" translate="yes" xml:space="preserve">
          <source>If the optional argument, result_hash, is given, it is overwritten and returned. This is intended to avoid probe effect.</source>
          <target state="translated">선택적 인수 인 result_hash가 제공되면 겹쳐 쓰여 리턴됩니다. 이것은 프로브 효과를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="8edec82d94e29355cd32ba14417af642d847f062" translate="yes" xml:space="preserve">
          <source>If the optional block is given, the newly created &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; object is passed to it and closed when the block finishes. In this case, the return value of this method is the return value of the block. If no block is given, the return value of this method is the newly created &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; object itself, and the caller is responsible for closing it upon completion using the finish() method.</source>
          <target state="translated">선택적 블록이 제공되면 새로 작성된 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 오브젝트가 전달되고 블록이 완료되면 닫힙니다. 이 경우이 방법의 반환 값은 블록의 반환 값입니다. 블록이 제공되지 않으면이 메소드의 리턴 값은 새로 작성된 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 오브젝트 자체이며, 호출자는 finish () 메소드를 사용하여 완료시이를 닫을 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="00124e7156b495e74df8ed3cd175d7ccb49d28eb" translate="yes" xml:space="preserve">
          <source>If the optional code block is given, the result of the block is returned if the item is not found. (To remove &lt;code&gt;nil&lt;/code&gt; elements and get an informative return value, use &lt;a href=&quot;array#method-i-compact-21&quot;&gt;&lt;code&gt;Array#compact!&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">선택적 코드 블록이 제공되면 항목을 찾지 못하면 블록의 결과가 반환됩니다. (제거하려면 &lt;code&gt;nil&lt;/code&gt; 요소와 유익한 반환 값, 사용 얻을 &lt;a href=&quot;array#method-i-compact-21&quot;&gt; &lt;code&gt;Array#compact!&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ccf5ffb0330bbec67cb6c6d2811ff5cc580462ab" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;env&lt;/code&gt; is specified, it is used instead of &lt;a href=&quot;../../env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;env&lt;/code&gt; 가 지정되면 &lt;a href=&quot;../../env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 대신 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a73804087621528d2282a828208a9d11f8897ad2" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;env&lt;/code&gt; is specified, it is used instead of &lt;a href=&quot;../env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;env&lt;/code&gt; 가 지정되면 &lt;a href=&quot;../env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 대신 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="60e3bcbf92c0a7fb0e9e88a28c94fe10712df207" translate="yes" xml:space="preserve">
          <source>If the optional second argument is true and the detected year is in the range &amp;ldquo;00&amp;rdquo; to &amp;ldquo;99&amp;rdquo;, considers the year a 2-digit form and makes it full.</source>
          <target state="translated">선택적인 두 번째 인수가 true이고 감지 된 연도가&amp;ldquo;00&amp;rdquo;에서&amp;ldquo;99&amp;rdquo;범위 인 경우 연도를 2 자리 형식으로 간주하여 전체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="377fa945741ab31f519107f8abbcdc3051fbe216" translate="yes" xml:space="preserve">
          <source>If the optional second argument is true and the detected year is in the range &amp;ldquo;00&amp;rdquo; to &amp;ldquo;99&amp;rdquo;, makes it full.</source>
          <target state="translated">선택적인 두 번째 인수가 true이고 감지 된 연도가&amp;ldquo;00&amp;rdquo;에서&amp;ldquo;99&amp;rdquo;범위에 있으면이 값을 모두 채우십시오.</target>
        </trans-unit>
        <trans-unit id="0ff334a0f014959a7d405d4557037467f361a7a3" translate="yes" xml:space="preserve">
          <source>If the ordering field is missing, or if the ordering field is present and set to false, then the genTime field only indicates the time at which the time-stamp token has been created by the TSA. In such a case, the ordering of time-stamp tokens issued by the same TSA or different TSAs is only possible when the difference between the genTime of the first time-stamp token and the genTime of the second time-stamp token is greater than the sum of the accuracies of the genTime for each time-stamp token.</source>
          <target state="translated">ordering 필드가 없거나 ordering 필드가 있고 false로 설정된 경우 genTime 필드는 TSA에서 타임 스탬프 토큰을 만든 시간 만 나타냅니다. 이 경우 동일한 TSA 또는 다른 TSA에서 발행 한 타임 스탬프 토큰의 순서는 첫 번째 타임 스탬프 토큰의 genTime과 두 번째 타임 스탬프 토큰의 genTime 간의 차이가 각 타임 스탬프 토큰에 대한 genTime의 정확도 합계.</target>
        </trans-unit>
        <trans-unit id="8c3e2f250019c11eb5344e345bfd2c1d4ce29b11" translate="yes" xml:space="preserve">
          <source>If the ordering field is present and set to true, every time-stamp token from the same TSA can always be ordered based on the genTime field, regardless of the genTime accuracy.</source>
          <target state="translated">ordering 필드가 있고 true로 설정되어 있으면 동일한 TSA의 모든 타임 스탬프 토큰이 genTime 정확도에 관계없이 항상 genTime 필드를 기반으로 정렬 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="057d0f2987ee5ebd0b46a730df7d14294a3b9b0e" translate="yes" xml:space="preserve">
          <source>If the ordering is set to PERMUTE but the environment variable POSIXLY_CORRECT is set, REQUIRE_ORDER is used instead. This is for compatibility with GNU getopt_long.</source>
          <target state="translated">순서가 PERMUTE로 설정되었지만 환경 변수 POSIXLY_CORRECT가 설정된 경우 REQUIRE_ORDER가 대신 사용됩니다. 이것은 GNU getopt_long과의 호환성을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="7dc86cd2cfd878092b872cf1f4821436f95d6bf6" translate="yes" xml:space="preserve">
          <source>If the outgoing port was closed with &lt;a href=&quot;ractor#method-i-close_outgoing&quot;&gt;&lt;code&gt;close_outgoing&lt;/code&gt;&lt;/a&gt;, the method will raise &lt;a href=&quot;ractor/closederror&quot;&gt;&lt;code&gt;Ractor::ClosedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">나가는 포트가 &lt;a href=&quot;ractor#method-i-close_outgoing&quot;&gt; &lt;code&gt;close_outgoing&lt;/code&gt; &lt;/a&gt; 으로 닫히면 메서드는 &lt;a href=&quot;ractor/closederror&quot;&gt; &lt;code&gt;Ractor::ClosedError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3aa49f073c4a7658fba35a3784ea4746b08fdf78" translate="yes" xml:space="preserve">
          <source>If the outgoing port was closed with &lt;a href=&quot;ractor#method-i-close_outgoing&quot;&gt;&lt;code&gt;close_outgoing&lt;/code&gt;&lt;/a&gt;, the method will raise:</source>
          <target state="translated">나가는 포트가 &lt;a href=&quot;ractor#method-i-close_outgoing&quot;&gt; &lt;code&gt;close_outgoing&lt;/code&gt; &lt;/a&gt; 으로 닫히면 메서드가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="00bab8bffaa052b4108e2afee15d0cb2f6dbcebc" translate="yes" xml:space="preserve">
          <source>If the output field separator (&lt;code&gt;$,&lt;/code&gt;) is not &lt;code&gt;nil&lt;/code&gt;, it is inserted between objects. If the output record separator (&lt;code&gt;$\&lt;/code&gt;) is not &lt;code&gt;nil&lt;/code&gt;, it is appended to the output.</source>
          <target state="translated">출력 필드 구분 기호 ( &lt;code&gt;$,&lt;/code&gt; )가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 오브젝트 사이에 삽입됩니다. 출력 레코드 구분 기호 ( &lt;code&gt;$\&lt;/code&gt; )가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 출력에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="08ee211ba1fd14aff0097f20bb8c039c2e098191" translate="yes" xml:space="preserve">
          <source>If the parameter &lt;code&gt;intr&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, enables break, interrupt, quit, and suspend special characters.</source>
          <target state="translated">매개 변수 &lt;code&gt;intr&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 이면 중단, 인터럽트, 종료 및 일시 중단 특수 문자를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="57b0715ebf05a3ccb352af522af744c37fa5f613" translate="yes" xml:space="preserve">
          <source>If the parameter has multiple values, only the first will be retrieved; use &lt;a href=&quot;queryextension#attribute-i-params&quot;&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt; to get the array of values.</source>
          <target state="translated">매개 변수에 여러 값이있는 경우 첫 번째 값만 검색됩니다. &lt;a href=&quot;queryextension#attribute-i-params&quot;&gt; &lt;code&gt;params&lt;/code&gt; &lt;/a&gt; 를 사용 하여 값의 배열을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3b844111116d04ee12f0a90f54605b896ba5e7ed" translate="yes" xml:space="preserve">
          <source>If the path supplied is absolute, it will be escaped in order to make it absolute in the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 경로가 절대 경로이면 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 에서 절대 경로로 만들기 위해 이스케이프됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ee8406c750b89cd88579ec0edca3a39fbd27ab0" translate="yes" xml:space="preserve">
          <source>If the path supplied is absolute, it will be escaped in order to make it absolute in the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 경로가 절대 경로이면 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 에서 절대 경로로 만들기 위해 이스케이프됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0a0819d6d7d4ac673491a461396b3a5dd405c7f" translate="yes" xml:space="preserve">
          <source>If the platform doesn't have birthtime, raises &lt;a href=&quot;../notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">플랫폼에 출생 시간이 없으면 NotImplementedError가 &lt;a href=&quot;../notimplementederror&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1456509d606e594d220d835342ff63d209d066d5" translate="yes" xml:space="preserve">
          <source>If the platform doesn't have birthtime, raises &lt;a href=&quot;notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">플랫폼에 출생 시간이 없으면 NotImplementedError가 &lt;a href=&quot;notimplementederror&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="67c675ebe8d882fa0ebfbadde6cfff51aa1533ff" translate="yes" xml:space="preserve">
          <source>If the platform supports denormalized numbers, there are numbers between zero and &lt;a href=&quot;float#MIN&quot;&gt;&lt;code&gt;Float::MIN&lt;/code&gt;&lt;/a&gt;. 0.0.next_float returns the smallest positive floating point number including denormalized numbers.</source>
          <target state="translated">플랫폼이 비정규 화 된 숫자를 지원하면 0과 &lt;a href=&quot;float#MIN&quot;&gt; &lt;code&gt;Float::MIN&lt;/code&gt; &lt;/a&gt; 사이의 숫자가 있습니다 . 0.0.next_float는 비정규 화 된 숫자를 포함하여 가장 작은 양의 부동 소수점 숫자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d531f4bb58a1d1a5967f8bd0eca84cd40cb23a40" translate="yes" xml:space="preserve">
          <source>If the process is not alive, and &lt;code&gt;raise&lt;/code&gt; was true, a &lt;a href=&quot;pty/childexited&quot;&gt;&lt;code&gt;PTY::ChildExited&lt;/code&gt;&lt;/a&gt; exception will be raised. Otherwise it will return a &lt;a href=&quot;process/status&quot;&gt;&lt;code&gt;Process::Status&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">프로세스가 살아 아니며, 경우 &lt;code&gt;raise&lt;/code&gt; 사실이라고하는 &lt;a href=&quot;pty/childexited&quot;&gt; &lt;code&gt;PTY::ChildExited&lt;/code&gt; &lt;/a&gt; 예외가 발생됩니다. 그렇지 않으면 &lt;a href=&quot;process/status&quot;&gt; &lt;code&gt;Process::Status&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b0e644eeb9606953b8784a233db1dc1f531b3073" translate="yes" xml:space="preserve">
          <source>If the proxy &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is set after requests have been made, the next request will shut-down and re-open all connections.</source>
          <target state="translated">요청이 이루어진 후 프록시 &lt;a href=&quot;../../../../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 가 설정되면 다음 요청은 모든 연결을 종료하고 다시 엽니 다.</target>
        </trans-unit>
        <trans-unit id="58f603aa3c2464a41a927fa5d17e80f4f73ca603" translate="yes" xml:space="preserve">
          <source>If the proxy &lt;a href=&quot;../../../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; is set after requests have been made, the next request will shut-down and re-open all connections.</source>
          <target state="translated">요청이 이루어진 후 프록시 &lt;a href=&quot;../../../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 가 설정되면 다음 요청이 종료되고 모든 연결이 다시 열립니다.</target>
        </trans-unit>
        <trans-unit id="d141367f1ca7d06f949aa70a70b6579e2a3b8f2d" translate="yes" xml:space="preserve">
          <source>If the queue is empty, the calling thread is suspended until data is pushed onto the queue. If &lt;code&gt;non_block&lt;/code&gt; is true, the thread isn't suspended, and &lt;code&gt;ThreadError&lt;/code&gt; is raised.</source>
          <target state="translated">큐가 비어 있으면 데이터가 큐로 푸시 될 때까지 호출 스레드가 일시 중단됩니다. 경우 &lt;code&gt;non_block&lt;/code&gt; 는 사실, 스레드가 일시 중단되지 않으며, &lt;code&gt;ThreadError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="22078e7020d8e9293378b7b59c14d1f498733cce" translate="yes" xml:space="preserve">
          <source>If the range is positive and ascending (&lt;code&gt;0 &amp;lt; range.begin &amp;lt;= range.end&lt;/code&gt;), replaces elements from &lt;code&gt;range.begin&lt;/code&gt; to &lt;code&gt;range.end&lt;/code&gt;:</source>
          <target state="translated">범위가 양수이고 오름차순 ( &lt;code&gt;0 &amp;lt; range.begin &amp;lt;= range.end&lt;/code&gt; )이면 &lt;code&gt;range.begin&lt;/code&gt; 에서 range.end 로 요소 를 &lt;code&gt;range.end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1875cb97fe39b025431f4ec1393429f5a8b4ff83" translate="yes" xml:space="preserve">
          <source>If the range is positive and ascending (&lt;code&gt;range 0 &amp;lt; range.begin &amp;lt;= range.end&lt;/code&gt;, replaces elements from &lt;code&gt;range.begin&lt;/code&gt; to &lt;code&gt;range.end&lt;/code&gt;:</source>
          <target state="translated">범위가 양수이고 오름차순 &lt;code&gt;range 0 &amp;lt; range.begin &amp;lt;= range.end&lt;/code&gt; ( range 0 &amp;lt;range.begin &amp;lt;= range.end , &lt;code&gt;range.begin&lt;/code&gt; 에서 range.end 까지 요소 를 &lt;code&gt;range.end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b5fc9186e37508309d269dc75ef72d4302d80a5" translate="yes" xml:space="preserve">
          <source>If the read byte buffer is not empty, &lt;a href=&quot;io#method-i-read_nonblock&quot;&gt;&lt;code&gt;read_nonblock&lt;/code&gt;&lt;/a&gt; reads from the buffer like readpartial. In this case, the read(2) system call is not called.</source>
          <target state="translated">읽기 바이트 버퍼가 비어 있지 않으면 &lt;a href=&quot;io#method-i-read_nonblock&quot;&gt; &lt;code&gt;read_nonblock&lt;/code&gt; &lt;/a&gt; 은 readpartial과 같이 버퍼에서 읽습니다. 이 경우 read (2) 시스템 호출이 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4c630bff02745efecda8e73f81ea37749676643" translate="yes" xml:space="preserve">
          <source>If the referenced object is located within the local server, then the object itself is returned. Otherwise, a new &lt;a href=&quot;drbobject&quot;&gt;&lt;code&gt;DRbObject&lt;/code&gt;&lt;/a&gt; is created to act as a stub for the remote referenced object.</source>
          <target state="translated">참조 된 오브젝트가 로컬 서버 내에 있으면 오브젝트 자체가 리턴됩니다. 그렇지 않으면, 원격 참조 오브젝트의 스텁으로 작동하도록 새 &lt;a href=&quot;drbobject&quot;&gt; &lt;code&gt;DRbObject&lt;/code&gt; &lt;/a&gt; 가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="8d9d2488598348eaf1c8ce489c050d107c8662aa" translate="yes" xml:space="preserve">
          <source>If the required input is a path, then set the path option to true. This will enable tab completion for file paths relative to the current working directory on systems that support &lt;a href=&quot;../../../readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">필요한 입력이 경로 인 경우 경로 옵션을 true로 설정하십시오. &lt;a href=&quot;../../../readline&quot;&gt; &lt;code&gt;Readline&lt;/code&gt; &lt;/a&gt; 을 지원하는 시스템에서 현재 작업 디렉토리에 상대적인 파일 경로에 대한 탭 완성을 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="3b53fc72fa76f048931ba3db5f357f476d10e336" translate="yes" xml:space="preserve">
          <source>If the scheduler is not set, the method raises &lt;code&gt;RuntimeError (No scheduler is available!)&lt;/code&gt;.</source>
          <target state="translated">스케줄러가 설정되지 않은 경우 메서드는 &lt;code&gt;RuntimeError (No scheduler is available!)&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="899dec35b20668078e9d7aedbc09c638bee47aff" translate="yes" xml:space="preserve">
          <source>If the second argument is a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, and the matched text is one of its keys, the corresponding value is the replacement string.</source>
          <target state="translated">두 번째 인수가 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 이고 일치하는 텍스트가 해당 키 중 하나 인 경우 해당 값은 대체 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e04585cb26cbf8bb8c914907fb1c42abfd6d39ca" translate="yes" xml:space="preserve">
          <source>If the second argument is a &lt;code&gt;Hash&lt;/code&gt;, and the matched text is one of its keys, the corresponding value is the replacement string.</source>
          <target state="translated">두 번째 인수가 &lt;code&gt;Hash&lt;/code&gt; 이고 일치하는 텍스트가 해당 키 중 하나 인 경우 해당 값은 대체 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fd220007e9061380b82be33b9981d355b475ea46" translate="yes" xml:space="preserve">
          <source>If the second is omitted then '::1' is used. If the third is omitted then 0 (default interface) is used.</source>
          <target state="translated">두 번째가 생략되면 ':: 1'이 사용됩니다. 세 번째가 생략되면 0 (기본 인터페이스)이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="95731ef86bd29c3aa07507aaad5ce8273a4cc780" translate="yes" xml:space="preserve">
          <source>If the server certificate is invalid or &lt;code&gt;context.ca_file&lt;/code&gt; is not set when verifying peers an &lt;a href=&quot;openssl/ssl/sslerror&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">서버 인증서가 유효하지 않거나 피어를 확인할 때 &lt;code&gt;context.ca_file&lt;/code&gt; 이 설정되지 않으면 &lt;a href=&quot;openssl/ssl/sslerror&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5833d7e3719f1b062a205f803707bb4366b7274f" translate="yes" xml:space="preserve">
          <source>If the size of any argument is less than the size of the initial array, &lt;code&gt;nil&lt;/code&gt; values are supplied.</source>
          <target state="translated">인수의 크기가 초기 배열의 크기보다 작 으면 &lt;code&gt;nil&lt;/code&gt; 값이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b10a3ed09d73394e69ba13e93486009adc6349af" translate="yes" xml:space="preserve">
          <source>If the source of the &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; is a file, then consider using parse_config.</source>
          <target state="translated">&lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 의 소스가 파일 인 경우 parse_config 사용을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="726d852b6d6041290bc8691b59fe9f9ad9aca741" translate="yes" xml:space="preserve">
          <source>If the source plugin is loaded from lockfile or otherwise, it shall refresh the cache/specs (e.g. git sources can make a fresh clone).</source>
          <target state="translated">소스 플러그인이 잠금 파일에서로드되거나 그렇지 않으면 캐시 / 사양을 새로 고쳐야합니다 (예 : git 소스가 새로운 클론을 만들 수 있음).</target>
        </trans-unit>
        <trans-unit id="4f5dbb1766a2da4e8778d268f6d9bc370fd318d2" translate="yes" xml:space="preserve">
          <source>If the splat operator comes first in the call, parentheses must be used to avoid a warning.</source>
          <target state="translated">스 플랫 연산자가 호출에서 맨 앞에 오면 경고를 피하기 위해 괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="962bde96f9988896df31075d526196fa98e787f2" translate="yes" xml:space="preserve">
          <source>If the splat operator comes first in the call, parentheses must be used to avoid a warning:</source>
          <target state="translated">splat 연산자가 호출에서 먼저 오는 경우 경고를 피하기 위해 괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="100e3cf4a525ab68e5e1bc47828cf68d8e664933" translate="yes" xml:space="preserve">
          <source>If the splat operator comes first in the call, parenthesis must be used to avoid a warning.</source>
          <target state="translated">스 플랫 연산자가 호출에서 맨 앞에 오면 경고를 피하기 위해 괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="40b8a12fed9cdd0eccca5278ca508d93c6b51bb8" translate="yes" xml:space="preserve">
          <source>If the string from the first form (&lt;code&gt;exec(&quot;command&quot;)&lt;/code&gt;) follows these simple rules:</source>
          <target state="translated">첫 번째 양식 ( &lt;code&gt;exec(&quot;command&quot;)&lt;/code&gt; ) 의 문자열 이 다음과 같은 간단한 규칙을 따르는 경우 :</target>
        </trans-unit>
        <trans-unit id="c257497ec2222f073ab769ce8a1a9caccda6d475" translate="yes" xml:space="preserve">
          <source>If the string is frozen, then return duplicated mutable string.</source>
          <target state="translated">문자열이 고정 된 경우 복제 된 변경 가능한 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="43936dc7dd4dc66b17219a4a1670af67c7493f18" translate="yes" xml:space="preserve">
          <source>If the string is invalid byte sequence then replace invalid bytes with given replacement character, else returns self. If block is given, replace invalid bytes with returned value of the block.</source>
          <target state="translated">문자열이 유효하지 않은 바이트 시퀀스이면 유효하지 않은 바이트를 지정된 대체 문자로 바꾸고 그렇지 않으면 self를 리턴합니다. 블록이 제공되면 유효하지 않은 바이트를 블록의 리턴 값으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="adb684777c1f232daf400824fbece12d26ed60b7" translate="yes" xml:space="preserve">
          <source>If the string is not frozen, then return the string itself.</source>
          <target state="translated">문자열이 고정되지 않은 경우 문자열 자체를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="694620b5df54815bb6c727e11af0203708e9fab2" translate="yes" xml:space="preserve">
          <source>If the string is not in a Unicode &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;, then an &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; is raised. For details, see &lt;a href=&quot;string#method-i-unicode_normalize&quot;&gt;&lt;code&gt;String#unicode_normalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">문자열이 유니 코드에없는 경우 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; , 다음 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 발생합니다. 자세한 내용은 &lt;a href=&quot;string#method-i-unicode_normalize&quot;&gt; &lt;code&gt;String#unicode_normalize&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6aac9d1daa77034bbf1124e2124b809f2a87059" translate="yes" xml:space="preserve">
          <source>If the string is not in a Unicode &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;, then an &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; is raised. In this context, 'Unicode Encoding' means any of UTF-8, UTF-16BE/LE, and UTF-32BE/LE, as well as GB18030, UCS_2BE, and UCS_4BE. Anything other than UTF-8 is implemented by converting to UTF-8, which makes it slower than UTF-8.</source>
          <target state="translated">문자열이 유니 코드에없는 경우 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; , 다음 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 발생합니다. 이와 관련하여 '유니 코드 인코딩'은 UTF-8, UTF-16BE / LE 및 UTF-32BE / LE 및 GB18030, UCS_2BE 및 UCS_4BE를 의미합니다. UTF-8 이외의 것은 UTF-8로 변환하여 구현되므로 UTF-8보다 느립니다.</target>
        </trans-unit>
        <trans-unit id="6bd8e040f4bdc958e54c848037c1287f76dfe1df" translate="yes" xml:space="preserve">
          <source>If the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered greater than the shorter one.</source>
          <target state="translated">문자열의 길이가 다르고 가장 짧은 길이와 비교할 때 문자열이 같은 경우 더 긴 문자열이 짧은 문자열보다 큰 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7ccb1a510a2faa9f1acd20fad2529d79e1313b6f" translate="yes" xml:space="preserve">
          <source>If the struct name does not match a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; subclass in the running ruby an exception should be raised.</source>
          <target state="translated">구조체 이름이 실행중인 루비의 &lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 서브 클래스 와 일치하지 않으면 예외가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="028ab21de34dcb3a29de0a1ccea9c7831ca6008e" translate="yes" xml:space="preserve">
          <source>If the syslog is already open, raises a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">syslog가 이미 열려 있으면 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="7f88f7ca6e11561cbe4cf5837b2add826a5c30d9" translate="yes" xml:space="preserve">
          <source>If the terminal mode needs to be back, use &lt;code&gt;io.raw { ... }&lt;/code&gt;.</source>
          <target state="translated">터미널 모드로 돌아 가야하는 경우 &lt;code&gt;io.raw { ... }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="756cea2c25f126ccba797326b1ff79cef9ea980b" translate="yes" xml:space="preserve">
          <source>If the terminal mode needs to be back, use io.cooked { &amp;hellip; }.</source>
          <target state="translated">터미널 모드를 되돌려 야하는 경우 io.cooked {&amp;hellip;}를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="71dc44bfac44c1c2187bfa8ac42ab7b231c11dfe" translate="yes" xml:space="preserve">
          <source>If the terminal mode needs to be back, use io.raw { &amp;hellip; }.</source>
          <target state="translated">터미널 모드를 되돌려 야하는 경우 io.raw {&amp;hellip;}를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6486553676b7753606578ff73f2b80af572e074e" translate="yes" xml:space="preserve">
          <source>If the thread is still using the connection it may cause an error! It is best to call &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; in the thread at the appropriate time instead!</source>
          <target state="translated">스레드가 여전히 연결을 사용중인 경우 오류가 발생할 수 있습니다! 대신 적절한 시간에 스레드에서 &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 를 호출하는 것이 가장 좋습니다 !</target>
        </trans-unit>
        <trans-unit id="ffe153878a573d77d28e40c226f27823a2fde867" translate="yes" xml:space="preserve">
          <source>If the time limit expires, &lt;code&gt;nil&lt;/code&gt; will be returned, otherwise &lt;code&gt;thr&lt;/code&gt; is returned.</source>
          <target state="translated">시간 제한이 만료되면 &lt;code&gt;nil&lt;/code&gt; 이 반환되고 그렇지 않으면 &lt;code&gt;thr&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3bacc1e6b98e5755dc5e78c5ef8814f3048b995f" translate="yes" xml:space="preserve">
          <source>If the time zone does not match any of the above, &lt;code&gt;zone_offset&lt;/code&gt; will check if the local time zone (both with and without potential Daylight Saving Time changes being in effect) matches &lt;code&gt;zone&lt;/code&gt;. Specifying a value for &lt;code&gt;year&lt;/code&gt; will change the year used to find the local time zone.</source>
          <target state="translated">시간대는 위의 일치하지 않는 경우, &lt;code&gt;zone_offset&lt;/code&gt; (와 잠재적 인 일광 절약 시간이 변경 적용되지 않고 모두) 지역 시간대가 일치하는지 확인합니다 &lt;code&gt;zone&lt;/code&gt; . &lt;code&gt;year&lt;/code&gt; 값을 지정 하면 현지 시간대를 찾는 데 사용되는 연도 가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="07139b40a8006774065d01134886b02f1bd5027c" translate="yes" xml:space="preserve">
          <source>If the timestamp token is valid then this field contains the same nonce that was passed to the timestamp server in the initial &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">타임 스탬프 토큰이 유효하면이 필드에는 초기 &lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 에서 타임 스탬프 서버로 전달 된 것과 동일한 nonce가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="b97414506322e216174700dbf2cf226531bc4692" translate="yes" xml:space="preserve">
          <source>If the trace method is called outside block, a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">추적 메소드가 블록 외부에서 호출되면 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a06fd015bd61c5916d0bc3521070e84a12d87251" translate="yes" xml:space="preserve">
          <source>If the trace method isn't included in the given events filter, a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">주어진 이벤트 필터에 추적 메소드가 포함되어 있지 않으면 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="497b2b864a7a77c4f73548eeb66418d0a7832536" translate="yes" xml:space="preserve">
          <source>If the underlying operating system does not support &lt;em&gt;fdatasync(2)&lt;/em&gt;, &lt;a href=&quot;io#method-i-fsync&quot;&gt;&lt;code&gt;IO#fsync&lt;/code&gt;&lt;/a&gt; is called instead (which might raise a &lt;a href=&quot;notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">기본 운영 체제가 지원하지 않는 경우 &lt;em&gt;(2)를 fdatasync&lt;/em&gt; , &lt;a href=&quot;io#method-i-fsync&quot;&gt; &lt;code&gt;IO#fsync&lt;/code&gt; &lt;/a&gt; (A 올릴 수있는 대신이라고 &lt;a href=&quot;notimplementederror&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e2c19dbd5a9a96237961536ae8afb74377b74a88" translate="yes" xml:space="preserve">
          <source>If the underlying operating system does not support &lt;em&gt;fdatasync(2)&lt;/em&gt;, &lt;code&gt;IO#fsync&lt;/code&gt; is called instead (which might raise a &lt;code&gt;NotImplementedError&lt;/code&gt;).</source>
          <target state="translated">기본 운영 체제가 지원하지 않는 경우 &lt;em&gt;(2)를 fdatasync&lt;/em&gt; , &lt;code&gt;IO#fsync&lt;/code&gt; (A 올릴 수있는 대신이라고 &lt;code&gt;NotImplementedError&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="008f60704f556b7f8c5ec39797fae53e3b9c0c99" translate="yes" xml:space="preserve">
          <source>If the underlying platform doesn't define a constant the corresponding Ruby constant is not defined.</source>
          <target state="translated">기본 플랫폼이 상수를 정의하지 않으면 해당 Ruby 상수가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b6cb99885919af23c91c7137cb7a259b88513de" translate="yes" xml:space="preserve">
          <source>If the upper components of the given time are broken or missing, they are supplied with those of &lt;code&gt;now&lt;/code&gt;. For the lower components, the minimum values (1 or 0) are assumed if broken or missing. For example:</source>
          <target state="translated">주어진 시간의 상단 구성 요소가 깨지거나 누락 된 경우, 그들은들과 함께 제공되는 &lt;code&gt;now&lt;/code&gt; . 하위 구성 요소의 경우 최소값 (1 또는 0)이 깨지거나 누락 된 것으로 가정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f0a759f929368675a35bf5075f457ff4810fd3ed" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;:replace&lt;/code&gt;, &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; replaces characters which are undefined in the destination encoding with the replacement character. The default is to raise the &lt;a href=&quot;encoding/undefinedconversionerror&quot;&gt;&lt;code&gt;Encoding::UndefinedConversionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 &lt;code&gt;:replace&lt;/code&gt; 인 경우 , &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 는 대상 인코딩에서 정의되지 않은 문자를 대체 문자로 바꿉니다. 기본값은 &lt;a href=&quot;encoding/undefinedconversionerror&quot;&gt; &lt;code&gt;Encoding::UndefinedConversionError&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e5f374578c0c7a2a4c23a5bb0164e3b39f84fafc" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;:replace&lt;/code&gt;, &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; replaces invalid byte sequences in &lt;code&gt;str&lt;/code&gt; with the replacement character. The default is to raise the &lt;a href=&quot;encoding/invalidbytesequenceerror&quot;&gt;&lt;code&gt;Encoding::InvalidByteSequenceError&lt;/code&gt;&lt;/a&gt; exception</source>
          <target state="translated">값이 &lt;code&gt;:replace&lt;/code&gt; 인 경우 &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;str&lt;/code&gt; 의 유효하지 않은 바이트 시퀀스를 대체 문자로 바꿉니다 . 기본값은 &lt;a href=&quot;encoding/invalidbytesequenceerror&quot;&gt; &lt;code&gt;Encoding::InvalidByteSequenceError&lt;/code&gt; &lt;/a&gt; 예외를 발생시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a9e96f37c4091e66b1bf96976e87d58fe957d1d0" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;fd&lt;/code&gt; will be kept open after this &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; instance gets finalized.</source>
          <target state="translated">값이 &lt;code&gt;false&lt;/code&gt; 인 경우이 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 인스턴스가 완료된 후에 &lt;code&gt;fd&lt;/code&gt; 는 열린 상태로 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8179e975506ff4bd4ed485288d6e4d58c8a37e6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt; no conversion occurs.</source>
          <target state="translated">값이 &lt;code&gt;nil&lt;/code&gt; 이면 변환이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6152d3923ee2af345ddabe3c564b15ac762ae3f7" translate="yes" xml:space="preserve">
          <source>If the value is not set, the yield returns nil.</source>
          <target state="translated">값을 설정하지 않으면 수율은 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="438d302d8e9cd232b7b608f44a9e12a7381715fe" translate="yes" xml:space="preserve">
          <source>If the value is positive, a value of positive zero is returned.</source>
          <target state="translated">값이 양수이면 양수 0이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="d8448379c64d1cbbdd69b8a0b6f62931d457d966" translate="yes" xml:space="preserve">
          <source>If the value is truth value, same as &amp;ldquo;b&amp;rdquo; in argument &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">값이 진리 값인 경우 인수 &lt;code&gt;mode&lt;/code&gt; &quot;b&quot;와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c229715de11c9d2f63dd617e46fd26cd0ae5fbc3" translate="yes" xml:space="preserve">
          <source>If the value is truth value, same as &amp;ldquo;t&amp;rdquo; in argument &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">값이 진리 값인 경우 인수 &lt;code&gt;mode&lt;/code&gt; &quot;t&quot;와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c5efbdd5ac43be689a27b11ca5ec2111b6e76894" translate="yes" xml:space="preserve">
          <source>If the value which is too small to be represented is negative, a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; value of negative zero is returned.</source>
          <target state="translated">표현하기에 너무 작은 값이 음수이면 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 값이 음수 인 0이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c2c061eea4918b26782f788198473dc56718b2d2" translate="yes" xml:space="preserve">
          <source>If the write buffer is not empty, it is flushed at first.</source>
          <target state="translated">쓰기 버퍼가 비어 있지 않으면 처음에 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="5ea57e8ee7007905252405e59d6cd75c5cd89fd9" translate="yes" xml:space="preserve">
          <source>If there are no messages left in the incoming queue, the method will block until new messages arrive.</source>
          <target state="translated">들어오는 큐에 남아있는 메시지가 없으면 새 메시지가 도착할 때까지 메서드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="c02ffccd316a1ffea30c77df7cb0210418734a21" translate="yes" xml:space="preserve">
          <source>If there are no named captures, an empty hash is returned.</source>
          <target state="translated">명명 된 캡처가 없으면 빈 해시가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c6a3441b99b235cd78577e1c9bb7f98ad20048fe" translate="yes" xml:space="preserve">
          <source>If there are too few rows, returns all from &lt;code&gt;range.first&lt;/code&gt; to the end:</source>
          <target state="translated">행이 너무 적 으면 &lt;code&gt;range.first&lt;/code&gt; 에서 끝까지 모두 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="96115b60e572328701f8171eafaa6aacdb3c0615" translate="yes" xml:space="preserve">
          <source>If there are waiting enqueuing threads, they are interrupted by raising ClosedQueueError('queue closed').</source>
          <target state="translated">대기열에 대기중인 스레드가 있으면 ClosedQueueError ( 'queue closed')를 발생시켜 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="5a502e020b57d2ab480dd6fa6afd78825457d989" translate="yes" xml:space="preserve">
          <source>If there is a '+' at the start of s, positive values are returned with a leading '+'.</source>
          <target state="translated">s의 시작 부분에 '+'가 있으면 양수 값이 선행 '+'와 함께 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="13249b6de11a2667f95fb151bcf25ec6dccf54d7" translate="yes" xml:space="preserve">
          <source>If there is a cycle, &lt;code&gt;TSort::Cyclic&lt;/code&gt; is raised.</source>
          <target state="translated">사이클이 있으면 &lt;code&gt;TSort::Cyclic&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c1fea717728a356e57d673cc56e92931ba0a1cb9" translate="yes" xml:space="preserve">
          <source>If there is a mismatch between the struct in the currently running ruby and the member count in the marshaled struct an exception should be raised.</source>
          <target state="translated">현재 실행중인 루비의 구조체와 마샬링 된 구조체의 멤버 수가 일치하지 않으면 예외가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb8e789275fa9d4d1a76b9c46926e62b4b41e950" translate="yes" xml:space="preserve">
          <source>If there is an error and the request is idempotent according to RFC 2616 it will be retried automatically.</source>
          <target state="translated">RFC 2616에 따라 오류가 있고 요청이 dem 등원이면 자동으로 재 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="f06373b1a2a5c073ce89b1387c04e97a8a950934" translate="yes" xml:space="preserve">
          <source>If there is an error in preparing the &lt;code&gt;ffi_cif&lt;/code&gt; or &lt;code&gt;ffi_prep_closure&lt;/code&gt;, then a &lt;a href=&quot;../../runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;code&gt;ffi_cif&lt;/code&gt; 또는 &lt;code&gt;ffi_prep_closure&lt;/code&gt; 를 준비하는 동안 오류가 발생 하면 &lt;a href=&quot;../../runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f7f4777ac9144172cab5f4ccaf3e576bb6f42ea5" translate="yes" xml:space="preserve">
          <source>If there is an error in preparing the ffi_cif or ffi_prep_closure, then a &lt;a href=&quot;../runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">ffi_cif 또는 ffi_prep_closure를 준비하는 동안 오류가 발생하면 &lt;a href=&quot;../runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="60a75542ddcec8f1819115d9b29d6911c9cdb9de" translate="yes" xml:space="preserve">
          <source>If there is an error while sending to the system logger, write directly to the console instead.</source>
          <target state="translated">시스템 로거로 전송하는 동안 오류가 발생하면 대신 콘솔에 직접 쓰십시오.</target>
        </trans-unit>
        <trans-unit id="9f0cad7114f5d061b68cd47afb80b59a160b6f7f" translate="yes" xml:space="preserve">
          <source>If there is buffered data, it is flushed first. This may block.</source>
          <target state="translated">버퍼링 된 데이터가 있으면 먼저 플러시됩니다. 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f9915f47972b10d009283e45ad7a60900e15ada" translate="yes" xml:space="preserve">
          <source>If there is more than one argument or block argument, use an &lt;code&gt;RDoc&lt;/code&gt; definition list:</source>
          <target state="translated">둘 이상의 인수 또는 블록 인수가있는 경우 &lt;code&gt;RDoc&lt;/code&gt; 정의 목록을 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="5d26f979b19ea512fa2225cfe8e1f3de87401ca0" translate="yes" xml:space="preserve">
          <source>If there is no current server, this returns the default configuration. See &lt;a href=&quot;drb#method-i-current_server&quot;&gt;&lt;code&gt;current_server&lt;/code&gt;&lt;/a&gt; and DRbServer::make_config.</source>
          <target state="translated">현재 서버가 없으면 기본 구성을 반환합니다. &lt;a href=&quot;drb#method-i-current_server&quot;&gt; &lt;code&gt;current_server&lt;/code&gt; &lt;/a&gt; 및 DRbServer :: make_config를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41ae76e70a1ffa3d887c92fc288cafaa32f6ded3" translate="yes" xml:space="preserve">
          <source>If there is no key with the same value, &lt;a href=&quot;hash#method-i-invert&quot;&gt;&lt;code&gt;Hash#invert&lt;/code&gt;&lt;/a&gt; is involutive.</source>
          <target state="translated">동일한 값을 가진 키가 없으면 &lt;a href=&quot;hash#method-i-invert&quot;&gt; &lt;code&gt;Hash#invert&lt;/code&gt; &lt;/a&gt; 는 중요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="80c7e96a8d6aeea06f388c3f443a05675970148d" translate="yes" xml:space="preserve">
          <source>If there is no primary server then &lt;code&gt;server&lt;/code&gt; becomes the primary server.</source>
          <target state="translated">기본 서버가 없으면 &lt;code&gt;server&lt;/code&gt; 가 기본 서버가됩니다.</target>
        </trans-unit>
        <trans-unit id="033915487b57659cd4a070d17dc4d96d9bf3e032" translate="yes" xml:space="preserve">
          <source>If there is no space left in the queue, waits until space becomes available, unless &lt;code&gt;non_block&lt;/code&gt; is true. If &lt;code&gt;non_block&lt;/code&gt; is true, the thread isn't suspended, and &lt;code&gt;ThreadError&lt;/code&gt; is raised.</source>
          <target state="translated">대기열에 남은 공간이 없으면 &lt;code&gt;non_block&lt;/code&gt; 이 true가 아닌 한 공간이 사용 가능해질 때까지 기다립니다 . 경우 &lt;code&gt;non_block&lt;/code&gt; 는 사실, 스레드가 일시 중단되지 않으며, &lt;code&gt;ThreadError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5031dea1ce7e7620c9743820877d7079528f8d2e" translate="yes" xml:space="preserve">
          <source>If there is no thread to wait, raises &lt;code&gt;ErrNoWaitingThread&lt;/code&gt;. If &lt;code&gt;nonblock&lt;/code&gt; is true, and there is no terminated thread, raises &lt;code&gt;ErrNoFinishedThread&lt;/code&gt;.</source>
          <target state="translated">대기 할 스레드가 없으면 &lt;code&gt;ErrNoWaitingThread&lt;/code&gt; 를 발생시킵니다 . 경우 &lt;code&gt;nonblock&lt;/code&gt; 사실, 아무 종료 스레드가없는, 제기 &lt;code&gt;ErrNoFinishedThread&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="c3d2e4dcc68d537c7c6d0f08c311e88c112ccc4c" translate="yes" xml:space="preserve">
          <source>If there is no value for &lt;code&gt;key&lt;/code&gt; and no block is given, returns &lt;code&gt;ifnone&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 값이 없고 블록이 없으면 &lt;code&gt;ifnone&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="590b2d6341a75f0ba8f2455ce06972a5f2b87147" translate="yes" xml:space="preserve">
          <source>If there is some change in the &lt;a href=&quot;../bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; class that is incompatible to its previous behavior or if otherwise desired, we can reimplement(or implement) the method to preserve compatibility.</source>
          <target state="translated">&lt;a href=&quot;../bundler&quot;&gt; &lt;code&gt;Bundler&lt;/code&gt; &lt;/a&gt; 클래스에 이전 동작과 호환되지 않는 변경 사항이 있거나 원하는 경우 메소드를 다시 구현 (또는 구현)하여 호환성을 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="486517787ee0385acfc675a3a784bf116587e661" translate="yes" xml:space="preserve">
          <source>If this form is used, this string is the &lt;code&gt;Content-Type&lt;/code&gt;</source>
          <target state="translated">이 양식을 사용하는 경우이 문자열은 &lt;code&gt;Content-Type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45c414e14d1e22b53d7ea7fedb6d2bd7bd39b03e" translate="yes" xml:space="preserve">
          <source>If this is the main thread, or the last thread, exit the process.</source>
          <target state="translated">이것이 메인 스레드이거나 마지막 스레드 인 경우 프로세스를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="8955932e15ca4ba0788cba438b13796fd55c1615" translate="yes" xml:space="preserve">
          <source>If this is the main thread, or the last thread, exits the process.</source>
          <target state="translated">이것이 메인 스레드이거나 마지막 스레드 인 경우 프로세스를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="07bd07a67361be59be6f82586c1903e0944db428" translate="yes" xml:space="preserve">
          <source>If this method is called with block, resumes to the old working directory after the block execution finished.</source>
          <target state="translated">이 메소드를 블록과 함께 호출하면 블록 실행이 완료된 후 이전 작업 디렉토리로 재개됩니다.</target>
        </trans-unit>
        <trans-unit id="e8fe87a4b868454f9b86b85a15e31ee8d280624e" translate="yes" xml:space="preserve">
          <source>If this method is called with block, resumes to the previous working directory after the block execution has finished.</source>
          <target state="translated">이 메서드를 block과 함께 호출하면 블록 실행이 완료된 후 이전 작업 디렉터리로 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="18a674765926d4e6ab4bda06a95f948c67f25d9a" translate="yes" xml:space="preserve">
          <source>If this object is passed as an argument to a method invoked over drb, then the wrapped object is passed instead.</source>
          <target state="translated">이 오브젝트가 drb를 통해 호출 된 메소드에 인수로 전달되면 랩핑 된 오브젝트가 대신 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6d173f6e2da595aa836e1baed64c03114a1d225c" translate="yes" xml:space="preserve">
          <source>If this thread is aborting</source>
          <target state="translated">이 스레드가 중단되면</target>
        </trans-unit>
        <trans-unit id="7efc0e7984db3aacd13a8ee139602b0806fd0a48" translate="yes" xml:space="preserve">
          <source>If this thread is already marked to be killed, &lt;a href=&quot;thread#method-c-exit&quot;&gt;&lt;code&gt;::exit&lt;/code&gt;&lt;/a&gt; returns the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스레드가 이미 &lt;a href=&quot;thread#method-c-exit&quot;&gt; &lt;code&gt;::exit&lt;/code&gt; &lt;/a&gt; 것으로 표시되면 :: exit 는 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f7b13e49c9c7d2c684800f29f419aefd45860823" translate="yes" xml:space="preserve">
          <source>If this thread is already marked to be killed, &lt;a href=&quot;thread#method-i-exit&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; returns the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스레드가 이미 &lt;a href=&quot;thread#method-i-exit&quot;&gt; &lt;code&gt;exit&lt;/code&gt; &lt;/a&gt; 것으로 표시되면 exit 는 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f071132117c9f22849ac1222f47d924d2aad7fbc" translate="yes" xml:space="preserve">
          <source>If this value is specified or the environment variable LD_BIND_NOW is set to a nonempty string, all undefined symbols in the library are resolved before &lt;a href=&quot;../fiddle#method-c-dlopen&quot;&gt;&lt;code&gt;Fiddle.dlopen&lt;/code&gt;&lt;/a&gt; returns. If this cannot be done an error is returned.</source>
          <target state="translated">이 값을 지정하거나 환경 변수 LD_BIND_NOW가 비어 있지 않은 문자열로 설정된 경우 라이브러리에서 정의되지 않은 모든 기호는 &lt;a href=&quot;../fiddle#method-c-dlopen&quot;&gt; &lt;code&gt;Fiddle.dlopen&lt;/code&gt; 이&lt;/a&gt; 반환 되기 전에 확인 됩니다. 이를 수행 할 수 없으면 오류가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="8ffd9d3d7be1ab883f79eee8d0b9e4c86f2e3c2b" translate="yes" xml:space="preserve">
          <source>If those rules are broken &lt;a href=&quot;fibererror&quot;&gt;&lt;code&gt;FiberError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">이러한 규칙이 위반 &lt;a href=&quot;fibererror&quot;&gt; &lt;code&gt;FiberError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9b2558d42e44816359a1851823a5cf26c33389a6" translate="yes" xml:space="preserve">
          <source>If too many positional arguments are given, an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">위치 인수가 너무 많으면 &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3664ff31dbf60d1f9bb278528f8111fdc64f31a3" translate="yes" xml:space="preserve">
          <source>If true, TLS is used for data connections. Default: &lt;code&gt;true&lt;/code&gt; when &lt;code&gt;options[:ssl]&lt;/code&gt; is true.</source>
          <target state="translated">true이면 데이터 연결에 TLS가 사용됩니다. 기본 : &lt;code&gt;true&lt;/code&gt; 때 &lt;code&gt;options[:ssl]&lt;/code&gt; 사실이다.</target>
        </trans-unit>
        <trans-unit id="6c782699b0bab17dfd43db47b3151c4c418e46d9" translate="yes" xml:space="preserve">
          <source>If true, TLS is used for data connections. Default: &lt;code&gt;true&lt;/code&gt; when options is true.</source>
          <target state="translated">true 인 경우 TLS는 데이터 연결에 사용됩니다. 기본 : &lt;code&gt;true&lt;/code&gt; 옵션에 해당하는 경우.</target>
        </trans-unit>
        <trans-unit id="6bb5862ee4536714b3088e1590223b6ee00991fa" translate="yes" xml:space="preserve">
          <source>If two arguments are specified, they must be encoding objects or encoding names. Again, the first specifies the external encoding; the second specifies the internal encoding.</source>
          <target state="translated">두 개의 인수가 지정되면, 인코딩 오브젝트 또는 인코딩 이름이어야합니다. 다시, 첫 번째는 외부 인코딩을 지정합니다. 두 번째는 내부 인코딩을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f9043cd518d0f78592a647b409c8f41ce4b9b9a7" translate="yes" xml:space="preserve">
          <source>If two encoding names separated by a colon are given, e.g. &amp;ldquo;ascii:utf-8&amp;rdquo;, the read string is converted from the first encoding (external encoding) to the second encoding (internal encoding), then tagged with the second encoding.</source>
          <target state="translated">콜론으로 구분 된 두 개의 인코딩 이름 (예 : &quot;ascii : utf-8&quot;)이 제공되면 읽기 문자열이 첫 번째 인코딩 (외부 인코딩)에서 두 번째 인코딩 (내부 인코딩)으로 변환 된 다음 두 번째 인코딩으로 태그가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="2d8285c26517470185b9ce321f9bb0a5eb169b84" translate="yes" xml:space="preserve">
          <source>If two or more transfer is done by HTTP redirection, the procedure is called only one for a last transfer.</source>
          <target state="translated">HTTP 리디렉션으로 둘 이상의 전송이 수행 된 경우 마지막 전송에 대해 하나의 절차 만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1ef863f447a68e69e72f9970a226533d6e2e264f" translate="yes" xml:space="preserve">
          <source>If two or more transfers are performed by HTTP redirection, the procedure is called only once for the last transfer.</source>
          <target state="translated">HTTP 리디렉션으로 두 번 이상의 전송이 수행되면 마지막 전송에 대해 한 번만 프로 시저가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f0a82246639b0916bb164397f84cc09c5a59fa32" translate="yes" xml:space="preserve">
          <source>If validation fails, several kinds of exceptions can be raised:</source>
          <target state="translated">유효성 검사가 실패하면 여러 종류의 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d42384d519da11cc264a230a2e9344bca9b71477" translate="yes" xml:space="preserve">
          <source>If warnings have been disabled (for example with the &lt;code&gt;-W0&lt;/code&gt; flag), does nothing. Otherwise, converts each of the messages to strings, appends a newline character to the string if the string does not end in a newline, and calls &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;Warning.warn&lt;/code&gt;&lt;/a&gt; with the string.</source>
          <target state="translated">경고가 비활성화 된 경우 (예 : &lt;code&gt;-W0&lt;/code&gt; 플래그 사용) 아무 작업도 수행하지 않습니다. 그렇지 않으면 각 메시지를 문자열로 변환하고, 문자열이 줄 바꿈으로 끝나지 않으면 줄 바꿈 문자를 문자열에 추가하고 문자열 과 함께 &lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;Warning.warn&lt;/code&gt; &lt;/a&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="a30bef0a29edc1fa071755d7b54a672630f5337d" translate="yes" xml:space="preserve">
          <source>If warnings have been disabled (for example with the &lt;code&gt;-W0&lt;/code&gt; flag), does nothing. Otherwise, converts each of the messages to strings, appends a newline character to the string if the string does not end in a newline, and calls &lt;code&gt;Warning.warn&lt;/code&gt; with the string.</source>
          <target state="translated">경고가 비활성화 된 경우 (예 : &lt;code&gt;-W0&lt;/code&gt; 플래그 사용) 아무 것도 수행하지 않습니다. 그렇지 않으면 각 메시지를 문자열로 변환하고 문자열이 줄 바꿈으로 끝나지 않으면 문자열에 줄 바꿈 문자를 추가하고 문자열 과 함께 &lt;code&gt;Warning.warn&lt;/code&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="462d3d7009de03d4f571d99f3b7928df6bca3d32" translate="yes" xml:space="preserve">
          <source>If we don't call &lt;code&gt;thr.join&lt;/code&gt; before the main thread terminates, then all other threads including &lt;code&gt;thr&lt;/code&gt; will be killed.</source>
          <target state="translated">주 스레드가 종료되기 전에 &lt;code&gt;thr.join&lt;/code&gt; 을 호출하지 않으면 &lt;code&gt;thr&lt;/code&gt; 를 포함한 다른 모든 스레드가 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="79063fffe07b7a8cb49b88b0b23080cf6ccf7266" translate="yes" xml:space="preserve">
          <source>If we don't gsub the \ character, &lt;a href=&quot;../../dir#method-c-glob&quot;&gt;&lt;code&gt;Dir.glob&lt;/code&gt;&lt;/a&gt; will fail.</source>
          <target state="translated">\ 문자를 &lt;a href=&quot;../../dir#method-c-glob&quot;&gt; &lt;code&gt;Dir.glob&lt;/code&gt; &lt;/a&gt; 않으면 Dir.glob 는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="79260ebf8837262004a264750620b3d8da44891e" translate="yes" xml:space="preserve">
          <source>If we receive Foo::Bar::Baz it returns &amp;ldquo;foo:bar:baz&amp;rdquo;</source>
          <target state="translated">Foo :: Bar :: Baz를 수신하면 &quot;foo : bar : baz&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f9a6ece630b61153fca5d9a6992cd7fadb46a459" translate="yes" xml:space="preserve">
          <source>If x is within the range, this method returns the value x. Otherwise, it returns nil.</source>
          <target state="translated">x가 범위 내에 있으면이 메서드는 값 x를 반환합니다. 그렇지 않으면 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9973f15ddf79a5a3c766c2170fb56539c8e4a5ce" translate="yes" xml:space="preserve">
          <source>If you absolutely need to use passwords as encryption keys, you should use Password-Based Key Derivation Function 2 (PBKDF2) by generating the key with the help of the functionality provided by &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac_sha1&quot;&gt;&lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac_sha1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac&quot;&gt;&lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">암호를 암호화 키로 사용해야하는 경우 &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac_sha1&quot;&gt; &lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac_sha1&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac&quot;&gt; &lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac&lt;/code&gt; &lt;/a&gt; 제공하는 기능을 사용하여 키를 생성하여 PBKDF2 (Password-Based Key Derivation Function 2)를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="983ec37f20aea3f41ed61dc930280bc8fe3223bf" translate="yes" xml:space="preserve">
          <source>If you are connecting to a custom proxy, &lt;code&gt;p_addr&lt;/code&gt; specifies the DNS name or IP address of the proxy host, &lt;code&gt;p_port&lt;/code&gt; the port to use to access the proxy, &lt;code&gt;p_user&lt;/code&gt; and &lt;code&gt;p_pass&lt;/code&gt; the username and password if authorization is required to use the proxy, and p_no_proxy hosts which do not use the proxy.</source>
          <target state="translated">사용자 정의 프록시에 연결하는 경우, &lt;code&gt;p_addr&lt;/code&gt; 의 지정 DNS 이름 또는 프록시 호스트의 IP 주소, &lt;code&gt;p_port&lt;/code&gt; 액세스 프록시 사용에 포트를 &lt;code&gt;p_user&lt;/code&gt; 및 &lt;code&gt;p_pass&lt;/code&gt; 인증 프록시를 사용하는 데 필요한 경우 사용자 이름과 암호를하고 p_no_proxy 프록시를 사용하지 않는 호스트.</target>
        </trans-unit>
        <trans-unit id="6bc85f65bdc12a5aa20e192d60b4b41f39447d22" translate="yes" xml:space="preserve">
          <source>If you are done using the &lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; instance you may shut down all the connections in the current thread with &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt;. This is not recommended for normal use, it should only be used when it will be several minutes before you make another HTTP request.</source>
          <target state="translated">당신이 사용하여 수행하는 경우 &lt;a href=&quot;persistent&quot;&gt; &lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt; &lt;/a&gt; 인스턴스는 당신과 함께 현재의 thread의 모든 연결이 종료 될 수 있습니다 &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; . 이것은 일반적인 사용에는 권장되지 않으며 다른 HTTP 요청을하기 몇 분이 지난 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="721284903d8c0e6d068a583d97de6a96912c562f" translate="yes" xml:space="preserve">
          <source>If you are inside a method, you do not need to use &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; unless you wish to limit the scope of rescued exceptions:</source>
          <target state="translated">메소드 내부에있는 경우, 구조 된 예외의 범위를 제한하지 않으면 &lt;code&gt;begin&lt;/code&gt; 또는 &lt;code&gt;end&lt;/code&gt; 를 사용할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e3569807102834e8427d5b322f46e517eda9ac81" translate="yes" xml:space="preserve">
          <source>If you are looking for a stable API or an API working under multiple Ruby implementations, consider using the &lt;em&gt;parser&lt;/em&gt; gem or &lt;a href=&quot;../ripper&quot;&gt;&lt;code&gt;Ripper&lt;/code&gt;&lt;/a&gt;. If you would like to make &lt;a href=&quot;abstractsyntaxtree&quot;&gt;&lt;code&gt;RubyVM::AbstractSyntaxTree&lt;/code&gt;&lt;/a&gt; stable, please join the discussion at &lt;a href=&quot;https://bugs.ruby-lang.org/issues/14844&quot;&gt;bugs.ruby-lang.org/issues/14844&lt;/a&gt;.</source>
          <target state="translated">안정적인 API 또는 여러 Ruby 구현에서 작동하는 API를 찾고 있다면 &lt;em&gt;parser&lt;/em&gt; gem 또는 &lt;a href=&quot;../ripper&quot;&gt; &lt;code&gt;Ripper&lt;/code&gt; &lt;/a&gt; 사용을 고려하세요 . 당신이 만드는하려는 경우 &lt;a href=&quot;abstractsyntaxtree&quot;&gt; &lt;code&gt;RubyVM::AbstractSyntaxTree&lt;/code&gt; &lt;/a&gt; 안정에서 토론에 참여하시기 바랍니다 &lt;a href=&quot;https://bugs.ruby-lang.org/issues/14844&quot;&gt;bugs.ruby-lang.org/issues/14844&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c50de3a2b25bc21a8f62aec274a2a84907a5f28e" translate="yes" xml:space="preserve">
          <source>If you are only going to call the block and will not otherwise manipulate it or send it to another method using &lt;code&gt;yield&lt;/code&gt; without an explicit block parameter is preferred. This method is equivalent to the first method in this section:</source>
          <target state="translated">블록을 호출하려고 하고 명시 적으로 블록 매개 변수없이 &lt;code&gt;yield&lt;/code&gt; 를 사용하여 다른 방법으로 보내거나 조작하지 않는 경우 선호됩니다. 이 방법은이 섹션의 첫 번째 방법과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="2aa1c03d4b6dc82b175dc90aaa5aee01a1e87ce8" translate="yes" xml:space="preserve">
          <source>If you are only performing a few GET requests you should try &lt;a href=&quot;../openuri&quot;&gt;&lt;code&gt;OpenURI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">몇 가지 GET 요청 만 수행하는 경우 &lt;a href=&quot;../openuri&quot;&gt; &lt;code&gt;OpenURI&lt;/code&gt; &lt;/a&gt; 를 시도해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a0da2fa3cb9861301999487d5a715404d00e2de3" translate="yes" xml:space="preserve">
          <source>If you are using &amp;ldquo;(&amp;rdquo;, &amp;ldquo;[&amp;rdquo;, &amp;ldquo;{&amp;rdquo;, &amp;ldquo;&amp;lt;&amp;rdquo; you must close it with &amp;ldquo;)&amp;rdquo;, &amp;ldquo;]&amp;rdquo;, &amp;ldquo;}&amp;rdquo;, &amp;ldquo;&amp;gt;&amp;rdquo; respectively. You may use most other non-alphanumeric characters for percent string delimiters such as &amp;ldquo;%&amp;rdquo;, &amp;ldquo;|&amp;rdquo;, &amp;ldquo;^&amp;rdquo;, etc.</source>
          <target state="translated">&quot;(&quot;, &quot;[&quot;, &quot;{&quot;, &quot;&amp;lt;&quot;를 사용하는 경우 각각 &quot;)&quot;, &quot;]&quot;, &quot;}&quot;, &quot;&amp;gt;&quot;로 닫아야합니다. &amp;ldquo;%&amp;rdquo;,&amp;ldquo;|&amp;rdquo;,&amp;ldquo;^&amp;rdquo;등과 같은 퍼센트 문자열 분리 문자에는 대부분의 다른 영숫자가 아닌 문자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="234f378471fdaaad2776d11975f499c8abc85b9b" translate="yes" xml:space="preserve">
          <source>If you are using multiple threads, call &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; in each thread when the thread is done making requests. If you don't call shutdown, that's OK. Ruby will automatically garbage collect and shutdown your HTTP connections when the thread terminates.</source>
          <target state="translated">여러 스레드를 사용하는 경우 스레드가 요청을 완료하면 각 스레드에서 &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오. shutdown을 호출하지 않으면 괜찮습니다. 루비는 스레드가 종료 될 때 HTTP 연결을 자동으로 가비지 수집하고 종료합니다.</target>
        </trans-unit>
        <trans-unit id="fbc02f66cc457705a37a13e61644cadcf213dbb7" translate="yes" xml:space="preserve">
          <source>If you are writing a large block of text you may use a &amp;ldquo;here document&amp;rdquo; or &amp;ldquo;heredoc&amp;rdquo;:</source>
          <target state="translated">큰 텍스트 블록을 작성하는 경우 &quot;here document&quot;또는 &quot;heredoc&quot;을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d6d9e0f58ba0e8b515cf3c5f5e4b0bd7c8b98f0" translate="yes" xml:space="preserve">
          <source>If you can reproduce the example with the master branch, try to figure out what is causing the issue. If you feel comfortable, try working on a patch for the issue, update the issue, and attach the patch. Try to figure out which committer should be assigned to the issue, and set them as the assignee, and set the status to Assigned.</source>
          <target state="translated">마스터 브랜치로 예제를 재현 할 수 있다면 문제의 원인을 파악하십시오. 편안하다면 문제에 대한 패치 작업을 시도하고 문제를 업데이트 한 다음 패치를 첨부하십시오. 어떤 커미터를 이슈에 할당해야하는지 알아 내고이를 담당자로 설정하고 상태를 할당 됨으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="eb2dbdd139892cedce3608b5c552b38272127bee" translate="yes" xml:space="preserve">
          <source>If you cannot reproduce the example with the master branch, but can reproduce the issue on the latest version for the branch, then it is likely the bug has already been fixed, but it has not been backported yet. Try to determine which commit fixed it, and update the issue noting that the issue has been fixed but not yet backported. If the Ruby version is in the security maintenance phase or no longer supported, change the status to Closed. This change can be made without adding a note to avoid spamming the mailing list.</source>
          <target state="translated">마스터 브랜치로 예제를 재현 할 수 없지만 브랜치의 최신 버전에서 문제를 재현 할 수있는 경우 버그가 이미 수정되었지만 아직 백 포트되지 않은 것입니다. 어떤 커밋을 수정했는지 확인하고 문제가 수정되었지만 아직 백 포트되지 않았 음을 알리는 문제를 업데이트합니다. Ruby 버전이 보안 유지 관리 단계에 있거나 더 이상 지원되지 않는 경우 상태를 Closed로 변경합니다. 메일 링리스트 스팸을 방지하기 위해 메모를 추가하지 않고도 이러한 변경이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="f203f75affc6e1c14914fddaea7ca058fdeb87d3" translate="yes" xml:space="preserve">
          <source>If you change the namespace:</source>
          <target state="translated">네임 스페이스를 변경 한 경우 :</target>
        </trans-unit>
        <trans-unit id="bcc19ba0fbdec4feb8655b5a256355978b8407e8" translate="yes" xml:space="preserve">
          <source>If you do not explicitly specify an &lt;em&gt;initial&lt;/em&gt; value for &lt;em&gt;memo&lt;/em&gt;, then the first element of collection is used as the initial value of &lt;em&gt;memo&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;메모&lt;/em&gt; 의 &lt;em&gt;초기&lt;/em&gt; 값을 명시 적으로 지정하지 않으면 컬렉션의 첫 번째 요소가 &lt;em&gt;메모&lt;/em&gt; 의 초기 값으로 사용됩니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f825af0e2faf1f8cb78d89138c0c03ddc0697d8e" translate="yes" xml:space="preserve">
          <source>If you do not set an mtime, the default value will be the time when compression started. Setting a value of 0 indicates no time stamp is available.</source>
          <target state="translated">mtime을 설정하지 않으면 기본값은 압축이 시작된 시간입니다. 값을 0으로 설정하면 사용 가능한 타임 스탬프가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d62f46f698f68ce848495a870a5d322482c54787" translate="yes" xml:space="preserve">
          <source>If you do not supply a superclass your new class will inherit from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. You may inherit from a different class using &lt;code&gt;&amp;lt;&lt;/code&gt; followed by a class name:</source>
          <target state="translated">수퍼 클래스를 제공하지 않으면 새 클래스가 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 에서 상속됩니다 . &lt;code&gt;&amp;lt;&lt;/code&gt; 다음에 클래스 이름을 사용하여 다른 클래스에서 상속 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9fb8e1b7e927348914c0ef6e73b5123b04290ce" translate="yes" xml:space="preserve">
          <source>If you don't explicitly unlink the temporary file, the removal will be delayed until the object is finalized.</source>
          <target state="translated">임시 파일을 명시 적으로 연결 해제하지 않으면 오브젝트가 완료 될 때까지 제거가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="3901935a26b03be4bf7c65b2698a2d0b84caf1b4" translate="yes" xml:space="preserve">
          <source>If you don't specify the type of events you want to listen for, &lt;a href=&quot;tracepoint&quot;&gt;&lt;code&gt;TracePoint&lt;/code&gt;&lt;/a&gt; will include all available events.</source>
          <target state="translated">수신하려는 이벤트 유형을 지정하지 않으면 &lt;a href=&quot;tracepoint&quot;&gt; &lt;code&gt;TracePoint&lt;/code&gt; 에&lt;/a&gt; 사용 가능한 모든 이벤트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1a874d14225e1d51a9f330410bed49696cd0fa7d" translate="yes" xml:space="preserve">
          <source>If you don't use &lt;code&gt;rescue&lt;/code&gt; or &lt;code&gt;ensure&lt;/code&gt;, Ruby optimizes away any exception handling overhead.</source>
          <target state="translated">&lt;code&gt;rescue&lt;/code&gt; 또는 &lt;code&gt;ensure&lt;/code&gt; 를 사용하지 않으면 Ruby는 예외 처리 오버 헤드를 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="a31b4c32e950300c179aaafeaecb9d6a94bad1ea" translate="yes" xml:space="preserve">
          <source>If you don't want &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; and want directories, consider &lt;a href=&quot;pathname#method-i-children&quot;&gt;&lt;code&gt;Pathname#children&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">당신이 원하지 않는 경우 &lt;code&gt;.&lt;/code&gt; 와 &lt;code&gt;..&lt;/code&gt; 하고 싶은 디렉토리는 고려 &lt;a href=&quot;pathname#method-i-children&quot;&gt; &lt;code&gt;Pathname#children&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec7353b8e044f55a40c5b8e293e3de4d4ab937e0" translate="yes" xml:space="preserve">
          <source>If you find this method returns true, then you may finish &lt;code&gt;:never&lt;/code&gt; blocks.</source>
          <target state="translated">이 메소드가 true를 리턴하면 &lt;code&gt;:never&lt;/code&gt; 블록을 완료 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="41d3b4387ee7400fbbf452396d6aa6bed14fbc6e" translate="yes" xml:space="preserve">
          <source>If you give multiple description strings, each string will be printed line by line.</source>
          <target state="translated">여러 설명 문자열을 제공하면 각 문자열이 한 줄씩 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="6918db17abad7a05b806b5876dc256ecd951923b" translate="yes" xml:space="preserve">
          <source>If you have more values on the right hand side of the assignment than variables on the left hand side, the extra values are ignored:</source>
          <target state="translated">할당의 오른쪽에 왼쪽의 변수보다 더 많은 값이 있으면 추가 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b50492ef2bf826237334acec5144ea93a249d8b0" translate="yes" xml:space="preserve">
          <source>If you need set-like behavior, see the library class &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">세트와 유사한 동작이 필요한 경우 라이브러리 클래스 &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; 를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9b6731c0dff4b4e6279a2e4cf6bb16bf40a325d" translate="yes" xml:space="preserve">
          <source>If you need to communicate between threads, please consider to use another way such as &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스레드간에 통신해야하는 경우 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 와 같은 다른 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4ba7d09c1c65a38881b55c0323ce067c1070a43" translate="yes" xml:space="preserve">
          <source>If you need to deserialize untrusted data, use &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; or another serialization format that is only able to load simple, 'primitive' types such as &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, etc. Never allow user input to specify arbitrary types to deserialize into.</source>
          <target state="translated">신뢰할 수없는 데이터를 역 직렬화해야하는 경우 &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 등과 같은 단순한 '기본'유형 만로드 할 수있는 다른 직렬화 형식을 사용하십시오. 사용자 입력이 역 직렬화 할 임의 유형을 지정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="ce1184163d3b0bd8e504cd3e9ae8ef54b46695ad" translate="yes" xml:space="preserve">
          <source>If you need to deserialize untrusted data, you should use &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; as it is only capable of returning 'primitive' types such as strings, arrays, hashes, numbers and nil. If you need to deserialize other classes, you should handle this manually. Never deserialize to a user specified class.</source>
          <target state="translated">신뢰할 수없는 데이터를 역 직렬화해야하는 경우 &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; , 문자열, 배열, 해시, 숫자 및 nil과 같은 '기본'유형 만 리턴 할 수 있으므로 JSON 을 사용해야합니다 . 다른 클래스를 역 직렬화해야하는 경우이를 수동으로 처리해야합니다. 사용자 지정 클래스로 직렬화 해제하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b7d023ea716b76e65c2333879d6355414ac48f9e" translate="yes" xml:space="preserve">
          <source>If you need to ensure &lt;code&gt;obj&lt;/code&gt; is between &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;, use &lt;a href=&quot;range#method-i-cover-3F&quot;&gt;&lt;code&gt;cover?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">당신은 확인해야하는 경우 &lt;code&gt;obj&lt;/code&gt; 사이에 &lt;code&gt;begin&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 사용, &lt;a href=&quot;range#method-i-cover-3F&quot;&gt; &lt;code&gt;cover?&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd738cb83bc3f11bc253c3a4de20dba4bd75649d" translate="yes" xml:space="preserve">
          <source>If you need to execute untrusted code, you should use an operating system level sandboxing mechanism. On Linux, ptrace or LXC can be used to sandbox potentially malicious code. Other similar mechanisms exist on every major operating system.</source>
          <target state="translated">신뢰할 수없는 코드를 실행해야하는 경우 운영 체제 수준 샌드 박싱 메커니즘을 사용해야합니다. Linux에서는 ptrace 또는 LXC를 사용하여 잠재적으로 악성 코드를 샌드 박스 할 수 있습니다. 모든 주요 운영 체제에 다른 유사한 메커니즘이 있습니다.</target>
        </trans-unit>
        <trans-unit id="164bd81efc305b44e716caefc398f20f9af4466d" translate="yes" xml:space="preserve">
          <source>If you only need to use the block sometimes you can use &lt;a href=&quot;../proc#method-c-new&quot;&gt;&lt;code&gt;Proc.new&lt;/code&gt;&lt;/a&gt; to create a proc from the block that was passed to your method. See &lt;a href=&quot;../proc#method-c-new&quot;&gt;&lt;code&gt;Proc.new&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">때때로 블록 만 사용해야하는 경우 &lt;a href=&quot;../proc#method-c-new&quot;&gt; &lt;code&gt;Proc.new&lt;/code&gt; &lt;/a&gt; 를 사용하여 메소드에 전달 된 블록에서 proc을 작성할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;../proc#method-c-new&quot;&gt; &lt;code&gt;Proc.new&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="23c52f90bee228ab70aebabfedf721d1d60992d7" translate="yes" xml:space="preserve">
          <source>If you prefer more detailed declaration, check class_option.</source>
          <target state="translated">보다 자세한 선언을 원한다면 class_option을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="395512964cdcc428ca18a56ba97e0aa5acea060d" translate="yes" xml:space="preserve">
          <source>If you provide a block that takes one argument, it will be passed the field and is expected to return the converted value or the field itself. If your block takes two arguments, it will also be passed a &lt;a href=&quot;csv#FieldInfo&quot;&gt;&lt;code&gt;CSV::FieldInfo&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;, containing details about the field. Again, the block should return a converted field or the field itself.</source>
          <target state="translated">하나의 인수를 취하는 블록을 제공하면 필드가 전달되고 변환 된 값 또는 필드 자체를 반환 할 것으로 예상됩니다. 블록에 두 개의 인수가 있으면 필드에 대한 세부 정보가 포함 된 &lt;a href=&quot;csv#FieldInfo&quot;&gt; &lt;code&gt;CSV::FieldInfo&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 도 전달 됩니다. 다시, 블록은 변환 된 필드 또는 필드 자체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="2cb49e7f8b805fc9a505f8c40794762aea85a374" translate="yes" xml:space="preserve">
          <source>If you put a space between the method name and opening parenthesis, you do not need two sets of parentheses.</source>
          <target state="translated">메서드 이름과 여는 괄호 사이에 공백을 넣으면 두 세트의 괄호가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="763e07b06127131fb5098bb04ad86f93c82a1b75" translate="yes" xml:space="preserve">
          <source>If you run ruby with warnings enabled and have an indentation mis-match, you will receive a warning.</source>
          <target state="translated">경고가 활성화 된 상태에서 루비를 실행하고 들여 쓰기가 일치하지 않으면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="267172dd1a7e1f73447f6a8dd873a6f2fd57932d" translate="yes" xml:space="preserve">
          <source>If you run ruby with warnings enabled and have an indentation mismatch, you will receive a warning.</source>
          <target state="translated">경고가 활성화 된 상태에서 루비를 실행하고 들여 쓰기가 일치하지 않으면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c39a64a4a4b7d6c096caa92cfa7f018f0061c951" translate="yes" xml:space="preserve">
          <source>If you send three arguments:</source>
          <target state="translated">세 개의 인수를 보내면 :</target>
        </trans-unit>
        <trans-unit id="907aa267937b7a90af0963b50e5c5bc271a6d1ea" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;with_directory&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, then the returned pathnames will contain the filename only.</source>
          <target state="translated">&lt;code&gt;with_directory&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 반환 된 경로 이름에 파일 이름 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f77daa7039dc338fe079e7dc9694fa95eaf32107" translate="yes" xml:space="preserve">
          <source>If you specify a block, then for each element in &lt;em&gt;enum&lt;/em&gt; the block is passed an accumulator value (&lt;em&gt;memo&lt;/em&gt;) and the element. If you specify a symbol instead, then each element in the collection will be passed to the named method of &lt;em&gt;memo&lt;/em&gt;. In either case, the result becomes the new value for &lt;em&gt;memo&lt;/em&gt;. At the end of the iteration, the final value of &lt;em&gt;memo&lt;/em&gt; is the return value for the method.</source>
          <target state="translated">블록을 지정하면 &lt;em&gt;enum&lt;/em&gt; 의 각 요소에 대해 블록에 누산기 값 ( &lt;em&gt;memo&lt;/em&gt; )과 요소 가 전달 됩니다. 대신 기호를 지정하면 컬렉션의 각 요소가 명명 된 &lt;em&gt;memo&lt;/em&gt; 메서드에 전달됩니다 . 두 경우 모두 결과는 &lt;em&gt;memo&lt;/em&gt; 의 새 값이됩니다 . 반복이 끝날 때 &lt;em&gt;메모&lt;/em&gt; 의 최종 값은 메소드의 리턴 값입니다.</target>
        </trans-unit>
        <trans-unit id="c18be5a023945f8f63c4ce7429e08c766a6d8732" translate="yes" xml:space="preserve">
          <source>If you use IPv4 multicast you may need to set an address of the inbound interface which joins a multicast group.</source>
          <target state="translated">IPv4 멀티 캐스트를 사용하는 경우 멀티 캐스트 그룹에 참여하는 인바운드 인터페이스의 주소를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0d4511b8752a93fcb8a389e9fb068fb7cd85b93" translate="yes" xml:space="preserve">
          <source>If you use IPv6 multicast then &lt;code&gt;multicast_interface&lt;/code&gt; is used as the inbound interface. &lt;code&gt;multicast_interface&lt;/code&gt; is a network interface index. If &lt;code&gt;multicast_interface&lt;/code&gt; is omitted then 0 (default interface) is used.</source>
          <target state="translated">IPv6 멀티 캐스트를 사용하는 경우 &lt;code&gt;multicast_interface&lt;/code&gt; 가 인바운드 인터페이스로 사용됩니다. &lt;code&gt;multicast_interface&lt;/code&gt; 는 네트워크 인터페이스 인덱스입니다. 경우 &lt;code&gt;multicast_interface&lt;/code&gt; 가 다음 0 (기본 인터페이스)를 생략 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b7d1ee85fccb7b40209ad48a7d714d688f5ea5e9" translate="yes" xml:space="preserve">
          <source>If you use IPv6 multicast you may need to set both an address and the outbound interface index:</source>
          <target state="translated">IPv6 멀티 캐스트를 사용하는 경우 주소와 아웃 바운드 인터페이스 색인을 모두 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2969b61216fcb534a8b5c051277534ac82feb0e" translate="yes" xml:space="preserve">
          <source>If you use IPv6 multicast you may need to set both the local interface address and the inbound interface index:</source>
          <target state="translated">IPv6 멀티 캐스트를 사용하는 경우 로컬 인터페이스 주소와 인바운드 인터페이스 색인을 모두 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a14db8439ac4d4dd52dc8f7236860ffc9118e4d6" translate="yes" xml:space="preserve">
          <source>If you want Rspec::RR to be initialized with its own set of options, you have to do that explicitly:</source>
          <target state="translated">Rspec :: RR을 자체 옵션 세트로 초기화하려면 명시 적으로 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5ab60251402f59f81ad6ba377cd41ea3857efba" translate="yes" xml:space="preserve">
          <source>If you want only strict string args (useful when cascading thor classes), call strict_args_position! This is disabled by default to allow dynamic invocations.</source>
          <target state="translated">엄격한 문자열 인수 만 원하는 경우 (토르 클래스를 계단식으로 묶을 때 유용) strict_args_position을 호출하십시오! 동적 호출을 허용하기 위해 기본적으로 사용하지 않도록 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5da050c8ffaca8997323cd165b7f1530765ae76" translate="yes" xml:space="preserve">
          <source>If you want to cd to an absolute directory, you must include an escaped / (%2F) in the path. Example:</source>
          <target state="translated">절대 디렉토리로 cd하려면 경로에 이스케이프 된 / (% 2F)를 포함시켜야합니다. 예:</target>
        </trans-unit>
        <trans-unit id="40747b06440479dc3f4a7b11ea8d5a67314e6768" translate="yes" xml:space="preserve">
          <source>If you want to change the behavior of &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;Warning.warn&lt;/code&gt;&lt;/a&gt; you should use +Warning.extend(MyNewModuleWithWarnMethod)+ and you can use `super` to get the default behavior of printing the warning to $stderr.</source>
          <target state="translated">&lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;Warning.warn&lt;/code&gt; &lt;/a&gt; 의 동작을 변경 하려면 + Warning.extend (MyNewModuleWithWarnMethod) +를 사용해야하며`super`를 사용하여 경고를 $ stderr에 인쇄하는 기본 동작을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cb4c4cd4ade584d953c5a0ab1cb45651c0d81d0" translate="yes" xml:space="preserve">
          <source>If you want to match the beginning and end of the entire string in Ruby, use the anchors &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt;.</source>
          <target state="translated">Ruby에서 전체 문자열의 시작과 끝을 일치 시키려면 앵커 &lt;code&gt;\A&lt;/code&gt; 및 &lt;code&gt;\z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc0ed7d2e663fbdaeef417b4184d952ab6846b59" translate="yes" xml:space="preserve">
          <source>If you want to raise an error for unknown options, call check_unknown_options! This is disabled by default to allow dynamic invocations.</source>
          <target state="translated">알 수없는 옵션에 대해 오류를 발생 시키려면 check_unknown_options를 호출하십시오! 동적 호출을 허용하기 위해 기본적으로 사용하지 않도록 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3d6976d8df7bbe0648dd9c0ff09df3a0b542fe3" translate="yes" xml:space="preserve">
          <source>If you want to raise an error when the default value of an option does not match the type call check_default_type! This is disabled by default for compatibility.</source>
          <target state="translated">옵션의 기본값이 유형 call check_default_type과 일치하지 않을 때 오류를 발생 시키려면! 호환성을 위해 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="da44e46f104ca79d258aa8b2b15f55278f2a8af5" translate="yes" xml:space="preserve">
          <source>If you want to raise an error when the default value of an option does not match the type call check_default_type! This will be the default; for compatibility a deprecation warning is issued if necessary.</source>
          <target state="translated">옵션의 기본값이 유형과 일치하지 않을 때 오류를 발생 시키려면 check_default_type! 이것이 기본값입니다. 호환성을 위해 필요한 경우 사용 중단 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5b99e9ed3acd5d5b52234fd3f931fab70bde32fa" translate="yes" xml:space="preserve">
          <source>If you want to use both Forwardable and &lt;a href=&quot;singleforwardable&quot;&gt;&lt;code&gt;SingleForwardable&lt;/code&gt;&lt;/a&gt;, you can use methods def_instance_delegator and &lt;a href=&quot;singleforwardable#method-i-def_single_delegator&quot;&gt;&lt;code&gt;def_single_delegator&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">당신이 전송 가능한 모두 사용하려면 &lt;a href=&quot;singleforwardable&quot;&gt; &lt;code&gt;SingleForwardable&lt;/code&gt; 을&lt;/a&gt; , 당신은 방법의 def_instance_delegator 및 사용할 수 있습니다 &lt;a href=&quot;singleforwardable#method-i-def_single_delegator&quot;&gt; &lt;code&gt;def_single_delegator&lt;/code&gt; &lt;/a&gt; 등</target>
        </trans-unit>
        <trans-unit id="6d50be3d6cbfa0fe605e22b22134cf0569ade5df" translate="yes" xml:space="preserve">
          <source>If you want to use defaults that don't match the type of an option, either specify `check_default_type: false` or call `allow_incompatible_default_type!`</source>
          <target state="translated">옵션 유형과 일치하지 않는 기본값을 사용하려면`check_default_type : false`를 지정하거나`allow_incompatible_default_type!`을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="5a5e7af11734d81227c2da819ce554a09e110e69" translate="yes" xml:space="preserve">
          <source>If you will be activating the latest version of a gem, there is no need to call &lt;a href=&quot;kernel#method-i-gem&quot;&gt;&lt;code&gt;Kernel#gem&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#method-i-require&quot;&gt;&lt;code&gt;Kernel#require&lt;/code&gt;&lt;/a&gt; will do the right thing for you.</source>
          <target state="translated">최신 버전의 gem을 활성화 할 경우 &lt;a href=&quot;kernel#method-i-gem&quot;&gt; &lt;code&gt;Kernel#gem&lt;/code&gt; &lt;/a&gt; 을 호출 할 필요가 없습니다 . &lt;a href=&quot;kernel#method-i-require&quot;&gt; &lt;code&gt;Kernel#require&lt;/code&gt; &lt;/a&gt; 가 올바른 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="61364d2c46efb52c5a90c0666721ac0fdf2d9c5a" translate="yes" xml:space="preserve">
          <source>If you wish to have logs automatically roll over and archive, see the newsyslog.conf(5) and newsyslog(8) man pages.</source>
          <target state="translated">로그를 자동으로 롤오버하고 보관하려면 newsyslog.conf (5) 및 newsyslog (8) 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b9fe10559f75d888fed9181537af95d6897684f3" translate="yes" xml:space="preserve">
          <source>If you wish to invoke the superclass functionality from a method use &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="translated">메소드에서 수퍼 클래스 기능을 호출하려면 &lt;code&gt;super&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="524017aa1dedf5eff0e0df3d589160f2bccc9c50" translate="yes" xml:space="preserve">
          <source>If you wish to re-use a connection across multiple &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; requests without automatically closing it you can use &lt;a href=&quot;http#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt; and then call &lt;a href=&quot;http#method-i-start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http#method-i-finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt; manually.</source>
          <target state="translated">자동으로 닫지 않고 여러 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 요청 에서 연결을 재사용 하려면 &lt;a href=&quot;http#method-c-new&quot;&gt; &lt;code&gt;::new&lt;/code&gt; &lt;/a&gt; 를 사용한 다음 수동으로 &lt;a href=&quot;http#method-i-start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;http#method-i-finish&quot;&gt; &lt;code&gt;finish&lt;/code&gt; &lt;/a&gt; 를 호출하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="f1e996a5d995fbd41b76d3595fb3d542de128101" translate="yes" xml:space="preserve">
          <source>If you wish to rescue an exception for only part of your method, use &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. For more details see the page on &lt;a href=&quot;exceptions_rdoc&quot;&gt;exception handling&lt;/a&gt;.</source>
          <target state="translated">메소드의 일부에 대해서만 예외를 구출하려면 &lt;code&gt;begin&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 를 사용 하십시오 . 자세한 내용은 &lt;a href=&quot;exceptions_rdoc&quot;&gt;예외 처리&lt;/a&gt; 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d877ff8549d938ae9f820ff8a7e17f9f14aceda" translate="yes" xml:space="preserve">
          <source>If you're going to subclass &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;, be sure to call super in your &lt;code&gt;initialize&lt;/code&gt; method, otherwise a &lt;a href=&quot;threaderror&quot;&gt;&lt;code&gt;ThreadError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 클래스를 서브 클래스 로 만들려면 &lt;code&gt;initialize&lt;/code&gt; 메소드 에서 super를 호출해야합니다 . 그렇지 않으면 &lt;a href=&quot;threaderror&quot;&gt; &lt;code&gt;ThreadError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1b8bfccbe62e96cbb9f45da7bf2616c8cf84f067" translate="yes" xml:space="preserve">
          <source>If you've used &lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; across multiple threads you should call this in each thread when you're done making HTTP requests.</source>
          <target state="translated">당신이 사용했다면 &lt;a href=&quot;persistent&quot;&gt; &lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt; &lt;/a&gt; 각 스레드에서이 호출해야합니다 여러 스레드에서 당신은 HTTP 요청을 완료 할 때.</target>
        </trans-unit>
        <trans-unit id="f18b5541378d04f394be6fd0f381c39aaaa8f421" translate="yes" xml:space="preserve">
          <source>If your POP server provides UIDL functionality, you can grab only selected mails from the POP server. e.g.</source>
          <target state="translated">POP 서버가 UIDL 기능을 제공하는 경우 POP 서버에서 선택한 메일 만 가져올 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="0ee215c0c2f50fa0730d0c732fe303e3afbeb706" translate="yes" xml:space="preserve">
          <source>If your class has special serialization needs (for example, if you want to serialize in some specific format), or if it contains objects that would otherwise not be serializable, you can implement your own serialization strategy.</source>
          <target state="translated">클래스에 특별한 직렬화가 필요한 경우 (예 : 특정 형식으로 직렬화하려는 경우) 또는 직렬화 할 수없는 객체가 포함 된 경우 고유 한 직렬화 전략을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a3d26f12808a5733beb326210165016fbbd1448" translate="yes" xml:space="preserve">
          <source>If your system does not have a default set of certificates you can obtain a set extracted from Mozilla CA certificate store by cURL maintainers here: &lt;a href=&quot;https://curl.haxx.se/docs/caextract.html&quot;&gt;curl.haxx.se/docs/caextract.html&lt;/a&gt; (You may wish to use the firefox-db2pem.sh script to extract the certificates from a local install to avoid man-in-the-middle attacks.)</source>
          <target state="translated">시스템에 기본 인증서 세트가없는 경우 cURL 관리자가 &lt;a href=&quot;https://curl.haxx.se/docs/caextract.html&quot;&gt;curl.haxx.se/docs/caextract.html을&lt;/a&gt; 통해 Mozilla CA 인증서 저장소에서 추출한 세트를 얻을 수 있습니다 ( firefox-db2pem.sh 를 사용할 수 있습니다). 중간자 (man-in-the-middle) 공격을 피하기 위해 로컬 설치에서 인증서를 추출하는 스크립트)</target>
        </trans-unit>
        <trans-unit id="eb6ce2d28d040571dab26e0ed6e68180997c9f97" translate="yes" xml:space="preserve">
          <source>Ifaddr</source>
          <target state="translated">Ifaddr</target>
        </trans-unit>
        <trans-unit id="adfd82a495d8e8fa12679239faeb526c3808c56c" translate="yes" xml:space="preserve">
          <source>Ifaddr#addr</source>
          <target state="translated">Ifaddr#addr</target>
        </trans-unit>
        <trans-unit id="4bb199cd6795285df0f4c102709bc6ccd83d0220" translate="yes" xml:space="preserve">
          <source>Ifaddr#broadaddr</source>
          <target state="translated">Ifaddr#broadaddr</target>
        </trans-unit>
        <trans-unit id="36f1e5c847d1eb572be0342d507f310491f56b09" translate="yes" xml:space="preserve">
          <source>Ifaddr#dstaddr</source>
          <target state="translated">Ifaddr#dstaddr</target>
        </trans-unit>
        <trans-unit id="b83b981552cc2066cd7535a730b938ca2baa6a9c" translate="yes" xml:space="preserve">
          <source>Ifaddr#flags</source>
          <target state="translated">Ifaddr#flags</target>
        </trans-unit>
        <trans-unit id="c1c3e0a5343cbf016c22b2907271377b87ddfa5c" translate="yes" xml:space="preserve">
          <source>Ifaddr#ifindex</source>
          <target state="translated">Ifaddr#ifindex</target>
        </trans-unit>
        <trans-unit id="934e7ff4fb6e2d97a5aafd875290784e95bf8db0" translate="yes" xml:space="preserve">
          <source>Ifaddr#inspect</source>
          <target state="translated">Ifaddr#inspect</target>
        </trans-unit>
        <trans-unit id="cf3b3ef9e6849bccc7de8d595159a8d7b9c82d77" translate="yes" xml:space="preserve">
          <source>Ifaddr#name</source>
          <target state="translated">Ifaddr#name</target>
        </trans-unit>
        <trans-unit id="ad65ea88240296ca8561618a3d3dfdafc6c9016f" translate="yes" xml:space="preserve">
          <source>Ifaddr#netmask</source>
          <target state="translated">Ifaddr#netmask</target>
        </trans-unit>
        <trans-unit id="bc07505e969976da81ec41f5a2da4070be6d3fb5" translate="yes" xml:space="preserve">
          <source>Ifaddr#vhid</source>
          <target state="translated">Ifaddr#vhid</target>
        </trans-unit>
        <trans-unit id="4ea2d7de441d7f98620c3104f0a16b71b66162f8" translate="yes" xml:space="preserve">
          <source>Ignores pressing ^C:</source>
          <target state="translated">^ C를 누르는 것을 무시합니다 :</target>
        </trans-unit>
        <trans-unit id="ab100af0231c14e37ca3e44136a116e96b70c6bc" translate="yes" xml:space="preserve">
          <source>Illegal confirmation request</source>
          <target state="translated">불법 확인 요청</target>
        </trans-unit>
        <trans-unit id="71f4b61ddb3f8cd6eb49b0be7cd58c04f74adb30" translate="yes" xml:space="preserve">
          <source>Immediate values are not passed by reference but are passed by value: &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, Fixnums, Symbols, and some Floats.</source>
          <target state="translated">즉시 값은 참조로 전달되지 않지만 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; , Fixnums, Symbols 및 일부 Float 값으로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="c937d64e83987be1d2375d04d522b7ac7a74e80a" translate="yes" xml:space="preserve">
          <source>Immediately writes all buffered data in &lt;em&gt;ios&lt;/em&gt; to disk.</source>
          <target state="translated">&lt;em&gt;ios의&lt;/em&gt; 모든 버퍼링 된 데이터 를 디스크 에 즉시 씁니다 .</target>
        </trans-unit>
        <trans-unit id="69e0601af71a4fb24685c77bbf5de1be7b0aeabb" translate="yes" xml:space="preserve">
          <source>Immediately writes all buffered data in &lt;em&gt;ios&lt;/em&gt; to disk. Note that &lt;a href=&quot;io#method-i-fsync&quot;&gt;&lt;code&gt;fsync&lt;/code&gt;&lt;/a&gt; differs from using &lt;a href=&quot;io#method-i-sync-3D&quot;&gt;&lt;code&gt;IO#sync=&lt;/code&gt;&lt;/a&gt;. The latter ensures that data is flushed from Ruby's buffers, but does not guarantee that the underlying operating system actually writes it to disk.</source>
          <target state="translated">&lt;em&gt;iOS의&lt;/em&gt; 버퍼링 된 모든 데이터를 즉시 디스크 에 씁니다 . 참고 &lt;a href=&quot;io#method-i-fsync&quot;&gt; &lt;code&gt;fsync&lt;/code&gt; 를&lt;/a&gt; 사용 다르다 &lt;a href=&quot;io#method-i-sync-3D&quot;&gt; &lt;code&gt;IO#sync=&lt;/code&gt; &lt;/a&gt; . 후자는 Ruby의 버퍼에서 데이터가 플러시되도록 보장하지만 기본 운영 체제가 실제로 데이터를 디스크에 쓰는 것을 보장하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="301fadcbce2b298534cfb5eeaee1763077254a5c" translate="yes" xml:space="preserve">
          <source>Immediately writes all buffered data in &lt;em&gt;ios&lt;/em&gt; to disk. Note that &lt;code&gt;fsync&lt;/code&gt; differs from using &lt;code&gt;IO#sync=&lt;/code&gt;. The latter ensures that data is flushed from Ruby's buffers, but does not guarantee that the underlying operating system actually writes it to disk.</source>
          <target state="translated">&lt;em&gt;ios의&lt;/em&gt; 모든 버퍼링 된 데이터 를 디스크 에 즉시 씁니다 . 참고 &lt;code&gt;fsync&lt;/code&gt; 를 사용 다르다 &lt;code&gt;IO#sync=&lt;/code&gt; . 후자는 Ruby의 버퍼에서 데이터가 플러시되도록하지만 기본 운영 체제가 실제로 디스크에 데이터를 쓰지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="afa0fb7e13ee4cd50aaa1e1d7220a18431f52c56" translate="yes" xml:space="preserve">
          <source>Immutable and read-only representation of a timestamp response returned from a timestamp server after receiving an associated &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;. Allows access to specific information about the response but also allows to verify the &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">연관된 &lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; 를&lt;/a&gt; 수신 한 후 타임 스탬프 서버에서 반환 된 타임 스탬프 응답의 변경 불가능하고 읽기 전용 표현입니다 . 응답에 대한 특정 정보에 액세스 할 수 있습니다뿐만 아니라 확인할 수 있습니다 &lt;a href=&quot;response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37a240cae747b607e2d9dd6691740f62ece89f24" translate="yes" xml:space="preserve">
          <source>Immutable and read-only representation of a timestamp token info from a &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 에서 가져온 타임 스탬프 토큰 정보의 변경 불가능한 읽기 전용 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="7bf4e839c17e27db28b52eb6341d1e3bdeed89f2" translate="yes" xml:space="preserve">
          <source>Implementation of an X.509 certificate as specified in RFC 5280. Provides access to a certificate's attributes and allows certificates to be read from a string, but also supports the creation of new certificates from scratch.</source>
          <target state="translated">RFC 5280에 지정된 X.509 인증서 구현. 인증서 속성에 대한 액세스를 제공하고 문자열에서 인증서를 읽을 수 있지만 처음부터 새 인증서 작성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="74ff686b7749a18ba73adc4dc6e7594e0c2e3e9c" translate="yes" xml:space="preserve">
          <source>Implementation of the &lt;a href=&quot;../fiber#method-c-schedule&quot;&gt;&lt;code&gt;Fiber.schedule&lt;/code&gt;&lt;/a&gt;. The method is &lt;em&gt;expected&lt;/em&gt; to immediately run passed block of code in a separate non-blocking fiber, and to return that &lt;a href=&quot;../fiber&quot;&gt;&lt;code&gt;Fiber&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../fiber#method-c-schedule&quot;&gt; &lt;code&gt;Fiber.schedule&lt;/code&gt; &lt;/a&gt; 구현 . 이 메서드는 별도의 비 블로킹 파이버에서 전달 된 코드 블록을 즉시 실행하고 해당 &lt;a href=&quot;../fiber&quot;&gt; &lt;code&gt;Fiber&lt;/code&gt; &lt;/a&gt; 를 반환 할 &lt;em&gt;것으로 예상&lt;/em&gt; 됩니다 .</target>
        </trans-unit>
        <trans-unit id="0c876b1adf75b8da3135099939e700079e10aa87" translate="yes" xml:space="preserve">
          <source>Implements &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; over a UNIX socket</source>
          <target state="translated">UNIX 소켓을 통한 &lt;a href=&quot;../drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt; 구현</target>
        </trans-unit>
        <trans-unit id="8d1ce03cf274289f4fd1bf39b9e3c4ff50575a95" translate="yes" xml:space="preserve">
          <source>Implements session storage as a flat file of 'key=value' values. This storage type only works directly with &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; values; the user is responsible for converting other types to Strings when storing and from Strings when retrieving.</source>
          <target state="translated">'key = value'값의 플랫 파일로 세션 스토리지를 구현합니다. 이 스토리지 유형은 &lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 값 과 직접 작동 합니다. 사용자는 저장시 검색 할 때 문자열에서 다른 유형을 문자열로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2e562adf7038f117943d2dcbaf1296ae086198b" translate="yes" xml:space="preserve">
          <source>Implements session storage as a global in-memory hash. &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; data will only persist for as long as the Ruby interpreter instance does.</source>
          <target state="translated">글로벌 메모리 내 해시로 세션 스토리지를 구현합니다. &lt;a href=&quot;../session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 데이터는 Ruby 인터프리터 인스턴스가 지속되는 한 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="02ee997506da0a9f7c998c413fc1723445996d11" translate="yes" xml:space="preserve">
          <source>Implements session storage place holder. No actual storage will be done.</source>
          <target state="translated">세션 저장 위치 홀더를 구현합니다. 실제 저장은 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67a30a7f048aa8eb0a670f868b83b7e38688d260" translate="yes" xml:space="preserve">
          <source>Implicit &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; Assignment</source>
          <target state="translated">암시 적 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 할당</target>
        </trans-unit>
        <trans-unit id="65a63aa075b83c2fd9eb74a28a95e05ff02e65a6" translate="yes" xml:space="preserve">
          <source>Implicit Conversions</source>
          <target state="translated">암시 적 변환</target>
        </trans-unit>
        <trans-unit id="d11e5215e0054ed43eca1332fd3ed5dd27e04c36" translate="yes" xml:space="preserve">
          <source>Import a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; Marshalled object.</source>
          <target state="translated">&lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; Marshalled 객체를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="9f9a060ee84c290b95bfb8820f5bb5f10fecf4c1" translate="yes" xml:space="preserve">
          <source>Import class refinements from &lt;em&gt;module&lt;/em&gt; into the current class or module definition.</source>
          <target state="translated">클래스 세분화를 &lt;em&gt;모듈&lt;/em&gt; 에서 현재 클래스 또는 모듈 정의로 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="84c9151b0a3a563187fa329f095c80ce2cb1c7b5" translate="yes" xml:space="preserve">
          <source>Important Note on Checking Passwords</source>
          <target state="translated">비밀번호 확인에 관한 중요 사항</target>
        </trans-unit>
        <trans-unit id="f54cfe90f7d2c7ffd4c15fc1cf52a501c10ef35c" translate="yes" xml:space="preserve">
          <source>Importer</source>
          <target state="translated">Importer</target>
        </trans-unit>
        <trans-unit id="8c2254f87e228c355cbd9fa6b1945ab66f2770ad" translate="yes" xml:space="preserve">
          <source>Importer#[]</source>
          <target state="translated">Importer#[]</target>
        </trans-unit>
        <trans-unit id="321097531e611cdf7fa63352ad84bafb3bd8b18d" translate="yes" xml:space="preserve">
          <source>Importer#bind</source>
          <target state="translated">Importer#bind</target>
        </trans-unit>
        <trans-unit id="b04da4d8f5bf3cd39617ae976761648476c1f2a4" translate="yes" xml:space="preserve">
          <source>Importer#bind_function</source>
          <target state="translated">Importer#bind_function</target>
        </trans-unit>
        <trans-unit id="25b4427ebdc8228efaed4ee41676eb78c79a1b49" translate="yes" xml:space="preserve">
          <source>Importer#create_value</source>
          <target state="translated">Importer#create_value</target>
        </trans-unit>
        <trans-unit id="40c554e8d35ada7f9bffeba8e5ead17a4af3f9f8" translate="yes" xml:space="preserve">
          <source>Importer#dlload</source>
          <target state="translated">Importer#dlload</target>
        </trans-unit>
        <trans-unit id="e13db8632cf2ba64c1117bd8df1eddf312f04775" translate="yes" xml:space="preserve">
          <source>Importer#extern</source>
          <target state="translated">Importer#extern</target>
        </trans-unit>
        <trans-unit id="5608e997cfe0c3ae98737561502e01554e0e3ad6" translate="yes" xml:space="preserve">
          <source>Importer#handler</source>
          <target state="translated">Importer#handler</target>
        </trans-unit>
        <trans-unit id="acd99022bcff9ce6398856110231ad824d937e74" translate="yes" xml:space="preserve">
          <source>Importer#import_function</source>
          <target state="translated">Importer#import_function</target>
        </trans-unit>
        <trans-unit id="73b0f9e4043b945df87effd82113bae49a361d2a" translate="yes" xml:space="preserve">
          <source>Importer#import_symbol</source>
          <target state="translated">Importer#import_symbol</target>
        </trans-unit>
        <trans-unit id="e99b813b46d64735f671bf6f6b60e176e255a6bf" translate="yes" xml:space="preserve">
          <source>Importer#import_value</source>
          <target state="translated">Importer#import_value</target>
        </trans-unit>
        <trans-unit id="80f42331ddc0b6da5111f5924678070b86fa21b6" translate="yes" xml:space="preserve">
          <source>Importer#parse_bind_options</source>
          <target state="translated">Importer#parse_bind_options</target>
        </trans-unit>
        <trans-unit id="26bc312e39ace20d0029570abe0ab99ba97fd650" translate="yes" xml:space="preserve">
          <source>Importer#sizeof</source>
          <target state="translated">Importer#sizeof</target>
        </trans-unit>
        <trans-unit id="6174fb2370b5a479093255d2170d7b8c401cbcda" translate="yes" xml:space="preserve">
          <source>Importer#struct</source>
          <target state="translated">Importer#struct</target>
        </trans-unit>
        <trans-unit id="fa10787abca6247bf118a94a827493ea0c33dd9c" translate="yes" xml:space="preserve">
          <source>Importer#type_alias</source>
          <target state="translated">Importer#type_alias</target>
        </trans-unit>
        <trans-unit id="3f2d27e886fcce554326b76fcfe2755285093bcf" translate="yes" xml:space="preserve">
          <source>Importer#typealias</source>
          <target state="translated">Importer#typealias</target>
        </trans-unit>
        <trans-unit id="1beb60b598853e294577ad85c4241fa61c7ff153" translate="yes" xml:space="preserve">
          <source>Importer#union</source>
          <target state="translated">Importer#union</target>
        </trans-unit>
        <trans-unit id="1436b2ee09ee075bab1590b331be7788e18ab89b" translate="yes" xml:space="preserve">
          <source>Importer#value</source>
          <target state="translated">Importer#value</target>
        </trans-unit>
        <trans-unit id="6c27b566d8f112cc6c896e9178fb77c220668041" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;literal&amp;rdquo; mode, constants assigned to literals will be deeply-frozen:</source>
          <target state="translated">&quot;리터럴&quot;모드에서 리터럴에 할당 된 상수는 완전히 고정됩니다.</target>
        </trans-unit>
        <trans-unit id="b879d00d282bdf8fb95736077687ce032127cffb" translate="yes" xml:space="preserve">
          <source>In 2017, Linux manpage random(7) writes that &amp;ldquo;no cryptographic primitive available today can hope to promise more than 256 bits of security&amp;rdquo;. So it might be questionable to pass size &amp;gt; 32 to this method.</source>
          <target state="translated">2017 년에 Linux 맨 페이지 random (7)은 &quot;오늘날 사용할 수있는 암호화 기본 요소는 256 비트 이상의 보안을 약속 할 수 없습니다&quot;라고 말합니다. 따라서이 방법으로 크기&amp;gt; 32를 전달하는 것이 문제가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bb5c6c55cc5a7ad8aa400c95b0f1a5e8449aa2d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;(min, max)&lt;/code&gt; form, returns &lt;em&gt;min&lt;/em&gt; if &lt;em&gt;obj&lt;/em&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;em&gt;min&lt;/em&gt; is less than zero, &lt;em&gt;max&lt;/em&gt; if &lt;em&gt;obj&lt;/em&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;em&gt;max&lt;/em&gt; is greater than zero, and &lt;em&gt;obj&lt;/em&gt; otherwise.</source>
          <target state="translated">에서는 &lt;code&gt;(min, max)&lt;/code&gt; 형태로 되돌아 &lt;em&gt;가 min&lt;/em&gt; 경우 &lt;em&gt;OBJ &lt;/em&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;em&gt;분&lt;/em&gt; 미만 제로 &lt;em&gt;맥스&lt;/em&gt; 경우 &lt;em&gt;OBJ &lt;/em&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;em&gt;최대가&lt;/em&gt; 0보다 크고, &lt;em&gt;OBJ&lt;/em&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="06d80c4789852f843d49b5eb59431f31818260e6" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;(range)&lt;/code&gt; form, returns &lt;em&gt;range.begin&lt;/em&gt; if &lt;em&gt;obj&lt;/em&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;em&gt;range.begin&lt;/em&gt; is less than zero, &lt;em&gt;range.end&lt;/em&gt; if &lt;em&gt;obj&lt;/em&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;em&gt;range.end&lt;/em&gt; is greater than zero, and &lt;em&gt;obj&lt;/em&gt; otherwise.</source>
          <target state="translated">에서는 &lt;code&gt;(range)&lt;/code&gt; 형태로 되돌아 &lt;em&gt;range.begin&lt;/em&gt; 경우 &lt;em&gt;OBJ &lt;/em&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;em&gt;range.begin가&lt;/em&gt; 제로보다 &lt;em&gt;range.end&lt;/em&gt; 경우 &lt;em&gt;OBJ &lt;/em&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;em&gt;range.end는&lt;/em&gt; 0보다 크고, &lt;em&gt;OBJ&lt;/em&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="b432407e0b3590bb373b974268c24aa8a2abe5c8" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;case&lt;/code&gt; (but not in &lt;code&gt;=&amp;gt;&lt;/code&gt; and &lt;code&gt;in&lt;/code&gt;) expressions, parentheses around both kinds of patterns could be omitted:</source>
          <target state="translated">에서는 &lt;code&gt;case&lt;/code&gt; (그러나에서 &lt;code&gt;=&amp;gt;&lt;/code&gt; 과 &lt;code&gt;in&lt;/code&gt; ) 표현 패턴의 두 가지 괄호는 생략 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="63c63d45b1c8f98ba980f0b97af3fd1262d023b4" translate="yes" xml:space="preserve">
          <source>In OCB mode, the length must be supplied both when encrypting and when decrypting, and must be before specifying an IV.</source>
          <target state="translated">OCB 모드에서 길이는 암호화 할 때와 해독 할 때 모두 제공되어야하며 IV를 지정하기 전에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cb860e3babe4b79bcee97231489d33c90ad24157" translate="yes" xml:space="preserve">
          <source>In Ruby 1.8, you could also use &lt;code&gt;retry&lt;/code&gt; where you used &lt;code&gt;redo&lt;/code&gt;. This is no longer true, now you will receive a &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; when you use &lt;code&gt;retry&lt;/code&gt; outside of a &lt;code&gt;rescue&lt;/code&gt; block. See &lt;a href=&quot;exceptions_rdoc&quot;&gt;Exceptions&lt;/a&gt; for proper usage of &lt;code&gt;retry&lt;/code&gt;.</source>
          <target state="translated">Ruby 1.8에서는 &lt;code&gt;redo&lt;/code&gt; 를 사용한 &lt;code&gt;retry&lt;/code&gt; 를 사용할 수도 있습니다 . 더 이상 사실이 아니므로 이제 &lt;code&gt;rescue&lt;/code&gt; 블록 외부에서 &lt;code&gt;retry&lt;/code&gt; 를 사용할 때 &lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 가&lt;/a&gt; 발생합니다 . &lt;code&gt;retry&lt;/code&gt; 올바른 사용법에 대한 &lt;a href=&quot;exceptions_rdoc&quot;&gt;예외&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f41b6e163dc494d503485d920940d8df5cd4cc3d" translate="yes" xml:space="preserve">
          <source>In Ruby local variable names and method names are nearly identical. If you have not assigned to one of these ambiguous names ruby will assume you wish to call a method. Once you have assigned to the name ruby will assume you wish to reference a local variable.</source>
          <target state="translated">Ruby에서 로컬 변수 이름과 메소드 이름은 거의 동일합니다. 이러한 모호한 이름 중 하나를 지정하지 않으면 ruby는 메소드를 호출한다고 가정합니다. 루비에 이름을 지정하면 지역 변수를 참조한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="35e7f409e5a0c63269124a8d6bcf4f2c38f958ff" translate="yes" xml:space="preserve">
          <source>In Ruby, assignment uses the &lt;code&gt;=&lt;/code&gt; (equals sign) character. This example assigns the number five to the local variable &lt;code&gt;v&lt;/code&gt;:</source>
          <target state="translated">루비에서 할당은 &lt;code&gt;=&lt;/code&gt; (등호) 문자를 사용합니다. 이 예에서는 숫자 5를 지역 변수 &lt;code&gt;v&lt;/code&gt; 에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="2d614eea2fb095ab3c707562c1284af6e6aabc52" translate="yes" xml:space="preserve">
          <source>In Ruby, you can create rational objects with the Kernel#Rational, &lt;a href=&quot;rational#method-i-to_r&quot;&gt;&lt;code&gt;to_r&lt;/code&gt;&lt;/a&gt;, or rationalize methods or by suffixing &lt;code&gt;r&lt;/code&gt; to a literal. The return values will be irreducible fractions.</source>
          <target state="translated">Ruby에서 Kernel # Rational, &lt;a href=&quot;rational#method-i-to_r&quot;&gt; &lt;code&gt;to_r&lt;/code&gt; &lt;/a&gt; 또는 rationalize 메소드를 사용하거나 &lt;code&gt;r&lt;/code&gt; 을 리터럴 로 접미사로 합리적 오브젝트를 작성할 수 있습니다 . 반환 값은 돌이킬 수없는 분수입니다.</target>
        </trans-unit>
        <trans-unit id="2e8583d4adf2a6cc5d33e8521a0b7bb5440b020e" translate="yes" xml:space="preserve">
          <source>In a class:</source>
          <target state="translated">수업에서 :</target>
        </trans-unit>
        <trans-unit id="6aff16e8e29ac2e3649962a0986efd599c858437" translate="yes" xml:space="preserve">
          <source>In a file:</source>
          <target state="translated">파일에서 :</target>
        </trans-unit>
        <trans-unit id="187f3769df83e749404d416538f97a6f60e1fce6" translate="yes" xml:space="preserve">
          <source>In a modifier statement, the left-hand side must be a statement and the right-hand side must be an expression.</source>
          <target state="translated">수정 자 명령문에서 왼쪽은 명령문이어야하고 오른쪽은 표현식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="51c920619879b29c6ec9020481e3e59374d2b908" translate="yes" xml:space="preserve">
          <source>In addition one of either &lt;a href=&quot;request#method-i-policy_id&quot;&gt;&lt;code&gt;Request#policy_id&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;factory#attribute-i-default_policy_id&quot;&gt;&lt;code&gt;Factory#default_policy_id&lt;/code&gt;&lt;/a&gt; must be set.</source>
          <target state="translated">또한 &lt;a href=&quot;request#method-i-policy_id&quot;&gt; &lt;code&gt;Request#policy_id&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;factory#attribute-i-default_policy_id&quot;&gt; &lt;code&gt;Factory#default_policy_id&lt;/code&gt; &lt;/a&gt; 중 하나를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d843a65ea5f6064eca97dfbb0286ad9b06eb2f80" translate="yes" xml:space="preserve">
          <source>In addition to disabling interpolation, single-quoted strings also disable all escape sequences except for the single-quote (&lt;code&gt;\'&lt;/code&gt;) and backslash (&lt;code&gt;\\&lt;/code&gt;).</source>
          <target state="translated">보간을 비활성화하는 것 외에도 작은 따옴표로 묶인 문자열은 작은 따옴표 ( &lt;code&gt;\'&lt;/code&gt; ) 및 백 슬래시 ( &lt;code&gt;\\&lt;/code&gt; )를 제외한 모든 이스케이프 시퀀스를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="ea7d482b347de30a40854ac854fb165f7fae88f6" translate="yes" xml:space="preserve">
          <source>In addition to its specific fields and methods, a &lt;a href=&quot;cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance is a delegator to the array of its values.</source>
          <target state="translated">특정 필드와 메소드 외에도 &lt;a href=&quot;cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 인스턴스는 값 배열의 위임자입니다.</target>
        </trans-unit>
        <trans-unit id="05a127d1e8be2fb1142bc53fc12414d3f4ef0dc7" translate="yes" xml:space="preserve">
          <source>In addition to that, an argument to &lt;a href=&quot;ractor#method-c-new&quot;&gt;&lt;code&gt;Ractor.new&lt;/code&gt;&lt;/a&gt; would be passed to block and available there as if received by &lt;a href=&quot;ractor#method-c-receive&quot;&gt;&lt;code&gt;Ractor.receive&lt;/code&gt;&lt;/a&gt;, and the last block value would be sent outside of the ractor as if sent by &lt;a href=&quot;ractor#method-c-yield&quot;&gt;&lt;code&gt;Ractor.yield&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그 외에도에 인수 &lt;a href=&quot;ractor#method-c-new&quot;&gt; &lt;code&gt;Ractor.new&lt;/code&gt; 는&lt;/a&gt; 블록에 전달 될 가능이받은 경우로서 &lt;a href=&quot;ractor#method-c-receive&quot;&gt; &lt;code&gt;Ractor.receive&lt;/code&gt; &lt;/a&gt; 및 의해 전송 된 것처럼 마지막 블록 값이 ractor 외부에서 전송되는 &lt;a href=&quot;ractor#method-c-yield&quot;&gt; &lt;code&gt;Ractor.yield&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f6e8edf27d2dad0788d230f7daeccfc9da682e7" translate="yes" xml:space="preserve">
          <source>In addition to the CSV instance methods, several IO methods are delegated. See &lt;a href=&quot;#class-CSV-label-Delegated+Methods&quot;&gt;Delegated Methods&lt;/a&gt;.</source>
          <target state="translated">CSV 인스턴스 메서드 외에도 여러 IO 메서드가 위임됩니다. &lt;a href=&quot;#class-CSV-label-Delegated+Methods&quot;&gt;위임 된 메서드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1536fb02608ed732970b72cae3289dc42a33cd09" translate="yes" xml:space="preserve">
          <source>In addition to the JSON additions provided, you can craft JSON additions of your own, either for Ruby built-in classes or for user-defined classes.</source>
          <target state="translated">제공된 JSON 추가 외에도 Ruby 내장 클래스 또는 사용자 정의 클래스에 대해 JSON 추가를 직접 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="988ce2f8d4d42f8971dd835d6f58f01c4bf2c77e" translate="yes" xml:space="preserve">
          <source>In addition to the methods it mixes in through the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; module, the &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; class has proprietary methods for accessing, searching and otherwise manipulating arrays.</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 모듈 을 통해 혼합되는 메소드 외에도 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 클래스에는 어레이 에 액세스, 검색 및 조작하는 독점적 인 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="46220baf549128eaf1761bfb21013ce6c06dd1c7" translate="yes" xml:space="preserve">
          <source>In almost all situations, you must provide a third argument to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;/SMTP#start. This is the domain name which you are on (the host to send mail from). It is called the &amp;ldquo;HELO domain&amp;rdquo;. The &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server will judge whether it should send or reject the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; session by inspecting the HELO domain.</source>
          <target state="translated">거의 모든 상황에서 &lt;a href=&quot;smtp#method-c-start&quot;&gt; &lt;code&gt;SMTP.start&lt;/code&gt; &lt;/a&gt; / SMTP # start에 세 번째 인수를 제공해야합니다 . 이것은 사용자가있는 도메인 이름입니다 (메일을 보낼 호스트). 이를 &quot;HELO 도메인&quot;이라고합니다. &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 서버는 전송 또는 거부할지 여부를 판단 할 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; 의&lt;/a&gt; HELO 도메인을 검사하여 세션을.</target>
        </trans-unit>
        <trans-unit id="7ace9447e4dd78fe5e5cadd91a30c90b8f370826" translate="yes" xml:space="preserve">
          <source>In an AF_INET/AF_INET6 sockaddr array, the 4th element, numeric IP address, is used to construct socket address in the &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; instance. If the 3rd element, textual host name, is non-nil, it is also recorded but used only for &lt;a href=&quot;addrinfo#method-i-inspect&quot;&gt;&lt;code&gt;Addrinfo#inspect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">AF_INET / AF_INET6 sockaddr 배열에서 네 번째 요소 인 숫자 IP 주소는 &lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 인스턴스 에서 소켓 주소를 구성하는 데 사용됩니다 . 텍스트 호스트 이름 인 세 번째 요소가 0이 아닌 경우에도 기록되지만 &lt;a href=&quot;addrinfo#method-i-inspect&quot;&gt; &lt;code&gt;Addrinfo#inspect&lt;/code&gt; &lt;/a&gt; 에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="72c800dbbc25f7771f14dc3d99626bf3de734068" translate="yes" xml:space="preserve">
          <source>In any case, all arguments (&lt;code&gt;*args&lt;/code&gt;) will be passed to &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어쨌든 모든 인수 ( &lt;code&gt;*args&lt;/code&gt; )는 &lt;a href=&quot;tempfile#method-c-new&quot;&gt; &lt;code&gt;Tempfile.new&lt;/code&gt; &lt;/a&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="7a9e79a75443527cd6f99a1223941b905170157b" translate="yes" xml:space="preserve">
          <source>In any case, all arguments (&lt;code&gt;basename&lt;/code&gt;, &lt;code&gt;tmpdir&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, and &lt;code&gt;**options&lt;/code&gt;) will be treated as &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어쨌든 모든 인수 ( &lt;code&gt;basename&lt;/code&gt; , &lt;code&gt;tmpdir&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; 및 &lt;code&gt;**options&lt;/code&gt; )는 &lt;a href=&quot;tempfile#method-c-new&quot;&gt; &lt;code&gt;Tempfile.new&lt;/code&gt; &lt;/a&gt; 로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="3cd24327985c9946f2d093f2284add6771027279" translate="yes" xml:space="preserve">
          <source>In any case, all arguments (&lt;code&gt;basename&lt;/code&gt;, &lt;code&gt;tmpdir&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, and &lt;code&gt;**options&lt;/code&gt;) will be treated the same as for &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어쨌든 모든 인수 ( &lt;code&gt;basename&lt;/code&gt; , &lt;code&gt;tmpdir&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; 및 &lt;code&gt;**options&lt;/code&gt; )는 &lt;a href=&quot;tempfile#method-c-new&quot;&gt; &lt;code&gt;Tempfile.new&lt;/code&gt; &lt;/a&gt; 와 동일하게 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="90ad4f0aae8875c5113e691e033aeed83645581a" translate="yes" xml:space="preserve">
          <source>In cases no timestamp token has been created, this field contains further info about the reason why response creation failed. The method returns either nil (the request was successful and a timestamp token was created) or one of the following:</source>
          <target state="translated">타임 스탬프 토큰이 생성되지 않은 경우이 필드에는 응답 생성이 실패한 이유에 대한 추가 정보가 포함됩니다. 이 메서드는 nil (요청이 성공했고 타임 스탬프 토큰이 생성됨) 또는 다음 중 하나를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="89d1534e09c1088d0e4d16ab58f7201dbb063443" translate="yes" xml:space="preserve">
          <source>In cases of failure this field may contain an array of strings further describing the origin of the failure.</source>
          <target state="translated">실패한 경우이 필드에는 실패의 원인을 자세히 설명하는 문자열 배열이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b84aaaa2574003ba8651465b316e2dd9d3a3c9fe" translate="yes" xml:space="preserve">
          <source>In cases where the method accepts optional arguments, use a &lt;code&gt;call-seq&lt;/code&gt; with an optional argument if the method has the same behavior when an argument is omitted as when the argument is passed with the default value. For example, use:</source>
          <target state="translated">메서드가 선택적 인수를 허용 하는 경우 인수가 생략 될 때 메서드가 기본값으로 인수를 전달할 때와 동일한 동작을하는 경우 선택적 인수와 함께 &lt;code&gt;call-seq&lt;/code&gt; 를 사용 합니다. 예를 들어 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cab06b1691e550fc410b173bb7edd098cdaf163e" translate="yes" xml:space="preserve">
          <source>In concurrent programming, a monitor is an object or module intended to be used safely by more than one thread. The defining characteristic of a monitor is that its methods are executed with mutual exclusion. That is, at each point in time, at most one thread may be executing any of its methods. This mutual exclusion greatly simplifies reasoning about the implementation of monitors compared to reasoning about parallel code that updates a data structure.</source>
          <target state="translated">동시 프로그래밍에서 모니터는 둘 이상의 스레드가 안전하게 사용하도록 설계된 객체 또는 모듈입니다. 모니터의 정의 특성은 해당 메소드가 상호 배제로 실행된다는 것입니다. 즉, 각 시점에서 최대 하나의 스레드가 임의의 메소드를 실행 중일 수 있습니다. 이 상호 배제는 데이터 구조를 업데이트하는 병렬 코드에 대한 추론과 비교하여 모니터 구현에 대한 추론을 크게 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="0e8951c966e7874998a8f6411f1f623d361c8270" translate="yes" xml:space="preserve">
          <source>In each of the checked classes or modules, if the constant is not present but there is an autoload for it, &lt;code&gt;true&lt;/code&gt; is returned directly without autoloading:</source>
          <target state="translated">확인 된 각 클래스 또는 모듈에서 상수가 없지만 자동로드가 있으면 자동로드 없이 직접 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="be923ee6848ae9507b1d24f14a5ce52f9e93d3fb" translate="yes" xml:space="preserve">
          <source>In either case, the return value is properly padded with '=' and contains no line feeds.</source>
          <target state="translated">두 경우 모두 반환 값에 '='이 올바르게 채워지고 줄 바꿈이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="75a1c2a736a0f4459bb1197a1c20ab6429b9edd6" translate="yes" xml:space="preserve">
          <source>In either case, the returned values are in the order specified by the arguments. Arguments may be repeated.</source>
          <target state="translated">두 경우 모두 반환 된 값은 인수에 지정된 순서대로되어 있습니다. 인수는 반복 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27720f77ce4a709a9cf5833830b60e06e306b677" translate="yes" xml:space="preserve">
          <source>In eval:</source>
          <target state="translated">평가에서 :</target>
        </trans-unit>
        <trans-unit id="7f16287b352891e48965a6fe3d02ce9d4cec054d" translate="yes" xml:space="preserve">
          <source>In examples below, sometimes we use the following method to wait till ractors that are not currently blocked will finish (or process till next blocking) method.</source>
          <target state="translated">아래의 예에서 때때로 우리는 현재 차단되지 않은 레이터가 종료 될 때까지 (또는 다음 차단까지 처리) 방법을 기다리기 위해 다음 방법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="67fa14e81735c7c92cabbc4e1cf8836680cce886" translate="yes" xml:space="preserve">
          <source>In find-any mode (this behaves like libc's bsearch(3)), the block must always return a number, and there must be two indices i and j (0 &amp;lt;= i &amp;lt;= j &amp;lt;= ary.size) so that:</source>
          <target state="translated">모두 찾기 모드 (libc의 bsearch (3)처럼 동작)에서 블록은 항상 숫자를 반환해야하며, 두 개의 인덱스 i와 j (0 &amp;lt;= i &amp;lt;= j &amp;lt;= ary.size)가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e4e504007ef315f112de321d05a8cd7869850ca4" translate="yes" xml:space="preserve">
          <source>In find-any mode (this behaves like libc's bsearch(3)), the block must return a number, and there must be two values x and y (x &amp;lt;= y) so that:</source>
          <target state="translated">모두 찾기 모드 (libc의 bsearch (3)처럼 동작)에서 블록은 숫자를 반환해야하며 x와 y (x &amp;lt;= y)라는 두 개의 값이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f1c883c791c6355670510dcdc932713d186b1d11" translate="yes" xml:space="preserve">
          <source>In find-any mode, method bsearch returns some element for which the block returns zero, or &lt;code&gt;nil&lt;/code&gt; if no such element is found.</source>
          <target state="translated">모두 찾기 모드에서 bsearch 메소드는 블록이 0을 반환하는 일부 요소를 반환하거나 그러한 요소가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5064a807138879f9b1e7096cc3fdf6a802747b55" translate="yes" xml:space="preserve">
          <source>In find-any mode, the block always returns a numeric value. The further requirement (though not checked) is that there are no indexes &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; such that:</source>
          <target state="translated">모두 찾기 모드에서 블록은 항상 숫자 값을 반환합니다. 추가 요구 사항 (확인되지는 않았지만)은 다음 과 같은 인덱스 &lt;code&gt;i&lt;/code&gt; 및 &lt;code&gt;j&lt;/code&gt; 가 없다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="2c10959241998044bee6cfbcecd476d4fbd776f8" translate="yes" xml:space="preserve">
          <source>In find-minimum mode (this is a good choice for typical use case), the block must return true or false, and there must be a value x so that:</source>
          <target state="translated">최소 찾기 모드 (일반적인 사용 사례에 적합한 선택)에서 블록은 true 또는 false를 반환해야하며 x가 있어야 다음과 같이됩니다.</target>
        </trans-unit>
        <trans-unit id="25410f1f2e61455eab6f8547e2e998d443a68098" translate="yes" xml:space="preserve">
          <source>In find-minimum mode (this is a good choice for typical use cases), the block must always return true or false, and there must be an index i (0 &amp;lt;= i &amp;lt;= ary.size) so that:</source>
          <target state="translated">최소 찾기 모드 (일반적인 사용 사례에 적합한 선택)에서 블록은 항상 true 또는 false를 반환해야하며 인덱스 i (0 &amp;lt;= i &amp;lt;= ary.size)가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f0219fb3e0e411dbef15165080033736912f904e" translate="yes" xml:space="preserve">
          <source>In find-minimum mode, method bsearch returns the first element for which the block returns true.</source>
          <target state="translated">최소 찾기 모드에서 메서드 bsearch는 블록이 true를 반환하는 첫 번째 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44542ecff9394ebd371ab97c9922fb4e666d292d" translate="yes" xml:space="preserve">
          <source>In find-minimum mode, the block always returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. The further requirement (though not checked) is that there are no indexes &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; such that:</source>
          <target state="translated">최소 찾기 모드에서 블록은 항상 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 추가 요구 사항 (확인되지는 않았지만)은 다음 과 같은 인덱스 &lt;code&gt;i&lt;/code&gt; 및 &lt;code&gt;j&lt;/code&gt; 가 없다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4c11871d6901ea98cf1dae00a13289fb7f429d20" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;kernel#method-i-clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#method-i-dup&quot;&gt;&lt;code&gt;dup&lt;/code&gt;&lt;/a&gt; may have different semantics in descendant classes. While &lt;a href=&quot;kernel#method-i-clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; is used to duplicate an object, including its internal state, &lt;a href=&quot;object#method-i-dup&quot;&gt;&lt;code&gt;dup&lt;/code&gt;&lt;/a&gt; typically uses the class of the descendant object to create the new instance.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;kernel#method-i-clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;object#method-i-dup&quot;&gt; &lt;code&gt;dup&lt;/code&gt; &lt;/a&gt; 은 하위 클래스에서 다른 의미를 가질 수 있습니다. &lt;a href=&quot;kernel#method-i-clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt; 는 내부 상태를 포함하여 개체를 복제하는 데 사용 되지만 &lt;a href=&quot;object#method-i-dup&quot;&gt; &lt;code&gt;dup&lt;/code&gt; 은&lt;/a&gt; 일반적으로 하위 개체의 클래스를 사용하여 새 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="201bb7f71d0a7221c2c211bb4cf18bec3d0ca551" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;object#method-i-clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#method-i-dup&quot;&gt;&lt;code&gt;dup&lt;/code&gt;&lt;/a&gt; may have different semantics in descendant classes. While &lt;a href=&quot;object#method-i-clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; is used to duplicate an object, including its internal state, &lt;a href=&quot;object#method-i-dup&quot;&gt;&lt;code&gt;dup&lt;/code&gt;&lt;/a&gt; typically uses the class of the descendant object to create the new instance.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;object#method-i-clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;object#method-i-dup&quot;&gt; &lt;code&gt;dup&lt;/code&gt; &lt;/a&gt; 은 하위 클래스에서 다른 의미를 가질 수 있습니다. &lt;a href=&quot;object#method-i-clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt; 는 내부 상태를 포함하여 개체를 복제하는 데 사용 되지만 &lt;a href=&quot;object#method-i-dup&quot;&gt; &lt;code&gt;dup&lt;/code&gt; 은&lt;/a&gt; 일반적으로 하위 개체의 클래스를 사용하여 새 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7e2339f989f0a69b160e2c6b5d3389e9ba00ba57" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;clone&lt;/code&gt; and &lt;code&gt;dup&lt;/code&gt; may have different semantics in descendant classes. While &lt;code&gt;clone&lt;/code&gt; is used to duplicate an object, including its internal state, &lt;code&gt;dup&lt;/code&gt; typically uses the class of the descendant object to create the new instance.</source>
          <target state="translated">일반적으로 &lt;code&gt;clone&lt;/code&gt; 과 &lt;code&gt;dup&lt;/code&gt; 은 하위 클래스에서 다른 의미를 가질 수 있습니다. &lt;code&gt;clone&lt;/code&gt; 은 내부 상태를 포함하여 객체를 복제하는 데 사용 되지만 &lt;code&gt;dup&lt;/code&gt; 은 일반적으로 하위 객체의 클래스를 사용하여 새 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ab721463cf49675b9a753f0421dd0cb74583d9de" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;to_sym&lt;/code&gt; returns the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; corresponding to an object. As &lt;em&gt;sym&lt;/em&gt; is already a symbol, &lt;code&gt;self&lt;/code&gt; is returned in this case.</source>
          <target state="translated">일반적으로 &lt;code&gt;to_sym&lt;/code&gt; 은 객체에 해당 하는 &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; 을&lt;/a&gt; 반환 합니다. 으로 &lt;em&gt;SYM은&lt;/em&gt; 이미 상징, &lt;code&gt;self&lt;/code&gt; 이 경우에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f02c7631c54dca3b3259e8d9044eab5e2e0fc202" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;to_sym&lt;/code&gt; returns the &lt;code&gt;Symbol&lt;/code&gt; corresponding to an object. As &lt;em&gt;sym&lt;/em&gt; is already a symbol, &lt;code&gt;self&lt;/code&gt; is returned in this case.</source>
          <target state="translated">일반적으로 &lt;code&gt;to_sym&lt;/code&gt; 은 객체에 해당 하는 &lt;code&gt;Symbol&lt;/code&gt; 을 반환 합니다. 으로 &lt;em&gt;SYM은&lt;/em&gt; 이미 상징, &lt;code&gt;self&lt;/code&gt; 이 경우에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="aff50fcd3c42c9b65e1b8b5135f8d76a150ff163" translate="yes" xml:space="preserve">
          <source>In in-place-edit mode, this variable holds the extension, otherwise &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">in-place-edit 모드에서이 변수는 확장자를 보유합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0ba10615779c446a37206ac0e69780a8f639b6db" translate="yes" xml:space="preserve">
          <source>In in-place-edit mode, this variable holds the extension, otherwise nil.</source>
          <target state="translated">내부 편집 모드에서이 변수는 확장명을 보유하며, 그렇지 않으면 nil입니다.</target>
        </trans-unit>
        <trans-unit id="edef22c675e67903189ecfc366d256c1740519c3" translate="yes" xml:space="preserve">
          <source>In lambdas, &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt; means exit from this lambda;</source>
          <target state="translated">람다에서 &lt;code&gt;return&lt;/code&gt; 과 &lt;code&gt;break&lt;/code&gt; 는이 람다에서 나가는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e4ecdb244efa23d488d4372b0c5e74267ba7805b" translate="yes" xml:space="preserve">
          <source>In lambdas, &lt;code&gt;return&lt;/code&gt; means exit from this lambda;</source>
          <target state="translated">람다에서 &lt;code&gt;return&lt;/code&gt; 은이 람다에서 나가는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="27a431ee7d1076466fbd913d4ba985a11c5b29a7" translate="yes" xml:space="preserve">
          <source>In lambdas, arguments are treated in the same way as in methods: strict, with &lt;code&gt;ArgumentError&lt;/code&gt; for mismatching argument number, and no additional argument processing;</source>
          <target state="translated">람다에서 인수는 메소드와 동일한 방식으로 처리됩니다. 인수 번호가 일치하지 않으면 &lt;code&gt;ArgumentError&lt;/code&gt; 를 사용하고 추가 인수 처리는 없습니다.</target>
        </trans-unit>
        <trans-unit id="2e4eb6460fac37dc306f88fcb135b62c4bb25c1d" translate="yes" xml:space="preserve">
          <source>In many cases, parenthesis are not necessary when sending a message:</source>
          <target state="translated">많은 경우 메시지를 보낼 때 괄호가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a30ea8ababf13fad0ede56121fd478a5bf738bad" translate="yes" xml:space="preserve">
          <source>In methods like &lt;code&gt;Regexp#match&lt;/code&gt; and &lt;code&gt;String#match&lt;/code&gt; that take an (optional) offset, it matches where the search begins.</source>
          <target state="translated">(선택적) 오프셋을 취하는 &lt;code&gt;Regexp#match&lt;/code&gt; 및 &lt;code&gt;String#match&lt;/code&gt; # match 와 같은 메소드에서는 검색이 시작되는 위치와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="37de0e9c6a9ab30ad9664d339faf13df374d0ba4" translate="yes" xml:space="preserve">
          <source>In methods like &lt;code&gt;String#gsub&lt;/code&gt; and &lt;code&gt;String#scan&lt;/code&gt;, it changes on each iteration. It initially matches the beginning of subject, and in each following iteration it matches where the last match finished.</source>
          <target state="translated">&lt;code&gt;String#gsub&lt;/code&gt; 및 &lt;code&gt;String#scan&lt;/code&gt; 과 같은 메소드에서는 각 반복마다 변경됩니다. 처음에는 주제의 시작과 일치하며, 다음 반복마다 마지막 일치가 완료된 위치와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="2c908066f6dde6854b58d607371f8d627573a9ee" translate="yes" xml:space="preserve">
          <source>In non-lambda procs, &lt;code&gt;break&lt;/code&gt; means exit from the method which the block given for. (and will throw &lt;code&gt;LocalJumpError&lt;/code&gt; if invoked after the method returns);</source>
          <target state="translated">non-lambda procs에서 &lt;code&gt;break&lt;/code&gt; 는 블록이 주어진 메소드에서 나가는 것을 의미합니다. ( 메서드가 반환 된 후 호출되면 &lt;code&gt;LocalJumpError&lt;/code&gt; 가 발생합니다.)</target>
        </trans-unit>
        <trans-unit id="6f9f729b7c1e839891f1f2770cbcbd07ead2e1d2" translate="yes" xml:space="preserve">
          <source>In non-lambda procs, &lt;code&gt;return&lt;/code&gt; means exit from embracing method (and will throw &lt;code&gt;LocalJumpError&lt;/code&gt; if invoked outside the method);</source>
          <target state="translated">non-lambda procs에서 &lt;code&gt;return&lt;/code&gt; 은 포용 메서드에서 나가는 것을 의미 합니다 (메서드 외부에서 호출되면 &lt;code&gt;LocalJumpError&lt;/code&gt; 를 발생시킵니다).</target>
        </trans-unit>
        <trans-unit id="3df0bd35cf154869d89da660a648eb71284ca505" translate="yes" xml:space="preserve">
          <source>In older RubyGems versions, the environment variable GEM_SKIP could be used to skip activation of specified gems, for example to test out changes that haven't been installed yet. Now RubyGems defers to -I and the RUBYLIB environment variable to skip activation of a gem.</source>
          <target state="translated">이전 RubyGems 버전에서는 환경 변수 GEM_SKIP를 사용하여 아직 설치되지 않은 변경 사항을 테스트하는 등 지정된 gem의 활성화를 건너 뛸 수 있습니다. 이제 RubyGems는 -I 및 RUBYLIB 환경 변수를 사용하여 gem의 활성화를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="0113b63472429593b8a15adc42246924dd3ee917" translate="yes" xml:space="preserve">
          <source>In order to create new threads, Ruby provides &lt;a href=&quot;thread#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#method-c-start&quot;&gt;&lt;code&gt;::start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;thread#method-c-fork&quot;&gt;&lt;code&gt;::fork&lt;/code&gt;&lt;/a&gt;. A block must be provided with each of these methods, otherwise a &lt;a href=&quot;threaderror&quot;&gt;&lt;code&gt;ThreadError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">Ruby는 새로운 스레드를 만들기 위해 &lt;a href=&quot;thread#method-c-new&quot;&gt; &lt;code&gt;::new&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;thread#method-c-start&quot;&gt; &lt;code&gt;::start&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;thread#method-c-fork&quot;&gt; &lt;code&gt;::fork&lt;/code&gt; 를 제공&lt;/a&gt; 합니다. 이러한 각 메소드와 함께 블록을 제공해야합니다. 그렇지 않으면 &lt;a href=&quot;threaderror&quot;&gt; &lt;code&gt;ThreadError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="14ff04219b2863d61c2edb516267f301a92f17a2" translate="yes" xml:space="preserve">
          <source>In order to execute the command, one of the &lt;code&gt;exec(2)&lt;/code&gt; system calls are used, so the running command may inherit some of the environment of the original program (including open file descriptors).</source>
          <target state="translated">명령을 실행하기 위해 &lt;code&gt;exec(2)&lt;/code&gt; 시스템 호출 중 하나 가 사용되므로 실행중인 명령은 원래 프로그램의 환경 (열린 파일 디스크립터 포함)의 일부를 상속 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb8c4023eef2d626696863123efce9f9f9b89d33" translate="yes" xml:space="preserve">
          <source>In order to make things robust some OSes implement so-called &amp;ldquo;modular&amp;rdquo; usage. To go through, you have to do a complex build-up of the &lt;code&gt;salt_str&lt;/code&gt; parameter, by hand. Failure in generation of a proper salt string tends not to yield any errors; typos in parameters are normally not detectable.</source>
          <target state="translated">일을 견고하게 만들기 위해 일부 OS는 소위 &quot;모듈 식&quot;사용을 구현합니다. 진행하려면 직접 &lt;code&gt;salt_str&lt;/code&gt; 매개 변수를 복잡하게 빌드해야합니다 . 적절한 솔트 문자열 생성에 실패하면 오류가 발생하지 않는 경향이 있습니다. 매개 변수의 오타는 일반적으로 감지 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="51606b912cc4906ec35e6f90a349287af1b35830" translate="yes" xml:space="preserve">
          <source>In order to make this work, &lt;a href=&quot;sslcontext#attribute-i-verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; must be set to VERIFY_PEER and the server hostname must be given by &lt;a href=&quot;sslsocket#method-i-hostname-3D&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket#hostname=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 작업을 &lt;a href=&quot;sslcontext#attribute-i-verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt; 하려면 verify_mode 를 VERIFY_PEER로 설정하고 &lt;a href=&quot;sslsocket#method-i-hostname-3D&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket#hostname=&lt;/code&gt; &lt;/a&gt; 서버 호스트 이름을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8e6146e43abd97bbbcb617d6c210b4b43ca5cefc" translate="yes" xml:space="preserve">
          <source>In order to use a &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for the proxy you may need to do some extra work beyond &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; parsing if the proxy requires a password:</source>
          <target state="translated">프록시에 &lt;a href=&quot;../../../../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 사용 하려면 프록시에 비밀번호가 필요한 경우 &lt;a href=&quot;../../../../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 구문 분석 이외의 추가 작업이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec7a45f4278b3449958ec4fa5859ddb116ae6eec" translate="yes" xml:space="preserve">
          <source>In order to use a &lt;a href=&quot;../../../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; for the proxy you may need to do some extra work beyond &lt;a href=&quot;../../../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; parsing if the proxy requires a password:</source>
          <target state="translated">용도하기 위해 &lt;a href=&quot;../../../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 프록시 당신은 저쪽에 몇 가지 추가 작업을 수행해야 할 수 있습니다 &lt;a href=&quot;../../../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 프록시에 암호가 필요한 경우 구문 분석 :</target>
        </trans-unit>
        <trans-unit id="705586c5852c02f646e8026dcd9f6f91d8ba42dd" translate="yes" xml:space="preserve">
          <source>In order to use this constructor, you must first require the &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; standard library extension.</source>
          <target state="translated">이 생성자를 사용하려면 먼저 &lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 표준 라이브러리 확장이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="9105888b516af0976d8e5c8eac5c5a1e95e3f9d2" translate="yes" xml:space="preserve">
          <source>In order to use this method you must first require the &lt;a href=&quot;pp&quot;&gt;&lt;code&gt;PP&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">이 방법을 사용하려면 먼저 &lt;a href=&quot;pp&quot;&gt; &lt;code&gt;PP&lt;/code&gt; &lt;/a&gt; 모듈이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="7cc600b7b82df6fa38b6fedc41452a9733dc7dd3" translate="yes" xml:space="preserve">
          <source>In order to use this method, you must require expect:</source>
          <target state="translated">이 방법을 사용하려면 다음을 예상해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e084e06dde919abf85fc49f01e9feb1afc168a2" translate="yes" xml:space="preserve">
          <source>In our case, we're simply returning a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, so next we have the &lt;code&gt;:string_literal&lt;/code&gt; expression.</source>
          <target state="translated">이 경우 단순히 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 을&lt;/a&gt; 반환 하므로 다음에 &lt;code&gt;:string_literal&lt;/code&gt; 표현식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f3fd237d5c90a7e32a67f2add5671f77f69403b" translate="yes" xml:space="preserve">
          <source>In previous versions of Ruby you would need to require 'net/https' to use HTTPS. This is no longer true.</source>
          <target state="translated">이전 버전의 Ruby에서는 HTTPS를 사용하려면 'net / https'가 필요합니다. 이것은 더 이상 사실이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b9db4b8c3a18224f6e5da574eb98231c40132c0c" translate="yes" xml:space="preserve">
          <source>In principle, &lt;code&gt;n[i]&lt;/code&gt; is equivalent to &lt;code&gt;(n &amp;gt;&amp;gt; i) &amp;amp; 1&lt;/code&gt;. Thus, any negative index always returns zero:</source>
          <target state="translated">원칙적으로 &lt;code&gt;n[i]&lt;/code&gt; 는 &lt;code&gt;(n &amp;gt;&amp;gt; i) &amp;amp; 1&lt;/code&gt; . 따라서 음수 인덱스는 항상 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="068e5253b78fb12fa4fc4047aaedf5f0c9267189" translate="yes" xml:space="preserve">
          <source>In regular procs, &lt;code&gt;return&lt;/code&gt; means exit from embracing method (and will throw &lt;code&gt;LocalJumpError&lt;/code&gt; if invoked outside the method);</source>
          <target state="translated">일반적인 procs에서 &lt;code&gt;return&lt;/code&gt; 은 수용 메소드에서 빠져 나가는 것을 의미 합니다 (메서드 외부에서 호출 된 경우 &lt;code&gt;LocalJumpError&lt;/code&gt; 가 발생 함).</target>
        </trans-unit>
        <trans-unit id="5ccb941e39dc885660c6eec480d50b87e08c9ce1" translate="yes" xml:space="preserve">
          <source>In ruby you send a message to an object like this:</source>
          <target state="translated">루비에서는 다음과 같이 객체에 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="9757e3b7a0d009c3d8f52b2081caa3173cdad9e0" translate="yes" xml:space="preserve">
          <source>In scanf for Ruby, all of these specifiers scan for an optionally signed integer, rather than for an unsigned integer like their C counterparts.</source>
          <target state="translated">Ruby의 scanf에서 이러한 모든 지정자는 C 대응 항목과 같은 부호없는 정수가 아니라 선택적으로 부호있는 정수를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="b64954e5abdc96646bdcd911316ca889df0d9f85" translate="yes" xml:space="preserve">
          <source>In server mode, returns the list set by &lt;a href=&quot;sslcontext#attribute-i-client_ca&quot;&gt;&lt;code&gt;SSLContext#client_ca=&lt;/code&gt;&lt;/a&gt;. In client mode, returns the list of client CAs sent from the server.</source>
          <target state="translated">서버 모드에서 &lt;a href=&quot;sslcontext#attribute-i-client_ca&quot;&gt; &lt;code&gt;SSLContext#client_ca=&lt;/code&gt; &lt;/a&gt; 설정된 목록을 리턴합니다 . 클라이언트 모드에서는 서버에서 보낸 클라이언트 CA 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2af9fb62d17f6e2cef8b9298275a232fd3738452" translate="yes" xml:space="preserve">
          <source>In short, it's a 0-based index into bytes of the string.</source>
          <target state="translated">즉, 문자열의 바이트 단위의 0 기반 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="5d62ab2ebb7ed54ab0d834a1b5993e15b1693ce1" translate="yes" xml:space="preserve">
          <source>In short, it's a 0-based index into the string.</source>
          <target state="translated">요컨대, 문자열에 대한 0 기반 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="2a62a0112168df82ad567b659152ea29fa7869b3" translate="yes" xml:space="preserve">
          <source>In some cases you want to customize how a specified hook is going to be invoked. You can do that by overwriting the class method prepare_for_invocation. The class method must necessarily return a klass and an optional command.</source>
          <target state="translated">경우에 따라 지정된 후크가 호출되는 방법을 사용자 정의하려고합니다. Prepare_for_invocation 클래스 메소드를 겹쳐 써서이를 수행 할 수 있습니다. 클래스 메소드는 반드시 klass 및 선택적 명령을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="27e518a0ec2d16be518ecc22bc4e89e3e68a9409" translate="yes" xml:space="preserve">
          <source>In some cases, it is useful to document which methods are related to the current method. For example, documentation for &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;Hash#[]&lt;/code&gt;&lt;/a&gt; might mention &lt;a href=&quot;hash#method-i-fetch&quot;&gt;&lt;code&gt;Hash#fetch&lt;/code&gt;&lt;/a&gt; as a related method, and &lt;a href=&quot;hash#method-i-merge&quot;&gt;&lt;code&gt;Hash#merge&lt;/code&gt;&lt;/a&gt; might mention merge! as a related method. Consider which methods may be related to the current method, and if you think the reader would benefit it, at the end of the method documentation, add a line starting with &amp;ldquo;Related: &amp;rdquo; (e.g. &amp;ldquo;Related: fetch&amp;rdquo;). Don't list more than three related methods. If you think more than three methods are related, pick the three you think are most important and list those three.</source>
          <target state="translated">어떤 경우에는 현재 방법과 관련된 방법을 문서화하는 것이 유용합니다. 예를 들어,에 대한 문서 &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;Hash#[]&lt;/code&gt; &lt;/a&gt; 말할 수있는 &lt;a href=&quot;hash#method-i-fetch&quot;&gt; &lt;code&gt;Hash#fetch&lt;/code&gt; &lt;/a&gt; 관련 방법으로, 그리고 &lt;a href=&quot;hash#method-i-merge&quot;&gt; &lt;code&gt;Hash#merge&lt;/code&gt; &lt;/a&gt; 병합을 말할 수있다! 관련 방법으로. 어떤 방법이 현재 방법과 관련 될 수 있는지 고려하고 독자가 도움이 될 것이라고 생각하는 경우 방법 문서의 끝에 &quot;관련 :&quot;으로 시작하는 줄을 추가하십시오 (예 : &quot;관련 : 가져 오기&quot;). 관련 방법을 세 개 이상 나열하지 마십시오. 세 가지 이상의 방법이 관련되어 있다고 생각되면 가장 중요하다고 생각하는 세 가지 방법을 선택하고 그 세 가지를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="66b5f1a927c06c9ea2b6e247133071a0110f41af" translate="yes" xml:space="preserve">
          <source>In some cases, you want to invoke a thor class if some option is true or false. This is automatically handled by invoke_from_option. Then the option name is used to invoke the generator.</source>
          <target state="translated">경우에 따라 일부 옵션이 true 또는 false 인 경우 thor 클래스를 호출하려고합니다. 이것은 invoke_from_option에 의해 자동으로 처리됩니다. 그런 다음 옵션 이름을 사용하여 생성기를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="2a33f6315e72687235af76aa01faf429929e9495" translate="yes" xml:space="preserve">
          <source>In subclasses, returns &lt;code&gt;klass.new(self, *args, &amp;amp;block)&lt;/code&gt; unless overridden.</source>
          <target state="translated">서브 클래스에서 재정의되지 않는 한 &lt;code&gt;klass.new(self, *args, &amp;amp;block)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c3477f9e1acb1f2504d117e3b73ceeef1c554d6e" translate="yes" xml:space="preserve">
          <source>In subclasses, returns klass.new(self, *args, &amp;amp;block) unless overridden.</source>
          <target state="translated">서브 클래스에서 재정의되지 않는 한 klass.new (self, * args, &amp;amp; block)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8de51f425e8b2af1e95252f440ad985c2f2dfb2f" translate="yes" xml:space="preserve">
          <source>In that case data would be lost but often it's the case that the array only holds one value, especially when unpacking binary data. For instance:</source>
          <target state="translated">이 경우 데이터가 손실되지만 특히 이진 데이터의 압축을 풀 때 배열에 하나의 값만있는 경우가 많습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="7cf837eaf5cd5e1530cdb14e5929ea22e17f374b" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Xs&lt;/code&gt; class below both &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; and &lt;code&gt;succ&lt;/code&gt; are implemented so &lt;code&gt;Xs&lt;/code&gt; can be used to construct ranges. Note that the &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; module is included so the &lt;code&gt;==&lt;/code&gt; method is defined in terms of &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">아래 의 &lt;code&gt;Xs&lt;/code&gt; 클래스에서 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 와 &lt;code&gt;succ&lt;/code&gt; 가 모두 구현되므로 &lt;code&gt;Xs&lt;/code&gt; 를 사용하여 범위를 구성 할 수 있습니다. 점을 유의 &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 소위 모듈을 포함 &lt;code&gt;==&lt;/code&gt; 의 방법은에 의해 정의된다 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4037d3b2d16639feb9ae2f9ffd7e7ce5b7729a57" translate="yes" xml:space="preserve">
          <source>In the above example, [#&amp;lt;Encoding:ISO-8859-1&amp;gt;, #&amp;lt;Encoding:UTF-8&amp;gt;] means a converter from ISO-8859-1 to UTF-8. &amp;ldquo;crlf_newline&amp;rdquo; means newline converter from LF to CRLF.</source>
          <target state="translated">위의 예에서 [# &amp;lt;Encoding : ISO-8859-1&amp;gt;, # &amp;lt;Encoding : UTF-8&amp;gt;]은 ISO-8859-1에서 UTF-8 로의 변환기를 의미합니다. &quot;crlf_newline&quot;은 LF에서 CRLF 로의 개행 변환기를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6a20b1178c9ec9f85ca312d7640cbf5620da04f5" translate="yes" xml:space="preserve">
          <source>In the above example, the on condition is &lt;code&gt;n==2&lt;/code&gt;. The flip-flop is initially off (false) for 0 and 1, but becomes on (true) for 2 and remains on through 8. After 8 it turns off and remains off for 9 and 10.</source>
          <target state="translated">위 예제에서 on 조건은 &lt;code&gt;n==2&lt;/code&gt; 입니다. 플립 플롭은 0과 1에 대해 처음에는 꺼져 있지만 (false) 2에 대해서는 켜져 있고 (true) 8을 통해 유지됩니다. 8 후에는 꺼지고 9와 10에 대해서는 꺼져 있습니다.</target>
        </trans-unit>
        <trans-unit id="becb06e80038ece8d463b335da7f415455ce611e" translate="yes" xml:space="preserve">
          <source>In the above example, the standard output in the child process is not specified. So it is inherited from the parent process.</source>
          <target state="translated">위의 예에서 하위 프로세스의 표준 출력은 지정되지 않았습니다. 따라서 부모 프로세스에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="d736d9f423693191b405c11ad1661bb5e7f81740" translate="yes" xml:space="preserve">
          <source>In the block form these same values will be yielded to the block:</source>
          <target state="translated">블록 형태에서 이와 동일한 값이 블록에 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="15279567e6cc3a88bd2465220268ba782522aaa4" translate="yes" xml:space="preserve">
          <source>In the block form, the current match string is passed in as a parameter, and variables such as &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$`&lt;/code&gt;, &lt;code&gt;$&amp;amp;&lt;/code&gt;, and &lt;code&gt;$'&lt;/code&gt; will be set appropriately. (See regexp.rdoc for details.) The value returned by the block will be substituted for the match on each call.</source>
          <target state="translated">블록 형식에서는 현재 일치 문자열이 매개 변수로 전달되고 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; 및 &lt;code&gt;$'&lt;/code&gt; 와 같은 변수 가 적절하게 설정됩니다. (자세한 내용은 regexp.rdoc를 참조하십시오.) 블록에 의해 반환 된 값은 각 호출의 일치 항목으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="269b1c3b415dbc07339208bc5640240ff1f9594b" translate="yes" xml:space="preserve">
          <source>In the block form, the current match string is passed in as a parameter, and variables such as &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$`&lt;/code&gt;, &lt;code&gt;$&amp;amp;&lt;/code&gt;, and &lt;code&gt;$'&lt;/code&gt; will be set appropriately. The value returned by the block will be substituted for the match on each call.</source>
          <target state="translated">블록 형식에서 현재 일치 문자열은 매개 변수로 전달되며 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; 및 &lt;code&gt;$'&lt;/code&gt; 와 같은 변수 가 적절하게 설정됩니다. 블록이 반환 한 값은 각 호출의 일치 항목으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="0cf645df5b1b18b74c75fcddd940d860418c7b00" translate="yes" xml:space="preserve">
          <source>In the block form, this is the &lt;a href=&quot;logger#attribute-i-progname&quot;&gt;&lt;code&gt;progname&lt;/code&gt;&lt;/a&gt; to use in the log message. The default can be set with &lt;a href=&quot;logger#attribute-i-progname&quot;&gt;&lt;code&gt;progname=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">블록 형식에서 이것은 로그 메시지에 사용할 &lt;a href=&quot;logger#attribute-i-progname&quot;&gt; &lt;code&gt;progname&lt;/code&gt; &lt;/a&gt; 입니다. 기본값은 &lt;a href=&quot;logger#attribute-i-progname&quot;&gt; &lt;code&gt;progname=&lt;/code&gt; &lt;/a&gt; 으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fc0802bf97a5313e4fdeb6b7439dacbe1230568" translate="yes" xml:space="preserve">
          <source>In the block form, yields an array of two elements (&lt;code&gt;master_io, slave_file&lt;/code&gt;) and the value of the block is returned from &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">블록 형식에서는 두 요소 ( &lt;code&gt;master_io, slave_file&lt;/code&gt; ) 의 배열을 생성하고 블록 의 값은 &lt;code&gt;open&lt;/code&gt; 에서 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="ccc7e3311a4f040f3f4fb79de705b028ac2c5121" translate="yes" xml:space="preserve">
          <source>In the block form, yields two arguments &lt;code&gt;master_io, slave_file&lt;/code&gt; and the value of the block is returned from &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">블록 형식에서 두 개의 인수 &lt;code&gt;master_io, slave_file&lt;/code&gt; 생성하고 블록 의 값은 &lt;code&gt;open&lt;/code&gt; 에서 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="cefdb6ed0d61476cdddd62263e448e171ff890a3" translate="yes" xml:space="preserve">
          <source>In the case no backtrace has been set, &lt;code&gt;nil&lt;/code&gt; is returned</source>
          <target state="translated">역 추적이 설정되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f3d18cb9ff6029129c75a99cf6d447fe08ce32df" translate="yes" xml:space="preserve">
          <source>In the cases where method can return multiple different types, separate the types with &amp;ldquo;or&amp;rdquo;. If the method can return any type, use &amp;ldquo;object&amp;rdquo;. If the method returns the receiver, use &amp;ldquo;self&amp;rdquo;.</source>
          <target state="translated">메서드가 여러 다른 유형을 반환 할 수있는 경우 &quot;or&quot;로 유형을 구분합니다. 메서드가 모든 유형을 반환 할 수있는 경우 &quot;object&quot;를 사용합니다. 메서드가 수신자를 반환하면 &quot;self&quot;를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="60f4decb1f3102551b4a4f4f588bbc8a013112b0" translate="yes" xml:space="preserve">
          <source>In the context of execution taking place within the main thread of a dRuby server (typically, as a result of a remote call on the server or one of its objects), the current server is that server. Otherwise, the current server is the primary server.</source>
          <target state="translated">dRuby 서버의 주 스레드 내에서 실행 컨텍스트에서 (일반적으로 서버 또는 해당 오브젝트 중 하나에 대한 원격 호출의 결과로) 현재 서버는 해당 서버입니다. 그렇지 않으면 현재 서버가 기본 서버입니다.</target>
        </trans-unit>
        <trans-unit id="1d3fa3fbe9ff68088d50227092b21c5b3f4ba02e" translate="yes" xml:space="preserve">
          <source>In the core:</source>
          <target state="translated">핵심 :</target>
        </trans-unit>
        <trans-unit id="bf71d299ff0542024258ba172ef2e5f8293e7420" translate="yes" xml:space="preserve">
          <source>In the default mixed mode or row mode, iteration is the standard row major walking of rows. In column mode, iteration will &lt;code&gt;yield&lt;/code&gt; two element tuples containing the column name and an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of values for that column.</source>
          <target state="translated">기본 혼합 모드 또는 행 모드에서 반복은 표준 행 주요 행 걷기입니다. 열 모드에서 반복하면 열 이름과 해당 열의 값 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 포함하는 두 개의 요소 튜플 이 &lt;code&gt;yield&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="54ed7998e03a6ce75bb3502b06e0793ab7e9d844" translate="yes" xml:space="preserve">
          <source>In the default mixed mode, this method assigns rows for index access and columns for header access. You can force the index association by first calling &lt;a href=&quot;table#method-i-by_col&quot;&gt;&lt;code&gt;by_col&lt;/code&gt;&lt;/a&gt;!() or &lt;a href=&quot;table#method-i-by_row&quot;&gt;&lt;code&gt;by_row&lt;/code&gt;&lt;/a&gt;!().</source>
          <target state="translated">기본 혼합 모드에서이 방법은 인덱스 액세스 행과 헤더 액세스 열을 할당합니다. &lt;a href=&quot;table#method-i-by_col&quot;&gt; &lt;code&gt;by_col&lt;/code&gt; &lt;/a&gt; ! () 또는 &lt;a href=&quot;table#method-i-by_row&quot;&gt; &lt;code&gt;by_row&lt;/code&gt; &lt;/a&gt; ! () 를 먼저 호출하여 인덱스 연관을 강제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="159801d94a90c2a69847d98f77e94686d4f0b03c" translate="yes" xml:space="preserve">
          <source>In the default mixed mode, this method returns rows for index access and columns for header access. You can force the index association by first calling &lt;a href=&quot;table#method-i-by_col&quot;&gt;&lt;code&gt;by_col&lt;/code&gt;&lt;/a&gt;!() or &lt;a href=&quot;table#method-i-by_row&quot;&gt;&lt;code&gt;by_row&lt;/code&gt;&lt;/a&gt;!().</source>
          <target state="translated">기본 혼합 모드에서이 메소드는 색인 액세스 행과 헤더 액세스 열을 리턴합니다. &lt;a href=&quot;table#method-i-by_col&quot;&gt; &lt;code&gt;by_col&lt;/code&gt; &lt;/a&gt; ! () 또는 &lt;a href=&quot;table#method-i-by_row&quot;&gt; &lt;code&gt;by_row&lt;/code&gt; &lt;/a&gt; ! () 를 먼저 호출하여 인덱스 연관을 강제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5660cfe3a3b4893874f23f245d4f9122434e294" translate="yes" xml:space="preserve">
          <source>In the deprecated second form, a generated &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; iterates over the given object using the given method with the given arguments passed.</source>
          <target state="translated">사용되지 않는 두 번째 형식에서 생성 된 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 는 지정된 인수가 전달 된 지정된 메서드를 사용하여 지정된 개체에 대해 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="0ddf1d2754a61b775d1e93f0cc9810e40ba5914c" translate="yes" xml:space="preserve">
          <source>In the description of &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; methods, &lt;em&gt;permission bits&lt;/em&gt; are a platform-specific set of bits that indicate permissions of a file. On Unix-based systems, permissions are viewed as a set of three octets, for the owner, the group, and the rest of the world. For each of these entities, permissions may be set to read, write, or execute the file:</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 메소드 설명 에서 &lt;em&gt;권한 비트&lt;/em&gt; 는 파일의 권한을 나타내는 플랫폼 별 비트 세트입니다. Unix 기반 시스템에서 권한은 소유자, 그룹 및 기타 세계에 대한 세 개의 옥텟 세트로 간주됩니다. 이러한 각 엔티티에 대해 파일을 읽거나 쓰거나 실행하도록 권한이 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f7a79a79a0b859985e8c899e8f78fd18c135040" translate="yes" xml:space="preserve">
          <source>In the descriptions of Object's methods, the parameter &lt;em&gt;symbol&lt;/em&gt; refers to a symbol, which is either a quoted string or a &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; (such as &lt;code&gt;:name&lt;/code&gt;).</source>
          <target state="translated">Object의 메소드 설명에서 매개 변수 &lt;em&gt;symbol&lt;/em&gt; 은 인용 된 문자열 또는 &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; (예 &lt;code&gt;:name&lt;/code&gt; ) 인 &lt;em&gt;기호를&lt;/em&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="bd125bd13a97fbcc46f6c54fc2dac4044f354ed6" translate="yes" xml:space="preserve">
          <source>In the descriptions that follow, the parameter &lt;em&gt;sym&lt;/em&gt; refers to a symbol, which is either a quoted string or a &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; (such as &lt;code&gt;:name&lt;/code&gt;).</source>
          <target state="translated">다음 설명에서 &lt;em&gt;sym&lt;/em&gt; 매개 변수 는 따옴표로 묶인 문자열 또는 &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; (예 &lt;code&gt;:name&lt;/code&gt; ) 인 기호를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="3e5c0ea730c2dd16b3194243cbc88558a18e9e7f" translate="yes" xml:space="preserve">
          <source>In the descriptions that follow, the parameter &lt;em&gt;sym&lt;/em&gt; refers to a symbol, which is either a quoted string or a &lt;code&gt;Symbol&lt;/code&gt; (such as &lt;code&gt;:name&lt;/code&gt;).</source>
          <target state="translated">다음 설명에서 &lt;em&gt;sym&lt;/em&gt; 매개 변수 는 따옴표로 묶인 문자열 또는 &lt;code&gt;Symbol&lt;/code&gt; (예 &lt;code&gt;:name&lt;/code&gt; ) 인 &lt;em&gt;기호를&lt;/em&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="75a521c545ef7f9ac3ef36b1f4231c65b227cfea" translate="yes" xml:space="preserve">
          <source>In the example below, the two processes close the ends of the pipe that they are not using. This is not just a cosmetic nicety. The read end of a pipe will not generate an end of file condition if there are any writers with the pipe still open. In the case of the parent process, the &lt;code&gt;rd.read&lt;/code&gt; will never return if it does not first issue a &lt;code&gt;wr.close&lt;/code&gt;.</source>
          <target state="translated">아래 예에서 두 프로세스는 사용하지 않는 파이프의 끝을 닫습니다. 이것은 단지 미용 적 멋쟁이가 아닙니다. 파이프가 열려있는 기록기가있는 경우 파이프의 읽기 끝은 파일 끝 조건을 생성하지 않습니다. 부모 프로세스의 경우, &lt;code&gt;rd.read&lt;/code&gt; 는 이 처음 발급하지 않는 경우 반환하지 않습니다 &lt;code&gt;wr.close&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="0ed45b9963635b20ad975bb809346446b0b14fcb" translate="yes" xml:space="preserve">
          <source>In the first form, creates a hard link &lt;code&gt;link&lt;/code&gt; which points to &lt;code&gt;target&lt;/code&gt;. If &lt;code&gt;link&lt;/code&gt; already exists, raises Errno::EEXIST. But if the :force option is set, overwrites &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="translated">첫 번째 양식에서는 &lt;code&gt;target&lt;/code&gt; 을 가리키는 하드 링크 &lt;code&gt;link&lt;/code&gt; 를 만듭니다 . 경우 &lt;code&gt;link&lt;/code&gt; 이미 존재, errno를 :: EEXIST를 발생시킵니다. 그러나 : force 옵션이 설정된 경우 &lt;code&gt;link&lt;/code&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="632b7edc4d8a7b2323d88803edaedbc85ac8d023" translate="yes" xml:space="preserve">
          <source>In the first form, creates a hard link &lt;code&gt;link&lt;/code&gt; which points to &lt;code&gt;target&lt;/code&gt;. If &lt;code&gt;link&lt;/code&gt; already exists, raises Errno::EEXIST. But if the &lt;code&gt;force&lt;/code&gt; option is set, overwrites &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="translated">첫 번째 양식에서는 &lt;code&gt;target&lt;/code&gt; 을 가리키는 하드 링크 &lt;code&gt;link&lt;/code&gt; 를 만듭니다 . &lt;code&gt;link&lt;/code&gt; 이미있는 경우 Errno :: EEXIST를 발생시킵니다. 그러나 &lt;code&gt;force&lt;/code&gt; 옵션이 설정되면 &lt;code&gt;link&lt;/code&gt; 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="9b03594ac769ce2b90c1c8575105dd04b91f57a8" translate="yes" xml:space="preserve">
          <source>In the first form, creates a symbolic link &lt;code&gt;link&lt;/code&gt; which points to &lt;code&gt;target&lt;/code&gt;. If &lt;code&gt;link&lt;/code&gt; already exists, raises Errno::EEXIST. But if the :force option is set, overwrites &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="translated">첫 번째 양식에서 &lt;code&gt;target&lt;/code&gt; 을 가리키는 기호 링크 &lt;code&gt;link&lt;/code&gt; 를 작성하십시오 . 경우 &lt;code&gt;link&lt;/code&gt; 이미 존재, errno를 :: EEXIST를 발생시킵니다. 그러나 : force 옵션이 설정된 경우 &lt;code&gt;link&lt;/code&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="769bd4c6145dd1a34e64fbcbef3c7c253197f2cc" translate="yes" xml:space="preserve">
          <source>In the first form, creates a symbolic link &lt;code&gt;link&lt;/code&gt; which points to &lt;code&gt;target&lt;/code&gt;. If &lt;code&gt;link&lt;/code&gt; already exists, raises Errno::EEXIST. But if the &lt;code&gt;force&lt;/code&gt; option is set, overwrites &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="translated">첫 번째 양식에서는 &lt;code&gt;target&lt;/code&gt; 을 가리키는 심볼릭 링크 &lt;code&gt;link&lt;/code&gt; 를 만듭니다 . &lt;code&gt;link&lt;/code&gt; 이미있는 경우 Errno :: EEXIST를 발생시킵니다. 그러나 &lt;code&gt;force&lt;/code&gt; 옵션이 설정되면 &lt;code&gt;link&lt;/code&gt; 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="69ce3c7f9fb9799e190408ac862355a4bdd5a7d0" translate="yes" xml:space="preserve">
          <source>In the first form, if no arguments are sent, the new array will be empty. When a &lt;code&gt;size&lt;/code&gt; and an optional &lt;code&gt;default&lt;/code&gt; are sent, an array is created with &lt;code&gt;size&lt;/code&gt; copies of &lt;code&gt;default&lt;/code&gt;. Take notice that all elements will reference the same object &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">첫 번째 형식에서 인수가 전송되지 않으면 새 배열이 비어 있습니다. 때 &lt;code&gt;size&lt;/code&gt; 와 옵션 &lt;code&gt;default&lt;/code&gt; 전송됩니다, 배열이 만들어집니다 &lt;code&gt;size&lt;/code&gt; 의 사본 &lt;code&gt;default&lt;/code&gt; . 모든 요소는 동일한 객체 &lt;code&gt;default&lt;/code&gt; 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="cb07d4cd862333a14906d6bbd44299102103dd24" translate="yes" xml:space="preserve">
          <source>In the first form, iteration is defined by the given block, in which a &amp;ldquo;yielder&amp;rdquo; object, given as block parameter, can be used to yield a value by calling the &lt;code&gt;yield&lt;/code&gt; method (aliased as +&amp;lt;&amp;lt;+):</source>
          <target state="translated">첫 번째 형태에서, 반복은 주어진 블록에 의해 정의되며, 블록 매개 변수로 주어진&amp;ldquo;yielder&amp;rdquo;객체는 &lt;code&gt;yield&lt;/code&gt; 메소드 를 호출하여 값을 산출하는데 사용될 수 있습니다 (+ &amp;lt;&amp;lt; +).</target>
        </trans-unit>
        <trans-unit id="cd061118e0d9bf5529fd6040f08cc0fa7ffb3942" translate="yes" xml:space="preserve">
          <source>In the first form, iteration is defined by the given block, in which a &amp;ldquo;yielder&amp;rdquo; object, given as block parameter, can be used to yield a value by calling the &lt;code&gt;yield&lt;/code&gt; method (aliased as &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;):</source>
          <target state="translated">첫 번째 형식에서 반복은 주어진 블록에 의해 정의되며, 여기서 블록 매개 변수로 지정된 &quot;yielder&quot;객체를 사용하여 &lt;code&gt;yield&lt;/code&gt; 메서드 를 호출하여 값을 생성 할 수 있습니다 ( &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 으로 별칭 지정 ).</target>
        </trans-unit>
        <trans-unit id="10efc91d10ba619f159e4bdc6b228c792495737a" translate="yes" xml:space="preserve">
          <source>In the first form, returns an array of the names of all constants accessible from the point of call. This list includes the names of all modules and classes defined in the global scope.</source>
          <target state="translated">첫 번째 형식에서는 호출 시점에서 액세스 할 수있는 모든 상수의 이름 배열을 반환합니다. 이 목록에는 전역 범위에 정의 된 모든 모듈 및 클래스의 이름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ff9867e8e645e71f4ce697d24e6740347a560ab7" translate="yes" xml:space="preserve">
          <source>In the first form, the string is taken as a command line that is subject to shell expansion before being executed.</source>
          <target state="translated">첫 번째 형태에서, 문자열은 실행되기 전에 쉘 확장의 대상이되는 명령 행으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="412bc79cb6e64bf86e8d6136c13f1fe471dd7175" translate="yes" xml:space="preserve">
          <source>In the first part of the &lt;code&gt;timeout&lt;/code&gt; block, we can rely on &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; being ignored. Then in the &lt;code&gt;Timeout::Error =&amp;gt; :on_blocking&lt;/code&gt; block, any operation that will block the calling thread is susceptible to a &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; exception being raised.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 블록 의 첫 번째 부분 에서 &lt;a href=&quot;timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 가 무시되는 것에 의존 할 수 있습니다 . 그런 다음 &lt;code&gt;Timeout::Error =&amp;gt; :on_blocking&lt;/code&gt; 블록에서 호출 스레드를 차단하는 모든 작업은 &lt;a href=&quot;timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 예외가 발생 하기 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="172c99cdb9bba51400f26f4f84a80b8a72027c67" translate="yes" xml:space="preserve">
          <source>In the following example a UTF-8 encoded string &amp;ldquo;Ru00E9sumu00E9&amp;rdquo; is transcoded for output to ISO-8859-1 encoding, then read back in and transcoded to UTF-8:</source>
          <target state="translated">다음 예에서 UTF-8로 인코딩 된 문자열 &quot;Ru00E9sumu00E9&quot;는 ISO-8859-1 인코딩으로 출력되도록 트랜스 코딩 된 다음 다시 읽고 UTF-8로 트랜스 코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="b0cc3892462968575481d28df470601f51227ee5" translate="yes" xml:space="preserve">
          <source>In the following sections any place &amp;ldquo;variable&amp;rdquo; is used an assignment method, instance, class or global will also work:</source>
          <target state="translated">다음 섹션에서는 &quot;가변&quot;이 할당 방법, 인스턴스, 클래스 또는 전역에서도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="78d31baee493517afba9b9b46a64f3e1d005eea8" translate="yes" xml:space="preserve">
          <source>In the former case, the following are the valid formats that will be recognized: &amp;ldquo;address&amp;rdquo;, &amp;ldquo;address/prefixlen&amp;rdquo; and &amp;ldquo;address/mask&amp;rdquo;, where IPv6 address may be enclosed in square brackets (`[' and `]'). If a prefixlen or a mask is specified, it returns a masked IP address. Although the address family is determined automatically from a specified string, you can specify one explicitly by the optional second argument.</source>
          <target state="translated">전자의 경우 인식 할 수있는 유효한 형식은 &quot;주소&quot;, &quot;주소 / 접두사&quot;및 &quot;주소 / 마스크&quot;입니다. 여기서 IPv6 주소는 대괄호로 묶을 수 있습니다 (`[ '및`]') . 접두사 또는 마스크가 지정된 경우 마스크 된 IP 주소를 반환합니다. 주소 패밀리는 지정된 문자열에서 자동으로 결정되지만 선택적 두 번째 인수로 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a9ca425aef9125c35477148129b25734b876625" translate="yes" xml:space="preserve">
          <source>In the last form, an array of the given size is created. Each element in this array is created by passing the element's index to the given block and storing the return value.</source>
          <target state="translated">마지막 양식에서 주어진 크기의 배열이 작성됩니다. 이 배열의 각 요소는 요소의 색인을 주어진 블록에 전달하고 반환 값을 저장하여 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4900230152f444714ef958ca415a3dd6742710d4" translate="yes" xml:space="preserve">
          <source>In the latter case, the method description includes the &amp;ldquo;owner&amp;rdquo; of the original method (&lt;code&gt;Enumerable&lt;/code&gt; module, which is included into &lt;code&gt;Range&lt;/code&gt;).</source>
          <target state="translated">후자의 경우, 방법 설명에는 원래 방법의 &quot;소유자&quot;( &lt;code&gt;Range&lt;/code&gt; 포함 된 &lt;code&gt;Enumerable&lt;/code&gt; 모듈)가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="f50685aa73751a911a16a0f87d4b864b302453b4" translate="yes" xml:space="preserve">
          <source>In the method descriptions that follow, a &amp;ldquo;member&amp;rdquo; parameter refers to a struct member which is either a quoted string (&lt;code&gt;&quot;name&quot;&lt;/code&gt;) or a &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;:name&lt;/code&gt;).</source>
          <target state="translated">다음의 메소드 설명에서 &quot;member&quot;매개 변수는 인용 된 문자열 ( &lt;code&gt;&quot;name&quot;&lt;/code&gt; ) 또는 &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;:name&lt;/code&gt; ) 인 구조체 멤버를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d4caac577d93b61c2fdc1d825ba719051d59b1dd" translate="yes" xml:space="preserve">
          <source>In the next example when a reference is made to an undefined constant, it attempts to load a file whose name is the lowercase version of the constant (thus class &lt;code&gt;Fred&lt;/code&gt; is assumed to be in file &lt;code&gt;fred.rb&lt;/code&gt;). If found, it returns the loaded class. It therefore implements an autoload feature similar to &lt;a href=&quot;kernel#method-i-autoload&quot;&gt;&lt;code&gt;Kernel#autoload&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;module#method-i-autoload&quot;&gt;&lt;code&gt;Module#autoload&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제에서는 정의되지 않은 상수를 참조 할 때 이름이 상수의 소문자 버전 인 파일을로드하려고 시도합니다 (따라서 &lt;code&gt;Fred&lt;/code&gt; 클래스 는 &lt;code&gt;fred.rb&lt;/code&gt; 파일에 있다고 가정 ). 발견되면로드 된 클래스를 리턴합니다. 따라서 &lt;a href=&quot;kernel#method-i-autoload&quot;&gt; &lt;code&gt;Kernel#autoload&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;module#method-i-autoload&quot;&gt; &lt;code&gt;Module#autoload&lt;/code&gt; &lt;/a&gt; 와 유사한 자동로드 기능을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="67e68aa29a11604abd82eb19326a9919e9a827cb" translate="yes" xml:space="preserve">
          <source>In the next example, &lt;a href=&quot;process#method-c-detach&quot;&gt;&lt;code&gt;Process::detach&lt;/code&gt;&lt;/a&gt; is used to reap the child automatically.</source>
          <target state="translated">다음 예에서는 &lt;a href=&quot;process#method-c-detach&quot;&gt; &lt;code&gt;Process::detach&lt;/code&gt; &lt;/a&gt; 를 사용하여 자식을 자동으로 수확합니다.</target>
        </trans-unit>
        <trans-unit id="a71b4e7e0d724441f5529fdf4c79ef80c7e91dd7" translate="yes" xml:space="preserve">
          <source>In the next example, &lt;code&gt;Process::detach&lt;/code&gt; is used to reap the child automatically.</source>
          <target state="translated">다음 예에서 &lt;code&gt;Process::detach&lt;/code&gt; 는 자식을 자동으로 수확하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a0e81558b3ef496be7c5ca155d585a41d5a47f66" translate="yes" xml:space="preserve">
          <source>In the next example, we will guard from the &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; exception. This will help prevent from leaking resources when &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; exceptions occur during normal ensure clause. For this example we use the help of the standard library &lt;a href=&quot;timeout&quot;&gt;&lt;code&gt;Timeout&lt;/code&gt;&lt;/a&gt;, from lib/timeout.rb</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 예외를 방지합니다. 이렇게하면 정상적인 verify 절 동안 &lt;a href=&quot;timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 예외가 발생할 때 리소스가 누출되는 것을 방지 할 수 있습니다. 이 예제 에서는 lib / timeout.rb 의 표준 라이브러리 &lt;a href=&quot;timeout&quot;&gt; &lt;code&gt;Timeout&lt;/code&gt; &lt;/a&gt; 도움말을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="af95b1e1f3a1a79dd087f3bbf706b430b36823f4" translate="yes" xml:space="preserve">
          <source>In the non-block form this returns an array of size three, &lt;code&gt;[r, w, pid]&lt;/code&gt;.</source>
          <target state="translated">비 블록 형태에서 이것은 크기 3, &lt;code&gt;[r, w, pid]&lt;/code&gt; 의 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="95f9fcfb7f1b2de3616cb65198408e339e082a7c" translate="yes" xml:space="preserve">
          <source>In the non-block form, returns a two element array, &lt;code&gt;[master_io, slave_file]&lt;/code&gt;.</source>
          <target state="translated">비 블록 형태로 두 요소 배열 &lt;code&gt;[master_io, slave_file]&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="733790fc4c8501685e0261b448dc546767e1c07e" translate="yes" xml:space="preserve">
          <source>In the recommended keyword argument style, either or both of &lt;code&gt;step&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; (default infinity) can be omitted. In the fixed position argument style, zero as a step (i.e. &lt;code&gt;num.step(limit, 0)&lt;/code&gt;) is not allowed for historical compatibility reasons.</source>
          <target state="translated">권장 키워드 인수 스타일에서 &lt;code&gt;step&lt;/code&gt; 및 &lt;code&gt;limit&lt;/code&gt; (기본 무한대) 중 하나 또는 둘 다를 생략 할 수 있습니다. 고정 위치 인수 스타일에서 단계로서의 0 (예 : &lt;code&gt;num.step(limit, 0)&lt;/code&gt; )은 이전 호환성 문제로 인해 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4fb21f2279bec6320e80a00d7bc96e6ec6997e9a" translate="yes" xml:space="preserve">
          <source>In the second form (&lt;code&gt;exec(&quot;command1&quot;, &quot;arg1&quot;, ...)&lt;/code&gt;), the first is taken as a command name and the rest are passed as parameters to command with no shell expansion.</source>
          <target state="translated">두 번째 양식 ( &lt;code&gt;exec(&quot;command1&quot;, &quot;arg1&quot;, ...)&lt;/code&gt; )에서 첫 번째는 명령 이름으로 사용되며 나머지는 쉘 확장없이 명령에 대한 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="1e7d485cb6836582fdbced8bda129fbaf1244038" translate="yes" xml:space="preserve">
          <source>In the second form, creates a link &lt;code&gt;dir/target&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt;. In the third form, creates several hard links in the directory &lt;code&gt;dir&lt;/code&gt;, pointing to each item in &lt;code&gt;targets&lt;/code&gt;. If &lt;code&gt;dir&lt;/code&gt; is not a directory, raises Errno::ENOTDIR.</source>
          <target state="translated">두번째 형태에서, 링크 생성 &lt;code&gt;dir/target&lt;/code&gt; 을 가리키는 &lt;code&gt;target&lt;/code&gt; . 세 번째 형태로, 디렉토리 &lt;code&gt;dir&lt;/code&gt; 에 여러 개의 하드 링크를 작성 하여 &lt;code&gt;targets&lt;/code&gt; 의 각 항목을 가리 킵니다 . &lt;code&gt;dir&lt;/code&gt; 이 디렉토리 가 아닌 경우 Errno :: ENOTDIR을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="54e4ccc4439ddc55bab85c5dca90512db02f6baf" translate="yes" xml:space="preserve">
          <source>In the second form, creates a link &lt;code&gt;dir/target&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt;. In the third form, creates several symbolic links in the directory &lt;code&gt;dir&lt;/code&gt;, pointing to each item in &lt;code&gt;targets&lt;/code&gt;. If &lt;code&gt;dir&lt;/code&gt; is not a directory, raises Errno::ENOTDIR.</source>
          <target state="translated">두번째 형태에서, 링크 생성 &lt;code&gt;dir/target&lt;/code&gt; 을 가리키는 &lt;code&gt;target&lt;/code&gt; . 세 번째 형태로, 디렉토리 &lt;code&gt;dir&lt;/code&gt; 에 &lt;code&gt;targets&lt;/code&gt; 의 각 항목을 가리키는 여러 심볼릭 링크를 만듭니다 . &lt;code&gt;dir&lt;/code&gt; 이 디렉토리 가 아닌 경우 Errno :: ENOTDIR을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="00ef33eed3338e2dd8ae18543221f9f9d41dea9b" translate="yes" xml:space="preserve">
          <source>In the second, deprecated, form, a generated &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; iterates over the given object using the given method with the given arguments passed.</source>
          <target state="translated">더 이상 사용되지 않는 두 번째 양식에서 생성 된 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 자는 주어진 인수가 전달 된 지정된 메소드를 사용하여 지정된 오브젝트를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="952c446a8d9b4155483912a8f3bffa08fa9eb3b7" translate="yes" xml:space="preserve">
          <source>In the standard library:</source>
          <target state="translated">표준 라이브러리에서 :</target>
        </trans-unit>
        <trans-unit id="068cd6acbb4659c49c5bb9903ebc4def5a70b429" translate="yes" xml:space="preserve">
          <source>In the third form (&lt;code&gt;exec([&quot;command&quot;, &quot;argv0&quot;], &quot;arg1&quot;, ...)&lt;/code&gt;), starting a two-element array at the beginning of the command, the first element is the command to be executed, and the second argument is used as the &lt;code&gt;argv[0]&lt;/code&gt; value, which may show up in process listings.</source>
          <target state="translated">세 번째 형식 ( &lt;code&gt;exec([&quot;command&quot;, &quot;argv0&quot;], &quot;arg1&quot;, ...)&lt;/code&gt; )에서 명령 시작시 두 요소 배열을 시작하면 첫 번째 요소는 실행할 명령입니다. 두 번째 인수는 &lt;code&gt;argv[0]&lt;/code&gt; 값 으로 사용되며 프로세스 목록에 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f37386fb865e9dfd6cfc35ed8fef5d358fada5e" translate="yes" xml:space="preserve">
          <source>In these three cases, if an index is negative, it is counted from the end of the string. For the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt; cases the starting index is just before a character and an index matching the string's size. Additionally, an empty string is returned when the starting index for a character range is at the end of the string.</source>
          <target state="translated">이 세 가지 경우 인덱스가 음수이면 문자열의 끝부터 계산됩니다. 를 들어 &lt;code&gt;start&lt;/code&gt; 과 &lt;code&gt;range&lt;/code&gt; 의 경우 시작 인덱스는 문자와 문자열의 크기와 일치하는 인덱스 전에이다. 또한 문자 범위의 시작 색인이 문자열의 끝에 있으면 빈 문자열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9948b93b7512c722543c1296e13e9fdc66b59543" translate="yes" xml:space="preserve">
          <source>In this call to &lt;code&gt;CSV.parse&lt;/code&gt;, the keyword argument &lt;code&gt;converters: string_converter&lt;/code&gt; specifies that:</source>
          <target state="translated">이 &lt;code&gt;CSV.parse&lt;/code&gt; 호출 에서 키워드 인수 &lt;code&gt;converters: string_converter&lt;/code&gt; 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bcd422be17f20e76e1cc874a23a6ec2fd9646dca" translate="yes" xml:space="preserve">
          <source>In this case &lt;a href=&quot;basicsocket#method-i-getsockopt&quot;&gt;&lt;code&gt;getsockopt&lt;/code&gt;&lt;/a&gt; could be called like this:</source>
          <target state="translated">이 경우 &lt;a href=&quot;basicsocket#method-i-getsockopt&quot;&gt; &lt;code&gt;getsockopt&lt;/code&gt; &lt;/a&gt; 는 다음과 같이 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20f1aec46dfa163f5c6679299326d4d4f95c8551" translate="yes" xml:space="preserve">
          <source>In this case &lt;a href=&quot;basicsocket#method-i-setsockopt&quot;&gt;&lt;code&gt;setsockopt&lt;/code&gt;&lt;/a&gt; could be called like this:</source>
          <target state="translated">이 경우 &lt;a href=&quot;basicsocket#method-i-setsockopt&quot;&gt; &lt;code&gt;setsockopt&lt;/code&gt; &lt;/a&gt; 는 다음과 같이 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccfb057be10b69ac4f6f24a7485693cc22406208" translate="yes" xml:space="preserve">
          <source>In this case, the same logic for autoloading applies.</source>
          <target state="translated">이 경우 자동 로딩에 대해 동일한 논리가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="41e4d22f734255907d76057bda63f12728bd2689" translate="yes" xml:space="preserve">
          <source>In this case, you might want to use &lt;a href=&quot;shellwords#method-c-escape&quot;&gt;&lt;code&gt;Shellwords.escape&lt;/code&gt;&lt;/a&gt;, or its alias &lt;a href=&quot;string#method-i-shellescape&quot;&gt;&lt;code&gt;String#shellescape&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 경우 &lt;a href=&quot;shellwords#method-c-escape&quot;&gt; &lt;code&gt;Shellwords.escape&lt;/code&gt; &lt;/a&gt; 또는 별명 &lt;a href=&quot;string#method-i-shellescape&quot;&gt; &lt;code&gt;String#shellescape&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7bc76646efd8dfd5aefe5d72a282d2bc0e95fa1d" translate="yes" xml:space="preserve">
          <source>In this class, BCE years are counted astronomically. Thus, the year before the year 1 is the year zero, and the year preceding the year zero is the year -1. The month and the day of month should be a negative or a positive number (as a relative month/day from the end of year/month when negative). They should not be zero.</source>
          <target state="translated">이 수업에서 BCE 연도는 천문학적으로 계산됩니다. 따라서 1 년 전의 해는 0 년이고 0 년 전의 해는 -1입니다. 월과 일은 음수 또는 양수 여야합니다 (음수 일 경우 연도 / 월의 상대 월 / 일). 0이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="ed0ac2b0d873fdb716a59ea57e0c3806a5f75490" translate="yes" xml:space="preserve">
          <source>In this document, the astronomical Julian day number is the same as the original Julian day number. And the chronological Julian day number is a variation of the Julian day number. Its days begin at midnight on local time.</source>
          <target state="translated">이 문서에서 천문학적 율리우스 일 수는 원래 율리우스 일 수와 동일합니다. 그리고 연대순 율리우스 일 수는 율리우스 일 수의 변형입니다. 그 날은 현지 시간으로 자정에 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="1960cf329f5943358f0519a2dc26c8a8a912e582" translate="yes" xml:space="preserve">
          <source>In this document, the astronomical modified Julian day number is the same as the original modified Julian day number. And the chronological modified Julian day number is a variation of the modified Julian day number. Its days begin at midnight on local time.</source>
          <target state="translated">이 문서에서 천문학적으로 수정 된 율리우스 일 수는 원래 수정 된 율리우스 일 수와 동일합니다. 그리고 시간순으로 수정 된 율리우스 일 수는 수정 된 율리우스 일 수의 변형입니다. 그 날은 현지 시간으로 자정에 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="46fb0c69f9d852f9580bf128c7fc533e480a82ec" translate="yes" xml:space="preserve">
          <source>In this document, when the term &amp;ldquo;Julian day number&amp;rdquo; simply appears, it just refers to &amp;ldquo;chronological Julian day number&amp;rdquo;, not the original.</source>
          <target state="translated">이 문서에서 &quot;Julian day number&quot;라는 용어가 나타날 때 이는 원래의 것이 아니라 &quot;chronic Julian Julian number&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9863900aa8278a4ac2738e6517bb68be826d5f67" translate="yes" xml:space="preserve">
          <source>In this document, when the term &amp;ldquo;modified Julian day number&amp;rdquo; simply appears, it just refers to &amp;ldquo;chronological modified Julian day number&amp;rdquo;, not the original.</source>
          <target state="translated">이 문서에서 &quot;수정 된 율리우스 일 수&quot;라는 용어가 단순히 나타날 때, 이는 원래가 아닌 &quot;시간순으로 수정 된 율리우스 일 수&quot;를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="62fea03b1e05a1264f41da19769302fcb143d6b3" translate="yes" xml:space="preserve">
          <source>In this example only &amp;ldquo;a is one&amp;rdquo; is printed:</source>
          <target state="translated">이 예에서는 &quot;a is one&quot;만 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="e49aab3cbc1a8c0ab2b6c687054b258524982592" translate="yes" xml:space="preserve">
          <source>In this example we will change the buffering type in the &lt;code&gt;factor&lt;/code&gt; command, assuming that factor uses stdio for stdout buffering.</source>
          <target state="translated">이 예에서는 factor가 stdout 버퍼링에 stdio를 사용한다고 가정 하고 &lt;code&gt;factor&lt;/code&gt; 명령 의 버퍼링 유형을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="be3dc80f0a36c9805d08d74c57f033b4ef50eb72" translate="yes" xml:space="preserve">
          <source>In this example we will create three &lt;code&gt;tmpFile&lt;/code&gt;'s in three different folders under the &lt;code&gt;/tmp&lt;/code&gt; directory.</source>
          <target state="translated">이 예에서는 &lt;code&gt;/tmp&lt;/code&gt; 디렉토리 아래에 세 개의 다른 폴더에 세 개의 &lt;code&gt;tmpFile&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a9d51ac6d3a94b9d969489f8ac8b50a6b7d54c16" translate="yes" xml:space="preserve">
          <source>In this example we will read the operating system file &lt;code&gt;/etc/printcap&lt;/code&gt;, generated by &lt;code&gt;cupsd&lt;/code&gt;, and then output it to a new file relative to the &lt;code&gt;pwd&lt;/code&gt; of &lt;code&gt;sh&lt;/code&gt;.</source>
          <target state="translated">이 예에서는 &lt;code&gt;cupsd&lt;/code&gt; 에 의해 생성 된 운영 체제 파일 &lt;code&gt;/etc/printcap&lt;/code&gt; 을 읽고 &lt;code&gt;sh&lt;/code&gt; 의 &lt;code&gt;pwd&lt;/code&gt; 에 상대적인 새 파일로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="e2839d90c4460661021629e198abe7bb2d2c0d3e" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;obj&lt;/code&gt; is used first to generate the shortest JSON data (no whitespace), then again with all formatting options specified:</source>
          <target state="translated">이 예에서 &lt;code&gt;obj&lt;/code&gt; 는 먼저 가장 짧은 JSON 데이터 (공백 없음)를 생성 한 다음 다시 모든 형식 지정 옵션을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="619705dbcbc18b23716a6f8cfdc55b01901f06b0" translate="yes" xml:space="preserve">
          <source>In this example, we can guard from &lt;a href=&quot;thread#method-i-raise&quot;&gt;&lt;code&gt;Thread#raise&lt;/code&gt;&lt;/a&gt; exceptions.</source>
          <target state="translated">이 예에서는 &lt;a href=&quot;thread#method-i-raise&quot;&gt; &lt;code&gt;Thread#raise&lt;/code&gt; &lt;/a&gt; 예외를 방지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7dd1dc3b0ae51caf102a17fd6fd8c46c3cff3164" translate="yes" xml:space="preserve">
          <source>In this first example, we don't reap the first child process, so it appears as a zombie in the process status display.</source>
          <target state="translated">이 첫 번째 예에서는 첫 번째 하위 프로세스를 거두지 않으므로 프로세스 상태 표시에서 좀비로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="d374381ae1b1947922ab6837d0011c1aefdc4915" translate="yes" xml:space="preserve">
          <source>In this mode, all values assigned to constants are deeply copied and made shareable. It is safer mode than &lt;code&gt;experimental_everything&lt;/code&gt;.</source>
          <target state="translated">이 모드에서는 상수에 할당 된 모든 값이 깊이 복사되고 공유 가능하게됩니다. &lt;code&gt;experimental_everything&lt;/code&gt; 보다 안전한 모드 입니다.</target>
        </trans-unit>
        <trans-unit id="c770bfeb40a36c31d49c383038ea973226969f29" translate="yes" xml:space="preserve">
          <source>In this mode, all values assigned to constants are made shareable.</source>
          <target state="translated">이 모드에서는 상수에 할당 된 모든 값을 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7791ff4057db643db651a6ff4bc5b1dc452aff0" translate="yes" xml:space="preserve">
          <source>In this version, keys are &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object or &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">이 버전에서 키는 &lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체 또는 &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="5da7b7511acf0212a78f63389702b04488c7f46e" translate="yes" xml:space="preserve">
          <source>In this version, keys are symbol objects.</source>
          <target state="translated">이 버전에서 키는 심볼 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d4995e6b902f2de3816d4f54a9be459c1e2167fe" translate="yes" xml:space="preserve">
          <source>In those classes, this is so-called &amp;ldquo;civil&amp;rdquo;.</source>
          <target state="translated">이 수업에서는 소위&amp;ldquo;시민&amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="91439da6583d0a490e1c7742d3f2a864d6d325d4" translate="yes" xml:space="preserve">
          <source>In those classes, this is so-called &amp;ldquo;commercial&amp;rdquo;.</source>
          <target state="translated">이 수업에서는 소위 &quot;상업적&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="9b28554a0c3290455b1b61d0f38e384ba3a9712c" translate="yes" xml:space="preserve">
          <source>In those classes, this is so-called &amp;ldquo;ordinal&amp;rdquo;.</source>
          <target state="translated">이 수업에서 이것은 소위 &quot;기초&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="e4316798dc4510b97a40f0b9772ed38f50bc6eeb" translate="yes" xml:space="preserve">
          <source>In those classes, those are so-called &amp;ldquo;ajd&amp;rdquo; and &amp;ldquo;jd&amp;rdquo;.</source>
          <target state="translated">이러한 클래스에서는 소위 &quot;ajd&quot;및 &quot;jd&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="43f793f61b43b605fda990a847efca32e2aaf408" translate="yes" xml:space="preserve">
          <source>In those classes, those are so-called &amp;ldquo;amjd&amp;rdquo; and &amp;ldquo;mjd&amp;rdquo;.</source>
          <target state="translated">이러한 클래스에서는 소위 &quot;amjd&quot;및 &quot;mjd&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="4b6364fe85f73cb955ac6655f2e8c41506962f2b" translate="yes" xml:space="preserve">
          <source>In verbose mode, failed calls are logged to stdout.</source>
          <target state="translated">상세 모드에서는 실패한 통화가 stdout에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="7d0c402219b0d1cbd6e15f382a58f9e3ba7347e6" translate="yes" xml:space="preserve">
          <source>In-memory session storage class.</source>
          <target state="translated">인 메모리 세션 스토리지 클래스.</target>
        </trans-unit>
        <trans-unit id="2d60ca2af5e55ae17ee1953c39a56e5619c709b3" translate="yes" xml:space="preserve">
          <source>Include the current process ID with each message.</source>
          <target state="translated">각 메시지와 함께 현재 프로세스 ID를 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="4c5f87743501282fa63fbaffa15c1a3acc9cc8cd" translate="yes" xml:space="preserve">
          <source>Included modules:</source>
          <target state="translated">포함 된 모듈 :</target>
        </trans-unit>
        <trans-unit id="1695a79385fee88c302e8fa459132c176ea03e00" translate="yes" xml:space="preserve">
          <source>Includes Bundler::URI::REGEXP::PATTERN</source>
          <target state="translated">Bundler :: URI :: REGEXP :: PATTERN 포함</target>
        </trans-unit>
        <trans-unit id="093be81efaf59404a56c9a5e332c22704d44ebdc" translate="yes" xml:space="preserve">
          <source>Includes URI::REGEXP::PATTERN</source>
          <target state="translated">URI :: REGEXP :: PATTERN 포함</target>
        </trans-unit>
        <trans-unit id="322f007d996fbdddf0e0293f24831431926e27c1" translate="yes" xml:space="preserve">
          <source>Includes the empty line that ends the header block.</source>
          <target state="translated">헤더 블록을 끝내는 빈 줄을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b14304470fcf570d3e430ffe805a2a06e07571ec" translate="yes" xml:space="preserve">
          <source>Inclusive multicast source filter</source>
          <target state="translated">포괄적 인 멀티 캐스트 소스 필터</target>
        </trans-unit>
        <trans-unit id="f607dc7f61c684f89947c18403be31147aad61d8" translate="yes" xml:space="preserve">
          <source>Increases left margin after newline with &lt;code&gt;indent&lt;/code&gt; for line breaks added in the block.</source>
          <target state="translated">블록에 추가 된 줄 바꿈을 &lt;code&gt;indent&lt;/code&gt; 하여 줄 바꿈 후 왼쪽 여백을 증가시킵니다 .</target>
        </trans-unit>
        <trans-unit id="a799dbc5ee731092a5c79ea865a117440c7aaf6c" translate="yes" xml:space="preserve">
          <source>Increasing (non-decreasing) subsequence can be chunked as follows:</source>
          <target state="translated">증가 (비 감소) 서브 시퀀스는 다음과 같이 청크 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="292f2579794141e2658a1da2e3bdec6e37602404" translate="yes" xml:space="preserve">
          <source>Indent each line of the printed paragraph by indent value.</source>
          <target state="translated">인쇄 된 단락의 각 줄을 들여 쓰기 값으로 들여 씁니다.</target>
        </trans-unit>
        <trans-unit id="68211470bad608f9949994bc70d97219e1342a83" translate="yes" xml:space="preserve">
          <source>Indent the first column by indent value.</source>
          <target state="translated">들여 쓰기 값으로 첫 번째 열을 들여 씁니다.</target>
        </trans-unit>
        <trans-unit id="c9ec7fcf0ce1c005cbdd2ae9ab39e1773e6bf368" translate="yes" xml:space="preserve">
          <source>Indentation</source>
          <target state="translated">Indentation</target>
        </trans-unit>
        <trans-unit id="ed6f5e1d27adf9916aad0d47e706cd09cfc7fb56" translate="yes" xml:space="preserve">
          <source>Indentation for summary. Must be &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; (or have + &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">요약을위한 들여 쓰기 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이어야합니다 (또는 + &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 방법).</target>
        </trans-unit>
        <trans-unit id="193ec75a89d3883e93b312d747d28671f3856af6" translate="yes" xml:space="preserve">
          <source>Indentation, defaults to @summary_indent.</source>
          <target state="translated">들여 쓰기, 기본값은 @summary_indent입니다.</target>
        </trans-unit>
        <trans-unit id="c1be19583a12b7e2b4a12a8a2ae3e1b04b95b637" translate="yes" xml:space="preserve">
          <source>Indeterminable</source>
          <target state="translated">Indeterminable</target>
        </trans-unit>
        <trans-unit id="7ccefd47f6c42396b78e9ef7ba64a75976044c95" translate="yes" xml:space="preserve">
          <source>Index -1 indicates the last element.</source>
          <target state="translated">인덱스 -1은 마지막 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3e2626b237ea917b7dd1ea61edef10e8cd8b4efc" translate="yes" xml:space="preserve">
          <source>Index -2 indicates the next-to-last element.</source>
          <target state="translated">인덱스 -2는 다음에서 마지막 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="356befc0cb7608b3b8200ca6505705fe9c0cffbc" translate="yes" xml:space="preserve">
          <source>Index -4 is out of range.</source>
          <target state="translated">인덱스 -4가 범위를 벗어났습니다.</target>
        </trans-unit>
        <trans-unit id="0e4fdd6c0d4b94f3dc29bd4286ce151d3f98a53e" translate="yes" xml:space="preserve">
          <source>Index 0 indicates the first element.</source>
          <target state="translated">인덱스 0은 첫 번째 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fef3d722b8a0568101c17e4e6bcd7cf4757c6e48" translate="yes" xml:space="preserve">
          <source>Index 1 indicates the second element.</source>
          <target state="translated">인덱스 1은 두 번째 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5cb352f9aef23d65b2f31aba3f24e77cc10eb97f" translate="yes" xml:space="preserve">
          <source>Index 3 is out of range.</source>
          <target state="translated">인덱스 3이 범위를 벗어났습니다.</target>
        </trans-unit>
        <trans-unit id="94973e6ff5b6a2b187b9865f9f76cf5dc2fa8c2c" translate="yes" xml:space="preserve">
          <source>Index#&amp;lt;&amp;lt;</source>
          <target state="translated">Index#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="e431094baa8f7523057857f451a8aa462a749dfe" translate="yes" xml:space="preserve">
          <source>Index#==</source>
          <target state="translated">Index#==</target>
        </trans-unit>
        <trans-unit id="c489b942cb213198781397cc62045350e62ea26e" translate="yes" xml:space="preserve">
          <source>Index#[]</source>
          <target state="translated">Index#[]</target>
        </trans-unit>
        <trans-unit id="22bc4960add0457c4b3d29894a1d6131454696c0" translate="yes" xml:space="preserve">
          <source>Index#add_source</source>
          <target state="translated">Index#add_source</target>
        </trans-unit>
        <trans-unit id="bb08f623cce4bc1c4195a297d69f666c4a1513bb" translate="yes" xml:space="preserve">
          <source>Index#all_specs</source>
          <target state="translated">Index#all_specs</target>
        </trans-unit>
        <trans-unit id="472aaea753fe51c8cfc3ed8b506a9eba5fd07784" translate="yes" xml:space="preserve">
          <source>Index#dependencies_eql?</source>
          <target state="translated">Index#dependencies_eql?</target>
        </trans-unit>
        <trans-unit id="83bc6a64069365b8725cfd53e1289ce13d18996a" translate="yes" xml:space="preserve">
          <source>Index#dependency_names</source>
          <target state="translated">Index#dependency_names</target>
        </trans-unit>
        <trans-unit id="a0912c47a6552d150f4110e3a104f585cde9cab6" translate="yes" xml:space="preserve">
          <source>Index#each</source>
          <target state="translated">Index#each</target>
        </trans-unit>
        <trans-unit id="c7d15d5c7125cde26dee94ad39052eea50f35734" translate="yes" xml:space="preserve">
          <source>Index#empty?</source>
          <target state="translated">Index#empty?</target>
        </trans-unit>
        <trans-unit id="3ca47cf1ba32f583df0a195f4ee95a150a61c33a" translate="yes" xml:space="preserve">
          <source>Index#initialize_copy</source>
          <target state="translated">Index#initialize_copy</target>
        </trans-unit>
        <trans-unit id="ae0a5c6136f292be7190a12c12ba8d9901ab689a" translate="yes" xml:space="preserve">
          <source>Index#inspect</source>
          <target state="translated">Index#inspect</target>
        </trans-unit>
        <trans-unit id="9faa19f72846719e95bc39b2c9a5138b0247048e" translate="yes" xml:space="preserve">
          <source>Index#local_search</source>
          <target state="translated">Index#local_search</target>
        </trans-unit>
        <trans-unit id="583dd28fb014955949aa5155ceeb7f9f8f2390b9" translate="yes" xml:space="preserve">
          <source>Index#search</source>
          <target state="translated">Index#search</target>
        </trans-unit>
        <trans-unit id="43675de33f68efe4243c02789b9d5795b11def14" translate="yes" xml:space="preserve">
          <source>Index#search_all</source>
          <target state="translated">Index#search_all</target>
        </trans-unit>
        <trans-unit id="a36573466f8237107489037f8f94b714ab8c898c" translate="yes" xml:space="preserve">
          <source>Index#search_by_dependency</source>
          <target state="translated">Index#search_by_dependency</target>
        </trans-unit>
        <trans-unit id="bc80a7004fb6581e67af7bd26a6fa6de9da642c3" translate="yes" xml:space="preserve">
          <source>Index#search_by_spec</source>
          <target state="translated">Index#search_by_spec</target>
        </trans-unit>
        <trans-unit id="c8467a0e5a519093274efebe116c4bc020cb08df" translate="yes" xml:space="preserve">
          <source>Index#size</source>
          <target state="translated">Index#size</target>
        </trans-unit>
        <trans-unit id="affc830e13b4261ddfdd7effd55ad1a5e41d7e8e" translate="yes" xml:space="preserve">
          <source>Index#sort_specs</source>
          <target state="translated">Index#sort_specs</target>
        </trans-unit>
        <trans-unit id="082be91ddd9bf95491e529a6f49503c91f6bda34" translate="yes" xml:space="preserve">
          <source>Index#sources</source>
          <target state="translated">Index#sources</target>
        </trans-unit>
        <trans-unit id="3765d73e1f79aaf0f31bde10eb3e95a1b75e2327" translate="yes" xml:space="preserve">
          <source>Index#spec_names</source>
          <target state="translated">Index#spec_names</target>
        </trans-unit>
        <trans-unit id="e05806bfacbb93d08c8c1713f7b7c277153c2d6f" translate="yes" xml:space="preserve">
          <source>Index#specs</source>
          <target state="translated">Index#specs</target>
        </trans-unit>
        <trans-unit id="e07107c1492de806c85653ca8f7a4f0b1e7af8da" translate="yes" xml:space="preserve">
          <source>Index#specs_by_name</source>
          <target state="translated">Index#specs_by_name</target>
        </trans-unit>
        <trans-unit id="a28568fd3e1af89a6a902d9e02ab5c1e407768e2" translate="yes" xml:space="preserve">
          <source>Index#unmet_dependency_names</source>
          <target state="translated">Index#unmet_dependency_names</target>
        </trans-unit>
        <trans-unit id="afd7f2c32bbe8a882c9de1e390eb8b53c79012e7" translate="yes" xml:space="preserve">
          <source>Index#unsorted_search</source>
          <target state="translated">Index#unsorted_search</target>
        </trans-unit>
        <trans-unit id="da7ebaa27b593275c9ddba6419e6467e4d5bf632" translate="yes" xml:space="preserve">
          <source>Index#use</source>
          <target state="translated">Index#use</target>
        </trans-unit>
        <trans-unit id="a3441fec908041a958c1c183233023511dac7ceb" translate="yes" xml:space="preserve">
          <source>Index::build</source>
          <target state="translated">Index::build</target>
        </trans-unit>
        <trans-unit id="9c868c94d5fdb550418df6d3b07b2a5c182901e3" translate="yes" xml:space="preserve">
          <source>Index::new</source>
          <target state="translated">Index::new</target>
        </trans-unit>
        <trans-unit id="b42957e5af33e886168082d1e142a72b01b23bee" translate="yes" xml:space="preserve">
          <source>Index::sort_specs</source>
          <target state="translated">Index::sort_specs</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="86d8491af8423cc2614faa00ad3446a5f9e34807" translate="yes" xml:space="preserve">
          <source>Indexes -1 through -3 are in range.</source>
          <target state="translated">인덱스 -1에서 -3이 범위 내에 있습니다.</target>
        </trans-unit>
        <trans-unit id="13c2640c2b14c55120da1d768388e133d8e97ce2" translate="yes" xml:space="preserve">
          <source>Indexes 0 through 2 are in range.</source>
          <target state="translated">인덱스 0-2가 범위 내에 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cf2066f5d870045aea8fb6e1cf68775cc28549a" translate="yes" xml:space="preserve">
          <source>Indicated whether this &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; instance uses an Authenticated Encryption mode.</source>
          <target state="translated">이 &lt;a href=&quot;cipher/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 인스턴스가 인증 된 암호화 모드를 사용 하는지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d563ed5d15b7739576f26f00b2474671fc00f437" translate="yes" xml:space="preserve">
          <source>Indicates a failure to resolve a name or address.</source>
          <target state="translated">이름이나 주소를 확인하지 못했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a8091d48ead4307de828ae2c8c3843f9691fdcb5" translate="yes" xml:space="preserve">
          <source>Indicates a failure. No timestamp token was created. A certificate has been revoked. Equal to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">실패를 나타냅니다. 타임 스탬프 토큰이 생성되지 않았습니다. 인증서가 해지되었습니다. 같음 &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91eadfbd1ee2ff0a343ee975f67cb8b91941bde0" translate="yes" xml:space="preserve">
          <source>Indicates a failure. No timestamp token was created. Equal to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">실패를 나타냅니다. 타임 스탬프 토큰이 생성되지 않았습니다. 같음 &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6072b368a921dcdf32d6af848444ee15a24fe1a0" translate="yes" xml:space="preserve">
          <source>Indicates a failure. No timestamp token was created. Equal to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">실패를 나타냅니다. 타임 스탬프 토큰이 생성되지 않았습니다. 같음 &lt;code&gt;3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdfcdb1ff73760903e420e14364efdc923308b0d" translate="yes" xml:space="preserve">
          <source>Indicates a failure. No timestamp token was created. Revocation of a certificate is imminent. Equal to &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">실패를 나타냅니다. 타임 스탬프 토큰이 생성되지 않았습니다. 인증서 해지가 임박했습니다. 같음 &lt;code&gt;4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2599666de45045e116fca4e8a27080bfb82f7ff8" translate="yes" xml:space="preserve">
          <source>Indicates a problem with the &lt;a href=&quot;../../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="translated">&lt;a href=&quot;../../dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 요청에 문제가 있음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="2bf1782557a10b383279279cafff79ce8055036f" translate="yes" xml:space="preserve">
          <source>Indicates a successful response that probably contains modifications from the initial request. Equal to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">초기 요청의 수정 사항이 포함 된 성공적인 응답을 나타냅니다. 같음 &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03a3174eec588eccbbeb428044468adad32a2caf" translate="yes" xml:space="preserve">
          <source>Indicates a successful response. Equal to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">성공적인 응답을 나타냅니다. 동일 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9e1ce01935209d83cc4846286a6631eae3b52f9" translate="yes" xml:space="preserve">
          <source>Indicates a timeout resolving a name or address.</source>
          <target state="translated">이름 또는 주소를 확인하는 시간 초과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0b6bd78ab4d211ab8f0b9600c6e31a72b1c0418b" translate="yes" xml:space="preserve">
          <source>Indicates no such domain was found.</source>
          <target state="translated">해당 도메인을 찾을 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0fe6d60d8b152053953e8274f797aa00e01dc310" translate="yes" xml:space="preserve">
          <source>Indicates progress roughly once every second @return [void]</source>
          <target state="translated">대략 1 초에 한 번씩 진행 상태를 나타냅니다. @void [void]</target>
        </trans-unit>
        <trans-unit id="4836647056d9a63306fb972012bd4538ed165a16" translate="yes" xml:space="preserve">
          <source>Indicates some other unhandled resolver error was encountered.</source>
          <target state="translated">처리되지 않은 다른 해결 프로그램 오류가 발생했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6386bee5d8ed8d5e96fe3f42f5fc42af29abbc13" translate="yes" xml:space="preserve">
          <source>Indicates that a value is +0. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 +0임을 나타냅니다. &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt; &lt;code&gt;BigDecimal.sign&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a943d85343639632586f128725879e2396dae7a3" translate="yes" xml:space="preserve">
          <source>Indicates that a value is -0. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 -0임을 나타냅니다. &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt; &lt;code&gt;BigDecimal.sign&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b64e68378ae3eed911768e0d343b20f904848ec" translate="yes" xml:space="preserve">
          <source>Indicates that a value is negative and finite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 음수이고 유한함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt; &lt;code&gt;BigDecimal.sign&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d03de6faacf3987b1badeb002a74b0245462c05" translate="yes" xml:space="preserve">
          <source>Indicates that a value is negative and infinite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 음수이고 무한함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt; &lt;code&gt;BigDecimal.sign&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c064c765062d46365e7621b4d785e82ec3c81718" translate="yes" xml:space="preserve">
          <source>Indicates that a value is not a number. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 숫자가 아님을 나타냅니다. &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt; &lt;code&gt;BigDecimal.sign&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d2c4a3a93559c034af57a2efd166ac32ebf3c95f" translate="yes" xml:space="preserve">
          <source>Indicates that a value is positive and finite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 양수이고 유한함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt; &lt;code&gt;BigDecimal.sign&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c383919905fb824b9ce2e20ae029fb602057c4cb" translate="yes" xml:space="preserve">
          <source>Indicates that a value is positive and infinite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 양수이고 무한함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt; &lt;code&gt;BigDecimal.sign&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e31446029d83ac9086247a6535429c379aee056" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read-only mode</source>
          <target state="translated">dbm_open ()이 데이터베이스를 읽기 전용 모드로 열어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="054b75f4cf8798f6f37641c147d7300ef8add08f" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read/write mode</source>
          <target state="translated">dbm_open ()이 데이터베이스를 읽기 / 쓰기 모드로 열어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e22b7d946ab0f200123c2896faf16c62139763f7" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read/write mode, and create it if it does not already exist</source>
          <target state="translated">dbm_open ()이 데이터베이스를 읽기 / 쓰기 모드로 열어서 존재하지 않는 경우 작성해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a08328ea95169c772cba3d255a30d074798b4bdc" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read/write mode, create it if it does not already exist, and delete all contents if it does already exist.</source>
          <target state="translated">dbm_open ()이 데이터베이스를 읽기 / 쓰기 모드로 열고, 존재하지 않는 경우 작성하고, 존재하는 경우 모든 내용을 삭제해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cc6a3413acf8e1dad33e8c7b9d7c0f82a3b6a3ef" translate="yes" xml:space="preserve">
          <source>Indicates that digits &amp;gt;= 5 should be rounded up, others rounded down. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숫자&amp;gt; = 5는 반올림되어야하고 다른 것은 반올림되어야 함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt; &lt;code&gt;BigDecimal.mode&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1f7554b1c92dec17f3008eadfbcd5f354bf894b" translate="yes" xml:space="preserve">
          <source>Indicates that digits &amp;gt;= 6 should be rounded up, others rounded down. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숫자&amp;gt; = 6은 반올림되어야하고 다른 것은 반올림되어야 함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt; &lt;code&gt;BigDecimal.mode&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="efa3d3e4def355efbdad758bee6e0ee3d410e366" translate="yes" xml:space="preserve">
          <source>Indicates that string literals should be allocated once at parse time and frozen.</source>
          <target state="translated">문자열 리터럴이 구문 분석시 한 번 할당되고 고정되어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="28f839fd751283af6dc3c9df1e4f86b048624c4b" translate="yes" xml:space="preserve">
          <source>Indicates that the &lt;a href=&quot;../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; request was unable to be encoded.</source>
          <target state="translated">&lt;a href=&quot;../dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 요청을 인코딩 할 수 없음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5e96c3c99bd8e85407d4b442f5d780353e16fc38" translate="yes" xml:space="preserve">
          <source>Indicates that the &lt;a href=&quot;../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; response was unable to be decoded.</source>
          <target state="translated">&lt;a href=&quot;../dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 응답을 디코딩 할 수 없음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ec0ff9293e857f099cddb7afabb0dc8589885920" translate="yes" xml:space="preserve">
          <source>Indicates that values should be rounded away from zero. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 0에서 반올림되어야 함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt; &lt;code&gt;BigDecimal.mode&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e5b2b2b6a38293a1ae59550a974a0cf64749762" translate="yes" xml:space="preserve">
          <source>Indicates that values should be rounded towards zero. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값을 0으로 반올림해야 함을 나타냅니다. &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt; &lt;code&gt;BigDecimal.mode&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e78e32174df6ab5360e958855196393af600ea2" translate="yes" xml:space="preserve">
          <source>Indicates the certificate has been revoked either permanently or temporarily (on hold).</source>
          <target state="translated">인증서가 영구적으로 또는 일시적으로 보류 중임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d750ccd6fc3db96ffbc95c3dcb069886a992b5bf" translate="yes" xml:space="preserve">
          <source>Indicates the certificate is not revoked but does not necessarily mean the certificate was issued or that this response is within the certificate's validity interval</source>
          <target state="translated">인증서가 해지되지 않았지만 반드시 인증서가 발급되었거나이 응답이 인증서의 유효 간격 내에 있음을 의미하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="54d5214aabae5a5d07a9f6e06bad46de19865b8b" translate="yes" xml:space="preserve">
          <source>Indicates the end of conditional blocks in control structures. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions&lt;/a&gt;</source>
          <target state="translated">제어 구조에서 조건부 블록의 끝을 나타냅니다. 참조 &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;제어 식을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86bf4c7cfb16beddf87e53e9a1f018232d9bd78e" translate="yes" xml:space="preserve">
          <source>Indicates the responder does not know about the certificate being requested.</source>
          <target state="translated">응답자가 요청중인 인증서를 알지 못함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c4b9de7fc1f8ed52d8c9441f399b83dbcd689586" translate="yes" xml:space="preserve">
          <source>Indicates the source may be part of a larger string. See &lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;primitive_convert&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">소스가 더 큰 문자열의 일부일 수 있음을 나타냅니다. 예제는 &lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt; &lt;code&gt;primitive_convert&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e602b4d49dcfc0c384a8941bdfdc9ca50b288843" translate="yes" xml:space="preserve">
          <source>Indicates whether the response shall contain the timestamp authority's certificate or not.</source>
          <target state="translated">응답에 타임 스탬프 기관의 인증서가 포함되어야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5aff3fd80021d44c273c5b1b2a83e239205fcb6e" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dh&quot;&gt;&lt;code&gt;DH&lt;/code&gt;&lt;/a&gt; instance has a private key associated with it or not. The private key may be retrieved with DH#priv_key.</source>
          <target state="translated">이 &lt;a href=&quot;dh&quot;&gt; &lt;code&gt;DH&lt;/code&gt; &lt;/a&gt; 인스턴스에 연결된 개인 키가 있는지 여부를 나타냅니다 . 개인 키는 DH # priv_key로 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc202cd97f67e417b4f37d8d00a178683b3ba19b" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dh&quot;&gt;&lt;code&gt;DH&lt;/code&gt;&lt;/a&gt; instance has a public key associated with it or not. The public key may be retrieved with DH#pub_key.</source>
          <target state="translated">이 &lt;a href=&quot;dh&quot;&gt; &lt;code&gt;DH&lt;/code&gt; &lt;/a&gt; 인스턴스에 연결된 공개 키가 있는지 여부를 나타냅니다 . 공개 키는 DH # pub_key로 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40e3954f5851f0b105e520db93732ede90f25179" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt; instance has a private key associated with it or not. The private key may be retrieved with DSA#private_key.</source>
          <target state="translated">이 &lt;a href=&quot;dsa&quot;&gt; &lt;code&gt;DSA&lt;/code&gt; &lt;/a&gt; 인스턴스에 연결된 프라이빗 키가 있는지 여부를 나타냅니다 . 개인 키는 DSA # private_key를 사용하여 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fcf863f4a3cd19d1909c0cddb44c0cc0e524ddc" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt; instance has a public key associated with it or not. The public key may be retrieved with &lt;a href=&quot;dsa#method-i-public_key&quot;&gt;&lt;code&gt;DSA#public_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;dsa&quot;&gt; &lt;code&gt;DSA&lt;/code&gt; &lt;/a&gt; 인스턴스에 연결된 공개 키가 있는지 여부를 나타냅니다 . 공개 키는 &lt;a href=&quot;dsa#method-i-public_key&quot;&gt; &lt;code&gt;DSA#public_key&lt;/code&gt; &lt;/a&gt; 로 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="254e1b6e98dc41b9fd3ec46b1daf45c483c8910f" translate="yes" xml:space="preserve">
          <source>Indicates which string encoding should be used for string literals, regexp literals and &lt;code&gt;__ENCODING__&lt;/code&gt;:</source>
          <target state="translated">문자열 리터럴, 정규 표현식 리터럴 및 &lt;code&gt;__ENCODING__&lt;/code&gt; 에 사용해야하는 문자열 인코딩을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="385d4dde3b1f0001a0f08941a1716d9a565ec3ca" translate="yes" xml:space="preserve">
          <source>Individual switch class. Not important to the user.</source>
          <target state="translated">개별 스위치 클래스. 사용자에게는 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0219fd54bd5841008b18c414a5b2dea331bad1c5" translate="yes" xml:space="preserve">
          <source>Infinity</source>
          <target state="translated">Infinity</target>
        </trans-unit>
        <trans-unit id="8e75a642d9581e64a36197d3e50088c6d6d0923d" translate="yes" xml:space="preserve">
          <source>Inflate</source>
          <target state="translated">Inflate</target>
        </trans-unit>
        <trans-unit id="d1387cbdad743aba43c59cd0ab3ae911a48b62de" translate="yes" xml:space="preserve">
          <source>Inflate#&amp;lt;&amp;lt;</source>
          <target state="translated">Inflate#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="de464422a0472d4cbda9112df04f1e8e13033229" translate="yes" xml:space="preserve">
          <source>Inflate#add_dictionary</source>
          <target state="translated">Inflate#add_dictionary</target>
        </trans-unit>
        <trans-unit id="7f8c7ae1925a23738bedbb7cde9dd1ebd693824f" translate="yes" xml:space="preserve">
          <source>Inflate#inflate</source>
          <target state="translated">Inflate#inflate</target>
        </trans-unit>
        <trans-unit id="9248552ebe4971971dcd2c119b4e98034f3b682d" translate="yes" xml:space="preserve">
          <source>Inflate#set_dictionary</source>
          <target state="translated">Inflate#set_dictionary</target>
        </trans-unit>
        <trans-unit id="267e69a4ecd744b046f51a6dbd13334574d27713" translate="yes" xml:space="preserve">
          <source>Inflate#sync</source>
          <target state="translated">Inflate#sync</target>
        </trans-unit>
        <trans-unit id="9d9c6a43d7e705253f6a6ee11dbe7b9def6bf6a5" translate="yes" xml:space="preserve">
          <source>Inflate#sync_point?</source>
          <target state="translated">Inflate#sync_point?</target>
        </trans-unit>
        <trans-unit id="b18288a8b783150adda7b58cfe3fd5abfdf42611" translate="yes" xml:space="preserve">
          <source>Inflate::inflate</source>
          <target state="translated">Inflate::inflate</target>
        </trans-unit>
        <trans-unit id="1d556d9eb37684aa00524de3b006a836a496bec2" translate="yes" xml:space="preserve">
          <source>Inflate::new</source>
          <target state="translated">Inflate::new</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="477564c0cb350a5d10e0d558e089adce72403a2b" translate="yes" xml:space="preserve">
          <source>Information taken form the following places:</source>
          <target state="translated">다음과 같은 장소에서 정보가 수집됩니다.</target>
        </trans-unit>
        <trans-unit id="a5ffaa0a1279a5d5904fc00dc4185654709bb545" translate="yes" xml:space="preserve">
          <source>Information taken from the following places:</source>
          <target state="translated">다음 장소에서 얻은 정보 :</target>
        </trans-unit>
        <trans-unit id="720ef62b39e1079b4cdac4e12c71f76297980e7b" translate="yes" xml:space="preserve">
          <source>Informational message</source>
          <target state="translated">정보 메시지</target>
        </trans-unit>
        <trans-unit id="3f1aa918d342bb83164cec704d634aa81268d86f" translate="yes" xml:space="preserve">
          <source>Inherit from &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; and add &lt;a href=&quot;color#method-i-set_color&quot;&gt;&lt;code&gt;set_color&lt;/code&gt;&lt;/a&gt; behavior. Check &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; to see all available methods.</source>
          <target state="translated">&lt;a href=&quot;basic&quot;&gt; &lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt; &lt;/a&gt; 에서 상속 하고 &lt;a href=&quot;color#method-i-set_color&quot;&gt; &lt;code&gt;set_color&lt;/code&gt; &lt;/a&gt; 동작을 추가하십시오 . 확인 &lt;a href=&quot;basic&quot;&gt; &lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt; &lt;/a&gt; 사용할 수있는 모든 방법을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65d7d76034b5323c847449ae03a02035a6a11ed9" translate="yes" xml:space="preserve">
          <source>Inherit from &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; and add &lt;a href=&quot;html#method-i-set_color&quot;&gt;&lt;code&gt;set_color&lt;/code&gt;&lt;/a&gt; behavior. Check &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; to see all available methods.</source>
          <target state="translated">&lt;a href=&quot;basic&quot;&gt; &lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt; &lt;/a&gt; 에서 상속 하고 &lt;a href=&quot;html#method-i-set_color&quot;&gt; &lt;code&gt;set_color&lt;/code&gt; &lt;/a&gt; 동작을 추가하십시오 . 확인 &lt;a href=&quot;basic&quot;&gt; &lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt; &lt;/a&gt; 사용할 수있는 모든 방법을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="5d4fd83fa830c9230fd0ef85fceb51a23abf115e" translate="yes" xml:space="preserve">
          <source>Inheritance with ExceptionClass</source>
          <target state="translated">ExceptionClass를 통한 상속</target>
        </trans-unit>
        <trans-unit id="04eaee5fd70dc25722533c81b50efc3531b76c3c" translate="yes" xml:space="preserve">
          <source>Inheriting classes should also implement arithmetic operator methods (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;) and the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator (see &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;). These methods may rely on &lt;code&gt;coerce&lt;/code&gt; to ensure interoperability with instances of other numeric classes.</source>
          <target state="translated">상속 클래스는 산술 연산자 메소드 ( &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; 및 &lt;code&gt;/&lt;/code&gt; ) 및 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 연산자 ( &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 참조 ) 도 구현해야합니다 . 이러한 메소드는 다른 숫자 클래스의 인스턴스와의 상호 운용성을 보장하기 위해 &lt;code&gt;coerce&lt;/code&gt; 에 의존 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ccbb2b5d7ae1a9455f8bbb59a189d090240d0c3" translate="yes" xml:space="preserve">
          <source>Initialize an action to add an edge to a dependency graph @param [String] &lt;a href=&quot;deleteedge#attribute-i-origin_name&quot;&gt;&lt;code&gt;origin_name&lt;/code&gt;&lt;/a&gt; the name of the origin of the edge @param [String] &lt;a href=&quot;deleteedge#attribute-i-destination_name&quot;&gt;&lt;code&gt;destination_name&lt;/code&gt;&lt;/a&gt; the name of the destination of the edge @param [Object] requirement the requirement that the edge represents</source>
          <target state="translated">종속성 그래프에 모서리를 추가하는 동작을 초기화합니다. @param [문자열] &lt;a href=&quot;deleteedge#attribute-i-origin_name&quot;&gt; &lt;code&gt;origin_name&lt;/code&gt; &lt;/a&gt; 모서리의 원점 이름입니다. @param [문자열] &lt;a href=&quot;deleteedge#attribute-i-destination_name&quot;&gt; &lt;code&gt;destination_name&lt;/code&gt; &lt;/a&gt; 모서리의 목적지 이름입니다. @param [객체] 모서리에 대한 요구 사항 대표</target>
        </trans-unit>
        <trans-unit id="0aac21fcf7a7d47176949d4e56d63e63c0a55709" translate="yes" xml:space="preserve">
          <source>Initialize an action to add an edge to a dependency graph @param [String] origin the name of the origin of the edge @param [String] destination the name of the destination of the edge @param [Object] requirement the requirement that the edge represents</source>
          <target state="translated">종속성 그래프에 모서리를 추가하는 동작을 초기화합니다. @param [String] origin 모서리의 출처 이름 @param [String] destination 모서리의 목적지 이름 @param [Object] 요구 사항 모서리 대표</target>
        </trans-unit>
        <trans-unit id="ef2fd2621797c2ea9c6004c3853d267982beb901" translate="yes" xml:space="preserve">
          <source>Initialize an action to detach a vertex from a dependency graph @param [String] name the name of the vertex to detach</source>
          <target state="translated">종속성 그래프에서 정점을 분리하는 동작을 초기화합니다. @param [문자열] 이름 분리 할 정점의 이름을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="93e071a14efd7d6e859a66194b6203694f551136" translate="yes" xml:space="preserve">
          <source>Initialize an action to tag a state of a dependency graph @param [Object] tag an opaque tag</source>
          <target state="translated">종속성 그래프의 상태에 태그를 지정하도록 조치를 초기화하십시오. @param [Object] 불투명 태그에 태그를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="1ee65989ee8cb5a1a4072583e339098e9c5a9a52" translate="yes" xml:space="preserve">
          <source>Initializes a copy of a {DependencyGraph}, ensuring that all {#vertices} are properly copied. @param [DependencyGraph] other the graph to copy.</source>
          <target state="translated">모든 {#vertices}가 올바르게 복사되도록 {DependencyGraph}의 사본을 초기화합니다. @param [DependencyGraph] 복사 할 다른 그래프.</target>
        </trans-unit>
        <trans-unit id="a4ac75eab19dfd97452d769a5a56351fe35197d0" translate="yes" xml:space="preserve">
          <source>Initializes a new error with the given circular vertices. @param [Array&amp;lt;DependencyGraph::Vertex&amp;gt;] vertices the vertices in the dependency</source>
          <target state="translated">주어진 원형 정점으로 새로운 오류를 초기화합니다. @param [Array &amp;lt;DependencyGraph :: Vertex&amp;gt;]는 의존성에서 꼭짓점을 정점시킵니다.</target>
        </trans-unit>
        <trans-unit id="5824fd7c9cd8e26fd453072185c9c06c41fc9d1b" translate="yes" xml:space="preserve">
          <source>Initializes a new error with the given missing dependency. @param [Object] dependency @see {#dependency} @param [Array&amp;lt;Object&amp;gt;] &lt;a href=&quot;nosuchdependencyerror#attribute-i-required_by&quot;&gt;&lt;code&gt;required_by&lt;/code&gt;&lt;/a&gt; @see {#required_by}</source>
          <target state="translated">주어진 누락 된 종속성으로 새 오류를 초기화합니다. @param [Object] 종속성 @see {#dependency} @param [Array &amp;lt;Object&amp;gt;] &lt;a href=&quot;nosuchdependencyerror#attribute-i-required_by&quot;&gt; &lt;code&gt;required_by&lt;/code&gt; &lt;/a&gt; @see {#required_by}</target>
        </trans-unit>
        <trans-unit id="eb687edcc0f8fd1252a48036d6cbc32e1f3deddb" translate="yes" xml:space="preserve">
          <source>Initializes a new error with the given version conflicts. @param [{String =&amp;gt; Resolution::Conflict}] conflicts see {#conflicts} @param [SpecificationProvider] &lt;a href=&quot;versionconflict#attribute-i-specification_provider&quot;&gt;&lt;code&gt;specification_provider&lt;/code&gt;&lt;/a&gt; see {#specification_provider}</source>
          <target state="translated">주어진 버전 충돌로 새로운 오류를 초기화합니다. @param [{String =&amp;gt; Resolution :: Conflict}] 충돌 {#conflicts} 참조 @param [SpecificationProvider] &lt;a href=&quot;versionconflict#attribute-i-specification_provider&quot;&gt; &lt;code&gt;specification_provider&lt;/code&gt; &lt;/a&gt; {#specification_provider} 참조</target>
        </trans-unit>
        <trans-unit id="bdb24c39813379e49938c7bf17c877e91773dcc6" translate="yes" xml:space="preserve">
          <source>Initializes a new instance and evaluates the optional block in context of the instance. Arguments &lt;code&gt;args&lt;/code&gt; are passed to &lt;a href=&quot;optionparser#method-i-new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;, see there for description of parameters.</source>
          <target state="translated">새 인스턴스를 초기화하고 인스턴스와 관련하여 선택적 블록을 평가합니다. 인수 &lt;code&gt;args&lt;/code&gt; 가 &lt;a href=&quot;optionparser#method-i-new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 로 전달됩니다 . 매개 변수에 대한 설명은 여기를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f6030ca61b6ebeeff5cb04a5f7f8eb7be27a2be7" translate="yes" xml:space="preserve">
          <source>Initializes a new resolution. @param [SpecificationProvider] &lt;a href=&quot;resolution#attribute-i-specification_provider&quot;&gt;&lt;code&gt;specification_provider&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 해상도를 초기화합니다. @param [SpecificationProvider] &lt;a href=&quot;resolution#attribute-i-specification_provider&quot;&gt; &lt;code&gt;specification_provider&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6233fd9e7a811d906c77bd772938d813b0172332" translate="yes" xml:space="preserve">
          <source>Initializes a new resolver. @param [SpecificationProvider] &lt;a href=&quot;resolver#attribute-i-specification_provider&quot;&gt;&lt;code&gt;specification_provider&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 리졸버를 초기화합니다. @param [SpecificationProvider] &lt;a href=&quot;resolver#attribute-i-specification_provider&quot;&gt; &lt;code&gt;specification_provider&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ece8783fd2746eabcf43e1052c5922a7c490120c" translate="yes" xml:space="preserve">
          <source>Initializes a vertex with the given name and payload. @param [String] name see {#name} @param [Object] payload see {#payload}</source>
          <target state="translated">주어진 이름과 페이로드로 정점을 초기화합니다. @param [문자열] 이름은 {#name} 참조 @param [객체] 페이로드 {#payload} 참조</target>
        </trans-unit>
        <trans-unit id="8758c858498ca2699b2da05bfd9a1617a6485795" translate="yes" xml:space="preserve">
          <source>Initializes an empty dependency graph</source>
          <target state="translated">빈 의존성 그래프를 초기화합니다</target>
        </trans-unit>
        <trans-unit id="79e58dcdd03e961a1e6f97f4b43b80e7dbcf1f23" translate="yes" xml:space="preserve">
          <source>Initializes an empty log</source>
          <target state="translated">빈 로그를 초기화합니다</target>
        </trans-unit>
        <trans-unit id="119601371006d9e0197ebc6fd56e5c7d1dde3673" translate="yes" xml:space="preserve">
          <source>Initializes instance variable.</source>
          <target state="translated">인스턴스 변수를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="41cf2062b172fa6eb56193b1456377ddc0e8dd97" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; for decryption.</source>
          <target state="translated">초기화 &lt;a href=&quot;cipher/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 해독.</target>
        </trans-unit>
        <trans-unit id="f8900562c3c74a0733f2b1d462f6e3c643d701c2" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; for encryption.</source>
          <target state="translated">&lt;a href=&quot;cipher/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 위해 암호화를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="4b5ef5d399eba0921aaf27abfa95142391e4dd98" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;monitormixin&quot;&gt;&lt;code&gt;MonitorMixin&lt;/code&gt;&lt;/a&gt; after being included in a class or when an object has been extended with the &lt;a href=&quot;monitormixin&quot;&gt;&lt;code&gt;MonitorMixin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">클래스에 포함 된 후 또는 &lt;a href=&quot;monitormixin&quot;&gt; &lt;code&gt;MonitorMixin&lt;/code&gt; &lt;/a&gt; 으로 개체가 확장 된 경우 &lt;a href=&quot;monitormixin&quot;&gt; &lt;code&gt;MonitorMixin&lt;/code&gt; &lt;/a&gt; 을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="8ebdf5c8e2ad65ac0647f9a3c425c42d3db239a7" translate="yes" xml:space="preserve">
          <source>Initializes the instance and yields itself if called with a block.</source>
          <target state="translated">블록을 호출하면 인스턴스를 초기화하고 자체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="27f3778a76fc75e0b5cc857d8d69e1bc46bbf37e" translate="yes" xml:space="preserve">
          <source>Initializes the supplemental group access list by reading the system group database and using all groups of which the given user is a member. The group with the specified &lt;em&gt;gid&lt;/em&gt; is also added to the list. Returns the resulting &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of the gids of all the groups in the supplementary group access list. Not available on all platforms.</source>
          <target state="translated">시스템 그룹 데이터베이스를 읽고 지정된 사용자가 구성원 인 모든 그룹을 사용하여 추가 그룹 액세스 목록을 초기화합니다. 지정된 &lt;em&gt;gid&lt;/em&gt; 가 있는 그룹 도 목록에 추가됩니다. 보조 그룹 액세스 목록에있는 모든 그룹의 gid 결과 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . 일부 플랫폼에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9239bfad19cd4e5dcd8d99055c15d337d03dd637" translate="yes" xml:space="preserve">
          <source>Initializes the supplemental group access list by reading the system group database and using all groups of which the given user is a member. The group with the specified &lt;em&gt;gid&lt;/em&gt; is also added to the list. Returns the resulting &lt;code&gt;Array&lt;/code&gt; of the gids of all the groups in the supplementary group access list. Not available on all platforms.</source>
          <target state="translated">시스템 그룹 데이터베이스를 읽고 지정된 사용자가 구성원 인 모든 그룹을 사용하여 보충 그룹 액세스 목록을 초기화합니다. 지정된 &lt;em&gt;gid를&lt;/em&gt; 가진 그룹 도 목록에 추가됩니다. 보충 그룹 액세스 목록에있는 모든 그룹 의 결과 &lt;code&gt;Array&lt;/code&gt; 을 리턴합니다 . 모든 플랫폼에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ff1382981d607629b6f24ce8f7181ab024e994b8" translate="yes" xml:space="preserve">
          <source>Initiates an SSL/TLS handshake with a server. The handshake may be started after unencrypted data has been sent over the socket.</source>
          <target state="translated">서버와의 SSL / TLS 핸드 셰이크를 시작합니다. 암호화되지 않은 데이터가 소켓을 통해 전송 된 후 핸드 셰이크가 시작될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48f45e87deb7ec1a472ef5e25cea96ce34ad5e6a" translate="yes" xml:space="preserve">
          <source>Initiates garbage collection, even if manually disabled.</source>
          <target state="translated">수동으로 비활성화 된 경우에도 가비지 수집을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8159b1ca416869ef46ad2550c80edcba244a69b7" translate="yes" xml:space="preserve">
          <source>Initiates garbage collection, unless manually disabled.</source>
          <target state="translated">수동으로 비활성화하지 않는 한 가비지 수집을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e47eed7458e3265138906868610283af34bd9d70" translate="yes" xml:space="preserve">
          <source>Initiates the SSL/TLS handshake as a client in non-blocking manner.</source>
          <target state="translated">비 차단 방식으로 SSL / TLS 핸드 셰이크를 클라이언트로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a5d8997eba91022793087964f0f51efe2c677013" translate="yes" xml:space="preserve">
          <source>Initiates the SSL/TLS handshake as a server in non-blocking manner.</source>
          <target state="translated">비 차단 방식으로 SSL / TLS 핸드 셰이크를 서버로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="1af2e0631c075eae1992828e36cd36bf51e10a3f" translate="yes" xml:space="preserve">
          <source>Initiates the termination of the Ruby script by raising the &lt;a href=&quot;systemexit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception. This exception may be caught. The optional parameter is used to return a status code to the invoking environment. &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt; of &lt;em&gt;status&lt;/em&gt; means success and failure respectively. The interpretation of other integer values are system dependent.</source>
          <target state="translated">&lt;a href=&quot;systemexit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt; 예외 를 발생시켜 Ruby 스크립트 종료를 시작합니다 . 이 예외가 포착 될 수 있습니다. 선택적 매개 변수는 호출 환경에 상태 코드를 리턴하는 데 사용됩니다. &lt;em&gt;상태의 &lt;/em&gt; &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;FALSE&lt;/code&gt; 은 각각 성공과 실패를 의미 합니다 . 다른 정수 값의 해석은 시스템에 따라 다릅니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da47bd094f8f51bb22ce86e9bf2efe07ab25b154" translate="yes" xml:space="preserve">
          <source>Initiates the termination of the Ruby script by raising the &lt;code&gt;SystemExit&lt;/code&gt; exception. This exception may be caught. The optional parameter is used to return a status code to the invoking environment. &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt; of &lt;em&gt;status&lt;/em&gt; means success and failure respectively. The interpretation of other integer values are system dependent.</source>
          <target state="translated">&lt;code&gt;SystemExit&lt;/code&gt; 예외 를 발생시켜 Ruby 스크립트 종료를 시작합니다 . 이 예외가 발생할 수 있습니다. 선택적 매개 변수는 호출 코드 환경에 상태 코드를 리턴하는 데 사용됩니다. &lt;em&gt;상태의 &lt;/em&gt; &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;FALSE&lt;/code&gt; 은 각각 성공과 실패를 의미 합니다 . 다른 정수 값의 해석은 시스템에 따라 다릅니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ca8a0d344a0e19a0d77c7ff904b9681383397eb" translate="yes" xml:space="preserve">
          <source>Injector</source>
          <target state="translated">Injector</target>
        </trans-unit>
        <trans-unit id="ee2370833f30eb448197b966183503fdfbcd79dd" translate="yes" xml:space="preserve">
          <source>Injector#append_to</source>
          <target state="translated">Injector#append_to</target>
        </trans-unit>
        <trans-unit id="e16d25bc297932d263bb249091569017ddcd834e" translate="yes" xml:space="preserve">
          <source>Injector#build_gem_lines</source>
          <target state="translated">Injector#build_gem_lines</target>
        </trans-unit>
        <trans-unit id="813bdeda185d956c195b08b6ec01d5df8b806401" translate="yes" xml:space="preserve">
          <source>Injector#conservative_version</source>
          <target state="translated">Injector#conservative_version</target>
        </trans-unit>
        <trans-unit id="d2eea097a94fd776d46be9f411769dadcf199b48" translate="yes" xml:space="preserve">
          <source>Injector#cross_check_for_errors</source>
          <target state="translated">Injector#cross_check_for_errors</target>
        </trans-unit>
        <trans-unit id="9f4134f5d9219842ba5f28a272f53659d4382e53" translate="yes" xml:space="preserve">
          <source>Injector#inject</source>
          <target state="translated">Injector#inject</target>
        </trans-unit>
        <trans-unit id="e50387fe9ac40881386efc85a035d22da3fdf6f9" translate="yes" xml:space="preserve">
          <source>Injector#remove</source>
          <target state="translated">Injector#remove</target>
        </trans-unit>
        <trans-unit id="b17383dd7a961b2684d07f84cb79a22ef94927dc" translate="yes" xml:space="preserve">
          <source>Injector#remove_deps</source>
          <target state="translated">Injector#remove_deps</target>
        </trans-unit>
        <trans-unit id="ad41e9a1e7a7c3dc768898b41e26e2d2a3ed9586" translate="yes" xml:space="preserve">
          <source>Injector#remove_gems_from_dependencies</source>
          <target state="translated">Injector#remove_gems_from_dependencies</target>
        </trans-unit>
        <trans-unit id="d6d29387e3d0e4de73bcb6a5f15a09c0cc982270" translate="yes" xml:space="preserve">
          <source>Injector#remove_gems_from_gemfile</source>
          <target state="translated">Injector#remove_gems_from_gemfile</target>
        </trans-unit>
        <trans-unit id="1caf5338863fd24be071624568855785a82d6a4d" translate="yes" xml:space="preserve">
          <source>Injector#remove_nested_blocks</source>
          <target state="translated">Injector#remove_nested_blocks</target>
        </trans-unit>
        <trans-unit id="c1d4448db2a98451a0a107b5cfe9ba279c369f8f" translate="yes" xml:space="preserve">
          <source>Injector#show_warning</source>
          <target state="translated">Injector#show_warning</target>
        </trans-unit>
        <trans-unit id="a5518fdd0106f4c530c6bd146976d37f6669ab74" translate="yes" xml:space="preserve">
          <source>Injector#version_prefix</source>
          <target state="translated">Injector#version_prefix</target>
        </trans-unit>
        <trans-unit id="d2f3b2379cd6bb315daedbf7ea668275f258e758" translate="yes" xml:space="preserve">
          <source>Injector::inject</source>
          <target state="translated">Injector::inject</target>
        </trans-unit>
        <trans-unit id="21a5363c9246b1bdad59a3ff0d8c8d8e48751dc1" translate="yes" xml:space="preserve">
          <source>Injector::new</source>
          <target state="translated">Injector::new</target>
        </trans-unit>
        <trans-unit id="929c3bff7f322a11d9e6cf1b82bf62ae2be037cd" translate="yes" xml:space="preserve">
          <source>Injector::remove</source>
          <target state="translated">Injector::remove</target>
        </trans-unit>
        <trans-unit id="d547ba04eec79a0b1d8c7751ab23c521b871e795" translate="yes" xml:space="preserve">
          <source>Injects text right after the class definition. Since it depends on &lt;a href=&quot;actions#method-i-insert_into_file&quot;&gt;&lt;code&gt;insert_into_file&lt;/code&gt;&lt;/a&gt;, it's reversible.</source>
          <target state="translated">클래스 정의 바로 뒤에 텍스트를 삽입합니다. &lt;a href=&quot;actions#method-i-insert_into_file&quot;&gt; &lt;code&gt;insert_into_file&lt;/code&gt; 에&lt;/a&gt; 의존하기 때문에 가역적입니다.</target>
        </trans-unit>
        <trans-unit id="9ebe2c18de79e9838ba514bc7a4833713cd05658" translate="yes" xml:space="preserve">
          <source>Injects text right after the module definition. Since it depends on &lt;a href=&quot;actions#method-i-insert_into_file&quot;&gt;&lt;code&gt;insert_into_file&lt;/code&gt;&lt;/a&gt;, it's reversible.</source>
          <target state="translated">모듈 정의 바로 뒤에 텍스트를 삽입합니다. &lt;a href=&quot;actions#method-i-insert_into_file&quot;&gt; &lt;code&gt;insert_into_file&lt;/code&gt; 에&lt;/a&gt; 의존하기 때문에 가역적입니다.</target>
        </trans-unit>
        <trans-unit id="c26879501324081d7b6c82d4d8d00a356eead6ce" translate="yes" xml:space="preserve">
          <source>Injects the given content into a file. Different from &lt;a href=&quot;actions#method-i-gsub_file&quot;&gt;&lt;code&gt;gsub_file&lt;/code&gt;&lt;/a&gt;, this method is reversible.</source>
          <target state="translated">주어진 내용을 파일에 삽입합니다. 달리 &lt;a href=&quot;actions#method-i-gsub_file&quot;&gt; &lt;code&gt;gsub_file&lt;/code&gt; &lt;/a&gt; ,이 방법은 가역적이다.</target>
        </trans-unit>
        <trans-unit id="37c47ddf9c7cc6fa4cd96d1b56d9ec1154f1b735" translate="yes" xml:space="preserve">
          <source>Inline comments start with the &lt;code&gt;#&lt;/code&gt; character and continue until the end of the line:</source>
          <target state="translated">인라인 주석은 &lt;code&gt;#&lt;/code&gt; 문자로 시작 하여 줄 끝까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="d783a26a588d49712bf21f8fc47347e3fb34a2b6" translate="yes" xml:space="preserve">
          <source>Input Options</source>
          <target state="translated">입력 옵션</target>
        </trans-unit>
        <trans-unit id="7656ed554262f7ac2ceb0432b1e0f2da16793520" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;deflate_string&lt;/code&gt; into the inflate stream and returns the output from the stream. Calling this method, both the input and the output buffer of the stream are flushed. If string is &lt;code&gt;nil&lt;/code&gt;, this method finishes the stream, just like &lt;a href=&quot;zstream#method-i-finish&quot;&gt;&lt;code&gt;Zlib::ZStream#finish&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;deflate_string&lt;/code&gt; 을 팽창 스트림에 입력 하고 스트림의 출력을 리턴합니다. 이 메소드를 호출하면 스트림의 입력 및 출력 버퍼가 모두 플러시됩니다. string이 &lt;code&gt;nil&lt;/code&gt; 인 경우 ,이 메소드는 &lt;a href=&quot;zstream#method-i-finish&quot;&gt; &lt;code&gt;Zlib::ZStream#finish&lt;/code&gt; &lt;/a&gt; 와 같이 스트림을 완료 합니다.</target>
        </trans-unit>
        <trans-unit id="edcd86fc88c292fd50a0e8135ee00173f135d8fd" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;string&lt;/code&gt; into the deflate stream and returns the output from the stream. On calling this method, both the input and the output buffers of the stream are flushed. If &lt;code&gt;string&lt;/code&gt; is nil, this method finishes the stream, just like &lt;a href=&quot;zstream#method-i-finish&quot;&gt;&lt;code&gt;Zlib::ZStream#finish&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">deflate 스트림에 &lt;code&gt;string&lt;/code&gt; 을 입력 하고 스트림의 출력을 반환합니다. 이 메소드를 호출하면 스트림의 입력 및 출력 버퍼가 모두 플러시됩니다. 경우 &lt;code&gt;string&lt;/code&gt; 전무하다,이 방법처럼, 스트림을 완료 &lt;a href=&quot;zstream#method-i-finish&quot;&gt; &lt;code&gt;Zlib::ZStream#finish&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea7a8c306a8b672305c8de8913b882008d357919" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;string&lt;/code&gt; into the deflate stream just like &lt;a href=&quot;deflate#method-i-deflate&quot;&gt;&lt;code&gt;Zlib::Deflate#deflate&lt;/code&gt;&lt;/a&gt;, but returns the &lt;a href=&quot;deflate&quot;&gt;&lt;code&gt;Zlib::Deflate&lt;/code&gt;&lt;/a&gt; object itself. The output from the stream is preserved in output buffer.</source>
          <target state="translated">&lt;a href=&quot;deflate#method-i-deflate&quot;&gt; &lt;code&gt;Zlib::Deflate#deflate&lt;/code&gt; &lt;/a&gt; 과 같이 &lt;code&gt;string&lt;/code&gt; 을 수축 스트림에 입력 하지만 &lt;a href=&quot;deflate&quot;&gt; &lt;code&gt;Zlib::Deflate&lt;/code&gt; &lt;/a&gt; 객체 자체를 반환합니다 . 스트림의 출력은 출력 버퍼에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="b7e476c1c8c5b549a52928e57c2026c4ab7af211" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;string&lt;/code&gt; into the end of input buffer and skips data until a full flush point can be found. If the point is found in the buffer, this method flushes the buffer and returns false. Otherwise it returns &lt;code&gt;true&lt;/code&gt; and the following data of full flush point is preserved in the buffer.</source>
          <target state="translated">입력 버퍼의 끝에 &lt;code&gt;string&lt;/code&gt; 을 입력하고 전체 플러시 지점을 찾을 때까지 데이터를 건너 뜁니다. 버퍼에서 포인트가 발견되면이 메소드는 버퍼를 플러시하고 false를 리턴합니다. 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 를 리턴 하고 전체 플러시 포인트의 다음 데이터가 버퍼에 보존됩니다.</target>
        </trans-unit>
        <trans-unit id="534d62fa25b93b5be807767144df1c296f7e31e7" translate="yes" xml:space="preserve">
          <source>Insert or update key-value pairs.</source>
          <target state="translated">키-값 쌍을 삽입하거나 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="d4d828f47947156a3d99b5be6675d904d1c0eb6a" translate="yes" xml:space="preserve">
          <source>Insert text into the line at the current cursor position.</source>
          <target state="translated">현재 커서 위치에서 줄에 텍스트를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="dee46006138d065749ddc6d06396a6549608fa9c" translate="yes" xml:space="preserve">
          <source>Insert values:</source>
          <target state="translated">값 삽입 :</target>
        </trans-unit>
        <trans-unit id="a9461c0bccfee7431238f482502f8bb04a5d21b9" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;switch&lt;/code&gt; at the head of the list, and associates short, long and negated long options. Arguments are:</source>
          <target state="translated">리스트 의 헤드에 &lt;code&gt;switch&lt;/code&gt; 를 삽입 하고 짧고 길고 부정 된 긴 옵션을 연관시킵니다. 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3c215b9ea2e97d5755afb98d26499cdbf340dbce" translate="yes" xml:space="preserve">
          <source>Inserts &lt;em&gt;other_str&lt;/em&gt; before the character at the given &lt;em&gt;index&lt;/em&gt;, modifying &lt;em&gt;str&lt;/em&gt;. Negative indices count from the end of the string, and insert &lt;em&gt;after&lt;/em&gt; the given character. The intent is insert &lt;em&gt;aString&lt;/em&gt; so that it starts at the given &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;인덱스&lt;/em&gt; 에서 문자 앞에 &lt;em&gt;other_str&lt;/em&gt; 을 삽입 하여 &lt;em&gt;str을&lt;/em&gt; 수정합니다 . 음수 인덱스는 문자열의 끝부터 세고 주어진 문자 &lt;em&gt;뒤에&lt;/em&gt; 삽입 합니다. 의도는 주어진 &lt;em&gt;인덱스&lt;/em&gt; 에서 시작하도록 &lt;em&gt;aString을&lt;/em&gt; 삽입 하는 것 입니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1142c6382921a504513133bfcb3813df501ebde4" translate="yes" xml:space="preserve">
          <source>Inserts given &lt;code&gt;objects&lt;/code&gt; before or after the element at Integer index &lt;code&gt;offset&lt;/code&gt;; returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Integer 인덱스 &lt;code&gt;offset&lt;/code&gt; 에서 요소 앞이나 뒤에 주어진 &lt;code&gt;objects&lt;/code&gt; 를 삽입합니다 . &lt;code&gt;self&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="93be9be88a0d186ca5e619eff58ba2dbec660a2d" translate="yes" xml:space="preserve">
          <source>Inserts string into the encoding converter. The string will be converted to the destination encoding and output on later conversions.</source>
          <target state="translated">인코딩 변환기에 문자열을 삽입합니다. 문자열은 대상 인코딩으로 변환되고 이후 변환시 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="f0690bdaab4e0af4fc4db64b692d79397b46eb81" translate="yes" xml:space="preserve">
          <source>Inserts the given &lt;code&gt;other_string&lt;/code&gt; into &lt;code&gt;self&lt;/code&gt;; returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;other_string&lt;/code&gt; 을 &lt;code&gt;self&lt;/code&gt; 에 삽입합니다 . &lt;code&gt;self&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b0bd333e9fed15d70a6a96a82a07eeaa41a436d5" translate="yes" xml:space="preserve">
          <source>Inserts the given values before the element with the given &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;index&lt;/code&gt; 가진 요소 앞에 주어진 값을 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="16cbab9195c6f34855ee1c374d0a6fa2602a7cae" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;map&lt;/code&gt;, the block of code is treated as a regular (non-lambda) proc, which means that the internal arrays will be deconstructed to pairs of arguments, and &lt;code&gt;return&lt;/code&gt; will exit from the method &lt;code&gt;test&lt;/code&gt;. That would not be possible with a stricter lambda.</source>
          <target state="translated">내부 &lt;code&gt;map&lt;/code&gt; , 코드 블록은 내부 배열 인수 쌍 해체되는 것을 의미 일정한 (비 람다) PROC로 처리되고, &lt;code&gt;return&lt;/code&gt; 상기 방법을 종료한다 &lt;code&gt;test&lt;/code&gt; . 더 엄격한 람다로는 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="f6aed795e0d33dd57be7aeacaedaa293d5568e9f" translate="yes" xml:space="preserve">
          <source>Inside a rescue block is the only valid location for &lt;code&gt;retry&lt;/code&gt;, all other uses will raise a &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. If you wish to retry a block iteration use &lt;code&gt;redo&lt;/code&gt;. See &lt;a href=&quot;control_expressions_rdoc&quot;&gt;Control Expressions&lt;/a&gt; for details.</source>
          <target state="translated">복구 블록 안에는 &lt;code&gt;retry&lt;/code&gt; 할 수있는 유일한 유효한 위치가 있으며 다른 모든 용도에서는 &lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다. 블록 반복을 다시 시도하려면 &lt;code&gt;redo&lt;/code&gt; 를 사용하십시오 . 자세한 내용은 &lt;a href=&quot;control_expressions_rdoc&quot;&gt;컨트롤 표현식&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ca524db81bcb99f3382cd301ce47b0c595951595" translate="yes" xml:space="preserve">
          <source>Install socket-level Network &lt;a href=&quot;../kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; Extension</source>
          <target state="translated">소켓 레벨 네트워크 &lt;a href=&quot;../kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 확장 설치</target>
        </trans-unit>
        <trans-unit id="40ba4802bb14b2e37cd69eb7f1da00909c728741" translate="yes" xml:space="preserve">
          <source>Install socket-level Network &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; Extension</source>
          <target state="translated">소켓 레벨 네트워크 &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 확장 설치</target>
        </trans-unit>
        <trans-unit id="da5e9f46155832435f6f0a14a4cd27ea1b1a4d34" translate="yes" xml:space="preserve">
          <source>Install the gem specified by the spec at appropriate path. `install_path` provides a sufficient default, if the source can only satisfy one gem, but is not binding.</source>
          <target state="translated">스펙에 지정된 gem을 적절한 경로에 설치하십시오. `install_path`는 소스가 하나의 gem 만 만족할 수 있지만 바인딩이 아닌 경우 충분한 기본값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b32f3008bf0330dc691f3e5bc5d65acd9c33f09c" translate="yes" xml:space="preserve">
          <source>Installer</source>
          <target state="translated">Installer</target>
        </trans-unit>
        <trans-unit id="cabd321e7e22e7dbef227590d1e013e8f540b300" translate="yes" xml:space="preserve">
          <source>Installer#can_install_in_parallel?</source>
          <target state="translated">Installer#can_install_in_parallel?</target>
        </trans-unit>
        <trans-unit id="5e7e28c7eaad97c532fb75aa8dda6d612b4bbba1" translate="yes" xml:space="preserve">
          <source>Installer#create_bundle_path</source>
          <target state="translated">Installer#create_bundle_path</target>
        </trans-unit>
        <trans-unit id="af1cdede94406fc107461eaebe6d186b172bdb0f" translate="yes" xml:space="preserve">
          <source>Installer#ensure_specs_are_compatible!</source>
          <target state="translated">Installer#ensure_specs_are_compatible!</target>
        </trans-unit>
        <trans-unit id="ae817f26c35cb91f9aa7d627cf6c22471d48791d" translate="yes" xml:space="preserve">
          <source>Installer#generate_bundler_executable_stubs</source>
          <target state="translated">Installer#generate_bundler_executable_stubs</target>
        </trans-unit>
        <trans-unit id="9147c0efa654396f9f1f3c49e2764b522b1cb52b" translate="yes" xml:space="preserve">
          <source>Installer#generate_standalone_bundler_executable_stubs</source>
          <target state="translated">Installer#generate_standalone_bundler_executable_stubs</target>
        </trans-unit>
        <trans-unit id="8fd0c5f268c85d15a71b70916ca36a614f5ccf28" translate="yes" xml:space="preserve">
          <source>Installer#install</source>
          <target state="translated">Installer#install</target>
        </trans-unit>
        <trans-unit id="99617773a8aaade2d09e0704c328572acdba7c02" translate="yes" xml:space="preserve">
          <source>Installer#install_in_parallel</source>
          <target state="translated">Installer#install_in_parallel</target>
        </trans-unit>
        <trans-unit id="0f259bbfcfea6c8b502105ad6ff51cab5ffc30f4" translate="yes" xml:space="preserve">
          <source>Installer#installation_parallelization</source>
          <target state="translated">Installer#installation_parallelization</target>
        </trans-unit>
        <trans-unit id="a0a9af3f7bd516ff7b31ed5138e2b22cb8e205ba" translate="yes" xml:space="preserve">
          <source>Installer#load_plugins</source>
          <target state="translated">Installer#load_plugins</target>
        </trans-unit>
        <trans-unit id="adcd63624cd4542e78e019b1386d1e638a9c85ff" translate="yes" xml:space="preserve">
          <source>Installer#lock</source>
          <target state="translated">Installer#lock</target>
        </trans-unit>
        <trans-unit id="72886e46ce91c05bd09d566a2d43caa3c4c82465" translate="yes" xml:space="preserve">
          <source>Installer#post_install_messages</source>
          <target state="translated">Installer#post_install_messages</target>
        </trans-unit>
        <trans-unit id="e79749d9315349ecb9f7a079662e5023757af973" translate="yes" xml:space="preserve">
          <source>Installer#processor_count</source>
          <target state="translated">Installer#processor_count</target>
        </trans-unit>
        <trans-unit id="1a065783093e38f86bfdd4d6325eba32ce84442d" translate="yes" xml:space="preserve">
          <source>Installer#resolve_if_needed</source>
          <target state="translated">Installer#resolve_if_needed</target>
        </trans-unit>
        <trans-unit id="30e7ebbdf2d298df434f3971eef1cc655e520692" translate="yes" xml:space="preserve">
          <source>Installer#run</source>
          <target state="translated">Installer#run</target>
        </trans-unit>
        <trans-unit id="4e1102085e4f533b487e849b31ff71c703ade889" translate="yes" xml:space="preserve">
          <source>Installer#warn_on_incompatible_bundler_deps</source>
          <target state="translated">Installer#warn_on_incompatible_bundler_deps</target>
        </trans-unit>
        <trans-unit id="1ccb58cd13ad54d488c23aba4e39f82e8cf202e7" translate="yes" xml:space="preserve">
          <source>Installer::ambiguous_gems</source>
          <target state="translated">Installer::ambiguous_gems</target>
        </trans-unit>
        <trans-unit id="5af20ada841942b0c68e992c7a7d70e4d1029896" translate="yes" xml:space="preserve">
          <source>Installer::install</source>
          <target state="translated">Installer::install</target>
        </trans-unit>
        <trans-unit id="bf5dbb4e114909dc517a7b31f799fd888a066c32" translate="yes" xml:space="preserve">
          <source>Installer::new</source>
          <target state="translated">Installer::new</target>
        </trans-unit>
        <trans-unit id="7b6213b8c5b179df17b03c18a31240201757219f" translate="yes" xml:space="preserve">
          <source>Installing a field converter does not affect already-read rows:</source>
          <target state="translated">필드 변환기를 설치해도 이미 읽은 행에는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="94d861359ae44e0e8dfef45c7b8ea08772cfda2d" translate="yes" xml:space="preserve">
          <source>Installs a new plugin by the given name</source>
          <target state="translated">주어진 이름으로 새 플러그인을 설치합니다</target>
        </trans-unit>
        <trans-unit id="8307f90137806b1b8cfa33d76801735a3c8c4d43" translate="yes" xml:space="preserve">
          <source>Installs the plugin from &lt;a href=&quot;../definition&quot;&gt;&lt;code&gt;Definition&lt;/code&gt;&lt;/a&gt; object created by limited parsing of Gemfile searching for plugins to be installed</source>
          <target state="translated">설치 될 플러그인을 검색하는 Gemfile의 제한된 구문 분석으로 생성 된 &lt;a href=&quot;../definition&quot;&gt; &lt;code&gt;Definition&lt;/code&gt; &lt;/a&gt; 오브젝트에서 플러그인을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="53a339d77e0d03428998ef1129b4d3a78175e8ea" translate="yes" xml:space="preserve">
          <source>Installs the plugin from rubygems source and returns the path where the plugin was installed</source>
          <target state="translated">rubygems 소스에서 플러그인을 설치하고 플러그인이 설치된 경로를 반환합니다</target>
        </trans-unit>
        <trans-unit id="5dee83eb988992d3df9e5d69b94e1c09c15fb49e" translate="yes" xml:space="preserve">
          <source>Installs the plugins and deps from the provided specs and returns map of gems to their paths</source>
          <target state="translated">제공된 사양에서 플러그인 및 뎁을 설치하고 gem의 맵을 해당 경로로 반환</target>
        </trans-unit>
        <trans-unit id="5f97f8775628e86310829ab9e8c465258ab92a5e" translate="yes" xml:space="preserve">
          <source>Instance</source>
          <target state="translated">Instance</target>
        </trans-unit>
        <trans-unit id="dd4a61ab3dc44ab9b5a205303724a68f74a735a7" translate="yes" xml:space="preserve">
          <source>Instance Methods</source>
          <target state="translated">인스턴스 방법</target>
        </trans-unit>
        <trans-unit id="aa6dfe54274ed1710b82f903b6abd73713a2f05a" translate="yes" xml:space="preserve">
          <source>Instance Variables</source>
          <target state="translated">인스턴스 변수</target>
        </trans-unit>
        <trans-unit id="ab91ac16b8eaca1a003e1f456a797053f454508e" translate="yes" xml:space="preserve">
          <source>Instance methods defined in a module are only callable when included. These methods have access to the constants defined when they were included through the ancestors list:</source>
          <target state="translated">모듈에 정의 된 인스턴스 메소드는 포함 된 경우에만 호출 할 수 있습니다. 이 메소드는 상위 목록을 통해 포함되었을 때 정의 된 상수에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b107b5623fc53fba60fa12dc60efeade18b4caf9" translate="yes" xml:space="preserve">
          <source>Instance variables are not allowed on a class or module.</source>
          <target state="translated">클래스 또는 모듈에서는 인스턴스 변수를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5204ed8f7400ef971cfb941b65a445ff5b07d34e" translate="yes" xml:space="preserve">
          <source>Instance variables are shared across all methods for the same object.</source>
          <target state="translated">인스턴스 변수는 동일한 객체에 대한 모든 메소드에서 공유됩니다.</target>
        </trans-unit>
        <trans-unit id="1db8f817f339280552787d550366e0b49939f9d0" translate="yes" xml:space="preserve">
          <source>Instance#&amp;lt;&amp;lt;</source>
          <target state="translated">Instance#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="f5aea0bfd65f35ebe91fc7450fd50e91f68fa7e5" translate="yes" xml:space="preserve">
          <source>Instance#==</source>
          <target state="translated">Instance#==</target>
        </trans-unit>
        <trans-unit id="a369b1cc9a19c283c82339a598e46d7b5a60d6f4" translate="yes" xml:space="preserve">
          <source>Instance#base64digest</source>
          <target state="translated">Instance#base64digest</target>
        </trans-unit>
        <trans-unit id="13437a8d85b8fa1be873e0eb57d752c09d5db046" translate="yes" xml:space="preserve">
          <source>Instance#base64digest!</source>
          <target state="translated">Instance#base64digest!</target>
        </trans-unit>
        <trans-unit id="5e2da1ab934b30ed932f606e08bc983e89360b8d" translate="yes" xml:space="preserve">
          <source>Instance#block_length</source>
          <target state="translated">Instance#block_length</target>
        </trans-unit>
        <trans-unit id="9c6962a80b965af1354758063c2ff934d184cb8d" translate="yes" xml:space="preserve">
          <source>Instance#bubblebabble</source>
          <target state="translated">Instance#bubblebabble</target>
        </trans-unit>
        <trans-unit id="1e537abba7b9c3172c166742a8b18082b360a1a4" translate="yes" xml:space="preserve">
          <source>Instance#digest</source>
          <target state="translated">Instance#digest</target>
        </trans-unit>
        <trans-unit id="6b916108877f86b6f8185ced0064741e6a9f16ca" translate="yes" xml:space="preserve">
          <source>Instance#digest!</source>
          <target state="translated">Instance#digest!</target>
        </trans-unit>
        <trans-unit id="b8256532b084cbef01c30e4534aeefc58b52d801" translate="yes" xml:space="preserve">
          <source>Instance#digest_length</source>
          <target state="translated">Instance#digest_length</target>
        </trans-unit>
        <trans-unit id="d69a113fcc624d82fb5e52bc0697ca83fe866dae" translate="yes" xml:space="preserve">
          <source>Instance#file</source>
          <target state="translated">Instance#file</target>
        </trans-unit>
        <trans-unit id="e57733e98608644a0b1a07eb0e5b3074b3975887" translate="yes" xml:space="preserve">
          <source>Instance#finish</source>
          <target state="translated">Instance#finish</target>
        </trans-unit>
        <trans-unit id="7909933ecd52d465cc7005ecb3ce135493f14f4d" translate="yes" xml:space="preserve">
          <source>Instance#hexdigest</source>
          <target state="translated">Instance#hexdigest</target>
        </trans-unit>
        <trans-unit id="8f14457761e3cf7fbb24d122f515bd89e2f136c8" translate="yes" xml:space="preserve">
          <source>Instance#hexdigest!</source>
          <target state="translated">Instance#hexdigest!</target>
        </trans-unit>
        <trans-unit id="5b343550ec9dcc1254217709f9ff8cb85239b61b" translate="yes" xml:space="preserve">
          <source>Instance#inspect</source>
          <target state="translated">Instance#inspect</target>
        </trans-unit>
        <trans-unit id="4e0e3e69ee3dd6d9713f62ef9d3b165a9482048f" translate="yes" xml:space="preserve">
          <source>Instance#length</source>
          <target state="translated">Instance#length</target>
        </trans-unit>
        <trans-unit id="deda894b0bf988b9c5212c519cf48253b861227c" translate="yes" xml:space="preserve">
          <source>Instance#new</source>
          <target state="translated">Instance#new</target>
        </trans-unit>
        <trans-unit id="bc57591fe936a48a4550497ef55e6d35f18e4dfa" translate="yes" xml:space="preserve">
          <source>Instance#reset</source>
          <target state="translated">Instance#reset</target>
        </trans-unit>
        <trans-unit id="9bbacb4a78c3ead484e0b851897de4c123674a81" translate="yes" xml:space="preserve">
          <source>Instance#size</source>
          <target state="translated">Instance#size</target>
        </trans-unit>
        <trans-unit id="50d575864c3e82b0903621822ecf8c3800569685" translate="yes" xml:space="preserve">
          <source>Instance#to_s</source>
          <target state="translated">Instance#to_s</target>
        </trans-unit>
        <trans-unit id="6587f45d5537c5e5d1a980a8fbe62e8d1f631b1c" translate="yes" xml:space="preserve">
          <source>Instance#update</source>
          <target state="translated">Instance#update</target>
        </trans-unit>
        <trans-unit id="df5aecf503b5dbacb861575e726c2cd57f4e6cf3" translate="yes" xml:space="preserve">
          <source>Instantiating a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;cipher/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 인스턴스화</target>
        </trans-unit>
        <trans-unit id="1787620ba54c23b3887922b350666c5ce235e5ff" translate="yes" xml:space="preserve">
          <source>Instead of &lt;a href=&quot;ractor#method-c-receive&quot;&gt;&lt;code&gt;Ractor.receive&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ractor#method-c-receive_if&quot;&gt;&lt;code&gt;Ractor.receive_if&lt;/code&gt;&lt;/a&gt; can provide a pattern by a block and you can choose the receiving message.</source>
          <target state="translated">대신 &lt;a href=&quot;ractor#method-c-receive&quot;&gt; &lt;code&gt;Ractor.receive&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ractor#method-c-receive_if&quot;&gt; &lt;code&gt;Ractor.receive_if&lt;/code&gt; 는&lt;/a&gt; 블록에 의해 패턴을 제공 할 수 있으며 수신 메시지를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92f9572671bd56345b4d4aa1a801350278531b94" translate="yes" xml:space="preserve">
          <source>Instead of accessing the shared state, the objects should be passed to and from ractors via sending and receiving objects as messages.</source>
          <target state="translated">공유 상태에 액세스하는 대신 개체는 메시지로 개체를 보내고받는 방식으로 레이터와주고 받아야합니다.</target>
        </trans-unit>
        <trans-unit id="10eb15123815dac61ce365e5cbb876eb455e4ad4" translate="yes" xml:space="preserve">
          <source>Instead of specifying mandatory or optional arguments directly in the switch parameter, this separate parameter can be used.</source>
          <target state="translated">switch 매개 변수에 필수 또는 선택적 인수를 직접 지정하는 대신이 개별 매개 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c042f3d9b71b32db250543be269d410c99d13527" translate="yes" xml:space="preserve">
          <source>Instead of:</source>
          <target state="translated">대신에:</target>
        </trans-unit>
        <trans-unit id="f561bde9d2e4e7f7f99d456e84920fe512a1a7ac" translate="yes" xml:space="preserve">
          <source>InstructionSequence</source>
          <target state="translated">InstructionSequence</target>
        </trans-unit>
        <trans-unit id="bf08f424abb717083f3464b70a299bafc666638a" translate="yes" xml:space="preserve">
          <source>InstructionSequence#absolute_path</source>
          <target state="translated">InstructionSequence#absolute_path</target>
        </trans-unit>
        <trans-unit id="ecbd5d96cb5014f8b4d3f983e4416ae62ff7f2de" translate="yes" xml:space="preserve">
          <source>InstructionSequence#base_label</source>
          <target state="translated">InstructionSequence#base_label</target>
        </trans-unit>
        <trans-unit id="39d9fd0efcd5c41cdfae8fce1f02b5399329b0ff" translate="yes" xml:space="preserve">
          <source>InstructionSequence#disasm</source>
          <target state="translated">InstructionSequence#disasm</target>
        </trans-unit>
        <trans-unit id="65a4afacd79ac55a25bb92999262c5854b278f2b" translate="yes" xml:space="preserve">
          <source>InstructionSequence#disassemble</source>
          <target state="translated">InstructionSequence#disassemble</target>
        </trans-unit>
        <trans-unit id="eb2ebcdae960c7a4607b2adb9f84bee422abc2e8" translate="yes" xml:space="preserve">
          <source>InstructionSequence#each_child</source>
          <target state="translated">InstructionSequence#each_child</target>
        </trans-unit>
        <trans-unit id="29f3fb61379ff17e1cad7a1217a886221f049643" translate="yes" xml:space="preserve">
          <source>InstructionSequence#eval</source>
          <target state="translated">InstructionSequence#eval</target>
        </trans-unit>
        <trans-unit id="f3f92975bcae0f7e221bd0accf5c9aa5a095940c" translate="yes" xml:space="preserve">
          <source>InstructionSequence#first_lineno</source>
          <target state="translated">InstructionSequence#first_lineno</target>
        </trans-unit>
        <trans-unit id="0e7953eccc2b0088ef1ccf59a8de8591c1985873" translate="yes" xml:space="preserve">
          <source>InstructionSequence#inspect</source>
          <target state="translated">InstructionSequence#inspect</target>
        </trans-unit>
        <trans-unit id="f395b9c1d234067b1cd55d17c2170bb26dbb6d3d" translate="yes" xml:space="preserve">
          <source>InstructionSequence#label</source>
          <target state="translated">InstructionSequence#label</target>
        </trans-unit>
        <trans-unit id="4ea1c91ec0dc1380bc6b9707468d7afb573c157a" translate="yes" xml:space="preserve">
          <source>InstructionSequence#path</source>
          <target state="translated">InstructionSequence#path</target>
        </trans-unit>
        <trans-unit id="76824ac182f62e45b787ed867ffd7c82cfb0e756" translate="yes" xml:space="preserve">
          <source>InstructionSequence#to_a</source>
          <target state="translated">InstructionSequence#to_a</target>
        </trans-unit>
        <trans-unit id="0b14868a938bb6e3a7ac1c695db2aad8112e2e6e" translate="yes" xml:space="preserve">
          <source>InstructionSequence#to_binary</source>
          <target state="translated">InstructionSequence#to_binary</target>
        </trans-unit>
        <trans-unit id="1327265ccdb113a67d7ff9afa0355fb182f2a65a" translate="yes" xml:space="preserve">
          <source>InstructionSequence#trace_points</source>
          <target state="translated">InstructionSequence#trace_points</target>
        </trans-unit>
        <trans-unit id="5298a4dfd66290d02273f847da0b4bfdb0968cbf" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile</source>
          <target state="translated">InstructionSequence::compile</target>
        </trans-unit>
        <trans-unit id="8b1f8b0e6f8fd50a510da4d392d7a3eab22904a6" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile_file</source>
          <target state="translated">InstructionSequence::compile_file</target>
        </trans-unit>
        <trans-unit id="8c239958dffe8f5fa41780feb5c61139cbb58f5a" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile_option</source>
          <target state="translated">InstructionSequence::compile_option</target>
        </trans-unit>
        <trans-unit id="39c202f718e70f9b3bba9101870aa8b83a2771be" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile_option=</source>
          <target state="translated">InstructionSequence::compile_option=</target>
        </trans-unit>
        <trans-unit id="509f074376979282d0e9ee60912c1446be25698c" translate="yes" xml:space="preserve">
          <source>InstructionSequence::disasm</source>
          <target state="translated">InstructionSequence::disasm</target>
        </trans-unit>
        <trans-unit id="8557e66821be6deea6f51b8844d274e0cc2857c1" translate="yes" xml:space="preserve">
          <source>InstructionSequence::disassemble</source>
          <target state="translated">InstructionSequence::disassemble</target>
        </trans-unit>
        <trans-unit id="aa63e4d5f32010f2ea055258eda4a77b206da7a5" translate="yes" xml:space="preserve">
          <source>InstructionSequence::load_from_binary</source>
          <target state="translated">InstructionSequence::load_from_binary</target>
        </trans-unit>
        <trans-unit id="ede9dd1e53bbe6bc0e5a0ff663ae351f5cd6cc9a" translate="yes" xml:space="preserve">
          <source>InstructionSequence::load_from_binary_extra_data</source>
          <target state="translated">InstructionSequence::load_from_binary_extra_data</target>
        </trans-unit>
        <trans-unit id="ce310c9403c7b213ef0290692ec4be37b12dbbc8" translate="yes" xml:space="preserve">
          <source>InstructionSequence::new</source>
          <target state="translated">InstructionSequence::new</target>
        </trans-unit>
        <trans-unit id="e102a9238b123f807fd48aa04f7009715efcbbb0" translate="yes" xml:space="preserve">
          <source>InstructionSequence::of</source>
          <target state="translated">InstructionSequence::of</target>
        </trans-unit>
        <trans-unit id="29a8b35f0d1cc05daf78c831ab4b666dfefe276b" translate="yes" xml:space="preserve">
          <source>InsufficientStorage</source>
          <target state="translated">InsufficientStorage</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="f066b0b2bcb4b4c379455dabfde28865efa8da11" translate="yes" xml:space="preserve">
          <source>Integer argument &lt;code&gt;offset&lt;/code&gt;, if given and non-negative, specifies the maximum starting position in the</source>
          <target state="translated">정수 인수 &lt;code&gt;offset&lt;/code&gt; 이 주어지고 음수가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="79fdcac82295b650d3505f14b6a910c753f8f7e6" translate="yes" xml:space="preserve">
          <source>Integer argument &lt;code&gt;offset&lt;/code&gt;, if given, specifies the position in the string to begin the search:</source>
          <target state="translated">정수 인수 &lt;code&gt;offset&lt;/code&gt; 이 주어지면 검색을 시작할 문자열의 위치를 ​​지정합니다.</target>
        </trans-unit>
        <trans-unit id="be77884329736dd890511ef9cc9c6b3d07f055a6" translate="yes" xml:space="preserve">
          <source>Integer index.</source>
          <target state="translated">정수 인덱스.</target>
        </trans-unit>
        <trans-unit id="8dd774ccb72ffbd5f4e598e4bcdaeac6033e20fa" translate="yes" xml:space="preserve">
          <source>Integer#%</source>
          <target state="translated">Integer#%</target>
        </trans-unit>
        <trans-unit id="e336113ea5884c082471ea2741dac7d7f1255c3a" translate="yes" xml:space="preserve">
          <source>Integer#&amp;gt;</source>
          <target state="translated">Integer#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1248ed9ce1cb69e0cf5b0e736341c426b03b7c3e" translate="yes" xml:space="preserve">
          <source>Integer#&amp;lt;</source>
          <target state="translated">Integer#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="9b844ff638a6091c03ff298f89a51a6b783bc7dd" translate="yes" xml:space="preserve">
          <source>Integer#*</source>
          <target state="translated">Integer#*</target>
        </trans-unit>
        <trans-unit id="fb0a6aeb2dae205322c7a209b3e2efd767298225" translate="yes" xml:space="preserve">
          <source>Integer#**</source>
          <target state="translated">Integer#**</target>
        </trans-unit>
        <trans-unit id="21579129901a7669b813d3ee3bb4c8d15cd7b50a" translate="yes" xml:space="preserve">
          <source>Integer#+</source>
          <target state="translated">Integer#+</target>
        </trans-unit>
        <trans-unit id="d53f885e2cbe7109d29430141ce92865f5f90c58" translate="yes" xml:space="preserve">
          <source>Integer#-</source>
          <target state="translated">Integer#-</target>
        </trans-unit>
        <trans-unit id="7451e131dd4e0aab581a43fe96603cc668697fb7" translate="yes" xml:space="preserve">
          <source>Integer#-@</source>
          <target state="translated">Integer#-@</target>
        </trans-unit>
        <trans-unit id="ac1ad7ca2433d44934f9e87a31e309b7aed9016f" translate="yes" xml:space="preserve">
          <source>Integer#/</source>
          <target state="translated">Integer#/</target>
        </trans-unit>
        <trans-unit id="02d29654b38e27c6239a94bc9aedfbfb8264393d" translate="yes" xml:space="preserve">
          <source>Integer#==</source>
          <target state="translated">Integer#==</target>
        </trans-unit>
        <trans-unit id="03a0066e740ee48d4220d13bfd5139baab9e201f" translate="yes" xml:space="preserve">
          <source>Integer#===</source>
          <target state="translated">Integer#===</target>
        </trans-unit>
        <trans-unit id="afbcefa04b3d00bd8d8b9c7daa8cae569a95be7d" translate="yes" xml:space="preserve">
          <source>Integer#[]</source>
          <target state="translated">Integer#[]</target>
        </trans-unit>
        <trans-unit id="99fd68fab1bd57990df1400ee32ea02ac4f49ad1" translate="yes" xml:space="preserve">
          <source>Integer#^</source>
          <target state="translated">Integer#^</target>
        </trans-unit>
        <trans-unit id="09694bfad11ec71a5a70518968b865b6828ff8a7" translate="yes" xml:space="preserve">
          <source>Integer#abs</source>
          <target state="translated">Integer#abs</target>
        </trans-unit>
        <trans-unit id="f1a986ea3341c4c8e16e8b5f689ba288495fbc1d" translate="yes" xml:space="preserve">
          <source>Integer#ceil</source>
          <target state="translated">Integer#ceil</target>
        </trans-unit>
        <trans-unit id="29bb01f8652a9a39ac28bf27453a699c26ae518d" translate="yes" xml:space="preserve">
          <source>Integer#chr</source>
          <target state="translated">Integer#chr</target>
        </trans-unit>
        <trans-unit id="0be075c7b80e2eda5b08f66344d29a00e5c842df" translate="yes" xml:space="preserve">
          <source>Integer#div</source>
          <target state="translated">Integer#div</target>
        </trans-unit>
        <trans-unit id="4dfcd7805a4f46db29a136512f9aea526a10da4c" translate="yes" xml:space="preserve">
          <source>Integer#fdiv</source>
          <target state="translated">Integer#fdiv</target>
        </trans-unit>
        <trans-unit id="172472c8f596eea84543fb879bbf001038b56074" translate="yes" xml:space="preserve">
          <source>Integer#gcd</source>
          <target state="translated">Integer#gcd</target>
        </trans-unit>
        <trans-unit id="80781cf1bb93aa5101c7febccea14b4a5e04e769" translate="yes" xml:space="preserve">
          <source>Integer#lcm</source>
          <target state="translated">Integer#lcm</target>
        </trans-unit>
        <trans-unit id="456d58480ae947311d063f8446b267d0d0441f30" translate="yes" xml:space="preserve">
          <source>Integer#next</source>
          <target state="translated">Integer#next</target>
        </trans-unit>
        <trans-unit id="8b6cd861b8687dce34ef7607982ea8c8e5962167" translate="yes" xml:space="preserve">
          <source>Integer#odd?</source>
          <target state="translated">Integer#odd?</target>
        </trans-unit>
        <trans-unit id="e05f574dac2bcb402d13a662feb325a750b649f1" translate="yes" xml:space="preserve">
          <source>Integer#ord</source>
          <target state="translated">Integer#ord</target>
        </trans-unit>
        <trans-unit id="198e8646d8bea74b9aadabbd2c79a7fe1f04b6d7" translate="yes" xml:space="preserve">
          <source>Integer#pow</source>
          <target state="translated">Integer#pow</target>
        </trans-unit>
        <trans-unit id="2c5f36aa52d61a99cf0e3db0edc100d622beddea" translate="yes" xml:space="preserve">
          <source>Integer#pred</source>
          <target state="translated">Integer#pred</target>
        </trans-unit>
        <trans-unit id="dfcb69fdc944c00af29eac3a5e478662ad3446fa" translate="yes" xml:space="preserve">
          <source>Integer#size</source>
          <target state="translated">Integer#size</target>
        </trans-unit>
        <trans-unit id="8957c2231911cd59e9979584bc99d8c8968f8f96" translate="yes" xml:space="preserve">
          <source>Integer#succ</source>
          <target state="translated">Integer#succ</target>
        </trans-unit>
        <trans-unit id="f243d1a5f3dcb20ba829afa7db127bb8471c24f6" translate="yes" xml:space="preserve">
          <source>Integer#to_d</source>
          <target state="translated">Integer#to_d</target>
        </trans-unit>
        <trans-unit id="5ddfb9bb49d7ce1b0a899d61386fae0287b34f86" translate="yes" xml:space="preserve">
          <source>Integer#to_f</source>
          <target state="translated">Integer#to_f</target>
        </trans-unit>
        <trans-unit id="544269d3ebc8133b0e6108e3d4a7d1e322354d04" translate="yes" xml:space="preserve">
          <source>Integer#to_i</source>
          <target state="translated">Integer#to_i</target>
        </trans-unit>
        <trans-unit id="09b2a6c7d42eb24855f2a6b7bf11a3129f17e19f" translate="yes" xml:space="preserve">
          <source>Integer#to_r</source>
          <target state="translated">Integer#to_r</target>
        </trans-unit>
        <trans-unit id="a77a2c91af064971b9c4fa0bcd6c913744aa3da1" translate="yes" xml:space="preserve">
          <source>Integer#to_s</source>
          <target state="translated">Integer#to_s</target>
        </trans-unit>
        <trans-unit id="b89c487f78ed4df3872a857c7d25d206451bd794" translate="yes" xml:space="preserve">
          <source>Integer#upto</source>
          <target state="translated">Integer#upto</target>
        </trans-unit>
        <trans-unit id="751dbc80971e4ae125c0e169741e208ebd29a4bf" translate="yes" xml:space="preserve">
          <source>Integer#|</source>
          <target state="translated">Integer#|</target>
        </trans-unit>
        <trans-unit id="13748fb4a6dcdc397a8803f0b319e69c7b3710c2" translate="yes" xml:space="preserve">
          <source>Integer#~</source>
          <target state="translated">Integer#~</target>
        </trans-unit>
        <trans-unit id="b36bea9c2ad0708dc4237f6beed0ae0db3ce4a4d" translate="yes" xml:space="preserve">
          <source>Integer(arg, base=0, exception: true) &amp;rarr; integer &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">정수 (arg, base = 0, 예외 : true) &amp;rarr; 정수 &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01d3d2f6bb9221410f71b180441a19313e234dd6" translate="yes" xml:space="preserve">
          <source>Integer(arg, base=0, exception: true) &amp;rarr; integer or nil &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Integer (arg, base = 0, exception : true) &amp;rarr; integer or nil &lt;a&gt;소스보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1b00b6ebbf2047f650424e997372473e9996fa4" translate="yes" xml:space="preserve">
          <source>Integer-Convertible Objects</source>
          <target state="translated">정수 변환 가능한 개체</target>
        </trans-unit>
        <trans-unit id="8e6549b1b15bddbc7e4ca51ecb54082a0c50f802" translate="yes" xml:space="preserve">
          <source>Integer:</source>
          <target state="translated">Integer:</target>
        </trans-unit>
        <trans-unit id="d859e661114cb7808b9adba5aed204f5f9d87b6c" translate="yes" xml:space="preserve">
          <source>Integer: &lt;code&gt;to_int&lt;/code&gt;</source>
          <target state="translated">정수 : &lt;code&gt;to_int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="071e1374fac18a3e84d089983eb56cc649f181c6" translate="yes" xml:space="preserve">
          <source>Integer: value is assigned to an int, and a pointer to the int is passed, with length of sizeof(int).</source>
          <target state="translated">정수 : 값이 int에 할당되고 sizeof (int)의 길이로 int에 대한 포인터가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="04c5e37fe2cf408eabaa3a96cc0bfc12045644ef" translate="yes" xml:space="preserve">
          <source>Integer::sqrt</source>
          <target state="translated">Integer::sqrt</target>
        </trans-unit>
        <trans-unit id="d0cf276c554053d12a5ed19696dab55db859e92b" translate="yes" xml:space="preserve">
          <source>Integrated Services Digital Network</source>
          <target state="translated">통합 서비스 디지털 네트워크</target>
        </trans-unit>
        <trans-unit id="ed24d6e4533713d85ba277d33f394980d3653d8a" translate="yes" xml:space="preserve">
          <source>Interaction with the Operating System</source>
          <target state="translated">운영 체제와의 상호 작용</target>
        </trans-unit>
        <trans-unit id="2b8c35a5998077be06f4fba234591f15074577e9" translate="yes" xml:space="preserve">
          <source>Interactive socket priority</source>
          <target state="translated">대화식 소켓 우선 순위</target>
        </trans-unit>
        <trans-unit id="6979c0ff63d1deae4763787b216dfdb5a8ba9c79" translate="yes" xml:space="preserve">
          <source>Intermediate certificates can optionally be supplied for creating the certificate chain. These intermediate certificates must all be instances of &lt;a href=&quot;../x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인증서 체인을 만들기 위해 중간 인증서를 선택적으로 제공 할 수 있습니다. 이러한 중간 인증서는 모두 &lt;a href=&quot;../x509/certificate&quot;&gt; &lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt; &lt;/a&gt; 인스턴스 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="bab024379b6c9cc79cf30d2db7a4a9a13979df3e" translate="yes" xml:space="preserve">
          <source>Internal data format used to compare equality.</source>
          <target state="translated">평등을 비교하는 데 사용되는 내부 데이터 형식입니다.</target>
        </trans-unit>
        <trans-unit id="cf4d56896bdee4b92ae11d38367fbb46816ae8e8" translate="yes" xml:space="preserve">
          <source>Internal encoding</source>
          <target state="translated">내부 인코딩</target>
        </trans-unit>
        <trans-unit id="8a1e18168d251b5317a0f391073dab20953df89a" translate="yes" xml:space="preserve">
          <source>Internal encoding for the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. &amp;ldquo;-&amp;rdquo; is a synonym for the default internal encoding.</source>
          <target state="translated">을위한 내부 인코딩 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; . &amp;ldquo;-&amp;rdquo;는 기본 내부 인코딩의 동의어입니다.</target>
        </trans-unit>
        <trans-unit id="b3f8cbdb5ee376b9765f4a3e7f75597ca341f266" translate="yes" xml:space="preserve">
          <source>Internal error in issuer</source>
          <target state="translated">발급자의 내부 오류</target>
        </trans-unit>
        <trans-unit id="c04e747a7d1d894091937a180c7f64dfe319a82f" translate="yes" xml:space="preserve">
          <source>Internal error, should be rescued</source>
          <target state="translated">내부 오류, 구조해야합니다</target>
        </trans-unit>
        <trans-unit id="1186e56b97fa12188e1a679b765c90d55fa23b6a" translate="yes" xml:space="preserve">
          <source>Internal method used to provide marshalling support. See the &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">마샬링 지원을 제공하는 데 사용되는 내부 방법. &lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b93b3b98aac3ff8fa37bc2d2cee0c4f420a55b23" translate="yes" xml:space="preserve">
          <source>Internal routing protocol</source>
          <target state="translated">내부 라우팅 프로토콜</target>
        </trans-unit>
        <trans-unit id="0b7ae33f11417ebdd3837db9ee3c27bb83d9fa93" translate="yes" xml:space="preserve">
          <source>Internal use only.</source>
          <target state="translated">내부 전용.</target>
        </trans-unit>
        <trans-unit id="c5b37f0054ea7ed14a00a15871ad7da86f8edf00" translate="yes" xml:space="preserve">
          <source>Internal use. An implementation of Eratosthenes' sieve</source>
          <target state="translated">내부 사용. 에라토스테네스 체의 구현</target>
        </trans-unit>
        <trans-unit id="6b81fb8c90a3ebdbbde51acd6d3587d1436ddbef" translate="yes" xml:space="preserve">
          <source>Internal use. An implementation of prime table by trial division method.</source>
          <target state="translated">내부 사용. 시험 분할 방법으로 프라임 테이블을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="4dc0103f663061894aa8a4227c553d6f5093dc99" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper</source>
          <target state="translated">InternalObjectWrapper</target>
        </trans-unit>
        <trans-unit id="1b4105ad1ded69c224828d59b535a717cc4cee0c" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper#inspect</source>
          <target state="translated">InternalObjectWrapper#inspect</target>
        </trans-unit>
        <trans-unit id="fabdada67ad276f140acbc85148bdc80619221b3" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper#internal_object_id</source>
          <target state="translated">InternalObjectWrapper#internal_object_id</target>
        </trans-unit>
        <trans-unit id="55c8e6135e26f0c626d235ae0e37d4bee44e3d06" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper#type</source>
          <target state="translated">InternalObjectWrapper#type</target>
        </trans-unit>
        <trans-unit id="d9c787ec6e5858e7e9ca7dd688f30428822c8033" translate="yes" xml:space="preserve">
          <source>InternalServerError</source>
          <target state="translated">InternalServerError</target>
        </trans-unit>
        <trans-unit id="78224187cf8257cc1fba62d3a535379ca2152a39" translate="yes" xml:space="preserve">
          <source>Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, -1).</source>
          <target state="translated">내부적으로 EVP_CipherInit_ex (ctx, NULL, NULL, NULL, NULL, -1)를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d2448d632862982096851834b333cd71a2dcb228" translate="yes" xml:space="preserve">
          <source>Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, 0).</source>
          <target state="translated">내부적으로 EVP_CipherInit_ex (ctx, NULL, NULL, NULL, NULL, 0)를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="4a8c61ee657da47ec6333e0445794176d32230fe" translate="yes" xml:space="preserve">
          <source>Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, 1).</source>
          <target state="translated">내부적으로 EVP_CipherInit_ex (ctx, NULL, NULL, NULL, NULL, 1)를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="889d95bf4e3b784e3485992df6b274bb2683e620" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;tcpserver#method-c-new&quot;&gt;&lt;code&gt;TCPServer.new&lt;/code&gt;&lt;/a&gt; calls getaddrinfo() function to obtain addresses. If getaddrinfo() returns multiple addresses, &lt;a href=&quot;tcpserver#method-c-new&quot;&gt;&lt;code&gt;TCPServer.new&lt;/code&gt;&lt;/a&gt; tries to create a server socket for each address and returns first one that is successful.</source>
          <target state="translated">내부적으로 &lt;a href=&quot;tcpserver#method-c-new&quot;&gt; &lt;code&gt;TCPServer.new&lt;/code&gt; &lt;/a&gt; 는 getaddrinfo () 함수를 호출하여 주소를 얻습니다. getaddrinfo ()가 여러 주소를 리턴하면 &lt;a href=&quot;tcpserver#method-c-new&quot;&gt; &lt;code&gt;TCPServer.new&lt;/code&gt; &lt;/a&gt; 는 각 주소에 대해 서버 소켓을 작성하고 성공한 첫 번째 소켓을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b758fb5ee2ba7da552311244eb01ed2b31c21bc3" translate="yes" xml:space="preserve">
          <source>Interpolation may be disabled by escaping the &amp;ldquo;#&amp;rdquo; character or using single-quote strings:</source>
          <target state="translated">&amp;ldquo;#&amp;rdquo;문자를 이스케이프하거나 작은 따옴표 문자열을 사용하여 보간을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="542e02b36aff5e5e131dcbc6279eb03d2fe7df6e" translate="yes" xml:space="preserve">
          <source>Interpolation may be used inside regular expressions along with escaped characters. Note that a regular expression may require additional escaped characters than a string.</source>
          <target state="translated">이스케이프 문자와 함께 정규 표현식 내에서 보간을 사용할 수 있습니다. 정규식에는 문자열보다 이스케이프 문자가 추가로 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5db45498426a18d87491bdc35ea0b2b61778847" translate="yes" xml:space="preserve">
          <source>Interrupt</source>
          <target state="translated">Interrupt</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="e80235c9f1c6e07727b8b17a498129b0354a0e74" translate="yes" xml:space="preserve">
          <source>Invalid Names and Values</source>
          <target state="translated">잘못된 이름 및 값</target>
        </trans-unit>
        <trans-unit id="1a42a885ce8a5685c03924f0c90cf9ba2619ab6a" translate="yes" xml:space="preserve">
          <source>Invalid flags</source>
          <target state="translated">잘못된 플래그</target>
        </trans-unit>
        <trans-unit id="51551e84ab637dfefb37efcdc6234212df8e6385" translate="yes" xml:space="preserve">
          <source>Invalid value for hints</source>
          <target state="translated">힌트 값이 잘못되었습니다</target>
        </trans-unit>
        <trans-unit id="9ecc2064bbe23ae9b8f94cdd1c60391c93c644ee" translate="yes" xml:space="preserve">
          <source>InvalidAddressError</source>
          <target state="translated">InvalidAddressError</target>
        </trans-unit>
        <trans-unit id="721bd28235527f71feda3a70976332e724e9adeb" translate="yes" xml:space="preserve">
          <source>InvalidArgument</source>
          <target state="translated">InvalidArgument</target>
        </trans-unit>
        <trans-unit id="83c98896354dcb37a5b41f0710d5ba593dc57415" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError</source>
          <target state="translated">InvalidByteSequenceError</target>
        </trans-unit>
        <trans-unit id="a3e52b8c491a8b7fbfb11d8106d69c9933b3dd89" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#destination_encoding</source>
          <target state="translated">InvalidByteSequenceError#destination_encoding</target>
        </trans-unit>
        <trans-unit id="9175c4e776bdbbc75409c96158662fd82dccab05" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#destination_encoding_name</source>
          <target state="translated">InvalidByteSequenceError#destination_encoding_name</target>
        </trans-unit>
        <trans-unit id="1331ce1444935f7fe0299035030526beebe90e7e" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#error_bytes</source>
          <target state="translated">InvalidByteSequenceError#error_bytes</target>
        </trans-unit>
        <trans-unit id="0703c3a7a695d6cc01a6b96235bc247795636ba5" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#incomplete_input?</source>
          <target state="translated">InvalidByteSequenceError#incomplete_input?</target>
        </trans-unit>
        <trans-unit id="40948c157a99638d31097d7516c66e3f856bafd2" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#readagain_bytes</source>
          <target state="translated">InvalidByteSequenceError#readagain_bytes</target>
        </trans-unit>
        <trans-unit id="3a2207a5d6b6f3d9bb4209cfcfeec6e884d8788e" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#source_encoding</source>
          <target state="translated">InvalidByteSequenceError#source_encoding</target>
        </trans-unit>
        <trans-unit id="bff92aa6edb408b806e7540f0453f5b3b03f2e4e" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#source_encoding_name</source>
          <target state="translated">InvalidByteSequenceError#source_encoding_name</target>
        </trans-unit>
        <trans-unit id="c1f7d63c3ad36addb5e385c8e06c2a8f5223c7b3" translate="yes" xml:space="preserve">
          <source>InvalidComponentError</source>
          <target state="translated">InvalidComponentError</target>
        </trans-unit>
        <trans-unit id="e87b9dc160737bd0902d7c9a7a1708f65b0d771c" translate="yes" xml:space="preserve">
          <source>InvalidEncoding</source>
          <target state="translated">InvalidEncoding</target>
        </trans-unit>
        <trans-unit id="bf4db0486188b99aa47c4ecd12abeb5dc4dd1677" translate="yes" xml:space="preserve">
          <source>InvalidOption</source>
          <target state="translated">InvalidOption</target>
        </trans-unit>
        <trans-unit id="4342ea9b5c191caaedb3dc12588b030d7b8249f0" translate="yes" xml:space="preserve">
          <source>InvalidPrefixError</source>
          <target state="translated">InvalidPrefixError</target>
        </trans-unit>
        <trans-unit id="648fde43fc34b7a1758bffc46144bc3b0e306972" translate="yes" xml:space="preserve">
          <source>InvalidURIError</source>
          <target state="translated">InvalidURIError</target>
        </trans-unit>
        <trans-unit id="8a8ec69c029c82398fca42eff3527b96025d1c39" translate="yes" xml:space="preserve">
          <source>Invalidate stale locked specs</source>
          <target state="translated">오래된 잠금 사양 무효화</target>
        </trans-unit>
        <trans-unit id="3e7d4ef4a6bbd6d8c22247069efc2db1d3fad7f5" translate="yes" xml:space="preserve">
          <source>Inverted version of &lt;a href=&quot;enumerable#method-i-grep&quot;&gt;&lt;code&gt;Enumerable#grep&lt;/code&gt;&lt;/a&gt;. Returns an array of every element in &lt;em&gt;enum&lt;/em&gt; for which not &lt;code&gt;Pattern === element&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;enumerable#method-i-grep&quot;&gt; &lt;code&gt;Enumerable#grep&lt;/code&gt; &lt;/a&gt; 의 반전 된 버전 . &lt;code&gt;Pattern === element&lt;/code&gt; 가 아닌 &lt;em&gt;열거 형&lt;/em&gt; 의 모든 요소 배열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3e87685911552997e5abb0d5063063008eaa40e1" translate="yes" xml:space="preserve">
          <source>Inverts the bits in an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. As integers are conceptually of infinite length, the result acts as if it had an infinite number of one bits to the left. In hex representations, this is displayed as two periods to the left of the digits.</source>
          <target state="translated">&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 의 비트를 반전시킵니다 . 정수는 개념적으로 길이가 무한하므로 결과는 왼쪽에 무한한 1 비트가있는 것처럼 작동합니다. 16 진 표현에서는 숫자 왼쪽에 두 개의 마침표로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0d6096ccb82718476f59769ecc788ad1d74bfbd7" translate="yes" xml:space="preserve">
          <source>Inverts the following boolean expression. Has a lower precedence than &lt;code&gt;!&lt;/code&gt;</source>
          <target state="translated">다음 부울 식을 반전시킵니다. &lt;code&gt;!&lt;/code&gt; 보다 우선 순위가 낮습니다 .</target>
        </trans-unit>
        <trans-unit id="26a1270cddf65b1566fdce50b291cd332ae9cb9d" translate="yes" xml:space="preserve">
          <source>InvocationError</source>
          <target state="translated">InvocationError</target>
        </trans-unit>
        <trans-unit id="f0b5e8cc3ee6cd6082a62d6562c0168532848eef" translate="yes" xml:space="preserve">
          <source>Invoke a thor class based on the value supplied by the user to the given option named &amp;ldquo;name&amp;rdquo;. A class option must be created before this method is invoked for each name given.</source>
          <target state="translated">사용자가 제공된 &quot;name&quot;옵션에 제공된 값을 기반으로 thor 클래스를 호출하십시오. 주어진 각 이름에 대해이 메소드를 호출하기 전에 클래스 옵션을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="af6bf4cc0cdd68208b50fd1aa26b39d5f5596041" translate="yes" xml:space="preserve">
          <source>Invoke interrupts immediately.</source>
          <target state="translated">즉시 인터럽트를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="3eeada41f7035d99e5e94f51074434bec1b60f54" translate="yes" xml:space="preserve">
          <source>Invoke interrupts while &lt;em&gt;BlockingOperation&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;BlockingOperation&lt;/em&gt; 동안 인터럽트를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="461853aa7be1016e3d04aa02a19876e8aecf45e7" translate="yes" xml:space="preserve">
          <source>Invoke the given namespace or class given. It adds an instance method that will invoke the klass and command. You can give a block to configure how it will be invoked.</source>
          <target state="translated">제공된 네임 스페이스 또는 클래스를 호출하십시오. klass 및 명령을 호출 할 인스턴스 메소드를 추가합니다. 호출 방법을 구성하는 블록을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2df3676738cd196a9a532ae27cd81cf0e0b934f" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever a singleton method is added to the receiver.</source>
          <target state="translated">싱글 톤 메소드가 수신자에 추가 될 때마다 콜백으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7efaba09b3473010acebee0f539795b7fde49da4" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever a singleton method is removed from the receiver.</source>
          <target state="translated">싱글 톤 메소드가 수신자에서 제거 될 때마다 콜백으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="97530a40e4d7e0fc75ecdf130d365adf228924fd" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever a singleton method is undefined in the receiver.</source>
          <target state="translated">수신자에서 싱글 톤 메소드가 정의되지 않을 때마다 콜백으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4290842f6d4f7646ef8a785da4ba26cb3225250b" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever an instance method is added to the receiver.</source>
          <target state="translated">인스턴스 메소드가 수신자에 추가 될 때마다 콜백으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="cbdbb0e79d9c264e9a31d02f199a2701f1a43d44" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever an instance method is removed from the receiver.</source>
          <target state="translated">수신자에서 인스턴스 메소드가 제거 될 때마다 콜백으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c4ade620f198766b55ece0c38ff832e69fac3bcb" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;a href=&quot;../io#method-i-wait&quot;&gt;&lt;code&gt;IO#wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../io#method-i-wait_readable&quot;&gt;&lt;code&gt;IO#wait_readable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../io#method-i-wait_writable&quot;&gt;&lt;code&gt;IO#wait_writable&lt;/code&gt;&lt;/a&gt; to ask whether the specified descriptor is ready for specified events within the specified &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../io#method-i-wait&quot;&gt; &lt;code&gt;IO#wait&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../io#method-i-wait_readable&quot;&gt; &lt;code&gt;IO#wait_readable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../io#method-i-wait_writable&quot;&gt; &lt;code&gt;IO#wait_writable&lt;/code&gt; &lt;/a&gt; 에 의해 호출되어 지정된 설명자가 지정된 &lt;code&gt;timeout&lt;/code&gt; 내에 지정된 이벤트에 대해 준비되었는지 여부를 묻습니다 .</target>
        </trans-unit>
        <trans-unit id="87958bf2624b3068c3fdc46dcaaf31bb9d7e95cf" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;a href=&quot;../kernel#method-i-sleep&quot;&gt;&lt;code&gt;Kernel#sleep&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../mutex#method-i-sleep&quot;&gt;&lt;code&gt;Mutex#sleep&lt;/code&gt;&lt;/a&gt; and is expected to provide an implementation of sleeping in a non-blocking way. Implementation might register the current fiber in some list of &amp;ldquo;what fiber waits till what moment&amp;rdquo;, call &lt;a href=&quot;../fiber#method-c-yield&quot;&gt;&lt;code&gt;Fiber.yield&lt;/code&gt;&lt;/a&gt; to pass control, and then in &lt;a href=&quot;schedulerinterface#method-i-close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; resume the fibers whose wait period have ended.</source>
          <target state="translated">&lt;a href=&quot;../kernel#method-i-sleep&quot;&gt; &lt;code&gt;Kernel#sleep&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../mutex#method-i-sleep&quot;&gt; &lt;code&gt;Mutex#sleep&lt;/code&gt; 에&lt;/a&gt; 의해 호출되며 비 차단 방식으로 수면 구현을 제공 할 것으로 예상됩니다. 구현은 &quot;어떤 광섬유가 어떤 순간까지 기다리는 지&quot;의 일부 목록에 현재 광섬유를 등록하고 &lt;a href=&quot;../fiber#method-c-yield&quot;&gt; &lt;code&gt;Fiber.yield&lt;/code&gt; &lt;/a&gt; 를 호출 하여 제어를 통과 한 다음 대기 기간이 종료 된 광섬유를 &lt;a href=&quot;schedulerinterface#method-i-close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 재개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="369dc0a0074503355290f8ad2cd84498a7a27df5" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;a href=&quot;../process/status#method-c-wait&quot;&gt;&lt;code&gt;Process::Status.wait&lt;/code&gt;&lt;/a&gt; in order to wait for a specified process. See that method description for arguments description.</source>
          <target state="translated">지정된 프로세스를 기다리기 위해 &lt;a href=&quot;../process/status#method-c-wait&quot;&gt; &lt;code&gt;Process::Status.wait&lt;/code&gt; &lt;/a&gt; 에 의해 호출됩니다 . 인수 설명은 해당 메서드 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f699af5331e1d4a125f4c596d009ad0f9da91fa4" translate="yes" xml:space="preserve">
          <source>Invoked by Ruby when &lt;em&gt;obj&lt;/em&gt; is sent a message it cannot handle. &lt;em&gt;symbol&lt;/em&gt; is the symbol for the method called, and &lt;em&gt;args&lt;/em&gt; are any arguments that were passed to it. By default, the interpreter raises an error when this method is called. However, it is possible to override the method to provide more dynamic behavior. If it is decided that a particular method should not be handled, then &lt;em&gt;super&lt;/em&gt; should be called, so that ancestors can pick up the missing method. The example below creates a class &lt;code&gt;Roman&lt;/code&gt;, which responds to methods with names consisting of roman numerals, returning the corresponding integer values.</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt; 에게 처리 할 수없는 메시지가 전송 될 때 Ruby가 호출합니다 . &lt;em&gt;symbol&lt;/em&gt; 은 호출 된 메소드의 기호이며 &lt;em&gt;args&lt;/em&gt; 는 전달 된 인수입니다. 기본적으로이 메소드를 호출하면 인터프리터에서 오류가 발생합니다. 그러나보다 동적 인 동작을 제공하기 위해 메서드를 재정의 할 수 있습니다. 이 특정 방법으로 처리되어서는 안된다는 결정되면, &lt;em&gt;슈퍼&lt;/em&gt; 그 조상이 누락 된 방법을 선택할 수 있도록 호출해야합니다. 아래 예제는 &lt;code&gt;Roman&lt;/code&gt; 클래스를 생성합니다. Roman 클래스 는 로마 숫자로 구성된 이름을 가진 메소드에 응답하여 해당하는 정수 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="192dadfaae89ce5090bc64ecc44188dbeea7af0e" translate="yes" xml:space="preserve">
          <source>Invoked by methods like &lt;a href=&quot;../thread#method-i-join&quot;&gt;&lt;code&gt;Thread.join&lt;/code&gt;&lt;/a&gt;, and by &lt;a href=&quot;../mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt;, to signify that current &lt;a href=&quot;../fiber&quot;&gt;&lt;code&gt;Fiber&lt;/code&gt;&lt;/a&gt; is blocked till further notice (e.g. &lt;a href=&quot;schedulerinterface#method-i-unblock&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt;) or till &lt;code&gt;timeout&lt;/code&gt; will pass.</source>
          <target state="translated">&lt;a href=&quot;../thread#method-i-join&quot;&gt; &lt;code&gt;Thread.join&lt;/code&gt; &lt;/a&gt; 과 같은 메소드와 &lt;a href=&quot;../mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; 에 의해 호출되어 현재 &lt;a href=&quot;../fiber&quot;&gt; &lt;code&gt;Fiber&lt;/code&gt; &lt;/a&gt; 가 추가 통지 (예 : &lt;a href=&quot;schedulerinterface#method-i-unblock&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt; ) 또는 &lt;code&gt;timeout&lt;/code&gt; 가 경과 할 때까지 차단됨 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8b197fa490839b0076db65cbb8ab297f253443d4" translate="yes" xml:space="preserve">
          <source>Invoked to wake up &lt;a href=&quot;../fiber&quot;&gt;&lt;code&gt;Fiber&lt;/code&gt;&lt;/a&gt; previously blocked with &lt;a href=&quot;schedulerinterface#method-i-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; (for example, &lt;a href=&quot;../mutex#method-i-lock&quot;&gt;&lt;code&gt;Mutex#lock&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;schedulerinterface#method-i-block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../mutex#method-i-unlock&quot;&gt;&lt;code&gt;Mutex#unlock&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;schedulerinterface#method-i-unblock&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt;). The scheduler should use the &lt;code&gt;fiber&lt;/code&gt; parameter to understand which fiber is unblocked.</source>
          <target state="translated">이전에 block으로 &lt;a href=&quot;schedulerinterface#method-i-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 된 &lt;a href=&quot;../fiber&quot;&gt; &lt;code&gt;Fiber&lt;/code&gt; &lt;/a&gt; 를 깨우기 위해 호출됩니다 (예 : &lt;a href=&quot;../mutex#method-i-lock&quot;&gt; &lt;code&gt;Mutex#lock&lt;/code&gt; &lt;/a&gt; 호출 &lt;a href=&quot;schedulerinterface#method-i-block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../mutex#method-i-unlock&quot;&gt; &lt;code&gt;Mutex#unlock&lt;/code&gt; &lt;/a&gt; 호출 &lt;a href=&quot;schedulerinterface#method-i-unblock&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt; 호출 ). 스케줄러는 &lt;code&gt;fiber&lt;/code&gt; 매개 변수를 사용하여 차단 해제 된 파이버를 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="de37fa549433e8117d6a44ef4462f35bb41f0c2f" translate="yes" xml:space="preserve">
          <source>Invoked when a reference is made to an undefined constant in &lt;em&gt;mod&lt;/em&gt;. It is passed a symbol for the undefined constant, and returns a value to be used for that constant. The following code is an example of the same:</source>
          <target state="translated">&lt;em&gt;mod&lt;/em&gt; 에서 정의되지 않은 상수를 참조 할 때 호출됩니다 . 정의되지 않은 상수에 대한 기호가 전달되고 해당 상수에 사용될 값을 리턴합니다. 다음 코드는 동일한 예입니다.</target>
        </trans-unit>
        <trans-unit id="afcd303885ff2a672a9772193a6b564b13239706" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;module#method-i-append_features&quot;&gt;&lt;code&gt;Module.append_features&lt;/code&gt;&lt;/a&gt; on each parameter in reverse order.</source>
          <target state="translated">각 매개 변수에 대해 &lt;a href=&quot;module#method-i-append_features&quot;&gt; &lt;code&gt;Module.append_features&lt;/code&gt; &lt;/a&gt; 를 역순 으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="6477804028538ee2f2c065038289e3b03532ff58" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;module#method-i-prepend_features&quot;&gt;&lt;code&gt;Module.prepend_features&lt;/code&gt;&lt;/a&gt; on each parameter in reverse order.</source>
          <target state="translated">각 매개 변수에 대해 &lt;a href=&quot;module#method-i-prepend_features&quot;&gt; &lt;code&gt;Module.prepend_features&lt;/code&gt; &lt;/a&gt; 를 역순 으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b60b8ee9b29253e0ee9458ab8aba55d8e238d3fd" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;Module.append_features&lt;/code&gt; on each parameter in reverse order.</source>
          <target state="translated">각 매개 변수에서 &lt;code&gt;Module.append_features&lt;/code&gt; 를 역순 으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ce6da88a54af9505c610466d44c9d4d6bcb9a3c4" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;Module.prepend_features&lt;/code&gt; on each parameter in reverse order.</source>
          <target state="translated">각 매개 변수에서 &lt;code&gt;Module.prepend_features&lt;/code&gt; 를 역순 으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="512c054f1f5751024f1b4a4898bed6ef3ce8acc8" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;em&gt;meth&lt;/em&gt; with the specified arguments, returning the method's return value, like &lt;a href=&quot;method#method-i-call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">호출 &lt;em&gt;메타&lt;/em&gt; 처럼 메소드의 반환 값을 반환, 지정된 인수를 &lt;a href=&quot;method#method-i-call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cdbf41aa1333f09795ec0ec781600f5808e5db6b" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;em&gt;meth&lt;/em&gt; with the specified arguments, returning the method's return value.</source>
          <target state="translated">지정된 인수로 &lt;em&gt;meth&lt;/em&gt; 를 호출하여 메소드의 리턴 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="579674ee9f58cff164b2a47abf872b06fdb9c2fc" translate="yes" xml:space="preserve">
          <source>Invokes the block with &lt;code&gt;obj&lt;/code&gt; as the proc's parameter like &lt;a href=&quot;proc#method-i-call&quot;&gt;&lt;code&gt;Proc#call&lt;/code&gt;&lt;/a&gt;. This allows a proc object to be the target of a &lt;code&gt;when&lt;/code&gt; clause in a case statement.</source>
          <target state="translated">&lt;a href=&quot;proc#method-i-call&quot;&gt; &lt;code&gt;Proc#call&lt;/code&gt; &lt;/a&gt; 과 같은 proc의 매개 변수 로 &lt;code&gt;obj&lt;/code&gt; 를 사용하여 블록을 호출 합니다. 이를 통해 proc 객체 는 case 문의 &lt;code&gt;when&lt;/code&gt; 절의 대상이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5349a5832b6f518d93720d8ca5ef66bb23add1e8" translate="yes" xml:space="preserve">
          <source>Invokes the block with a Benchmark::Report object, which may be used to collect and report on the results of individual benchmark tests. Reserves &lt;code&gt;label_width&lt;/code&gt; leading spaces for labels on each line. Prints &lt;code&gt;caption&lt;/code&gt; at the top of the report, and uses &lt;code&gt;format&lt;/code&gt; to format each line. Returns an array of &lt;a href=&quot;benchmark/tms&quot;&gt;&lt;code&gt;Benchmark::Tms&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">Benchmark :: Report 객체를 사용하여 블록을 호출합니다.이 객체는 개별 벤치 마크 테스트 결과를 수집하고보고하는 데 사용될 수 있습니다. 각 줄의 레이블에 &lt;code&gt;label_width&lt;/code&gt; 선행 공간을 예약 합니다. 보고서 상단에 &lt;code&gt;caption&lt;/code&gt; 을 인쇄 하고 &lt;code&gt;format&lt;/code&gt; 을 사용 하여 각 줄의 형식 을 지정합니다. &lt;a href=&quot;benchmark/tms&quot;&gt; &lt;code&gt;Benchmark::Tms&lt;/code&gt; &lt;/a&gt; 객체 의 배열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7bddf47216ee73f436a0070de8924168401c17f1" translate="yes" xml:space="preserve">
          <source>Invokes the block, setting the block's parameters to the values in &lt;em&gt;params&lt;/em&gt; using something close to method calling semantics. Returns the value of the last expression evaluated in the block.</source>
          <target state="translated">블록 호출,의 값에 블록의 매개 변수를 설정 &lt;em&gt;PARAMS&lt;/em&gt; 방법 호출 의미에 뭔가 가까이 사용. 블록에서 평가 된 마지막 표현식의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30e8e63757e725b048de9acd540c1858e112d00d" translate="yes" xml:space="preserve">
          <source>Invokes the child class's &lt;code&gt;to_i&lt;/code&gt; method to convert &lt;code&gt;num&lt;/code&gt; to an integer.</source>
          <target state="translated">자식 클래스의 &lt;code&gt;to_i&lt;/code&gt; 메소드를 호출하여 &lt;code&gt;num&lt;/code&gt; 을 정수 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="2a5ead25f60cceef45406a7cff0878237ab68fdc" translate="yes" xml:space="preserve">
          <source>Invokes the continuation. The program continues from the end of the &lt;a href=&quot;kernel#method-i-callcc&quot;&gt;&lt;code&gt;callcc&lt;/code&gt;&lt;/a&gt; block. If no arguments are given, the original &lt;a href=&quot;kernel#method-i-callcc&quot;&gt;&lt;code&gt;callcc&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;nil&lt;/code&gt;. If one argument is given, &lt;a href=&quot;kernel#method-i-callcc&quot;&gt;&lt;code&gt;callcc&lt;/code&gt;&lt;/a&gt; returns it. Otherwise, an array containing &lt;em&gt;args&lt;/em&gt; is returned.</source>
          <target state="translated">연속을 호출합니다. 프로그램은 &lt;a href=&quot;kernel#method-i-callcc&quot;&gt; &lt;code&gt;callcc&lt;/code&gt; &lt;/a&gt; 블록 의 끝에서 계속됩니다 . 인자가 주어지지 않으면 원래 &lt;a href=&quot;kernel#method-i-callcc&quot;&gt; &lt;code&gt;callcc&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 하나의 인자가 주어지면 &lt;a href=&quot;kernel#method-i-callcc&quot;&gt; &lt;code&gt;callcc&lt;/code&gt; &lt;/a&gt; 는 그것을 반환합니다. 그렇지 않으면 &lt;em&gt;args를&lt;/em&gt; 포함하는 배열 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="be055b13549d92c0bf22286ea388db7cebafca7a" translate="yes" xml:space="preserve">
          <source>Invokes the continuation. The program continues from the end of the &lt;code&gt;callcc&lt;/code&gt; block. If no arguments are given, the original &lt;code&gt;callcc&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. If one argument is given, &lt;code&gt;callcc&lt;/code&gt; returns it. Otherwise, an array containing &lt;em&gt;args&lt;/em&gt; is returned.</source>
          <target state="translated">연속을 호출합니다. 프로그램은 &lt;code&gt;callcc&lt;/code&gt; 블록 끝에서 계속됩니다 . 인수가 제공되지 않으면 원래 &lt;code&gt;callcc&lt;/code&gt; 는 &lt;code&gt;nil&lt;/code&gt; 을 리턴합니다 . 하나의 인수가 제공되면 &lt;code&gt;callcc&lt;/code&gt; 가이를 리턴합니다. 그렇지 않으면 &lt;em&gt;args를&lt;/em&gt; 포함하는 배열 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="020cf9330329258ef00bb426994027ffecf8b61b" translate="yes" xml:space="preserve">
          <source>Invokes the given block for each element of matrix, replacing the element with the value returned by the block. Elements can be restricted by passing an argument:</source>
          <target state="translated">행렬의 각 요소에 대해 주어진 블록을 호출하여 요소를 블록이 반환 한 값으로 바꿉니다. 인수를 전달하여 요소를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31ba4c8533b03ea98203b64a3ef44b19ae948fc4" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each element of &lt;code&gt;self&lt;/code&gt;, replacing the element with the value returned by the block.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 각 요소에 대해 주어진 블록을 한 번 호출하여 요소를 블록에서 반환 된 값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="c0e46eb092d7390c5cfaabb86ae5390730380421" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each element of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 각 요소에 대해 주어진 블록을 한 번 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="361a2d77d6e7462046a5b128fe1e62389437f3e3" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each key in &lt;em&gt;hsh&lt;/em&gt;, replacing it with the new key returned by the block, and then returns &lt;em&gt;hsh&lt;/em&gt;. This method does not change the values.</source>
          <target state="translated">&lt;em&gt;hsh의&lt;/em&gt; 각 키에 대해 주어진 블록을 한 번 호출하여 블록이 반환 한 새 키로 &lt;em&gt;바꾼&lt;/em&gt; 다음 &lt;em&gt;hsh&lt;/em&gt; 를 반환합니다 . 이 방법은 값을 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4770dcab3deff44cd3b3ca49685cbebadda8ae3e" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each value in &lt;em&gt;hsh&lt;/em&gt;, replacing it with the new value returned by the block, and then returns &lt;em&gt;hsh&lt;/em&gt;. This method does not change the keys.</source>
          <target state="translated">&lt;em&gt;hsh의&lt;/em&gt; 각 값에 대해 주어진 블록을 한 번 호출하여 블록이 반환 한 새 값으로 &lt;em&gt;바꾼&lt;/em&gt; 다음 &lt;em&gt;hsh&lt;/em&gt; 를 반환합니다 . 이 방법은 키를 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d2ce6e505c3c2f489ca56fa7d3de71b3b1176d7" translate="yes" xml:space="preserve">
          <source>Invokes the given block passing in successive elements from &lt;code&gt;self&lt;/code&gt;, deleting elements for which the block returns a &lt;code&gt;false&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 에서 연속적인 요소를 전달하여 주어진 블록을 호출하여 블록 이 &lt;code&gt;false&lt;/code&gt; 값을 반환하는 요소를 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="e62d92b44e20d04d51df3a0f06c1be7842150112" translate="yes" xml:space="preserve">
          <source>Invokes the given block with the sequence of numbers starting at &lt;code&gt;num&lt;/code&gt;, incremented by &lt;code&gt;step&lt;/code&gt; (defaulted to &lt;code&gt;1&lt;/code&gt;) on each call.</source>
          <target state="translated">각 호출에서 &lt;code&gt;step&lt;/code&gt; (기본값 &lt;code&gt;1&lt;/code&gt; ) 씩 증가하여 &lt;code&gt;num&lt;/code&gt; 에서 시작하는 일련의 숫자로 주어진 블록을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="db8625bae199901e0bbaf1ac317b2b75dd519cd1" translate="yes" xml:space="preserve">
          <source>Invokes the method identified by &lt;em&gt;symbol&lt;/em&gt;, passing it any arguments specified. Unlike send, &lt;a href=&quot;object#method-i-public_send&quot;&gt;&lt;code&gt;public_send&lt;/code&gt;&lt;/a&gt; calls public methods only. When the method is identified by a string, the string is converted to a symbol.</source>
          <target state="translated">&lt;em&gt;symbol로&lt;/em&gt; 식별 된 메소드를 호출하여 지정된 인수를 전달합니다. send와 달리 &lt;a href=&quot;object#method-i-public_send&quot;&gt; &lt;code&gt;public_send&lt;/code&gt; &lt;/a&gt; 는 공용 메소드 만 호출합니다. 메소드가 문자열로 식별되면 문자열이 기호로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="459e55a7fde2f37ab32dea9151d3fd12f1cc9932" translate="yes" xml:space="preserve">
          <source>Invokes the method identified by &lt;em&gt;symbol&lt;/em&gt;, passing it any arguments specified. When the method is identified by a string, the string is converted to a symbol.</source>
          <target state="translated">&lt;em&gt;symbol로&lt;/em&gt; 식별 된 메서드를 호출하여 지정된 인수를 전달합니다. 메소드가 문자열로 식별되면 문자열이 기호로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="82806a77d2596b50f57396389bce1bbc73a4faea" translate="yes" xml:space="preserve">
          <source>Invokes the method identified by &lt;em&gt;symbol&lt;/em&gt;, passing it any arguments specified. You can use &lt;code&gt;__send__&lt;/code&gt; if the name &lt;code&gt;send&lt;/code&gt; clashes with an existing method in &lt;em&gt;obj&lt;/em&gt;. When the method is identified by a string, the string is converted to a symbol.</source>
          <target state="translated">&lt;em&gt;symbol로&lt;/em&gt; 식별 된 메소드를 호출하여 지정된 인수를 전달합니다. 이름 &lt;code&gt;send&lt;/code&gt; 가 &lt;em&gt;obj&lt;/em&gt; 의 기존 메소드와 충돌하는 경우 &lt;code&gt;__send__&lt;/code&gt; 를 사용할 수 있습니다 . 메소드가 문자열로 식별되면 문자열이 기호로 변환됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d4e7aba5de4bcbb62328e0373b6bac62cec78c3" translate="yes" xml:space="preserve">
          <source>Invokes the method with &lt;code&gt;obj&lt;/code&gt; as the parameter like &lt;a href=&quot;method#method-i-call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt;. This allows a method object to be the target of a &lt;code&gt;when&lt;/code&gt; clause in a case statement.</source>
          <target state="translated">&lt;a href=&quot;method#method-i-call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt; 과 같은 매개 변수 로 &lt;code&gt;obj&lt;/code&gt; 를 사용하여 메소드를 호출 합니다. 이를 통해 메소드 오브젝트가 case 문의 &lt;code&gt;when&lt;/code&gt; 절의 대상이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e525818215ce720341164e943068f8b3bb9ea0eb" translate="yes" xml:space="preserve">
          <source>Invokes using shell padding.</source>
          <target state="translated">쉘 패딩을 사용하여 호출합니다.</target>
        </trans-unit>
        <trans-unit id="45313f6ce71db29dcceb8b5d11e312de011c7ab6" translate="yes" xml:space="preserve">
          <source>Invoking &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; before &lt;a href=&quot;io#method-i-readpartial&quot;&gt;&lt;code&gt;IO#readpartial&lt;/code&gt;&lt;/a&gt; works well as usual. However it is not the best way to use &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;io#method-i-readpartial&quot;&gt; &lt;code&gt;IO#readpartial&lt;/code&gt; &lt;/a&gt; 전에 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 를 호출하면 정상적으로 작동합니다. 그러나 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 를 사용하는 가장 좋은 방법은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="0380cd57428d1e6f154d916e05339fee82033c5a" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;IO.select&lt;/code&gt; before &lt;code&gt;IO#readpartial&lt;/code&gt; works well as usual. However it is not the best way to use &lt;code&gt;IO.select&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IO#readpartial&lt;/code&gt; 전에 &lt;code&gt;IO.select&lt;/code&gt; 를 호출하면 정상적으로 작동합니다. 그러나 &lt;code&gt;IO.select&lt;/code&gt; 를 사용하는 가장 좋은 방법은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="8e950c52c980f1c51babd3020a6416c41e7e3269" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;req&lt;/code&gt; idempotent according to RFC 2616?</source>
          <target state="translated">가 &lt;code&gt;req&lt;/code&gt; 나무 등은 RFC 2616에 따라?</target>
        </trans-unit>
        <trans-unit id="80295ec555460a2e2ca1bf6db29c1a65c8fc0663" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;uri&lt;/code&gt; the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for this server?</source>
          <target state="translated">가 &lt;code&gt;uri&lt;/code&gt; &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 이 서버에 대한?</target>
        </trans-unit>
        <trans-unit id="557bf9e5d69c2892ea1d83bbee277b340f051a98" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;uri&lt;/code&gt; the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for the current local server?</source>
          <target state="translated">가 &lt;code&gt;uri&lt;/code&gt; &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 현재 로컬 서버에 대한?</target>
        </trans-unit>
        <trans-unit id="f734965cfdbe9f90aa340df6f1fb7f07b8c5b0d1" translate="yes" xml:space="preserve">
          <source>Is removed from a given class given mode.</source>
          <target state="translated">주어진 클래스 주어진 모드에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="803b29e030b6d63784eefdb13afd615da2e2f8d3" translate="yes" xml:space="preserve">
          <source>Is the exact nature of the class will be given a specified mode.</source>
          <target state="translated">클래스의 정확한 특성은 지정된 모드로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3a948857d6081b75c3e045fdf439c0127b0b56d4" translate="yes" xml:space="preserve">
          <source>Is the request &lt;code&gt;req&lt;/code&gt; idempotent or is &lt;a href=&quot;persistent#attribute-i-retry_change_requests&quot;&gt;&lt;code&gt;retry_change_requests&lt;/code&gt;&lt;/a&gt; allowed.</source>
          <target state="translated">요구가 &lt;code&gt;req&lt;/code&gt; 나무 등이되거나 &lt;a href=&quot;persistent#attribute-i-retry_change_requests&quot;&gt; &lt;code&gt;retry_change_requests&lt;/code&gt; 을&lt;/a&gt; 허용했다.</target>
        </trans-unit>
        <trans-unit id="3dae561e8c8a19cba465e062b15f971f546f92a2" translate="yes" xml:space="preserve">
          <source>Is the same as this &lt;code&gt;if&lt;/code&gt; expression:</source>
          <target state="translated">표현식 인 &lt;code&gt;if&lt;/code&gt; 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ffe88c09a46017efaf484fdcb15e8018e0da2489" translate="yes" xml:space="preserve">
          <source>Is there a path from `other` to `self` following edges in the dependency graph? @return true iff there is a path following edges within this {#graph}</source>
          <target state="translated">의존성 그래프에서 가장자리를 따라 '기타'에서 '자기'까지의 경로가 있습니까? 이 {#graph} 내에 가장자리를 따르는 경로가있는 경우 @return true</target>
        </trans-unit>
        <trans-unit id="fc1ace08d3dbcb57c5c49579e54778714d717088" translate="yes" xml:space="preserve">
          <source>Is there a path from `self` to `other` following edges in the dependency graph? @return true iff there is a path following edges within this {#graph}</source>
          <target state="translated">의존성 그래프에서`self`에서`other`까지의 경로가 있습니까? 이 {#graph} 내에 모서리를 따르는 경로가있는 경우 @return true</target>
        </trans-unit>
        <trans-unit id="48123e499fd2c72d641589d290234c5c29b8fa94" translate="yes" xml:space="preserve">
          <source>Is this connection still alive?</source>
          <target state="translated">이 연결이 여전히 살아 있습니까?</target>
        </trans-unit>
        <trans-unit id="acedc3422dfbf37d2a53442796e63179b38fa95f" translate="yes" xml:space="preserve">
          <source>Is this server alive?</source>
          <target state="translated">이 서버가 살아 있습니까?</target>
        </trans-unit>
        <trans-unit id="19a00a76ad7b2c4d2393e37f3b17799569d4cb1a" translate="yes" xml:space="preserve">
          <source>Issuer name for the certificate. This is required when generating the certificate (if :SSLCertificate and :SSLPrivateKey were not given). The value of this is to be an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of pairs:</source>
          <target state="translated">인증서의 발행자 이름 인증서를 생성 할 때 필요합니다 (: SSLCertificate 및 : SSLPrivateKey가 제공되지 않은 경우). 이것의 값은 쌍 의 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c2e2bc75287208847a51b58b93747f7dad3c4b70" translate="yes" xml:space="preserve">
          <source>Issues a FEAT command</source>
          <target state="translated">FEAT 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6ad20a4591e403b86bbb5104be466309c627eb26" translate="yes" xml:space="preserve">
          <source>Issues a NOOP command.</source>
          <target state="translated">NOOP 명령을 발행합니다.</target>
        </trans-unit>
        <trans-unit id="bfbd6c5fbe1632a763973fa2b9910fbed57f7224" translate="yes" xml:space="preserve">
          <source>Issues a SITE command.</source>
          <target state="translated">SITE 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8da91788ad1f9016b259c1fbcd3e2bb1f2515ffe" translate="yes" xml:space="preserve">
          <source>Issues a warning if an encoding is unsupported:</source>
          <target state="translated">인코딩이 지원되지 않는 경우 경고를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="e74cdb698e500283877282d39b72159477947e25" translate="yes" xml:space="preserve">
          <source>Issues an OPTS command</source>
          <target state="translated">OPTS 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="b89f4128ef165a1182e62cf58fe6163f25d95cc9" translate="yes" xml:space="preserve">
          <source>Issues the HELP command.</source>
          <target state="translated">HELP 명령을 발행합니다.</target>
        </trans-unit>
        <trans-unit id="80f97a41036f712dc752f75205e8f2daabb407d8" translate="yes" xml:space="preserve">
          <source>It also provides an array core extension, &lt;a href=&quot;array#method-i-abbrev&quot;&gt;&lt;code&gt;Array#abbrev&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또한 배열 코어 확장 인 &lt;a href=&quot;array#method-i-abbrev&quot;&gt; &lt;code&gt;Array#abbrev&lt;/code&gt; 를 제공&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="51ff7024586d992a05ecbcdb03f5aba2497ef901" translate="yes" xml:space="preserve">
          <source>It also runs Gem hooks `pre_install`, `post_build` and `post_install`</source>
          <target state="translated">또한 보석 후크`pre_install`,`post_build` 및`post_install`도 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ad965110eacaa85d050f8a011d1c3222e760d8a9" translate="yes" xml:space="preserve">
          <source>It builds extensions, generates bins and installs them for the spec provided.</source>
          <target state="translated">확장을 빌드하고 빈을 생성 한 후 제공된 스펙에 맞게 설치합니다.</target>
        </trans-unit>
        <trans-unit id="2edf72606a1644c4e6b051ebe806a169c9c9afdd" translate="yes" xml:space="preserve">
          <source>It calls the block for each message received.</source>
          <target state="translated">수신 된 각 메시지에 대한 블록을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="85105bbd6e07b4664f8d4d42948224aa707a7c91" translate="yes" xml:space="preserve">
          <source>It can also be used to make a method return before the last expression is evaluated.</source>
          <target state="translated">또한 마지막 표현식이 평가되기 전에 메소드를 리턴하는 데 사용될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f50cc13136b37a3d41dee37090bac8bf527563b" translate="yes" xml:space="preserve">
          <source>It can output an option summary; you don't need to maintain this string separately.</source>
          <target state="translated">옵션 요약을 출력 할 수 있습니다. 이 문자열을 별도로 유지 관리 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="ac7e3b22010a82117f6e6cbcd966ad236364c523" translate="yes" xml:space="preserve">
          <source>It compares elements using their &lt;a href=&quot;array#method-i-hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; methods for efficiency.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;array#method-i-eql-3F&quot;&gt; &lt;code&gt;eql?&lt;/code&gt; &lt;/a&gt; 사용하여 요소를 비교 합니까? 효율성을위한 방법.</target>
        </trans-unit>
        <trans-unit id="87ee07fed2eb3b27e04043d740d2c3cc5fe00cd6" translate="yes" xml:space="preserve">
          <source>It compares values using their &lt;a href=&quot;array#method-i-hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; methods for efficiency.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;array#method-i-eql-3F&quot;&gt; &lt;code&gt;eql?&lt;/code&gt; &lt;/a&gt; 사용하여 값을 비교 합니까? 효율성을위한 방법.</target>
        </trans-unit>
        <trans-unit id="92d63cc1c2a8e2d56dbca903bcbc8d209aa3a901" translate="yes" xml:space="preserve">
          <source>It contains a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; set of patterns and Regexp's that match and validate.</source>
          <target state="translated">여기에는 일치하고 유효성을 검사하는 패턴 및 Regexp의 &lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 세트가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="417de631b58201ae13bd809e0c4a5c19270409c8" translate="yes" xml:space="preserve">
          <source>It contains a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; set of patterns and Regexp's that match and validate.</source>
          <target state="translated">여기에는 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 패턴 세트와 일치하고 확인되는 Regexp가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="59c6a41b1892c11c5bd4bb925866e60b7ac02682" translate="yes" xml:space="preserve">
          <source>It defaults to a state object, that creates the shortest possible &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; text in one line, checks for circular data structures and doesn't allow &lt;a href=&quot;json#NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;json#Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, and -Infinity.</source>
          <target state="translated">기본적으로 상태 객체로 설정되어 가능한 한 짧은 &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 텍스트를 한 줄에 작성하고 순환 데이터 구조를 확인하고 &lt;a href=&quot;json#NaN&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;json#Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; 및 -Infinity를 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b4d54066a23e53f27c7a903155a19a56901d805e" translate="yes" xml:space="preserve">
          <source>It depends on `spec.loaded_from` to get full_gem_path. The source plugins should set that.</source>
          <target state="translated">full_gem_path를 얻기 위해서는`spec.loaded_from`에 의존합니다. 소스 플러그인에서 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a6a6b660c386afcb6370eee0b4427fd83757ea56" translate="yes" xml:space="preserve">
          <source>It does not raise an exception if an item is not found.</source>
          <target state="translated">항목을 찾을 수없는 경우 예외가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cbc0215b94776fcda524e7261842a4e7730d913c" translate="yes" xml:space="preserve">
          <source>It does this by registering an event handler with &lt;a href=&quot;kernel#method-i-set_trace_func&quot;&gt;&lt;code&gt;Kernel#set_trace_func&lt;/code&gt;&lt;/a&gt; for processing incoming events. It also provides methods for filtering unwanted trace output (see &lt;a href=&quot;tracer#method-c-add_filter&quot;&gt;&lt;code&gt;Tracer.add_filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tracer#method-c-on&quot;&gt;&lt;code&gt;Tracer.on&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;tracer#method-c-off&quot;&gt;&lt;code&gt;Tracer.off&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">들어오는 이벤트를 처리하기 위해 &lt;a href=&quot;kernel#method-i-set_trace_func&quot;&gt; &lt;code&gt;Kernel#set_trace_func&lt;/code&gt; &lt;/a&gt; 에 이벤트 핸들러를 등록하여이를 수행 합니다. 또한 원하지 않는 추적 출력을 필터링하는 방법도 제공합니다 ( &lt;a href=&quot;tracer#method-c-add_filter&quot;&gt; &lt;code&gt;Tracer.add_filter&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tracer#method-c-on&quot;&gt; &lt;code&gt;Tracer.on&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;tracer#method-c-off&quot;&gt; &lt;code&gt;Tracer.off&lt;/code&gt; 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3a65661607048cf8e5f1cc1a7175c76aafba488f" translate="yes" xml:space="preserve">
          <source>It doesn't access the filesystem.</source>
          <target state="translated">파일 시스템에 액세스하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0e04fdfbfdd8cb48188b27726cd113ed8407518c" translate="yes" xml:space="preserve">
          <source>It doesn't access the filesystem. So it may return &lt;code&gt;false&lt;/code&gt; for some pathnames which points to roots such as &lt;code&gt;/usr/..&lt;/code&gt;.</source>
          <target state="translated">파일 시스템에 액세스하지 않습니다. 따라서 &lt;code&gt;/usr/..&lt;/code&gt; 와 같은 루트를 가리키는 일부 경로 이름에 대해서는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac0944d18fdc67d2093fd8645b9be2b7f2bac1c1" translate="yes" xml:space="preserve">
          <source>It doesn't cause Errno::EWOULDBLOCK and Errno::EINTR. When readpartial meets EWOULDBLOCK and EINTR by read system call, readpartial retry the system call.</source>
          <target state="translated">Errno :: EWOULDBLOCK 및 Errno :: EINTR이 발생하지 않습니다. readpartial이 시스템 호출 읽기로 EWOULDBLOCK 및 EINTR을 충족하면 readpartial은 시스템 호출을 재 시도합니다.</target>
        </trans-unit>
        <trans-unit id="674326a47a0e1641dfebb8505dc7e6344f94d60f" translate="yes" xml:space="preserve">
          <source>It expands a single array argument.</source>
          <target state="translated">단일 배열 인수를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="dea082f43926bcdca997441848438ef7b88a66c2" translate="yes" xml:space="preserve">
          <source>It has always been a good idea to deep-freeze constants; &lt;a href=&quot;../ractor&quot;&gt;&lt;code&gt;Ractor&lt;/code&gt;&lt;/a&gt; makes this an even better idea as only the main ractor can access non-shareable constants:</source>
          <target state="translated">상수를 급속 동결하는 것은 항상 좋은 생각이었습니다. &lt;a href=&quot;../ractor&quot;&gt; &lt;code&gt;Ractor&lt;/code&gt; &lt;/a&gt; 는 주 레이터 만 공유 할 수없는 상수에 액세스 할 수 있으므로이를 훨씬 더 나은 아이디어로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="75c165b77d0ee60d8f981575ea9b24d611c1dcf4" translate="yes" xml:space="preserve">
          <source>It has fewer syntactical elements (to get wrong).</source>
          <target state="translated">(틀리기 위해) 문법적 요소가 적습니다.</target>
        </trans-unit>
        <trans-unit id="57ceb4e9f1750770bbb5779c106693404f179b5e" translate="yes" xml:space="preserve">
          <source>It has the non-destructive &lt;a href=&quot;array#method-i-uniq&quot;&gt;&lt;code&gt;uniq&lt;/code&gt;&lt;/a&gt;, and destructive method &lt;a href=&quot;array#method-i-uniq-21&quot;&gt;&lt;code&gt;uniq!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그것은 비파괴적인 &lt;a href=&quot;array#method-i-uniq&quot;&gt; &lt;code&gt;uniq&lt;/code&gt; &lt;/a&gt; , 그리고 파괴적인 방법으로 &lt;a href=&quot;array#method-i-uniq-21&quot;&gt; &lt;code&gt;uniq!&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bad1f64df5ae75d1497aa1bce9aa98effe168115" translate="yes" xml:space="preserve">
          <source>It is **only for demonstration purposes** and shouldn't be used in a real code. Most of the times, just &lt;a href=&quot;ractor#method-i-take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; is used to wait till ractor will finish.</source>
          <target state="translated">** 데모 용 **이며 실제 코드에서 사용해서는 안됩니다. ㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 시간의 대부분은 단지 &lt;a href=&quot;ractor#method-i-take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt; ractor 완료 할 때까지 기다려야하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e9e783002c3a09c0524f2d45d67668af59cc1807" translate="yes" xml:space="preserve">
          <source>It is also possible to exchange file descriptors.</source>
          <target state="translated">파일 디스크립터를 교환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="725c3b135b0d42d923ee32c6ffa510f6adced836" translate="yes" xml:space="preserve">
          <source>It is also strongly suggested that the scheduler implement the &lt;a href=&quot;schedulerinterface#method-i-fiber&quot;&gt;&lt;code&gt;fiber&lt;/code&gt;&lt;/a&gt; method, which is delegated to by &lt;a href=&quot;../fiber#method-c-schedule&quot;&gt;&lt;code&gt;Fiber.schedule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또한 스케줄러 는 &lt;a href=&quot;../fiber#method-c-schedule&quot;&gt; &lt;code&gt;Fiber.schedule&lt;/code&gt; &lt;/a&gt; 에 의해 위임 된 &lt;a href=&quot;schedulerinterface#method-i-fiber&quot;&gt; &lt;code&gt;fiber&lt;/code&gt; &lt;/a&gt; 메소드를 구현할 것을 강력히 제안합니다 .</target>
        </trans-unit>
        <trans-unit id="b6e090a4e0187375603ea5375292fbeda885a12c" translate="yes" xml:space="preserve">
          <source>It is generalized to other dimensions to return a vector perpendicular to the arguments.</source>
          <target state="translated">인수에 수직 인 벡터를 반환하기 위해 다른 차원으로 일반화됩니다.</target>
        </trans-unit>
        <trans-unit id="158844f1450f2e722119d3513ec254921b84b6ee" translate="yes" xml:space="preserve">
          <source>It is initialized to the current system time if no argument is given.</source>
          <target state="translated">인수가 제공되지 않으면 현재 시스템 시간으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="0926495ba5095eccf30183ee46ca9d3cdbe67bf1" translate="yes" xml:space="preserve">
          <source>It is only necessary to run cleanup when engines are loaded via &lt;a href=&quot;engine#method-c-load&quot;&gt;&lt;code&gt;OpenSSL::Engine.load&lt;/code&gt;&lt;/a&gt;. However, running cleanup before exit is recommended.</source>
          <target state="translated">&lt;a href=&quot;engine#method-c-load&quot;&gt; &lt;code&gt;OpenSSL::Engine.load&lt;/code&gt; &lt;/a&gt; 를 통해 엔진을로드 할 때 정리 만 실행하면됩니다 . 그러나 종료하기 전에 정리를 실행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1edd7361432629e8f6d0912653821b729b596933" translate="yes" xml:space="preserve">
          <source>It is passed to be similar to a &lt;a href=&quot;../prettyprint&quot;&gt;&lt;code&gt;PrettyPrint&lt;/code&gt;&lt;/a&gt; object itself, by responding to:</source>
          <target state="translated">다음 에 응답하여 &lt;a href=&quot;../prettyprint&quot;&gt; &lt;code&gt;PrettyPrint&lt;/code&gt; &lt;/a&gt; 오브젝트 자체 와 유사하게 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="4ab2bb01aa7cf80e9ceea186ef6d5bd41f2a1aa0" translate="yes" xml:space="preserve">
          <source>It is possible that the &lt;a href=&quot;../ocsp&quot;&gt;&lt;code&gt;OCSP&lt;/code&gt;&lt;/a&gt; request takes a few seconds or the time is not accurate. To avoid rejecting a valid response, this method allows the times to be within &lt;em&gt;nsec&lt;/em&gt; seconds of the current time.</source>
          <target state="translated">가능성이 &lt;a href=&quot;../ocsp&quot;&gt; &lt;code&gt;OCSP&lt;/code&gt; 의&lt;/a&gt; 요청을 몇 초 걸리거나 시간이 정확하지 않습니다. 유효한 응답을 거부하지 않기 위해이 방법을 사용하면 시간 이 현재 시간의 &lt;em&gt;nsec&lt;/em&gt; 초 내에있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a3030b895fa73ca3bd665e9ca1439dec11df0f87" translate="yes" xml:space="preserve">
          <source>It is possible to create arbitrary &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; objects that also support a PRIVATE or APPLICATION tag class. Possible values for the &lt;em&gt;tag_class&lt;/em&gt; attribute are:</source>
          <target state="translated">PRIVATE 또는 APPLICATION 태그 클래스를 지원하는 임의의 &lt;a href=&quot;asn1/asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 객체 를 생성 할 수 있습니다 . &lt;em&gt;tag_class&lt;/em&gt; 속성에 가능한 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d683f227791bb391d6df71896fcdef842a19a27" translate="yes" xml:space="preserve">
          <source>It is possible to gather arguments at the beginning or in the middle:</source>
          <target state="translated">시작 또는 중간에 인수를 수집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd679dd487998b6d1ecc4e42092ed0fc0e3270e3" translate="yes" xml:space="preserve">
          <source>It is possible to open an http, https or ftp URL as though it were a file:</source>
          <target state="translated">http, https 또는 ftp URL을 파일 인 것처럼 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d11ed81ba5cc073b03aa944a2157f970ce89724a" translate="yes" xml:space="preserve">
          <source>It is prohibited to access instance variables of mutable shareable objects (especially Modules and classes) from ractors other than main:</source>
          <target state="translated">main 이외의 ractor에서 변경 가능한 공유 가능 객체 (특히 모듈 및 클래스)의 인스턴스 변수에 액세스하는 것은 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="b15d00df469518a7ef0e4167442b4400174a5af5" translate="yes" xml:space="preserve">
          <source>It is recommended (but not enforced) to not use fields ending in `!`; Note that a subclass' methods may not be overwritten, nor can OpenStruct's own methods ending with `!`.</source>
          <target state="translated">`!`로 끝나는 필드를 사용하지 않는 것이 좋습니다 (강제되지는 않음). 서브 클래스의 메소드는 덮어 쓸 수 없으며`! '로 끝나는 OpenStruct의 자체 메소드도 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6b516dc39c13b99c49e728ce0b176e10b290ff26" translate="yes" xml:space="preserve">
          <source>It is recommended that a library should have one subclass of &lt;a href=&quot;standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; and have specific exception types inherit from it. This allows the user to rescue a generic exception type to catch all exceptions the library may raise even if future versions of the library add new exception subclasses.</source>
          <target state="translated">라이브러리에는 &lt;a href=&quot;standarderror&quot;&gt; &lt;code&gt;StandardError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 의 하나의 서브 클래스가 있어야하고 특정 예외 유형이 상속되도록 권장 합니다. 이를 통해 사용자는 일반 버전의 예외 유형을 구조하여 향후 버전의 라이브러리가 새로운 예외 서브 클래스를 추가하더라도 라이브러리에서 발생할 수있는 모든 예외를 포착 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19f5256de54eae3d6c57fea9329921664e1a81ec" translate="yes" xml:space="preserve">
          <source>It is recommended to use &lt;a href=&quot;tempfile#method-c-create&quot;&gt;&lt;code&gt;Tempfile.create&lt;/code&gt;&lt;/a&gt; { &amp;hellip; } instead when possible, because that method avoids the cost of delegation and does not rely on a finalizer to close and unlink the file, which is unreliable.</source>
          <target state="translated">가능한 &lt;a href=&quot;tempfile#method-c-create&quot;&gt; &lt;code&gt;Tempfile.create&lt;/code&gt; &lt;/a&gt; {&amp;hellip;} 를 사용하는 것이 좋습니다. 이 방법은 위임 비용을 피하고 파일을 닫고 링크 해제하기 위해 종료 자에 의존하지 않으므로 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7d7a0f3828ca29d145c9aef8fdf2adc1e59c0bf0" translate="yes" xml:space="preserve">
          <source>It is said that &lt;a href=&quot;ractor&quot;&gt;&lt;code&gt;Ractor&lt;/code&gt;&lt;/a&gt; receives messages via the &lt;em&gt;incoming port&lt;/em&gt;, and sends them to the &lt;em&gt;outgoing port&lt;/em&gt;. Either one can be disabled with &lt;a href=&quot;ractor#method-i-close_incoming&quot;&gt;&lt;code&gt;Ractor#close_incoming&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ractor#method-i-close_outgoing&quot;&gt;&lt;code&gt;Ractor#close_outgoing&lt;/code&gt;&lt;/a&gt; respectively. If a ractor terminated, its ports will be closed automatically.</source>
          <target state="translated">이다고 &lt;a href=&quot;ractor&quot;&gt; &lt;code&gt;Ractor&lt;/code&gt; 이&lt;/a&gt; 를 통해 메시지를 수신하는 &lt;em&gt;수신 포트&lt;/em&gt; 와로 전송 &lt;em&gt;나가는 포트&lt;/em&gt; . 둘 중 하나는 각각 &lt;a href=&quot;ractor#method-i-close_incoming&quot;&gt; &lt;code&gt;Ractor#close_incoming&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;ractor#method-i-close_outgoing&quot;&gt; &lt;code&gt;Ractor#close_outgoing&lt;/code&gt; &lt;/a&gt; 으로 비활성화 할 수 있습니다 . 레이터가 종료되면 해당 포트가 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="46426e360bbc14c0543824c11c51eef27653e2fa" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;basicsocket#method-i-recvmsg&quot;&gt;&lt;code&gt;BasicSocket#recvmsg&lt;/code&gt;&lt;/a&gt; but non-blocking flag is set before the system call and it doesn't retry the system call.</source>
          <target state="translated">&lt;a href=&quot;basicsocket#method-i-recvmsg&quot;&gt; &lt;code&gt;BasicSocket#recvmsg&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 비 차단 플래그는 시스템 호출 전에 설정되며 시스템 호출을 재 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c1d87f118bd50679e3c255be40e56f2f98098d5" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;basicsocket#method-i-sendmsg&quot;&gt;&lt;code&gt;BasicSocket#sendmsg&lt;/code&gt;&lt;/a&gt; but the non-blocking flag is set before the system call and it doesn't retry the system call.</source>
          <target state="translated">&lt;a href=&quot;basicsocket#method-i-sendmsg&quot;&gt; &lt;code&gt;BasicSocket#sendmsg&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 비 차단 플래그는 시스템 호출 전에 설정되며 시스템 호출을 재 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="699b32adc3b98988b03cdbb912ca92cfc4f944e0" translate="yes" xml:space="preserve">
          <source>It is the caller's responsibility to encode the string in the right encoding for the shell environment where this string is used.</source>
          <target state="translated">이 문자열이 사용되는 쉘 환경에 적합한 인코딩으로 문자열을 인코딩하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="6886a45e727760c9c0477ada5a6c9a2dc1c64555" translate="yes" xml:space="preserve">
          <source>It is typical to call &lt;a href=&quot;object#method-i-to_enum&quot;&gt;&lt;code&gt;to_enum&lt;/code&gt;&lt;/a&gt; when defining methods for a generic &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt;, in case no block is passed.</source>
          <target state="translated">블록이 전달되지 않는 경우 일반 &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; 에&lt;/a&gt; 대한 메소드를 정의 할 때 &lt;a href=&quot;object#method-i-to_enum&quot;&gt; &lt;code&gt;to_enum&lt;/code&gt; &lt;/a&gt; 을 호출 하는 것이 일반적 입니다.</target>
        </trans-unit>
        <trans-unit id="72096abbffdbe857dda113cc9f97b9597c663ed1" translate="yes" xml:space="preserve">
          <source>It is used as a mixin by other classes, to provide hash-like access to &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; header values. Unlike raw hash access, &lt;a href=&quot;httpheader&quot;&gt;&lt;code&gt;HTTPHeader&lt;/code&gt;&lt;/a&gt; provides access via case-insensitive keys. It also provides methods for accessing commonly-used &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; header values in more convenient formats.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 헤더 값 에 대한 해시 유사 액세스를 제공하기 위해 다른 클래스에서 믹스 인으로 사용됩니다 . 원시 해시 액세스와 달리 &lt;a href=&quot;httpheader&quot;&gt; &lt;code&gt;HTTPHeader&lt;/code&gt; &lt;/a&gt; 는 대소 문자를 구분하지 않는 키를 통한 액세스를 제공합니다. 또한 보다 편리한 형식 으로 일반적으로 사용되는 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 헤더 값에 액세스하는 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="26354e20f5cd1176e09bdaff2fb8ef87363d1cf1" translate="yes" xml:space="preserve">
          <source>It is used to obtain the full_gem_path.</source>
          <target state="translated">full_gem_path를 얻는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="48fe8c45ebdfec5bc6240b94076bdf53a5a8cb11" translate="yes" xml:space="preserve">
          <source>It is, though, not advised to reuse the bound value, as this pattern's goal is to signify a discarded value.</source>
          <target state="translated">그러나이 패턴의 목표는 폐기 된 값을 나타내는 것이기 때문에 바인딩 된 값을 재사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="af2c04c55e392ddab708550500b8a63f43eb9605" translate="yes" xml:space="preserve">
          <source>It may also be helpful to use the &lt;a href=&quot;abbrev&quot;&gt;&lt;code&gt;Abbrev&lt;/code&gt;&lt;/a&gt; library to generate completions.</source>
          <target state="translated">완료를 생성 하기 위해 &lt;a href=&quot;abbrev&quot;&gt; &lt;code&gt;Abbrev&lt;/code&gt; &lt;/a&gt; 라이브러리를 사용하는 것이 도움이 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffb4f4e0e285485e849b1ed63d46e839b0e8c3d3" translate="yes" xml:space="preserve">
          <source>It mixes in the HTTPHeader module, which provides access to response header values both via hash-like methods and via individual readers.</source>
          <target state="translated">HTTPHeader 모듈에서 혼합되어 해시와 유사한 방법과 개별 리더를 통해 응답 헤더 값에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65fbf9c821e4290e2238cefef3ec12957c1365b7" translate="yes" xml:space="preserve">
          <source>It must appear in the first comment section of a file.</source>
          <target state="translated">파일의 첫 번째 주석 섹션에 나타나야합니다.</target>
        </trans-unit>
        <trans-unit id="e9906c190184e7b27f1040dc1c33665c3f2f0231" translate="yes" xml:space="preserve">
          <source>It must provide the following methods:</source>
          <target state="translated">다음 방법을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="280c4dfde33ec9b52a094a792b1e9dc6f8077c00" translate="yes" xml:space="preserve">
          <source>It passes the passed arguments and block to the block registered with the api.</source>
          <target state="translated">전달 된 인수와 블록을 API에 등록 된 블록으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="e6b9dadff729fdd1795e05a5626d4f132034e485" translate="yes" xml:space="preserve">
          <source>It provides &lt;code&gt;nil&lt;/code&gt; for missing arguments.</source>
          <target state="translated">누락 된 인수에 대해서는 &lt;code&gt;nil&lt;/code&gt; 을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="31c3c2a12371ab56da804908da5d3f51f278fb9d" translate="yes" xml:space="preserve">
          <source>It provides users the ability to execute commands with filters and pipes, like &lt;code&gt;sh&lt;/code&gt;/&lt;code&gt;csh&lt;/code&gt; by using native facilities of Ruby.</source>
          <target state="translated">Ruby의 기본 기능을 사용하여 &lt;code&gt;sh&lt;/code&gt; / &lt;code&gt;csh&lt;/code&gt; 와 같은 필터 및 파이프를 사용하여 명령을 실행할 수있는 기능을 사용자에게 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="df46952157b7631b4d47033f7f55139831d70df3" translate="yes" xml:space="preserve">
          <source>It raises &lt;a href=&quot;eoferror&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; on end of &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; stream. Since &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; stream is a concatenation of multiple files, internally EOF is occur for each file. &lt;a href=&quot;argf#method-i-readpartial&quot;&gt;&lt;code&gt;ARGF.readpartial&lt;/code&gt;&lt;/a&gt; returns empty strings for EOFs except the last one and raises &lt;a href=&quot;eoferror&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; for the last one.</source>
          <target state="translated">그것은 제기 &lt;a href=&quot;eoferror&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 의 끝 &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 스트림입니다. 때문에 &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 스트림이 여러 파일의 연결이며, 내부적으로 EOF 각 파일에 대해 발생합니다. &lt;a href=&quot;argf#method-i-readpartial&quot;&gt; &lt;code&gt;ARGF.readpartial&lt;/code&gt; &lt;/a&gt; 은 마지막 EOF를 제외한 EOF에 대해 빈 문자열을 반환하고 마지막 &lt;a href=&quot;eoferror&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="c3b252ab0c72ad8f5918e98b219cead01780733b" translate="yes" xml:space="preserve">
          <source>It raises &lt;a href=&quot;eoferror&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; on end of file.</source>
          <target state="translated">그것은 제기 &lt;a href=&quot;eoferror&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 파일의 끝에.</target>
        </trans-unit>
        <trans-unit id="3bc8346edb40c1544430faf8dfaf9544973c2184" translate="yes" xml:space="preserve">
          <source>It raises &lt;code&gt;EOFError&lt;/code&gt; on end of &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; stream. Since &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; stream is a concatenation of multiple files, internally EOF is occur for each file. &lt;a href=&quot;argf#method-i-readpartial&quot;&gt;&lt;code&gt;ARGF.readpartial&lt;/code&gt;&lt;/a&gt; returns empty strings for EOFs except the last one and raises &lt;code&gt;EOFError&lt;/code&gt; for the last one.</source>
          <target state="translated">그것은 제기 &lt;code&gt;EOFError&lt;/code&gt; 의 끝 &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 스트림입니다. &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 스트림은 여러 파일을 연결 하기 때문에 각 파일마다 내부적으로 EOF가 발생합니다. &lt;a href=&quot;argf#method-i-readpartial&quot;&gt; &lt;code&gt;ARGF.readpartial&lt;/code&gt; &lt;/a&gt; 은 마지막 문자열을 제외하고 EOF에 대해 빈 문자열을 반환하고 마지막 문자열에 대해 &lt;code&gt;EOFError&lt;/code&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f8cfec979e519a83d28382a0f47d79735b75f008" translate="yes" xml:space="preserve">
          <source>It raises &lt;code&gt;EOFError&lt;/code&gt; on end of file.</source>
          <target state="translated">그것은 제기 &lt;code&gt;EOFError&lt;/code&gt; 파일의 끝에.</target>
        </trans-unit>
        <trans-unit id="f2e69af7bdbfb6d65620d7a638099949d9369125" translate="yes" xml:space="preserve">
          <source>It reads better.</source>
          <target state="translated">더 잘 읽습니다.</target>
        </trans-unit>
        <trans-unit id="32ec2adf1d2034ed63381307680a6fc77a6b6a6c" translate="yes" xml:space="preserve">
          <source>It receives arguments in an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; and two hashes, one for options and other for configuration.</source>
          <target state="translated">하나는 옵션으로, 다른 하나는 구성으로, 두 개의 해시에서 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 인수를받습니다 .</target>
        </trans-unit>
        <trans-unit id="0fcba94e6ea2736550f43f8f36fda977e41ca566" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;false&lt;/code&gt; if the pathname begins with a slash.</source>
          <target state="translated">경로명이 슬래시로 시작하면 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="08e2b4c52eefa03e4d6723f1338c589d991f6706" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;obj(s)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;obj(s)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="641f0ce5c2445bea7a8d7ae0f9f4e006366a5410" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; if the pathname begins with a slash.</source>
          <target state="translated">경로명이 슬래시로 시작하면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="e8c85acdfa4027a8a30509167a3614680f77eb8b" translate="yes" xml:space="preserve">
          <source>It returns a hash as:</source>
          <target state="translated">해시를 다음과 같이 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1d85311edad0334f1a90ed8ea2e2c32ba3ed348e" translate="yes" xml:space="preserve">
          <source>It returns a hash, such as:</source>
          <target state="translated">다음과 같은 해시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f48ae827740322d947439521e6cd2979f5798300" translate="yes" xml:space="preserve">
          <source>It returns an array with the read buffer, followed by the matches. If a block is given, the result is yielded to the block and returns nil.</source>
          <target state="translated">읽기 버퍼와 일치하는 배열을 반환합니다. 블록이 주어지면 결과는 블록으로 나오고 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="431420575bcf522f538be5b2f4a9da8aed2ee1db" translate="yes" xml:space="preserve">
          <source>It returns nil if no host component exists.</source>
          <target state="translated">호스트 구성 요소가 없으면 nil을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c290ae8596b2a187a5768090fcdf087029c4cba9" translate="yes" xml:space="preserve">
          <source>It returns the number of bytes written.</source>
          <target state="translated">쓴 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4d62291478b22af54008813e8517fae99cc4caad" translate="yes" xml:space="preserve">
          <source>It returns the number of times &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; occurred since the process started.</source>
          <target state="translated">프로세스가 시작된 이후 &lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 가 발생한 횟수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8067cbb9aa44dabf852396c14c8cbe0a6940072c" translate="yes" xml:space="preserve">
          <source>It should be called in `install` after the plugin is done placing the gem at correct install location.</source>
          <target state="translated">젬을 올바른 설치 위치에 놓은 후에 플러그인이 완료된 후`install`에서 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="56cb9d6da948c5d75fba6033bcf0a9cb361b20d8" translate="yes" xml:space="preserve">
          <source>It skips the sources if the second param is true @param [Pathname] index file path @param [Boolean] is the index file global index</source>
          <target state="translated">두 번째 매개 변수가 true 인 경우 소스를 건너 뜁니다. @param [경로 이름] 색인 파일 경로 @param [부울]은 색인 파일 글로벌 색인입니다</target>
        </trans-unit>
        <trans-unit id="09dbd01477aea4783909e630604671387adbc9ed" translate="yes" xml:space="preserve">
          <source>It supports the following secure random number generators:</source>
          <target state="translated">다음과 같은 안전한 난수 생성기를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a85fc23c095fe3470480ae63c5105c54cc57255b" translate="yes" xml:space="preserve">
          <source>It supports two modes, depending on the nature of the block. They are exactly the same as in the case of the &lt;a href=&quot;array#method-i-bsearch&quot;&gt;&lt;code&gt;bsearch&lt;/code&gt;&lt;/a&gt; method, with the only difference being that this method returns the index of the element instead of the element itself. For more details consult the documentation for &lt;a href=&quot;array#method-i-bsearch&quot;&gt;&lt;code&gt;bsearch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">블록의 특성에 따라 두 가지 모드를 지원합니다. 그것들은 &lt;a href=&quot;array#method-i-bsearch&quot;&gt; &lt;code&gt;bsearch&lt;/code&gt; &lt;/a&gt; 메소드 의 경우와 정확히 동일하지만 , 유일한 차이점은이 메소드가 요소 자체 대신 요소의 색인을 리턴한다는 점입니다. 자세한 내용은 &lt;a href=&quot;array#method-i-bsearch&quot;&gt; &lt;code&gt;bsearch&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e419bbcb68a1080b38b88b7506326c674e094ad" translate="yes" xml:space="preserve">
          <source>It will create a doc directory in the destination with the following files (assuming that the `app_name` method returns the value &amp;ldquo;blog&amp;rdquo;):</source>
          <target state="translated">`app_name` 메소드가&amp;ldquo;blog&amp;rdquo;값을 리턴한다고 가정하면 다음 파일을 사용하여 목적지에 doc 디렉토리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b684744187a69ad36da2abb3bebe6cf83b766bc1" translate="yes" xml:space="preserve">
          <source>It will return &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; depending on the value of the left argument relative to the right argument. Or it will return &lt;code&gt;nil&lt;/code&gt; if the arguments are not comparable.</source>
          <target state="translated">오른쪽 인수와 관련된 왼쪽 인수의 값에 따라 &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 을 반환 합니다. 또는 인수가 비교 가능하지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="5aa6df2ab5d7ffa41b1599ee61d0be1ea9e88215" translate="yes" xml:space="preserve">
          <source>It wraps &lt;a href=&quot;http://sourceware.org/libffi/&quot;&gt;libffi&lt;/a&gt;, a popular C library which provides a portable interface that allows code written in one language to call code written in another language.</source>
          <target state="translated">한 언어로 작성된 코드가 다른 언어로 작성된 코드를 호출 할 수있는 이식 가능한 인터페이스를 제공하는 널리 사용되는 C 라이브러리 인 &lt;a href=&quot;http://sourceware.org/libffi/&quot;&gt;libffi를&lt;/a&gt; 래핑 합니다.</target>
        </trans-unit>
        <trans-unit id="8a918d9f5457a5fdce5655597edfb7f060d0a062" translate="yes" xml:space="preserve">
          <source>It yields &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each child.</source>
          <target state="translated">각 자식에 대한 &lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 객체를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="b072ce8411808ce8f6fd7373e19878f4ff32fa48" translate="yes" xml:space="preserve">
          <source>It's a common misconception that &lt;a href=&quot;http://en.wikipedia.org/wiki/William_Shakespeare&quot;&gt;William Shakespeare&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Miguel_de_Cervantes&quot;&gt;Miguel de Cervantes&lt;/a&gt; died on the same day in history - so much so that UNESCO named April 23 as &lt;a href=&quot;http://en.wikipedia.org/wiki/World_Book_Day&quot;&gt;World Book Day because of this fact&lt;/a&gt;. However, because England hadn't yet adopted the &lt;a href=&quot;http://en.wikipedia.org/wiki/Gregorian_calendar#Gregorian_reform&quot;&gt;Gregorian Calendar Reform&lt;/a&gt; (and wouldn't until &lt;a href=&quot;http://en.wikipedia.org/wiki/Calendar_(New_Style)_Act_1750&quot;&gt;1752&lt;/a&gt;) their deaths are actually 10 days apart. Since Ruby's &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class implements a &lt;a href=&quot;http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar&quot;&gt;proleptic Gregorian calendar&lt;/a&gt; and has no concept of calendar reform there's no way to express this with &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; objects. This is where &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; steps in:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/William_Shakespeare&quot;&gt;윌리엄 셰익스피어&lt;/a&gt; 와 &lt;a href=&quot;http://en.wikipedia.org/wiki/Miguel_de_Cervantes&quot;&gt;미구엘 데 세르반테스&lt;/a&gt; 는 역사상 같은 날 죽었다 는 것이 일반적인 오해입니다 . &lt;a href=&quot;http://en.wikipedia.org/wiki/World_Book_Day&quot;&gt;이 사실 때문에&lt;/a&gt; 유네스코가 4 월 23 일을 세계 도서의 날로 지명했습니다 . 그러나 영국은 아직 &lt;a href=&quot;http://en.wikipedia.org/wiki/Gregorian_calendar#Gregorian_reform&quot;&gt;그레고리력 개혁&lt;/a&gt; ( Greorgian Calendar Reform)을 채택하지 않았기 때문에 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Calendar_(New_Style)_Act_1750&quot;&gt;1752&lt;/a&gt; 년까지 ) 실제로 사망 한 지 10 일이 지났다. Ruby의 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 클래스는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar&quot;&gt;다목적 Gregorian 캘린더를&lt;/a&gt; 구현하고 캘린더 개혁의 개념이 없으므로 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 객체로 이것을 표현할 방법이 없습니다 . 이것은 &lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 이 들어가는 곳 입니다.</target>
        </trans-unit>
        <trans-unit id="79d94425f58ad110c6ce622251da16b76cd28214" translate="yes" xml:space="preserve">
          <source>It's a common misconception that &lt;a href=&quot;https://en.wikipedia.org/wiki/William_Shakespeare&quot;&gt;William Shakespeare&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Miguel_de_Cervantes&quot;&gt;Miguel de Cervantes&lt;/a&gt; died on the same day in history - so much so that UNESCO named April 23 as &lt;a href=&quot;https://en.wikipedia.org/wiki/World_Book_Day&quot;&gt;World Book Day because of this fact&lt;/a&gt;. However, because England hadn't yet adopted the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gregorian_calendar#Gregorian_reform&quot;&gt;Gregorian Calendar Reform&lt;/a&gt; (and wouldn't until &lt;a href=&quot;https://en.wikipedia.org/wiki/Calendar_(New_Style)_Act_1750&quot;&gt;1752&lt;/a&gt;) their deaths are actually 10 days apart. Since Ruby's &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class implements a &lt;a href=&quot;https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar&quot;&gt;proleptic Gregorian calendar&lt;/a&gt; and has no concept of calendar reform there's no way to express this with &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; objects. This is where &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; steps in:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/William_Shakespeare&quot;&gt;윌리엄 셰익스피어&lt;/a&gt; 와 &lt;a href=&quot;https://en.wikipedia.org/wiki/Miguel_de_Cervantes&quot;&gt;미구엘 드 세르반테스&lt;/a&gt; 가 역사상 같은 날 사망 했다는 것은 일반적인 오해입니다 . &lt;a href=&quot;https://en.wikipedia.org/wiki/World_Book_Day&quot;&gt;이 사실 때문에&lt;/a&gt; 유네스코는 4 월 23 일을 세계 책의 날로 지정했습니다 . 그러나 잉글랜드가 아직 &lt;a href=&quot;https://en.wikipedia.org/wiki/Gregorian_calendar#Gregorian_reform&quot;&gt;그레고리력 개혁을&lt;/a&gt; 채택하지 않았기 때문에 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Calendar_(New_Style)_Act_1750&quot;&gt;1752&lt;/a&gt; 년까지는 그렇지 않았기 때문에 ) 그들의 죽음은 실제로 10 일 간격입니다. Ruby의 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 클래스는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar&quot;&gt;proleptic Gregorian 달력을&lt;/a&gt; 구현하고 달력 개혁의 개념이 없기 때문에 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 객체로 이것을 표현할 방법이 없습니다 . 이것은 &lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 이 들어가는 곳 입니다.</target>
        </trans-unit>
        <trans-unit id="abc0b81451cb08fccbc106d5f04ecb00622dd8df" translate="yes" xml:space="preserve">
          <source>It's also important to note that while all of CSV's core parser is now &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; agnostic, some features are not. For example, the built-in converters will try to transcode data to UTF-8 before making conversions. Again, you can provide custom converters that are aware of your Encodings to avoid this translation. It's just too hard for me to support native conversions in all of Ruby's Encodings.</source>
          <target state="translated">CSV의 모든 핵심 파서는 이제 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 무관심하지만 일부 기능은 그렇지 않습니다. 예를 들어 내장 변환기는 변환하기 전에 데이터를 UTF-8로 코드 변환하려고합니다. 다시 말하지만,이 변환을 피하기 위해 인코딩을 인식하는 사용자 정의 변환기를 제공 할 수 있습니다. 모든 Ruby 인코딩에서 네이티브 변환을 지원하는 것은 너무 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="d79bfbf7ead363cac18972d428da15ffd945a068" translate="yes" xml:space="preserve">
          <source>It's important to note that this does &lt;strong&gt;not&lt;/strong&gt; cause SimpleDelegator's methods to change. Because of this, you probably only want to change delegation to objects of the same type as the original delegate.</source>
          <target state="translated">이로 인해 SimpleDelegator의 메소드가 변경 &lt;strong&gt;되지&lt;/strong&gt; 는 &lt;strong&gt;않습니다&lt;/strong&gt; . 이로 인해 위임을 원래 대리인과 동일한 유형의 개체로만 변경하려고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b163e32a35583721d7fcbf5e12681b60f1f804e" translate="yes" xml:space="preserve">
          <source>It's important to note that this will essentially merge any of the keys in &lt;em&gt;pairs&lt;/em&gt; with the existing &lt;em&gt;section&lt;/em&gt;. For example:</source>
          <target state="translated">이것은 본질적으로 모든 키를 기존 &lt;em&gt;섹션&lt;/em&gt; 과 &lt;em&gt;쌍&lt;/em&gt; 으로 병합한다는 점에 유의해야합니다 . 예를 들면 다음과 같습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06a068243c6471becd4893a897c94c073ce9911e" translate="yes" xml:space="preserve">
          <source>It's possible to stack multiple levels of &lt;a href=&quot;thread#method-c-handle_interrupt&quot;&gt;&lt;code&gt;::handle_interrupt&lt;/code&gt;&lt;/a&gt; blocks in order to control more than one ExceptionClass and TimingSymbol at a time.</source>
          <target state="translated">한 번에 둘 이상의 ExceptionClass 및 TimingSymbol을 제어하기 위해 여러 레벨의 &lt;a href=&quot;thread#method-c-handle_interrupt&quot;&gt; &lt;code&gt;::handle_interrupt&lt;/code&gt; &lt;/a&gt; 블록 을 쌓을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca2a8e3d7234f29de796b99b44634a8954dc59c3" translate="yes" xml:space="preserve">
          <source>It's recommended to first ::escape the provided &lt;code&gt;uri_str&lt;/code&gt; if there are any invalid &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; characters.</source>
          <target state="translated">잘못된 &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 문자 가있는 경우 제공된 &lt;code&gt;uri_str&lt;/code&gt; 을 먼저 :: 이스케이프하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d5ec3302f1c944bfe4bc5b014f651b993521795a" translate="yes" xml:space="preserve">
          <source>It's recommended to first ::escape the provided &lt;code&gt;uri_str&lt;/code&gt; if there are any invalid &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; characters.</source>
          <target state="translated">잘못된 &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 문자 가 있으면 먼저 제공된 &lt;code&gt;uri_str&lt;/code&gt; 을 이스케이프하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d4bc74e24ea6c926ea9f28e259a7429f50ef4f18" translate="yes" xml:space="preserve">
          <source>It's similar to &lt;a href=&quot;stringscanner#method-i-scan&quot;&gt;&lt;code&gt;scan&lt;/code&gt;&lt;/a&gt;, but without returning the matched string.</source>
          <target state="translated">&lt;a href=&quot;stringscanner#method-i-scan&quot;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 일치하는 문자열을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e4aff98d0ef49a2c880f8a436a49ba7f409212d" translate="yes" xml:space="preserve">
          <source>It's similar to &lt;a href=&quot;stringscanner#method-i-scan_until&quot;&gt;&lt;code&gt;scan_until&lt;/code&gt;&lt;/a&gt;, but without returning the intervening string.</source>
          <target state="translated">&lt;a href=&quot;stringscanner#method-i-scan_until&quot;&gt; &lt;code&gt;scan_until&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 중간 문자열을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e4c7540bb4ab142bebc02f51f8ad7ed240e13c07" translate="yes" xml:space="preserve">
          <source>Items can be added to the end of an array by using either &lt;a href=&quot;array#method-i-push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;array#method-i-3C-3C&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;array#method-i-push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;array#method-i-3C-3C&quot;&gt; &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 를&lt;/a&gt; 사용하여 배열 끝에 항목을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b60e78284c728ff28704cfdef144ea0b8f2f27d" translate="yes" xml:space="preserve">
          <source>Iterate all direct child instruction sequences. Iteration order is implementation/version defined so that people should not rely on the order.</source>
          <target state="translated">모든 직계 하위 명령 시퀀스를 반복합니다. 반복 순서는 구현 / 버전으로 정의되므로 사람들이 순서에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="1d4943cc3568dad597b8ba054d174cf146b1ebca" translate="yes" xml:space="preserve">
          <source>Iterate over the elements of this vector</source>
          <target state="translated">이 벡터의 요소를 반복</target>
        </trans-unit>
        <trans-unit id="1eb79fb067bf48412e65fbb057c48a388e994a41" translate="yes" xml:space="preserve">
          <source>Iterate over the elements of this vector and &lt;code&gt;v&lt;/code&gt; in conjunction.</source>
          <target state="translated">이 벡터와 &lt;code&gt;v&lt;/code&gt; 의 요소를 함께 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="783f97276abcb9b5abed7abd6474f209740e08e6" translate="yes" xml:space="preserve">
          <source>Iterate through the tuple, yielding the index or key, and the value, thus ensuring arrays are iterated similarly to hashes.</source>
          <target state="translated">튜플을 반복하여 인덱스 또는 키와 값을 생성하므로 배열이 해시와 유사하게 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="17014ecabf32c9cb094ed98dc94b91934bf0c20b" translate="yes" xml:space="preserve">
          <source>Iterates backwards over array elements.</source>
          <target state="translated">배열 요소에 대해 역방향으로 반복합니다.</target>
        </trans-unit>
        <trans-unit id="13d03422c0452f168b86623814e60a49f2ca3498" translate="yes" xml:space="preserve">
          <source>Iterates evaluation of the given block, which takes a date object. The limit should be a date object.</source>
          <target state="translated">주어진 블록의 평가를 반복하며, 이는 날짜 객체를 가져옵니다. 제한은 날짜 개체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5abf3d0efeabf250a176eb9abc7d262f55e6be0d" translate="yes" xml:space="preserve">
          <source>Iterates over all &lt;code&gt;typeclass&lt;/code&gt;&lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resources for &lt;code&gt;name&lt;/code&gt;. See &lt;a href=&quot;dns#method-i-getresource&quot;&gt;&lt;code&gt;getresource&lt;/code&gt;&lt;/a&gt; for argument details.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 에 대한 모든 &lt;code&gt;typeclass&lt;/code&gt; &lt;a href=&quot;dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 자원을 반복합니다 . 인수 세부 사항 은 &lt;a href=&quot;dns#method-i-getresource&quot;&gt; &lt;code&gt;getresource&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="d7cb56e15d99c9cd7916708078e866356187e987" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt; retrieved from the &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resolver.</source>
          <target state="translated">&lt;a href=&quot;dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 확인자 에서 검색 한 &lt;code&gt;name&lt;/code&gt; 모든 IP 주소를 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="852c4adc3e18609622d69a2073cd81ef65a67a1f" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt; retrieved from the hosts file.</source>
          <target state="translated">hosts 파일에서 검색된 &lt;code&gt;name&lt;/code&gt; 모든 IP 주소를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="4590314945079306e785a01c64ae956b3d5cb265" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt; retrieved from the mDNS resolver, provided name ends with &amp;ldquo;local&amp;rdquo;. If the name does not end in &amp;ldquo;local&amp;rdquo; no records will be returned.</source>
          <target state="translated">이름이 &quot;local&quot;로 끝나는 경우 mDNS 리졸버에서 검색된 &lt;code&gt;name&lt;/code&gt; 모든 IP 주소를 반복합니다 . 이름이 &quot;local&quot;로 끝나지 않으면 레코드가 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3b6135e9455abaa3652fb7b1232c92eaa2ae3f65" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 의 모든 IP 주소를 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="0ee68be17e03bc23d3626a43dc2512b583fa6a5d" translate="yes" xml:space="preserve">
          <source>Iterates over all discovered TupleSpaces starting with the primary.</source>
          <target state="translated">기본부터 시작하여 발견 된 모든 TupleSpaces를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="da18809b6e8b34b53a4c74eef3596c0879cdea68" translate="yes" xml:space="preserve">
          <source>Iterates over all hostnames for &lt;code&gt;address&lt;/code&gt; retrieved from the &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resolver.</source>
          <target state="translated">&lt;a href=&quot;dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 확인자 에서 검색된 &lt;code&gt;address&lt;/code&gt; 모든 호스트 이름을 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="28b0a14910c7bb755efbf462e73ab75baaf5f778" translate="yes" xml:space="preserve">
          <source>Iterates over all hostnames for &lt;code&gt;address&lt;/code&gt; retrieved from the hosts file.</source>
          <target state="translated">hosts 파일에서 검색된 &lt;code&gt;address&lt;/code&gt; 대해 모든 호스트 이름을 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="0c4d7dc55f06fe0e3eb6840594accff9551d9c70" translate="yes" xml:space="preserve">
          <source>Iterates over all hostnames for &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 의 모든 호스트 이름을 반복 합니다 .</target>
        </trans-unit>
        <trans-unit id="41a58677828efd6e6b9f58ef49c3048ccc83c07a" translate="yes" xml:space="preserve">
          <source>Iterates over and yields a new &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each element in the given path in ascending order.</source>
          <target state="translated">주어진 경로의 각 요소에 대해 새로운 &lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 객체를 반복 하여 오름차순으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3fbd84e0edc6aa1f271ec0ca501f183483a05201" translate="yes" xml:space="preserve">
          <source>Iterates over and yields a new &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each element in the given path in descending order.</source>
          <target state="translated">주어진 경로의 각 요소에 대해 내림차순 으로 새 &lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 객체를 반복 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="a14c67bd1bbe4b872558a5941931a9b170ce1f10" translate="yes" xml:space="preserve">
          <source>Iterates over array elements.</source>
          <target state="translated">배열 요소를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="cfcc8e6e47d5e5c2f9267e07e15d9b7bbacd5b1d" translate="yes" xml:space="preserve">
          <source>Iterates over array indexes.</source>
          <target state="translated">배열 인덱스를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="a00575b51edcc734c1ece88e61079f9ea4dddc16" translate="yes" xml:space="preserve">
          <source>Iterates over each &lt;code&gt;key&lt;/code&gt; in the database.</source>
          <target state="translated">데이터베이스의 각 &lt;code&gt;key&lt;/code&gt; 를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="2bbb0004fa0f8966a219c88c18a7a8fb188098d8" translate="yes" xml:space="preserve">
          <source>Iterates over each &lt;code&gt;value&lt;/code&gt; in the database.</source>
          <target state="translated">데이터베이스의 각 &lt;code&gt;value&lt;/code&gt; 을 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="e3c527c30d1cb4a2de0e0ddbd10e84ee48a5c219" translate="yes" xml:space="preserve">
          <source>Iterates over each byte of each file in &lt;code&gt;ARGV&lt;/code&gt;. A byte is returned as an &lt;code&gt;Integer&lt;/code&gt; in the range 0..255.</source>
          <target state="translated">&lt;code&gt;ARGV&lt;/code&gt; 에서 각 파일의 각 바이트를 반복합니다 . 바이트는 0..255 범위 의 &lt;code&gt;Integer&lt;/code&gt; 로 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="3bf418c5f28b4db4039320a8ec5efa5369e7732c" translate="yes" xml:space="preserve">
          <source>Iterates over each character of each file in &lt;code&gt;ARGF&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ARGF&lt;/code&gt; 에서 각 파일의 각 문자를 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="828b4ba5aadaab4d2c5ac9d777680b7c5622fe34" translate="yes" xml:space="preserve">
          <source>Iterates over each codepoint of each file in &lt;code&gt;ARGF&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ARGF&lt;/code&gt; 에있는 각 파일의 각 코드 포인트를 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="b61b8ec33e01f97c7a961d00c4b4a710e44a7bb2" translate="yes" xml:space="preserve">
          <source>Iterates over each component of the path.</source>
          <target state="translated">경로의 각 구성 요소를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="fc3e3ecf886d68bd71ca206f6ae181b3619fbd48" translate="yes" xml:space="preserve">
          <source>Iterates over each key-value pair in the database.</source>
          <target state="translated">데이터베이스의 각 키-값 쌍을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="ac19ad411eb7b27130af6aacb1624f829ab0cdc3" translate="yes" xml:space="preserve">
          <source>Iterates over each line in the file and yields a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object for each.</source>
          <target state="translated">파일의 각 줄을 반복하고 각각에 대한 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 객체를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="fc874f78885e6b0ef6269eee5c008c6a388208bc" translate="yes" xml:space="preserve">
          <source>Iterates over each option, passing the option to the &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="translated">각 옵션을 반복하여 옵션을 &lt;code&gt;block&lt;/code&gt; 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="b4a64cfddedfaf57541d822c96eb67a51c8f499e" translate="yes" xml:space="preserve">
          <source>Iterates over keys and objects in a weakly referenced object</source>
          <target state="translated">약하게 참조 된 객체에서 키와 객체를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="90b7a9fd72d5d0f22b5888e1fab246ecbe799486" translate="yes" xml:space="preserve">
          <source>Iterates over strongly connected component in the subgraph reachable from &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;노드&lt;/em&gt; 에서 도달 할 수있는 하위 그래프에서 강력하게 연결된 구성 요소를 반복 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b3249fa9a8b6028fdba4b5357149ab121236f66c" translate="yes" xml:space="preserve">
          <source>Iterates over strongly connected components in a graph. The graph is represented by &lt;em&gt;node&lt;/em&gt; and &lt;em&gt;each_child&lt;/em&gt;.</source>
          <target state="translated">그래프에서 강력하게 연결된 구성 요소를 반복합니다. 그래프는 &lt;em&gt;node&lt;/em&gt; 및 &lt;em&gt;each_child로&lt;/em&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3c3b4fc42b1b4d20beaa6ec8579e5cc873c4f1c5" translate="yes" xml:space="preserve">
          <source>Iterates over the block according to how this &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; was constructed. If no block and no arguments are given, returns self.</source>
          <target state="translated">이 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 구성된 방식에 따라 블록을 반복합니다 . 블록이없고 인수가 제공되지 않으면 self를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5e4ddec5a6e8ca678fdca5081f69f9d34d24dbb1" translate="yes" xml:space="preserve">
          <source>Iterates over the children of the directory (files and subdirectories, not recursive).</source>
          <target state="translated">디렉토리의 하위 (재귀가 아닌 파일 및 서브 디렉토리)를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="a1c1ed82c8b5c32f182f625f0b79f48419f8fa3b" translate="yes" xml:space="preserve">
          <source>Iterates over the directory tree in a depth first manner, yielding a &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; for each file under &amp;ldquo;this&amp;rdquo; directory.</source>
          <target state="translated">깊이 우선적으로 디렉토리 트리를 반복하여 &quot;this&quot;디렉토리 아래의 각 파일에 대한 &lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="4e735aa0be30fdb74b42ee916480404e590b7bc4" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of range, passing each in turn to the block.</source>
          <target state="translated">범위의 요소를 반복하여 블록으로 차례로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="ebd1f70ea62cafab2d66828904362e2954b1c537" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of the first enumerable by calling the &amp;ldquo;each&amp;rdquo; method on it with the given arguments, then proceeds to the following enumerables in sequence until all of the enumerables are exhausted.</source>
          <target state="translated">주어진 인수와 함께 &quot;각&quot;메소드를 호출하여 첫 ​​번째 열거 가능한 요소를 반복 한 다음 모든 열거 가능한 요소가 모두 소모 될 때까지 다음 열거 가능한 항목으로 순서대로 진행합니다.</target>
        </trans-unit>
        <trans-unit id="b380e45bbf8bf9a62779c28fb7bf52c07c43d0e3" translate="yes" xml:space="preserve">
          <source>Iterates over the entries (files and subdirectories) in the directory, yielding a &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each entry.</source>
          <target state="translated">디렉토리의 항목 (파일 및 하위 디렉토리)을 반복하여 각 항목에 대한 &lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 객체를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="a8e402dae1ad8e2315e850ef25faa8be8c99e4e5" translate="yes" xml:space="preserve">
          <source>Iterates over the key-value pairs in the database, deleting those for which the block returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">데이터베이스에서 키-값 쌍을 반복하여 블록이 &lt;code&gt;true&lt;/code&gt; 를 리턴하는 쌍을 삭제 합니다 .</target>
        </trans-unit>
        <trans-unit id="2f4d3a81f2507027ee582d00cc84620fc5e58e44" translate="yes" xml:space="preserve">
          <source>Iterates over the range, passing each &lt;code&gt;n&lt;/code&gt;th element to the block. If begin and end are numeric, &lt;code&gt;n&lt;/code&gt; is added for each iteration. Otherwise &lt;a href=&quot;range#method-i-step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; invokes succ to iterate through range elements.</source>
          <target state="translated">범위를 반복하여 각 &lt;code&gt;n&lt;/code&gt; 번째 요소를 블록에 전달합니다 . 시작과 끝이 숫자이면 반복마다 &lt;code&gt;n&lt;/code&gt; 이 추가됩니다. 그렇지 않으면 &lt;a href=&quot;range#method-i-step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt; 는 succ을 호출하여 범위 요소를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="75ae73c5ec6f89236445e65747ce3cb482a4e16c" translate="yes" xml:space="preserve">
          <source>Iterates over the range, passing each &lt;code&gt;n&lt;/code&gt;th element to the block. If begin and end are numeric, &lt;code&gt;n&lt;/code&gt; is added for each iteration. Otherwise &lt;code&gt;step&lt;/code&gt; invokes &lt;code&gt;succ&lt;/code&gt; to iterate through range elements.</source>
          <target state="translated">범위를 반복하여 각 &lt;code&gt;n&lt;/code&gt; 번째 요소를 블록으로 전달합니다 . 시작과 끝이 숫자이면 반복마다 &lt;code&gt;n&lt;/code&gt; 이 추가됩니다. 그렇지 않으면 &lt;code&gt;step&lt;/code&gt; 는 &lt;code&gt;succ&lt;/code&gt; 를 호출 하여 범위 요소를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="897c3a31ef19909a496dc379ca3d8c689b069578" translate="yes" xml:space="preserve">
          <source>Iterates over values and objects in a weakly referenced object</source>
          <target state="translated">약하게 참조 된 객체의 값과 객체를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="609a18dd7831f506eabcac3603894d9081daa93a" translate="yes" xml:space="preserve">
          <source>Iterates the given block &lt;code&gt;int&lt;/code&gt; times, passing in values from zero to &lt;code&gt;int - 1&lt;/code&gt;.</source>
          <target state="translated">주어진 블록을 &lt;code&gt;int&lt;/code&gt; 시간 반복하여 0에서 &lt;code&gt;int - 1&lt;/code&gt; 값을 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="634ca888fbb31d1296e5ad712444aaf2785d8dc5" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each array of consecutive &amp;lt;n&amp;gt; elements. If no block is given, returns an enumerator.</source>
          <target state="translated">연속적인 &amp;lt;n&amp;gt; 요소의 각 배열에 대해 주어진 블록을 반복합니다. 블록을 지정하지 않으면 열거자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a76abf41d29f8e68f2af9ebda77f6604321eaa0" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each element with an arbitrary object given, and returns the initially given object.</source>
          <target state="translated">주어진 임의의 객체로 각 요소에 대해 주어진 블록을 반복하고 초기에 주어진 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a505078da90d63fed030b1929896ee95e832bd5" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each element with an arbitrary object, &lt;code&gt;obj&lt;/code&gt;, and returns &lt;code&gt;obj&lt;/code&gt;</source>
          <target state="translated">반복 해, 임의의 물체와 각 요소에 지정된 블록 &lt;code&gt;obj&lt;/code&gt; , 복귀 &lt;code&gt;obj&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfc1d76fef384c3ed5381cab98a85bc5a4a1479f" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each element with an index, which starts from &lt;code&gt;offset&lt;/code&gt;. If no block is given, returns a new &lt;a href=&quot;../enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; that includes the index, starting from &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 에서 시작하는 인덱스를 사용하여 각 요소에 대해 지정된 블록을 반복합니다 . 블록이 제공되지 않으면 &lt;code&gt;offset&lt;/code&gt; 에서 시작하여 인덱스를 포함 하는 새 &lt;a href=&quot;../enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="37ae915b23737704b643b3340000b3fc89638ef3" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each element with an index, which starts from &lt;code&gt;offset&lt;/code&gt;. If no block is given, returns a new &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; that includes the index, starting from &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 에서 시작하는 색인으로 각 요소에 대해 주어진 블록을 반복합니다 . 블록을 지정하지 않으면 &lt;code&gt;offset&lt;/code&gt; 에서 시작하여 인덱스가 포함 된 새 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a03a20e4c33abce1eb4babf4284dc83bd9eca48" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each prime number.</source>
          <target state="translated">각 소수에 대해 주어진 블록을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="5352433f4e5fc342c6f8a681e5160401f98c3d5a" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each slice of &amp;lt;n&amp;gt; elements. If no block is given, returns an enumerator.</source>
          <target state="translated">&amp;lt;n&amp;gt; 요소의 각 슬라이스에 대해 주어진 블록을 반복합니다. 블록을 지정하지 않으면 열거자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7af132b526444f32207208d08182bf68c5212af2" translate="yes" xml:space="preserve">
          <source>Iterates the given block over all prime numbers.</source>
          <target state="translated">모든 소수에 대해 주어진 블록을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="d03b8c6ff923081bdaa9fcc2be8d9b4b5256405b" translate="yes" xml:space="preserve">
          <source>Iterates the given block, passing in decreasing values from &lt;code&gt;int&lt;/code&gt; down to and including &lt;code&gt;limit&lt;/code&gt;.</source>
          <target state="translated">주어진 블록을 반복하여 &lt;code&gt;int&lt;/code&gt; 에서 &lt;code&gt;limit&lt;/code&gt; 을 포함하여 감소하는 값을 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="20484c31e0ac8506388fe73b6ef1ca39dabe05d9" translate="yes" xml:space="preserve">
          <source>Iterates the given block, passing in integer values from &lt;code&gt;int&lt;/code&gt; up to and including &lt;code&gt;limit&lt;/code&gt;.</source>
          <target state="translated">정수를 &lt;code&gt;int&lt;/code&gt; 에서 &lt;code&gt;limit&lt;/code&gt; 까지 포함 하여 주어진 블록을 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="8e22cda6ad26ed28c84bb73b23e3693d650eb53f" translate="yes" xml:space="preserve">
          <source>Iterates through header values, passing each value to the code block.</source>
          <target state="translated">헤더 값을 반복하여 각 값을 코드 블록에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="df0eb9323bdb3d9d1282ed6fbbfa91f6f24de329" translate="yes" xml:space="preserve">
          <source>Iterates through successive values, starting at &lt;em&gt;str&lt;/em&gt; and ending at &lt;em&gt;other_str&lt;/em&gt; inclusive, passing each value in turn to the block. The &lt;a href=&quot;string#method-i-succ&quot;&gt;&lt;code&gt;String#succ&lt;/code&gt;&lt;/a&gt; method is used to generate each value. If optional second argument exclusive is omitted or is false, the last value will be included; otherwise it will be excluded.</source>
          <target state="translated">&lt;em&gt;str&lt;/em&gt; 에서 시작하여 &lt;em&gt;other_str (&lt;/em&gt; 포함) 에서 끝나는 연속 값을 반복하여 각 값을 차례로 블록에 전달합니다. &lt;a href=&quot;string#method-i-succ&quot;&gt; &lt;code&gt;String#succ&lt;/code&gt; &lt;/a&gt; 방법은 각각의 값을 생성하기 위해 사용된다. 선택적인 두 번째 인수 exclusive가 생략되거나 false이면 마지막 값이 포함됩니다. 그렇지 않으면 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="48151c3792758f33c691916bcf0b1ac81b1cd553" translate="yes" xml:space="preserve">
          <source>Iterates through successive values, starting at &lt;em&gt;str&lt;/em&gt; and ending at &lt;em&gt;other_str&lt;/em&gt; inclusive, passing each value in turn to the block. The &lt;code&gt;String#succ&lt;/code&gt; method is used to generate each value. If optional second argument exclusive is omitted or is false, the last value will be included; otherwise it will be excluded.</source>
          <target state="translated">&lt;em&gt;str&lt;/em&gt; 에서 시작하여 &lt;em&gt;other_str&lt;/em&gt; 에서 끝나는 연속적인 값을 반복하여 각 값을 차례로 블록으로 전달합니다. &lt;code&gt;String#succ&lt;/code&gt; 방법은 각각의 값을 생성하기 위해 사용된다. 선택적인 두 번째 인수 독점이 생략되거나 거짓이면 마지막 값이 포함됩니다. 그렇지 않으면 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="a3f54bfcae0d41e68a7419c206d8452377716b2f" translate="yes" xml:space="preserve">
          <source>Iterates through the header names and values, passing in the name and value to the code block supplied.</source>
          <target state="translated">이름과 값을 제공된 코드 블록에 전달하여 헤더 이름과 값을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="1c082d930906bc2dc025ba936e28032b73a19dd4" translate="yes" xml:space="preserve">
          <source>Iterates through the header names in the header, passing capitalized header names to the code block.</source>
          <target state="translated">헤더의 헤더 이름을 반복하여 대문자로 된 헤더 이름을 코드 블록에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c90dce7354e0b17a855548eadf88fee058e24a5a" translate="yes" xml:space="preserve">
          <source>Iterates through the header names in the header, passing each header name to the code block.</source>
          <target state="translated">헤더의 헤더 이름을 반복하여 각 헤더 이름을 코드 블록에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="2feb0ff8da7b48f9fdca2f51dc925fd9ca709e36" translate="yes" xml:space="preserve">
          <source>Iterating over Arrays</source>
          <target state="translated">배열에 대한 반복</target>
        </trans-unit>
        <trans-unit id="faabd55daf65b35bcfb3855c5ba57b738911c06a" translate="yes" xml:space="preserve">
          <source>Iteration is defined by the given block, in which a &amp;ldquo;yielder&amp;rdquo; object, given as block parameter, can be used to yield a value by calling the &lt;code&gt;yield&lt;/code&gt; method (aliased as &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;):</source>
          <target state="translated">반복은 주어진 블록에 의해 정의되며, 여기서 블록 매개 변수로 주어진&amp;ldquo;yielder&amp;rdquo;객체는 &lt;code&gt;yield&lt;/code&gt; 메서드 를 호출하여 값을 산출하는 데 사용할 수 있습니다 ( &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 으로 별칭 지정 ) :</target>
        </trans-unit>
        <trans-unit id="191f652bc027d741f8873e98ed44c9f2705ad3e8" translate="yes" xml:space="preserve">
          <source>Iterative methods such as &lt;code&gt;each&lt;/code&gt;, &lt;code&gt;each_key&lt;/code&gt;, &lt;code&gt;each_pair&lt;/code&gt;, &lt;code&gt;each_value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; , &lt;code&gt;each_key&lt;/code&gt; , &lt;code&gt;each_pair&lt;/code&gt; , &lt;code&gt;each_value&lt;/code&gt; 와 같은 반복 메서드 .</target>
        </trans-unit>
        <trans-unit id="45b525396cfe8478584b3ad641b9430fa191eef6" translate="yes" xml:space="preserve">
          <source>Iterator version of `get'.</source>
          <target state="translated">`get '의 반복자 버전.</target>
        </trans-unit>
        <trans-unit id="2b5430b376d9da68c1425b920c837fed2a887dd6" translate="yes" xml:space="preserve">
          <source>Its own internally defined instance methods.</source>
          <target state="translated">내부적으로 정의 된 자체 인스턴스 메서드.</target>
        </trans-unit>
        <trans-unit id="a89310085aac4301bfb9eff13f5b56b803647b49" translate="yes" xml:space="preserve">
          <source>Its type (the exception's class).</source>
          <target state="translated">유형 (예외 클래스).</target>
        </trans-unit>
        <trans-unit id="6ed5cdd6c41283b272cc74d21893535428631d1a" translate="yes" xml:space="preserve">
          <source>J, J! j, and j! are available since Ruby 2.3.</source>
          <target state="translated">J, J! j와 j! Ruby 2.3부터 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="fc0afc000e62a60863323ccfcd97a7c8b7ba2cfb" translate="yes" xml:space="preserve">
          <source>JSON Additions</source>
          <target state="translated">JSON 추가</target>
        </trans-unit>
        <trans-unit id="7f111e48e3d44ea97b083bfb9efa065248c3404c" translate="yes" xml:space="preserve">
          <source>JSON is a lightweight data-interchange format.</source>
          <target state="translated">JSON은 가벼운 데이터 교환 형식입니다.</target>
        </trans-unit>
        <trans-unit id="0c04336fa4d32b645ad648b0e8bb7e5889ceb405" translate="yes" xml:space="preserve">
          <source>JSON#dump</source>
          <target state="translated">JSON#dump</target>
        </trans-unit>
        <trans-unit id="1d6401a01fdd185ab53551992ebcd5b2ba9ff7e2" translate="yes" xml:space="preserve">
          <source>JSON#load</source>
          <target state="translated">JSON#load</target>
        </trans-unit>
        <trans-unit id="8283ad0edbce1ff28597d178ab8c849d5affaeb7" translate="yes" xml:space="preserve">
          <source>JSON(object, *args)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">JSON (object, * args) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5941c04742f4994d26310bcc08ada5e3d2bb5abf" translate="yes" xml:space="preserve">
          <source>JSON.generate stores more information in the JSON string.</source>
          <target state="translated">JSON.generate는 JSON 문자열에 더 많은 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a899f4357ea4c24db84cb6e64a29ec3c4c653cde" translate="yes" xml:space="preserve">
          <source>JSON.parse, called with option &lt;code&gt;create_additions&lt;/code&gt;, uses that information to create a proper Ruby object.</source>
          <target state="translated">&lt;code&gt;create_additions&lt;/code&gt; 옵션으로 호출되는 JSON.parse 는 해당 정보를 사용하여 적절한 Ruby 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bf028e81420895b837c904c86c9061befcf52733" translate="yes" xml:space="preserve">
          <source>JSON::GeneratorError</source>
          <target state="translated">JSON::GeneratorError</target>
        </trans-unit>
        <trans-unit id="21890abbf0eaf8dc281f33cbb26571c9ea42a583" translate="yes" xml:space="preserve">
          <source>JSON::GenericObject</source>
          <target state="translated">JSON::GenericObject</target>
        </trans-unit>
        <trans-unit id="4d7de3edd4cb4fe27edec5c81707a98d17de9ec0" translate="yes" xml:space="preserve">
          <source>JSON::JSONError</source>
          <target state="translated">JSON::JSONError</target>
        </trans-unit>
        <trans-unit id="29c4af857973079e89f9b6685c9a6854f11c0718" translate="yes" xml:space="preserve">
          <source>JSON::MissingUnicodeSupport</source>
          <target state="translated">JSON::MissingUnicodeSupport</target>
        </trans-unit>
        <trans-unit id="e1dbb391c1c84d926a7d93ba63fc7e7c920e684e" translate="yes" xml:space="preserve">
          <source>JSON::NestingError</source>
          <target state="translated">JSON::NestingError</target>
        </trans-unit>
        <trans-unit id="4286a02953de5006fc47adb87cec05ce5c520977" translate="yes" xml:space="preserve">
          <source>JSON::ParserError</source>
          <target state="translated">JSON::ParserError</target>
        </trans-unit>
        <trans-unit id="5297658a0d35dcbb846355ab196445a907c2233d" translate="yes" xml:space="preserve">
          <source>JSON::UnparserError</source>
          <target state="translated">JSON::UnparserError</target>
        </trans-unit>
        <trans-unit id="0a6994a2cf9d04fab073b8b91e1bce7f53b080fd" translate="yes" xml:space="preserve">
          <source>JSON::[]</source>
          <target state="translated">JSON::[]</target>
        </trans-unit>
        <trans-unit id="982e4c22907564231ac6daa6130857f19fac83a4" translate="yes" xml:space="preserve">
          <source>JSON::iconv</source>
          <target state="translated">JSON::iconv</target>
        </trans-unit>
        <trans-unit id="80505fe989a34acf9bc51e5b7c9c629bf666d552" translate="yes" xml:space="preserve">
          <source>JSON::state</source>
          <target state="translated">JSON::state</target>
        </trans-unit>
        <trans-unit id="c1dfcb5bc12f1ba72e57a7fc05f88fccd95f6790" translate="yes" xml:space="preserve">
          <source>JSONError</source>
          <target state="translated">JSONError</target>
        </trans-unit>
        <trans-unit id="a5ecdc5042c932011399bd810ff08c40f2a19f92" translate="yes" xml:space="preserve">
          <source>JSONError::wrap</source>
          <target state="translated">JSONError::wrap</target>
        </trans-unit>
        <trans-unit id="eb348df01d5a2fbf20a9991929a9a7e6ab07897e" translate="yes" xml:space="preserve">
          <source>JSON[object] &amp;rarr; new_array or new_string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">JSON [object] &amp;rarr; new_array 또는 new_string &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d1d625cafd55d9c56c9b18393608b0743d62fb8" translate="yes" xml:space="preserve">
          <source>JSON_LOADED</source>
          <target state="translated">JSON_LOADED</target>
        </trans-unit>
        <trans-unit id="705e15e414d11f7a087d987df49ad5bede2a087e" translate="yes" xml:space="preserve">
          <source>JULIAN</source>
          <target state="translated">JULIAN</target>
        </trans-unit>
        <trans-unit id="44d9ab80f02c9ef3726b26c3ccb97d35aad0a281" translate="yes" xml:space="preserve">
          <source>Jacobian</source>
          <target state="translated">Jacobian</target>
        </trans-unit>
        <trans-unit id="61f9569a4114d96bbcc222a70ff9ecdc8ab55ca8" translate="yes" xml:space="preserve">
          <source>Jacobian#dfdxi</source>
          <target state="translated">Jacobian#dfdxi</target>
        </trans-unit>
        <trans-unit id="7f985995074c52a92f9e3c1d32ae06a10b17aa7c" translate="yes" xml:space="preserve">
          <source>Jacobian#isEqual</source>
          <target state="translated">Jacobian#isEqual</target>
        </trans-unit>
        <trans-unit id="d4f148e52a128c77704e6684edaf697efa663140" translate="yes" xml:space="preserve">
          <source>Jacobian#jacobian</source>
          <target state="translated">Jacobian#jacobian</target>
        </trans-unit>
        <trans-unit id="2d67477ab387a37f11d4bfabb4434831b09276d2" translate="yes" xml:space="preserve">
          <source>JavaScript &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; Notation (&lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 표기법 ( &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f925b0648763d361abe1eb61e13a9dad7cabb150" translate="yes" xml:space="preserve">
          <source>JavaScript &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; Notation (JSON)</source>
          <target state="translated">JSON ( JavaScript &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; Notation)</target>
        </trans-unit>
        <trans-unit id="242a471ade4ab763b0169a0bbe184864b3622ace" translate="yes" xml:space="preserve">
          <source>JavaScript Object Notation (JSON)</source>
          <target state="translated">JSON (JavaScript Object Notation)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
