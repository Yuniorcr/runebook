<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="2a170de52ee8c2d48d59dba1d54bf61a40c1bd10" translate="yes" xml:space="preserve">
          <source>Tempfile::new</source>
          <target state="translated">Tempfile::new</target>
        </trans-unit>
        <trans-unit id="f86216909661e083adacf7aaec1b38706ba92132" translate="yes" xml:space="preserve">
          <source>Tempfile::open</source>
          <target state="translated">Tempfile::open</target>
        </trans-unit>
        <trans-unit id="8a399486c68308e067b0337111c6e366b166ad3d" translate="yes" xml:space="preserve">
          <source>Templates are used to match tuples in &lt;a href=&quot;../rinda&quot;&gt;&lt;code&gt;Rinda&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rinda&quot;&gt; &lt;code&gt;Rinda&lt;/code&gt; 의&lt;/a&gt; 튜플을 일치시키는 데 템플릿이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="403588ac969f393040f0e770ebfeecee5b0201ef" translate="yes" xml:space="preserve">
          <source>Temporary failure in name resolution</source>
          <target state="translated">이름 확인시 일시적인 실패</target>
        </trans-unit>
        <trans-unit id="9dc6a4c49f505c321c3043717b2fe87fb2d0928f" translate="yes" xml:space="preserve">
          <source>TemporaryRedirect</source>
          <target state="translated">TemporaryRedirect</target>
        </trans-unit>
        <trans-unit id="cc66c5d4b794ee13ca84badcd74ce1acc533f9a8" translate="yes" xml:space="preserve">
          <source>TemporaryResourceError</source>
          <target state="translated">TemporaryResourceError</target>
        </trans-unit>
        <trans-unit id="b6b55f8bf7018263b76ba966078ab7ad34ad0385" translate="yes" xml:space="preserve">
          <source>TemporaryResourceError#message</source>
          <target state="translated">TemporaryResourceError#message</target>
        </trans-unit>
        <trans-unit id="801896360e20cacdd8f231d3171abd6f353f9323" translate="yes" xml:space="preserve">
          <source>Terminate execution immediately, effectively by calling &lt;code&gt;Kernel.exit(false)&lt;/code&gt;. If &lt;em&gt;msg&lt;/em&gt; is given, it is written to STDERR prior to terminating.</source>
          <target state="translated">&lt;code&gt;Kernel.exit(false)&lt;/code&gt; 호출하여 실행을 즉시 종료하십시오 . 경우 &lt;em&gt;MSG가&lt;/em&gt; 주어집니다, 그것은 종료하기 전에 STDERR에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="a450e283542fd1d3137ac54ccc23b2ae76a3c626" translate="yes" xml:space="preserve">
          <source>Terminates &lt;code&gt;thr&lt;/code&gt; and schedules another thread to be run, returning the terminated &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;. If this is the main thread, or the last thread, exits the process.</source>
          <target state="translated">&lt;code&gt;thr&lt;/code&gt; 를 종료 하고 다른 스레드가 실행되도록 예약하고 종료 된 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; 를&lt;/a&gt; 반환합니다 . 이것이 주 스레드 또는 마지막 스레드 인 경우 프로세스를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="005e7315fceca19c37ab8a8f673cd9e0ad99e9c1" translate="yes" xml:space="preserve">
          <source>Terminates &lt;code&gt;thr&lt;/code&gt; and schedules another thread to be run.</source>
          <target state="translated">&lt;code&gt;thr&lt;/code&gt; 를 종료 하고 다른 스레드가 실행되도록 예약합니다.</target>
        </trans-unit>
        <trans-unit id="da0ff06e0cef57c0ec636a42dd8f74e193f7d67d" translate="yes" xml:space="preserve">
          <source>Terminates option parsing. Optional parameter &lt;code&gt;arg&lt;/code&gt; is a string pushed back to be the first non-option argument.</source>
          <target state="translated">옵션 파싱을 종료합니다. 선택적 매개 변수 &lt;code&gt;arg&lt;/code&gt; 는 옵션이 아닌 첫 번째 인수로 푸시 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="6fba454142f15aa197f254bfeb610dd000ef1517" translate="yes" xml:space="preserve">
          <source>Terminates the currently running thread and schedules another thread to be run.</source>
          <target state="translated">현재 실행중인 스레드를 종료하고 다른 스레드가 실행되도록 예약합니다.</target>
        </trans-unit>
        <trans-unit id="c60bb0cab7d8c4e670956adb71a22c9dbbf0ca67" translate="yes" xml:space="preserve">
          <source>Terms and Definitions</source>
          <target state="translated">용어 및 정의</target>
        </trans-unit>
        <trans-unit id="45e71ddbe9ae8014eeae20db1088630e66811aab" translate="yes" xml:space="preserve">
          <source>Ternary if</source>
          <target state="translated">삼항 경우</target>
        </trans-unit>
        <trans-unit id="6c927e6384220d83a5c86651c6ec2612b6df3a7f" translate="yes" xml:space="preserve">
          <source>Test#blockdev?</source>
          <target state="translated">Test#blockdev?</target>
        </trans-unit>
        <trans-unit id="b09869a4ce4f0bff9f06a9e507f86a362898de75" translate="yes" xml:space="preserve">
          <source>Test#chardev?</source>
          <target state="translated">Test#chardev?</target>
        </trans-unit>
        <trans-unit id="84e6cdb1bea055e00cbdbc2056e680438682a277" translate="yes" xml:space="preserve">
          <source>Test#directory?</source>
          <target state="translated">Test#directory?</target>
        </trans-unit>
        <trans-unit id="b6c3aa380432d6aacabc6de7f29a44b255c1d0bf" translate="yes" xml:space="preserve">
          <source>Test#empty?</source>
          <target state="translated">Test#empty?</target>
        </trans-unit>
        <trans-unit id="e2276916fea110a80b2c9feb1df9cca59bd3caab" translate="yes" xml:space="preserve">
          <source>Test#executable?</source>
          <target state="translated">Test#executable?</target>
        </trans-unit>
        <trans-unit id="80a1785602e98503fd12177489365313a90745e3" translate="yes" xml:space="preserve">
          <source>Test#executable_real?</source>
          <target state="translated">Test#executable_real?</target>
        </trans-unit>
        <trans-unit id="3de8b421b03210d81ea418a66d92a6eb6688a622" translate="yes" xml:space="preserve">
          <source>Test#exist?</source>
          <target state="translated">Test#exist?</target>
        </trans-unit>
        <trans-unit id="c7ede8f597af4eaba24d68eee7916f520895525e" translate="yes" xml:space="preserve">
          <source>Test#exists?</source>
          <target state="translated">Test#exists?</target>
        </trans-unit>
        <trans-unit id="632979d38f698488275220a08e7c99118ec0aa66" translate="yes" xml:space="preserve">
          <source>Test#file?</source>
          <target state="translated">Test#file?</target>
        </trans-unit>
        <trans-unit id="2d61ba40a0b3f42a290d9dfb89e1587144e6c747" translate="yes" xml:space="preserve">
          <source>Test#grpowned?</source>
          <target state="translated">Test#grpowned?</target>
        </trans-unit>
        <trans-unit id="d1176270f963a9902a6c871079ed27a85d47412c" translate="yes" xml:space="preserve">
          <source>Test#identical?</source>
          <target state="translated">Test#identical?</target>
        </trans-unit>
        <trans-unit id="9cb49378f20abfd7450853642fb38746c487d02a" translate="yes" xml:space="preserve">
          <source>Test#owned?</source>
          <target state="translated">Test#owned?</target>
        </trans-unit>
        <trans-unit id="3cc095db766f6157f07b675a0f79311f2e2a7d67" translate="yes" xml:space="preserve">
          <source>Test#pipe?</source>
          <target state="translated">Test#pipe?</target>
        </trans-unit>
        <trans-unit id="fe0c505588212d5136751d1a86d94c24a99b80cc" translate="yes" xml:space="preserve">
          <source>Test#readable?</source>
          <target state="translated">Test#readable?</target>
        </trans-unit>
        <trans-unit id="6bb8302ddedeffcb3d8691e774f9381d90d245b1" translate="yes" xml:space="preserve">
          <source>Test#readable_real?</source>
          <target state="translated">Test#readable_real?</target>
        </trans-unit>
        <trans-unit id="594806ccfe83a2ffb48944510d35129fc9cf42e3" translate="yes" xml:space="preserve">
          <source>Test#setgid?</source>
          <target state="translated">Test#setgid?</target>
        </trans-unit>
        <trans-unit id="5cd201f78d33bc7470a05efb414353314b9d71e4" translate="yes" xml:space="preserve">
          <source>Test#setuid?</source>
          <target state="translated">Test#setuid?</target>
        </trans-unit>
        <trans-unit id="d8b7f447877fd994cd9fdf4794dba347d45f47fb" translate="yes" xml:space="preserve">
          <source>Test#size</source>
          <target state="translated">Test#size</target>
        </trans-unit>
        <trans-unit id="584133ec0173add8a3d88e86a7c1beb023741673" translate="yes" xml:space="preserve">
          <source>Test#size?</source>
          <target state="translated">Test#size?</target>
        </trans-unit>
        <trans-unit id="4d83e8281c562aeebe5ec53fa94e2185a2822c30" translate="yes" xml:space="preserve">
          <source>Test#socket?</source>
          <target state="translated">Test#socket?</target>
        </trans-unit>
        <trans-unit id="406c2dc3b187c2f9f0d07e723998578244d44475" translate="yes" xml:space="preserve">
          <source>Test#sticky?</source>
          <target state="translated">Test#sticky?</target>
        </trans-unit>
        <trans-unit id="34675af7f7e3e23e2abdce298cc504eef7a7faad" translate="yes" xml:space="preserve">
          <source>Test#symlink?</source>
          <target state="translated">Test#symlink?</target>
        </trans-unit>
        <trans-unit id="993ac7c9b1b65e9cdb0b6336e94fdc5fea94fc81" translate="yes" xml:space="preserve">
          <source>Test#world_readable?</source>
          <target state="translated">Test#world_readable?</target>
        </trans-unit>
        <trans-unit id="200ddd2152a8f3238b2483615a3e5380c4efe4c3" translate="yes" xml:space="preserve">
          <source>Test#world_writable?</source>
          <target state="translated">Test#world_writable?</target>
        </trans-unit>
        <trans-unit id="4124c233de0e93ed169da572155997f5d0c40dd8" translate="yes" xml:space="preserve">
          <source>Test#writable?</source>
          <target state="translated">Test#writable?</target>
        </trans-unit>
        <trans-unit id="f5605034d58712f9b738abda747a8766a3b7176a" translate="yes" xml:space="preserve">
          <source>Test#writable_real?</source>
          <target state="translated">Test#writable_real?</target>
        </trans-unit>
        <trans-unit id="08aae82f2fed2058fafd4dcd248b2b53719920bb" translate="yes" xml:space="preserve">
          <source>Test#zero?</source>
          <target state="translated">Test#zero?</target>
        </trans-unit>
        <trans-unit id="1ff91dc18bb79dce97b9ad14f801a95f1ec923f5" translate="yes" xml:space="preserve">
          <source>Tests bit &lt;em&gt;bit&lt;/em&gt; in &lt;em&gt;bn&lt;/em&gt; and returns &lt;code&gt;true&lt;/code&gt; if set, &lt;code&gt;false&lt;/code&gt; if not set.</source>
          <target state="translated">비트 &lt;em&gt;비트&lt;/em&gt; 를 10 &lt;em&gt;억 단위로&lt;/em&gt; 테스트 하고 설정하면 &lt;code&gt;true&lt;/code&gt; 를 , 설정 하지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="5b80a86c4d389143df43efc688e8f949c13be9b6" translate="yes" xml:space="preserve">
          <source>Tests for value equality; returns true if the values are equal.</source>
          <target state="translated">가치 평등을 테스트합니다. 값이 같으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ab8c23fc77adec8a63c8d85c060d40584767e0df" translate="yes" xml:space="preserve">
          <source>Tests that take two files:</source>
          <target state="translated">두 개의 파일을받는 테스트 :</target>
        </trans-unit>
        <trans-unit id="7a9fdad5d6a87d420d7d1a368332f2f9ce29b562" translate="yes" xml:space="preserve">
          <source>Tests the file is empty.</source>
          <target state="translated">파일이 비어 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="1e7ab07abd320e3c3c073cd538ffabe368ac7072" translate="yes" xml:space="preserve">
          <source>Tests whether the given &lt;code&gt;pattern&lt;/code&gt; is matched from the current scan pointer. Advances the scan pointer if &lt;code&gt;advance_pointer_p&lt;/code&gt; is true. Returns the matched string if &lt;code&gt;return_string_p&lt;/code&gt; is true. The match register is affected.</source>
          <target state="translated">주어진 &lt;code&gt;pattern&lt;/code&gt; 이 현재 스캔 포인터와 일치 하는지 테스트합니다 . &lt;code&gt;advance_pointer_p&lt;/code&gt; 가 true 인 경우 스캔 포인터를 전진시킵니다 . &lt;code&gt;return_string_p&lt;/code&gt; 가 true 인 경우 일치하는 문자열을 반환 합니다. 일치 레지스터가 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="d4214410eefac2ea78f76c5d5079278a8c193ab9" translate="yes" xml:space="preserve">
          <source>Tests whether the given &lt;code&gt;pattern&lt;/code&gt; is matched from the current scan pointer. Returns the length of the match, or &lt;code&gt;nil&lt;/code&gt;. The scan pointer is not advanced.</source>
          <target state="translated">주어진 &lt;code&gt;pattern&lt;/code&gt; 이 현재 스캔 포인터와 일치 하는지 테스트합니다 . 일치하는 길이 또는 &lt;code&gt;nil&lt;/code&gt; 을 리턴합니다 . 스캔 포인터가 진행되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="6052854c1b1deeff562a9d49f66d495969668e7b" translate="yes" xml:space="preserve">
          <source>Textual time zones listed in ZoneOffset are also supported.</source>
          <target state="translated">ZoneOffset에 나열된 텍스트 시간대도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c42931673d152af05026091b875184b6fff10c32" translate="yes" xml:space="preserve">
          <source>ThWait</source>
          <target state="translated">ThWait</target>
        </trans-unit>
        <trans-unit id="d509235c10d6f144701b73fe422cd2d1cf4526a6" translate="yes" xml:space="preserve">
          <source>ThWait#all_waits</source>
          <target state="translated">ThWait#all_waits</target>
        </trans-unit>
        <trans-unit id="59a6085f27c683f2e58c5dfc7fce9dd2776ef309" translate="yes" xml:space="preserve">
          <source>ThWait#empty?</source>
          <target state="translated">ThWait#empty?</target>
        </trans-unit>
        <trans-unit id="1e7cddac6d95ecf940de3184259f14c0a81f159c" translate="yes" xml:space="preserve">
          <source>ThWait#finished?</source>
          <target state="translated">ThWait#finished?</target>
        </trans-unit>
        <trans-unit id="d0b91b78278c73c10292e7b3616ff8c665b9a998" translate="yes" xml:space="preserve">
          <source>ThWait#join</source>
          <target state="translated">ThWait#join</target>
        </trans-unit>
        <trans-unit id="01b27d0ce349d6b5a07f3f3fdc5e937a9e4b348c" translate="yes" xml:space="preserve">
          <source>ThWait#join_nowait</source>
          <target state="translated">ThWait#join_nowait</target>
        </trans-unit>
        <trans-unit id="43eae61f56e46dde1d4a40b1b62f7a0a63b61414" translate="yes" xml:space="preserve">
          <source>ThWait#next_wait</source>
          <target state="translated">ThWait#next_wait</target>
        </trans-unit>
        <trans-unit id="61f5c60b8287a37a028e17996aa9a4693443d0e0" translate="yes" xml:space="preserve">
          <source>ThWait#threads</source>
          <target state="translated">ThWait#threads</target>
        </trans-unit>
        <trans-unit id="cce36a4c05ac6b0fa99d53c463ca5520d81fe832" translate="yes" xml:space="preserve">
          <source>ThWait::all_waits</source>
          <target state="translated">ThWait::all_waits</target>
        </trans-unit>
        <trans-unit id="808f84d03d8c603a6b143601f313a5e8801f8776" translate="yes" xml:space="preserve">
          <source>ThWait::new</source>
          <target state="translated">ThWait::new</target>
        </trans-unit>
        <trans-unit id="7e82d9efe889d0b3edd1155a3e748b2230f52635" translate="yes" xml:space="preserve">
          <source>Thanks to Gavin Sinclair for some feedback on the documentation.</source>
          <target state="translated">설명서에 대한 의견을 보내 주신 Gavin Sinclair에게 감사드립니다.</target>
        </trans-unit>
        <trans-unit id="bf731ee22ba3a970988a7da61f188c0de1357480" translate="yes" xml:space="preserve">
          <source>Thanks to Hal Fulton for hosting the Codefest.</source>
          <target state="translated">Codefest를 호스팅 해 주신 Hal Fulton에게 감사합니다.</target>
        </trans-unit>
        <trans-unit id="e40d6550682fbc91cb1d1d9aec513c197f430b8c" translate="yes" xml:space="preserve">
          <source>Thanks to Matz for suggestions about the class design.</source>
          <target state="translated">클래스 디자인에 대한 제안을 해준 Matz에게 감사드립니다.</target>
        </trans-unit>
        <trans-unit id="6e2313aa517074a3bba6ec061778a6f2667712e2" translate="yes" xml:space="preserve">
          <source>That is, a string consisting of the hyphenated concatenation of the individual components name, key length and mode. Either all uppercase or all lowercase strings may be used, for example:</source>
          <target state="translated">즉, 개별 구성 요소 이름, 키 길이 및 모드의 하이픈으로 연결된 문자열입니다. 예를 들어, 모든 대문자 또는 소문자 문자열을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ec2187002debb91b9206088c944642fada9a5a7" translate="yes" xml:space="preserve">
          <source>That is, for every element that is an array, extract its elements into the new array.</source>
          <target state="translated">즉, 배열 인 모든 요소에 대해 해당 요소를 새 배열로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="f2949bba5f2b284d9253f207f3efd093f2184a3c" translate="yes" xml:space="preserve">
          <source>The #&amp;lt;=&amp;gt; is used by various methods to compare objects, for example &lt;a href=&quot;enumerable#method-i-sort&quot;&gt;&lt;code&gt;Enumerable#sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enumerable#method-i-max&quot;&gt;&lt;code&gt;Enumerable#max&lt;/code&gt;&lt;/a&gt; etc.</source>
          <target state="translated"># &lt;a href=&quot;enumerable#method-i-sort&quot;&gt; &lt;code&gt;Enumerable#sort&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enumerable#method-i-max&quot;&gt; &lt;code&gt;Enumerable#max&lt;/code&gt; &lt;/a&gt; 등과 같이 객체를 비교하기 위해 다양한 방법에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6338c38d4c5b9fcc3349be92563edcd5d55f864a" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;file&amp;rdquo; &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; is defined by RFC8089.</source>
          <target state="translated">&quot;파일&quot; &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 는 RFC8089에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="1b543a4b857ff3e16b80146a9433d00ee136a0a1" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;file&amp;rdquo; &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is defined by RFC8089.</source>
          <target state="translated">&quot;파일&quot; &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 는 RFC8089에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="053a5ebffb2f856dea7f4d83dda893ac8a3b4c3c" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;sync mode&amp;rdquo; of the SSLSocket.</source>
          <target state="translated">SSLSocket의 &quot;동기화 모드&quot;</target>
        </trans-unit>
        <trans-unit id="a962553aedc62e2a10b25e654e61419d4ff4aa8c" translate="yes" xml:space="preserve">
          <source>The '*' wildcard matches filenames starting with &amp;ldquo;.&amp;rdquo; in &lt;a href=&quot;../../file#method-c-fnmatch&quot;&gt;&lt;code&gt;File.fnmatch&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../dir#method-c-glob&quot;&gt;&lt;code&gt;Dir.glob&lt;/code&gt;&lt;/a&gt; patterns</source>
          <target state="translated">'*'와일드 카드는&amp;ldquo;.&amp;rdquo;로 시작하는 파일 이름과 일치합니다. 에서 &lt;a href=&quot;../../file#method-c-fnmatch&quot;&gt; &lt;code&gt;File.fnmatch&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../dir#method-c-glob&quot;&gt; &lt;code&gt;Dir.glob&lt;/code&gt; &lt;/a&gt; 패턴</target>
        </trans-unit>
        <trans-unit id="b1b4afe680b8018be3899965bbcbda45e8799cdd" translate="yes" xml:space="preserve">
          <source>The (arithmetic) mean value of an array can be obtained as follows.</source>
          <target state="translated">배열의 (산술) 평균값은 다음과 같이 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1340dddadf890a7abaf36b280ca4033204bb253" translate="yes" xml:space="preserve">
          <source>The 29 optional &lt;em&gt;a&lt;/em&gt;s match the string, but this prevents the 29 mandatory &lt;em&gt;a&lt;/em&gt;s that follow from matching. Ruby must then backtrack repeatedly so as to satisfy as many of the optional matches as it can while still matching the mandatory 29. It is plain to us that none of the optional matches can succeed, but this fact unfortunately eludes Ruby.</source>
          <target state="translated">29 개의 선택적 &lt;em&gt;a&lt;/em&gt; 는 문자열과 일치하지만 29 개의 필수 &lt;em&gt;a&lt;/em&gt; 는 일치하지 않습니다. 그런 다음 Ruby는 필수 29와 일치하면서 가능한 한 많은 선택적 일치를 만족시키기 위해 반복적으로 역 추적해야합니다. 선택적 일치 중 어느 것도 성공할 수 없다는 것은 명백하지만,이 사실은 불행히도 Ruby를 피합니다.</target>
        </trans-unit>
        <trans-unit id="3a1a080e73493eae1f72af8700eb574702e398d9" translate="yes" xml:space="preserve">
          <source>The 3rd element of the result is the address family of the first address. The address families of the rest of the addresses are not returned.</source>
          <target state="translated">결과의 세 번째 요소는 첫 번째 주소의 주소 패밀리입니다. 나머지 주소의 주소 패밀리는 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9fd4d2d83a142e711b185d8fe594f6f71c62c59f" translate="yes" xml:space="preserve">
          <source>The :in, :out, :err, an integer, an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; and an array key specifies a redirection. The redirection maps a file descriptor in the child process.</source>
          <target state="translated">: in, : out, : err, 정수, &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 및 배열 키는 리디렉션을 지정합니다. 리디렉션은 자식 프로세스에서 파일 설명자를 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="97354614eff34297d335ecabdca51d3476f52010" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../ipv4&quot;&gt;&lt;code&gt;Resolv::IPv4&lt;/code&gt;&lt;/a&gt; address for this &lt;a href=&quot;a&quot;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;a&quot;&gt; &lt;code&gt;A&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../../../ipv4&quot;&gt; &lt;code&gt;Resolv::IPv4&lt;/code&gt; &lt;/a&gt; 주소입니다 .</target>
        </trans-unit>
        <trans-unit id="e925e2b1e76f213d831035467799ec72bc84fa66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../ipv6&quot;&gt;&lt;code&gt;Resolv::IPv6&lt;/code&gt;&lt;/a&gt; address for this &lt;a href=&quot;aaaa&quot;&gt;&lt;code&gt;AAAA&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;aaaa&quot;&gt; &lt;code&gt;AAAA&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../../../ipv6&quot;&gt; &lt;code&gt;Resolv::IPv6&lt;/code&gt; &lt;/a&gt; 주소입니다 .</target>
        </trans-unit>
        <trans-unit id="94da22690b01f01c4ed79496a22c78f68f2130b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../../regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../../regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5921226a1316be70b121e02664254ca53775b3b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of patterns.</source>
          <target state="translated">패턴 의 &lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b2263fa71eee25565c2f2b868b617c35d486df4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../buffering&quot;&gt;&lt;code&gt;OpenSSL::Buffering&lt;/code&gt;&lt;/a&gt; module provides additional &lt;a href=&quot;../../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../buffering&quot;&gt; &lt;code&gt;OpenSSL::Buffering&lt;/code&gt; &lt;/a&gt; 모듈을 추가로 제공 &lt;a href=&quot;../../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 의&lt;/a&gt; 방법을.</target>
        </trans-unit>
        <trans-unit id="9f6a5c15bfdb65ebb06ce76925e2f8c64ab97cf7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; TCP protocol &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; looks like: &lt;code&gt;druby://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;?&amp;lt;option&amp;gt;&lt;/code&gt;. The option is optional.</source>
          <target state="translated">&lt;a href=&quot;../drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt; TCP 프로토콜 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 는&lt;/a&gt; :처럼 보이는 &lt;code&gt;druby://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;?&amp;lt;option&amp;gt;&lt;/code&gt; . 이 옵션은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="4ce81d73275e5c8da1eea8ab71134302be012158" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../drbsslsocket&quot;&gt;&lt;code&gt;DRb::DRbSSLSocket&lt;/code&gt;&lt;/a&gt; will take either a &lt;code&gt;config&lt;/code&gt;&lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; or an instance of &lt;a href=&quot;sslconfig&quot;&gt;&lt;code&gt;SSLConfig&lt;/code&gt;&lt;/a&gt;, and will setup the certificate for its session for the configuration. If want it to generate a generic certificate, the bare minimum is to provide the :SSLCertName</source>
          <target state="translated">&lt;a href=&quot;../drbsslsocket&quot;&gt; &lt;code&gt;DRb::DRbSSLSocket&lt;/code&gt; &lt;/a&gt; 중 하나를 취할 것입니다 &lt;code&gt;config&lt;/code&gt; &lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 또는 인스턴스 &lt;a href=&quot;sslconfig&quot;&gt; &lt;code&gt;SSLConfig&lt;/code&gt; &lt;/a&gt; , 의지 설정 구성에 대한 세션에 대한 인증서를. 일반 인증서를 생성하려면 최소한 : SSLCertName을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="3af580666ab29bfa18897743e3e26fecdc253d7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; profiler provides access to information on &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; runs including time, length and object space size.</source>
          <target state="translated">&lt;a href=&quot;../gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; 의&lt;/a&gt; 프로파일 러에 대한 정보에 대한 액세스 제공 &lt;a href=&quot;../gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; 의&lt;/a&gt; 시간, 길이, 오브젝트 공간의 크기를 포함하여 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="67fc0fd5d9c8ac7f0be0e90575cd8abf88993b52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="446365cda52252f4d8f545b4bc079f8205573570" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of patterns.</source>
          <target state="translated">패턴 의 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57e1744a6570829108296f4f0175ba36683cb424" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; module extended to &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;../observable&quot;&gt; &lt;code&gt;Observable&lt;/code&gt; &lt;/a&gt; 모듈로 확장 &lt;a href=&quot;../drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt; . 자세한 내용은 &lt;a href=&quot;../observable&quot;&gt; &lt;code&gt;Observable&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3c169ccb1684214ee28aa0e4c5ca2ac09f575ac7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; and ref of the object are marshalled.</source>
          <target state="translated">객체 의 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 와 참조는 마샬링됩니다.</target>
        </trans-unit>
        <trans-unit id="d6725a4fcbc0a3bb149ca5bcf0acbbda302d2979" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for a &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; socket over SSL is: &lt;code&gt;drbssl://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;?&amp;lt;option&amp;gt;&lt;/code&gt;. The option is optional</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; A에 대한 &lt;a href=&quot;../drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt; SSL을 통해 소켓은 다음과 같습니다 &lt;code&gt;drbssl://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;?&amp;lt;option&amp;gt;&lt;/code&gt; . 옵션은 선택 사항입니다</target>
        </trans-unit>
        <trans-unit id="b798984cb64e9b88b891764d1baeb763a059dd74" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; of this DRbServer.</source>
          <target state="translated">이 DRbServer 의 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d2f969f4b67f04f9d2f0b02ddd84e9451c444644" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; used to fetch this response. The response &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is only available if a &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; was used to create the request.</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 는&lt;/a&gt; 이 응답을 가져 오는 데 사용됩니다. 응답 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 는&lt;/a&gt; 경우에만 사용할 수 있습니다 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 가&lt;/a&gt; 요청을 만드는 데 사용되었다.</target>
        </trans-unit>
        <trans-unit id="efaa557bad33e3105ada739404093c678cd96118" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; class maps &lt;code&gt;struct addrinfo&lt;/code&gt; to ruby. This structure identifies an Internet host and a service.</source>
          <target state="translated">&lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 클래스는 매핑 &lt;code&gt;struct addrinfo&lt;/code&gt; 루비에. 이 구조는 인터넷 호스트와 서비스를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="080a7c2a40d1b0c75e422b7e187ca42e6d5792ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;env#method-c-shift&quot;&gt;&lt;code&gt;ENV.shift&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 에 의해 반환 &lt;a href=&quot;env#method-c-shift&quot;&gt; &lt;code&gt;ENV.shift&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6d91c555a9f7e048bfcedba9ac1754065f0e09f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;array#method-i-map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method can be used to create a new array based on the original array, but with the values modified by the supplied block:</source>
          <target state="translated">&lt;a href=&quot;array#method-i-map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 방법이 있지만, 지정된 블록에 의해 수정 된 값으로, 원의 배열에 기초하여 새로운 배열을 만드는 데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="6cc1848f4a66dca093ede33116a9a2eda8dfcc42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;array#method-i-slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; method works in an identical manner to &lt;a href=&quot;array#method-i-5B-5D&quot;&gt;&lt;code&gt;Array#[]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-slice&quot;&gt; &lt;code&gt;slice&lt;/code&gt; &lt;/a&gt; 에 동일한 방식으로 작동 방법 &lt;a href=&quot;array#method-i-5B-5D&quot;&gt; &lt;code&gt;Array#[]&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="749e7c26b5a0eb17995a986da9cd785d531e3191" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; module provides for the encoding (#encode64, &lt;a href=&quot;base64#method-i-strict_encode64&quot;&gt;&lt;code&gt;strict_encode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-urlsafe_encode64&quot;&gt;&lt;code&gt;urlsafe_encode64&lt;/code&gt;&lt;/a&gt;) and decoding (#decode64, &lt;a href=&quot;base64#method-i-strict_decode64&quot;&gt;&lt;code&gt;strict_decode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-urlsafe_decode64&quot;&gt;&lt;code&gt;urlsafe_decode64&lt;/code&gt;&lt;/a&gt;) of binary data using a &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; representation.</source>
          <target state="translated">&lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; 로&lt;/a&gt; 모듈은 부호화 (#의 encode64, 제공 &lt;a href=&quot;base64#method-i-strict_encode64&quot;&gt; &lt;code&gt;strict_encode64&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;base64#method-i-urlsafe_encode64&quot;&gt; &lt;code&gt;urlsafe_encode64&lt;/code&gt; &lt;/a&gt; ) 및 (# decode64 디코딩 &lt;a href=&quot;base64#method-i-strict_decode64&quot;&gt; &lt;code&gt;strict_decode64&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;base64#method-i-urlsafe_decode64&quot;&gt; &lt;code&gt;urlsafe_decode64&lt;/code&gt; &lt;/a&gt; 사용하여 A 이진 데이터) &lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; 표현.</target>
        </trans-unit>
        <trans-unit id="bb2c7c855532a8683bda3e47a020ecd83e2f4e75" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; module provides for the encoding (&lt;a href=&quot;base64#method-i-encode64&quot;&gt;&lt;code&gt;encode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-strict_encode64&quot;&gt;&lt;code&gt;strict_encode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-urlsafe_encode64&quot;&gt;&lt;code&gt;urlsafe_encode64&lt;/code&gt;&lt;/a&gt;) and decoding (&lt;a href=&quot;base64#method-i-decode64&quot;&gt;&lt;code&gt;decode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-strict_decode64&quot;&gt;&lt;code&gt;strict_decode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-urlsafe_decode64&quot;&gt;&lt;code&gt;urlsafe_decode64&lt;/code&gt;&lt;/a&gt;) of binary data using a &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; representation.</source>
          <target state="translated">&lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; 로&lt;/a&gt; 모듈은 부호화 (제공 &lt;a href=&quot;base64#method-i-encode64&quot;&gt; &lt;code&gt;encode64&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;base64#method-i-strict_encode64&quot;&gt; &lt;code&gt;strict_encode64&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;base64#method-i-urlsafe_encode64&quot;&gt; &lt;code&gt;urlsafe_encode64&lt;/code&gt; &lt;/a&gt; ) 및 디코딩 ( &lt;a href=&quot;base64#method-i-decode64&quot;&gt; &lt;code&gt;decode64&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;base64#method-i-strict_decode64&quot;&gt; &lt;code&gt;strict_decode64&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;base64#method-i-urlsafe_decode64&quot;&gt; &lt;code&gt;urlsafe_decode64&lt;/code&gt; &lt;/a&gt; 사용하여 A 이진 데이터) &lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; 표현.</target>
        </trans-unit>
        <trans-unit id="4e4b35abb9b99f7dbb0ee014af9ab29fce01b7f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;benchmark&quot;&gt;&lt;code&gt;Benchmark&lt;/code&gt;&lt;/a&gt; module provides methods to measure and report the time used to execute Ruby code.</source>
          <target state="translated">&lt;a href=&quot;benchmark&quot;&gt; &lt;code&gt;Benchmark&lt;/code&gt; &lt;/a&gt; 모듈은 측정 루비 코드를 실행하기 위해 사용 된 시간을보고하는 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="e732861c056ef7dab85b958b86cdb64645a52d0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;bigdecimal#method-c-double_fig&quot;&gt;&lt;code&gt;BigDecimal.double_fig&lt;/code&gt;&lt;/a&gt; class method returns the number of digits a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; number is allowed to have. The result depends upon the CPU and OS in use.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#method-c-double_fig&quot;&gt; &lt;code&gt;BigDecimal.double_fig&lt;/code&gt; 의&lt;/a&gt; 클래스 메소드는 자리의 수를 반환 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 번호를 가질 수 있습니다. 결과는 사용중인 CPU 및 OS에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8c651ec6ceecb784d75e92f20be995b9be3a3f50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;binding&quot;&gt;&lt;code&gt;Binding&lt;/code&gt;&lt;/a&gt; of the top level scope</source>
          <target state="translated">최상위 범위 의 &lt;a href=&quot;binding&quot;&gt; &lt;code&gt;Binding&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ca600d65f5806033fe4d59cd2580543ce0515b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;binding&quot;&gt;&lt;code&gt;Binding&lt;/code&gt;&lt;/a&gt; of the top level scope.</source>
          <target state="translated">최상위 범위 의 &lt;a href=&quot;binding&quot;&gt; &lt;code&gt;Binding&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d6c5c63ee0b5f07a20956e448426b377536263cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; class dynamically mixes in parameter and cookie-parsing functionality, environmental variable access, and support for parsing multipart requests (including uploaded files) from the &lt;a href=&quot;cgi/queryextension&quot;&gt;&lt;code&gt;CGI::QueryExtension&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; 의&lt;/a&gt; 로부터 (업로드 된 파일 포함) 다중 요청 구문 분석에 대한 매개 변수 및 쿠키 구문 분석 기능, 환경 변수 액세스 및 지원 수준의 동적 믹스 &lt;a href=&quot;cgi/queryextension&quot;&gt; &lt;code&gt;CGI::QueryExtension&lt;/code&gt; &lt;/a&gt; 모듈을.</target>
        </trans-unit>
        <trans-unit id="4bd1013f2c39a185f2856c2c4855f7d4b0b55e39" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; class provides methods for sending header and content output to the HTTP client, and mixes in methods for programmatic HTML generation from &lt;a href=&quot;cgi/htmlextension&quot;&gt;&lt;code&gt;CGI::HtmlExtension&lt;/code&gt;&lt;/a&gt; and CGI::TagMaker modules. The precise version of HTML to use for HTML generation is specified at object creation time.</source>
          <target state="translated">&lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; 의&lt;/a&gt; 클래스에서 프로그램 HTML 생성을위한 방법의 HTTP 클라이언트에 헤더 및 콘텐츠 출력을 전송하는 방법 및 믹스를 제공하는 &lt;a href=&quot;cgi/htmlextension&quot;&gt; &lt;code&gt;CGI::HtmlExtension&lt;/code&gt; &lt;/a&gt; 및 CGI :: TagMaker 모듈을. HTML 생성에 사용할 정확한 HTML 버전은 객체 생성시 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="1f61fb7eade43979d1f7db4577eb7a1635e143bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; mixin is used by classes whose objects may be ordered. The class must define the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator, which compares the receiver against another object, returning a value less than 0, returning 0, or returning a value greater than 0, depending on whether the receiver is less than, equal to, or greater than the other object. If the other object is not comparable then the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator should return &lt;code&gt;nil&lt;/code&gt;. &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; uses &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; to implement the conventional comparison operators (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt;) and the method &lt;code&gt;between?&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 믹스 인은 그 개체 정렬 될 수 클래스가 사용된다. 클래스는 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 연산자 를 정의해야합니다.이 연산자는 수신자가 다른 객체와 비교하여 수신자가 작은 지, 같은지 또는 큰지에 따라 0보다 작은 값을 반환하거나 0을 반환하거나 0보다 큰 값을 반환합니다. 다른 개체보다. 다른 객체가 비교할 수없는 경우 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 연산자는 &lt;code&gt;nil&lt;/code&gt; 을 반환해야합니다 . &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 를 사용 하여 기존 비교 연산자 ( &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; )와 그 &lt;code&gt;between?&lt;/code&gt; 의 방법 을 구현합니다. .</target>
        </trans-unit>
        <trans-unit id="ff5a4e141bee8c4a26644013bb704f9cb5a8d846" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;compositehandler&quot;&gt;&lt;code&gt;Fiddle::CompositeHandler&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="translated">&lt;a href=&quot;compositehandler&quot;&gt; &lt;code&gt;Fiddle::CompositeHandler&lt;/code&gt; &lt;/a&gt; 예</target>
        </trans-unit>
        <trans-unit id="8f124f013207a2467820f515417a75290116266f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dbm&quot;&gt;&lt;code&gt;DBM&lt;/code&gt;&lt;/a&gt; class provides a wrapper to a Unix-style &lt;a href=&quot;http://en.wikipedia.org/wiki/Dbm&quot;&gt;dbm&lt;/a&gt; or Database Manager library.</source>
          <target state="translated">&lt;a href=&quot;dbm&quot;&gt; &lt;code&gt;DBM&lt;/code&gt; 의&lt;/a&gt; 클래스는 유닉스 스타일에 래퍼 제공 &lt;a href=&quot;http://en.wikipedia.org/wiki/Dbm&quot;&gt;DBM&lt;/a&gt; 또는 데이터베이스 관리자 라이브러리를.</target>
        </trans-unit>
        <trans-unit id="39522388dac1ae3051ca1b7015e4ea0d4f5457dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module asks each registered protocol in turn to try to open a server at the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. Each protocol signals that it does not handle that &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; by raising a &lt;a href=&quot;drbbadscheme&quot;&gt;&lt;code&gt;DRbBadScheme&lt;/code&gt;&lt;/a&gt; error. If no protocol recognises the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, then a &lt;a href=&quot;drbbaduri&quot;&gt;&lt;code&gt;DRbBadURI&lt;/code&gt;&lt;/a&gt; error is raised. If a protocol accepts the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, but an error occurs in opening it, the underlying error is passed on to the caller.</source>
          <target state="translated">&lt;a href=&quot;drbprotocol&quot;&gt; &lt;code&gt;DRbProtocol&lt;/code&gt; 의&lt;/a&gt; 모듈은 상기 서버 열려고 차례로 각각의 등록 된 프로토콜을 요청 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; . 각 프로토콜 은 &lt;a href=&quot;drbbadscheme&quot;&gt; &lt;code&gt;DRbBadScheme&lt;/code&gt; &lt;/a&gt; 오류 를 발생시켜 해당 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 처리하지 않는다는 신호를 보냅니다 . 어떤 프로토콜이 인식되지 않으면 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; , 다음 &lt;a href=&quot;drbbaduri&quot;&gt; &lt;code&gt;DRbBadURI&lt;/code&gt; 의&lt;/a&gt; 오류가 발생합니다. 프로토콜이 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; 수락 했지만이를 여는 중에 오류가 발생하면 기본 오류가 호출자에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="399478b98108edf0c356451f4d62c5d4d9efb595" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module asks each registered protocol in turn to try to open the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. Each protocol signals that it does not handle that &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; by raising a &lt;a href=&quot;drbbadscheme&quot;&gt;&lt;code&gt;DRbBadScheme&lt;/code&gt;&lt;/a&gt; error. If no protocol recognises the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, then a &lt;a href=&quot;drbbaduri&quot;&gt;&lt;code&gt;DRbBadURI&lt;/code&gt;&lt;/a&gt; error is raised. If a protocol accepts the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, but an error occurs in opening it, a &lt;a href=&quot;drbconnerror&quot;&gt;&lt;code&gt;DRbConnError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;drbprotocol&quot;&gt; &lt;code&gt;DRbProtocol&lt;/code&gt; 의&lt;/a&gt; 모듈은 열려고 차례로 각각의 등록 된 프로토콜을 요청 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; . 각 프로토콜 은 &lt;a href=&quot;drbbadscheme&quot;&gt; &lt;code&gt;DRbBadScheme&lt;/code&gt; &lt;/a&gt; 오류 를 발생시켜 해당 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 처리하지 않는다는 신호를 보냅니다 . 어떤 프로토콜이 인식되지 않으면 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; , 다음 &lt;a href=&quot;drbbaduri&quot;&gt; &lt;code&gt;DRbBadURI&lt;/code&gt; 의&lt;/a&gt; 오류가 발생합니다. 프로토콜이 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; 승인 했지만이를 여는 중에 오류가 발생하면 &lt;a href=&quot;drbconnerror&quot;&gt; &lt;code&gt;DRbConnError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4579f7887e9d804ace4fcb7a977e221dd9021421" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module asks each registered protocol in turn to try to parse the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. Each protocol signals that it does not handle that &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; by raising a &lt;a href=&quot;drbbadscheme&quot;&gt;&lt;code&gt;DRbBadScheme&lt;/code&gt;&lt;/a&gt; error. If no protocol recognises the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, then a &lt;a href=&quot;drbbaduri&quot;&gt;&lt;code&gt;DRbBadURI&lt;/code&gt;&lt;/a&gt; error is raised.</source>
          <target state="translated">&lt;a href=&quot;drbprotocol&quot;&gt; &lt;code&gt;DRbProtocol&lt;/code&gt; 의&lt;/a&gt; 모듈은 구문 분석하려고 차례로 각각의 등록 된 프로토콜을 요청 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; . 각 프로토콜 은 &lt;a href=&quot;drbbadscheme&quot;&gt; &lt;code&gt;DRbBadScheme&lt;/code&gt; &lt;/a&gt; 오류 를 발생시켜 해당 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 처리하지 않는다는 신호를 보냅니다 . 어떤 프로토콜이 인식되지 않으면 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 를&lt;/a&gt; , 다음 &lt;a href=&quot;drbbaduri&quot;&gt; &lt;code&gt;DRbBadURI&lt;/code&gt; 의&lt;/a&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c3c391859b93ca96e479613fdc8974ee71b5988f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; is parsing or writing in. This will be the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; you receive parsed data in and/or the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; data will be written in.</source>
          <target state="translated">&lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; 는&lt;/a&gt; 구문 분석이나 쓰고있다. 이것은있을 것이다 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 당신이 구문 분석 된 데이터를 수신 및 / 또는 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 데이터가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="3cb65dd92adf1aa587171ad531d4afa7be2a009a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; mixin provides collection classes with several traversal and searching methods, and with the ability to sort. The class must provide a method each, which yields successive members of the collection. If &lt;a href=&quot;enumerable#method-i-max&quot;&gt;&lt;code&gt;Enumerable#max&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enumerable#method-i-min&quot;&gt;&lt;code&gt;min&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;enumerable#method-i-sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt; is used, the objects in the collection must also implement a meaningful &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator, as these methods rely on an ordering between members of the collection.</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; 에서&lt;/a&gt; 믹스 인은 여러 가지 탐색 및 검색 방법과 컬렉션 클래스를 제공하고, 정렬 할 수있는 기능. 클래스는 컬렉션의 연속 멤버를 생성하는 메서드를 각각 제공해야합니다. 경우 &lt;a href=&quot;enumerable#method-i-max&quot;&gt; &lt;code&gt;Enumerable#max&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enumerable#method-i-min&quot;&gt; &lt;code&gt;min&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;enumerable#method-i-sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt; 사용되는 컬렉션의 개체는 의미 구현해야 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 이러한 방법 컬렉션의 구성원 사이의 순서에 의존으로, 연산자를.</target>
        </trans-unit>
        <trans-unit id="922a8cf2cbb68e86cbc431f4648cfab6e7e8f887" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; object interacts with the operating system's environment variables:</source>
          <target state="translated">&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; 의&lt;/a&gt; 운영 체제의 환경 변수와 객체의 상호 작용 :</target>
        </trans-unit>
        <trans-unit id="4682815181d6995ff10c41cb278c16456be9b382" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;etc&quot;&gt;&lt;code&gt;Etc&lt;/code&gt;&lt;/a&gt; module provides a more reliable way to access information about the logged in user than environment variables such as +$USER+.</source>
          <target state="translated">&lt;a href=&quot;etc&quot;&gt; &lt;code&gt;Etc&lt;/code&gt; &lt;/a&gt; 모듈은 + $ 사용자 +로 환경 변수와 로그인 한 사용자에 대한 액세스 정보를보다 신뢰할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="855228121ba4cb2745937399cb950bc8a89d65ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;etc&quot;&gt;&lt;code&gt;Etc&lt;/code&gt;&lt;/a&gt; module provides access to information typically stored in files in the /etc directory on Unix systems.</source>
          <target state="translated">&lt;a href=&quot;etc&quot;&gt; &lt;code&gt;Etc&lt;/code&gt; &lt;/a&gt; 모듈은 정보에 대한 접근은 일반적으로 유닉스 시스템의 / etc 디렉토리에있는 파일에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="7e4eb9fd83f46ec151a80d186b832f6729491b6b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; object set by &lt;a href=&quot;kernel#method-i-raise&quot;&gt;&lt;code&gt;Kernel#raise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 로 객체 세트 &lt;a href=&quot;kernel#method-i-raise&quot;&gt; &lt;code&gt;Kernel#raise&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8af60f5bdbd020c8de5d62406c2b945314eefb0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fiber#method-i-resume&quot;&gt;&lt;code&gt;Fiber#resume&lt;/code&gt;&lt;/a&gt; method accepts an arbitrary number of parameters, if it is the first call to &lt;a href=&quot;fiber#method-i-resume&quot;&gt;&lt;code&gt;resume&lt;/code&gt;&lt;/a&gt; then they will be passed as block arguments. Otherwise they will be the return value of the call to &lt;a href=&quot;fiber#method-c-yield&quot;&gt;&lt;code&gt;Fiber.yield&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;fiber#method-i-resume&quot;&gt; &lt;code&gt;Fiber#resume&lt;/code&gt; &lt;/a&gt; 가 처음 호출 인 경우에있어서, 파라미터의 임의의 수를 받아 &lt;a href=&quot;fiber#method-i-resume&quot;&gt; &lt;code&gt;resume&lt;/code&gt; &lt;/a&gt; 들은 블록 인수로서 전달 될 다음이. 그렇지 않으면 &lt;a href=&quot;fiber#method-c-yield&quot;&gt; &lt;code&gt;Fiber.yield&lt;/code&gt; &lt;/a&gt; 호출의 반환 값이됩니다 .</target>
        </trans-unit>
        <trans-unit id="47336ebe9a9c5e6f45c7a46a17aab98d8bbf06b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; module provides an interface to Ruby's mark and sweep garbage collection mechanism.</source>
          <target state="translated">&lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; 의&lt;/a&gt; 모듈 루비 마크 스윕 가비지 수집 장치에 대한 인터페이스를 제공한다.</target>
        </trans-unit>
        <trans-unit id="aeb8fe3d262965f903a7ab122cb83d2732c77e3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;getoptlong&quot;&gt;&lt;code&gt;GetoptLong&lt;/code&gt;&lt;/a&gt; class allows you to parse command line options similarly to the GNU getopt_long() C library call. Note, however, that &lt;a href=&quot;getoptlong&quot;&gt;&lt;code&gt;GetoptLong&lt;/code&gt;&lt;/a&gt; is a pure Ruby implementation.</source>
          <target state="translated">&lt;a href=&quot;getoptlong&quot;&gt; &lt;code&gt;GetoptLong&lt;/code&gt; 의&lt;/a&gt; 클래스를 사용하면 GNU getopt_long는 () C 라이브러리 호출과 유사하게 명령 줄 옵션을 구문 분석 할 수 있습니다. 그러나 &lt;a href=&quot;getoptlong&quot;&gt; &lt;code&gt;GetoptLong&lt;/code&gt; &lt;/a&gt; 은 순수한 Ruby 구현입니다.</target>
        </trans-unit>
        <trans-unit id="bea9e52e9332e4661fae5cad8f5812c0c68f10da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gid&quot;&gt;&lt;code&gt;Process::GID&lt;/code&gt;&lt;/a&gt; module contains a collection of module functions which can be used to portably get, set, and switch the current process's real, effective, and saved group IDs.</source>
          <target state="translated">&lt;a href=&quot;gid&quot;&gt; &lt;code&gt;Process::GID&lt;/code&gt; &lt;/a&gt; 모듈을 이식, 세트를 가져 오는 데 사용하고, 현재 프로세스의 실제 효과 및 저장 그룹 ID를 전환 할 수있는 모듈 기능의 컬렉션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6469ec77d9d30edde86235fd2b709328d9b03861" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gitproxy&quot;&gt;&lt;code&gt;GitProxy&lt;/code&gt;&lt;/a&gt; is responsible to interact with git repositories. All actions required by the &lt;a href=&quot;../git&quot;&gt;&lt;code&gt;Git&lt;/code&gt;&lt;/a&gt; source is encapsulated in this object.</source>
          <target state="translated">&lt;a href=&quot;gitproxy&quot;&gt; &lt;code&gt;GitProxy&lt;/code&gt; 는&lt;/a&gt; 자식 저장소와 상호 작용 할 책임이있다. &lt;a href=&quot;../git&quot;&gt; &lt;code&gt;Git&lt;/code&gt; &lt;/a&gt; 소스에 필요한 모든 작업 이이 개체에 캡슐화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec89578c3a0593e352b7ec9dd0a8da9c71194f6e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gw&quot;&gt;&lt;code&gt;GW&lt;/code&gt;&lt;/a&gt; provides a synchronized store for participants in the gateway to communicate.</source>
          <target state="translated">&lt;a href=&quot;gw&quot;&gt; &lt;code&gt;GW&lt;/code&gt; 는&lt;/a&gt; 통신 할 수있는 게이트웨이에서 참가자 동기화 된 저장소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b060152f8fff9b73fd658cf63d24089dec412596" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gzipfile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; object will be closed automatically after executing the block. If you want to keep the associated &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object open, you may call &lt;a href=&quot;gzipfile#method-i-finish&quot;&gt;&lt;code&gt;Zlib::GzipFile#finish&lt;/code&gt;&lt;/a&gt; method in the block.</source>
          <target state="translated">&lt;a href=&quot;gzipfile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt; 목적은 블록을 실행 한 후에 자동으로 종료한다. 관련 &lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 개체를 열어 두려면 블록에서 &lt;a href=&quot;gzipfile#method-i-finish&quot;&gt; &lt;code&gt;Zlib::GzipFile#finish&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하면됩니다.</target>
        </trans-unit>
        <trans-unit id="3d33b6c43674f1db5046f4f573cd2e59ba65587a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;handle&quot;&gt;&lt;code&gt;Fiddle::Handle&lt;/code&gt;&lt;/a&gt; is the manner to access the dynamic library</source>
          <target state="translated">&lt;a href=&quot;handle&quot;&gt; &lt;code&gt;Fiddle::Handle&lt;/code&gt; &lt;/a&gt; 동적 라이브러리에 액세스 할 수있는 방법입니다</target>
        </trans-unit>
        <trans-unit id="2b38c951d0ef931ca1de3d24a76ff7da7f467c9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; methods in the following section do not persist connections. They are not recommended if you are performing many &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="translated">다음 섹션 의 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 메서드는 연결을 유지하지 않습니다. 많은 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 요청을 수행하는 경우 권장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6380277840abb740805abebdadc660e59c0fede7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpheader&quot;&gt;&lt;code&gt;HTTPHeader&lt;/code&gt;&lt;/a&gt; module defines methods for reading and writing &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; headers.</source>
          <target state="translated">&lt;a href=&quot;httpheader&quot;&gt; &lt;code&gt;HTTPHeader&lt;/code&gt; &lt;/a&gt; 읽기와 쓰기에 대한 모듈을 정의하는 방법 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 헤더를.</target>
        </trans-unit>
        <trans-unit id="a9925e5f9f90c5a63d27f55ac65a4e44e1d2f6de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;instructionsequence&quot;&gt;&lt;code&gt;InstructionSequence&lt;/code&gt;&lt;/a&gt; class represents a compiled sequence of instructions for the Ruby Virtual Machine.</source>
          <target state="translated">&lt;a href=&quot;instructionsequence&quot;&gt; &lt;code&gt;InstructionSequence&lt;/code&gt; 의&lt;/a&gt; 클래스는 루비 가상 머신에 대한 지침의 컴파일 순서를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5f54b6da035cc228de804e1868c98218763a071f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;instructionsequence&quot;&gt;&lt;code&gt;InstructionSequence&lt;/code&gt;&lt;/a&gt; class represents a compiled sequence of instructions for the Virtual Machine used in MRI. Not all implementations of Ruby may implement this class, and for the implementations that implement it, the methods defined and behavior of the methods can change in any version.</source>
          <target state="translated">&lt;a href=&quot;instructionsequence&quot;&gt; &lt;code&gt;InstructionSequence&lt;/code&gt; 의&lt;/a&gt; 클래스는 MRI에 사용되는 가상 머신에 대한 지침의 컴파일 순서를 나타냅니다. Ruby의 모든 구현이이 클래스를 구현할 수있는 것은 아니며이를 구현하는 구현의 경우 정의 된 메서드와 메서드의 동작이 모든 버전에서 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15fb14aab124610f86d80fbacb0302ca6037b22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; are both closed after the block completes if they haven't been already closed.</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 그들이 이미 폐쇄되지 않은 경우 모두 블록이 완료되면 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="7759aefe954c120ec6732b858cb949e068a9409a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; class is the basis for all input and output in Ruby. An I/O stream may be &lt;em&gt;duplexed&lt;/em&gt; (that is, bidirectional), and so may use more than one native operating system stream.</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 의&lt;/a&gt; 클래스 루비 모든 입력 및 출력을위한 기초이다. I / O 스트림은 &lt;em&gt;이중화&lt;/em&gt; (즉, 양방향) 될 수 있으므로 둘 이상의 기본 운영 체제 스트림을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b7b737823e081a6c6439c1fd3d51f42716ebbe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; may be opened with different file modes (read-only, write-only) and encodings for proper conversion. See &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt; for these options. See &lt;a href=&quot;kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt; for details of the various command formats described above.</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 는&lt;/a&gt; 다른 파일 모드 적절한 변환 (읽기 전용, 쓰기 전용) 및 인코딩을 열 수 있습니다. 이러한 옵션에 대해서는 &lt;a href=&quot;io#method-c-new&quot;&gt; &lt;code&gt;IO.new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 . 위에서 설명한 다양한 명령 형식에 대한 자세한 내용은 &lt;a href=&quot;kernel#method-i-open&quot;&gt; &lt;code&gt;Kernel#open&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1e8bc176b53b1ac2316d2dbad8fb2dd9fb645ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; stream is closed.</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 스트림이 닫혀 있습니다.</target>
        </trans-unit>
        <trans-unit id="38669a32c7cd5497ab2757d84026f960926f71b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ipaddr&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; class defines many methods and operators, and some of those, such as &amp;amp;, |, include? and ==, accept a string, or a packed &lt;a href=&quot;ipaddr#method-i-in_addr&quot;&gt;&lt;code&gt;in_addr&lt;/code&gt;&lt;/a&gt; value instead of an &lt;a href=&quot;ipaddr&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;ipaddr&quot;&gt; &lt;code&gt;IPAddr&lt;/code&gt; &lt;/a&gt; 클래스는 &amp;amp; 많은 방법과 운영, 그 중 몇 가지를 정의, |, 포함되어 있습니까? and ==, &lt;a href=&quot;ipaddr&quot;&gt; &lt;code&gt;IPAddr&lt;/code&gt; &lt;/a&gt; 객체 대신 문자열 또는 압축 된 &lt;a href=&quot;ipaddr#method-i-in_addr&quot;&gt; &lt;code&gt;in_addr&lt;/code&gt; &lt;/a&gt; 값을 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="fe251663899de22328a6fd2c35e3bb0a2f97c84e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; instance methods are documented in class &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; while the module methods are documented here. These methods are called without a receiver and thus can be called in functional form:</source>
          <target state="translated">&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 인스턴스 메소드는 클래스에 설명되어 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 모듈 방법이 여기에 설명되어있다. 이러한 메소드는 수신자없이 호출되므로 기능적인 형태로 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46272ca190b4abf6bf612e9a801e3c61a56cac05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module is included by class &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, so its methods are available in every Ruby object.</source>
          <target state="translated">&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 모듈은 클래스가 포함되어있는 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 의 메서드는 모든 루비 객체에서 사용할 수 있도록.</target>
        </trans-unit>
        <trans-unit id="15356fcb2564f13f8a6df451697683b453824aa7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt; method can create an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;) object for these types of arguments:</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-open&quot;&gt; &lt;code&gt;Kernel#open&lt;/code&gt; &lt;/a&gt; 만들 수 있습니다 방법 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 인수 이러한 유형의) 객체를 :</target>
        </trans-unit>
        <trans-unit id="84b90c4a5c29ea11dcfe60afb1581e023badcc6c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; class provides a simple but sophisticated logging utility that you can use to output messages.</source>
          <target state="translated">&lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; 클래스는 출력 메시지에 사용할 수있는 간단하지만 정교한 로깅 유틸리티를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2559121c2d9f56123a3e595a71946787d5474604" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logger#attribute-i-progname&quot;&gt;&lt;code&gt;progname&lt;/code&gt;&lt;/a&gt; configured, or passed to the logger method.</source>
          <target state="translated">&lt;a href=&quot;logger#attribute-i-progname&quot;&gt; &lt;code&gt;progname&lt;/code&gt; 는&lt;/a&gt; 구성 또는 로거 메소드로 전달.</target>
        </trans-unit>
        <trans-unit id="cba752e750f528590900fa65ad2abaf886fc60c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logger/severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt; of the log message.</source>
          <target state="translated">로그 메시지 의 &lt;a href=&quot;logger/severity&quot;&gt; &lt;code&gt;Severity&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9d323567938ad24df049840c75aa451b2ecfbf8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; format is used to serialize ruby objects. The format can store arbitrary objects through three user-defined extension mechanisms.</source>
          <target state="translated">&lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt; 형식은 직렬화 루비 객체에 사용됩니다. 형식은 세 가지 사용자 정의 확장 메커니즘을 통해 임의의 개체를 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43c3492e4bdf1d1d5a03e5559602c7f85ac56404" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; module contains module functions for basic trigonometric and transcendental functions. See class &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; for a list of constants that define Ruby's floating point accuracy.</source>
          <target state="translated">&lt;a href=&quot;math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; 모듈은 기본 삼각 함수와 초월 함수 모듈 기능이 포함되어 있습니다. Ruby의 부동 소수점 정확도를 정의하는 상수 목록은 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 클래스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="45f6ce0c32b0be54ef1bc376d2ae90d2fd031e10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; with the call method that is a completion for filename. This is sets by &lt;a href=&quot;readline#method-c-completion_proc-3D&quot;&gt;&lt;code&gt;Readline.completion_proc=&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 파일 이름에 완료되는 호출 방법. 이것은 &lt;a href=&quot;readline#method-c-completion_proc-3D&quot;&gt; &lt;code&gt;Readline.completion_proc=&lt;/code&gt; &lt;/a&gt; 메소드에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="395af9f936b3d627c1b07d3ecd1227a757f24392" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; with the call method that is a completion for usernames. This is sets by &lt;a href=&quot;readline#method-c-completion_proc-3D&quot;&gt;&lt;code&gt;Readline.completion_proc=&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 사용자 이름에 대한 완료되는 호출 방법. 이것은 &lt;a href=&quot;readline#method-c-completion_proc-3D&quot;&gt; &lt;code&gt;Readline.completion_proc=&lt;/code&gt; &lt;/a&gt; 메소드로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="db23a8974803ca9d5640e3dee5a0de04e5967c42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;object#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; refer to the same hash key. This is used by &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; to test members for equality. For any pair of objects where &lt;a href=&quot;object#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;, the &lt;a href=&quot;object#method-i-hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; value of both objects must be equal. So any subclass that overrides &lt;a href=&quot;object#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; should also override &lt;a href=&quot;object#method-i-hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; appropriately.</source>
          <target state="translated">&lt;a href=&quot;object#method-i-eql-3F&quot;&gt; &lt;code&gt;eql?&lt;/code&gt; &lt;/a&gt; &lt;code&gt;obj&lt;/code&gt; 및 &lt;code&gt;other&lt;/code&gt; 가 동일한 해시 키를 참조하는 경우 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 이것은 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 에서 멤버가 같은지 테스트 하는 데 사용됩니다 . &lt;a href=&quot;object#method-i-eql-3F&quot;&gt; &lt;code&gt;eql?&lt;/code&gt; &lt;/a&gt; 이있는 객체 쌍에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 두 객체 의 &lt;a href=&quot;object#method-i-hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; 값이 동일해야합니다. 그래서 &lt;a href=&quot;object#method-i-eql-3F&quot;&gt; &lt;code&gt;eql?&lt;/code&gt; &lt;/a&gt; 을 재정의하는 하위 클래스가 있습니까? 또한 &lt;a href=&quot;object#method-i-hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; 적절하게 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="29674060996a78614e9beee9e8b9ee55c20a252b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; module contains a number of routines that interact with the garbage collection facility and allow you to traverse all living objects with an iterator.</source>
          <target state="translated">&lt;a href=&quot;objectspace&quot;&gt; &lt;code&gt;ObjectSpace&lt;/code&gt; &lt;/a&gt; 모듈은 루틴의 숫자를 포함하는 쓰레기 수거 시설과 상호 작용하면 반복자 모든 살아있는 오브젝트를 통과 할 수있다.</target>
        </trans-unit>
        <trans-unit id="27e6599d7a90f972d5860df9e53eee7a06f0f63a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pkey/pkey&quot;&gt;&lt;code&gt;PKey&lt;/code&gt;&lt;/a&gt; module offers support for three popular public/private key algorithms:</source>
          <target state="translated">&lt;a href=&quot;pkey/pkey&quot;&gt; &lt;code&gt;PKey&lt;/code&gt; &lt;/a&gt; 모듈 이벤트는 세 가지 인기있는 공개 / 개인 키 알고리즘에 대한 지원 :</target>
        </trans-unit>
        <trans-unit id="4d11f60bfd136cf56f1ac40d7556cad10e9a6f15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;popmail#method-i-unique_id&quot;&gt;&lt;code&gt;POPMail#unique_id()&lt;/code&gt;&lt;/a&gt; method returns the unique-id of the message as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Normally the unique-id is a hash of the message.</source>
          <target state="translated">&lt;a href=&quot;popmail#method-i-unique_id&quot;&gt; &lt;code&gt;POPMail#unique_id()&lt;/code&gt; &lt;/a&gt; 메소드는 같은 메시지의 고유 ID를 반환 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; . 일반적으로 unique-id는 메시지의 해시입니다.</target>
        </trans-unit>
        <trans-unit id="2cf122574cf8d1dde2feeb86759717387e25a144" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queryextension#method-i-initialize_query&quot;&gt;&lt;code&gt;initialize_query&lt;/code&gt;&lt;/a&gt; method, for initializing the above mechanisms, handling multipart forms, and allowing the class to be used in &amp;ldquo;offline&amp;rdquo; mode.</source>
          <target state="translated">&lt;a href=&quot;queryextension#method-i-initialize_query&quot;&gt; &lt;code&gt;initialize_query&lt;/code&gt; 의&lt;/a&gt; 클래스를, 위의 메커니즘을 초기화 다중 양식을 처리하고, 허용하는 방법은 &quot;오프라인&quot;모드에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="335b331bc7a146728a417af2e7393109b43dff17" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class implements multi-producer, multi-consumer queues. It is especially useful in threaded programming when information must be exchanged safely between multiple threads. The &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class implements all the required locking semantics.</source>
          <target state="translated">&lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 클래스가 구현하는 멀티 프로듀서, 다중 소비자 큐. 정보가 여러 스레드간에 안전하게 교환되어야하는 경우 스레드 프로그래밍에 특히 유용합니다. &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 모든 클래스가 구현에 필요한 잠금 의미.</target>
        </trans-unit>
        <trans-unit id="40a59a94596fcfc880f78067dd8d4234ec244190" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt; module provides interface for GNU &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt;. This module defines a number of methods to facilitate completion and accesses input history from the Ruby interpreter. This module supported Edit Line(libedit) too. libedit is compatible with GNU &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readline&quot;&gt; &lt;code&gt;Readline&lt;/code&gt; 와&lt;/a&gt; 모듈은 GNU에 대한 인터페이스를 제공 &lt;a href=&quot;readline&quot;&gt; &lt;code&gt;Readline&lt;/code&gt; 와&lt;/a&gt; . 이 모듈은 완료를 용이하게하기 위해 여러 가지 방법을 정의하고 Ruby 인터프리터에서 입력 히스토리에 액세스합니다. 이 모듈은 Edit Line (libedit)도 지원했습니다. libedit는 GNU &lt;a href=&quot;readline&quot;&gt; &lt;code&gt;Readline&lt;/code&gt; &lt;/a&gt; 과 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="6fe5ef93085c0b1ec72402df28fea61ef7034f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;regexp#method-i-match&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">&lt;a href=&quot;regexp#method-i-match&quot;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt; 방법은 반환 &lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; 의&lt;/a&gt; 객체를 :</target>
        </trans-unit>
        <trans-unit id="6852c55cf9bbfa877f4b319cdb4a6a57028975bf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; receives the UDP packet and connects back to the provided &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">&lt;a href=&quot;ringserver&quot;&gt; &lt;code&gt;RingServer&lt;/code&gt; 는&lt;/a&gt; UDP 패킷을 수신하고, 커넥트 제공된로 다시 &lt;a href=&quot;../drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt; 서비스.</target>
        </trans-unit>
        <trans-unit id="24c657932ea377f9bf4100921a313efb17395fff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rubyvm&quot;&gt;&lt;code&gt;RubyVM&lt;/code&gt;&lt;/a&gt; module only exists on MRI. &lt;code&gt;RubyVM&lt;/code&gt; is not defined in other Ruby implementations such as JRuby and TruffleRuby.</source>
          <target state="translated">&lt;a href=&quot;rubyvm&quot;&gt; &lt;code&gt;RubyVM&lt;/code&gt; 의의&lt;/a&gt; 모듈은 MRI에 존재합니다. &lt;code&gt;RubyVM&lt;/code&gt; 은 JRuby 및 TruffleRuby와 같은 다른 Ruby 구현에 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2a72df2bd6acb49f7905c2ef950a5ad233755587" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rubyvm&quot;&gt;&lt;code&gt;RubyVM&lt;/code&gt;&lt;/a&gt; module provides some access to MRI internals. This module is for very limited purposes, such as debugging, prototyping, and research. Normal users must not use it. This module is not portable between Ruby implementations.</source>
          <target state="translated">&lt;a href=&quot;rubyvm&quot;&gt; &lt;code&gt;RubyVM&lt;/code&gt; 의의&lt;/a&gt; 모듈은 MRI 내부에 약간의 액세스를 제공합니다. 이 모듈은 디버깅, 프로토 타이핑 및 연구와 같은 매우 제한된 목적을위한 것입니다. 일반 사용자는 사용하지 마십시오. 이 모듈은 Ruby 구현간에 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="976f8a6b6f8eec3df8f60a910a7e6f67460fca54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rubyvm&quot;&gt;&lt;code&gt;RubyVM&lt;/code&gt;&lt;/a&gt; module provides some access to Ruby internals. This module is for very limited purposes, such as debugging, prototyping, and research. Normal users must not use it.</source>
          <target state="translated">&lt;a href=&quot;rubyvm&quot;&gt; &lt;code&gt;RubyVM&lt;/code&gt; 의의&lt;/a&gt; 모듈은 루비 내부에 약간의 액세스를 제공합니다. 이 모듈은 디버깅, 프로토 타이핑 및 연구와 같은 매우 제한된 목적을위한 것입니다. 일반 사용자는 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="51082d708d078223c4b4d4c9f63b504fc35d0c3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; class associates data with a session as key-value pairs. This data can be set and retrieved by indexing the &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; instance using '[]', much the same as hashes (although other hash methods are not supported).</source>
          <target state="translated">&lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 키 - 값 쌍으로 세션과 클래스 연관 데이터입니다. 이 데이터는 해시와 거의 동일한 '[]'를 사용하여 &lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 인스턴스를 색인화하여 설정하고 검색 할 수 있습니다 (다른 해시 방법은 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="c565fd3d800aa76502f0411834a82f8152431222" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;singleton&quot;&gt;&lt;code&gt;Singleton&lt;/code&gt;&lt;/a&gt; module implements the &lt;a href=&quot;singleton&quot;&gt;&lt;code&gt;Singleton&lt;/code&gt;&lt;/a&gt; pattern.</source>
          <target state="translated">&lt;a href=&quot;singleton&quot;&gt; &lt;code&gt;Singleton&lt;/code&gt; &lt;/a&gt; 모듈 구현 &lt;a href=&quot;singleton&quot;&gt; &lt;code&gt;Singleton&lt;/code&gt; &lt;/a&gt; 패턴.</target>
        </trans-unit>
        <trans-unit id="04aa9e4691bde4ac8eb69f38ad837f450715009e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;Net::SMTP&lt;/code&gt;&lt;/a&gt; class supports three authentication schemes; PLAIN, LOGIN and CRAM MD5. (&lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; Authentication: [RFC2554]) To use &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; authentication, pass extra arguments to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;/SMTP#start.</source>
          <target state="translated">&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;Net::SMTP&lt;/code&gt; &lt;/a&gt; 클래스는 세 가지 인증 방식을 지원합니다; 일반, 로그인 및 CRAM MD5. ( &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증 : [RFC2554]) &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증 을 사용하려면 &lt;a href=&quot;smtp#method-c-start&quot;&gt; &lt;code&gt;SMTP.start&lt;/code&gt; &lt;/a&gt; / SMTP # start에 추가 인수를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7099b2f59d47919395d198716d5951806a9bcd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;Net::SMTP&lt;/code&gt;&lt;/a&gt; class supports three authentication schemes; PLAIN, LOGIN and CRAM MD5. (SMTP Authentication: [RFC2554]) To use &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; authentication, pass extra arguments to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;/SMTP#start.</source>
          <target state="translated">&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;Net::SMTP&lt;/code&gt; &lt;/a&gt; 클래스는 세 가지 인증 방식을 지원합니다; 평면, 로그인 및 CRAM MD5. (SMTP 인증 : [RFC2554]) &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증 을 사용하려면 &lt;a href=&quot;smtp#method-c-start&quot;&gt; &lt;code&gt;SMTP.start&lt;/code&gt; &lt;/a&gt; / SMTP # start에 추가 인수를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd9fcdd76b2cdd4314ffe8b495b9eff4e744b90a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; object used in this connection.</source>
          <target state="translated">&lt;a href=&quot;sslcontext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 이 연결에 사용되는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="10ecff28f3b9911a75ef16a584a57573933f66e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; appended to the end of each row. This can be set to the special &lt;code&gt;:auto&lt;/code&gt; setting, which requests that &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; automatically discover this from the data. Auto-discovery reads ahead in the data looking for the next &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;, &lt;code&gt;&quot;\n&quot;&lt;/code&gt;, or &lt;code&gt;&quot;\r&quot;&lt;/code&gt; sequence. A sequence will be selected even if it occurs in a quoted field, assuming that you would have the same line endings there. If none of those sequences is found, &lt;code&gt;data&lt;/code&gt; is &lt;code&gt;ARGF&lt;/code&gt;, &lt;code&gt;STDIN&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt;, or &lt;code&gt;STDERR&lt;/code&gt;, or the stream is only available for output, the default &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; (&lt;code&gt;$/&lt;/code&gt;) is used. Obviously, discovery takes a little time. &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; manually if speed is important. Also note that &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects should be opened in binary mode on Windows if this feature will be used as the line-ending translation can cause problems with resetting the document position to where it was before the read ahead. This &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will be transcoded into the data's &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; before parsing.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 각 행의 끝에 추가. 이를 특수 &lt;code&gt;:auto&lt;/code&gt; 설정으로 설정하면 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 가 데이터에서이를 자동으로 검색 하도록 요청합니다 . 자동 검색은 다음 &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; , &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;\r&quot;&lt;/code&gt; 시퀀스를 찾기 위해 데이터를 미리 읽습니다 . 인용 부호가있는 필드에서 발생하더라도 동일한 행 끝이 있다고 가정 할 때 시퀀스가 ​​선택됩니다. 해당 시퀀스를 찾지 &lt;code&gt;ARGF&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; 가 ARGF , &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; 또는 &lt;code&gt;STDERR&lt;/code&gt; 이거나 스트림이 출력용으로 만 사용 가능한 경우 기본 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ( &lt;code&gt;$/&lt;/code&gt; )가 사용됩니다. 분명히, 발견에는 약간의 시간이 걸립니다. 속도가 중요한 경우 수동으로 &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; . 또한 이 기능을 줄 끝 변환으로 사용하여 문서 위치를 미리 읽기 이전 위치로 재설정하는 데 문제가 발생할 수 있으므로 Windows에서 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체를 이진 모드로 열어야합니다. 이 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 구문 분석하기 전에 데이터의 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 으로 코드 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8420c3a00dcbdbe50aa485ad0d954d6a4ba7616" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; placed between each field. This &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will be transcoded into the data's &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; before parsing.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 각 필드 사이에 위치. 이 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 구문 분석하기 전에 데이터의 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 으로 코드 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="62a5276f22f3add4b87e5a96be3deb13e08e3471" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;env#method-c-inspect&quot;&gt;&lt;code&gt;ENV.inspect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 에 의해 반환 &lt;a href=&quot;env#method-c-inspect&quot;&gt; &lt;code&gt;ENV.inspect&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16d9ef48db3b59b69b576fbc2e70f601c463593d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is passed to the &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; depends on the &lt;a href=&quot;readline#method-c-completer_word_break_characters&quot;&gt;&lt;code&gt;Readline.completer_word_break_characters&lt;/code&gt;&lt;/a&gt; property. By default the word under the cursor is passed to the &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;. For example, if the input is &amp;ldquo;foo bar&amp;rdquo; then only &amp;ldquo;bar&amp;rdquo; would be passed to the completion &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 에 전달 되는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;readline#method-c-completer_word_break_characters&quot;&gt; &lt;code&gt;Readline.completer_word_break_characters&lt;/code&gt; &lt;/a&gt; 속성 에 따라 다릅니다 . 기본적으로 커서 아래의 단어는 &lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 로 전달됩니다 . 예를 들어, 입력이 &quot;foo bar&quot;이면 &quot;bar&quot;만 완료 &lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="37a5c9c9e326b538e39e880f8c30dce6dbc063ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; class generates new subclasses that hold a set of members and their values. For each member a reader and writer method is created similar to &lt;a href=&quot;module#method-i-attr_accessor&quot;&gt;&lt;code&gt;Module#attr_accessor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 클래스는 회원들과 그 값의 집합을 보유 새로운 서브 클래스를 생성합니다. 각 구성원에 대해 리더 및 작성기 메소드가 &lt;a href=&quot;module#method-i-attr_accessor&quot;&gt; &lt;code&gt;Module#attr_accessor&lt;/code&gt; &lt;/a&gt; 와 유사하게 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="73ed3e7cbd80c73f0722c6d4e6a5a0d569ffc7c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sys&quot;&gt;&lt;code&gt;Process::Sys&lt;/code&gt;&lt;/a&gt; module contains &lt;a href=&quot;uid&quot;&gt;&lt;code&gt;UID&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gid&quot;&gt;&lt;code&gt;GID&lt;/code&gt;&lt;/a&gt; functions which provide direct bindings to the system calls of the same names instead of the more-portable versions of the same functionality found in the &lt;a href=&quot;../process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uid&quot;&gt;&lt;code&gt;Process::UID&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;gid&quot;&gt;&lt;code&gt;Process::GID&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">&lt;a href=&quot;sys&quot;&gt; &lt;code&gt;Process::Sys&lt;/code&gt; &lt;/a&gt; 모듈은 포함 &lt;a href=&quot;uid&quot;&gt; &lt;code&gt;UID&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;gid&quot;&gt; &lt;code&gt;GID&lt;/code&gt; &lt;/a&gt; 대신 동일한 기능의보다 휴대용 버전의 같은 이름의 시스템 호출에 직접 바인딩을 제공하는 함수가 발견 &lt;a href=&quot;../process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;uid&quot;&gt; &lt;code&gt;Process::UID&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;gid&quot;&gt; &lt;code&gt;Process::GID&lt;/code&gt; &lt;/a&gt; 모듈을 .</target>
        </trans-unit>
        <trans-unit id="cc36abb047738d335bf96d652d1e86a6ad96f9a1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt; will also notify you of the 'close' event when the &lt;a href=&quot;notifytemplateentry&quot;&gt;&lt;code&gt;NotifyTemplateEntry&lt;/code&gt;&lt;/a&gt; has expired.</source>
          <target state="translated">&lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; 는&lt;/a&gt; 때 또한 '가까이'이벤트를 알려줍니다 &lt;a href=&quot;notifytemplateentry&quot;&gt; &lt;code&gt;NotifyTemplateEntry&lt;/code&gt; 이&lt;/a&gt; 만료되었습니다.</target>
        </trans-unit>
        <trans-unit id="d618b22abd887b21c9fbac74ea6f7143b3907f3c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uid&quot;&gt;&lt;code&gt;Process::UID&lt;/code&gt;&lt;/a&gt; module contains a collection of module functions which can be used to portably get, set, and switch the current process's real, effective, and saved user IDs.</source>
          <target state="translated">&lt;a href=&quot;uid&quot;&gt; &lt;code&gt;Process::UID&lt;/code&gt; &lt;/a&gt; 모듈은 이식, 세트를 가져 오는 데 사용하고, 현재 프로세스의 실제 효과 및 저장 사용자 ID를 전환 할 수있는 모듈 기능의 컬렉션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="1c67e1e2fefbbde56705a7d64eaa4c6f13aa6884" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; module contains a single method named &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;warn&lt;/code&gt;&lt;/a&gt;, and the module extends itself, making &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;Warning.warn&lt;/code&gt;&lt;/a&gt; available. &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;Warning.warn&lt;/code&gt;&lt;/a&gt; is called for all warnings issued by Ruby. By default, warnings are printed to $stderr.</source>
          <target state="translated">&lt;a href=&quot;warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt; 모듈라는 이름의 하나의 방법이 포함되어 &lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;warn&lt;/code&gt; &lt;/a&gt; , 모듈은 제작 자체를 확장 &lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;Warning.warn&lt;/code&gt; 이&lt;/a&gt; 가능합니다. &lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;Warning.warn&lt;/code&gt; &lt;/a&gt; 은 Ruby가 발행 한 모든 경고에 대해 호출됩니다. 기본적으로 경고는 $ stderr에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="c85beeaabd2d6bddff83aaa8a16d4235f0ebda4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; module contains a single method named &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;warn&lt;/code&gt;&lt;/a&gt;, and the module extends itself, making &lt;code&gt;Warning.warn&lt;/code&gt; available. &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;Warning.warn&lt;/code&gt;&lt;/a&gt; is called for all warnings issued by Ruby. By default, warnings are printed to $stderr.</source>
          <target state="translated">&lt;a href=&quot;warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt; 모듈라는 이름의 하나의 방법이 포함되어 &lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;warn&lt;/code&gt; &lt;/a&gt; , 모듈은 제작 자체를 확장 &lt;code&gt;Warning.warn&lt;/code&gt; 이 가능합니다. Ruby가 발행 한 모든 경고에 대해 &lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;Warning.warn&lt;/code&gt; &lt;/a&gt; 이 호출됩니다. 기본적으로 경고는 $ stderr에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="7e1d7688a0a0b0950d14b82f07a8fe254c64c05b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlib#SYNC_FLUSH&quot;&gt;&lt;code&gt;SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; method flushes all pending output to the output buffer and the output is aligned on a byte boundary. Flushing may degrade compression so it should be used only when necessary, such as at a request or response boundary for a network stream.</source>
          <target state="translated">&lt;a href=&quot;zlib#SYNC_FLUSH&quot;&gt; &lt;code&gt;SYNC_FLUSH&lt;/code&gt; 에&lt;/a&gt; 있어서, 상기 출력 버퍼에 보류중인 모든 출력을 지우고 출력은 바이트 경계에 정렬된다. 플러싱은 압축을 저하시킬 수 있으므로 네트워크 스트림에 대한 요청 또는 응답 경계와 같이 필요할 때만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1fae9339010ed77f9be56fb6d4c4a0814e5ea7df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;&lt;/code&gt; in the pattern below matches the first character of the string, then &lt;code&gt;.*&lt;/code&gt; matches &lt;em&gt;Quote&amp;ldquo;&lt;/em&gt;. This causes the overall match to fail, so the text matched by &lt;code&gt;.*&lt;/code&gt; is backtracked by one position, which leaves the final character of the string available to match &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">아래 패턴 의 &lt;code&gt;&quot;&lt;/code&gt; 은 문자열의 첫 번째 문자와 일치하고 &lt;code&gt;.*&lt;/code&gt; 는 &lt;em&gt;Quote&quot;&lt;/em&gt; 와 일치 합니다. 이렇게하면 전체 일치가 실패하므로 &lt;code&gt;.*&lt;/code&gt; 와 일치하는 텍스트 가 한 위치만큼 역 추적되어 문자열의 마지막 문자가 남습니다. 일치하는 &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="029ec55136b5c03cf2fa8c6e73cd277d0c813fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;amp;&lt;/code&gt; argument preserves the tricks if a &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object is given by &lt;code&gt;&amp;amp;&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 인수 보존 트릭이 경우 &lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 객체는 다음과 같이 주어진다 &lt;code&gt;&amp;amp;&lt;/code&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="ce186ce471fe5930d3b1ba39f3b41ca00f5fb01e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; is used by various methods to compare objects, for example &lt;a href=&quot;enumerable#method-i-sort&quot;&gt;&lt;code&gt;Enumerable#sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enumerable#method-i-max&quot;&gt;&lt;code&gt;Enumerable#max&lt;/code&gt;&lt;/a&gt; etc.</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 예를 들어, 객체를 비교하기 위해 다양한 방법이 사용된다 &lt;a href=&quot;enumerable#method-i-sort&quot;&gt; &lt;code&gt;Enumerable#sort&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enumerable#method-i-max&quot;&gt; &lt;code&gt;Enumerable#max&lt;/code&gt; &lt;/a&gt; 등</target>
        </trans-unit>
        <trans-unit id="cedec98de6a457841362c37a43942ab899e94fc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(?:&lt;/code&gt;&amp;hellip;&lt;code&gt;)&lt;/code&gt; construct provides grouping without capturing. That is, it combines the terms it contains into an atomic whole without creating a backreference. This benefits performance at the slight expense of readability.</source>
          <target state="translated">&lt;code&gt;(?:&lt;/code&gt; ... &lt;code&gt;)&lt;/code&gt; 구조는 캡처없이 그룹화 제공합니다. 즉, 역 참조를 작성하지 않고 포함 된 용어를 원자 전체로 결합합니다. 가독성이 약간 떨어지지 만 성능이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="4ccae2d85d22ee5c5e6b00cc8cb2d0eace8f58a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; can appear anywhere on the left-hand side:</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 는 왼쪽에 어디서든 나타날 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bea5b201f95f5d6e312f5d4a1a95296037299882" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:chdir&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies the current directory.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 의 &lt;code&gt;:chdir&lt;/code&gt; 키 는 현재 디렉토리를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c25278db76dd87636f7e8c0ea569db7e019c1edb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:new_pgroup&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies to pass &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt; flag to &lt;code&gt;CreateProcessW()&lt;/code&gt; that is Windows API. This option is only for Windows. true means the new process is the root process of the new process group. The new process has CTRL+C disabled. This flag is necessary for &lt;code&gt;Process.kill(:SIGINT, pid)&lt;/code&gt; on the subprocess. :new_pgroup is false by default.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 의 &lt;code&gt;:new_pgroup&lt;/code&gt; 키는 &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt; 플래그를 Windows API 인 &lt;code&gt;CreateProcessW()&lt;/code&gt; 에 전달하도록 지정합니다 . 이 옵션은 Windows에만 해당됩니다. true는 새 프로세스가 새 프로세스 그룹의 루트 프로세스임을 의미합니다. 새 프로세스는 CTRL + C를 비활성화했습니다. 이 플래그는 서브 프로세스의 &lt;code&gt;Process.kill(:SIGINT, pid)&lt;/code&gt; 에 필요합니다. : new_pgroup은 기본적으로 false입니다.</target>
        </trans-unit>
        <trans-unit id="bfe4d82bec1597b30eed4dfc141f73134ab3859e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:output_row_sep&lt;/code&gt;&lt;code&gt;option&lt;/code&gt; defaults to &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; (&lt;code&gt;$/&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:output_row_sep&lt;/code&gt; &lt;code&gt;option&lt;/code&gt; 기본값은 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ( &lt;code&gt;$/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1229d6e7ab700d3e217bff21ae6658f28ab7c6ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:pgroup&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies a process group. The corresponding value should be true, zero, a positive integer, or nil. true and zero cause the process to be a process leader of a new process group. A non-zero positive integer causes the process to join the provided process group. The default value, nil, causes the process to remain in the same process group.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 의 &lt;code&gt;:pgroup&lt;/code&gt; 키 는 프로세스 그룹 을 지정합니다. 해당 값은 true, 0, 양의 정수 또는 nil이어야합니다. true 및 0은 프로세스를 새 프로세스 그룹의 프로세스 리더로 만듭니다. 0이 아닌 양의 정수는 프로세스가 제공된 프로세스 그룹에 참여하게합니다. 기본값 인 nil은 프로세스를 동일한 프로세스 그룹에 유지합니다.</target>
        </trans-unit>
        <trans-unit id="9262d9a748b4916423664afa56698a2a8d204fed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:rlimit_&lt;/code&gt;&lt;em&gt;foo&lt;/em&gt; key specifies a resource limit. &lt;em&gt;foo&lt;/em&gt; should be one of resource types such as &lt;code&gt;core&lt;/code&gt;. The corresponding value should be an integer or an array which have one or two integers: same as cur_limit and max_limit arguments for &lt;a href=&quot;process#method-c-setrlimit&quot;&gt;&lt;code&gt;Process.setrlimit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:rlimit_&lt;/code&gt; &lt;em&gt;푸&lt;/em&gt; 키는 자원 제한을 지정합니다. &lt;em&gt;foo&lt;/em&gt; 는 &lt;code&gt;core&lt;/code&gt; 와 같은 리소스 유형 중 하나 여야합니다 . 해당 값은 &lt;a href=&quot;process#method-c-setrlimit&quot;&gt; &lt;code&gt;Process.setrlimit&lt;/code&gt; 의&lt;/a&gt; cur_limit 및 max_limit 인수와 동일한 정수 또는 하나 또는 두 개의 정수를 갖는 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="efd2e99d317f77c2eb3f251b657991a75ab11a45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:row_sep&lt;/code&gt;&lt;code&gt;option&lt;/code&gt; defaults to &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; (&lt;code&gt;$/&lt;/code&gt;) when calling this method.</source>
          <target state="translated">&lt;code&gt;:row_sep&lt;/code&gt; &lt;code&gt;option&lt;/code&gt; 기본값은 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ( &lt;code&gt;$/&lt;/code&gt; 이 방법을)를 호출 할 때.</target>
        </trans-unit>
        <trans-unit id="ad4a3a69ff4f99837c72b39c1b265f8b3f958701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:umask&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies the umask.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 의 &lt;code&gt;:umask&lt;/code&gt; 키 는 umask를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ac45911951d11c759086cf353010cc6cc346723d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:unsetenv_others&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies to clear environment variables, other than specified by &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 의 &lt;code&gt;:unsetenv_others&lt;/code&gt; 키는 &lt;code&gt;env&lt;/code&gt; 에 지정된 것 이외의 환경 변수를 지우도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="f816b91d0cd57028d9cffb0cca143bef6611b22f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;===&lt;/code&gt; and &lt;em&gt;block&lt;/em&gt; is called from the first element to the last element of &lt;em&gt;enum&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; 및 &lt;em&gt;블록&lt;/em&gt; 의 마지막 요소의 첫 번째 요소에서 호출 &lt;em&gt;ENUM&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c741c1b0f207d6479a723ff2dc8d7a634a58a1eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;===&lt;/code&gt; and &lt;em&gt;block&lt;/em&gt; is called from the first element to the last element of &lt;em&gt;enum&lt;/em&gt;. The result for the first element is ignored.</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; 및 &lt;em&gt;블록&lt;/em&gt; 의 마지막 요소의 첫 번째 요소에서 호출 &lt;em&gt;ENUM&lt;/em&gt; . 첫 번째 요소의 결과는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2eaf94102d328e423957955438674e4adb1db0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;/code&gt; is needed to differentiate unary minus and plus operators from binary minus and plus operators.</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; 는 단항 마이너스와 플러스 바이너리 마이너스와 플러스 사업자 사업자를 구별 할 필요가있다.</target>
        </trans-unit>
        <trans-unit id="5a9c6454d9c630f76fc818d3083a475a08ae18b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Comparable&lt;/code&gt; mixin is used by classes whose objects may be ordered. The class must define the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator, which compares the receiver against another object, returning -1, 0, or +1 depending on whether the receiver is less than, equal to, or greater than the other object. If the other object is not comparable then the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator should return nil. &lt;code&gt;Comparable&lt;/code&gt; uses &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; to implement the conventional comparison operators (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt;) and the method &lt;code&gt;between?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Comparable&lt;/code&gt; 믹스 인은 그 개체 정렬 될 수 클래스가 사용된다. 클래스는 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 연산자 를 정의해야하며 , 수신자가 다른 오브젝트보다 작거나 같거나 큰지 여부에 따라 수신자를 다른 오브젝트와 비교하여 -1, 0 또는 +1을 리턴합니다. 다른 객체를 비교할 수 없으면 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 연산자는 nil을 반환해야합니다. &lt;code&gt;Comparable&lt;/code&gt; 은 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 를 사용 하여 기존 비교 연산자 ( &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; 및 &lt;code&gt;&amp;gt;&lt;/code&gt; )와 그 &lt;code&gt;between?&lt;/code&gt; 의 방법 을 구현합니까? .</target>
        </trans-unit>
        <trans-unit id="406d0b10479946c5cfce7df6f053b29c13ee386f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DidYouMean&lt;/code&gt; gem adds functionality to suggest possible method/class names upon errors such as &lt;code&gt;NameError&lt;/code&gt; and &lt;code&gt;NoMethodError&lt;/code&gt;. In Ruby 2.3 or later, it is automatically activated during startup.</source>
          <target state="translated">&lt;code&gt;DidYouMean&lt;/code&gt; 보석 같은 오류에 따라 가능한 방법 / 클래스 이름을 제안하는 기능을 추가 &lt;code&gt;NameError&lt;/code&gt; 및 &lt;code&gt;NoMethodError&lt;/code&gt; 을 . Ruby 2.3 이상에서는 시작시 자동으로 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="cd0810818341d4b49e323a0f91bea6ff780846ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Enumerable&lt;/code&gt; mixin provides collection classes with several traversal and searching methods, and with the ability to sort. The class must provide a method &lt;code&gt;each&lt;/code&gt;, which yields successive members of the collection. If &lt;code&gt;Enumerable#max&lt;/code&gt;, &lt;code&gt;#min&lt;/code&gt;, or &lt;code&gt;#sort&lt;/code&gt; is used, the objects in the collection must also implement a meaningful &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator, as these methods rely on an ordering between members of the collection.</source>
          <target state="translated">&lt;code&gt;Enumerable&lt;/code&gt; 에서 믹스 인은 여러 가지 탐색 및 검색 방법과 컬렉션 클래스를 제공하고, 정렬 할 수있는 기능. 클래스는 &lt;code&gt;each&lt;/code&gt; 메소드를 제공해야하며,이 메소드 는 콜렉션의 연속 멤버를 생성합니다. 경우 &lt;code&gt;Enumerable#max&lt;/code&gt; , &lt;code&gt;#min&lt;/code&gt; , 또는 &lt;code&gt;#sort&lt;/code&gt; 가 사용되며, 컬렉션의 개체는 의미 구현해야 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 이러한 방법 컬렉션의 구성원 사이의 순서에 의존으로, 연산자를.</target>
        </trans-unit>
        <trans-unit id="e9b3e086dbfb0db0c2b4e6e909e4ea07b0c89717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Fiber#resume&lt;/code&gt; method accepts an arbitrary number of parameters, if it is the first call to &lt;code&gt;resume&lt;/code&gt; then they will be passed as block arguments. Otherwise they will be the return value of the call to &lt;code&gt;Fiber.yield&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Fiber#resume&lt;/code&gt; 가 처음 호출 인 경우에있어서, 파라미터의 임의의 수를 받아 &lt;code&gt;resume&lt;/code&gt; 들은 블록 인수로서 전달 될 다음이. 그렇지 않으면 이들은 &lt;code&gt;Fiber.yield&lt;/code&gt; 호출의 반환 값이됩니다</target>
        </trans-unit>
        <trans-unit id="bb9b1472bde07107335b961ac9f9a7f137b1b9ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Find&lt;/code&gt; module supports the top-down traversal of a set of file paths.</source>
          <target state="translated">&lt;code&gt;Find&lt;/code&gt; 모듈은 파일 경로의 집합의 하향식 순회를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c49786bb9f1e8dad854c3bf69805c42825d14619" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IO&lt;/code&gt; stream is closed.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 스트림이 닫혀 있습니다.</target>
        </trans-unit>
        <trans-unit id="95c6599f10ba06d3f914705fdbc13ce391c6cc7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Matrix&lt;/code&gt; class represents a mathematical matrix. It provides methods for creating matrices, operating on them arithmetically and algebraically, and determining their mathematical properties such as trace, rank, inverse, determinant, or eigensystem.</source>
          <target state="translated">&lt;code&gt;Matrix&lt;/code&gt; 클래스 수학 행렬을 나타낸다. 행렬을 생성하고 산술 및 대수적으로 연산하고 추적, 순위, 역, 결정 또는 고유 시스템과 같은 수학적 속성을 결정하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ce3470e89f20ce6564a6c307d4b16e8ee05db3ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NO_PROXY&lt;/code&gt;&lt;a href=&quot;../../../../env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; variable can be used to specify hosts which shouldn't be reached via proxy; if set it should be a comma separated list of hostname suffixes, optionally with &lt;code&gt;:port&lt;/code&gt; appended, for example &lt;code&gt;example.com,some.host:8080&lt;/code&gt;. When set to &lt;code&gt;*&lt;/code&gt; no proxy will be returned.</source>
          <target state="translated">&lt;code&gt;NO_PROXY&lt;/code&gt; &lt;a href=&quot;../../../../env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; 의&lt;/a&gt; 변수는 프록시를 통해 도달하지 않는 호스트를 지정하는 데 사용될 수있다; 설정된 경우 쉼표로 구분 된 호스트 이름 접미사의 목록이어야하며 선택적으로 &lt;code&gt;:port&lt;/code&gt; 가 추가됩니다 (예 &lt;code&gt;example.com,some.host:8080&lt;/code&gt; . &lt;code&gt;*&lt;/code&gt; 로 설정하면 프록시가 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="311846b8c98a7991b954c7c1cc4d33159461c5c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenSSL::X509&lt;/code&gt; module provides the tools to set up an independent PKI, similar to scenarios where the 'openssl' command line tool is used for issuing certificates in a private PKI.</source>
          <target state="translated">&lt;code&gt;OpenSSL::X509&lt;/code&gt; 모듈은 '하려면 openssl'명령 줄 도구는 개인 PKI에서 인증서 발급에 사용되는 시나리오와 유사한 독립적 인 PKI를 설정하는 도구를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3bd850de27144f27dbc2df94ae7c39e2afbbc5bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Process::GID&lt;/code&gt; module contains a collection of module functions which can be used to portably get, set, and switch the current process's real, effective, and saved group IDs.</source>
          <target state="translated">&lt;code&gt;Process::GID&lt;/code&gt; 모듈을 이식, 세트를 가져 오는 데 사용하고, 현재 프로세스의 실제 효과 및 저장 그룹 ID를 전환 할 수있는 모듈 기능의 컬렉션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="2488f43ebefb428aa5a3be05e2ab58dc787b5c0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Process::Sys&lt;/code&gt; module contains &lt;a href=&quot;uid&quot;&gt;&lt;code&gt;UID&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gid&quot;&gt;&lt;code&gt;GID&lt;/code&gt;&lt;/a&gt; functions which provide direct bindings to the system calls of the same names instead of the more-portable versions of the same functionality found in the &lt;code&gt;Process&lt;/code&gt;, &lt;code&gt;Process::UID&lt;/code&gt;, and &lt;code&gt;Process::GID&lt;/code&gt; modules.</source>
          <target state="translated">&lt;code&gt;Process::Sys&lt;/code&gt; 모듈은 포함 &lt;a href=&quot;uid&quot;&gt; &lt;code&gt;UID&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;gid&quot;&gt; &lt;code&gt;GID&lt;/code&gt; &lt;/a&gt; 대신 동일한 기능의보다 휴대용 버전의 같은 이름의 시스템 호출에 직접 바인딩을 제공하는 함수가 발견 &lt;code&gt;Process&lt;/code&gt; , &lt;code&gt;Process::UID&lt;/code&gt; 및 &lt;code&gt;Process::GID&lt;/code&gt; 모듈을 .</target>
        </trans-unit>
        <trans-unit id="bd5432d84953f724463524be3ab6adb06dc0bf06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Process::UID&lt;/code&gt; module contains a collection of module functions which can be used to portably get, set, and switch the current process's real, effective, and saved user IDs.</source>
          <target state="translated">&lt;code&gt;Process::UID&lt;/code&gt; 모듈은 이식, 세트를 가져 오는 데 사용하고, 현재 프로세스의 실제 효과 및 저장 사용자 ID를 전환 할 수있는 모듈 기능의 컬렉션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="1cdfd9ddb0d070cf1aeba738cd968a33e5a848bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Regexp#fixed_encoding?&lt;/code&gt; predicate indicates whether the regexp has a &lt;em&gt;fixed&lt;/em&gt; encoding, that is one incompatible with ASCII. A regexp's encoding can be explicitly fixed by supplying &lt;code&gt;Regexp::FIXEDENCODING&lt;/code&gt; as the second argument of &lt;code&gt;Regexp.new&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Regexp#fixed_encoding?&lt;/code&gt; 술어는 정규 표현식 에 ASCII와 호환되지 않는 &lt;em&gt;고정&lt;/em&gt; 인코딩 이 있는지 여부를 나타냅니다 . regexp와의 부호화가 명시 적으로 공급함으로써 고정 될 수 &lt;code&gt;Regexp::FIXEDENCODING&lt;/code&gt; 두 번째 인수로서 &lt;code&gt;Regexp.new&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="90f0f172373198a48e84df4c76fc20758c2d01ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; class represents a mathematical vector, which is useful in its own right, and also constitutes a row or column of a &lt;a href=&quot;matrix&quot;&gt;&lt;code&gt;Matrix&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Vector&lt;/code&gt; 클래스는 그 자체로 유용한 수학 벡터를 나타내며, 또한의 행이나 열 구성 &lt;a href=&quot;matrix&quot;&gt; &lt;code&gt;Matrix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d37398da3122d7d9c538e68a4a63e8552c863361" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate chain for this socket's peer.</source>
          <target state="translated">이 소켓 피어 의 &lt;code&gt;X509&lt;/code&gt; 인증서 체인</target>
        </trans-unit>
        <trans-unit id="9d81e15ebcfffccd2bdae152245dd05c95013377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate for this socket endpoint.</source>
          <target state="translated">이 소켓 엔드 포인트 의 &lt;code&gt;X509&lt;/code&gt; 인증서</target>
        </trans-unit>
        <trans-unit id="3958073e184be9dd3031b4a51e4b5b2041f147d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate for this socket's peer.</source>
          <target state="translated">이 소켓 피어 의 &lt;code&gt;X509&lt;/code&gt; 인증서</target>
        </trans-unit>
        <trans-unit id="611705e80ef544e878e05ecd292682a97ae7d656" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate store holds trusted CA certificates used to verify peer certificates.</source>
          <target state="translated">&lt;code&gt;X509&lt;/code&gt; 의 인증서 저장소가 피어 인증서를 확인하는 데 사용 CA 인증서를 신뢰할 보유.</target>
        </trans-unit>
        <trans-unit id="243e07725bccb10f8db838ab03ee56b48b1dc777" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;\g&amp;lt;&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; syntax matches the previous subexpression named &lt;em&gt;name&lt;/em&gt;, which can be a group name or number, again. This differs from backreferences in that it re-executes the group rather than simply trying to re-match the same text.</source>
          <target state="translated">&lt;code&gt;\g&amp;lt;&lt;/code&gt; &lt;em&gt;이름 &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 구문라는 이전 표현식 일치 &lt;em&gt;이름&lt;/em&gt; 다시 그룹 이름이나 번호 일 수있다. 이는 단순히 동일한 텍스트를 다시 일치시키기보다는 그룹을 다시 실행한다는 점에서 역 참조와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5a6a8ccf91630b328ce463cc774ee7ca35e19de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;\p{}&lt;/code&gt; construct matches characters with the named property, much like POSIX bracket classes.</source>
          <target state="translated">&lt;code&gt;\p{}&lt;/code&gt; 구조가 훨씬 POSIX 브래킷 클래스와 같은 명명 된 속성 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="dc51bb12ba74fa98e902d09408a9150efb8e8c4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__ENCODING__&lt;/code&gt; keyword returns the script encoding of the file which the keyword is written:</source>
          <target state="translated">&lt;code&gt;__ENCODING__&lt;/code&gt; 의 키워드는 키워드가 기록 된 파일의 스크립트 인코딩을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="943e6f4501bc4883192acbb71ed2cf89ede71967" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abbr&lt;/code&gt; method is used by '%Z' in &lt;a href=&quot;time#method-i-strftime&quot;&gt;&lt;code&gt;strftime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;abbr&lt;/code&gt; 방법에 '%의 Z'가 사용된다 &lt;a href=&quot;time#method-i-strftime&quot;&gt; &lt;code&gt;strftime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba6e519cd1f5c05b63b78ff058fb1e7730dbf017" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accept&lt;/code&gt; method on &lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; may be used to create converters. It specifies which conversion block to call whenever a class is specified. The example below uses it to fetch a &lt;code&gt;User&lt;/code&gt; object before the &lt;code&gt;on&lt;/code&gt; handler receives it.</source>
          <target state="translated">&lt;a href=&quot;optionparser&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;accept&lt;/code&gt; 메소드를 사용하여 변환기를 작성할 수 있습니다. 클래스가 지정 될 때마다 호출 할 변환 블록을 지정합니다. 아래 예제는이를 사용 하여 &lt;code&gt;on&lt;/code&gt; 핸들러가 수신 하기 전에 &lt;code&gt;User&lt;/code&gt; 오브젝트 를 페치 합니다.</target>
        </trans-unit>
        <trans-unit id="a660d4cd89c50d26fde51bf6872be9ec9accfbe3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; should be a DNS hostname or IP address, the &lt;code&gt;port&lt;/code&gt; is the port the server operates on. If no &lt;code&gt;port&lt;/code&gt; is given the default port for &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; or HTTPS is used.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 는 DNS 호스트 이름 또는 IP 주소 여야의 &lt;code&gt;port&lt;/code&gt; 서버가 작동하는 포트입니다. &lt;code&gt;port&lt;/code&gt; 가 제공 되지 않으면 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 또는 HTTPS 의 기본 포트 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa7fc29d38b47b165fb7f524a0e88787e6d2d517" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alias&lt;/code&gt; keyword is most frequently used to alias methods. When aliasing a method, you can use either its name or a symbol:</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; 키워드는 가장 자주 별명 방법으로 사용된다. 메소드의 별명을 지정할 때 이름이나 기호를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7247e5554c2ced086f790daaf25665e3926d0c8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;basename&lt;/code&gt; parameter is used to determine the name of the temporary file. You can either pass a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with 2 &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; elements. In the former form, the temporary file's base name will begin with the given string. In the latter form, the temporary file's base name will begin with the array's first element, and end with the second element. For example:</source>
          <target state="translated">&lt;code&gt;basename&lt;/code&gt; 매개 변수는 임시 파일의 이름을 결정하는 데 사용됩니다. &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 2 개의 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 요소가 있는 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 전달할 수 있습니다 . 전자의 경우 임시 파일의 기본 이름은 주어진 문자열로 시작합니다. 후자의 형식에서 임시 파일의 기본 이름은 배열의 첫 번째 요소로 시작하고 두 번째 요소로 끝납니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="973695549c0654c4b1c867391d8a849e4e9f54ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;case&lt;/code&gt; expression can be used in two ways.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 표현은 두 가지 방법으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26ec8539515d05dc5bea513b337fb6386c3ef688" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cause&lt;/code&gt; of the generated exception is automatically set to the &amp;ldquo;current&amp;rdquo; exception (&lt;code&gt;$!&lt;/code&gt;) if any. An alternative value, either an &lt;code&gt;Exception&lt;/code&gt; object or &lt;code&gt;nil&lt;/code&gt;, can be specified via the &lt;code&gt;:cause&lt;/code&gt; argument.</source>
          <target state="translated">생성 된 예외 의 &lt;code&gt;cause&lt;/code&gt; 은 자동으로 &quot;현재&quot;예외 ( &lt;code&gt;$!&lt;/code&gt; )로 설정됩니다. &lt;code&gt;:cause&lt;/code&gt; 인수 를 사용하여 &lt;code&gt;Exception&lt;/code&gt; 객체 또는 &lt;code&gt;nil&lt;/code&gt; 과 같은 대체 값을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="032ecb09360bed8d516deb18673e9c320aef0e2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmdname, arg1, ...&lt;/code&gt; form does not use the shell. However, on different OSes, different things are provided as built-in commands. An example of this is +'echo'+, which is a built-in on Windows, but is a normal program on Linux and Mac OS X. This means that &lt;code&gt;Process.spawn 'echo', '%Path%'&lt;/code&gt; will display the contents of the &lt;code&gt;%Path%&lt;/code&gt; environment variable on Windows, but &lt;code&gt;Process.spawn 'echo', '$PATH'&lt;/code&gt; prints the literal &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmdname, arg1, ...&lt;/code&gt; 형태는 쉘을 사용하지 않습니다. 그러나 다른 OS에서는 기본 제공 명령으로 다른 것이 제공됩니다. 이에 대한 예는 + 'echo'+입니다. 이는 Windows에 내장되어 있지만 Linux 및 Mac OS X에서는 일반 프로그램입니다. 이는 &lt;code&gt;Process.spawn 'echo', '%Path%'&lt;/code&gt; 가 Windows에서는 &lt;code&gt;%Path%&lt;/code&gt; 환경 변수 의 내용 이지만 &lt;code&gt;Process.spawn 'echo', '$PATH'&lt;/code&gt; 는 리터럴 &lt;code&gt;$PATH&lt;/code&gt; 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="4a58f1833e0ee1f4638cec4d5b7f3f26fcaccb6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do&lt;/code&gt; keyword is optional. The following loop is equivalent to the loop above:</source>
          <target state="translated">&lt;code&gt;do&lt;/code&gt; 키워드는 선택 사항입니다. 다음 루프는 위의 루프와 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec266e5ffb117fb46bc990f54d60d6c50aaf179b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dst?&lt;/code&gt; method is called with a &lt;code&gt;Time&lt;/code&gt; value and should return whether the &lt;code&gt;Time&lt;/code&gt; value is in daylight savings time in the zone.</source>
          <target state="translated">&lt;code&gt;dst?&lt;/code&gt; 메서드는 &lt;code&gt;Time&lt;/code&gt; 값과 함께 호출되며 &lt;code&gt;Time&lt;/code&gt; 값이 해당 영역의 일광 절약 시간 인지 여부를 반환해야 합니다.</target>
        </trans-unit>
        <trans-unit id="fc38e3a92e714e271afd8621c81a13da44527605" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;each&lt;/code&gt; method can only be used if the begin object of the range supports the &lt;code&gt;succ&lt;/code&gt; method. A &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if the object does not have &lt;code&gt;succ&lt;/code&gt; method defined (like &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; (가)의 범위의 목적은 시작하면 지원 방법은 사용할 수 &lt;code&gt;succ&lt;/code&gt; 방법. &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 개체가없는 경우 발생 &lt;code&gt;succ&lt;/code&gt; 방법은 (같이 정의 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1cfc3c6dd7085c907371a4d6b36ebc4961e53bd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;then&lt;/code&gt; are optional, this &lt;code&gt;case&lt;/code&gt; expression gives the same result as the one above:</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 과 &lt;code&gt;then&lt;/code&gt; 선택 사항이며,이 &lt;code&gt;case&lt;/code&gt; 표현은 위의 것과 같은 결과를 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="02d98d28c9298fa0aaff45655d85c124e70b3b90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eql?&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; refer to the same hash key. This is used by &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; to test members for equality. For objects of class &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;eql?&lt;/code&gt; is synonymous with &lt;code&gt;==&lt;/code&gt;. Subclasses normally continue this tradition by aliasing &lt;code&gt;eql?&lt;/code&gt; to their overridden &lt;code&gt;==&lt;/code&gt; method, but there are exceptions. &lt;code&gt;Numeric&lt;/code&gt; types, for example, perform type conversion across &lt;code&gt;==&lt;/code&gt;, but not across &lt;code&gt;eql?&lt;/code&gt;, so:</source>
          <target state="translated">&lt;code&gt;eql?&lt;/code&gt; &lt;code&gt;obj&lt;/code&gt; 와 &lt;code&gt;other&lt;/code&gt; 가 동일한 해시 키를 참조 하면 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 이것은 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 에서 구성원의 동등성을 테스트 하는 데 사용됩니다 . &lt;code&gt;Object&lt;/code&gt; 클래스의 객체의 경우 &lt;code&gt;eql?&lt;/code&gt; &lt;code&gt;==&lt;/code&gt; 와 동의어입니다 . 하위 클래스는 일반적으로 &lt;code&gt;eql?&lt;/code&gt; 을 별칭으로 사용하여 이러한 전통을 이어가고 있습니까? 재정의 된 &lt;code&gt;==&lt;/code&gt; 메소드에 예외가 있습니다. 예를 들어 &lt;code&gt;Numeric&lt;/code&gt; 유형은 &lt;code&gt;==&lt;/code&gt; 에서 유형 변환을 수행 하지만 &lt;code&gt;eql?&lt;/code&gt; 에서는 유형 변환을 수행 하지 않습니까? 따라서 :</target>
        </trans-unit>
        <trans-unit id="0ddf00d35dbadcb5657c07c6e923d8a868493885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;false&lt;/code&gt; itself. Deprecated.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 그 자체. 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f663a447be7c801c3a46bcd7b9c2a3480b7b8f51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; parameter specifies the flush mode. The following constants may be used:</source>
          <target state="translated">&lt;code&gt;flush&lt;/code&gt; 매개 변수는 플러시 모드를 지정합니다. 다음 상수가 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21729a81fe257d93b9af5f8c5e434cc73ad786ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for&lt;/code&gt; loop consists of &lt;code&gt;for&lt;/code&gt; followed by a variable to contain the iteration argument followed by &lt;code&gt;in&lt;/code&gt; and the value to iterate over using each. The &lt;code&gt;do&lt;/code&gt; is optional:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프 구성 &lt;code&gt;for&lt;/code&gt; 다음 반복 인자 함유 가변 다음 &lt;code&gt;in&lt;/code&gt; 각을 사용하여 반복하는 값. &lt;code&gt;do&lt;/code&gt; 선택 사항입니다 :</target>
        </trans-unit>
        <trans-unit id="b79b2546a8132c22fc46c7997f9fc1301e941191" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for&lt;/code&gt; loop is rarely used in modern ruby programs.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프는 거의 현대 루비 프로그램에 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d7785382b69a21cf5330e70b10a8f55a26020c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for&lt;/code&gt; loop is similar to using each, but does not create a new variable scope.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프 각각을 사용하는 것과 유사하지만, 새로운 변수 범위를 생성하지 않는다.</target>
        </trans-unit>
        <trans-unit id="8647d061d6f82688613d309c47294e0dd9699fdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inherit&lt;/code&gt; flag is respected on each lookup. For example:</source>
          <target state="translated">&lt;code&gt;inherit&lt;/code&gt; 플래그는 각 조회에 존경. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="be41bd876cfbbaed9308d90c3e17f67754f8c538" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; arguments can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; accepts (generally &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects). If not given, they default to &lt;code&gt;ARGF&lt;/code&gt; and &lt;code&gt;$stdout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 및 &lt;code&gt;output&lt;/code&gt; 인수는 아무것도 할 수 있습니다 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 받아들 (일반적으로 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체). 지정하지 않으면 기본값은 &lt;code&gt;ARGF&lt;/code&gt; 및 &lt;code&gt;$stdout&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da2211d5198951014a97b79ed6c4a8c0c257cd0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;into&lt;/code&gt; option of &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;parse&lt;/code&gt; and so on methods stores command line options into a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; , &lt;code&gt;parse&lt;/code&gt; 등 의 &lt;code&gt;into&lt;/code&gt; 옵션은 명령 행 옵션을 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; 에&lt;/a&gt; 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="c1dfb3e3ab95e8b8db68bde257becf420d3acabe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; sets the compression level for the deflate stream between 0 (no compression) and 9 (best compression). The following constants have been defined to make code more readable:</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; 0 (압축) 및도 9 (가장 압축) 사이 DEFLATE 스트림의 압축 레벨을 설정한다. 코드를 더 읽기 쉽게하기 위해 다음 상수가 정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="053110167c514074589a166a49d38bd9374052c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local_to_utc&lt;/code&gt; method should convert a Time-like object from the timezone to UTC, and &lt;code&gt;utc_to_local&lt;/code&gt; is the opposite. The result also should be a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; or Time-like object (not necessary to be the same class). The &lt;a href=&quot;time#method-i-zone&quot;&gt;&lt;code&gt;zone&lt;/code&gt;&lt;/a&gt; of the result is just ignored. Time-like argument to these methods is similar to a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; object in UTC without sub-second; it has attribute readers for the parts, e.g. &lt;a href=&quot;time#method-i-year&quot;&gt;&lt;code&gt;year&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-month&quot;&gt;&lt;code&gt;month&lt;/code&gt;&lt;/a&gt;, and so on, and epoch time readers, &lt;a href=&quot;time#method-i-to_i&quot;&gt;&lt;code&gt;to_i&lt;/code&gt;&lt;/a&gt;. The sub-second attributes are fixed as 0, and &lt;a href=&quot;time#method-i-utc_offset&quot;&gt;&lt;code&gt;utc_offset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-zone&quot;&gt;&lt;code&gt;zone&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-isdst&quot;&gt;&lt;code&gt;isdst&lt;/code&gt;&lt;/a&gt;, and their aliases are same as a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; object in UTC. Also &lt;a href=&quot;time#method-i-to_time&quot;&gt;&lt;code&gt;to_time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-2B&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;time#method-i-2D&quot;&gt;&lt;code&gt;-&lt;/code&gt;&lt;/a&gt; methods are defined.</source>
          <target state="translated">&lt;code&gt;local_to_utc&lt;/code&gt; 의 방법은 UTC로 시간대에서 객체 같은 시간-A로 변환해야하고, &lt;code&gt;utc_to_local&lt;/code&gt; 는 반대입니다. 결과는 또한 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 또는 Time-like 객체 여야합니다 (동일한 클래스 일 필요는 없음). &lt;a href=&quot;time#method-i-zone&quot;&gt; &lt;code&gt;zone&lt;/code&gt; &lt;/a&gt; 결과는 무시됩니다. 이러한 메소드에 대한 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 과 같은 인수는 초 단위 가 아닌 UTC 의 Time 객체 와 유사합니다 . 부품의 속성 판독기 (예 : &lt;a href=&quot;time#method-i-year&quot;&gt; &lt;code&gt;year&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;time#method-i-month&quot;&gt; &lt;code&gt;month&lt;/code&gt; &lt;/a&gt; 등)와 획기적인 시간 판독기 &lt;a href=&quot;time#method-i-to_i&quot;&gt; &lt;code&gt;to_i&lt;/code&gt; 가&lt;/a&gt; 있습니다. 1 초 미만의 속성은 0으로 고정되며 &lt;a href=&quot;time#method-i-utc_offset&quot;&gt; &lt;code&gt;utc_offset&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;time#method-i-zone&quot;&gt; &lt;code&gt;zone&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;time#method-i-isdst&quot;&gt; &lt;code&gt;isdst&lt;/code&gt; &lt;/a&gt; 및 해당 별칭은 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 과 동일합니다UTC로 된 객체. 또한 &lt;a href=&quot;time#method-i-to_time&quot;&gt; &lt;code&gt;to_time&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;time#method-i-2B&quot;&gt; &lt;code&gt;+&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;time#method-i-2D&quot;&gt; &lt;code&gt;-&lt;/code&gt; &lt;/a&gt; 메소드가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="770c8eb845364c3b3bba81241c73ab554cf24be5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mem_level&lt;/code&gt; specifies how much memory should be allocated for the internal compression state. 1 uses minimum memory but is slow and reduces compression ratio while 9 uses maximum memory for optimal speed. The default value is 8. Two constants are defined:</source>
          <target state="translated">&lt;code&gt;mem_level&lt;/code&gt; 은 내부 압축 상태 할당되어야하는 메모리를 지정한다. 1은 최소 메모리를 사용하지만 속도가 느리고 압축률을 낮추는 반면 9는 최대 속도를 사용하여 최적의 속도를냅니다. 기본값은 8입니다. 두 개의 상수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="88a9089afa0570fafc2ee5344bc4b6432138e484" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; is either a string or an integer. If it is an integer, it must be bitwise-or of open(2) flags, such as File::RDWR or File::EXCL. If it is a string, it is either &amp;ldquo;fmode&amp;rdquo;, &amp;ldquo;fmode:ext_enc&amp;rdquo;, or &amp;ldquo;fmode:ext_enc:int_enc&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 문자열이나 정수 중 하나입니다. 정수인 경우 File :: RDWR 또는 File :: EXCL과 같이 비트 단위 또는 open (2) 플래그 여야합니다. 문자열 인 경우 &quot;fmode&quot;, &quot;fmode : ext_enc&quot;또는 &quot;fmode : ext_enc : int_enc&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="8c2a887305af9de7b1987204bbaebed30a094887" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;n&lt;/code&gt; specifier (store number of characters consumed so far in next pointer) is not implemented.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 개의 지정자 (다음 포인터에 지금까지 소비 문자의 저장 번호) 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="be4780ce9a4759c2108066f66de782f24ba43d9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; method is used for marshaling. If this method is not defined on a timezone object, &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; objects using that timezone object can not be dumped by &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 방법은 마샬링에 사용됩니다. 이 메서드가 표준 시간대 개체에 정의되어 있지 않으면 해당 표준 시간대 개체를 사용하는 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 개체를 &lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; 에서&lt;/a&gt; 덤프 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2b73f66b8caf2c989d5e0774eb6f1b3086512fd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nil&lt;/code&gt; itself. Deprecated.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 자체. 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ccd60764ebd61f7c42991ea6beeb3efb282e0114" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;no_proxy&lt;/code&gt; query parameter can be used to specify hosts which shouldn't be reached via proxy; if set it should be a comma separated list of hostname suffixes, optionally with &lt;code&gt;:port&lt;/code&gt; appended, for example &lt;code&gt;example.com,some.host:8080&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;no_proxy&lt;/code&gt; 쿼리 매개 변수는 프록시를 통해 도달해서는 안 호스트를 지정하는 데 사용할 수 있습니다; 설정된 경우 쉼표로 구분 된 호스트 이름 접미사의 목록이어야하며 선택적으로 &lt;code&gt;:port&lt;/code&gt; 가 추가됩니다 (예 &lt;code&gt;example.com,some.host:8080&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6003793dfdc9ed429a31ac0cb71ce326c7e3662c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash may be used to set the encoding of the data. &lt;code&gt;:external_encoding&lt;/code&gt;, &lt;code&gt;:internal_encoding&lt;/code&gt; and &lt;code&gt;:encoding&lt;/code&gt; may be set as in &lt;a href=&quot;../io#method-c-new&quot;&gt;&lt;code&gt;IO::new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 해시는 데이터의 인코딩을 설정하기 위해 사용될 수있다. &lt;code&gt;:external_encoding&lt;/code&gt; , &lt;code&gt;:internal_encoding&lt;/code&gt; 및 &lt;code&gt;:encoding&lt;/code&gt; 은 &lt;a href=&quot;../io#method-c-new&quot;&gt; &lt;code&gt;IO::new&lt;/code&gt; &lt;/a&gt; 에서와 같이 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1b08847fd2ae850f5206c1bf8aa43df27a440d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 매개 변수는 아무것도 할 수있다 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 이해한다.</target>
        </trans-unit>
        <trans-unit id="5985537e61d62fb78efa51e595f1ed8da52c632d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands. This method also understands an additional &lt;code&gt;:encoding&lt;/code&gt; parameter that you can use to specify the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; of the data in the file to be read. You must provide this unless your data is in &lt;a href=&quot;encoding#method-c-default_external&quot;&gt;&lt;code&gt;Encoding::default_external()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will use this to determine how to parse the data. You may provide a second &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; to have the data transcoded as it is read. For example, &lt;code&gt;encoding: &quot;UTF-32BE:UTF-8&quot;&lt;/code&gt; would read UTF-32BE data from the file but transcode it to UTF-8 before &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; parses it.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 매개 변수는 아무것도 할 수있다 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 이해한다. 이 방법은 읽을 파일의 데이터 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 을 지정하는 데 사용할 수 있는 추가 &lt;code&gt;:encoding&lt;/code&gt; 매개 변수 도 이해합니다 . 데이터가 &lt;a href=&quot;encoding#method-c-default_external&quot;&gt; &lt;code&gt;Encoding::default_external()&lt;/code&gt; &lt;/a&gt; 에 있지 않으면이를 제공해야합니다 . &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 는이를 사용하여 데이터를 구문 분석하는 방법을 결정합니다. 데이터를 읽을 때 코드 변환되도록 두 번째 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 을 제공 할 수 있습니다 . 예를 들어, &lt;code&gt;encoding: &quot;UTF-32BE:UTF-8&quot;&lt;/code&gt; 은 파일에서 UTF-32BE 데이터를 읽지 만 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; 가&lt;/a&gt; 구문 분석 하기 전에 UTF-8로 코드 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="da9593d1b76eb30b8b03458296ca7fdd50521779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands. This method understands an additional &lt;code&gt;:encoding&lt;/code&gt; parameter to set the base &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; for the output. This method will try to guess your &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; from the first non-&lt;code&gt;nil&lt;/code&gt; field in &lt;code&gt;row&lt;/code&gt;, if possible, but you may need to use this parameter as a backup plan.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 매개 변수는 아무것도 할 수있다 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 이해한다. 이 메소드는 추가 &lt;code&gt;:encoding&lt;/code&gt; 매개 변수를 이해 하여 출력 의 기본 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 을 설정합니다 . 이 방법은 당신의 추측하려고합니다 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 최초의 비에서 &lt;code&gt;nil&lt;/code&gt; 에서 필드 &lt;code&gt;row&lt;/code&gt; 가능하면,하지만 당신은 백업 계획이 매개 변수를 사용해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="24cfddb9fa4c317f8e10f5f37642947bd149837c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands. This method understands an additional &lt;code&gt;:encoding&lt;/code&gt; parameter when not passed a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to set the base &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; for the output. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; needs this hint if you plan to output non-ASCII compatible data.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 매개 변수는 아무것도 할 수있다 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 이해한다. 이 메소드 는 출력에 대한 기본 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 을 설정하기 위해 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 전달하지 않은 경우 추가 &lt;code&gt;:encoding&lt;/code&gt; 매개 변수를 이해합니다 . 비 ASCII 호환 데이터를 출력하려는 ​​경우 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 에이 힌트가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="abcb3951062ba4f5cafdfcc8863409bde1e5f9f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter is a hash of options, taken from the list &lt;code&gt;:force&lt;/code&gt;, &lt;code&gt;:noop&lt;/code&gt;, &lt;code&gt;:preserve&lt;/code&gt;, and &lt;code&gt;:verbose&lt;/code&gt;. &lt;code&gt;:noop&lt;/code&gt; means that no changes are made. The other three are obvious. Each method documents the options that it honours.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 목록에서 촬영 옵션의 해시 매개 변수 &lt;code&gt;:force&lt;/code&gt; , &lt;code&gt;:noop&lt;/code&gt; , &lt;code&gt;:preserve&lt;/code&gt; 과 &lt;code&gt;:verbose&lt;/code&gt; . &lt;code&gt;:noop&lt;/code&gt; 는 변경 사항이 없음을 의미합니다. 다른 세 사람은 분명합니다. 각 방법은 선호하는 옵션을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="6be1e7c63afa54ab962a9131c31b03ab61964162" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter is also filtered down to &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; after some clever key parsing. Any key beginning with &lt;code&gt;:in_&lt;/code&gt; or &lt;code&gt;:input_&lt;/code&gt; will have that leading identifier stripped and will only be used in the &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;input&lt;/code&gt; object. Keys starting with &lt;code&gt;:out_&lt;/code&gt; or &lt;code&gt;:output_&lt;/code&gt; affect only &lt;code&gt;output&lt;/code&gt;. All other keys are assigned to both objects.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 도 아래로 필터링 매개 변수 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 일부 영리한 키 구문 분석 후. 어떤 키 시작 &lt;code&gt;:in_&lt;/code&gt; 나 &lt;code&gt;:input_&lt;/code&gt; 식별자 제거 선도 만 사용될 수 없습니다해야합니다 &lt;code&gt;options&lt;/code&gt; &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;code&gt;input&lt;/code&gt; 객체입니다. &lt;code&gt;:out_&lt;/code&gt; 또는 &lt;code&gt;:output_&lt;/code&gt; 로 시작하는 키는 &lt;code&gt;output&lt;/code&gt; 에만 영향을줍니다 . 다른 모든 키는 두 객체 모두에 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="ecfb8f7a0ee942c257205094a773f2e281962326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; gives details for conversion and can have the following keys:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 변환에 대한 세부 정보를 제공하고 다음 키를 가질 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="eb6b1e40cfa006f3cc28349d6b8293b6943dd13f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;p&lt;/code&gt; specifier (match a pointer value) is not implemented.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 지정자 (포인터 값과 일치) 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2080654734dbfd1d20b57f13e70823f8161a21f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sec&lt;/code&gt; option for the write, take, move, read and notify methods may either be a number of seconds or a Renewer object.</source>
          <target state="translated">write, take, move, read 및 notify 메소드 의 &lt;code&gt;sec&lt;/code&gt; 옵션은 수 초 또는 Renewer 오브젝트 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27c84e0a5503b6862e0c0e5f4300fd56231104ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; parameter is a number or a range between two numbers, or an array of those. The number is a message sequence number, where -1 represents a '*' for use in range notation like 100..-1 being interpreted as '100:*'. Beware that the &lt;code&gt;exclude_end?&lt;/code&gt; property of a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object is ignored, and the contents of a range are independent of the order of the range endpoints as per the protocol specification, so 1&amp;hellip;5, 5..1 and 5&amp;hellip;1 are all equivalent to 1..5.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 매개 변수는 숫자 또는 두 숫자 사이의 범위, 또는 이들의 배열이다. 숫자는 메시지 순서 번호이며, 여기서 -1은 100 ..- 1과 같은 범위 표기법에서 사용하기위한 '*'를 '100 : *'으로 해석합니다. &lt;code&gt;exclude_end?&lt;/code&gt; 주의하십시오 ? &lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 개체의 속성 은 무시되고 범위 의 내용은 프로토콜 사양에 따라 범위 끝점의 순서와 무관하므로 1&amp;hellip; 5, 5..1 및 5&amp;hellip; 1은 모두 1..5와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="57092f4675e03ad49edb994c541c863ad2adbf27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strategy&lt;/code&gt; sets the deflate compression strategy. The following strategies are available:</source>
          <target state="translated">이 &lt;code&gt;strategy&lt;/code&gt; 은 수축 압축 전략을 설정합니다. 다음과 같은 전략을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1efd440303bb62d40c038470df8f2a51c72246a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;then&lt;/code&gt; is optional:</source>
          <target state="translated">그런 &lt;code&gt;then&lt;/code&gt; 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="f7417cfe2954517065c7bdda15a1651a64f13850" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;undef&lt;/code&gt; keyword prevents the current class from responding to calls to the named methods.</source>
          <target state="translated">&lt;code&gt;undef&lt;/code&gt; 키워드는 명명 된 메소드 호출에 응답에서 현재 클래스를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c46d6dfb332d3fdf698516caab263668b4eb9dea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unless&lt;/code&gt; expression is the opposite of the &lt;code&gt;if&lt;/code&gt; expression. If the value is false, the &amp;ldquo;then&amp;rdquo; expression is executed:</source>
          <target state="translated">&lt;code&gt;unless&lt;/code&gt; 표현은 반대입니다 &lt;code&gt;if&lt;/code&gt; 식입니다. 값이 false이면 &quot;then&quot;표현식이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c8ccec7f53b99433e27a6ec541923e25f8c3b2bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;until&lt;/code&gt; loop executes while a condition is false:</source>
          <target state="translated">가 &lt;code&gt;until&lt;/code&gt; 루프를 실행하는 조건이 거짓 인 동안 :</target>
        </trans-unit>
        <trans-unit id="038fbc396f2d52ccb74f2fe20c4516c8f548916f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; callback allows the warners to run without being explicitly called. The system is set up with the &lt;code&gt;Ticker&lt;/code&gt; and several observers, and the observers do their duty without the top-level code having to interfere.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 콜백은 명시 적으로 호출하지 않고 실행에 워너 수 있습니다. 이 시스템은 &lt;code&gt;Ticker&lt;/code&gt; 및 여러 관찰자와 함께 설정 되며, 관찰자는 최상위 코드를 방해하지 않고도 의무를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ad56515b9612cdceb8a9b51ed394bbdb29405d0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; method has access to the value set by the &lt;code&gt;initialize&lt;/code&gt; method, but only for the same object.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 에있어서, 상기에 의해 설정된 값을 갖는 액세스 &lt;code&gt;initialize&lt;/code&gt; 만 동일한 객체, 방법.</target>
        </trans-unit>
        <trans-unit id="0585961ff52bc263b2aae75e4afaad8c36fd1ebd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;while&lt;/code&gt; loop executes while a condition is true:</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 조건이 참일 때 루프를 실행한다 :</target>
        </trans-unit>
        <trans-unit id="e9b0836b1f0b3b13904484b2b9174dbb59a9d3b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window_bits&lt;/code&gt; sets the size of the history buffer and should be between 8 and 15. Larger values of this parameter result in better compression at the expense of memory usage.</source>
          <target state="translated">&lt;code&gt;window_bits&lt;/code&gt; 은 이력 버퍼의 크기를 설정하고, 메모리 사용의 비용으로 더 압축이 매개 결과도 8 개 및 15보다 큰 값 사이에 있어야한다.</target>
        </trans-unit>
        <trans-unit id="5d0faf0daced0b4f5881301d933eebfb9b32cc8e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Object&lt;/em&gt; the user passed to the log message; not necessarily a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;객체&lt;/em&gt; 사용자가 로그 메시지로 전달; 반드시 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="91067329127c26ab5329337efa7fac801edd90e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Object&lt;/em&gt; the user passed to the log message; not necessarily a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;객체&lt;/em&gt; 사용자가 로그 메시지로 전달; 반드시 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="0990e049b224d470b3eb81f45c78305c354ddbdf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cert&lt;/em&gt;, &lt;em&gt;key&lt;/em&gt;, and &lt;em&gt;extra_chain_cert&lt;/em&gt; attributes are deprecated. It is recommended to use &lt;a href=&quot;sslcontext#method-i-add_certificate&quot;&gt;&lt;code&gt;add_certificate&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;em&gt;인증서&lt;/em&gt; , &lt;em&gt;키&lt;/em&gt; , 그리고 &lt;em&gt;extra_chain_cert의&lt;/em&gt; 속성은 사용되지 않습니다. 대신 &lt;a href=&quot;sslcontext#method-i-add_certificate&quot;&gt; &lt;code&gt;add_certificate&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="8067f95cffae0391ce27f58f97d0cbd39d1405a9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;entropy&lt;/em&gt; argument is (the lower bound of) an estimate of how much randomness is contained in &lt;em&gt;str&lt;/em&gt;, measured in bytes.</source>
          <target state="translated">&lt;em&gt;엔트로피&lt;/em&gt; 인수에 포함되어 얼마나 난수의 추정치 (가의 하한)는 &lt;em&gt;STR은&lt;/em&gt; , 바이트 단위로 측정.</target>
        </trans-unit>
        <trans-unit id="f5a11c6560b2108936761bb3bb9e5a6bbb0a6cf3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;find_all&lt;/em&gt; and &lt;em&gt;select&lt;/em&gt; methods are aliases. There is no performance benefit to either.</source>
          <target state="translated">&lt;em&gt;find_all&lt;/em&gt; 및 &lt;em&gt;선택&lt;/em&gt; 방법은 별칭이다. 둘 다 성능 이점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7017fcdba9c55604638b6e00d8e14fa44230ea6f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;flags&lt;/em&gt; argument may be a logical or of the flag values &lt;a href=&quot;process#WNOHANG&quot;&gt;&lt;code&gt;Process::WNOHANG&lt;/code&gt;&lt;/a&gt; (do not block if no child available) or &lt;a href=&quot;process#WUNTRACED&quot;&gt;&lt;code&gt;Process::WUNTRACED&lt;/code&gt;&lt;/a&gt; (return stopped children that haven't been reported). Not all flags are available on all platforms, but a flag value of zero will work on all platforms.</source>
          <target state="translated">&lt;em&gt;플래그&lt;/em&gt; 인수는 논리적 또는 플래그 값이 될 수 있습니다 &lt;a href=&quot;process#WNOHANG&quot;&gt; &lt;code&gt;Process::WNOHANG&lt;/code&gt; &lt;/a&gt; 나 (자식 가능한 경우 차단하지 않음) &lt;a href=&quot;process#WUNTRACED&quot;&gt; &lt;code&gt;Process::WUNTRACED&lt;/code&gt; &lt;/a&gt; (귀국일보고되지 않은 아이를 멈추지 않았다). 모든 플랫폼에서 모든 플래그를 사용할 수있는 것은 아니지만 플래그 값 0은 모든 플랫폼에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="893517e505a6ab29edfd76135dea21718f49c30b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;flags&lt;/em&gt; argument may be a logical or of the flag values &lt;code&gt;Process::WNOHANG&lt;/code&gt; (do not block if no child available) or &lt;code&gt;Process::WUNTRACED&lt;/code&gt; (return stopped children that haven't been reported). Not all flags are available on all platforms, but a flag value of zero will work on all platforms.</source>
          <target state="translated">&lt;em&gt;플래그&lt;/em&gt; 인수는 논리적 또는 플래그 값이 될 수 있습니다 &lt;code&gt;Process::WNOHANG&lt;/code&gt; 나 (자식 가능한 경우 차단하지 않음) &lt;code&gt;Process::WUNTRACED&lt;/code&gt; (귀국일보고되지 않은 아이를 멈추지 않았다). 모든 플랫폼에서 모든 플래그를 사용할 수있는 것은 아니지만 플래그 값 0은 모든 플랫폼에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a1bad9c73088b39a069e928103fa047cce26084a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;inject&lt;/em&gt; and &lt;em&gt;reduce&lt;/em&gt; methods are aliases. There is no performance benefit to either.</source>
          <target state="translated">&lt;em&gt;분사&lt;/em&gt; 및 &lt;em&gt;감소&lt;/em&gt; 방법은 별칭이다. 어느 쪽에도 성능상의 이점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="54ad937eeeeaaa1784250fea514abd7b2c79ab01" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;msg&lt;/em&gt; is a string.</source>
          <target state="translated">&lt;em&gt;MSG는&lt;/em&gt; 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="334314cdae89e6cc7a94a1fdee0accec8c44456a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;msg_src&lt;/em&gt; is a &lt;a href=&quot;socket/udpsource&quot;&gt;&lt;code&gt;Socket::UDPSource&lt;/code&gt;&lt;/a&gt; object. It is used for reply.</source>
          <target state="translated">&lt;em&gt;msg_src는&lt;/em&gt; A는 &lt;a href=&quot;socket/udpsource&quot;&gt; &lt;code&gt;Socket::UDPSource&lt;/code&gt; &lt;/a&gt; 객체입니다. 회신에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="04efe46d854825d75f81c54371db0bf476e32e75" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opts&lt;/em&gt; argument can be used to configure the generator. See the generate method for a more detailed explanation.</source>
          <target state="translated">&lt;em&gt;OPTS의&lt;/em&gt; 인수는 발전기를 구성 할 수 있습니다. 자세한 설명은 generate 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3b46f4268841f598a3f3c14dc8884cfd495d5c38" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opts&lt;/em&gt; argument is passed through to generate/parse respectively. See generate and parse for their documentation.</source>
          <target state="translated">&lt;em&gt;OPTS의&lt;/em&gt; 인수는 / 생성 각각 구문 분석을 통해 전달됩니다. 해당 문서의 생성 및 구문 분석을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ecae842d590c5a8d46647f34c20a74f1b27e5f18" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;timeout&lt;/em&gt; specify the seconds for timeout. Errno::ETIMEDOUT is raised when timeout occur.</source>
          <target state="translated">&lt;em&gt;제한 시간&lt;/em&gt; 은 &lt;em&gt;제한 시간 (&lt;/em&gt; 초)을 지정합니다. 시간 초과가 발생하면 Errno :: ETIMEDOUT이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f346b143fb574678d8fb93d71aa59e7319e723dc" translate="yes" xml:space="preserve">
          <source>The == and === operators and the eql? method have the same implementation for &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">== 및 === 연산자와 eql? 메소드는 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 과 동일한 구현을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="2aaff76d4a5abbd1db889855b23e6a1b6bda809a" translate="yes" xml:space="preserve">
          <source>The AAD must be set prior to encryption or decryption. In encryption mode, it must be set after calling &lt;a href=&quot;cipher#method-i-encrypt&quot;&gt;&lt;code&gt;Cipher#encrypt&lt;/code&gt;&lt;/a&gt; and setting &lt;a href=&quot;cipher#method-i-key-3D&quot;&gt;&lt;code&gt;Cipher#key=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt;&lt;code&gt;Cipher#iv=&lt;/code&gt;&lt;/a&gt;. When decrypting, the authenticated data must be set after key, iv and especially &lt;strong&gt;after&lt;/strong&gt; the authentication tag has been set. I.e. set it only after calling &lt;a href=&quot;cipher#method-i-decrypt&quot;&gt;&lt;code&gt;Cipher#decrypt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-key-3D&quot;&gt;&lt;code&gt;Cipher#key=&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt;&lt;code&gt;Cipher#iv=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cipher#method-i-auth_tag-3D&quot;&gt;&lt;code&gt;Cipher#auth_tag=&lt;/code&gt;&lt;/a&gt; first.</source>
          <target state="translated">암호화 또는 암호 해독 전에 AAD를 설정해야합니다. 암호화 모드에서는 &lt;a href=&quot;cipher#method-i-encrypt&quot;&gt; &lt;code&gt;Cipher#encrypt&lt;/code&gt; 를&lt;/a&gt; 호출 하고 &lt;a href=&quot;cipher#method-i-key-3D&quot;&gt; &lt;code&gt;Cipher#key=&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt; &lt;code&gt;Cipher#iv=&lt;/code&gt; &lt;/a&gt; 설정 한 후에 설정해야합니다 . 복호화되면, 인증 키 데이터, IV 이후에 설정되어야하고, 특히 &lt;strong&gt;후&lt;/strong&gt; 인증 태그가 설정되어있다. 즉 , &lt;a href=&quot;cipher#method-i-decrypt&quot;&gt; &lt;code&gt;Cipher#decrypt&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cipher#method-i-key-3D&quot;&gt; &lt;code&gt;Cipher#key=&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt; &lt;code&gt;Cipher#iv=&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cipher#method-i-auth_tag-3D&quot;&gt; &lt;code&gt;Cipher#auth_tag=&lt;/code&gt; &lt;/a&gt; 먼저 호출 한 후에 만 ​​설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="04edfc57ea608af539ad1c3883a7d15a2324940d" translate="yes" xml:space="preserve">
          <source>The ABI of the &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; 의 ABI .</target>
        </trans-unit>
        <trans-unit id="77f26ce579ef281be3a0c6dc9e7984d5dab70ebb" translate="yes" xml:space="preserve">
          <source>The CA certificate is saved to disk so it may be distributed to all the users of the keys this CA will sign.</source>
          <target state="translated">CA 인증서는 디스크에 저장되므로이 CA가 서명 한 모든 키 사용자에게 배포 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="898fd38dbbbc4a6553c4d4af648f03404dc76873" translate="yes" xml:space="preserve">
          <source>The CA signs keys through a Certificate Signing Request (CSR). The CSR contains the information necessary to identify the key.</source>
          <target state="translated">CA는 CSR (Certificate Signing Request)을 통해 키에 서명합니다. CSR에는 키를 식별하는 데 필요한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8e1ad7153b007766ae9dd7dcbf0746aa56a22a1" translate="yes" xml:space="preserve">
          <source>The Common Gateway Interface (&lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt;) is a simple protocol for passing an HTTP request from a web server to a standalone program, and returning the output to the web browser. Basically, a &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; program is called with the parameters of the request passed in either in the environment (GET) or via $stdin (POST), and everything it prints to $stdout is returned to the client.</source>
          <target state="translated">&lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; (Common Gateway Interface )는 웹 서버에서 독립 실행 형 프로그램으로 HTTP 요청을 전달하고 웹 브라우저에 출력을 반환하기위한 간단한 프로토콜입니다. 기본적으로 &lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 프로그램은 환경 (GET) 또는 $ stdin (POST)을 통해 전달 된 요청의 매개 변수를 사용하여 호출되고 $ stdout에 인쇄되는 모든 내용이 클라이언트에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="363917bf48fa944304e29524a51b4a32a30a2727" translate="yes" xml:space="preserve">
          <source>The Common Gateway Interface (CGI) is a simple protocol for passing an HTTP request from a web server to a standalone program, and returning the output to the web browser. Basically, a &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; program is called with the parameters of the request passed in either in the environment (GET) or via $stdin (POST), and everything it prints to $stdout is returned to the client.</source>
          <target state="translated">CGI (Common Gateway Interface)는 웹 서버에서 독립형 프로그램으로 HTTP 요청을 전달하고 출력을 웹 브라우저로 리턴하기위한 간단한 프로토콜입니다. 기본적으로 &lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 프로그램은 환경 (GET) 또는 $ stdin (POST)을 통해 전달 된 요청의 매개 변수와 함께 호출되며 $ stdout에 인쇄 된 모든 항목이 클라이언트에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6eb8f7adfde328683a357dad866ba010edc74990" translate="yes" xml:space="preserve">
          <source>The Content-Type header. Defaults to &amp;ldquo;text/html&amp;rdquo;</source>
          <target state="translated">Content-Type 헤더 기본적으로 &quot;text / html&quot;</target>
        </trans-unit>
        <trans-unit id="38a1441f948c26d62c572f9ed5b89761b664380d" translate="yes" xml:space="preserve">
          <source>The DNS host name or IP address to connect to.</source>
          <target state="translated">연결할 DNS 호스트 이름 또는 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="233b84fb975be4b0759902c4d1c5b53cedc2c231" translate="yes" xml:space="preserve">
          <source>The Forwardable module provides delegation of specified methods to a designated object, using the methods &lt;a href=&quot;forwardable#method-i-def_delegator&quot;&gt;&lt;code&gt;def_delegator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;forwardable#method-i-def_delegators&quot;&gt;&lt;code&gt;def_delegators&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Forwardable 모듈은 &lt;a href=&quot;forwardable#method-i-def_delegator&quot;&gt; &lt;code&gt;def_delegator&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;forwardable#method-i-def_delegators&quot;&gt; &lt;code&gt;def_delegators&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 지정된 메소드를 지정된 오브젝트에 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="65e6900ab809e986d0be1fd10c2a720caabe8469" translate="yes" xml:space="preserve">
          <source>The GIT commit hash for this Ruby.</source>
          <target state="translated">이 Ruby에 대한 GIT 커밋 해시입니다.</target>
        </trans-unit>
        <trans-unit id="508d526365ddc4af0090c78ed829c7d367f9a26e" translate="yes" xml:space="preserve">
          <source>The GIT commit hash for this ruby.</source>
          <target state="translated">이 루비에 대한 GIT 커밋 해시입니다.</target>
        </trans-unit>
        <trans-unit id="cc99740aa6c1c5cb159c12dd16c458734e149f6d" translate="yes" xml:space="preserve">
          <source>The HTTP result code string. For example, '302'. You can also determine the response type by examining which response subclass the response object is an instance of.</source>
          <target state="translated">HTTP 결과 코드 문자열 예를 들어 '302'입니다. 응답 오브젝트가 어떤 응답 서브 클래스인지 검사하여 응답 유형을 판별 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="94648f9f295a9c30978845563473e3229f1d409c" translate="yes" xml:space="preserve">
          <source>The HTTP result message sent by the server. For example, 'Not Found'.</source>
          <target state="translated">서버가 보낸 HTTP 결과 메시지. 예를 들어 '찾을 수 없음'입니다.</target>
        </trans-unit>
        <trans-unit id="a70f83bc251e93af0e84e147a25018fc002746b3" translate="yes" xml:space="preserve">
          <source>The HTTP status code as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, returned as the Status header. The values are:</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 으로서의 HTTP 상태 코드 로, Status 헤더로서 돌려 주어집니다. 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3c5dfd2656ff34ce0a1be626a982a190a1112aa2" translate="yes" xml:space="preserve">
          <source>The HTTP version supported by the server.</source>
          <target state="translated">서버에서 지원하는 HTTP 버전입니다.</target>
        </trans-unit>
        <trans-unit id="61e69eb402cda36ea351be884d910e43c886b99f" translate="yes" xml:space="preserve">
          <source>The ID-to-object mapping component maps dRuby object ids to the objects they refer to, and vice versa. The implementation to use can be specified as part of a DRb::DRbServer's configuration. The default implementation is provided by &lt;a href=&quot;drb/drbidconv&quot;&gt;&lt;code&gt;DRb::DRbIdConv&lt;/code&gt;&lt;/a&gt;. It uses an object's &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; id as its dRuby id. This means that the dRuby reference to that object only remains meaningful for the lifetime of the object's process and the lifetime of the object within that process. A modified implementation is provided by &lt;a href=&quot;drb/timeridconv&quot;&gt;&lt;code&gt;DRb::TimerIdConv&lt;/code&gt;&lt;/a&gt; in the file drb/timeridconv.rb. This implementation retains a local reference to all objects exported over dRuby for a configurable period of time (defaulting to ten minutes), to prevent them being garbage-collected within this time. Another sample implementation is provided in sample/name.rb in the main dRuby distribution. This allows objects to specify their own id or &amp;ldquo;name&amp;rdquo;. A dRuby reference can be made persistent across processes by having each process register an object using the same dRuby name.</source>
          <target state="translated">ID 대 오브젝트 맵핑 구성 요소는 dRuby 오브젝트 ID를 참조하는 오브젝트에 맵핑하고 그 반대로도 맵핑합니다. 사용할 구현은 DRb :: DRbServer 구성의 일부로 지정할 수 있습니다. 기본 구현은 &lt;a href=&quot;drb/drbidconv&quot;&gt; &lt;code&gt;DRb::DRbIdConv&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 그것은 개체의 사용 &lt;a href=&quot;objectspace&quot;&gt; &lt;code&gt;ObjectSpace&lt;/code&gt; &lt;/a&gt; 의 dRuby ID로 ID를. 이는 해당 오브젝트에 대한 dRuby 참조가 오브젝트 프로세스의 수명 및 해당 프로세스 내 오브젝트의 수명 동안 만 의미가 있음을 의미합니다. &lt;a href=&quot;drb/timeridconv&quot;&gt; &lt;code&gt;DRb::TimerIdConv&lt;/code&gt; &lt;/a&gt; 수정 된 구현을 제공합니다.drb / timeridconv.rb 파일에 있습니다. 이 구현은이 시간 내에 가비지 수집되지 않도록 구성 가능한 시간 (기본값 10 분) 동안 dRuby를 통해 내 보낸 모든 객체에 대한 로컬 참조를 유지합니다. 또 다른 샘플 구현이 기본 dRuby 배포의 sample / name.rb에 제공됩니다. 이를 통해 객체는 자신의 ID 또는&amp;ldquo;이름&amp;rdquo;을 지정할 수 있습니다. dRuby 참조는 각 프로세스가 동일한 dRuby 이름을 사용하여 오브젝트를 등록하도록함으로써 프로세스 전체에서 지속될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b36383816ad4ac6f080e7a0888358605b23be495" translate="yes" xml:space="preserve">
          <source>The IP address to connect to/used to connect to</source>
          <target state="translated">연결 / 연결에 사용되는 IP 주소</target>
        </trans-unit>
        <trans-unit id="2cff1c25997cbf9da073fa033b444f08979d3dc8" translate="yes" xml:space="preserve">
          <source>The Julian day number is in elapsed days since noon (Greenwich Mean &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;) on January 1, 4713 BCE (in the Julian calendar).</source>
          <target state="translated">율리우스 일 번호 정오 (그리니치 이후 경과 일에 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 1 월 1 일), 4713 BCE (율리우스 달력).</target>
        </trans-unit>
        <trans-unit id="b1b7741f156c3083ac165cb84708846804ae5c97" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for England and her colonies.</source>
          <target state="translated">잉글랜드와 그녀의 식민지 달력 개혁 날짜의 줄리안 일 수.</target>
        </trans-unit>
        <trans-unit id="4401b29153b6dcf3b8a2bca532c75c2ca44aa146" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for Italy and some catholic countries.</source>
          <target state="translated">이탈리아와 일부 가톨릭 국가의 달력 개혁 날짜의 율리우스 일 수</target>
        </trans-unit>
        <trans-unit id="26c186b48135c80bede4921514866e5114304511" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for the proleptic Gregorian calendar.</source>
          <target state="translated">다발성 그레고리력의 달력 개혁 날짜의 율리우스 일 수</target>
        </trans-unit>
        <trans-unit id="31992e6191b5d0fad4dce3a104832604a121d005" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for the proleptic Julian calendar.</source>
          <target state="translated">율리우스 력 달력의 달력 개혁 날짜의 율리우스 일 수</target>
        </trans-unit>
        <trans-unit id="7d3c936faad08a521d93eca25ecae765de019406" translate="yes" xml:space="preserve">
          <source>The LUP decomposition with pivoting always exists, even if the matrix is singular, so the constructor will never fail. The primary use of the LU decomposition is in the solution of square systems of simultaneous linear equations. This will fail if singular? returns true.</source>
          <target state="translated">행렬이 특이하더라도 피벗을 사용한 LUP 분해는 항상 존재하므로 생성자는 절대 실패하지 않습니다. LU 분해의 주요 용도는 동시 선형 방정식의 제곱 시스템의 솔루션입니다. 단수의 경우 실패합니까? true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f3758a73c06e4ac316832b097773332673f2b91" translate="yes" xml:space="preserve">
          <source>The Maximum Transmission Unit of the socket</source>
          <target state="translated">소켓의 최대 전송 단위</target>
        </trans-unit>
        <trans-unit id="cb17afedd560800e2112285239cd66a393e6bff6" translate="yes" xml:space="preserve">
          <source>The Nth group of the last successful match. May be &amp;gt; 1.</source>
          <target state="translated">마지막으로 성공한 N 번째 그룹입니다. &amp;gt; 1 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83dace11fcb931e8152b91187e52bd7e9f82b747" translate="yes" xml:space="preserve">
          <source>The OS code of current host</source>
          <target state="translated">현재 호스트의 OS 코드</target>
        </trans-unit>
        <trans-unit id="c87326dd11aaf6cae0afbba0d752aa23f0a5b38d" translate="yes" xml:space="preserve">
          <source>The Observer pattern (also known as publish/subscribe) provides a simple mechanism for one object to inform a set of interested third-party objects when its state changes.</source>
          <target state="translated">관찰자 패턴 (게시 / 구독이라고도 함)은 한 객체가 상태가 변경 될 때 관심있는 타사 객체 세트에 알리는 간단한 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="59271aab66fac180e540a87d8e86ad17e2ca466b" translate="yes" xml:space="preserve">
          <source>The PID of the started process can be obtained by &lt;a href=&quot;io#method-i-pid&quot;&gt;&lt;code&gt;IO#pid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">시작된 프로세스의 PID는 &lt;a href=&quot;io#method-i-pid&quot;&gt; &lt;code&gt;IO#pid&lt;/code&gt; &lt;/a&gt; 방법 으로 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d9b70eff4a05fff9f72478e607d65efd59515d6" translate="yes" xml:space="preserve">
          <source>The PrettyPrint::GroupQueue of groups in stack to be pretty printed</source>
          <target state="translated">스택에있는 그룹의 PrettyPrint :: GroupQueue</target>
        </trans-unit>
        <trans-unit id="988d9d8d1adb539e6c86727e214e3841cdce211c" translate="yes" xml:space="preserve">
          <source>The Ruby VM defers &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt; callbacks from running until it is safe for its internal data structures, but it does not know when it is safe for data structures in YOUR code. Ruby implements deferred signal handling by registering short C functions with only &lt;a href=&quot;http://man7.org/linux/man-pages/man7/signal-safety.7.html&quot;&gt;async-signal-safe functions&lt;/a&gt; as signal handlers. These short C functions only do enough tell the VM to run callbacks registered via &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt; later in the main Ruby &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ruby VM 은 내부 데이터 구조에 대해 안전 할 때까지 &lt;a href=&quot;signal#method-c-trap&quot;&gt; &lt;code&gt;Signal.trap&lt;/code&gt; &lt;/a&gt; 콜백 실행을 연기 하지만 코드의 데이터 구조에 대해 언제 안전한지 알 수 없습니다. Ruby 는 신호 처리기로 &lt;a href=&quot;http://man7.org/linux/man-pages/man7/signal-safety.7.html&quot;&gt;비동기 신호 안전 함수&lt;/a&gt; 만있는 짧은 C 함수를 등록하여 지연된 신호 처리를 구현 합니다. 이 짧은 C 함수는 VM이 나중에 기본 Ruby &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;signal#method-c-trap&quot;&gt; &lt;code&gt;Signal.trap&lt;/code&gt; 을&lt;/a&gt; 통해 등록 된 콜백을 실행하도록 지시하는 데 충분합니다 .</target>
        </trans-unit>
        <trans-unit id="c65094b3883d33520321f3a6a1e28b2704b39e27" translate="yes" xml:space="preserve">
          <source>The Ruby VM defers &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt; callbacks from running until it is safe for its internal data structures, but it does not know when it is safe for data structures in YOUR code. Ruby implements deferred signal handling by registering short C functions with only &lt;a href=&quot;http://man7.org/linux/man-pages/man7/signal-safety.7.html&quot;&gt;async-signal-safe functions&lt;/a&gt; as signal handlers. These short C functions only do enough tell the VM to run callbacks registered via &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt; later in the main VM loop.</source>
          <target state="translated">Ruby VM 은 내부 데이터 구조가 안전 할 때까지 &lt;a href=&quot;signal#method-c-trap&quot;&gt; &lt;code&gt;Signal.trap&lt;/code&gt; &lt;/a&gt; 콜백 실행을 연기 하지만 코드의 데이터 구조가 안전한시기는 알 수 없습니다. Ruby 는 신호 처리기로 &lt;a href=&quot;http://man7.org/linux/man-pages/man7/signal-safety.7.html&quot;&gt;비동기 신호 안전 기능&lt;/a&gt; 만있는 짧은 C 함수를 등록하여 지연된 신호 처리를 구현 합니다. 이 짧은 C 함수는 VM에 나중에 기본 VM 루프에서 &lt;a href=&quot;signal#method-c-trap&quot;&gt; &lt;code&gt;Signal.trap&lt;/code&gt; 을&lt;/a&gt; 통해 등록 된 콜백을 실행하도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="caa2c4b0e1b8a3deebadb3964389c534f6741b96" translate="yes" xml:space="preserve">
          <source>The Ruby code generated by &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; 에&lt;/a&gt; 의해 생성 된 루비 코드</target>
        </trans-unit>
        <trans-unit id="7056650172b93803d36fb3fea59ff2d6cd340161" translate="yes" xml:space="preserve">
          <source>The Ruby language version.</source>
          <target state="translated">Ruby 언어 버전입니다.</target>
        </trans-unit>
        <trans-unit id="9d9dbd735a9c3f3bf0b69bda4905b6c1c175eb7a" translate="yes" xml:space="preserve">
          <source>The Ruby programming language is large and complex and there are many security pitfalls often encountered by newcomers and experienced Rubyists alike.</source>
          <target state="translated">루비 프로그래밍 언어는 크고 복잡하며 초보자와 경험 많은 루비 스트 모두가 종종 직면하는 많은 보안 위험이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d7f8ede0c1a7253485d9b2e24579ecbf0bcc49f" translate="yes" xml:space="preserve">
          <source>The Ruby/zlib version string.</source>
          <target state="translated">Ruby / zlib 버전 문자열</target>
        </trans-unit>
        <trans-unit id="bbebaff14a7a9fc8ce51d98d649eeffd79c1cca7" translate="yes" xml:space="preserve">
          <source>The SHA for the git commit the bundler gem was built from.</source>
          <target state="translated">번 들러 gem이 만들어진 git commit에 대한 SHA.</target>
        </trans-unit>
        <trans-unit id="2d8a154e02f26fe327bb09a9cc8263cef628de8c" translate="yes" xml:space="preserve">
          <source>The SOCKS server configuration varies by implementation</source>
          <target state="translated">SOCKS 서버 구성은 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8fbbc24161242d0172cddbd30bf00b522f814a2c" translate="yes" xml:space="preserve">
          <source>The SVN revision for this ruby.</source>
          <target state="translated">이 루비에 대한 SVN 개정판.</target>
        </trans-unit>
        <trans-unit id="558db9093eee1bb0a79b8a62f49b595b032033fb" translate="yes" xml:space="preserve">
          <source>The Severity of the log message.</source>
          <target state="translated">로그 메시지의 심각도</target>
        </trans-unit>
        <trans-unit id="0bee4a6bbfba0f15da8ace6d72b5bc9874e54827" translate="yes" xml:space="preserve">
          <source>The Tuplespace manages access to the tuples it contains, ensuring mutual exclusion requirements are met.</source>
          <target state="translated">Tuplespace는 포함 된 튜플에 대한 액세스를 관리하여 상호 배제 요구 사항을 충족시킵니다.</target>
        </trans-unit>
        <trans-unit id="1836fca2664f81b0dd3b227a896ae34a0c60cd4d" translate="yes" xml:space="preserve">
          <source>The URL through which requests will be proxied</source>
          <target state="translated">요청이 프록시되는 URL</target>
        </trans-unit>
        <trans-unit id="a449cce1efe5e78f9f22327a401624d258698114" translate="yes" xml:space="preserve">
          <source>The W3CDTF format is defined here: &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;www.w3.org/TR/NOTE-datetime&lt;/a&gt;</source>
          <target state="translated">W3CDTF 형식은 여기에 정의되어 있습니다 : &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;www.w3.org/TR/NOTE-datetime&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1272956360b2b78baac232d5a2ad9edb901b5f40" translate="yes" xml:space="preserve">
          <source>The XLIST command is like the LIST command except that the flags returned refer to the function of the folder/mailbox, e.g. :Sent</source>
          <target state="translated">XLIST 명령은 반환 된 플래그가 폴더 / 사서함의 기능을 참조한다는 점을 제외하고는 LIST 명령과 같습니다 (예 : : Sent</target>
        </trans-unit>
        <trans-unit id="8b36b5d8c0f105241e00f59bb287ee6a12c429c5" translate="yes" xml:space="preserve">
          <source>The abbreviated month name (&amp;ldquo;Jan&amp;rdquo;)</source>
          <target state="translated">약식 월 이름 ( &quot;Jan&quot;)</target>
        </trans-unit>
        <trans-unit id="a5065f5bfc3fc0288b4e5f6c51f86a96af96d316" translate="yes" xml:space="preserve">
          <source>The abbreviated weekday name (&amp;ldquo;Sun&amp;rdquo;)</source>
          <target state="translated">축약 된 요일 이름 (&amp;ldquo;Sun&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="e3a3f1d4179e6f9b5bdc05c834caba9a13b06361" translate="yes" xml:space="preserve">
          <source>The above &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; indicates that the client should connect to ftp.example.com then cd to pub/ruby from the initial login directory.</source>
          <target state="translated">위의 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 는 클라이언트가 ftp.example.com에 연결 한 다음 초기 로그인 디렉토리에서 pub / ruby로 cd해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2a22b947ea526202d2287f434bcf99b31f241690" translate="yes" xml:space="preserve">
          <source>The above &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; indicates that the client should connect to ftp.example.com then cd to pub/ruby from the initial login directory.</source>
          <target state="translated">위의 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 는 클라이언트가 ftp.example.com에 연결 한 다음 초기 로그인 디렉토리에서 pub / ruby로 cd해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e3b32c029a4b9f1bb885b8452b8b307f81cbd6af" translate="yes" xml:space="preserve">
          <source>The above examples should be enough to learn how to use this class. If you have any questions, file a ticket at &lt;a href=&quot;http://bugs.ruby-lang.org&quot;&gt;bugs.ruby-lang.org&lt;/a&gt;.</source>
          <target state="translated">위의 예제는이 클래스를 사용하는 방법을 배우기에 충분해야합니다. 궁금한 점이 있으면 &lt;a href=&quot;http://bugs.ruby-lang.org&quot;&gt;bugs.ruby-lang.org에&lt;/a&gt; 티켓을 제출하십시오 .</target>
        </trans-unit>
        <trans-unit id="b81939b64de9ab21372971ec56687cb98d2b2ff9" translate="yes" xml:space="preserve">
          <source>The absolute path to the Ruby file where the instruction sequence was loaded from.</source>
          <target state="translated">명령 시퀀스가로드 된 Ruby 파일의 절대 경로입니다.</target>
        </trans-unit>
        <trans-unit id="9a07fbc23f2bbca36f51afc32ea4c6f925b0be8a" translate="yes" xml:space="preserve">
          <source>The access rights the indicated user has to the mailbox.</source>
          <target state="translated">표시된 사용자에게 사서함에 대한 액세스 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b93ca98b93fd2d49196390bf5628a7a8a5580d9" translate="yes" xml:space="preserve">
          <source>The actions default behavior. Can be :invoke or :revoke. It also accepts :force, :skip and :pretend to set the behavior and the respective option.</source>
          <target state="translated">동작 기본 동작입니다. : invoke 또는 : revoke 일 수 있습니다. 또한 : force, : skip 및 : pretend를 허용하여 동작 및 해당 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5d1a89a4e5d5ebd9bbef2700a7bb0ff38b4a1d48" translate="yes" xml:space="preserve">
          <source>The actual number of significant digits used in computation is usually larger than the specified number.</source>
          <target state="translated">계산에 사용 된 유효 자릿수의 실제 수는 일반적으로 지정된 수보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="7b4790282ea111e18d9fcda531fb100267c23857" translate="yes" xml:space="preserve">
          <source>The actual return value will be returned when invoking the method directly:</source>
          <target state="translated">메소드를 직접 호출 할 때 실제 리턴 값이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e19f432168e8892846d9e5db95e6f990db9e40fb" translate="yes" xml:space="preserve">
          <source>The address of the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server to connect to.</source>
          <target state="translated">연결할 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 서버 의 주소입니다 .</target>
        </trans-unit>
        <trans-unit id="a8a14af6b3db901a795ce06799ce7292de418147" translate="yes" xml:space="preserve">
          <source>The address of the proxy server, if one is configured.</source>
          <target state="translated">프록시 서버의 주소입니다 (구성된 경우).</target>
        </trans-unit>
        <trans-unit id="643f32d3b462312780b65b69ad83f7556f159229" translate="yes" xml:space="preserve">
          <source>The address of this function</source>
          <target state="translated">이 기능의 주소</target>
        </trans-unit>
        <trans-unit id="e0d1d4571c6f1de18be87cec4e487e2ef7810954" translate="yes" xml:space="preserve">
          <source>The address to connect to.</source>
          <target state="translated">연결할 주소입니다.</target>
        </trans-unit>
        <trans-unit id="a863ebbd15faf8a2c990400243738c5235dcc08f" translate="yes" xml:space="preserve">
          <source>The alias of $DEBUG. See $DEBUG above for further discussion.</source>
          <target state="translated">$ DEBUG의 별명. 자세한 내용은 위의 $ DEBUG를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="68c65dcbb8594e1c7b191c5eab0b9585d6948277" translate="yes" xml:space="preserve">
          <source>The alias to $/.</source>
          <target state="translated">별명은 $ /입니다.</target>
        </trans-unit>
        <trans-unit id="ab5d033b58cda495b65f83ee627ec414166f9755" translate="yes" xml:space="preserve">
          <source>The alias to $:.</source>
          <target state="translated">별명은 $ :입니다.</target>
        </trans-unit>
        <trans-unit id="83c5c675a027b8c15c2c9ebaab8f4ec404092fec" translate="yes" xml:space="preserve">
          <source>The alias to $;.</source>
          <target state="translated">별명은 $;입니다.</target>
        </trans-unit>
        <trans-unit id="ef6c63ce2d9b8a338b5c9997b8f9a4d9472faf56" translate="yes" xml:space="preserve">
          <source>The alias to the $&amp;ldquo;.</source>
          <target state="translated">$&amp;ldquo;의 별명.</target>
        </trans-unit>
        <trans-unit id="b45201ec2813a685a4d7428456207eead219dcb9" translate="yes" xml:space="preserve">
          <source>The alias to the $&amp;lt;.</source>
          <target state="translated">$ &amp;lt;의 별명.</target>
        </trans-unit>
        <trans-unit id="ed115efc8fb88a3557be2c535f935f00e27093f7" translate="yes" xml:space="preserve">
          <source>The alias to the $*.</source>
          <target state="translated">$ *의 별명.</target>
        </trans-unit>
        <trans-unit id="7d9e3e64cbc872c0f49be4be4e3f89e98fe6f41c" translate="yes" xml:space="preserve">
          <source>The alias to the $:.</source>
          <target state="translated">$ :의 별명.</target>
        </trans-unit>
        <trans-unit id="6147394cb7df6cb3e2cae3df13acc4361eeda6b0" translate="yes" xml:space="preserve">
          <source>The aliases added are &lt;code&gt;uint&lt;/code&gt; and &lt;code&gt;u_int&lt;/code&gt; (&lt;code&gt;unsigned int&lt;/code&gt;) and &lt;code&gt;ulong&lt;/code&gt; and &lt;code&gt;u_long&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;)</source>
          <target state="translated">추가 된 별명은 &lt;code&gt;uint&lt;/code&gt; 및 &lt;code&gt;u_int&lt;/code&gt; ( &lt;code&gt;unsigned int&lt;/code&gt; ) 및 &lt;code&gt;ulong&lt;/code&gt; 및 &lt;code&gt;u_long&lt;/code&gt; ( &lt;code&gt;unsigned long&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="f0de0a8261182844e4aa29bacd4213c8a6560fd0" translate="yes" xml:space="preserve">
          <source>The alignment size of a char</source>
          <target state="translated">문자의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="428eadc9bddd3a1345cca6f22b270fdbe8a46f3c" translate="yes" xml:space="preserve">
          <source>The alignment size of a double</source>
          <target state="translated">더블의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="7fbab9022ef4598ebfe3886caecef68a9c6e343f" translate="yes" xml:space="preserve">
          <source>The alignment size of a float</source>
          <target state="translated">플로트의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="1b2be3cf00a6366ab4d5132456c17b1f081acdd1" translate="yes" xml:space="preserve">
          <source>The alignment size of a intptr_t</source>
          <target state="translated">intptr_t의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="2ef625c85d3dcc8039bd92e57375f8f50bf31e20" translate="yes" xml:space="preserve">
          <source>The alignment size of a long</source>
          <target state="translated">긴 정렬 크기</target>
        </trans-unit>
        <trans-unit id="908f90d6c1bc9853813daa5005d5d36af9ae5398" translate="yes" xml:space="preserve">
          <source>The alignment size of a long long</source>
          <target state="translated">길고 긴 정렬 크기</target>
        </trans-unit>
        <trans-unit id="5337de7000ad05865ff9e746e57a13f78e39d4f9" translate="yes" xml:space="preserve">
          <source>The alignment size of a ptrdiff_t</source>
          <target state="translated">ptrdiff_t의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="e6258016a6683584d9e2ef007a73a632d65cda8b" translate="yes" xml:space="preserve">
          <source>The alignment size of a short</source>
          <target state="translated">쇼트의 얼라인먼트 사이즈</target>
        </trans-unit>
        <trans-unit id="7aecddc14f90226c0b1d29e6c73bdf38b53a5ad3" translate="yes" xml:space="preserve">
          <source>The alignment size of a size_t</source>
          <target state="translated">size_t의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="f25b65a634ce624fc8342ef0af3aba7cdd4d63d5" translate="yes" xml:space="preserve">
          <source>The alignment size of a ssize_t</source>
          <target state="translated">ssize_t의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="f17e0a1ddc8ce5763592fa5bcd9eec22f474ccbd" translate="yes" xml:space="preserve">
          <source>The alignment size of a uintptr_t</source>
          <target state="translated">uintptr_t의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="85233153f476be6c64fd2381c7855815ad57bb9b" translate="yes" xml:space="preserve">
          <source>The alignment size of a void*</source>
          <target state="translated">보이드의 정렬 크기 *</target>
        </trans-unit>
        <trans-unit id="baafc7ee2586a1dfffdd6b65a4de8671d6edcfaf" translate="yes" xml:space="preserve">
          <source>The alignment size of an int</source>
          <target state="translated">int의 정렬 크기</target>
        </trans-unit>
        <trans-unit id="6fa6c27b3f645b0a6b2ed5901479eedc01e1ada0" translate="yes" xml:space="preserve">
          <source>The altitude of the &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; above a reference sphere whose surface sits 100km below the WGS84 spheroid in centimeters as an unsigned 32bit integer</source>
          <target state="translated">표면이 부호없는 32 비트 정수로 센티미터 단위로 WGS84 스페 로이드 아래 100km 아래에있는 참조 구 위 의 &lt;a href=&quot;loc&quot;&gt; &lt;code&gt;LOC&lt;/code&gt; &lt;/a&gt; 고도</target>
        </trans-unit>
        <trans-unit id="6e13edbf68f08242b64c21b929c7697b2eaa876c" translate="yes" xml:space="preserve">
          <source>The amount of time allowed between reading two chunks from the socket. &lt;a href=&quot;../../../../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;persistent#attribute-i-read_timeout&quot;&gt;&lt;code&gt;read_timeout&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">소켓에서 두 청크를 읽는 데 허용되는 시간입니다. &lt;a href=&quot;persistent#attribute-i-read_timeout&quot;&gt; &lt;code&gt;read_timeout&lt;/code&gt; 을&lt;/a&gt; 통해 &lt;a href=&quot;../../../../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="273b269cc9902b9ccd796a73b83c5849eeedfcad" translate="yes" xml:space="preserve">
          <source>The amount of time to wait for a connection to be opened. &lt;a href=&quot;../../../../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;persistent#attribute-i-open_timeout&quot;&gt;&lt;code&gt;open_timeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">연결이 열리기를 기다리는 시간입니다. &lt;a href=&quot;persistent#attribute-i-open_timeout&quot;&gt; &lt;code&gt;open_timeout&lt;/code&gt; 을&lt;/a&gt; 통해 &lt;a href=&quot;../../../../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aaa9171952d6d7eb33a009f049fefd1e1b622f19" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length of the result string.</source>
          <target state="translated">인수 &lt;em&gt;n&lt;/em&gt; 은 결과 문자열의 길이를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="368cf3d54dbe29715eeed7e8343d84a2b65a9f39" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in bytes, of the random number to be generated. The length of the result string is about 4/3 of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">인수 &lt;em&gt;n&lt;/em&gt; 은 생성 될 난수의 길이 (바이트)를 지정합니다. 결과 문자열의 길이는 &lt;em&gt;n의&lt;/em&gt; 약 4/3입니다 .</target>
        </trans-unit>
        <trans-unit id="fef751f11a381deb77554c0fc43621439b77c320" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in bytes, of the random number to be generated. The length of the resulting hexadecimal string is twice of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">인수 &lt;em&gt;n&lt;/em&gt; 은 생성 될 난수의 길이 (바이트)를 지정합니다. 결과 16 진 문자열의 길이는 &lt;em&gt;n의&lt;/em&gt; 두 배입니다 .</target>
        </trans-unit>
        <trans-unit id="6c343ce86963f953e654522bc563527503943452" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in characters, of the alphanumeric string to be generated.</source>
          <target state="translated">인수 &lt;em&gt;n&lt;/em&gt; 은 생성 할 영숫자 문자열의 길이를 문자로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5de6005255cc2703b4c8d32dd0a92b839e29eb56" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;source&lt;/em&gt; specifies the array of characters from which to generate the string. The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in characters, of the string to be generated.</source>
          <target state="translated">인수 &lt;em&gt;소스&lt;/em&gt; 는 문자열을 생성 할 문자 배열을 지정합니다. 인수 &lt;em&gt;n&lt;/em&gt; 은 생성 할 문자열의 길이를 문자로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bed80582591e7ceaa4519b0f0a5ca15a7428ff05" translate="yes" xml:space="preserve">
          <source>The argument specification and the code to handle it are written in the same place.</source>
          <target state="translated">인수 스펙과이를 처리하는 코드는 같은 위치에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="7d1a08bace563a97347028298a5ae25f40f1fb84" translate="yes" xml:space="preserve">
          <source>The argument will be decomposed if it responds to to_ary. You should only define to_ary if you can use your object in place of an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인수가 to_ary에 응답하면 인수가 분해됩니다. &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 대신 객체를 사용할 수있는 경우에만 to_ary를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7cc9a2253d769b299eeff5d15bd13555507c8b03" translate="yes" xml:space="preserve">
          <source>The arguments are a list of sockets. The individual argument should be a socket or an array of sockets.</source>
          <target state="translated">인수는 소켓 목록입니다. 개별 인수는 소켓 또는 소켓 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6f430162f247bf2990786f918990a2f5cd60a6c7" translate="yes" xml:space="preserve">
          <source>The arguments are interpreted as similar to self.</source>
          <target state="translated">논쟁은 자기와 비슷한 것으로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="003bd7575839d042f83d36b46c96b2cb2d1ca104" translate="yes" xml:space="preserve">
          <source>The arguments are processed in the same way as for &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;Kernel#spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인수는 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;Kernel#spawn&lt;/code&gt; &lt;/a&gt; 과 동일한 방식으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="d381b5dd6257b08764b577f8da745743cea5a366" translate="yes" xml:space="preserve">
          <source>The arguments env, cmd and opts are passed to &lt;a href=&quot;open3#method-c-popen3&quot;&gt;&lt;code&gt;Open3.popen3&lt;/code&gt;&lt;/a&gt; except &lt;code&gt;opts[:stdin_data]&lt;/code&gt; and &lt;code&gt;opts[:binmode]&lt;/code&gt;. See &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">env, cmd 및 opts 인수 &lt;code&gt;opts[:stdin_data]&lt;/code&gt; 및 &lt;code&gt;opts[:binmode]&lt;/code&gt; 제외하고 &lt;a href=&quot;open3#method-c-popen3&quot;&gt; &lt;code&gt;Open3.popen3&lt;/code&gt; 에&lt;/a&gt; 전달됩니다 . &lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;Process.spawn&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a969870c3211bab6c582edb01209a8a7c93fc94" translate="yes" xml:space="preserve">
          <source>The arguments in both forms are:</source>
          <target state="translated">두 형식의 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6c68cba8d21340a565fd12535e4dbc06340961bf" translate="yes" xml:space="preserve">
          <source>The arguments passed to your script are stored in the &lt;code&gt;ARGV&lt;/code&gt;&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, one argument per element. &lt;code&gt;ARGF&lt;/code&gt; assumes that any arguments that aren't filenames have been removed from &lt;code&gt;ARGV&lt;/code&gt;. For example:</source>
          <target state="translated">스크립트에 전달 된 인수는 요소 당 하나의 인수 인 &lt;code&gt;ARGV&lt;/code&gt; &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; 에&lt;/a&gt; 저장됩니다 . &lt;code&gt;ARGF&lt;/code&gt; 는 파일 이름이 아닌 인수가 &lt;code&gt;ARGV&lt;/code&gt; 에서 제거 되었다고 가정합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db00bd0b8b49c4a507501e28aa3e118f335e36ea" translate="yes" xml:space="preserve">
          <source>The array argument must appear before any keyword arguments.</source>
          <target state="translated">배열 인수는 키워드 인수 앞에 나타나야합니다.</target>
        </trans-unit>
        <trans-unit id="a847ce8fca7f239a087f8e0724d8463b8e6e1f37" translate="yes" xml:space="preserve">
          <source>The array argument must be the last positional argument, it must appear before any keyword arguments.</source>
          <target state="translated">배열 인수는 마지막 위치 인수 여야하며 키워드 인수 앞에 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2c1e245e1529527ca68c45300f1ad276fee48bd3" translate="yes" xml:space="preserve">
          <source>The array argument will capture a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; as the last entry if a hash was sent by the caller after all positional arguments.</source>
          <target state="translated">배열 인수는 모든 위치 인수 후에 호출자가 해시를 보낸 경우 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 를 마지막 항목으로 캡처합니다 .</target>
        </trans-unit>
        <trans-unit id="6f3110539e612be8c0a4e0b6eb4cecd5b9b2bfe8" translate="yes" xml:space="preserve">
          <source>The array contains &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">배열은 &lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 객체를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="b96dde1dc5246776b3da66a202775ce0ea196fa4" translate="yes" xml:space="preserve">
          <source>The array contains the module names loaded by require.</source>
          <target state="translated">배열은 require에 의해로드 된 모듈 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="3e84df15ba3a0814efe89ee395700fb677546bb9" translate="yes" xml:space="preserve">
          <source>The array contains the module names loaded by require. Aliased to $&amp;ldquo;.</source>
          <target state="translated">배열에는 require에 의해로드 된 모듈 이름이 포함됩니다. $&amp;ldquo;로 별칭이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="cc1acd839f306ba629a219e6395721bab2fb8f15" translate="yes" xml:space="preserve">
          <source>The array is attached to &lt;em&gt;ancillarydata&lt;/em&gt; when it is instantiated. For example, &lt;a href=&quot;../basicsocket#method-i-recvmsg&quot;&gt;&lt;code&gt;BasicSocket#recvmsg&lt;/code&gt;&lt;/a&gt; attach the array when receives a SCM_RIGHTS control message and :scm_rights=&amp;gt;true option is given.</source>
          <target state="translated">어레이는 인스턴스화 될 때 &lt;em&gt;보조 데이터에&lt;/em&gt; 연결됩니다 . 예를 들어, &lt;a href=&quot;../basicsocket#method-i-recvmsg&quot;&gt; &lt;code&gt;BasicSocket#recvmsg&lt;/code&gt; &lt;/a&gt; 는 SCM_RIGHTS 제어 메시지를 수신하고 : scm_rights =&amp;gt; true 옵션이 제공 될 때 배열을 연결합니다.</target>
        </trans-unit>
        <trans-unit id="fd5b7f4f1d2f2823aaa04328eb514205ca5b8642" translate="yes" xml:space="preserve">
          <source>The array is changed instantly every time the block is called, not after the iteration is over.</source>
          <target state="translated">반복이 끝난 후가 아니라 블록이 호출 될 때마다 배열이 즉시 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="31f470dc7ded6bf5686e55c624b75702e518dc36" translate="yes" xml:space="preserve">
          <source>The array may not be changed instantly every time the block is called.</source>
          <target state="translated">블록이 호출 될 때마다 배열이 즉시 변경되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2450670e1e6d8ff5225acae4c8af12fd5e165b16" translate="yes" xml:space="preserve">
          <source>The array specifies a filename, flags and permission. The flags can be a string or an integer. If the flags is omitted or nil, File::RDONLY is assumed. The permission should be an integer. If the permission is omitted or nil, 0644 is assumed.</source>
          <target state="translated">배열은 파일 이름, 플래그 및 권한을 지정합니다. 플래그는 문자열 또는 정수일 수 있습니다. 플래그가 생략되거나 nil이면 File :: RDONLY로 가정됩니다. 권한은 정수 여야합니다. 권한이 생략되거나 nil이면 0644로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="b8f72f15d07e37cb093fe1f3651f667c09cc5c11" translate="yes" xml:space="preserve">
          <source>The assignment does not occur if the regexp is not a literal.</source>
          <target state="translated">정규 표현식이 리터럴이 아닌 경우 할당이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5598b4ba95ac9cdb19071317258a0ef07d84e37" translate="yes" xml:space="preserve">
          <source>The assignment does not occur if the regexp is placed at the right hand side.</source>
          <target state="translated">정규 표현식이 오른쪽에 배치되면 할당이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a5bb8388b3d3bdaa0ceee311e95c5ff12d4da09" translate="yes" xml:space="preserve">
          <source>The associated &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; can be changed in two different ways.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 의 관련 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 은 두 가지 다른 방식으로 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="185e6839a19addd4c6641828ab4222d98f69ecd8" translate="yes" xml:space="preserve">
          <source>The attributes and options can also be specified as a hash. In this case, options are specified as an array of values as described above, with the hash key of &amp;ldquo;VALUES&amp;rdquo;.</source>
          <target state="translated">속성 및 옵션을 해시로 지정할 수도 있습니다. 이 경우, 옵션은 해시 키가 &quot;VALUES&quot;인 위에서 설명한대로 값의 배열로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="64abf43005597573d3f65f3f6f3a07fb773d09d9" translate="yes" xml:space="preserve">
          <source>The attributes of the element are specified as a hash. The pseudo-attribute &amp;ldquo;PRETTY&amp;rdquo; can be used to specify that the generated HTML string should be indented. &amp;ldquo;PRETTY&amp;rdquo; can also be specified as a string as the sole argument to this method. The pseudo-attribute &amp;ldquo;DOCTYPE&amp;rdquo;, if given, is used as the leading DOCTYPE SGML tag; it should include the entire text of this tag, including angle brackets.</source>
          <target state="translated">요소의 속성은 해시로 지정됩니다. 의사 속성&amp;ldquo;PRETTY&amp;rdquo;를 사용하여 생성 된 HTML 문자열을 들여 쓰기하도록 지정할 수 있습니다. &quot;PRETTY&quot;는이 메소드의 유일한 인수로 문자열로 지정할 수도 있습니다. 의사 속성 &quot;DOCTYPE&quot;(제공된 경우)은 선행 DOCTYPE SGML 태그로 사용됩니다. 꺾쇠 괄호를 포함하여이 태그의 전체 텍스트를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="211a4dfcb99272d9b634ee602c4a5781cd45b0ad" translate="yes" xml:space="preserve">
          <source>The attributes of the element can be specified as three arguments, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, and &lt;code&gt;maxlength&lt;/code&gt;. &lt;code&gt;maxlength&lt;/code&gt; is the maximum length of the file's &lt;em&gt;name&lt;/em&gt;, not of the file's &lt;em&gt;contents&lt;/em&gt;.</source>
          <target state="translated">요소의 속성은 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;maxlength&lt;/code&gt; 의 세 가지 인수로 지정할 수 있습니다 . &lt;code&gt;maxlength&lt;/code&gt; 는 파일 &lt;em&gt;내용이&lt;/em&gt; 아닌 파일 &lt;em&gt;이름&lt;/em&gt; 의 최대 길이입니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eab875713776c4b3c1629b9aa90b7f5480526d6b" translate="yes" xml:space="preserve">
          <source>The attributes of the element can be specified as three arguments, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, and &lt;code&gt;checked&lt;/code&gt;. &lt;code&gt;checked&lt;/code&gt; is a boolean value; if true, the CHECKED attribute will be included in the element.</source>
          <target state="translated">요소의 속성은 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; 및 &lt;code&gt;checked&lt;/code&gt; 의 세 가지 인수로 지정할 수 있습니다 . &lt;code&gt;checked&lt;/code&gt; 은 부울 값입니다. true 인 경우, CHECKED 속성이 요소에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4d064f7ee913ec7563324a6f91d93d72d0c5b9ae" translate="yes" xml:space="preserve">
          <source>The attributes of the element can be specified as two arguments, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">요소의 속성은 &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;value&lt;/code&gt; 의 두 인수로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af939eefce32fbd6e38d94978be01ed02e6887a0" translate="yes" xml:space="preserve">
          <source>The available colors are:</source>
          <target state="translated">사용 가능한 색상은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="54ed46c150718473d8504c434e30cd577b337e90" translate="yes" xml:space="preserve">
          <source>The available options are:</source>
          <target state="translated">사용 가능한 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fff7fd18df893d6ec3ae254e4f97f001d357746a" translate="yes" xml:space="preserve">
          <source>The backslash character &lt;code&gt;\&lt;/code&gt; can be used to escape &lt;code&gt;^&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; and is otherwise ignored unless it appears at the end of a range or the end of the &lt;code&gt;from_str&lt;/code&gt; or &lt;code&gt;to_str&lt;/code&gt;:</source>
          <target state="translated">백 슬래시 문자 &lt;code&gt;\&lt;/code&gt; 는 &lt;code&gt;^&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 를 이스케이프하는 데 사용될 수 있으며 범위의 끝 이나 &lt;code&gt;from_str&lt;/code&gt; 또는 &lt;code&gt;to_str&lt;/code&gt; 의 끝에 나타나지 않으면 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="f719d7ba11f8b3bcaa0b04942d83432b647e6cf3" translate="yes" xml:space="preserve">
          <source>The bang methods (&lt;code&gt;!&lt;/code&gt; at the end of the method name) are called and executed just like any other method. However, by convention, a method with an exclamation point or bang is considered dangerous. In Ruby's core library the dangerous method implies that when a method ends with a bang (&lt;code&gt;!&lt;/code&gt;), it indicates that unlike its non-bang equivalent, permanently modifies its receiver. Almost always, the Ruby core library will have a non-bang counterpart (method name which does NOT end with &lt;code&gt;!&lt;/code&gt;) of every bang method (method name which does end with &lt;code&gt;!&lt;/code&gt;) that does not modify the receiver. This convention is typically true for the Ruby core library but may or may not hold true for other Ruby libraries.</source>
          <target state="translated">뱅 메소드 ( 메소드 이름 끝에 &lt;code&gt;!&lt;/code&gt; )는 다른 메소드와 마찬가지로 호출되고 실행됩니다. 그러나 관례 적으로 느낌표 나 뱅이있는 방법은 위험한 것으로 간주됩니다. Ruby의 핵심 라이브러리에서 위험한 메소드는 메소드가 bang ( &lt;code&gt;!&lt;/code&gt; )으로 끝나는 경우, bang 이 아닌 것과 달리 수신자를 영구적으로 수정한다는 것을 나타냅니다. 거의 항상 루비 코어 라이브러리는 비 뱅 대응 (끝나지 않습니다 메소드 이름이있을 것이다 &lt;code&gt;!&lt;/code&gt; ) 모든 쾅 방법 (과 끝을 수행하는 방법 이름으로 &lt;code&gt;!&lt;/code&gt; 수신기를 수정하지 않습니다). 이 규칙은 일반적으로 Ruby 코어 라이브러리에는 적용되지만 다른 Ruby 라이브러리에는 적용되거나 적용되지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d00eba736389975b9ea1394b7ef1fc3a0cab5665" translate="yes" xml:space="preserve">
          <source>The banner for this class. You can customize it if you are invoking the thor class by another ways which is not the Bundler::Thor::Runner.</source>
          <target state="translated">이 클래스의 배너입니다. Bundler :: Thor :: Runner가 아닌 다른 방법으로 thor 클래스를 호출하는 경우이를 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8e8b440d3a981071c9a52456390602c83e19bf1" translate="yes" xml:space="preserve">
          <source>The banner for this class. You can customize it if you are invoking the thor class by another ways which is not the Bundler::Thor::Runner. It receives the command that is going to be invoked and a boolean which indicates if the namespace should be displayed as arguments.</source>
          <target state="translated">이 클래스의 배너입니다. Bundler :: Thor :: Runner가 아닌 다른 방법으로 thor 클래스를 호출하는 경우이를 사용자 정의 할 수 있습니다. 호출 될 명령과 네임 스페이스를 인수로 표시해야하는지 여부를 나타내는 부울을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="3b5d83e4f2801106914e30a78744d00980a218b0" translate="yes" xml:space="preserve">
          <source>The base class representing ASN.1 structures is &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; offers attributes to read and set the &lt;em&gt;tag&lt;/em&gt;, the &lt;em&gt;tag_class&lt;/em&gt; and finally the &lt;em&gt;value&lt;/em&gt; of a particular ASN.1 item. Upon parsing, any tagged values (implicit or explicit) will be represented by &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; instances because their &amp;ldquo;real type&amp;rdquo; can only be determined using out-of-band information from the ASN.1 type declaration. Since this information is normally known when encoding a type, all sub-classes of &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; offer an additional attribute &lt;em&gt;tagging&lt;/em&gt; that allows to encode a value implicitly (&lt;code&gt;:IMPLICIT&lt;/code&gt;) or explicitly (&lt;code&gt;:EXPLICIT&lt;/code&gt;).</source>
          <target state="translated">ASN.1 구조를 나타내는 기본 클래스는 &lt;a href=&quot;asn1/asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;asn1/asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 는 &lt;em&gt;tag&lt;/em&gt; , &lt;em&gt;tag_class&lt;/em&gt; 및 마지막으로 특정 ASN.1 항목 의 &lt;em&gt;값&lt;/em&gt; 을 읽고 설정하는 속성을 제공합니다 . 구문 분석 할 때 태그가 지정된 값 (암시 적 또는 명시 적)은 ASN.1 유형 선언의 대역 외 정보 만 사용하여 &quot;실제 유형&quot;을 결정할 수 있기 때문에 &lt;a href=&quot;asn1/asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 인스턴스 로 표시됩니다 . 이 정보는 일반적으로 유형을 인코딩 할 때 알려져 &lt;a href=&quot;asn1/asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 모든 하위 클래스 는 값을 암시 적으로 ( &lt;code&gt;:IMPLICIT&lt;/code&gt; ) 또는 명시 적으로 ( &lt;code&gt;:EXPLICIT&lt;/code&gt; ) 인코딩 할 수 있는 추가 속성 &lt;em&gt;태그&lt;/em&gt; 를 제공합니다 .).</target>
        </trans-unit>
        <trans-unit id="cf1f38b436af7e3f80c952dac16336116d00219f" translate="yes" xml:space="preserve">
          <source>The base exception for &lt;a href=&quot;../json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; errors.</source>
          <target state="translated">&lt;a href=&quot;../json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 오류에 대한 기본 예외입니다 .</target>
        </trans-unit>
        <trans-unit id="d1aea5edfbd2da6d50e31986592011c3a2908bf2" translate="yes" xml:space="preserve">
          <source>The base of the floating point, or number of unique digits used to represent the number.</source>
          <target state="translated">부동 소수점의 기수 또는 숫자를 나타내는 데 사용되는 고유 숫자의 수입니다.</target>
        </trans-unit>
        <trans-unit id="b389f009c0cfa5e603f83d7740d4a99deaddcfac" translate="yes" xml:space="preserve">
          <source>The basename of the program invoking the thor class.</source>
          <target state="translated">thor 클래스를 호출하는 프로그램의 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="24569f0e94cc1657b411b0f9fd01b4a0f79627bb" translate="yes" xml:space="preserve">
          <source>The best way to improve performance is to significantly reduce the amount of backtracking needed. For this case, instead of individually matching 29 optional &lt;em&gt;a&lt;/em&gt;s, a range of optional &lt;em&gt;a&lt;/em&gt;s can be matched all at once with &lt;em&gt;a{0,29}&lt;/em&gt;:</source>
          <target state="translated">성능을 향상시키는 가장 좋은 방법은 필요한 역 추적을 크게 줄이는 것입니다. 이 경우, 대신에 각각 29 옵션 정합 S, 임의의 범위 번에 함께들 모두 매칭 될 수 &lt;em&gt;{0,29}&lt;/em&gt; :&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f43bf501efbca2d61a7901a63524f0013a2480d4" translate="yes" xml:space="preserve">
          <source>The best way to use &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; is invoking it after nonblocking methods such as &lt;a href=&quot;io#method-i-read_nonblock&quot;&gt;&lt;code&gt;read_nonblock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-write_nonblock&quot;&gt;&lt;code&gt;write_nonblock&lt;/code&gt;&lt;/a&gt;, etc. The methods raise an exception which is extended by &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt;. The modules notify how the caller should wait with &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; is raised, the caller should wait for reading. If &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt; is raised, the caller should wait for writing.</source>
          <target state="translated">&lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 를 사용하는 가장 좋은 방법 은 &lt;a href=&quot;io#method-i-read_nonblock&quot;&gt; &lt;code&gt;read_nonblock&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-write_nonblock&quot;&gt; &lt;code&gt;write_nonblock&lt;/code&gt; &lt;/a&gt; 등과 같은 비 차단 메소드 후에 호출하는 것입니다 . 메소드는 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 의해 확장되는 예외를 발생 시킵니다 . 모듈은 호출자가 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; 로&lt;/a&gt; 대기해야하는 방법을 알려줍니다 . 경우 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 발생, 호출자는 읽기 위해 기다려야합니다. 경우 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 발생, 호출자는 쓰기 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="5dcedde66a6cbbd9dd1aa5d5b696631bb0b4e56e" translate="yes" xml:space="preserve">
          <source>The best way to use &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; is invoking it after nonblocking methods such as read_nonblock, write_nonblock, etc. The methods raise an exception which is extended by &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt;. The modules notify how the caller should wait with &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; is raised, the caller should wait for reading. If &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt; is raised, the caller should wait for writing.</source>
          <target state="translated">&lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 를 사용하는 가장 좋은 방법 은 read_nonblock, write_nonblock 등과 같은 비 차단 메소드 후에 호출하는 것입니다. 메소드는 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 의해 확장되는 예외를 발생 시킵니다 . 모듈은 호출자가 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; 로&lt;/a&gt; 대기해야하는 방법을 알려줍니다 . 경우 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 발생, 호출자는 읽기 위해 기다려야합니다. 경우 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 발생, 호출자는 쓰기 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="5af55dda94f677952cc47baaabd93db610a7a132" translate="yes" xml:space="preserve">
          <source>The best way to use &lt;code&gt;IO.select&lt;/code&gt; is invoking it after nonblocking methods such as &lt;code&gt;read_nonblock&lt;/code&gt;, &lt;code&gt;write_nonblock&lt;/code&gt;, etc. The methods raise an exception which is extended by &lt;code&gt;IO::WaitReadable&lt;/code&gt; or &lt;code&gt;IO::WaitWritable&lt;/code&gt;. The modules notify how the caller should wait with &lt;code&gt;IO.select&lt;/code&gt;. If &lt;code&gt;IO::WaitReadable&lt;/code&gt; is raised, the caller should wait for reading. If &lt;code&gt;IO::WaitWritable&lt;/code&gt; is raised, the caller should wait for writing.</source>
          <target state="translated">&lt;code&gt;IO.select&lt;/code&gt; 를 사용하는 가장 좋은 방법 은 &lt;code&gt;read_nonblock&lt;/code&gt; , &lt;code&gt;write_nonblock&lt;/code&gt; 등과 같은 비 차단 메소드 후에 호출하는 것입니다 . 메소드는 &lt;code&gt;IO::WaitReadable&lt;/code&gt; 또는 &lt;code&gt;IO::WaitWritable&lt;/code&gt; 확장되는 예외를 발생 시킵니다 . 모듈은 호출자가 &lt;code&gt;IO.select&lt;/code&gt; 로 대기해야하는 방법을 알려줍니다 . 경우 &lt;code&gt;IO::WaitReadable&lt;/code&gt; 발생, 호출자는 읽기 위해 기다려야합니다. 경우 &lt;code&gt;IO::WaitWritable&lt;/code&gt; 발생, 호출자는 쓰기 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="d9ac848ed450c8b88c12390ba2b9fd6314c20839" translate="yes" xml:space="preserve">
          <source>The block argument is always last when sending a message to a method. A block is sent to a method using &lt;code&gt;do ... end&lt;/code&gt; or &lt;code&gt;{ ... }&lt;/code&gt;:</source>
          <target state="translated">메소드에 메시지를 보낼 때 블록 인수는 항상 마지막입니다. &lt;code&gt;do ... end&lt;/code&gt; 또는 &lt;code&gt;{ ... }&lt;/code&gt; 사용하여 블록이 메소드로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="61fa2a3ff314cf9786a9fb476a0c5d4504c65f0c" translate="yes" xml:space="preserve">
          <source>The block argument is indicated by &lt;code&gt;&amp;amp;&lt;/code&gt; and must come last:</source>
          <target state="translated">블록 인수는 &lt;code&gt;&amp;amp;&lt;/code&gt; 로 표시되며 마지막에 와야합니다.</target>
        </trans-unit>
        <trans-unit id="1820c4b7b87f029bb8931e9893c9814e6ca9531f" translate="yes" xml:space="preserve">
          <source>The block argument sends a closure from the calling scope to the method.</source>
          <target state="translated">블록 인수는 호출 범위에서 메소드로 클로저를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="00e6f55fb5427091433fe8176d3ef9c9718643f6" translate="yes" xml:space="preserve">
          <source>The block form allows you to create potentially complex log messages, but to delay their evaluation until and unless the message is logged. For example, if we have the following:</source>
          <target state="translated">블록 형식을 사용하면 잠재적으로 복잡한 로그 메시지를 만들 수 있지만 메시지가 기록 될 때까지 그리고 메시지가 기록되지 않으면 평가가 지연됩니다. 예를 들어 다음과 같은 경우</target>
        </trans-unit>
        <trans-unit id="0302be64187c53cf47dd4ada0541edc2f20eced7" translate="yes" xml:space="preserve">
          <source>The block is called repeatedly with two arguments: The first is the option name. The second is the argument which followed it (if any). Example: ('&amp;ndash;opt', 'value')</source>
          <target state="translated">블록은 두 개의 인수로 반복해서 호출됩니다. 첫 번째는 옵션 이름입니다. 두 번째는 그 뒤를 따르는 주장입니다 (있는 경우). 예 : ( '&amp;ndash;opt', 'value')</target>
        </trans-unit>
        <trans-unit id="34dc9f36879cbfeaedbd60315448179c61805dd9" translate="yes" xml:space="preserve">
          <source>The block is called the length of the receiver enumerator minus one.</source>
          <target state="translated">블록은 수신자 열거 자의 길이에서 1을 뺀 것입니다.</target>
        </trans-unit>
        <trans-unit id="229ce1a940e89db547d20f5b29d7cb4270f9f628" translate="yes" xml:space="preserve">
          <source>The block is used to generate spaces. {|width| ' ' * width} is used if it is not given.</source>
          <target state="translated">블록은 공간을 생성하는 데 사용됩니다. {| 폭 | 지정되지 않은 경우 ''* width}가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6eb86c6b7265ff96ae5d80b9069f6f8aeeb8bdd5" translate="yes" xml:space="preserve">
          <source>The block must implement a comparison between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and return an integer less than 0 when &lt;code&gt;b&lt;/code&gt; follows &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; when &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equivalent, or an integer greater than 0 when &lt;code&gt;a&lt;/code&gt; follows &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">블록 간의 비교를 구현해야 및 &lt;code&gt;b&lt;/code&gt; 때 0보다 작은 정수 리턴 &lt;code&gt;b&lt;/code&gt; 다음 , &lt;code&gt;0&lt;/code&gt; 시 와 &lt;code&gt;b&lt;/code&gt; 는 0보다 큰 정수 동일하거나 &lt;code&gt;a&lt;/code&gt; 다음과 &lt;code&gt;b&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08330254aa47594a48de4805df6182824ff5f77c" translate="yes" xml:space="preserve">
          <source>The block parameter will be an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object in the parent and &lt;code&gt;nil&lt;/code&gt; in the child. The parent's &lt;code&gt;IO&lt;/code&gt; object will be connected to the child's $stdin and $stdout. The subprocess will be terminated at the end of the block.</source>
          <target state="translated">블록 매개 변수는 상위 의 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 오브젝트이고 하위의 경우 &lt;code&gt;nil&lt;/code&gt; 입니다. 부모의 &lt;code&gt;IO&lt;/code&gt; 개체는 자식의 $ stdin 및 $ stdout에 연결됩니다. 하위 프로세스는 블록 끝에서 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="87567e7eb16e164e3375e1c3eebdb6b859fd1cfe" translate="yes" xml:space="preserve">
          <source>The block receives &lt;em&gt;msg&lt;/em&gt; and &lt;em&gt;msg_src&lt;/em&gt;. &lt;em&gt;msg&lt;/em&gt; is a string which is the payload of the received packet. &lt;em&gt;msg_src&lt;/em&gt; is a &lt;a href=&quot;socket/udpsource&quot;&gt;&lt;code&gt;Socket::UDPSource&lt;/code&gt;&lt;/a&gt; object which is used for reply.</source>
          <target state="translated">블록은 &lt;em&gt;msg&lt;/em&gt; 및 &lt;em&gt;msg_src를받습니다&lt;/em&gt; . &lt;em&gt;msg&lt;/em&gt; 는 수신 된 패킷의 페이로드 인 문자열입니다. &lt;em&gt;msg_src&lt;/em&gt; 는 응답에 사용되는 &lt;a href=&quot;socket/udpsource&quot;&gt; &lt;code&gt;Socket::UDPSource&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="e0138ec2705667bc0648dbca5b8680b27fa3d8f1" translate="yes" xml:space="preserve">
          <source>The block should return an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; that can be written to the logging device via &lt;code&gt;write&lt;/code&gt;. The default formatter is used when no formatter is set.</source>
          <target state="translated">블록은 반환해야 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 를 통해 기록 장치에 기록 될 수 &lt;code&gt;write&lt;/code&gt; . 포맷터가 설정되지 않은 경우 기본 포맷터가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a91167100796d1ff6d0019b62d3807b5b42555bc" translate="yes" xml:space="preserve">
          <source>The block should return an &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; that can be written to the logging device via &lt;code&gt;write&lt;/code&gt;. The default formatter is used when no formatter is set.</source>
          <target state="translated">블록은 반환해야 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 를 통해 기록 장치에 기록 될 수 &lt;code&gt;write&lt;/code&gt; . 포맷터가 설정되지 않은 경우 기본 포맷터가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2d39b9a4f3625fb4daa2aafc4fbfbcaf6b586790" translate="yes" xml:space="preserve">
          <source>The body is provided by the passed-in no-argument block</source>
          <target state="translated">본문은 전달 된 인수 없음 블록에 의해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="d5a5cbfc33836d1be99b89126db024a49cf84ffe" translate="yes" xml:space="preserve">
          <source>The body of the element is provided by the passed-in no-argument block.</source>
          <target state="translated">요소의 본문은 전달 된 인수 없음 블록에 의해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9094192a69bdfac107a364a1f4f72048181bef13" translate="yes" xml:space="preserve">
          <source>The body of the element is the string returned by the no-argument block passed in.</source>
          <target state="translated">요소의 본문은 전달 된 인수 없음 블록이 리턴 한 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="74d3fb57d923249f4a2137b63d02b5f9d8d4840f" translate="yes" xml:space="preserve">
          <source>The body of the html element is supplied as a block.</source>
          <target state="translated">html 요소의 본문은 블록으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="439053ca66c00ca776eb825c64ede5f771063752" translate="yes" xml:space="preserve">
          <source>The boolean argument &lt;em&gt;padding&lt;/em&gt; specifies the padding. If it is false or nil, padding is not generated. Otherwise padding is generated. By default, padding is not generated because &amp;ldquo;=&amp;rdquo; may be used as a URL delimiter.</source>
          <target state="translated">부울 인수 &lt;em&gt;패딩&lt;/em&gt; 은 &lt;em&gt;패딩을&lt;/em&gt; 지정합니다. False 또는 nil 인 경우 패딩이 생성되지 않습니다. 그렇지 않으면 패딩이 생성됩니다. 기본적으로 &quot;=&quot;가 URL 구분 기호로 사용될 수 있으므로 패딩이 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="35a2de11b1ae8f6facc632714ceb3b0f89c488be" translate="yes" xml:space="preserve">
          <source>The built-in subclasses of &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 의 내장 서브 클래스 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="38eef010320d4da5c4c6b3697de9b47fd2f5d351" translate="yes" xml:space="preserve">
          <source>The bytes are caused by invalid_byte_sequence error. When invalid_byte_sequence error, some bytes are discarded and some bytes are buffered to be converted later. The latter bytes can be put back. It can be observed by &lt;a href=&quot;invalidbytesequenceerror#method-i-readagain_bytes&quot;&gt;&lt;code&gt;Encoding::InvalidByteSequenceError#readagain_bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;converter#method-i-primitive_errinfo&quot;&gt;&lt;code&gt;Encoding::Converter#primitive_errinfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">바이트는 invalid_byte_sequence 오류로 인해 발생합니다. invalid_byte_sequence 오류가 발생하면 일부 바이트가 삭제되고 일부 바이트는 버퍼링되어 나중에 변환됩니다. 후자의 바이트는 되돌릴 수 있습니다. 그것은 관찰 될 수있다 &lt;a href=&quot;invalidbytesequenceerror#method-i-readagain_bytes&quot;&gt; &lt;code&gt;Encoding::InvalidByteSequenceError#readagain_bytes&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;converter#method-i-primitive_errinfo&quot;&gt; &lt;code&gt;Encoding::Converter#primitive_errinfo&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="daa696df2cf1639f446916c6f010b5e4902e7515" translate="yes" xml:space="preserve">
          <source>The cache dir to be used by the plugins for storage</source>
          <target state="translated">플러그인이 저장을 위해 사용하는 캐시 디렉토리</target>
        </trans-unit>
        <trans-unit id="06608fbf2cd0478a9af6a11f314317108cfa7930" translate="yes" xml:space="preserve">
          <source>The cache directory for plugin stuffs</source>
          <target state="translated">플러그인을위한 캐시 디렉토리</target>
        </trans-unit>
        <trans-unit id="00cefa3c2f26824f9d1348492657c667df4b4cef" translate="yes" xml:space="preserve">
          <source>The calendar date is a particular day of a calendar year, identified by its ordinal number within a calendar month within that year.</source>
          <target state="translated">달력 날짜는 달력 연도의 특정 날짜이며 해당 연도의 달력 월 내 서수로 식별됩니다.</target>
        </trans-unit>
        <trans-unit id="fe00e4096ebdd3114a9c60325df57c26076f3e31" translate="yes" xml:space="preserve">
          <source>The calendar week is a seven day period within a calendar year, starting on a Monday and identified by its ordinal number within the year; the first calendar week of the year is the one that includes the first Thursday of that year. In the Gregorian calendar, this is equivalent to the week which includes January 4.</source>
          <target state="translated">달력주는 월요일부터 시작하여 연도의 서수로 식별되는 달력 연도 내 7 일 기간입니다. 연도의 첫 번째주는 해당 연도의 첫 번째 목요일을 포함하는 주입니다. 그레고리력에서 1 월 4 일을 포함하는 주와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="73bbcb195c8c35076192e103f06a6a1fe219c547" translate="yes" xml:space="preserve">
          <source>The callback for additional certificate verification. It is invoked for each untrusted certificate in the chain.</source>
          <target state="translated">추가 인증서 확인을위한 콜백 체인의 신뢰할 수없는 각 인증서마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b8652dce30a1e9e7fa5aaa1e2ff69cd9847bfdb2" translate="yes" xml:space="preserve">
          <source>The callback is deprecated. This does not work with recent versions of &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;sslcontext#method-i-ecdh_curves-3D&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLContext#ecdh_curves=&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">콜백은 더 이상 사용되지 않습니다. 최신 버전의 &lt;a href=&quot;../../openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 에서는 작동하지 않습니다 . 사용 &lt;a href=&quot;sslcontext#method-i-ecdh_curves-3D&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLContext#ecdh_curves=&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="2c07764559a171fd2ab980ee60ce2ce45cfd154d" translate="yes" xml:space="preserve">
          <source>The callback is invoked with a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; and must return an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing an &lt;a href=&quot;../x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;../pkey&quot;&gt;&lt;code&gt;OpenSSL::PKey&lt;/code&gt;&lt;/a&gt;. If any other value is returned the handshake is suspended.</source>
          <target state="translated">콜백은 &lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 과 함께 호출되며 &lt;a href=&quot;../x509/certificate&quot;&gt; &lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../pkey&quot;&gt; &lt;code&gt;OpenSSL::PKey&lt;/code&gt; &lt;/a&gt; 포함하는 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 리턴해야합니다 . 다른 값이 반환되면 핸드 셰이크가 일시 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="979b1042f8bc7d173dc3d43cb6f817ce4aab002d" translate="yes" xml:space="preserve">
          <source>The callback is invoked with an &lt;a href=&quot;sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">콜백은 &lt;a href=&quot;sslcontext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; 으로&lt;/a&gt; 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="5bbc41b5b11287c095c386c033d58d213e9ebf93" translate="yes" xml:space="preserve">
          <source>The callback is invoked with an &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; and a server name. The callback must return an &lt;a href=&quot;sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; for the server name or nil.</source>
          <target state="translated">콜백은 &lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt; 과 서버 이름으로 호출됩니다 . 콜백은 서버 이름 또는 nil에 대한 &lt;a href=&quot;sslcontext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 를 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fdcd9854fc9bc597941c79e5d1baa44ed0c816e1" translate="yes" xml:space="preserve">
          <source>The callback is invoked with an &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;false&lt;/code&gt; is returned the session will be removed from the internal cache.</source>
          <target state="translated">콜백은 &lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; 으로&lt;/a&gt; 호출됩니다 . 경우 &lt;code&gt;false&lt;/code&gt; 반환되는 세션은 내부 캐시에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="4583cde20c7226419e7aad27b716c911ff99ca78" translate="yes" xml:space="preserve">
          <source>The callback is invoked with the &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; for the key exchange, an flag indicating the use of an export cipher and the keylength required.</source>
          <target state="translated">내보내기 암호 사용 및 필요한 키 길이를 나타내는 플래그 인 키 교환을위한 &lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 콜백이 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="b1954206a39c8bf1289aef7d9beea885f53987e8" translate="yes" xml:space="preserve">
          <source>The callback is invoked with the &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; and session id. The callback may return a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; from an external cache.</source>
          <target state="translated">콜백은 &lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt; 및 세션 ID로 호출됩니다 . 콜백은 외부 캐시에서 &lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="543b38ef7e4c18e06f419abd8df40dd16bf96097" translate="yes" xml:space="preserve">
          <source>The callback is invoked with the active &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;. The callback's return value is irrelevant, normal return indicates &amp;ldquo;approval&amp;rdquo; of the renegotiation and will continue the process. To forbid renegotiation and to cancel the process, an &lt;a href=&quot;../../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; may be raised within the callback.</source>
          <target state="translated">콜백은 활성 &lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; 으로&lt;/a&gt; 호출됩니다 . 콜백의 반환 값은 관련이 없으며 정상적인 반환은 재협상의 &quot;승인&quot;을 나타내며 프로세스를 계속합니다. 재협상을 금지하고 프로세스를 취소하기 위해 콜백 내에서 &lt;a href=&quot;../../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1100e8487cbd775b37fe48d3e9aa9b6582e68f4" translate="yes" xml:space="preserve">
          <source>The callback is invoked with the active &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;. The callback's return value is irrelevant, normal return indicates &amp;ldquo;approval&amp;rdquo; of the renegotiation and will continue the process. To forbid renegotiation and to cancel the process, an Error may be raised within the callback.</source>
          <target state="translated">콜백은 활성 &lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; 으로&lt;/a&gt; 호출됩니다 . 콜백의 반환 값은 관련이 없으며 정상 반환은 재협상의 &quot;승인&quot;을 나타내며 프로세스를 계속합니다. 재협상을 금지하고 프로세스를 취소하기 위해 콜백 내에서 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c89f670fc02e9c5557007965d08086bb781f013" translate="yes" xml:space="preserve">
          <source>The callback is invoked with two values, a boolean that indicates if the pre-verification by &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; has succeeded or not, and the &lt;a href=&quot;storecontext&quot;&gt;&lt;code&gt;StoreContext&lt;/code&gt;&lt;/a&gt; in use. The callback must return either true or false.</source>
          <target state="translated">콜백은 &lt;a href=&quot;../../openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; 에&lt;/a&gt; 의한 사전 검증 이 성공 했는지 여부를 나타내는 부울 값 과 사용중인 &lt;a href=&quot;storecontext&quot;&gt; &lt;code&gt;StoreContext&lt;/code&gt; 의&lt;/a&gt; 두 값으로 호출됩니다 . 콜백은 true 또는 false를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="53569151878dbc8dc6fc990c65a913bf85926ba9" translate="yes" xml:space="preserve">
          <source>The callback is invoked with two values. &lt;em&gt;preverify_ok&lt;/em&gt; indicates indicates if the verification was passed (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;). &lt;em&gt;store_context&lt;/em&gt; is an &lt;a href=&quot;../x509/storecontext&quot;&gt;&lt;code&gt;OpenSSL::X509::StoreContext&lt;/code&gt;&lt;/a&gt; containing the context used for certificate verification.</source>
          <target state="translated">콜백은 두 가지 값으로 호출됩니다. &lt;em&gt;preverify_ok&lt;/em&gt; 는 검증이 통과되었는지 ( &lt;code&gt;true&lt;/code&gt; ) 아닌지를 나타냅니다 ( &lt;code&gt;false&lt;/code&gt; ). &lt;em&gt;store_context&lt;/em&gt; 는 인증서 확인에 사용되는 컨텍스트를 포함 하는 &lt;a href=&quot;../x509/storecontext&quot;&gt; &lt;code&gt;OpenSSL::X509::StoreContext&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a0181c0de7d8cba10b1a08ecad5b7c21b32c3f6a" translate="yes" xml:space="preserve">
          <source>The callback must return an &lt;a href=&quot;../pkey/dh&quot;&gt;&lt;code&gt;OpenSSL::PKey::DH&lt;/code&gt;&lt;/a&gt; instance of the correct key length.</source>
          <target state="translated">콜백은 올바른 키 길이 의 &lt;a href=&quot;../pkey/dh&quot;&gt; &lt;code&gt;OpenSSL::PKey::DH&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9f67ae6ec55176180627514f88a5e8f915630ca4" translate="yes" xml:space="preserve">
          <source>The caller can specify what form of storage to use for the session's data with the &lt;code&gt;database_manager&lt;/code&gt; option to &lt;a href=&quot;session#method-c-new&quot;&gt;&lt;code&gt;CGI::Session::new&lt;/code&gt;&lt;/a&gt;. The following storage classes are provided as part of the standard library:</source>
          <target state="translated">호출자는 &lt;code&gt;database_manager&lt;/code&gt; 옵션을 사용하여 세션 데이터에 사용할 스토리지 형식 을 &lt;a href=&quot;session#method-c-new&quot;&gt; &lt;code&gt;CGI::Session::new&lt;/code&gt; &lt;/a&gt; 지정할 수 있습니다 . 표준 라이브러리의 일부로 다음 스토리지 클래스가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="73e8d9d6630d4d321e41000fa1b0b3d25df89932" translate="yes" xml:space="preserve">
          <source>The calling thread will suspend execution and run this &lt;code&gt;thr&lt;/code&gt;.</source>
          <target state="translated">호출 스레드는 실행을 일시 중단하고이 &lt;code&gt;thr&lt;/code&gt; 을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="5b88f368b007e068ebd27cd97494e09df8a5b7e1" translate="yes" xml:space="preserve">
          <source>The canonical name for an alias.</source>
          <target state="translated">별명에 대한 표준 이름.</target>
        </trans-unit>
        <trans-unit id="d561ef91f96c8eb2ce626fc41a689802d45034ad" translate="yes" xml:space="preserve">
          <source>The canonical name is set by &lt;a href=&quot;addrinfo#method-c-getaddrinfo&quot;&gt;&lt;code&gt;Addrinfo.getaddrinfo&lt;/code&gt;&lt;/a&gt; when AI_CANONNAME is specified.</source>
          <target state="translated">정식 이름으로 설정되어 &lt;a href=&quot;addrinfo#method-c-getaddrinfo&quot;&gt; &lt;code&gt;Addrinfo.getaddrinfo&lt;/code&gt; &lt;/a&gt; AI_CANONNAME이 지정된 경우.</target>
        </trans-unit>
        <trans-unit id="5ed719b9598a4afaee5b66ea30fed6755d5907ec" translate="yes" xml:space="preserve">
          <source>The certificate chain constructed by the last call of &lt;a href=&quot;store#method-i-verify&quot;&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;store#method-i-verify&quot;&gt; &lt;code&gt;verify&lt;/code&gt; &lt;/a&gt; 의 마지막 호출로 구성된 인증서 체인 .</target>
        </trans-unit>
        <trans-unit id="ba35c433e5d338342c02491330c8edc0a5a4ace1" translate="yes" xml:space="preserve">
          <source>The certificate is no longer needed</source>
          <target state="translated">인증서가 더 이상 필요하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b27e08821dfa47f591046d7fc091eed278e8e246" translate="yes" xml:space="preserve">
          <source>The certificate is on hold</source>
          <target state="translated">인증서가 보류 중입니다</target>
        </trans-unit>
        <trans-unit id="31c673e8d77a64fa3c03738b88b07b2f76ddb60e" translate="yes" xml:space="preserve">
          <source>The certificate store can be used with an SSLSocket like this:</source>
          <target state="translated">인증서 저장소는 다음과 같이 SSLSocket과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bffeb6ab69afc65aa91120eb3411f3672ae1b4ea" translate="yes" xml:space="preserve">
          <source>The certificate subject's name or other information changed</source>
          <target state="translated">인증서 주체 이름 또는 기타 정보가 변경되었습니다</target>
        </trans-unit>
        <trans-unit id="33fedffbcd91f3fe6126f79fd2bfda57f8cfaccc" translate="yes" xml:space="preserve">
          <source>The certificate was previously on hold and should now be removed from the CRL</source>
          <target state="translated">인증서가 이전에 보류 중이므로 이제 CRL에서 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="c26447d244b9ef6bd05742862aaac23b9f5f6194" translate="yes" xml:space="preserve">
          <source>The certificate was revoked due to a key compromise</source>
          <target state="translated">키 손상으로 인해 인증서가 해지되었습니다.</target>
        </trans-unit>
        <trans-unit id="a8883e1f8aced0cbd33bede1fcc33c2509e36fd0" translate="yes" xml:space="preserve">
          <source>The certificate was revoked for an unknown reason</source>
          <target state="translated">알 수없는 이유로 인증서가 해지되었습니다</target>
        </trans-unit>
        <trans-unit id="691f38ee2dbe40ad1e721c3eec8d2ceb546e4da3" translate="yes" xml:space="preserve">
          <source>The certificate was revoked for an unspecified reason</source>
          <target state="translated">지정되지 않은 이유로 인증서가 해지되었습니다.</target>
        </trans-unit>
        <trans-unit id="4725e7c147ee43c7fd37251a0f6af721a815e373" translate="yes" xml:space="preserve">
          <source>The certificate was superseded by a new certificate</source>
          <target state="translated">인증서가 새 인증서로 대체되었습니다</target>
        </trans-unit>
        <trans-unit id="69460cdff8f66f0f596deab2a3fe39c82b6dc21d" translate="yes" xml:space="preserve">
          <source>The certificate-authorities</source>
          <target state="translated">인증 기관</target>
        </trans-unit>
        <trans-unit id="6e01cd9005339fae1b7d5e4100dae5c744b41671" translate="yes" xml:space="preserve">
          <source>The certificate-authority</source>
          <target state="translated">인증 기관</target>
        </trans-unit>
        <trans-unit id="aba271ee0bbdc6bdc276564c9da40d16132f1140" translate="yes" xml:space="preserve">
          <source>The character used to quote fields. This has to be a single character &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. This is useful for application that incorrectly use &lt;code&gt;'&lt;/code&gt; as the quote character instead of the correct &lt;code&gt;&quot;&lt;/code&gt;. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will always consider a double sequence of this character to be an escaped quote. This &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will be transcoded into the data's &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; before parsing.</source>
          <target state="translated">필드를 인용하는 데 사용되는 문자입니다. 단일 문자 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이어야합니다 . 이는 올바른 &lt;code&gt;&quot;&lt;/code&gt; 대신 인용 부호로 &lt;code&gt;'&lt;/code&gt; 를 잘못 사용하는 응용 프로그램에 유용합니다 . &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 는 항상이 문자의 이중 시퀀스를 이스케이프 된 인용 부호로 간주합니다.이 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 구문 분석하기 전에 데이터의 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 으로 코드 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="717eeb98777f3697c9c905ecb9da3f8d3f7687e9" translate="yes" xml:space="preserve">
          <source>The charset of the body, appended to the Content-Type header.</source>
          <target state="translated">본문의 문자셋으로, Content-Type 헤더에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="edfebf2ccd75049d5513f8cda5ed5563ead03ba5" translate="yes" xml:space="preserve">
          <source>The checkboxes will all have the same &lt;code&gt;name&lt;/code&gt; attribute. Each checkbox is followed by a label. There will be one checkbox for each value. Each value can be specified as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, which will be used both as the value of the VALUE attribute and as the label for that checkbox. A single-element array has the same effect.</source>
          <target state="translated">확인란의 &lt;code&gt;name&lt;/code&gt; 속성 은 모두 동일 합니다. 각 확인란에는 레이블이 붙어 있습니다. 각 값마다 하나의 확인란이 있습니다. 각 값은 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 으로 지정할 수 있으며 VALUE 속성 값과 해당 확인란의 레이블로 사용됩니다. 단일 요소 배열은 동일한 효과를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="6d18ff39f68f508341ca8305398ff4f619d0791f" translate="yes" xml:space="preserve">
          <source>The cipher modes CBC, CFB, OFB and CTR all need an &amp;ldquo;initialization vector&amp;rdquo;, or short, IV. ECB mode is the only mode that does not require an IV, but there is almost no legitimate use case for this mode because of the fact that it does not sufficiently hide plaintext patterns. Therefore</source>
          <target state="translated">암호 모드 CBC, CFB, OFB 및 CTR에는 모두 &quot;초기화 벡터&quot;또는 짧은 IV가 필요합니다. ECB 모드는 IV를 필요로하지 않는 유일한 모드이지만 일반 텍스트 패턴을 충분히 숨기지 않기 때문에이 모드의 합법적 인 사용 사례는 거의 없습니다. 따라서</target>
        </trans-unit>
        <trans-unit id="d5a3e331d40237cce07666d17bdbe5eedad6e7dc" translate="yes" xml:space="preserve">
          <source>The ciphers allowed for SSL connections</source>
          <target state="translated">SSL 연결에 허용되는 암호</target>
        </trans-unit>
        <trans-unit id="e9cc7bca69246a04c27af75ce629561e89ed3f28" translate="yes" xml:space="preserve">
          <source>The class implements FIFO type of queue. In a FIFO queue, the first tasks added are the first retrieved.</source>
          <target state="translated">이 클래스는 FIFO 유형의 대기열을 구현합니다. FIFO 대기열에서 추가 된 첫 번째 작업이 첫 번째 검색입니다.</target>
        </trans-unit>
        <trans-unit id="7c4b6a643952f57f68caef1f6f44bd3318bbbca0" translate="yes" xml:space="preserve">
          <source>The class method &lt;a href=&quot;random#method-c-rand&quot;&gt;&lt;code&gt;Random.rand&lt;/code&gt;&lt;/a&gt; provides the base functionality of &lt;a href=&quot;kernel#method-i-rand&quot;&gt;&lt;code&gt;Kernel.rand&lt;/code&gt;&lt;/a&gt; along with better handling of floating point values. These are both interfaces to &lt;a href=&quot;random#DEFAULT&quot;&gt;&lt;code&gt;Random::DEFAULT&lt;/code&gt;&lt;/a&gt;, the Ruby system PRNG.</source>
          <target state="translated">&lt;a href=&quot;random#method-c-rand&quot;&gt; &lt;code&gt;Random.rand&lt;/code&gt; &lt;/a&gt; 클래스 메소드는 Kernel.rand 의 기본 기능 과 부동 소수점 값 처리 기능을 &lt;a href=&quot;kernel#method-i-rand&quot;&gt; &lt;code&gt;Kernel.rand&lt;/code&gt; &lt;/a&gt; . 이것들은 모두 Ruby 시스템 PRNG 인 &lt;a href=&quot;random#DEFAULT&quot;&gt; &lt;code&gt;Random::DEFAULT&lt;/code&gt; &lt;/a&gt; 에 대한 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="733841d22101a1813972c1c72db3fad327e6d9b2" translate="yes" xml:space="preserve">
          <source>The class method &lt;a href=&quot;thread#method-c-kill&quot;&gt;&lt;code&gt;::kill&lt;/code&gt;&lt;/a&gt;, is meant to exit a given thread:</source>
          <target state="translated">&lt;a href=&quot;thread#method-c-kill&quot;&gt; &lt;code&gt;::kill&lt;/code&gt; &lt;/a&gt; 클래스 메소드 는 주어진 스레드를 종료하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="a42cf97961cffdd2d0cff903f1e884dff81fdbd4" translate="yes" xml:space="preserve">
          <source>The class method &lt;code&gt;_load&lt;/code&gt; is called on the class with a string created from the byte-sequence.</source>
          <target state="translated">&lt;code&gt;_load&lt;/code&gt; 클래스 메소드 는 바이트 순서에서 작성된 문자열로 클래스에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="aca27f234d361e1cba68547b0a01c15c08be1982" translate="yes" xml:space="preserve">
          <source>The class method _load should take a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and use it to return an object of the same class.</source>
          <target state="translated">_load 클래스 메소드는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 을&lt;/a&gt; 가져 와서 동일한 클래스의 객체를 반환하는 데 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="babfca1c5e4fe1e092a1dbc8e8725ae9196bfddb" translate="yes" xml:space="preserve">
          <source>The class of the &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects in the array is &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">배열 의 &lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 클래스 는 &lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="74ee30dff29a54c2aa9a1bf9adbf7f3811be0352" translate="yes" xml:space="preserve">
          <source>The class of the singleton object &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">싱글 객체의 클래스 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="144a40496e25ac5fcf9c306b31594b01acc93132" translate="yes" xml:space="preserve">
          <source>The class or constant name of the object can be read from the &lt;code&gt;name&lt;/code&gt; attribute. The marshalled object is held in the &lt;code&gt;buf&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 속성 에서 객체의 클래스 또는 상수 이름을 읽을 수 있습니다 . 정렬 된 객체는 &lt;code&gt;buf&lt;/code&gt; 속성에 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f3c97042be33f0bd89afa67bbfbbd9477b35d48" translate="yes" xml:space="preserve">
          <source>The client can be modified to verify the server's certificate against the certificate authority's certificate:</source>
          <target state="translated">인증 기관의 인증서와 비교하여 서버의 인증서를 확인하도록 클라이언트를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68b34c72f716a7b2cd2e0ba9fc7017eb86a115cb" translate="yes" xml:space="preserve">
          <source>The client's SSL private key</source>
          <target state="translated">클라이언트의 SSL 개인 키</target>
        </trans-unit>
        <trans-unit id="cb76f5b65d237a1f2e5068e7224a4724d3a7b984" translate="yes" xml:space="preserve">
          <source>The code block is passed an &lt;a href=&quot;etc#Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">코드 블록에는 &lt;a href=&quot;etc#Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt; 구조체 가 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="0a985f52f3eaa176e0c9745e6abbdc02941fe266" translate="yes" xml:space="preserve">
          <source>The code block is passed an &lt;a href=&quot;etc#Passwd&quot;&gt;&lt;code&gt;Passwd&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">코드 블록에는 &lt;a href=&quot;etc#Passwd&quot;&gt; &lt;code&gt;Passwd&lt;/code&gt; &lt;/a&gt; 구조체 가 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="26c8a43f58a28c77c3cf68c901b3033333a344a9" translate="yes" xml:space="preserve">
          <source>The code using &lt;a href=&quot;bundler#method-c-setup&quot;&gt;&lt;code&gt;Bundler.setup&lt;/code&gt;&lt;/a&gt; works as follows:</source>
          <target state="translated">&lt;a href=&quot;bundler#method-c-setup&quot;&gt; &lt;code&gt;Bundler.setup&lt;/code&gt; 을&lt;/a&gt; 사용하는 코드 는 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="96053712a9b4709e5875735324518dc75d90ab50" translate="yes" xml:space="preserve">
          <source>The code will work as follows:</source>
          <target state="translated">코드는 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e51f25218261c27d9d37377cc9f5268058c6328d" translate="yes" xml:space="preserve">
          <source>The coerce method provides support for Ruby type coercion. It is not enabled by default.</source>
          <target state="translated">강제 변환 방법은 Ruby 유형 강제 변환을 지원합니다. 기본적으로 활성화되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="838dc5949241b785a7a3c8d2cb326034015e4b9b" translate="yes" xml:space="preserve">
          <source>The coerce method provides support for Ruby type coercion. This coercion mechanism is used by Ruby to handle mixed-type numeric operations: it is intended to find a compatible common type between the two operands of the operator. See also &lt;a href=&quot;numeric#method-i-coerce&quot;&gt;&lt;code&gt;Numeric#coerce&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">강제 변환 방법은 Ruby 유형 강제 변환을 지원합니다. 이 강제 메커니즘은 Ruby에서 혼합 유형 숫자 연산을 처리하는 데 사용됩니다. 이는 연산자의 두 피연산자간에 호환 가능한 공통 유형을 찾기위한 것입니다. &lt;a href=&quot;numeric#method-i-coerce&quot;&gt; &lt;code&gt;Numeric#coerce&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12b6b2be241e033aad739e900b59a40bcae5f267" translate="yes" xml:space="preserve">
          <source>The column number in the source code where this AST's text began.</source>
          <target state="translated">이 AST 텍스트가 시작된 소스 코드의 열 번호입니다.</target>
        </trans-unit>
        <trans-unit id="67a70d20026ce1102b433735f8503ee20f44b39f" translate="yes" xml:space="preserve">
          <source>The column number in the source code where this AST's text ended.</source>
          <target state="translated">이 AST 텍스트가 종료 된 소스 코드의 열 번호입니다.</target>
        </trans-unit>
        <trans-unit id="59335e988b344b5c7bb5532147811c290f339245" translate="yes" xml:space="preserve">
          <source>The column number of the current token. This value starts from 0. This method is valid only in event handlers.</source>
          <target state="translated">현재 토큰의 열 번호입니다. 이 값은 0부터 시작합니다.이 메소드는 이벤트 핸들러에서만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="4d1626691e2cdf13c9804abdda6377930a5ec190" translate="yes" xml:space="preserve">
          <source>The combination of nonblocking methods and &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; is also useful for streams such as tty, pipe socket socket when multiple processes read from a stream.</source>
          <target state="translated">nonblocking 메서드와 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 의 조합은 스트림에서 여러 프로세스를 읽을 때 tty, 파이프 소켓 소켓과 같은 스트림에도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="751382a1f6457926158b9168c90c204a90437664" translate="yes" xml:space="preserve">
          <source>The combination of nonblocking methods and &lt;code&gt;IO.select&lt;/code&gt; is also useful for streams such as tty, pipe socket socket when multiple processes read from a stream.</source>
          <target state="translated">비 차단 방법과 &lt;code&gt;IO.select&lt;/code&gt; 의 조합은 여러 프로세스가 스트림에서 읽을 때 tty, 파이프 소켓 소켓과 같은 스트림에도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e71f74c1ac8053b4754fc3f6e7367efb7ded3a1c" translate="yes" xml:space="preserve">
          <source>The command continuation request response is indicated by a &amp;ldquo;+&amp;rdquo; token instead of a tag. This form of response indicates that the server is ready to accept the continuation of a command from the client. The remainder of this response is a line of text.</source>
          <target state="translated">명령 연속 요청 응답은 태그 대신 &quot;+&quot;토큰으로 표시됩니다. 이 형식의 응답은 서버가 클라이언트의 명령 계속을 수락 할 준비가되었음을 나타냅니다. 이 응답의 나머지 부분은 한 줄의 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="ad0b626c5ed8cc751fac5268bd99fb1da1358119" translate="yes" xml:space="preserve">
          <source>The command's controlling tty is set to the slave device of the pty and its standard input/output/error is redirected to the slave device.</source>
          <target state="translated">명령 제어 tty는 pty의 슬레이브 장치로 설정되고 표준 입력 / 출력 / 오류는 슬레이브 장치로 리디렉션됩니다.</target>
        </trans-unit>
        <trans-unit id="e7facf8445827cf35aa4e721750166aff66454dc" translate="yes" xml:space="preserve">
          <source>The common strategy is to take a list of possible completions and filter it down to those completions that start with the user input. In the above examples &lt;a href=&quot;enumerable#method-i-grep&quot;&gt;&lt;code&gt;Enumerator.grep&lt;/code&gt;&lt;/a&gt; is used. The input is escaped to prevent &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; special characters from interfering with the matching.</source>
          <target state="translated">일반적인 전략은 가능한 완료 목록을 가져 와서 사용자 입력으로 시작하는 완료로 필터링하는 것입니다. 위의 예에서는 &lt;a href=&quot;enumerable#method-i-grep&quot;&gt; &lt;code&gt;Enumerator.grep&lt;/code&gt; &lt;/a&gt; 이 사용됩니다. &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; 특수 문자가 일치하는 것을 방해 하지 않도록 입력이 이스케이프됩니다 .</target>
        </trans-unit>
        <trans-unit id="b9ba51edd47d3a624d13b2511b46497f65b38e3d" translate="yes" xml:space="preserve">
          <source>The comparison operator. a &amp;lt;=&amp;gt; b is 0 if a == b, 1 if a &amp;gt; b, -1 if a &amp;lt; b.</source>
          <target state="translated">비교 연산자 a &amp;lt;=&amp;gt; b는 a == b이면 0, a&amp;gt; b이면 1, a &amp;lt;b이면 -1</target>
        </trans-unit>
        <trans-unit id="9fe14046bdabc5dc383722b3397c354c59a3a061" translate="yes" xml:space="preserve">
          <source>The comparison operators &amp;lt;, &amp;gt;, &amp;lt;=, and &amp;gt;= are implemented as shorthand for the {proper_,}{subset?,superset?} methods. However, the &amp;lt;=&amp;gt; operator is intentionally left out because not every pair of sets is comparable ({x, y} vs. {x, z} for example).</source>
          <target state="translated">비교 연산자 &amp;lt;,&amp;gt;, &amp;lt;= 및&amp;gt; =는 {proper _,} {subset?, superset?} 메소드의 약어로 구현됩니다. 그러나 모든 세트 쌍이 비교 가능한 것은 아니기 때문에 &amp;lt;=&amp;gt; 연산자는 의도적으로 제외됩니다 (예 : {x, y} 대 {x, z}).</target>
        </trans-unit>
        <trans-unit id="3754d63a46acdc8b94cf3c5f1978adc25a65c759" translate="yes" xml:space="preserve">
          <source>The comparison shall take place only on the attribute that can be inferred from the options passed from Gemfile and not on attibutes that are used to pin down the gem to specific version (e.g. Git sources should compare on branch and tag but not on commit hash)</source>
          <target state="translated">비교는 Gemfile에서 전달 된 옵션에서 유추 할 수있는 속성에서만 이루어지며 보석을 특정 버전으로 고정하는 데 사용되는 복장에는 적용되지 않습니다 (예 : Git 소스는 분기 및 태그에서는 비교해야하지만 커밋 해시에서는 제외)</target>
        </trans-unit>
        <trans-unit id="8bff917634b56c3cb272c143222e442b18bc2c80" translate="yes" xml:space="preserve">
          <source>The comparison shall take place only on the attribute that can be inferred from the options passed from Gemfile and not on attributes that are used to pin down the gem to specific version (e.g. Git sources should compare on branch and tag but not on commit hash)</source>
          <target state="translated">비교는 Gemfile에서 전달 된 옵션에서 추론 할 수있는 속성에서만 발생하며 gem을 특정 버전으로 고정하는 데 사용되는 속성에 대해서는 수행하지 않습니다 (예 : Git 소스는 브랜치와 태그에서 비교해야하지만 커밋 해시에서는 비교하지 않아야 함).</target>
        </trans-unit>
        <trans-unit id="3ff23364dc0a9de7a096c17b2b9e121120b5b699" translate="yes" xml:space="preserve">
          <source>The component does not contain the port number.</source>
          <target state="translated">구성 요소에 포트 번호가 없습니다.</target>
        </trans-unit>
        <trans-unit id="24e334c5c08c052c4a1d35f02ef4b3f6986701bd" translate="yes" xml:space="preserve">
          <source>The components accepted are &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">허용되는 구성 요소는 &lt;code&gt;host&lt;/code&gt; 및 &lt;code&gt;path&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e44043fd827c01a4ec24e52b3a51a69d6dd9b750" translate="yes" xml:space="preserve">
          <source>The components accepted are &lt;code&gt;userinfo&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, and &lt;code&gt;typecode&lt;/code&gt;.</source>
          <target state="translated">허용되는 구성 요소는 &lt;code&gt;userinfo&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; 및 &lt;code&gt;typecode&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0b7574518085b7f25b19fc99ff032d38ff41ec6d" translate="yes" xml:space="preserve">
          <source>The components accepted are host, port, dn, attributes, scope, filter, and extensions.</source>
          <target state="translated">허용되는 구성 요소는 호스트, 포트, dn, 속성, 범위, 필터 및 확장입니다.</target>
        </trans-unit>
        <trans-unit id="5e9ce3731dd128768d21f7286dd45d7a7069c33f" translate="yes" xml:space="preserve">
          <source>The components accepted are userinfo, host, port, path, query, and fragment.</source>
          <target state="translated">허용되는 구성 요소는 userinfo, host, port, path, query 및 fragment입니다.</target>
        </trans-unit>
        <trans-unit id="81453f841b4c3c4e91c9be9c106b5baa7bff8fdd" translate="yes" xml:space="preserve">
          <source>The components should be provided either as an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, or as a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; with keys formed by preceding the component names with a colon.</source>
          <target state="translated">구성 요소는 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로 제공되거나 구성 요소 이름 앞에 콜론이있는 키가 있는 &lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 로 제공되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a3abc5a72597f73469d1384638253a585092127e" translate="yes" xml:space="preserve">
          <source>The components should be provided either as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, or as a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; with keys formed by preceding the component names with a colon.</source>
          <target state="translated">구성 요소는 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 또는 구성 요소 이름 앞에 콜론을 사용하여 형성된 키가 있는 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 로 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fa3d8090badd1fd46881bfc9bdd72f92f311bb42" translate="yes" xml:space="preserve">
          <source>The concept of a date object can be represented as a tuple of the day count, the offset and the day of calendar reform.</source>
          <target state="translated">날짜 개체의 개념은 일 수의 튜플, 오프셋 및 달력 재구성 날짜로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f78ce704f622acc608455f43614f402362ecbd0" translate="yes" xml:space="preserve">
          <source>The condition, no key with the same value, can be tested by comparing the size of inverted hash.</source>
          <target state="translated">동일한 값을 가진 키가없는 조건은 역 해시의 크기를 비교하여 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed6f79fa766db506ffbfa4c6db53ded0be3f14c0" translate="yes" xml:space="preserve">
          <source>The configuration of this DRbServer</source>
          <target state="translated">이 DRbServer의 구성</target>
        </trans-unit>
        <trans-unit id="618477b997da72b233d923850b3374e46c236036" translate="yes" xml:space="preserve">
          <source>The confusion comes from the out-of-order execution of the expression. First the local variable is assigned-to then you attempt to call a nonexistent method.</source>
          <target state="translated">혼란은 표현의 순서가 잘못된 실행에서 비롯됩니다. 먼저 지역 변수가 할당 된 다음 존재하지 않는 메소드를 호출하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="ae34a02eeb327d2c5d571b58ae83519b78fa464a" translate="yes" xml:space="preserve">
          <source>The connected to the host was successful, but it immediately said goodbye.</source>
          <target state="translated">호스트와의 연결에 성공했지만 즉시 작별 인사를했습니다.</target>
        </trans-unit>
        <trans-unit id="dd38745503176412d31834e13a421ceb0e5ded2b" translate="yes" xml:space="preserve">
          <source>The connection type, returned as the Connection header (for instance, &amp;ldquo;close&amp;rdquo;.</source>
          <target state="translated">연결 유형으로, 연결 헤더로 반환됩니다 (예 : &quot;close&quot;).</target>
        </trans-unit>
        <trans-unit id="423683aed5d532800264e6e17d98dd461b879ce1" translate="yes" xml:space="preserve">
          <source>The constant to be converted to the thor path.</source>
          <target state="translated">thor 경로로 변환 될 상수입니다.</target>
        </trans-unit>
        <trans-unit id="31468caab148048c3654e545d4397286c771a752" translate="yes" xml:space="preserve">
          <source>The constants defined under &lt;a href=&quot;socket/constants&quot;&gt;&lt;code&gt;Socket::Constants&lt;/code&gt;&lt;/a&gt; are also defined under &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt;. For example, &lt;a href=&quot;socket#AF_INET&quot;&gt;&lt;code&gt;Socket::AF_INET&lt;/code&gt;&lt;/a&gt; is usable as well as Socket::Constants::AF_INET. See &lt;a href=&quot;socket/constants&quot;&gt;&lt;code&gt;Socket::Constants&lt;/code&gt;&lt;/a&gt; for the list of constants.</source>
          <target state="translated">아래에 정의 된 상수 &lt;a href=&quot;socket/constants&quot;&gt; &lt;code&gt;Socket::Constants&lt;/code&gt; &lt;/a&gt; 또한 아래에 정의 된 &lt;a href=&quot;socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; . 예를 들어 &lt;a href=&quot;socket#AF_INET&quot;&gt; &lt;code&gt;Socket::AF_INET&lt;/code&gt; &lt;/a&gt; 과 Socket :: Constants :: AF_INET을 사용할 수 있습니다. &lt;a href=&quot;socket/constants&quot;&gt; &lt;code&gt;Socket::Constants&lt;/code&gt; &lt;/a&gt; 목록은 Socket :: Constants 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2a5c316cb3bc2d8f4d3c1b879b2ee0a05376da4" translate="yes" xml:space="preserve">
          <source>The constructor accepts a hash as options for parser. Keys of options are pattern names of &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; components and values of options are pattern strings. The constructor generates set of regexps for parsing URIs.</source>
          <target state="translated">생성자는 파서의 옵션으로 해시를 허용합니다. 옵션의 키는 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 컴포넌트 의 패턴 이름 이고 옵션의 값은 패턴 문자열입니다. 생성자는 URI 구문 분석을위한 정규 표현식 세트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="655f0544323cac07dfc51c00585587866706a15b" translate="yes" xml:space="preserve">
          <source>The constructor accepts a hash as options for parser. Keys of options are pattern names of &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; components and values of options are pattern strings. The constructor generates set of regexps for parsing URIs.</source>
          <target state="translated">생성자는 파서의 옵션으로 해시를 허용합니다. 옵션 키는 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 구성 요소 의 패턴 이름 이고 옵션 값은 패턴 문자열입니다. 생성자는 URI 구문 분석을위한 정규 표현식 세트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="33336024e69f70e859842f1debc5409002798fbc" translate="yes" xml:space="preserve">
          <source>The constructs described so far match a single character. They can be followed by a repetition metacharacter to specify how many times they need to occur. Such metacharacters are called &lt;em&gt;quantifiers&lt;/em&gt;.</source>
          <target state="translated">지금까지 설명한 구성은 단일 문자와 일치합니다. 그 뒤에 반복 메타 문자가 표시되어 발생 횟수를 지정합니다. 이러한 메타 문자를 &lt;em&gt;수량 자라고&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8c2f905f92090badf16a6dface788f03cb96af7a" translate="yes" xml:space="preserve">
          <source>The consumer thread waits for the producer thread to push a line to buf while &lt;code&gt;buf.empty?&lt;/code&gt;. The producer thread (main thread) reads a line from &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; and pushes it into buf then calls &lt;code&gt;empty_cond.signal&lt;/code&gt; to notify the consumer thread of new data.</source>
          <target state="translated">소비자 스레드는 생산자 스레드가 &lt;code&gt;buf.empty?&lt;/code&gt; . 생산자 스레드 (메인 스레드)는 &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 에서 행을 읽고 이를 buf로 푸시 한 다음 &lt;code&gt;empty_cond.signal&lt;/code&gt; 을 호출 하여 소비자 스레드에 새 데이터를 알립니다.</target>
        </trans-unit>
        <trans-unit id="0f60b8fa1825ab72a54aa361068bc79e4c86d9f1" translate="yes" xml:space="preserve">
          <source>The content of the &lt;a href=&quot;tempio&quot;&gt;&lt;code&gt;TempIO&lt;/code&gt;&lt;/a&gt; as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 로서 &lt;a href=&quot;tempio&quot;&gt; &lt;code&gt;TempIO&lt;/code&gt; &lt;/a&gt; 의 내용 .</target>
        </trans-unit>
        <trans-unit id="d8cb1bf6d421bede80279393d5b51e049cb5f6a5" translate="yes" xml:space="preserve">
          <source>The content that the user input can be recorded to the history. The history can be accessed by &lt;a href=&quot;readline#HISTORY&quot;&gt;&lt;code&gt;Readline::HISTORY&lt;/code&gt;&lt;/a&gt; constant.</source>
          <target state="translated">사용자가 입력 한 내용을 히스토리에 기록 할 수 있습니다. 이력은 &lt;a href=&quot;readline#HISTORY&quot;&gt; &lt;code&gt;Readline::HISTORY&lt;/code&gt; &lt;/a&gt; 상수 로 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0004aee6be0bd0bcbfdede6a616a103efc7e830d" translate="yes" xml:space="preserve">
          <source>The contents of the hash are implementation specific and may be changed in the future.</source>
          <target state="translated">해시의 내용은 구현에 따라 다르며 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75e1444ab100b131d2a312d2d7f0b614e4a22b64" translate="yes" xml:space="preserve">
          <source>The contents of the returned hash are implementation specific. It may be changed in future.</source>
          <target state="translated">반환 된 해시의 내용은 구현에 따라 다릅니다. 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3026de835d7093b06c09c984ea7ce98e17e06142" translate="yes" xml:space="preserve">
          <source>The contents of the returned hash is implementation defined. It may be changed in future.</source>
          <target state="translated">반환 된 해시의 내용은 구현이 정의됩니다. 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b23fefa09cf619f22bad6e2a49e55ab94384890" translate="yes" xml:space="preserve">
          <source>The contents of the returned hash is implementation specific and may change in the future.</source>
          <target state="translated">반환 된 해시의 내용은 구현에 따라 다르며 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be2ba2b03d7819d5c0f59ffd9c1014a1227d9934" translate="yes" xml:space="preserve">
          <source>The contents of the returned value are implementation specific. It may be changed in future.</source>
          <target state="translated">반환 값의 내용은 구현에 따라 다릅니다. 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79dd6ccfaf243dba315e218dd0b3d5c359317a09" translate="yes" xml:space="preserve">
          <source>The context and application specific information.</source>
          <target state="translated">컨텍스트 및 응용 프로그램 특정 정보.</target>
        </trans-unit>
        <trans-unit id="53b8d1d8ee9fa06d029a7b728c649b006ce00e63" translate="yes" xml:space="preserve">
          <source>The copyright string for Ruby.</source>
          <target state="translated">Ruby의 저작권 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="60f50b9baeac23e7316f2dd229af6f7bb3bf20cf" translate="yes" xml:space="preserve">
          <source>The copyright string for ruby</source>
          <target state="translated">루비의 저작권 문자열</target>
        </trans-unit>
        <trans-unit id="9d94c382d76f673fd37b16239c778e3d043a225c" translate="yes" xml:space="preserve">
          <source>The credentials of the foreign process connected to this socket</source>
          <target state="translated">이 소켓에 연결된 외부 프로세스의 자격 증명</target>
        </trans-unit>
        <trans-unit id="b2c925ac2b45de93d862f5d628cff4e114835d7c" translate="yes" xml:space="preserve">
          <source>The current access mode for indexing and iteration.</source>
          <target state="translated">인덱싱 및 반복을위한 현재 액세스 모드</target>
        </trans-unit>
        <trans-unit id="0dcab209db79c124ff33003724d7b17b091cb090" translate="yes" xml:space="preserve">
          <source>The current data items are:</source>
          <target state="translated">현재 데이터 항목은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="ec5a22013c914265480c6aef8ceb51e364371d17" translate="yes" xml:space="preserve">
          <source>The current implementation of &lt;a href=&quot;enumerable#method-i-sort_by&quot;&gt;&lt;code&gt;sort_by&lt;/code&gt;&lt;/a&gt; generates an array of tuples containing the original collection element and the mapped value. This makes &lt;a href=&quot;enumerable#method-i-sort_by&quot;&gt;&lt;code&gt;sort_by&lt;/code&gt;&lt;/a&gt; fairly expensive when the keysets are simple.</source>
          <target state="translated">현재 &lt;a href=&quot;enumerable#method-i-sort_by&quot;&gt; &lt;code&gt;sort_by&lt;/code&gt; &lt;/a&gt; 구현은 원래 컬렉션 요소와 매핑 된 값을 포함하는 튜플 배열을 생성합니다. 이것은 키 &lt;a href=&quot;enumerable#method-i-sort_by&quot;&gt; &lt;code&gt;sort_by&lt;/code&gt; &lt;/a&gt; 가 단순 할 때 sort_by를 상당히 비싸게 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c3ab7c286bb16f3796d63f7bbc6a07b48e41ecde" translate="yes" xml:space="preserve">
          <source>The current implementation of &lt;code&gt;sort_by&lt;/code&gt; generates an array of tuples containing the original collection element and the mapped value. This makes &lt;code&gt;sort_by&lt;/code&gt; fairly expensive when the keysets are simple.</source>
          <target state="translated">&lt;code&gt;sort_by&lt;/code&gt; 의 현재 구현은 원래 콜렉션 요소와 맵핑 된 값을 포함하는 튜플 배열을 생성합니다. 이것은 키셋이 단순 할 때 &lt;code&gt;sort_by&lt;/code&gt; 를 상당히 비싸게 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="64a5f43bae37e33cd0e887446ee066ff49180eab" translate="yes" xml:space="preserve">
          <source>The current input line number of the last file that was read.</source>
          <target state="translated">마지막으로 읽은 파일의 현재 입력 라인 번호입니다.</target>
        </trans-unit>
        <trans-unit id="6d41dd5e5fce3c87a0c35dfb85859404aa66194a" translate="yes" xml:space="preserve">
          <source>The current session cache mode.</source>
          <target state="translated">현재 세션 캐시 모드</target>
        </trans-unit>
        <trans-unit id="38becda9249c478b69ba02c865ec8298b507c339" translate="yes" xml:space="preserve">
          <source>The current standard error output.</source>
          <target state="translated">현재 표준 오류 출력</target>
        </trans-unit>
        <trans-unit id="e01a68c8dc2acae23ff40b51f9df558ad7d4586c" translate="yes" xml:space="preserve">
          <source>The current standard input.</source>
          <target state="translated">현재 표준 입력입니다.</target>
        </trans-unit>
        <trans-unit id="7e57720c6f9dc42f807a8ebf100e10be8463f73b" translate="yes" xml:space="preserve">
          <source>The current standard output.</source>
          <target state="translated">현재 표준 출력.</target>
        </trans-unit>
        <trans-unit id="5affdbb0aacfd5b2d12eecf20c61e259e9f9a7f9" translate="yes" xml:space="preserve">
          <source>The current status of &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; profile mode.</source>
          <target state="translated">&lt;a href=&quot;../gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 프로파일 모드 의 현재 상태 .</target>
        </trans-unit>
        <trans-unit id="c94a09dacac5664740e95b6262ab3f0d67b51f04" translate="yes" xml:space="preserve">
          <source>The current status of the trace</source>
          <target state="translated">추적의 현재 상태</target>
        </trans-unit>
        <trans-unit id="782122dd65323c97b4dca21798b098f2290af05c" translate="yes" xml:space="preserve">
          <source>The current version of &lt;a href=&quot;acl&quot;&gt;&lt;code&gt;ACL&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;acl&quot;&gt; &lt;code&gt;ACL&lt;/code&gt; &lt;/a&gt; 의 현재 버전</target>
        </trans-unit>
        <trans-unit id="928ddf28d69312bf920de01245cc31aa9efd517f" translate="yes" xml:space="preserve">
          <source>The dangers posed by instance_eval and friends are such that a DRbServer should generally be run with $SAFE set to at least level 1. This will disable eval() and related calls on strings passed across the wire. The sample usage code given above follows this practice.</source>
          <target state="translated">instance_eval 및 friends에 의해 발생할 수있는 위험은 일반적으로 $ SAFE를 최소 레벨 1로 설정하여 DRbServer를 실행해야한다는 것입니다. 그러면 전선을 통해 전달 된 문자열에서 eval () 및 관련 호출이 비활성화됩니다. 위에 제공된 샘플 사용 코드는이 연습을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="6c4d02844b0e0946bbe9be86a30c8454667c317e" translate="yes" xml:space="preserve">
          <source>The dangers posed by instance_eval and friends are such that a DRbServer should only be used when clients are trusted.</source>
          <target state="translated">instance_eval과 친구들에 의해 제기되는 위험은 DRbServer는 클라이언트가 신뢰할 수있을 때만 사용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f72389f8ddfb71c745bdfa54696a803cd956fcb4" translate="yes" xml:space="preserve">
          <source>The data source must be open for reading.</source>
          <target state="translated">읽을 데이터 소스가 열려 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7972e6946259739d641e2a59c8f7da6070bb3808" translate="yes" xml:space="preserve">
          <source>The data source must be open for writing.</source>
          <target state="translated">쓰기 위해 데이터 소스가 열려 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a00eff79d66dd91ad033f6cef5863ffe3ef5662a" translate="yes" xml:space="preserve">
          <source>The data will be accessed in random order.</source>
          <target state="translated">데이터는 무작위 순서로 액세스됩니다.</target>
        </trans-unit>
        <trans-unit id="d8b779118b9dced526ee76c97b5e4d417e089b28" translate="yes" xml:space="preserve">
          <source>The data will be accessed in the near future.</source>
          <target state="translated">가까운 시일 내에 데이터에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bf4bdd21bfa1f6e0fff961f57d0d2796e1c642d" translate="yes" xml:space="preserve">
          <source>The data will be accessed sequentially with lower offsets read before higher ones.</source>
          <target state="translated">데이터는 높은 오프셋보다 낮은 오프셋을 읽음으로써 순차적으로 액세스됩니다.</target>
        </trans-unit>
        <trans-unit id="269b90f695c7e80c8d9dc1074e136c6b6df8469d" translate="yes" xml:space="preserve">
          <source>The data will not be accessed in the near future.</source>
          <target state="translated">가까운 시일 내에 데이터에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f9e089bc567104d59e89b8c39453ef0f679ec603" translate="yes" xml:space="preserve">
          <source>The data will only be accessed once.</source>
          <target state="translated">데이터는 한 번만 액세스됩니다.</target>
        </trans-unit>
        <trans-unit id="bd81e77b640a876c23fe5782eeeeb63f008aa83b" translate="yes" xml:space="preserve">
          <source>The date this ruby was released</source>
          <target state="translated">이 루비가 출시 된 날짜</target>
        </trans-unit>
        <trans-unit id="d7b5f16f2e4f1c33d031dff9b23e4b42638a1302" translate="yes" xml:space="preserve">
          <source>The day count denotes the absolute position of a temporal dimension. The offset is relative adjustment, which determines decoded local time with the day count. The day of calendar reform denotes the start day of the new style. The old style of the West is the Julian calendar which was adopted by Caesar. The new style is the Gregorian calendar, which is the current civil calendar of many countries.</source>
          <target state="translated">일 수는 시간 차원의 절대 위치를 나타냅니다. 오프셋은 상대 조정으로, 일 수로 디코딩 된 현지 시간을 결정합니다. 달력 수정 날짜는 새 스타일의 시작 날짜를 나타냅니다. 서구의 구식은 카이사르가 채택한 줄리안 달력입니다. 새로운 스타일은 많은 국가의 현재 시민 일정 인 그레고리력입니다.</target>
        </trans-unit>
        <trans-unit id="39f5ab98a6fdba971c5412806960d2149e4bc3ed" translate="yes" xml:space="preserve">
          <source>The day count is virtually the astronomical Julian day number. The offset in this class is usually zero, and cannot be specified directly.</source>
          <target state="translated">일 수는 사실상 천문학적 율리우스 일 수입니다. 이 클래스의 오프셋은 일반적으로 0이며 직접 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="43dd76a4855bb93cd3d6bd83c8f2b53de2af1ed8" translate="yes" xml:space="preserve">
          <source>The day of year should be a negative or a positive number (as a relative day from the end of year when negative). It should not be zero.</source>
          <target state="translated">연도는 음수 또는 양수 여야합니다 (음수 일 경우 연말부터의 상대 요일). 0이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="af7f46162e3e6c49c9e2c08fbee85f80b665353c" translate="yes" xml:space="preserve">
          <source>The debug flag, which is set by the -d switch. Enabling debug output prints each exception raised to $stderr (but not its backtrace). Setting this to a true value enables debug output as if -d were given on the command line. Setting this to a false value disables debug output.</source>
          <target state="translated">디버그 플래그는 -d 스위치에 의해 설정됩니다. 디버그 출력을 활성화하면 각 예외가 $ stderr (역 추적이 아님)로 인쇄됩니다. 이 값을 true로 설정하면 명령 줄에 -d가 지정된 것처럼 디버그 출력이 활성화됩니다. 이 값을 false로 설정하면 디버그 출력이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="5c3cf4211303a477bed974c8abd50a0086a66bf9" translate="yes" xml:space="preserve">
          <source>The debug flag, which is set by the &lt;code&gt;-d&lt;/code&gt; switch. Enabling debug output prints each exception raised to $stderr (but not its backtrace). Setting this to a true value enables debug output as if &lt;code&gt;-d&lt;/code&gt; were given on the command line. Setting this to a false value disables debug output. Aliased to $-d.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; 스위치에 의해 설정되는 디버그 플래그 . 디버그 출력을 활성화하면 $ stderr에 발생한 각 예외가 인쇄됩니다 (백 트레이스는 아님). 이 값을 true 값으로 설정 하면 명령 줄에 &lt;code&gt;-d&lt;/code&gt; 가 지정된 것처럼 디버그 출력이 활성화 됩니다. 이를 false 값으로 설정하면 디버그 출력이 비활성화됩니다. $ -d로 별칭이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="539622d22b3611e1a0d2bdec661bbb3d138ab211" translate="yes" xml:space="preserve">
          <source>The default</source>
          <target state="translated">기본</target>
        </trans-unit>
        <trans-unit id="bcb0f7163c227484297ca05a492694d647313067" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;drbserver#attribute-i-safe_level&quot;&gt;&lt;code&gt;safe_level&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="translated">기본 &lt;a href=&quot;drbserver#attribute-i-safe_level&quot;&gt; &lt;code&gt;safe_level&lt;/code&gt; &lt;/a&gt; 은 0입니다</target>
        </trans-unit>
        <trans-unit id="c5761f58da54ee17de323995d9f36b078db8fb39" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; port number, 25.</source>
          <target state="translated">기본 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 포트 번호는 25입니다.</target>
        </trans-unit>
        <trans-unit id="09669dd142ea0e9915fdcc05c245cf6b23f3c4c1" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;threadgroup&quot;&gt;&lt;code&gt;ThreadGroup&lt;/code&gt;&lt;/a&gt; created when Ruby starts; all Threads belong to it by default.</source>
          <target state="translated">Ruby가 시작될 때 작성된 기본 &lt;a href=&quot;threadgroup&quot;&gt; &lt;code&gt;ThreadGroup&lt;/code&gt; &lt;/a&gt; 입니다. 모든 스레드는 기본적으로 여기에 속합니다.</target>
        </trans-unit>
        <trans-unit id="0980dd3cfd933cc5a08e58465acb392284e573a2" translate="yes" xml:space="preserve">
          <source>The default Pseudorandom number generator. Used by class methods of &lt;a href=&quot;random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 의사 난수 생성기입니다. &lt;a href=&quot;random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt; 클래스 메서드에서 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="1c08cf0632a11798a7d145b559a4d0c1fa32ef7c" translate="yes" xml:space="preserve">
          <source>The default SMTPS port number, 465.</source>
          <target state="translated">기본 SMTPS 포트 번호는 465입니다.</target>
        </trans-unit>
        <trans-unit id="ca513b9987dfdd8c14ca75dfe6eed1ca3fbbcc00" translate="yes" xml:space="preserve">
          <source>The default caption string (heading above the output times).</source>
          <target state="translated">기본 캡션 문자열 (출력 시간보다 긴 제목)</target>
        </trans-unit>
        <trans-unit id="6d770a735d8f1f3e896beb97f2ac802c30064043" translate="yes" xml:space="preserve">
          <source>The default completion is used if &lt;code&gt;proc&lt;/code&gt; is nil.</source>
          <target state="translated">&lt;code&gt;proc&lt;/code&gt; 가 nil 인 경우 기본 완료가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d862b341d94c5576bd644924aad1317995a3eb11" translate="yes" xml:space="preserve">
          <source>The default drb protocol which communicates over a TCP socket.</source>
          <target state="translated">TCP 소켓을 통해 통신하는 기본 drb 프로토콜.</target>
        </trans-unit>
        <trans-unit id="fe3447d80523851d0645598d92d0c4c06f2ff840" translate="yes" xml:space="preserve">
          <source>The default encoding of strings from the filesystem of the environment. This is used for strings of file names or paths.</source>
          <target state="translated">환경의 파일 시스템에서 문자열의 기본 인코딩입니다. 파일 이름 또는 경로 문자열에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8bbf523403695b9893bb9976050794c42013c37d" translate="yes" xml:space="preserve">
          <source>The default encoding of the environment. Usually derived from locale.</source>
          <target state="translated">환경의 기본 인코딩입니다. 일반적으로 로케일에서 파생됩니다.</target>
        </trans-unit>
        <trans-unit id="7a9ba6e2bc48ef740df88fa587d74fe51f95d425" translate="yes" xml:space="preserve">
          <source>The default external encoding is initialized by the locale or -E option.</source>
          <target state="translated">기본 외부 인코딩은 로케일 또는 -E 옵션으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="159fe441fde4e9c8603e39dd09ee266412f4283d" translate="yes" xml:space="preserve">
          <source>The default external encoding is used by default for strings created from the following locations:</source>
          <target state="translated">기본 외부 인코딩은 다음 위치에서 생성 된 문자열에 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1fda49c3e31c6cf892c2bf199ccb2e0d10e6f2c5" translate="yes" xml:space="preserve">
          <source>The default external encoding may also be set through &lt;a href=&quot;encoding#method-c-default_external-3D&quot;&gt;&lt;code&gt;Encoding.default_external=&lt;/code&gt;&lt;/a&gt;, but you should not do this as strings created before and after the change will have inconsistent encodings. Instead use &lt;code&gt;ruby -E&lt;/code&gt; to invoke ruby with the correct external encoding.</source>
          <target state="translated">기본 외부 인코딩은 &lt;a href=&quot;encoding#method-c-default_external-3D&quot;&gt; &lt;code&gt;Encoding.default_external=&lt;/code&gt; &lt;/a&gt; 통해 설정 될 수도 있지만 변경 전후에 생성 된 문자열이 일치하지 않는 인코딩을 가지므로이 작업을 수행하지 않아야합니다. 대신 &lt;code&gt;ruby -E&lt;/code&gt; 를 사용 하여 올바른 외부 인코딩으로 루비를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="c2d7f302358a0a889b3db94b1afc5d46db6daebc" translate="yes" xml:space="preserve">
          <source>The default format looks like 0.xxxxEnn.</source>
          <target state="translated">기본 형식은 0.xxxxEnn과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c6997bc89a310f96b940a71a42062bec2b6d9bac" translate="yes" xml:space="preserve">
          <source>The default format string used to display times. See also &lt;a href=&quot;benchmark/tms#method-i-format&quot;&gt;&lt;code&gt;Benchmark::Tms#format&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">시간을 표시하는 데 사용되는 기본 형식 문자열입니다. &lt;a href=&quot;benchmark/tms#method-i-format&quot;&gt; &lt;code&gt;Benchmark::Tms#format&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d2d2e379a8063fe922f94873ed63a967facd120" translate="yes" xml:space="preserve">
          <source>The default internal encoding can be set with the interpreter option &lt;code&gt;-E&lt;/code&gt;. &lt;a href=&quot;encoding#method-c-default_internal&quot;&gt;&lt;code&gt;Encoding.default_internal&lt;/code&gt;&lt;/a&gt; returns the current internal encoding.</source>
          <target state="translated">기본 내부 인코딩은 인터프리터 옵션 &lt;code&gt;-E&lt;/code&gt; 를 사용하여 설정할 수 있습니다 . &lt;a href=&quot;encoding#method-c-default_internal&quot;&gt; &lt;code&gt;Encoding.default_internal&lt;/code&gt; &lt;/a&gt; 은 현재 내부 인코딩을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fc8ce6ba70df8d124f73da432bfa8d4b0d1d5946" translate="yes" xml:space="preserve">
          <source>The default internal encoding may also be set through &lt;a href=&quot;encoding#method-c-default_internal-3D&quot;&gt;&lt;code&gt;Encoding.default_internal=&lt;/code&gt;&lt;/a&gt;, but you should not do this as strings created before and after the change will have inconsistent encodings. Instead use &lt;code&gt;ruby -E&lt;/code&gt; to invoke ruby with the correct internal encoding.</source>
          <target state="translated">기본 내부 인코딩은 &lt;a href=&quot;encoding#method-c-default_internal-3D&quot;&gt; &lt;code&gt;Encoding.default_internal=&lt;/code&gt; &lt;/a&gt; 통해 설정할 수도 있지만 변경 전후에 생성 된 문자열이 일치하지 않는 인코딩을 가지므로이 작업을 수행해서는 안됩니다. 대신 &lt;code&gt;ruby -E&lt;/code&gt; 를 사용 하여 올바른 내부 인코딩으로 루비를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="c47f2dc47da716e10b8464cc904d52095649a5a3" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="68d7573bddeac3e76763a7f9f600a10307beab42" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;true&lt;/code&gt; since Ruby 2.5.</source>
          <target state="translated">Ruby 2.5 이후 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da39c3f53f761deb7f9695a2825f16e65471f0fd" translate="yes" xml:space="preserve">
          <source>The default is dependent on OS, and provide a handle for all libraries already loaded. For example, in most cases you can use this to access &lt;code&gt;libc&lt;/code&gt; functions, or ruby functions like &lt;code&gt;rb_str_new&lt;/code&gt;.</source>
          <target state="translated">기본값은 OS에 따라 다르며 이미로드 된 모든 라이브러리에 대한 핸들을 제공합니다. 예를 들어, 대부분의 경우이를 사용하여 &lt;code&gt;libc&lt;/code&gt; 함수 또는 &lt;code&gt;rb_str_new&lt;/code&gt; 와 같은 루비 함수 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b00f2b9b50b892a674009d0350f873998b1cbdb8" translate="yes" xml:space="preserve">
          <source>The default mail submission port number, 587.</source>
          <target state="translated">기본 메일 제출 포트 번호, 587</target>
        </trans-unit>
        <trans-unit id="fe4694ff64e98cde2eeba1e3245d08dc047b8a71" translate="yes" xml:space="preserve">
          <source>The default memory level for allocating zlib deflate compression state.</source>
          <target state="translated">zlib 수축 압축 상태를 할당하기위한 기본 메모리 레벨.</target>
        </trans-unit>
        <trans-unit id="a0cb5b6fd9ac2556c48ab913b38c8f93d25ac9f5" translate="yes" xml:space="preserve">
          <source>The default mode for the new file object is &amp;ldquo;r'', but &lt;em&gt;mode&lt;/em&gt; may be set to any of the modes listed in the description for class &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. The last argument &lt;em&gt;opt&lt;/em&gt; qualifies &lt;em&gt;mode&lt;/em&gt;.</source>
          <target state="translated">새 파일 객체의 기본 모드는 &quot;r&quot;이지만 &lt;em&gt;mode&lt;/em&gt; 는 클래스 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 에 대한 설명에 나열된 모드 중 하나로 설정 될 수 있습니다 . 마지막 인수 &lt;em&gt;opt&lt;/em&gt; 는 &lt;em&gt;mode를&lt;/em&gt; 규정 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4939a25921b62d0890d06f4058b9d82a759dee65" translate="yes" xml:space="preserve">
          <source>The default mode is VERIFY_NONE, which does not perform any verification at all.</source>
          <target state="translated">기본 모드는 VERIFY_NONE이며 전혀 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e879a0fb363cddc3fde4d015a9c4b82a58e0574a" translate="yes" xml:space="preserve">
          <source>The default object type for name entries.</source>
          <target state="translated">이름 항목의 기본 객체 유형입니다.</target>
        </trans-unit>
        <trans-unit id="14c20e2b9fbf07e283148016b453c11ba22c666a" translate="yes" xml:space="preserve">
          <source>The default object type template for name entries.</source>
          <target state="translated">이름 항목의 기본 객체 유형 템플릿입니다.</target>
        </trans-unit>
        <trans-unit id="f7fa7e0ecf634599072b5c72c1dfbfc343af4190" translate="yes" xml:space="preserve">
          <source>The default options for the generator can be changed via the &lt;a href=&quot;json#attribute-c-dump_default_options&quot;&gt;&lt;code&gt;dump_default_options&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">생성기의 기본 옵션은 &lt;a href=&quot;json#attribute-c-dump_default_options&quot;&gt; &lt;code&gt;dump_default_options&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="174b75813a1489b371f98f397fa9bbf2ad5736e1" translate="yes" xml:space="preserve">
          <source>The default output for print, printf. $stdout by default.</source>
          <target state="translated">인쇄의 기본 출력 printf 기본적으로 $ stdout.</target>
        </trans-unit>
        <trans-unit id="f09e246ce9d32b4bb5c24c5a15f77f2384661b54" translate="yes" xml:space="preserve">
          <source>The default output stream for &lt;a href=&quot;kernel#method-i-print&quot;&gt;&lt;code&gt;Kernel#print&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#method-i-printf&quot;&gt;&lt;code&gt;Kernel#printf&lt;/code&gt;&lt;/a&gt;. $stdout by default.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-print&quot;&gt; &lt;code&gt;Kernel#print&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;kernel#method-i-printf&quot;&gt; &lt;code&gt;Kernel#printf&lt;/code&gt; &lt;/a&gt; 의 기본 출력 스트림입니다 . 기본적으로 $ stdout입니다.</target>
        </trans-unit>
        <trans-unit id="c6e5e94cc6d4f6c7c2f06251da49d68a08fda6e4" translate="yes" xml:space="preserve">
          <source>The default port Ring discovery will use.</source>
          <target state="translated">기본 포트 링 검색이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b1448380f43a78abf19d642d28856978bd4e0fb6" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;https&quot;&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/a&gt; URIs is 443, and the scheme is 'https:' rather than 'http:'. Other than that, &lt;a href=&quot;https&quot;&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/a&gt; URIs are identical to &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; URIs; see &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Bundler::URI::HTTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https&quot;&gt; &lt;code&gt;HTTPS&lt;/code&gt; &lt;/a&gt; URI 의 기본 포트 는 443이고 스키마는 'http :'가 아닌 'https :'입니다. 그 외에 &lt;a href=&quot;https&quot;&gt; &lt;code&gt;HTTPS&lt;/code&gt; &lt;/a&gt; URI는 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; URI와 동일합니다 . &lt;a href=&quot;http&quot;&gt; &lt;code&gt;Bundler::URI::HTTP&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb55234bf6e3999799b8896be9971f77a1fe435b" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;https&quot;&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/a&gt; URIs is 443, and the scheme is 'https:' rather than 'http:'. Other than that, &lt;a href=&quot;https&quot;&gt;&lt;code&gt;HTTPS&lt;/code&gt;&lt;/a&gt; URIs are identical to &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; URIs; see &lt;a href=&quot;http&quot;&gt;&lt;code&gt;URI::HTTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https&quot;&gt; &lt;code&gt;HTTPS&lt;/code&gt; &lt;/a&gt; URI 의 기본 포트 는 443이며 체계는 'http :'가 아닌 'https :'입니다. 그 이외의 &lt;a href=&quot;https&quot;&gt; &lt;code&gt;HTTPS&lt;/code&gt; &lt;/a&gt; URI는 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; URI와 동일합니다 . &lt;a href=&quot;http&quot;&gt; &lt;code&gt;URI::HTTP&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d14cb601facbcd94bb4fa5d3d539a70299be780" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;imap&quot;&gt;&lt;code&gt;IMAP&lt;/code&gt;&lt;/a&gt; connections, port 143</source>
          <target state="translated">&lt;a href=&quot;imap&quot;&gt; &lt;code&gt;IMAP&lt;/code&gt; &lt;/a&gt; 연결 의 기본 포트 , 포트 143</target>
        </trans-unit>
        <trans-unit id="c182b3d819b28140691d916ace0e2b0b031c1224" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;ldaps&quot;&gt;&lt;code&gt;LDAPS&lt;/code&gt;&lt;/a&gt; URIs is 636, and the scheme is 'ldaps:' rather than 'ldap:'. Other than that, &lt;a href=&quot;ldaps&quot;&gt;&lt;code&gt;LDAPS&lt;/code&gt;&lt;/a&gt; URIs are identical to &lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;LDAP&lt;/code&gt;&lt;/a&gt; URIs; see &lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;Bundler::URI::LDAP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ldaps&quot;&gt; &lt;code&gt;LDAPS&lt;/code&gt; &lt;/a&gt; URI 의 기본 포트 는 636이고 스키마는 'ldap :'이 아닌 'ldaps :'입니다. 그 외에 &lt;a href=&quot;ldaps&quot;&gt; &lt;code&gt;LDAPS&lt;/code&gt; &lt;/a&gt; URI는 &lt;a href=&quot;ldap&quot;&gt; &lt;code&gt;LDAP&lt;/code&gt; &lt;/a&gt; URI와 동일합니다 . &lt;a href=&quot;ldap&quot;&gt; &lt;code&gt;Bundler::URI::LDAP&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="36cf194a73afd116746bc19bf9289654878728f4" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;ldaps&quot;&gt;&lt;code&gt;LDAPS&lt;/code&gt;&lt;/a&gt; URIs is 636, and the scheme is 'ldaps:' rather than 'ldap:'. Other than that, &lt;a href=&quot;ldaps&quot;&gt;&lt;code&gt;LDAPS&lt;/code&gt;&lt;/a&gt; URIs are identical to &lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;LDAP&lt;/code&gt;&lt;/a&gt; URIs; see &lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;URI::LDAP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ldaps&quot;&gt; &lt;code&gt;LDAPS&lt;/code&gt; &lt;/a&gt; URI 의 기본 포트 는 636이며 스키마는 'ldap :'이 아니라 'ldaps :'입니다. 그 외에 &lt;a href=&quot;ldaps&quot;&gt; &lt;code&gt;LDAPS&lt;/code&gt; &lt;/a&gt; URI는 &lt;a href=&quot;ldap&quot;&gt; &lt;code&gt;LDAP&lt;/code&gt; &lt;/a&gt; URI와 동일합니다 . &lt;a href=&quot;ldap&quot;&gt; &lt;code&gt;URI::LDAP&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="74b8754114c39d33461eac858339c3473b7e9604" translate="yes" xml:space="preserve">
          <source>The default port for &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; connections, port 110</source>
          <target state="translated">&lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 연결을 위한 기본 포트 , 포트 110</target>
        </trans-unit>
        <trans-unit id="97d22a8d826b1bda2e8aafd19d883675f652a02d" translate="yes" xml:space="preserve">
          <source>The default port for IMAPS connections, port 993</source>
          <target state="translated">IMAPS 연결의 기본 포트, 포트 993</target>
        </trans-unit>
        <trans-unit id="ddc41ae4d936d862dbedb7910993e9f249fa5403" translate="yes" xml:space="preserve">
          <source>The default port for POP3S connections, port 995</source>
          <target state="translated">POP3S 연결의 기본 포트, 포트 995</target>
        </trans-unit>
        <trans-unit id="be429ff982fe09ed1929916823bd0e63866019e3" translate="yes" xml:space="preserve">
          <source>The default port to use for &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; requests; defaults to 80.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 요청 에 사용할 기본 포트입니다 . 기본값은 80입니다.</target>
        </trans-unit>
        <trans-unit id="e9d05a18ad99054661651fa5b2e5bbb4bc96d851" translate="yes" xml:space="preserve">
          <source>The default port to use for HTTPS requests; defaults to 443.</source>
          <target state="translated">HTTPS 요청에 사용할 기본 포트입니다. 기본값은 443입니다.</target>
        </trans-unit>
        <trans-unit id="fd94b4e52fe902dbb40334d1bbb1ac179ca2faec" translate="yes" xml:space="preserve">
          <source>The default script encoding is &lt;code&gt;Encoding::UTF-8&lt;/code&gt; after v2.0, but it can be changed by a magic comment on the first line of the source code file (or second line, if there is a shebang line on the first). The comment must contain the word &lt;code&gt;coding&lt;/code&gt; or &lt;code&gt;encoding&lt;/code&gt;, followed by a colon, space and the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; name or alias:</source>
          <target state="translated">기본 스크립트 인코딩은 v2.0 이후 &lt;code&gt;Encoding::UTF-8&lt;/code&gt; 이지만 소스 코드 파일의 첫 번째 줄 (첫 번째 줄에 shebang 줄이있는 경우 두 번째 줄)에 대한 주석으로 변경 될 수 있습니다. 주석에는 &lt;code&gt;coding&lt;/code&gt; 또는 &lt;code&gt;encoding&lt;/code&gt; 이라는 단어 와 콜론, 공백 및 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 이름 또는 별명이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="108b1cebf47fdf1bd30f635b1643787dbab34c3f" translate="yes" xml:space="preserve">
          <source>The default script encoding is Encoding::UTF_8 after v2.0, but it can be changed by a magic comment on the first line of the source code file (or second line, if there is a shebang line on the first). The comment must contain the word &lt;code&gt;coding&lt;/code&gt; or &lt;code&gt;encoding&lt;/code&gt;, followed by a colon, space and the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; name or alias:</source>
          <target state="translated">기본 스크립트 인코딩은 v2.0 이후 Encoding :: UTF_8이지만 소스 코드 파일의 첫 번째 줄 (또는 첫 번째 줄에 shebang 줄이있는 경우 두 번째 줄)의 매직 주석으로 변경할 수 있습니다. 주석은 단어 &lt;code&gt;coding&lt;/code&gt; 또는 &lt;code&gt;encoding&lt;/code&gt; , 뒤에 콜론, 공백 및 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 이름 또는 별칭을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="203387fec4343d59de1ec48a43aaf36b39e4e38a" translate="yes" xml:space="preserve">
          <source>The default separator for &lt;a href=&quot;string#method-i-split&quot;&gt;&lt;code&gt;String#split&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;string#method-i-split&quot;&gt; &lt;code&gt;String#split&lt;/code&gt; &lt;/a&gt; 의 기본 구분 기호입니다 .</target>
        </trans-unit>
        <trans-unit id="525a19da3f65e91b91cb5308adf3bb55c7b397f5" translate="yes" xml:space="preserve">
          <source>The default separator for &lt;a href=&quot;string#method-i-split&quot;&gt;&lt;code&gt;String#split&lt;/code&gt;&lt;/a&gt;. Non-nil $; will be deprecated. Aliased to $-F.</source>
          <target state="translated">&lt;a href=&quot;string#method-i-split&quot;&gt; &lt;code&gt;String#split&lt;/code&gt; &lt;/a&gt; 의 기본 구분 기호입니다 . 0이 아닌 $; 더 이상 사용되지 않습니다. $ -F로 별칭이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="bb51894f2d6455a62655853edc70f82d30fce06a" translate="yes" xml:space="preserve">
          <source>The default system configuration file for openssl</source>
          <target state="translated">openssl의 기본 시스템 구성 파일</target>
        </trans-unit>
        <trans-unit id="b71d914cb835bab710406cbcbae2050913a6d544" translate="yes" xml:space="preserve">
          <source>The default value does not need to appear first, but arguments with defaults must be grouped together. This is ok:</source>
          <target state="translated">기본값을 먼저 표시 할 필요는 없지만 기본값을 가진 인수를 그룹화해야합니다. 괜찮습니다 :</target>
        </trans-unit>
        <trans-unit id="fd7ef619d0f62212124ec6582eafe42df8e11ca5" translate="yes" xml:space="preserve">
          <source>The default value when creating a &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; is the value of the global flag &lt;a href=&quot;thread#method-c-report_on_exception&quot;&gt;&lt;code&gt;Thread.report_on_exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 작성할 때의 기본값 은 글로벌 플래그 &lt;a href=&quot;thread#method-c-report_on_exception&quot;&gt; &lt;code&gt;Thread.report_on_exception&lt;/code&gt; &lt;/a&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="94cb7df8878ae2dc079e913e8a0299ac27186604" translate="yes" xml:space="preserve">
          <source>The default values of these options can be modified on a class-wide basis by the class methods default_argc_limit, default_load_limit, default_acl, default_id_conv, and &lt;a href=&quot;drbserver#method-i-verbose-3D&quot;&gt;&lt;code&gt;verbose=&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이러한 옵션의 기본값은 클래스 메소드 default_argc_limit, default_load_limit, default_acl, default_id_conv 및 &lt;a href=&quot;drbserver#method-i-verbose-3D&quot;&gt; &lt;code&gt;verbose=&lt;/code&gt; &lt;/a&gt; 의해 클래스 전체에서 수정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2dcd04b3974cb711b26ba7f335dec659b199b0a" translate="yes" xml:space="preserve">
          <source>The default values of these options depend on &lt;code&gt;$stderr&lt;/code&gt; and its &lt;code&gt;tty?&lt;/code&gt; at the timing of a call.</source>
          <target state="translated">이 옵션의 기본값은 &lt;code&gt;$stderr&lt;/code&gt; 및 &lt;code&gt;tty?&lt;/code&gt; 통화 시간에.</target>
        </trans-unit>
        <trans-unit id="e25acd30f86704b6ed2df54b2be9eb59eba1d509" translate="yes" xml:space="preserve">
          <source>The defaults shall work for most situations but nevertheless they can be (preferably should be) overridden as per the plugins' needs safely (as long as they behave as expected). On overriding `initialize` you should call super first.</source>
          <target state="translated">기본값은 대부분의 상황에서 작동하지만 그럼에도 불구하고 플러그인의 요구에 따라 (예상대로 작동하는 한) 안전하게 (바람직하게는) 무시할 수 있습니다. '초기화'를 재정의 할 때는 먼저 super를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="e3a49dae902ca9731198195d4be4207c3fccf00e" translate="yes" xml:space="preserve">
          <source>The description for the error code set by the last call of &lt;a href=&quot;store#method-i-verify&quot;&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;store#method-i-verify&quot;&gt; &lt;code&gt;verify&lt;/code&gt; &lt;/a&gt; 의 마지막 호출로 설정된 오류 코드에 대한 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="948aa8dae813c34639ae84bd76e6b2e0f146945a" translate="yes" xml:space="preserve">
          <source>The description for this &lt;a href=&quot;group&quot;&gt;&lt;code&gt;Bundler::Thor::Group&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;group&quot;&gt; &lt;code&gt;Bundler::Thor::Group&lt;/code&gt; &lt;/a&gt; 대한 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="d9ef94e5b0fd9363ccb3ff6869d0f192941f1e43" translate="yes" xml:space="preserve">
          <source>The description for this &lt;a href=&quot;group&quot;&gt;&lt;code&gt;Bundler::Thor::Group&lt;/code&gt;&lt;/a&gt;. If none is provided, but a source root exists, tries to find the USAGE one folder above it, otherwise searches in the superclass.</source>
          <target state="translated">이 &lt;a href=&quot;group&quot;&gt; &lt;code&gt;Bundler::Thor::Group&lt;/code&gt; &lt;/a&gt; 대한 설명입니다 . 제공된 것이 없지만 소스 루트가 존재하면 그 위에있는 하나의 폴더를 USAGE 찾으려고 시도하고 그렇지 않으면 수퍼 클래스에서 검색합니다.</target>
        </trans-unit>
        <trans-unit id="675040ba46b365854f4478533de0223e499f812d" translate="yes" xml:space="preserve">
          <source>The desired length of the derived key in octets.</source>
          <target state="translated">파생 키의 원하는 길이 (옥텟)입니다.</target>
        </trans-unit>
        <trans-unit id="0873e2a52bb010acf0903c786a0c81f9f89fc860" translate="yes" xml:space="preserve">
          <source>The difference between 1 and the smallest double-precision floating point number greater than 1.</source>
          <target state="translated">1과 1보다 큰 최소 배정 밀도 부동 소수점 수의 차이입니다.</target>
        </trans-unit>
        <trans-unit id="413098964a9516ae46c91c99f5588936b686b8a0" translate="yes" xml:space="preserve">
          <source>The difference between the two can be seen in setting the User-Agent. Using &lt;code&gt;http.headers['User-Agent'] = 'MyUserAgent'&lt;/code&gt; will send &amp;ldquo;Ruby, MyUserAgent&amp;rdquo; while &lt;code&gt;http.override_headers['User-Agent'] = 'MyUserAgent'&lt;/code&gt; will send &amp;ldquo;MyUserAgent&amp;rdquo;.</source>
          <target state="translated">이 둘의 차이점은 User-Agent 설정에서 확인할 수 있습니다. 사용 &lt;code&gt;http.headers['User-Agent'] = 'MyUserAgent'&lt;/code&gt; 동안 '루비, MyUserAgent &quot;보내드립니다 &lt;code&gt;http.override_headers['User-Agent'] = 'MyUserAgent'&lt;/code&gt; &quot;MyUserAgent &quot;를 보낼 것이다.</target>
        </trans-unit>
        <trans-unit id="15233205a053a19e99f129e9aae4d139b06832ff" translate="yes" xml:space="preserve">
          <source>The difference is behavior with waiting enqueuing threads.</source>
          <target state="translated">차이점은 대기중인 대기열 스레드의 동작입니다.</target>
        </trans-unit>
        <trans-unit id="3d24e68446905d6949bf65d49c5f8f9c0a2e1ead" translate="yes" xml:space="preserve">
          <source>The directive consists of a percent (%) character, zero or more flags, optional minimum field width, optional modifier and a conversion specifier as follows:</source>
          <target state="translated">지시문은 다음과 같이 퍼센트 (%) 문자, 0 개 이상의 플래그, 선택적 최소 필드 너비, 선택적 수정 자 및 변환 지정자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="060852fd22231f358bd92213dcbea625af8117d9" translate="yes" xml:space="preserve">
          <source>The directives begin with a percent (%) character. Any text not listed as a directive will be passed through to the output string.</source>
          <target state="translated">지시문은 백분율 (%) 문자로 시작합니다. 지시문으로 나열되지 않은 모든 텍스트는 출력 문자열로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a267dc0b8348b31e30693cbc4f0f9040aaf1ac94" translate="yes" xml:space="preserve">
          <source>The directory is created under &lt;a href=&quot;dir#method-c-tmpdir&quot;&gt;&lt;code&gt;Dir.tmpdir&lt;/code&gt;&lt;/a&gt; or the optional second argument &lt;em&gt;tmpdir&lt;/em&gt; if non-nil value is given.</source>
          <target state="translated">디렉토리는 &lt;a href=&quot;dir#method-c-tmpdir&quot;&gt; &lt;code&gt;Dir.tmpdir&lt;/code&gt; &lt;/a&gt; 또는 선택적인 두 번째 인수 인 &lt;em&gt;tmpdir (&lt;/em&gt; Non이 아닌 값이 지정된 경우) 아래에 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="69aeb44b96a182667bf28902b34d8c697e73f928" translate="yes" xml:space="preserve">
          <source>The directory is created with 0700 permission. Application should not change the permission to make the temporary directory accessible from other users.</source>
          <target state="translated">디렉토리는 0700 권한으로 작성됩니다. 응용 프로그램은 다른 사용자가 임시 디렉토리에 액세스 할 수 있도록 권한을 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="919c59742988074b02bccafc24c1c3ab9d57bd34" translate="yes" xml:space="preserve">
          <source>The directory root for all plugin related data</source>
          <target state="translated">모든 플러그인 관련 데이터의 디렉토리 루트</target>
        </trans-unit>
        <trans-unit id="d3bece92e462e673997e5de7aea3061108ec3fdb" translate="yes" xml:space="preserve">
          <source>The directory used in these examples contains the two regular files (&lt;code&gt;config.h&lt;/code&gt; and &lt;code&gt;main.rb&lt;/code&gt;), the parent directory (&lt;code&gt;..&lt;/code&gt;), and the directory itself (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">이 예제에 사용 된 디렉토리에는 두 개의 일반 파일 ( &lt;code&gt;config.h&lt;/code&gt; 및 &lt;code&gt;main.rb&lt;/code&gt; ), 상위 디렉토리 ( &lt;code&gt;..&lt;/code&gt; ) 및 디렉토리 자체 ( &lt;code&gt;.&lt;/code&gt; )가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="71c5409dd2bdfcc125fc2fa628fce6e6a8a69587" translate="yes" xml:space="preserve">
          <source>The domain name doesn't have a trailing dot even if the name object is absolute.</source>
          <target state="translated">이름 개체가 절대적인 경우에도 도메인 이름 뒤에 점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce181e8a19758cb5582f2d40e270c9881dbf3d63" translate="yes" xml:space="preserve">
          <source>The domain name of the target host.</source>
          <target state="translated">대상 호스트의 도메인 이름</target>
        </trans-unit>
        <trans-unit id="3faa55d3b57c7790b3ed19ca4f253e83b7521847" translate="yes" xml:space="preserve">
          <source>The easiest way to create a useful certificate store is:</source>
          <target state="translated">유용한 인증서 저장소를 만드는 가장 쉬운 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="311e8c8e7db4db38079c87b272616b398294bec2" translate="yes" xml:space="preserve">
          <source>The easiest way to signal that we want an otherwise marshallable object to be passed or returned as a &lt;a href=&quot;drb/drbobject&quot;&gt;&lt;code&gt;DRbObject&lt;/code&gt;&lt;/a&gt; reference, rather than marshalled and sent as a copy, is to include the &lt;a href=&quot;drb/drbundumped&quot;&gt;&lt;code&gt;DRb::DRbUndumped&lt;/code&gt;&lt;/a&gt; mixin module.</source>
          <target state="translated">마샬링되어 사본으로 전송되지 않고 다른 마샬링 가능 오브젝트를 &lt;a href=&quot;drb/drbobject&quot;&gt; &lt;code&gt;DRbObject&lt;/code&gt; &lt;/a&gt; 참조 로 전달하거나 리턴하도록 신호를 보내는 가장 쉬운 방법 은 &lt;a href=&quot;drb/drbundumped&quot;&gt; &lt;code&gt;DRb::DRbUndumped&lt;/code&gt; &lt;/a&gt; mixin 모듈 을 포함하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4febaa8b9e14091bf3aa2ee68d69ececaca3be0c" translate="yes" xml:space="preserve">
          <source>The elements are chosen by using random and unique indices into the array in order to ensure that an element doesn't repeat itself unless the array already contained duplicate elements.</source>
          <target state="translated">배열에 이미 중복 요소가 포함되어 있지 않은 한 요소가 반복되지 않도록하기 위해 배열에 임의의 고유 인덱스를 사용하여 요소를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="50e92d727dbd107dfec10afd9ceda9fe0c428f49" translate="yes" xml:space="preserve">
          <source>The empty option &lt;code&gt;--&lt;/code&gt; (two minus symbols) is used to end option processing. This can be particularly important if options have optional arguments.</source>
          <target state="translated">빈 옵션 &lt;code&gt;--&lt;/code&gt; (두 개의 빼기 기호)은 옵션 처리를 종료하는 데 사용됩니다. 옵션에 선택적 인수가있는 경우 특히 중요 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bff851bc364666365e2bf3039ff10b77b84efd8b" translate="yes" xml:space="preserve">
          <source>The encoded &lt;code&gt;:col_sep&lt;/code&gt; used in parsing and writing. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">파싱 ​​및 쓰기에 사용되는 인코딩 된 &lt;code&gt;:col_sep&lt;/code&gt; 자세한 내용은 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bc4eda85a707b2f432b222f3950f3208d1c06d35" translate="yes" xml:space="preserve">
          <source>The encoded &lt;code&gt;:quote_char&lt;/code&gt; used in parsing and writing. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">구문 분석 및 쓰기에 사용되는 인코딩 된 &lt;code&gt;:quote_char&lt;/code&gt; 자세한 내용은 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c6fa79fc9521441c8f06be062f256bc56753175e" translate="yes" xml:space="preserve">
          <source>The encoded &lt;code&gt;:row_sep&lt;/code&gt; used in parsing and writing. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">구문 분석 및 쓰기에 사용되는 인코딩 된 &lt;code&gt;:row_sep&lt;/code&gt; 자세한 내용은 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e4193d4bd081b5e77b4c63a469741fb8d3b02609" translate="yes" xml:space="preserve">
          <source>The encoding to eval</source>
          <target state="translated">평가할 인코딩</target>
        </trans-unit>
        <trans-unit id="0c638e6fb0376cf0b3c41892846e0149a3d4b9f7" translate="yes" xml:space="preserve">
          <source>The encoding used by all converters.</source>
          <target state="translated">모든 변환기에서 사용하는 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="9b5f01ac3134989ab7290b5b515fdbc136550026" translate="yes" xml:space="preserve">
          <source>The encodings are downcased for canonicalization.</source>
          <target state="translated">정규화를 위해 인코딩이 소문자로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="63201a6d0c4b5345fafde15fde3b2f1686aab598" translate="yes" xml:space="preserve">
          <source>The end delimiter for a regexp can be followed by one or more single-letter options which control how the pattern can match.</source>
          <target state="translated">정규 표현식의 끝 구분 기호 다음에는 패턴 일치 방법을 제어하는 ​​하나 이상의 단일 문자 옵션이 올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18199783e04a1be7a4385448d9f76421a69ac9c4" translate="yes" xml:space="preserve">
          <source>The end of a syntax block. Used by classes, modules, methods, exception handling and control expressions.</source>
          <target state="translated">구문 블록의 끝 클래스, 모듈, 메소드, 예외 처리 및 제어 표현식에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d34910acf856b0ec42c4acc8bcbf65c9f18906a8" translate="yes" xml:space="preserve">
          <source>The engine or interpreter this ruby uses.</source>
          <target state="translated">이 루비가 사용하는 엔진이나 인터프리터.</target>
        </trans-unit>
        <trans-unit id="576abda2103c53de4762b29e8b5c15ea5ebcdd4b" translate="yes" xml:space="preserve">
          <source>The environment variables such as http_proxy, https_proxy and ftp_proxy are in effect by default. Here we disable proxy:</source>
          <target state="translated">http_proxy, https_proxy 및 ftp_proxy와 같은 환경 변수는 기본적으로 적용됩니다. 여기서 프록시를 비활성화합니다 :</target>
        </trans-unit>
        <trans-unit id="370b5cbc6f82aa059ecb58713ba0ea5cfaf942a6" translate="yes" xml:space="preserve">
          <source>The eql? method returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; refer to the same hash key. This is used by &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; to test members for equality. For any pair of objects where eql? returns &lt;code&gt;true&lt;/code&gt;, the hash value of both objects must be equal. So any subclass that overrides eql? should also override hash appropriately.</source>
          <target state="translated">EQl? &lt;code&gt;obj&lt;/code&gt; 및 &lt;code&gt;other&lt;/code&gt; 가 동일한 해시 키를 참조하는 경우 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 이것은 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 에서 멤버가 같은지 테스트 하는 데 사용됩니다 . eql이있는 객체 쌍에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 두 객체의 해시 값이 동일해야합니다. 그래서 eql을 재정의하는 하위 클래스가 있습니까? 또한 해시를 적절하게 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="cd82be4ca9f8b79816e0388d0251953fc3e39302" translate="yes" xml:space="preserve">
          <source>The equality of nodes are defined by eql? and hash since &lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; internally.</source>
          <target state="translated">노드의 동등성은 eql? &lt;a href=&quot;tsort&quot;&gt; &lt;code&gt;TSort&lt;/code&gt; &lt;/a&gt; 는 내부적으로 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 사용하기 때문에 해시 .</target>
        </trans-unit>
        <trans-unit id="7b68075a38c867dae6e34768849fbf0e3c27b23b" translate="yes" xml:space="preserve">
          <source>The equivalent of &lt;code&gt;included&lt;/code&gt;, but for extended modules.</source>
          <target state="translated">&lt;code&gt;included&lt;/code&gt; 과 동일 하지만 확장 모듈에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="0028ef919a427d5da87980ca1b36ff3f7001fa0c" translate="yes" xml:space="preserve">
          <source>The equivalent of &lt;code&gt;included&lt;/code&gt;, but for prepended modules.</source>
          <target state="translated">&lt;code&gt;included&lt;/code&gt; 것과 같지만 앞에 붙은 모듈에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="3c63c34a887660f89b873557acf44eaa13fb5220" translate="yes" xml:space="preserve">
          <source>The error code set by the last call of &lt;a href=&quot;store#method-i-verify&quot;&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;store#method-i-verify&quot;&gt; &lt;code&gt;verify&lt;/code&gt; &lt;/a&gt; 의 마지막 호출로 설정된 오류 코드입니다 .</target>
        </trans-unit>
        <trans-unit id="e1fbb8c65931f33347836ab937a96d97d330a124" translate="yes" xml:space="preserve">
          <source>The error message for the missing dependency, including the specifications that had this dependency.</source>
          <target state="translated">이 종속성이있는 스펙을 포함하여 누락 된 종속성에 대한 오류 메시지.</target>
        </trans-unit>
        <trans-unit id="13d382340e848c8c7c08379fceaa140f390e19bb" translate="yes" xml:space="preserve">
          <source>The error thrown when the parser encounters illegal &lt;a href=&quot;../csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; formatting.</source>
          <target state="translated">파서에 잘못된 &lt;a href=&quot;../csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 형식이 있을 때 발생하는 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="59807b6526fccfa7161143614f44f58bcf242e29" translate="yes" xml:space="preserve">
          <source>The error type thrown by all &lt;a href=&quot;../pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">모든 &lt;a href=&quot;../pstore&quot;&gt; &lt;code&gt;PStore&lt;/code&gt; &lt;/a&gt; 메소드에서 발생하는 오류 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="042ad278eb21252e3f43b97395f10ec5feabd0f3" translate="yes" xml:space="preserve">
          <source>The errors available on the current platform are subclasses of &lt;a href=&quot;systemcallerror&quot;&gt;&lt;code&gt;SystemCallError&lt;/code&gt;&lt;/a&gt; and are defined in the &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">현재 플랫폼에서 사용 가능한 오류는 &lt;a href=&quot;systemcallerror&quot;&gt; &lt;code&gt;SystemCallError&lt;/code&gt; 의&lt;/a&gt; 서브 클래스이며 &lt;a href=&quot;errno&quot;&gt; &lt;code&gt;Errno&lt;/code&gt; &lt;/a&gt; 모듈에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e54472914e122220862dbfcd74566e682fd30ea9" translate="yes" xml:space="preserve">
          <source>The exact library used depends on how Ruby was compiled. It could be any of the following:</source>
          <target state="translated">사용 된 정확한 라이브러리는 Ruby가 컴파일 된 방법에 따라 다릅니다. 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="911d398dc4bad3dfa35c914be5c4982e19fa1b50" translate="yes" xml:space="preserve">
          <source>The example above is very verbose. You can shorten the code by using some utility methods. First, the block form of &lt;a href=&quot;pop3#method-c-start&quot;&gt;&lt;code&gt;Net::POP3.start&lt;/code&gt;&lt;/a&gt; can be used instead of &lt;a href=&quot;pop3#method-c-new&quot;&gt;&lt;code&gt;POP3.new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pop3#method-i-start&quot;&gt;&lt;code&gt;POP3#start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pop3#method-i-finish&quot;&gt;&lt;code&gt;POP3#finish&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위의 예는 매우 장황합니다. 일부 유틸리티 메소드를 사용하여 코드를 줄일 수 있습니다. 먼저 &lt;a href=&quot;pop3#method-c-new&quot;&gt; &lt;code&gt;POP3.new&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pop3#method-i-start&quot;&gt; &lt;code&gt;POP3#start&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pop3#method-i-finish&quot;&gt; &lt;code&gt;POP3#finish&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;pop3#method-c-start&quot;&gt; &lt;code&gt;Net::POP3.start&lt;/code&gt; &lt;/a&gt; 의 블록 형식을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35224fc1b51799570d027e3e200d109df75791ea" translate="yes" xml:space="preserve">
          <source>The exception class which will be raised when pushing into a closed &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;queue#method-i-close&quot;&gt;&lt;code&gt;Queue#close&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sizedqueue#method-i-close&quot;&gt;&lt;code&gt;SizedQueue#close&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">닫힌 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 푸시 할 때 발생하는 예외 클래스입니다 . &lt;a href=&quot;queue#method-i-close&quot;&gt; &lt;code&gt;Queue#close&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sizedqueue#method-i-close&quot;&gt; &lt;code&gt;SizedQueue#close&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72199b578ff0c66347a31e54b9f999651d4a9dfa" translate="yes" xml:space="preserve">
          <source>The exception information message set by 'raise'.</source>
          <target state="translated">'raise'에 의해 설정된 예외 정보 메시지.</target>
        </trans-unit>
        <trans-unit id="92d29fe7583517e1cd85087672f0d45b39fbd161" translate="yes" xml:space="preserve">
          <source>The exception is matched to the rescue section starting at the top, and matches only once. If an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised in the begin section, it will not be handled in the &lt;a href=&quot;../standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">예외는 상단에서 시작하는 구조 섹션과 일치하며 한 번만 일치합니다. 는 IF &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 지정된 시작 부분에서 발생, 그것은에서 처리되지 않습니다 &lt;a href=&quot;../standarderror&quot;&gt; &lt;code&gt;StandardError&lt;/code&gt; 의&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cb98a30a2d7e15fe2fb43b0e14c05e9dd5c4f25c" translate="yes" xml:space="preserve">
          <source>The exception thrown to terminate the given block cannot be rescued inside the block unless &lt;code&gt;klass&lt;/code&gt; is given explicitly.</source>
          <target state="translated">&lt;code&gt;klass&lt;/code&gt; 가 명시 적으로 제공 되지 않으면 주어진 블록을 종료하기 위해 발생한 예외를 블록 내부에서 구할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="74ae540c30c2fd18545e3ecd183dc38a2f97b87b" translate="yes" xml:space="preserve">
          <source>The exception thrown to terminate the given block cannot be rescued inside the block unless &lt;code&gt;klass&lt;/code&gt; is given explicitly. However, the block can use ensure to prevent the handling of the exception. For that reason, this method cannot be relied on to enforce timeouts for untrusted blocks.</source>
          <target state="translated">주어진 블록을 종료하기 위해 던져진 예외 는 &lt;code&gt;klass&lt;/code&gt; 가 명시 적으로 주어 지지 않는 한 블록 내에서 구조 될 수 없습니다 . 그러나 블록은 예외 처리를 방지하기 위해 ensure를 사용할 수 있습니다. 이러한 이유로이 방법은 신뢰할 수없는 블록에 대한 시간 제한을 적용하는 데 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="955b0a78fc6dd54cd2b79ec12c40985c83f45c3b" translate="yes" xml:space="preserve">
          <source>The exclusive access mode (&amp;ldquo;x&amp;rdquo;) can be used together with &amp;ldquo;w&amp;rdquo; to ensure the file is created. &lt;code&gt;Errno::EEXIST&lt;/code&gt; is raised when it already exists. It may not be supported with all kinds of streams (e.g. pipes).</source>
          <target state="translated">단독 액세스 모드 ( &quot;x&quot;)를 &quot;w&quot;와 함께 사용하여 파일을 만들 수 있습니다. &lt;code&gt;Errno::EEXIST&lt;/code&gt; 는 이미 존재하면 발생합니다. 모든 종류의 스트림 (예 : 파이프)에서는 지원되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b07b8e3b1cf920ce39787ba7086b7588e3202418" translate="yes" xml:space="preserve">
          <source>The exclusive access mode (&amp;ldquo;x&amp;rdquo;) can be used together with &amp;ldquo;w&amp;rdquo; to ensure the file is created. Errno::EEXIST is raised when it already exists. It may not be supported with all kinds of streams (e.g. pipes).</source>
          <target state="translated">독점 액세스 모드 ( &quot;x&quot;)를 &quot;w&quot;와 함께 사용하여 파일이 생성되었는지 확인할 수 있습니다. Errno :: EEXIST는 이미 존재하는 경우 발생합니다. 모든 종류의 스트림 (예 : 파이프)에서는 지원되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa57c1b626146c8281affd96a299b4cadbab1d3c" translate="yes" xml:space="preserve">
          <source>The extension may be created from &lt;em&gt;der&lt;/em&gt; data or from an extension &lt;em&gt;oid&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;. The &lt;em&gt;oid&lt;/em&gt; may be either an OID or an extension name. If &lt;em&gt;critical&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; the extension is marked critical.</source>
          <target state="translated">확장을 만들 수있다 &lt;em&gt;데어&lt;/em&gt; 데이터 또는 확장에서 &lt;em&gt;OID&lt;/em&gt; 및 &lt;em&gt;값&lt;/em&gt; . &lt;em&gt;OID는&lt;/em&gt; OID를 또는 확장자 이름이 될 수 있습니다. 경우 &lt;em&gt;중요한이&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; 확장 중요한 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="df94a17d0216a7c6ddb5f2518f1578633aae5a5f" translate="yes" xml:space="preserve">
          <source>The facility argument is used to specify what type of program is logging the message.</source>
          <target state="translated">facility 인수는 메시지를 로깅하는 프로그램 유형을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="92f92e58280d7b560aa835809a01e1c123f32d3e" translate="yes" xml:space="preserve">
          <source>The false itself.</source>
          <target state="translated">거짓 자체.</target>
        </trans-unit>
        <trans-unit id="c8f849b505c52a4c30ff977ca14f13b7e6283ef6" translate="yes" xml:space="preserve">
          <source>The fiber which receives the transfer call is treats it much like a resume call. Arguments passed to transfer are treated like those passed to resume.</source>
          <target state="translated">호 전환 전화를받는 파이버는 재개 호처럼 처리합니다. 전달 된 인수는 재개하기 위해 전달 된 인수처럼 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="1bee5d440fe98063654d400b6134543e61b6bc0d" translate="yes" xml:space="preserve">
          <source>The field type characters are:</source>
          <target state="translated">필드 유형 문자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d0cabb0dec3924f84ac20c0ab88719a5fa4fc4b" translate="yes" xml:space="preserve">
          <source>The field width is an optional integer, followed optionally by a period and a precision. The width specifies the minimum number of characters that will be written to the result for this field.</source>
          <target state="translated">필드 너비는 선택적 정수이며, 선택적으로 마침표와 정밀도입니다. 너비는이 필드의 결과에 기록 될 최소 문자 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="faf24efdc523d12ab59303a13b046afcf135824b" translate="yes" xml:space="preserve">
          <source>The file &lt;a href=&quot;cgi/session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; provides session management functionality; see that class for more details.</source>
          <target state="translated">&lt;a href=&quot;cgi/session&quot;&gt; &lt;code&gt;CGI::Session&lt;/code&gt; &lt;/a&gt; 파일 은 세션 관리 기능을 제공합니다. 자세한 내용은 해당 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3d0a6e7a170738386439792ce47ebe5dbf0fc73d" translate="yes" xml:space="preserve">
          <source>The file can contain several CA certificates.</source>
          <target state="translated">파일에는 여러 CA 인증서가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a541343df3021bee76251f08876e60c134a8a41" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file is invalid.</source>
          <target state="translated">현재 파일의 파일 디스크립터가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea45bab6fbadc9b33ac8274bfb89c630f120be45" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file refers to a FIFO or pipe. (Linux raises &lt;code&gt;Errno::EINVAL&lt;/code&gt; in this case).</source>
          <target state="translated">현재 파일의 파일 디스크립터는 FIFO 또는 파이프를 나타냅니다. ( 이 경우 Linux는 &lt;code&gt;Errno::EINVAL&lt;/code&gt; 을 발생시킵니다).</target>
        </trans-unit>
        <trans-unit id="a9543905f6ee8e99166f4c7f21e15936b85a28bf" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file refers to a FIFO or pipe. (Linux raises Errno::EINVAL in this case).</source>
          <target state="translated">현재 파일의 파일 설명자는 FIFO 또는 파이프를 참조합니다. (이 경우 Linux는 Errno :: EINVAL을 발생시킵니다).</target>
        </trans-unit>
        <trans-unit id="b222f402a17e16ae0f187d040de19b4a4448ed14" translate="yes" xml:space="preserve">
          <source>The file name of the input.</source>
          <target state="translated">입력 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="973e938d148820965aa55987b1cdee5059db5a96" translate="yes" xml:space="preserve">
          <source>The file object of the script, pointing just after &lt;code&gt;__END__&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__END__&lt;/code&gt; 바로 뒤를 가리키는 스크립트의 파일 객체 .</target>
        </trans-unit>
        <trans-unit id="f7a8c67411d2deec52cc2870c835955cd0b1af51" translate="yes" xml:space="preserve">
          <source>The file object of the script, pointing just after __END__.</source>
          <target state="translated">__END__ 바로 다음을 가리키는 스크립트의 파일 객체입니다.</target>
        </trans-unit>
        <trans-unit id="8c264f1173ab5a719baa76a54aa4ce72af93a876" translate="yes" xml:space="preserve">
          <source>The first byte has the following special values:</source>
          <target state="translated">첫 번째 바이트에는 다음과 같은 특수 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed602da95001f4afe8ee72a23bcfb244c0a1bb76" translate="yes" xml:space="preserve">
          <source>The first element is a multicast address and the second is an inbound interface address. The third is an inbound interface index.</source>
          <target state="translated">첫 번째 요소는 멀티 캐스트 주소이고 두 번째 요소는 인바운드 인터페이스 주소입니다. 세 번째는 인바운드 인터페이스 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="7fce24f0bc3c112f0c870498f3780dcd73f6a101" translate="yes" xml:space="preserve">
          <source>The first form calculates &lt;code&gt;bn1 * point + bn2 * G&lt;/code&gt;, where &lt;code&gt;G&lt;/code&gt; is the generator of the group of &lt;em&gt;point&lt;/em&gt;. &lt;em&gt;bn2&lt;/em&gt; may be omitted, and in that case, the result is just &lt;code&gt;bn1 * point&lt;/code&gt;.</source>
          <target state="translated">첫 번째 양식은 &lt;code&gt;bn1 * point + bn2 * G&lt;/code&gt; 계산합니다 . 여기서 &lt;code&gt;G&lt;/code&gt; 는 &lt;em&gt;점&lt;/em&gt; 그룹의 생성기입니다 . &lt;em&gt;bn2&lt;/em&gt; 는 생략 될 수 있으며,이 경우 결과는 &lt;code&gt;bn1 * point&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bef04668e054cb27329677b3d2603c9607aeb76b" translate="yes" xml:space="preserve">
          <source>The first form is equivalent to &lt;a href=&quot;module#method-i-attr_reader&quot;&gt;&lt;code&gt;attr_reader&lt;/code&gt;&lt;/a&gt;. The second form is equivalent to &lt;code&gt;attr_accessor(name)&lt;/code&gt; but deprecated. The last form is equivalent to &lt;code&gt;attr_reader(name)&lt;/code&gt; but deprecated.</source>
          <target state="translated">첫 번째 형식은 &lt;a href=&quot;module#method-i-attr_reader&quot;&gt; &lt;code&gt;attr_reader&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 두 번째 형식은 &lt;code&gt;attr_accessor(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다. 마지막 형식은 &lt;code&gt;attr_reader(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e0bdaa0adad0cfc4a502cad439ee9f784f0bb92" translate="yes" xml:space="preserve">
          <source>The first form is equivalent to &lt;code&gt;attr_reader&lt;/code&gt;. The second form is equivalent to &lt;code&gt;attr_accessor(name)&lt;/code&gt; but deprecated. The last form is equivalent to &lt;code&gt;attr_reader(name)&lt;/code&gt; but deprecated.</source>
          <target state="translated">첫 번째 형식은 &lt;code&gt;attr_reader&lt;/code&gt; 와 같습니다 . 두 번째 형식은 &lt;code&gt;attr_accessor(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다. 마지막 형식은 &lt;code&gt;attr_reader(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="287b710cb619f5747a68f3fd3567c2f6f4b3e6de" translate="yes" xml:space="preserve">
          <source>The first form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded to encoding &lt;code&gt;encoding&lt;/code&gt;. The second form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded from src_encoding to dst_encoding. The last form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded to &lt;code&gt;Encoding.default_internal&lt;/code&gt;.</source>
          <target state="translated">첫 번째 형식은 인코딩 &lt;code&gt;encoding&lt;/code&gt; 트랜스 코딩 된 &lt;code&gt;str&lt;/code&gt; 의 복사본을 반환합니다 . 두 번째 형식은 src_encoding에서 dst_encoding으로 트랜스 코딩 된 &lt;code&gt;str&lt;/code&gt; 의 복사본을 반환합니다 . 마지막 형식은 &lt;code&gt;Encoding.default_internal&lt;/code&gt; 로 트랜스 코딩 된 &lt;code&gt;str&lt;/code&gt; 사본을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b6f03b444eafef2dd35ae106761f74d8ee243792" translate="yes" xml:space="preserve">
          <source>The first form returns the &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object generated by the last successful pattern match. Equivalent to reading the special global variable &lt;code&gt;$~&lt;/code&gt; (see Special global variables in &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">첫 번째 형식은 마지막으로 성공한 패턴 일치로 생성 된 &lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; &lt;/a&gt; 개체를 반환합니다 . 특수 전역 변수 &lt;code&gt;$~&lt;/code&gt; 를 읽는 것과 같습니다 ( 자세한 내용 은 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; 의&lt;/a&gt; 특수 전역 변수 참조).</target>
        </trans-unit>
        <trans-unit id="2a151eaddbec51935fe4272fd6afa695860b7276" translate="yes" xml:space="preserve">
          <source>The first form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from str.encoding to &lt;code&gt;encoding&lt;/code&gt;. The second form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from src_encoding to dst_encoding. The options &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; gives details for conversion. See &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;String#encode&lt;/code&gt;&lt;/a&gt; for details. Returns the string even if no changes were made.</source>
          <target state="translated">첫 번째 형식은 &lt;em&gt;str&lt;/em&gt; 의 내용을 str.encoding에서 &lt;code&gt;encoding&lt;/code&gt; 으로 트랜스 코딩합니다 . 두 번째 형식은 &lt;em&gt;str&lt;/em&gt; 의 내용을 src_encoding에서 dst_encoding으로 트랜스 코딩합니다 . &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 옵션 은 변환에 대한 세부 사항을 제공합니다. 자세한 내용은 &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;String#encode&lt;/code&gt; &lt;/a&gt; 를 참조하십시오. 변경 사항이 없어도 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="71c091ee5798053ac7f58ee7e261fa11ffe9af5d" translate="yes" xml:space="preserve">
          <source>The first group of parentheses captures 'n' and the second 'ti'. The second group is referred to later with the backreference &lt;code&gt;\2&lt;/code&gt;:</source>
          <target state="translated">첫 번째 괄호 그룹은 'n'과 두 번째 'ti'를 캡처합니다. 두 번째 그룹은 나중에 역 참조 &lt;code&gt;\2&lt;/code&gt; 참조됩니다 .</target>
        </trans-unit>
        <trans-unit id="fcc157ce509f69520a31a4627088623f2941641d" translate="yes" xml:space="preserve">
          <source>The first group of parentheses is now made non-capturing with '?:', so it still matches 'n', but doesn't create the backreference. Thus, the backreference &lt;code&gt;\1&lt;/code&gt; now refers to 'ti'.</source>
          <target state="translated">첫 번째 괄호 그룹은 이제 '? :'로 캡처하지 않으므로 여전히 'n'과 일치하지만 역 참조를 만들지는 않습니다. 따라서 역 참조 &lt;code&gt;\1&lt;/code&gt; 이제 'ti'를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="cd5e9d8b4a834f4588da7909a19847d7fb7e686e" translate="yes" xml:space="preserve">
          <source>The first line of the human readable reply text</source>
          <target state="translated">사람이 읽을 수있는 답장 텍스트의 첫 번째 줄</target>
        </trans-unit>
        <trans-unit id="43d244406bab298362ac496f5ae5d6755bcd7521" translate="yes" xml:space="preserve">
          <source>The first option name is considered to be the preferred (canonical) name. Other than that, the elements of each sub-array can be in any order.</source>
          <target state="translated">첫 번째 옵션 이름은 선호되는 (정식) 이름으로 간주됩니다. 그 외에도 각 하위 배열의 요소는 임의의 순서로있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4a118fda9eda8319dac4c4b334cf4231a2a5f79" translate="yes" xml:space="preserve">
          <source>The first three forms set the selected elements of &lt;code&gt;self&lt;/code&gt; (which may be the entire array) to &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">처음 세 형식은 선택한 &lt;code&gt;self&lt;/code&gt; 요소 (전체 배열 일 수 있음)를 &lt;code&gt;obj&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="072bc6a355bfe1a4645b537e5cf7b840882d2476" translate="yes" xml:space="preserve">
          <source>The first time it is called it opens the file and returns the first entry; each successive call returns the next entry, or &lt;code&gt;nil&lt;/code&gt; if the end of the file has been reached.</source>
          <target state="translated">처음 호출 될 때 파일을 열고 첫 번째 항목을 리턴합니다. 각 연속 호출은 다음 항목을 반환하거나 파일 끝에 도달하면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f4d286e05bafe286b8b26cee6a57b01374eaf87e" translate="yes" xml:space="preserve">
          <source>The first two bytes of the stream contain the major and minor version, each as a single byte encoding a digit. The version implemented in Ruby is 4.8 (stored as &amp;ldquo;x04x08&amp;rdquo;) and is supported by ruby 1.8.0 and newer.</source>
          <target state="translated">스트림의 처음 2 바이트에는 메이저 버전과 마이너 버전이 포함되며 각각은 숫자를 인코딩하는 단일 바이트입니다. Ruby로 구현 된 버전은 4.8 ( &quot;x04x08&quot;로 저장)이며 ruby ​​1.8.0 이상에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8dbbd0a0ef5e5569e7f851d3899fe0e1d77e3389" translate="yes" xml:space="preserve">
          <source>The first two forms are used to create a new &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; subclass &lt;code&gt;class_name&lt;/code&gt; that can contain a value for each &lt;code&gt;member_name&lt;/code&gt;. This subclass can be used to create instances of the structure like any other &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">처음 두 양식은 각 &lt;code&gt;member_name&lt;/code&gt; 의 값을 포함 할 수 있는 새 &lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 서브 클래스 &lt;code&gt;class_name&lt;/code&gt; 을 작성하는 데 사용됩니다 . 이 서브 클래스는 다른 &lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 구조의 인스턴스를 만드는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88d7f18a849c7920874ce3f2ce898509e19beded" translate="yes" xml:space="preserve">
          <source>The first value is the current number of significant digits in the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;. The second value is the maximum number of significant digits for the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">첫 번째 값은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 현재 유효 자릿수입니다 . 두 번째 값은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 최대 유효 자릿수입니다 .</target>
        </trans-unit>
        <trans-unit id="a89696d6d8f023ca086652d5e54d9269bb96558c" translate="yes" xml:space="preserve">
          <source>The first value represents the sign of the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, and is -1 or 1, or 0 if the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; is Not a Number.</source>
          <target state="translated">첫 번째 값은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 부호를 나타내며 -1 또는 1이거나 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 이 숫자가 아닌 경우 0 입니다.</target>
        </trans-unit>
        <trans-unit id="f207d25e3140e4cb366ab93f284b12fce5504d26" translate="yes" xml:space="preserve">
          <source>The first way is by using the class method &lt;a href=&quot;thread#method-c-stop&quot;&gt;&lt;code&gt;::stop&lt;/code&gt;&lt;/a&gt;, to put the current running thread to sleep and schedule the execution of another thread.</source>
          <target state="translated">첫 번째 방법은 클래스 메소드 &lt;a href=&quot;thread#method-c-stop&quot;&gt; &lt;code&gt;::stop&lt;/code&gt; &lt;/a&gt; 을 사용하여 현재 실행중인 스레드를 휴면 상태로 만들고 다른 스레드의 실행을 예약하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="491def4ba451f6481ff4dd5528cfc5dfaf0e7216" translate="yes" xml:space="preserve">
          <source>The fixnum type is used to represent both ruby Fixnum objects and the sizes of marshaled arrays, hashes, instance variables and other types. In the following sections &amp;ldquo;long&amp;rdquo; will mean the format described below, which supports full 32 bit precision.</source>
          <target state="translated">fixnum 유형은 루비 Fixnum 오브젝트와 마샬링 된 배열, 해시, 인스턴스 변수 및 기타 유형의 크기를 나타내는 데 사용됩니다. 다음 섹션에서 &quot;long&quot;은 아래에 설명 된 형식을 의미하며 전체 32 비트 정밀도를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="27afd3be9806910cf4dd160394eb17bffcf0bf6d" translate="yes" xml:space="preserve">
          <source>The flag is used for initial value of &lt;a href=&quot;basicsocket#method-c-do_not_reverse_lookup&quot;&gt;&lt;code&gt;do_not_reverse_lookup&lt;/code&gt;&lt;/a&gt; for each socket.</source>
          <target state="translated">플래그는 각 소켓에 대한 초기 값 &lt;a href=&quot;basicsocket#method-c-do_not_reverse_lookup&quot;&gt; &lt;code&gt;do_not_reverse_lookup&lt;/code&gt; &lt;/a&gt; 에 사용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="db32fed8f46fab1dcc4e60354783b9323ee2085d" translate="yes" xml:space="preserve">
          <source>The flag value can be either of:</source>
          <target state="translated">플래그 값은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="944607c5718cd118bb1cd25f452f563fd505d548" translate="yes" xml:space="preserve">
          <source>The flags modifies the behavior of the formats. The flag characters are:</source>
          <target state="translated">플래그는 형식의 동작을 수정합니다. 플래그 문자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b19230239a88c8a4cc8551efa3fc2a4495f6ff62" translate="yes" xml:space="preserve">
          <source>The flip-flop is a rarely seen conditional expression. It's primary use is for processing text from ruby one-line programs used with &lt;code&gt;ruby -n&lt;/code&gt; or &lt;code&gt;ruby -p&lt;/code&gt;.</source>
          <target state="translated">플립 플롭은 거의 보이지 않는 조건식입니다. &lt;code&gt;ruby -n&lt;/code&gt; 또는 &lt;code&gt;ruby -p&lt;/code&gt; 와 함께 사용되는 ruby ​​한 줄 프로그램의 텍스트를 처리하는 데 주로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9bf9bb78967de7f682cdfe83269eab421c646802" translate="yes" xml:space="preserve">
          <source>The flip-flop must be used inside a conditional such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;unless&lt;/code&gt;, &lt;code&gt;until&lt;/code&gt; etc. including the modifier forms.</source>
          <target state="translated">플립 플롭은 이러한 조건 내에서 사용되어야하므로, &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;unless&lt;/code&gt; , &lt;code&gt;until&lt;/code&gt; 등 개질제 형태 등.</target>
        </trans-unit>
        <trans-unit id="a12aadaf0a808408707cf62e33e729b40f01b535" translate="yes" xml:space="preserve">
          <source>The following are &lt;em&gt;metacharacters&lt;/em&gt;&lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;. They have a specific meaning when appearing in a pattern. To match them literally they must be backslash-escaped. To match a backslash literally, backslash-escape it: &lt;code&gt;\\&lt;/code&gt;.</source>
          <target state="translated">다음은 &lt;em&gt;메타 문자 &lt;/em&gt; &lt;code&gt;(&lt;/code&gt; , &lt;code&gt;)&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;]&lt;/code&gt; , &lt;code&gt;{&lt;/code&gt; , &lt;code&gt;}&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; . 패턴으로 나타날 때 특정 의미를 갖습니다. 문자 그대로 일치 시키려면 백 슬래시 이스케이프 처리해야합니다. 백 슬래시를 문자 그대로 일치 시키려면 백 슬래시를 이스케이프하십시오 : &lt;code&gt;\\&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b75f210490d236ca69d4039cf3c9fc3437e8c002" translate="yes" xml:space="preserve">
          <source>The following are examples of valid Ruby methods:</source>
          <target state="translated">다음은 유효한 Ruby 메소드의 예입니다.</target>
        </trans-unit>
        <trans-unit id="1158125c14e5678fbd8dbdd19e4c083611c5a54b" translate="yes" xml:space="preserve">
          <source>The following are the methods most likely to be useful to users:</source>
          <target state="translated">다음은 사용자에게 가장 유용한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="7dd4fee7f6b4e4f173c322317ed6e77f17b18e58" translate="yes" xml:space="preserve">
          <source>The following conversions are available.</source>
          <target state="translated">다음과 같은 변환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="1f5a045b724813c2b05245c7edb3728a2ca0766d" translate="yes" xml:space="preserve">
          <source>The following example code can be used as the basis of an &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; user-agent which can perform a variety of request types using persistent connections.</source>
          <target state="translated">다음 예제 코드는 지속적 연결을 사용하여 다양한 요청 유형을 수행 할 수 있는 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 사용자 에이전트 의 기초로 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="498d48967db49488df7cf0e00790ce91c80ebabd" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to mix the &lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; module into an existing class (in this case, &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;). Here, we're treating each key in the hash as a node in the graph, and so we simply alias the required &lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt;&lt;code&gt;tsort_each_node&lt;/code&gt;&lt;/a&gt; method to Hash's each_key method. For each key in the hash, the associated value is an array of the node's child nodes. This choice in turn leads to our implementation of the required &lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt;&lt;code&gt;tsort_each_child&lt;/code&gt;&lt;/a&gt; method, which fetches the array of child nodes and then iterates over that array using the user-supplied block.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;tsort&quot;&gt; &lt;code&gt;TSort&lt;/code&gt; &lt;/a&gt; 모듈을 기존 클래스 (이 경우 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; ) 로 혼합하는 방법을 보여줍니다 . 여기서는 해시의 각 키를 그래프의 노드로 취급하므로 필요한 &lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt; &lt;code&gt;tsort_each_node&lt;/code&gt; &lt;/a&gt; 메소드의 별칭 을 Hash의 each_key 메소드로 별칭 지정하면 됩니다. 해시의 각 키에 대해 연관된 값은 노드의 하위 노드 배열입니다. 이 선택으로 인해 필요한 &lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt; &lt;code&gt;tsort_each_child&lt;/code&gt; &lt;/a&gt; 메소드가 구현되어 하위 노드의 배열을 가져온 다음 사용자 제공 블록을 사용하여 해당 배열을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="af84116b697fd16d052110e9b0774c0829c86f17" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this nicely. A &lt;code&gt;Ticker&lt;/code&gt;, when run, continually receives the stock &lt;code&gt;Price&lt;/code&gt; for its &lt;code&gt;@symbol&lt;/code&gt;. A &lt;code&gt;Warner&lt;/code&gt; is a general observer of the price, and two warners are demonstrated, a &lt;code&gt;WarnLow&lt;/code&gt; and a &lt;code&gt;WarnHigh&lt;/code&gt;, which print a warning if the price is below or above their set limits, respectively.</source>
          <target state="translated">다음 예제는이를 잘 보여줍니다. &lt;code&gt;Ticker&lt;/code&gt; , 실행할 때, 지속적으로 주식 수신 &lt;code&gt;Price&lt;/code&gt; 자사에 대한 &lt;code&gt;@symbol&lt;/code&gt; . &lt;code&gt;Warner&lt;/code&gt; 가격의 일반 관찰자이며, 두 워너가 시연된다 &lt;code&gt;WarnLow&lt;/code&gt; 과 &lt;code&gt;WarnHigh&lt;/code&gt; 가격이 각각 자신의 설정 한도 이하 또는 이상이면 경고를 인쇄.</target>
        </trans-unit>
        <trans-unit id="53cb18b7ae651bfbce8f1182ff741a5928ad13a3" translate="yes" xml:space="preserve">
          <source>The following example illustrates the &lt;code&gt;limit&lt;/code&gt; parameter.</source>
          <target state="translated">다음 예제는 &lt;code&gt;limit&lt;/code&gt; 매개 변수 를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0397ba42b9ba420d4c09beb219f5db51b252fb18" translate="yes" xml:space="preserve">
          <source>The following example is a complete Ruby program. You can run it and see the effect of specifying various options. This is probably the best way to learn the features of &lt;code&gt;optparse&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 완전한 Ruby 프로그램입니다. 이를 실행하고 다양한 옵션을 지정하는 효과를 볼 수 있습니다. 이것은 아마도 &lt;code&gt;optparse&lt;/code&gt; 의 기능을 배우는 가장 좋은 방법 일 것입니다 .</target>
        </trans-unit>
        <trans-unit id="6b1c2858fec7215198f421b921eaeb6ce5e5ef08" translate="yes" xml:space="preserve">
          <source>The following example performs a conditional GET using the If-Modified-Since header. If the files has not been modified since the time in the header a Not Modified response will be returned. See RFC 2616 section 9.3 for further details.</source>
          <target state="translated">다음 예제는 If-Modified-Since 헤더를 사용하여 조건부 GET을 수행합니다. 헤더에서 시간 이후로 파일이 수정되지 않은 경우 수정되지 않음 응답이 리턴됩니다. 자세한 내용은 RFC 2616 섹션 9.3을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="51b50785b8692f7fcd4ee9abae98095c987049a5" translate="yes" xml:space="preserve">
          <source>The following example raises the soft limit of core size to the hard limit to try to make core dump possible.</source>
          <target state="translated">다음 예는 코어 덤프의 가능을 시도하기 위해 코어 크기의 소프트 한계를 하드 한계로 올립니다.</target>
        </trans-unit>
        <trans-unit id="3e4d02536a9bbcb32067005cca9c458f0f7e8d1d" translate="yes" xml:space="preserve">
          <source>The following example shows that an exception is raised if the key is not found and a default value is not supplied.</source>
          <target state="translated">다음 예제는 키를 찾을 수없고 기본값이 제공되지 않은 경우 예외가 발생 함을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="43eb347591c7e55fd7d4b4b386e0582b514bf10a" translate="yes" xml:space="preserve">
          <source>The following exceptions are defined as subclasses of &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt;. These exceptions are raised when zlib library functions return with an error status.</source>
          <target state="translated">다음 예외는 &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Zlib::Error&lt;/code&gt; &lt;/a&gt; 서브 클래스로 정의됩니다 . 이러한 예외는 zlib 라이브러리 함수가 오류 상태와 함께 리턴 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9cc7eb726ec3a5d3307d840aa0563e35c2723422" translate="yes" xml:space="preserve">
          <source>The following key values have special meaning:</source>
          <target state="translated">다음 키 값은 특별한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="04b93b5f83cfee61d0625788215fe163ac38e7d6" translate="yes" xml:space="preserve">
          <source>The following keywords are used by Ruby.</source>
          <target state="translated">다음 키워드는 Ruby에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="67813a639d9340429fcef3b186fbc1106fac4486" translate="yes" xml:space="preserve">
          <source>The following members below are optional, and must be compiled with special flags:</source>
          <target state="translated">아래의 멤버는 선택 사항이며 특수 플래그로 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f266550f300cebe46b99c10a20f17c66c0dc85f" translate="yes" xml:space="preserve">
          <source>The following metacharacters also behave like character classes:</source>
          <target state="translated">다음 메타 문자는 문자 클래스처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="192f6108ba4ec83a93a3743b287e3f14327ebcee" translate="yes" xml:space="preserve">
          <source>The following methods in &lt;a href=&quot;gzipreader&quot;&gt;&lt;code&gt;Zlib::GzipReader&lt;/code&gt;&lt;/a&gt; are just like their counterparts in &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, but they raise &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;gzipfile/error&quot;&gt;&lt;code&gt;Zlib::GzipFile::Error&lt;/code&gt;&lt;/a&gt; exception if an error was found in the gzip file.</source>
          <target state="translated">&lt;a href=&quot;gzipreader&quot;&gt; &lt;code&gt;Zlib::GzipReader&lt;/code&gt; &lt;/a&gt; 의 다음 메소드는 &lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 의&lt;/a&gt; 해당 메소드와 동일 하지만 gzip 파일에서 오류가 발견되면 &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Zlib::Error&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;gzipfile/error&quot;&gt; &lt;code&gt;Zlib::GzipFile::Error&lt;/code&gt; &lt;/a&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="ebfb1017bf8725a9c3b289c852e2c56c7e060bbb" translate="yes" xml:space="preserve">
          <source>The following modes must be used separately, and along with one or more of the modes seen above.</source>
          <target state="translated">다음 모드는 별도로, 위에서 본 하나 이상의 모드와 함께 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5d8c997259696a4b9e9ef99aeefd41cae48bf327" translate="yes" xml:space="preserve">
          <source>The following options are also recognised, but only apply if the session id is stored in a cookie.</source>
          <target state="translated">다음 옵션도 인식되지만 세션 ID가 쿠키에 저장된 경우에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="641ebe00918d389f940d8e875a4e0516a0ee5d25" translate="yes" xml:space="preserve">
          <source>The following patterns match instantly as you would expect:</source>
          <target state="translated">다음 패턴은 예상대로 즉시 일치합니다.</target>
        </trans-unit>
        <trans-unit id="1049183f6db8f4c5be5babea92cbcbd5767ab9b6" translate="yes" xml:space="preserve">
          <source>The following program finds pythagorean triples:</source>
          <target state="translated">다음 프로그램은 피타고라스 트리플을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="5ab81ae8dd8c55f7de6921ebdad9ebc4e3547bcb" translate="yes" xml:space="preserve">
          <source>The following ruby code will reconstruct the Bignum value from an array of bytes:</source>
          <target state="translated">다음 루비 코드는 바이트 배열에서 Bignum 값을 재구성합니다.</target>
        </trans-unit>
        <trans-unit id="2936d5adb9e240b503a66e2c87b97599cd38ff58" translate="yes" xml:space="preserve">
          <source>The following values are supported:</source>
          <target state="translated">다음과 같은 값이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="cfaea439f1162a9e56215144275f0fcda0e1973f" translate="yes" xml:space="preserve">
          <source>The following will log to syslogd on your local machine:</source>
          <target state="translated">다음은 로컬 시스템의 syslogd에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="277aae9ea9e4d1e1ab1a4e3bbca05748f329451a" translate="yes" xml:space="preserve">
          <source>The form of the flip-flop is an expression that indicates when the flip-flop turns on, &lt;code&gt;..&lt;/code&gt; (or &lt;code&gt;...&lt;/code&gt;), then an expression that indicates when the flip-flop will turn off. While the flip-flop is on it will continue to evaluate to &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; when off.</source>
          <target state="translated">플립 플롭의 형태는 플립 플롭이 켜질 때를 나타내는 식, &lt;code&gt;..&lt;/code&gt; (또는 &lt;code&gt;...&lt;/code&gt; ), 플립 플롭이 꺼지는시기를 나타내는 식이다. 플립 플롭은에 지속적으로 평가에 있지만 &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;false&lt;/code&gt; 때를.</target>
        </trans-unit>
        <trans-unit id="a59e06eb1f2391912d21bca1c2ab8e347e86ad6e" translate="yes" xml:space="preserve">
          <source>The format may contain &lt;strong&gt;conversion specifiers&lt;/strong&gt;, which tell scanf what form (type) each particular matched substring should be converted to (e.g., decimal integer, floating point number, literal string, etc.) The matches and conversions take place from left to right, and the conversions themselves are returned as an array.</source>
          <target state="translated">형식은 &lt;strong&gt;변환 지정자를&lt;/strong&gt; 포함 할 수 있으며 , 각 특정 일치하는 하위 문자열을 변환해야하는 형식 (유형) (예 : 10 진 정수, 부동 소수점 수, 리터럴 문자열 등)을 scanf에게 알려줍니다. 일치 및 변환은 왼쪽에서 오른쪽으로, 전환 자체는 배열로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9d9de655a28e3e9345895de7218363cfebaa10f2" translate="yes" xml:space="preserve">
          <source>The format string may also contain characters other than those in the conversion specifiers. Whitespace (blanks, tabs, or newlines) in the format string matches any amount of whitespace, including none, in the input. Everything else matches only itself.</source>
          <target state="translated">형식 문자열에는 변환 지정자 이외의 문자도 포함될 수 있습니다. 형식 문자열의 공백 (공백, 탭 또는 줄 바꿈)은 입력에서 공백을 포함하여 공백을 포함합니다. 다른 모든 것 자체 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="01ad28b61d010941d875968c4965283b3a074b1c" translate="yes" xml:space="preserve">
          <source>The fourth value is an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; exponent.</source>
          <target state="translated">네 번째 값은 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 지수입니다.</target>
        </trans-unit>
        <trans-unit id="b9b9e74d45d63b01f1970c90ec6ca01a65008da4" translate="yes" xml:space="preserve">
          <source>The front object of the DRbServer.</source>
          <target state="translated">DRbServer의 전면 오브젝트.</target>
        </trans-unit>
        <trans-unit id="b66c766703998c5ecd2d21515f5e807a607e4fb0" translate="yes" xml:space="preserve">
          <source>The full list of operating system errors on your particular platform are available as the constants of &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 플랫폼의 전체 운영 체제 오류 목록은 &lt;a href=&quot;errno&quot;&gt; &lt;code&gt;Errno&lt;/code&gt; &lt;/a&gt; 상수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d752311ceddde8aaa9bad09ecc2e661bd516fc57" translate="yes" xml:space="preserve">
          <source>The full list of operating system errors on your particular platform are available as the constants of &lt;code&gt;Errno&lt;/code&gt;.</source>
          <target state="translated">특정 플랫폼의 운영 체제 오류 전체 목록은 &lt;code&gt;Errno&lt;/code&gt; 상수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fbcc130a324c3c90e9fd960b9ebfc929d4a7a422" translate="yes" xml:space="preserve">
          <source>The full month name (&amp;ldquo;January&amp;rdquo;)</source>
          <target state="translated">월 이름 (&amp;ldquo;1 월&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="8cdef1391c4056e529eec7c62f50671cb70a0565" translate="yes" xml:space="preserve">
          <source>The full path where the plugin should cache the gem so that it can be installed latter.</source>
          <target state="translated">플러그인이 gem을 캐시하여 나중에 설치 될 수 있도록하는 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3f27b909c78ed98a4126c07544a1536e850fa542" translate="yes" xml:space="preserve">
          <source>The full ruby version string, like &lt;code&gt;ruby -v&lt;/code&gt; prints</source>
          <target state="translated">&lt;code&gt;ruby -v&lt;/code&gt; 프린트 와 같은 전체 루비 버전 문자열</target>
        </trans-unit>
        <trans-unit id="c84aa183d43ee74824c57ee6f0803b899c35e29b" translate="yes" xml:space="preserve">
          <source>The full weekday name (&amp;ldquo;Sunday&amp;rdquo;)</source>
          <target state="translated">전체 요일 이름 (&amp;ldquo;일요일&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="273464bb2108e38bfc4ec3dc3f36003bdaa03e9d" translate="yes" xml:space="preserve">
          <source>The function identified by &lt;em&gt;num&lt;/em&gt; is system dependent. On some Unix systems, the numbers may be obtained from a header file called &lt;code&gt;syscall.h&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;num&lt;/em&gt; 으로 식별되는 기능 은 시스템에 따라 다릅니다. 일부 유닉스 시스템에서는 &lt;code&gt;syscall.h&lt;/code&gt; 라는 헤더 파일에서 숫자를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0da5c87d957370efb21eab292da3cf40cd2553ab" translate="yes" xml:space="preserve">
          <source>The gateway needs to install this id conversion and create servers for each of the protocols or networks it will be a gateway between. It then needs to create a server that attaches to each of these networks. For example:</source>
          <target state="translated">게이트웨이는이 ID 변환을 설치하고 게이트웨이가 될 각 프로토콜 또는 네트워크에 대한 서버를 작성해야합니다. 그런 다음 각 네트워크에 연결되는 서버를 만들어야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9a2c95112b08c522fbbe399758bbbbec8aa15210" translate="yes" xml:space="preserve">
          <source>The generator (an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;) g of the Diffie-Hellman parameters.</source>
          <target state="translated">Diffie-Hellman 매개 변수 의 생성기 ( &lt;a href=&quot;../bn&quot;&gt; &lt;code&gt;OpenSSL::BN&lt;/code&gt; &lt;/a&gt; ) g.</target>
        </trans-unit>
        <trans-unit id="645923ef9d0b656ac58abcfb3fa02e75f3182623" translate="yes" xml:space="preserve">
          <source>The generator may be initialized with either a system-generated or user-supplied seed value by using &lt;a href=&quot;random#method-c-srand&quot;&gt;&lt;code&gt;Random.srand&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Generator는 &lt;a href=&quot;random#method-c-srand&quot;&gt; &lt;code&gt;Random.srand&lt;/code&gt; &lt;/a&gt; 를 사용하여 시스템 생성 또는 사용자 제공 시드 값으로 초기화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd9767f86fa02bc235219fb5f6d51552fd87cffc" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;hash&lt;/code&gt; has pairs like &lt;code&gt;ExceptionClass =&amp;gt; :TimingSymbol&lt;/code&gt;. Where the ExceptionClass is the interrupt handled by the given block. The TimingSymbol can be one of the following symbols:</source>
          <target state="translated">주어진 &lt;code&gt;hash&lt;/code&gt; 에는 &lt;code&gt;ExceptionClass =&amp;gt; :TimingSymbol&lt;/code&gt; 과 같은 쌍이 있습니다. 여기서 ExceptionClass는 주어진 블록에 의해 처리되는 인터럽트입니다. TimingSymbol은 다음 심볼 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20db563415d7c2b7bb6d03b3dfdfb9b0b286ab1c" translate="yes" xml:space="preserve">
          <source>The global constant &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; (also accessible as &lt;code&gt;$&amp;lt;&lt;/code&gt;) provides an IO-like stream which allows access to all files mentioned on the command line (or STDIN if no files are mentioned). &lt;a href=&quot;argf#method-i-path&quot;&gt;&lt;code&gt;ARGF#path&lt;/code&gt;&lt;/a&gt; and its alias &lt;a href=&quot;argf#method-i-filename&quot;&gt;&lt;code&gt;ARGF#filename&lt;/code&gt;&lt;/a&gt; are provided to access the name of the file currently being read.</source>
          <target state="translated">전역 상수 &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;$&amp;lt;&lt;/code&gt; 로도 액세스 가능 )는 명령 행에서 언급 된 모든 파일 (또는 파일이 언급되지 않은 경우 STDIN)에 액세스 할 수있는 IO 유사 스트림을 제공합니다. &lt;a href=&quot;argf#method-i-path&quot;&gt; &lt;code&gt;ARGF#path&lt;/code&gt; &lt;/a&gt; 및 해당 별명 &lt;a href=&quot;argf#method-i-filename&quot;&gt; &lt;code&gt;ARGF#filename&lt;/code&gt; &lt;/a&gt; 은 현재 읽고있는 파일의 이름에 액세스하기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7ebc251e55333f4d3e90975725cfb712ee4eb1b3" translate="yes" xml:space="preserve">
          <source>The global default options for the &lt;a href=&quot;json#method-i-dump&quot;&gt;&lt;code&gt;JSON.dump&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;json#method-i-dump&quot;&gt; &lt;code&gt;JSON.dump&lt;/code&gt; &lt;/a&gt; 메소드 의 글로벌 기본 옵션 :</target>
        </trans-unit>
        <trans-unit id="dac7754ac3960dc7981043625115ce2b61b6bd90" translate="yes" xml:space="preserve">
          <source>The global default options for the &lt;a href=&quot;json#method-i-load&quot;&gt;&lt;code&gt;JSON.load&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;json#method-i-load&quot;&gt; &lt;code&gt;JSON.load&lt;/code&gt; &lt;/a&gt; 메소드 의 글로벌 기본 옵션 :</target>
        </trans-unit>
        <trans-unit id="04d1d5361fbef6f23bf2e59d7a775cdc4f357cd5" translate="yes" xml:space="preserve">
          <source>The global directory root for all plugin related data</source>
          <target state="translated">모든 플러그인 관련 데이터의 글로벌 디렉토리 루트</target>
        </trans-unit>
        <trans-unit id="a9c6eff5841cd6699df45ee07c6f6255fb1674cb" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;false&lt;/code&gt; is the only instance of class &lt;a href=&quot;falseclass&quot;&gt;&lt;code&gt;FalseClass&lt;/code&gt;&lt;/a&gt; and represents a logically false value in boolean expressions. The class provides operators allowing &lt;code&gt;false&lt;/code&gt; to participate correctly in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;false&lt;/code&gt; 는 &lt;a href=&quot;falseclass&quot;&gt; &lt;code&gt;FalseClass&lt;/code&gt; &lt;/a&gt; 클래스의 유일한 인스턴스이며 부울 표현식에서 논리적으로 false 값을 나타냅니다. 이 클래스는 &lt;code&gt;false&lt;/code&gt; 가 논리식에 올바르게 참여할 수 있도록하는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="c90547b71e821afe37047d8dbc77b56cd174cad5" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;false&lt;/code&gt; is the only instance of class &lt;code&gt;FalseClass&lt;/code&gt; and represents a logically false value in boolean expressions. The class provides operators allowing &lt;code&gt;false&lt;/code&gt; to participate correctly in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;false&lt;/code&gt; 는 &lt;code&gt;FalseClass&lt;/code&gt; 클래스의 유일한 인스턴스이며 부울 식에서 논리적으로 false 값을 나타냅니다. 이 클래스는 &lt;code&gt;false&lt;/code&gt; 가 논리 표현식에 올바르게 참여할 수 있도록하는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="9605f713c17c7900d2aee896488a9a5705e4d2f9" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;true&lt;/code&gt; is the only instance of class &lt;a href=&quot;trueclass&quot;&gt;&lt;code&gt;TrueClass&lt;/code&gt;&lt;/a&gt; and represents a logically true value in boolean expressions. The class provides operators allowing &lt;code&gt;true&lt;/code&gt; to be used in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;true&lt;/code&gt; 는 &lt;a href=&quot;trueclass&quot;&gt; &lt;code&gt;TrueClass&lt;/code&gt; &lt;/a&gt; 클래스의 유일한 인스턴스이며 부울 식에서 논리적으로 true 값을 나타냅니다. 이 클래스는 논리식에서 &lt;code&gt;true&lt;/code&gt; 를 사용할 수있는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="22864028830453c29cd8c50d337b6db8a25bce0c" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;true&lt;/code&gt; is the only instance of class &lt;code&gt;TrueClass&lt;/code&gt; and represents a logically true value in boolean expressions. The class provides operators allowing &lt;code&gt;true&lt;/code&gt; to be used in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;true&lt;/code&gt; 는 &lt;code&gt;TrueClass&lt;/code&gt; 클래스의 유일한 인스턴스이며 부울 식에서 논리적으로 true 값을 나타냅니다. 이 클래스는 &lt;code&gt;true&lt;/code&gt; 를 논리식에 사용할 수있는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="380fff3f3a6baabcd40b14b3d4369e46189620da" translate="yes" xml:space="preserve">
          <source>The goal of this class is to manipulate file path information in a neater way than standard Ruby provides. The examples below demonstrate the difference.</source>
          <target state="translated">이 클래스의 목표는 표준 Ruby가 제공하는 것보다 깔끔한 방식으로 파일 경로 정보를 조작하는 것입니다. 아래 예제는 차이점을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1792fb3deec90d0a9ce3c9abba91a1df4e8a1dcd" translate="yes" xml:space="preserve">
          <source>The graph is represented by &lt;em&gt;each_node&lt;/em&gt; and &lt;em&gt;each_child&lt;/em&gt;. &lt;em&gt;each_node&lt;/em&gt; should have &lt;code&gt;call&lt;/code&gt; method which yields for each node in the graph. &lt;em&gt;each_child&lt;/em&gt; should have &lt;code&gt;call&lt;/code&gt; method which takes a node argument and yields for each child node.</source>
          <target state="translated">그래프는 &lt;em&gt;each_node&lt;/em&gt; 및 &lt;em&gt;each_child로&lt;/em&gt; 표시됩니다 . &lt;em&gt;each_node&lt;/em&gt; 에는 그래프의 각 노드에 대해 생성되는 &lt;code&gt;call&lt;/code&gt; 메소드가 있어야합니다 . &lt;em&gt;each_child&lt;/em&gt; 에는 노드 인수를 사용하고 각 자식 노드에 대해 산출하는 &lt;code&gt;call&lt;/code&gt; 메소드 가 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="d43ef3daba6128e61ae664d271fed9133721c1f9" translate="yes" xml:space="preserve">
          <source>The hash algorithm used in MGF1 (the currently supported mask generation function (MGF)).</source>
          <target state="translated">MGF1 (현재 지원되는 마스크 생성 함수 (MGF))에 사용되는 해시 알고리즘.</target>
        </trans-unit>
        <trans-unit id="dfa2862feb2b775b60cb5bca4a624ad23dff70ee" translate="yes" xml:space="preserve">
          <source>The hash algorithm used in MGF1.</source>
          <target state="translated">MGF1에서 사용되는 해시 알고리즘.</target>
        </trans-unit>
        <trans-unit id="eef27b41c817a117ed465052dc5d98571472e5b1" translate="yes" xml:space="preserve">
          <source>The hash algorithm used with &lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;HMAC&lt;/code&gt;&lt;/a&gt; for the PRF. May be a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; representing the algorithm name, or an instance of &lt;a href=&quot;digest&quot;&gt;&lt;code&gt;OpenSSL::Digest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">PRF에 &lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;HMAC&lt;/code&gt; &lt;/a&gt; 와 함께 사용되는 해시 알고리즘 . 알고리즘 이름을 나타내는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;digest&quot;&gt; &lt;code&gt;OpenSSL::Digest&lt;/code&gt; &lt;/a&gt; 의 인스턴스 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0f967b47380501cda497e47376fa515119c4950" translate="yes" xml:space="preserve">
          <source>The hash arguments, env and options, are same as &lt;a href=&quot;kernel#method-i-exec&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;Kernel#spawn&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">해시 인수, env 및 옵션은 &lt;a href=&quot;kernel#method-i-exec&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt; 과 동일 합니다 . 자세한 내용은 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;Kernel#spawn&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6dac7906ccab88521b6d3266c1c07757148fa052" translate="yes" xml:space="preserve">
          <source>The hash arguments, env and options, are same as &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt;. See &lt;code&gt;Kernel.spawn&lt;/code&gt; for details.</source>
          <target state="translated">해시 인수 env 및 옵션은 &lt;code&gt;exec&lt;/code&gt; 및 &lt;code&gt;spawn&lt;/code&gt; 과 동일 합니다 . 자세한 내용은 &lt;code&gt;Kernel.spawn&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1a9bbffc2ba5a8eef0d1e861040882683b875312" translate="yes" xml:space="preserve">
          <source>The hash contains current environment variables.</source>
          <target state="translated">해시는 현재 환경 변수를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b862a5e504b0376ea8c84c346ba305c970071424" translate="yes" xml:space="preserve">
          <source>The hash function.</source>
          <target state="translated">해시 함수.</target>
        </trans-unit>
        <trans-unit id="61ed1cee8c1805e3235725cb75ccfe09673d6d4b" translate="yes" xml:space="preserve">
          <source>The hash includes information about internal statistics about &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; such as:</source>
          <target state="translated">해시는 다음과 같은 &lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 에 대한 내부 통계에 대한 정보를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="58435b4f519d9a40edbe31c76f389fbc983789db" translate="yes" xml:space="preserve">
          <source>The hash key is the name of the option and the value</source>
          <target state="translated">해시 키는 옵션의 이름과 값입니다</target>
        </trans-unit>
        <trans-unit id="3b4209cdbf11326057e730685718a60431decf3f" translate="yes" xml:space="preserve">
          <source>The hash keys specifies a file descriptor in the child process started by &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt;. :err, 2 and STDERR specifies the standard error stream (stderr).</source>
          <target state="translated">해시 키는 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; 에&lt;/a&gt; 의해 시작된 자식 프로세스의 파일 설명자를 지정 합니다 . : err, 2 및 STDERR은 표준 오류 스트림 (stderr)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0b494189159f33d7ea6600c7a5c9d0a4fb4445a5" translate="yes" xml:space="preserve">
          <source>The hash keys specifies a file descriptor in the child process started by &lt;code&gt;spawn&lt;/code&gt;. :err, 2 and STDERR specifies the standard error stream (stderr).</source>
          <target state="translated">해시 키는 &lt;code&gt;spawn&lt;/code&gt; 에 의해 시작된 하위 프로세스의 파일 설명자를 지정 합니다 . : err, 2 및 STDERR은 표준 오류 스트림 (stderr)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b8beb9e7a49680f73f916f3c9e50a0e6b6c4e111" translate="yes" xml:space="preserve">
          <source>The hash keys specifies a file descriptor in the child process started by spawn. :err, 2 and STDERR specifies the standard error stream (stderr).</source>
          <target state="translated">해시 키는 spawn에 의해 시작된 자식 프로세스의 파일 설명자를 지정합니다. : err, 2 및 STDERR은 표준 오류 스트림 (stderr)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c9168d9a358415e1747435531b872358c9983aca" translate="yes" xml:space="preserve">
          <source>The hash keys specify file descriptors in the child process. The hash values specifies file descriptors in the parent process. So the above specifies exchanging stdout and stderr. Internally, &lt;code&gt;spawn&lt;/code&gt; uses an extra file descriptor to resolve such cyclic file descriptor mapping.</source>
          <target state="translated">해시 키는 자식 프로세스에서 파일 설명자를 지정합니다. 해시 값은 상위 프로세스에서 파일 설명자를 지정합니다. 따라서 위의 stdout 및 stderr 교환을 지정합니다. 내부적으로 &lt;code&gt;spawn&lt;/code&gt; 은 추가 파일 디스크립터를 사용하여 이러한 주기적 파일 디스크립터 맵핑을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="6b95d8f4c62b81ae4bd2dfd88662ac476ec26a81" translate="yes" xml:space="preserve">
          <source>The hash may include other options, where keys are symbols:</source>
          <target state="translated">해시는 키가 기호 인 다른 옵션을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d33da203f76376449c01bce5ee031469fa20860" translate="yes" xml:space="preserve">
          <source>The hash value for an object may not be identical across invocations or implementations of Ruby. If you need a stable identifier across Ruby invocations and implementations you will need to generate one with a custom method.</source>
          <target state="translated">객체의 해시 값은 Ruby 호출 또는 구현에서 동일하지 않을 수 있습니다. Ruby 호출 및 구현에서 안정적인 식별자가 필요한 경우 사용자 지정 메서드를 사용하여 식별자를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f12850ade2cf06adb0386be60a59b2cecac0c826" translate="yes" xml:space="preserve">
          <source>The hash value is used along with &lt;a href=&quot;object#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; by the &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; class to determine if two objects reference the same hash key. Any hash value that exceeds the capacity of an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; will be truncated before being used.</source>
          <target state="translated">해시 값은 &lt;a href=&quot;object#method-i-eql-3F&quot;&gt; &lt;code&gt;eql?&lt;/code&gt; &lt;/a&gt;두 개체가 동일한 해시 키를 참조하는지 확인 하려면 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 클래스에 의해 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 의 용량을 초과하는 해시 값 은 사용되기 전에 잘립니다.</target>
        </trans-unit>
        <trans-unit id="e7f85e331b65f7b15c9af5a8e7841f525dd0d5d1" translate="yes" xml:space="preserve">
          <source>The hash value returned is suitable for use as a certificate's filename in a CA path.</source>
          <target state="translated">반환 된 해시 값은 CA 경로에서 인증서의 파일 이름으로 사용하기에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="e701ade7a9ca1e55e1befc2ec2dba4ef3df015e4" translate="yes" xml:space="preserve">
          <source>The hash values specifies a file descriptor in the parent process which invokes &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt;. :out, 1 and STDOUT specifies the standard output stream (stdout).</source>
          <target state="translated">해시 값은 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt; 을 호출하는 부모 프로세스의 파일 설명자를 지정 합니다 . : out, 1 및 STDOUT은 표준 출력 스트림 (stdout)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f94473b68afb729cc91ff4f202625662c4f7f8ea" translate="yes" xml:space="preserve">
          <source>The hash values specifies a file descriptor in the parent process which invokes &lt;code&gt;spawn&lt;/code&gt;. :out, 1 and STDOUT specifies the standard output stream (stdout).</source>
          <target state="translated">해시 값은 부모 프로세스에서 &lt;code&gt;spawn&lt;/code&gt; 을 호출하는 파일 디스크립터를 지정 합니다 . : out, 1 및 STDOUT은 표준 출력 스트림 (stdout)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3d4b4c42529cce93c2e8779a1e22277917bd126b" translate="yes" xml:space="preserve">
          <source>The hash values specifies a file descriptor in the parent process which invokes spawn. :out, 1 and STDOUT specifies the standard output stream (stdout).</source>
          <target state="translated">해시 값은 spawn을 호출하는 상위 프로세스의 파일 설명자를 지정합니다. : out, 1 및 STDOUT은 표준 출력 스트림 (stdout)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="03151c0e4bb94b79e95a0be44a3dd31f74dc2a2d" translate="yes" xml:space="preserve">
          <source>The header for the column, when available.</source>
          <target state="translated">사용 가능한 경우 열의 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="035ad28d3c10b04cff2a9d21286360118589ca36" translate="yes" xml:space="preserve">
          <source>The headers can be supplied as a pre-encoded string, such as &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt;, or as an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Arrays like &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt;.</source>
          <target state="translated">헤더는 &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt; 와 같이 미리 인코딩 된 문자열로 제공 되거나 &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt; 와 같은 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로 제공 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="0115ad07218ff271b2367ec50427cdcffb275560" translate="yes" xml:space="preserve">
          <source>The headers can be supplied as a pre-encoded string, such as &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt;, or as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Arrays like &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt;.</source>
          <target state="translated">헤더는 &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt; 와 같은 사전 인코딩 된 문자열 또는 &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt; 와 같은 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로 제공 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="8ca1a54e1295cc27c7a75e1148aacf98d1589228" translate="yes" xml:space="preserve">
          <source>The heredoc starts on the line following &lt;code&gt;&amp;lt;&amp;lt;HEREDOC&lt;/code&gt; and ends with the next line that starts with &lt;code&gt;HEREDOC&lt;/code&gt;. The result includes the ending newline.</source>
          <target state="translated">다음 라인에 히어 닥 시작 &lt;code&gt;&amp;lt;&amp;lt;HEREDOC&lt;/code&gt; 함께 시작되는 다음 라인 단부와 &lt;code&gt;HEREDOC&lt;/code&gt; . 결과에는 줄 바꿈이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="caff69e136be69a035574a45e0d4608770495e62" translate="yes" xml:space="preserve">
          <source>The high level YAML parser provided by &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; simply takes YAML as input and returns a Ruby data structure. For information on using the high level parser see &lt;a href=&quot;psych#method-c-load&quot;&gt;&lt;code&gt;Psych.load&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; 에서&lt;/a&gt; 제공하는 높은 수준의 YAML 파서는 단순히 YAML을 입력으로 사용하고 Ruby 데이터 구조를 반환합니다. 상위 레벨 구문 분석기 사용에 대한 정보는 &lt;a href=&quot;psych#method-c-load&quot;&gt; &lt;code&gt;Psych.load&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6273bfd3b600d7bca4244913715a29317519628c" translate="yes" xml:space="preserve">
          <source>The high level emitter has the easiest interface. &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; simply takes a Ruby data structure and converts it to a YAML document. See &lt;a href=&quot;psych#method-c-dump&quot;&gt;&lt;code&gt;Psych.dump&lt;/code&gt;&lt;/a&gt; for more information on dumping a Ruby data structure.</source>
          <target state="translated">하이 레벨 이미 터는 가장 쉬운 인터페이스를 가지고 있습니다. &lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; 은&lt;/a&gt; 단순히 Ruby 데이터 구조를 가져 와서 YAML 문서로 변환합니다. Ruby 데이터 구조 덤프에 대한 자세한 정보는 &lt;a href=&quot;psych#method-c-dump&quot;&gt; &lt;code&gt;Psych.dump&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd2b3665cc1b524a662f8fdaa3a4df886ca1cf72" translate="yes" xml:space="preserve">
          <source>The higher level methods are listed below.</source>
          <target state="translated">보다 높은 수준의 방법이 아래에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="31712855374d288892d5919ac3326746cdd69b95" translate="yes" xml:space="preserve">
          <source>The highest group matched by the last successful match.</source>
          <target state="translated">마지막으로 성공한 경기와 일치하는 가장 높은 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="ea487c9b8ddd550dc6906c5da9376bb13579dd86" translate="yes" xml:space="preserve">
          <source>The history buffer. It extends &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; module, so it behaves just like an array. For example, gets the fifth content that the user input by HISTORY.</source>
          <target state="translated">히스토리 버퍼. &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 모듈을 확장 하므로 배열처럼 동작합니다. 예를 들어, 사용자가 HISTORY에서 입력 한 다섯 번째 컨텐츠를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f879e5f3e99969e4cefc88daa7c5207612f5493b" translate="yes" xml:space="preserve">
          <source>The horizontal precision using ssize type values in meters using scientific notation as 2 integers of XeY for precision use value/2 e.g. 2m = +/-1m</source>
          <target state="translated">정밀 사용 값 / 2에 대해 과학적 표기법을 XeY의 2 정수로 사용하여 미터 단위의 크기 크기 값을 사용하는 수평 정밀도</target>
        </trans-unit>
        <trans-unit id="2fdf9af6c004dcbfb988d92ed41bfb30a7b2d1df" translate="yes" xml:space="preserve">
          <source>The host of this &lt;a href=&quot;mx&quot;&gt;&lt;code&gt;MX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것의 호스트 &lt;a href=&quot;mx&quot;&gt; &lt;code&gt;MX&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9958bc3f9111ca361e0c24d0bc28bdbb568b8e23" translate="yes" xml:space="preserve">
          <source>The host these services run on.</source>
          <target state="translated">이러한 서비스가 실행되는 호스트</target>
        </trans-unit>
        <trans-unit id="aa7f6fc2e422190a8e8e6318fa3093f89928d4e2" translate="yes" xml:space="preserve">
          <source>The human readable reply text of the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; response</source>
          <target state="translated">&lt;a href=&quot;../smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 응답 의 사람이 읽을 수있는 회신 텍스트</target>
        </trans-unit>
        <trans-unit id="2e5761c346f24cb2ee67ab0288801dbfd97cef33" translate="yes" xml:space="preserve">
          <source>The id of this session.</source>
          <target state="translated">이 세션의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="7209d9bf976dec7a73d91a826c49f1edc2586d27" translate="yes" xml:space="preserve">
          <source>The identifier may also be surrounded with double quotes (which is the same as no quotes) or with backticks. When surrounded by backticks the HEREDOC behaves like Kernel#`:</source>
          <target state="translated">식별자는 큰 따옴표 (따옴표가없는 것과 동일) 또는 백틱으로 묶을 수도 있습니다. 백틱으로 둘러 싸인 HEREDOC은 Kernel #`처럼 동작합니다.</target>
        </trans-unit>
        <trans-unit id="71b0628ff743241585e4bd8388da9140fc4965de" translate="yes" xml:space="preserve">
          <source>The idiom may not work as dynamic scope if the methods are thread-local and a given block switches fiber.</source>
          <target state="translated">방법이 스레드 로컬이고 지정된 블록 스위치 파이버 인 경우 관용구가 동적 범위로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7823efd88570f05c6cdcdeba7b9c6d877d28d4c3" translate="yes" xml:space="preserve">
          <source>The imaginary unit.</source>
          <target state="translated">가상의 단위.</target>
        </trans-unit>
        <trans-unit id="a513b6c2cd22cc1c4c169b4a9f8813d576957fc8" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the combinations are yielded.</source>
          <target state="translated">구현은 조합이 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="058134ee68018dd38c0047d3ca6f78956b3eb4d1" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the constants are yielded.</source>
          <target state="translated">구현은 상수가 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c09fbe11e7b808a2a27325da75d9125f5262d98f" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the permutations are yielded.</source>
          <target state="translated">구현에서는 순열이 생성되는 순서를 보증하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26544ad30b16bfcd3c0373d4d440f7eab35e2f25" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the repeated combinations are yielded.</source>
          <target state="translated">구현은 반복되는 조합이 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab01bf3799a2fb452e23cd803705708a8737d0e9" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the repeated permutations are yielded.</source>
          <target state="translated">구현은 반복 순열이 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8c0f703c407e20770d71b5165dfa12ad88daaa0" translate="yes" xml:space="preserve">
          <source>The included modules from the refinement for &lt;code&gt;C&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 개선에서 포함 된 모듈</target>
        </trans-unit>
        <trans-unit id="9ab62eadf8a5f9396cb08d2ac599554a6904a25b" translate="yes" xml:space="preserve">
          <source>The included modules of &lt;code&gt;C&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 에 포함 된 모듈</target>
        </trans-unit>
        <trans-unit id="21d1836bc74cac3298abbecea66b302772b1d629" translate="yes" xml:space="preserve">
          <source>The included modules of &lt;code&gt;R&lt;/code&gt; in reverse order</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; 의 포함 된 모듈을 역순으로</target>
        </trans-unit>
        <trans-unit id="7b4cf09c5e4942b853b4a3fb9934a80f2f62fc59" translate="yes" xml:space="preserve">
          <source>The included modules of the current class. Note that the current class may be a refinement.</source>
          <target state="translated">현재 클래스에 포함 된 모듈. 현재 클래스는 다듬을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ea48090cbb1b6d4569b3843f06305d03a9a0f31" translate="yes" xml:space="preserve">
          <source>The indentation of the least-indented line will be removed from each line of the content. Note that empty lines and lines consisting solely of literal tabs and spaces will be ignored for the purposes of determining indentation, but escaped tabs and spaces are considered non-indentation characters.</source>
          <target state="translated">들여 쓰기가 가장 적은 줄은 내용의 각 줄에서 제거됩니다. 들여 쓰기를 결정하기 위해 리터럴 탭과 공백으로 만 구성된 빈 줄과 행은 무시되지만 이스케이프 된 탭과 공백은 들여 쓰기가 아닌 문자로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="df4cfef5b1024b18dd3a971d562bbe5fafa5474d" translate="yes" xml:space="preserve">
          <source>The index in &lt;code&gt;Readline.line_buffer&lt;/code&gt; which matches the start of input-string passed to &lt;a href=&quot;readline#method-c-completion_proc&quot;&gt;&lt;code&gt;completion_proc&lt;/code&gt;&lt;/a&gt; is computed by subtracting the length of input-string from &lt;code&gt;Readline.point&lt;/code&gt;.</source>
          <target state="translated">내의 인덱스 &lt;code&gt;Readline.line_buffer&lt;/code&gt; 에 전달 된 입력 문자열의 시작과 일치 &lt;a href=&quot;readline#method-c-completion_proc&quot;&gt; &lt;code&gt;completion_proc&lt;/code&gt; 는&lt;/a&gt; 로부터 입력 스트링의 길이를 감산함으로써 계산된다 &lt;code&gt;Readline.point&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="c03c77eee883b26021edbb7ef860d5d725cb9512" translate="yes" xml:space="preserve">
          <source>The index method is specialized to return the index as [row, column] It also accepts an optional &lt;code&gt;selector&lt;/code&gt; argument, see &lt;a href=&quot;matrix#method-i-each&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">index 메소드는 인덱스를 [행, 열]로 리턴하도록 특화되어 있습니다. 또한 선택적 &lt;code&gt;selector&lt;/code&gt; 인수를 허용합니다 . 자세한 내용 은 &lt;a href=&quot;matrix#method-i-each&quot;&gt; &lt;code&gt;each&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="743fd5fc56580ad66d04057e2575e67994de88e2" translate="yes" xml:space="preserve">
          <source>The index object used to store the details about the plugin</source>
          <target state="translated">플러그인에 대한 세부 사항을 저장하는 데 사용되는 색인 오브젝트</target>
        </trans-unit>
        <trans-unit id="bbdf03376c50f5d3aa39b9686fa5d2f9dd139405" translate="yes" xml:space="preserve">
          <source>The information about the last match in the current scope (thread-local and frame-local).</source>
          <target state="translated">현재 범위 (스레드 로컬 및 프레임 로컬)의 마지막 일치에 대한 정보입니다.</target>
        </trans-unit>
        <trans-unit id="850f2c195740568bd650438bf014979797d3d786" translate="yes" xml:space="preserve">
          <source>The information about the last match in the current scope.</source>
          <target state="translated">현재 범위의 마지막 일치에 대한 정보입니다.</target>
        </trans-unit>
        <trans-unit id="fafc9303484bc0df7a0197a6053ee09b37debd69" translate="yes" xml:space="preserve">
          <source>The information accessible consists of the information found in the /etc/passwd and /etc/group files, plus information about the system's temporary directory (/tmp) and configuration directory (/etc).</source>
          <target state="translated">액세스 가능한 정보는 / etc / passwd 및 / etc / group 파일에있는 정보와 시스템의 임시 디렉토리 (/ tmp) 및 구성 디렉토리 (/ etc)에 대한 정보로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="deb26bb4fc05a45f9d56134b2632049f543654f6" translate="yes" xml:space="preserve">
          <source>The information is returned as a &lt;a href=&quot;etc#Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">정보는 &lt;a href=&quot;etc#Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt; 구조체 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b568353f0e5b0ded55a27143aa1a196a3bab7403" translate="yes" xml:space="preserve">
          <source>The information is returned as a &lt;a href=&quot;etc#Passwd&quot;&gt;&lt;code&gt;Passwd&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">정보는 &lt;a href=&quot;etc#Passwd&quot;&gt; &lt;code&gt;Passwd&lt;/code&gt; &lt;/a&gt; 구조체 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="3eec32586efcc08a6522ac9569df8eaa12baf287" translate="yes" xml:space="preserve">
          <source>The initial value, as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 등&lt;/a&gt; 의 초기 값 입니다.</target>
        </trans-unit>
        <trans-unit id="8dbb536b4b69d9a076e30fba42c5254c6008ecc0" translate="yes" xml:space="preserve">
          <source>The input keying material.</source>
          <target state="translated">입력 키 자료.</target>
        </trans-unit>
        <trans-unit id="d829cb82443ba50f573c9ebedd5465748e14ba7e" translate="yes" xml:space="preserve">
          <source>The input record separator, newline by default.</source>
          <target state="translated">입력 레코드 구분 기호 (기본적으로 줄 바꾸기).</target>
        </trans-unit>
        <trans-unit id="2948f52a668e1b255b02d286b87bad4b256fe5de" translate="yes" xml:space="preserve">
          <source>The input record separator, newline by default. Aliased to $-0.</source>
          <target state="translated">입력 레코드 구분 기호, 기본적으로 줄 바꿈. $ -0으로 별칭이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="b4ceeac4af124af2b5c8c8d6beffd6e28fd6b15d" translate="yes" xml:space="preserve">
          <source>The instance is created at upon the first call of Klass.instance().</source>
          <target state="translated">인스턴스는 Klass.instance ()를 처음 호출 할 때 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="16c731a8ce248cb0f89cded4bd139be65da21f2c" translate="yes" xml:space="preserve">
          <source>The instruction sequence results will almost certainly change as Ruby changes, so example output in this documentation may be different from what you see.</source>
          <target state="translated">명령 순서 결과는 Ruby가 변경됨에 따라 거의 확실하게 변경되므로이 문서의 출력 예는 실제와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="536c45d4dc9216a9c5f89c17cf373caefc91b7e7" translate="yes" xml:space="preserve">
          <source>The integer memory location of this function</source>
          <target state="translated">이 함수의 정수 메모리 위치</target>
        </trans-unit>
        <trans-unit id="e9c7450d48827577749c31af45a475e35525f27b" translate="yes" xml:space="preserve">
          <source>The integer operating system error number corresponding to a particular error is available as the class constant &lt;code&gt;Errno::&lt;/code&gt;&lt;em&gt;error&lt;/em&gt;&lt;code&gt;::Errno&lt;/code&gt;.</source>
          <target state="translated">특정 오류에 해당하는 정수 운영 체제 오류 번호는 클래스 상수 &lt;code&gt;Errno::&lt;/code&gt; &lt;em&gt;error &lt;/em&gt; &lt;code&gt;::Errno&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5573634dba21068712dd0b53f65c04fa46a14c6" translate="yes" xml:space="preserve">
          <source>The interface index to send IPv6 multicast packets from.</source>
          <target state="translated">IPv6 멀티 캐스트 패킷을 보내는 인터페이스 색인입니다.</target>
        </trans-unit>
        <trans-unit id="e350b02cce032cb6b359e711705764960c70b4f5" translate="yes" xml:space="preserve">
          <source>The internal encoding is optional and when not set, the Ruby default internal encoding is used. If not explicitly set this default internal encoding is &lt;code&gt;nil&lt;/code&gt; meaning that by default, no transcoding occurs.</source>
          <target state="translated">내부 인코딩은 선택 사항이며 설정되지 않은 경우 Ruby 기본 내부 인코딩이 사용됩니다. 명시 적으로 설정하지 않으면이 기본 내부 인코딩은 &lt;code&gt;nil&lt;/code&gt; 이며 기본적으로 트랜스 코딩이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c7b31022b8059e69be6597c50a421d17b8a750e" translate="yes" xml:space="preserve">
          <source>The internal encoding of an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object can be set with &lt;a href=&quot;io#method-i-set_encoding&quot;&gt;&lt;code&gt;IO#set_encoding&lt;/code&gt;&lt;/a&gt; or at &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object creation (see &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt; options).</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 의 내부 인코딩은 &lt;a href=&quot;io#method-i-set_encoding&quot;&gt; &lt;code&gt;IO#set_encoding&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 생성 시 설정할 수 있습니다 ( &lt;a href=&quot;io#method-c-new&quot;&gt; &lt;code&gt;IO.new&lt;/code&gt; &lt;/a&gt; 옵션 참조 ).</target>
        </trans-unit>
        <trans-unit id="ec5a81c1ad55c7473a13a1b1a61c77581f2a319d" translate="yes" xml:space="preserve">
          <source>The invocation of &lt;code&gt;breakable&lt;/code&gt; in the block doesn't break a line and is treated as just an invocation of &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">블록에서 &lt;code&gt;breakable&lt;/code&gt; 을 호출 해도 줄이 끊어지지 않고 &lt;code&gt;text&lt;/code&gt; 호출만으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="78daa7611292caf7e83bc0f13a0cd73ad6203ebe" translate="yes" xml:space="preserve">
          <source>The io/console extension provides methods for interacting with the console. The console can be accessed from &lt;a href=&quot;io#method-c-console&quot;&gt;&lt;code&gt;IO.console&lt;/code&gt;&lt;/a&gt; or the standard input/output/error &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">io / console 확장은 콘솔과 상호 작용하는 방법을 제공합니다. 콘솔은 &lt;a href=&quot;io#method-c-console&quot;&gt; &lt;code&gt;IO.console&lt;/code&gt; &lt;/a&gt; 또는 표준 입 / 출력 / 오류 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 개체 에서 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5648d6c520b2c8f0685cfe0aafe4053afeb3024" translate="yes" xml:space="preserve">
          <source>The iteration count. This provides the ability to tune the algorithm. It is better to use the highest count possible for the maximum resistance to brute-force attacks.</source>
          <target state="translated">반복 횟수 이를 통해 알고리즘을 조정할 수 있습니다. 무차별 대항 공격에 대한 최대 저항을 위해 가능한 한 많은 수를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="44aaff1a7fcccac90476cc4ed0c7f392e6022e74" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-c-strongly_connected_components&quot;&gt;&lt;code&gt;TSort.strongly_connected_components&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-c-strongly_connected_components&quot;&gt; &lt;code&gt;TSort.strongly_connected_components&lt;/code&gt; &lt;/a&gt; 메소드 의 반복기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="dcacceb6671fcafb92f9876f07ac6620712efb4e" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-c-tsort&quot;&gt;&lt;code&gt;TSort.tsort&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-c-tsort&quot;&gt; &lt;code&gt;TSort.tsort&lt;/code&gt; &lt;/a&gt; 메소드 의 반복기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="d74485b91828857827ccbd43d24998b030fcf3b1" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-i-strongly_connected_components&quot;&gt;&lt;code&gt;strongly_connected_components&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.each_strongly_connected_component&lt;/code&gt; is similar to &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.strongly_connected_components.each&lt;/code&gt;, but modification of &lt;em&gt;obj&lt;/em&gt; during the iteration may lead to unexpected results.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-strongly_connected_components&quot;&gt; &lt;code&gt;strongly_connected_components&lt;/code&gt; &lt;/a&gt; 메소드 의 반복기 버전입니다 . &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.each_strongly_connected_component&lt;/code&gt; 와 유사 &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.strongly_connected_components.each&lt;/code&gt; 하지만 수정 &lt;em&gt;OBJ&lt;/em&gt; 반복하는 동안 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e62ecc4e33923a5a704d21adf22af2d42a03fdf2" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-i-tsort&quot;&gt;&lt;code&gt;tsort&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort_each&lt;/code&gt; is similar to &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort.each&lt;/code&gt;, but modification of &lt;em&gt;obj&lt;/em&gt; during the iteration may lead to unexpected results.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-tsort&quot;&gt; &lt;code&gt;tsort&lt;/code&gt; &lt;/a&gt; 메소드 의 반복자 버전입니다 . &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort_each&lt;/code&gt; 와 유사 &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort.each&lt;/code&gt; 하지만 수정 &lt;em&gt;OBJ&lt;/em&gt; 반복하는 동안 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b353458758c261b374877635946fc7a33194676" translate="yes" xml:space="preserve">
          <source>The keys in the pairs must be symbols containing instance variable names.</source>
          <target state="translated">쌍의 키는 인스턴스 변수 이름을 포함하는 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="9cc79388d76e56a78bc4dbfe3ff81d2d7b67f795" translate="yes" xml:space="preserve">
          <source>The keys mean:</source>
          <target state="translated">열쇠는 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b43d8feb1ae5a9203e6d517d03b401b1ad37a137" translate="yes" xml:space="preserve">
          <source>The keys starting with &lt;code&gt;:T_&lt;/code&gt; means live objects. For example, &lt;code&gt;:T_ARRAY&lt;/code&gt; is the number of arrays. &lt;code&gt;:FREE&lt;/code&gt; means object slots which is not used now. &lt;code&gt;:TOTAL&lt;/code&gt; means sum of above.</source>
          <target state="translated">&lt;code&gt;:T_&lt;/code&gt; 로 시작하는 키 는 라이브 객체를 의미합니다. 예를 들어 &lt;code&gt;:T_ARRAY&lt;/code&gt; 는 배열 수입니다. &lt;code&gt;:FREE&lt;/code&gt; 는 현재 사용되지 않는 객체 슬롯을 의미합니다. &lt;code&gt;:TOTAL&lt;/code&gt; 은 위의 합을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ba3f94978008bced0c75e86b546b291433d87b14" translate="yes" xml:space="preserve">
          <source>The keyword arguments &lt;em&gt;N&lt;/em&gt;, &lt;em&gt;r&lt;/em&gt; and &lt;em&gt;p&lt;/em&gt; can be used to tune scrypt. RFC 7914 (published on 2016-08, &lt;a href=&quot;https://tools.ietf.org/html/rfc7914#section-2&quot;&gt;tools.ietf.org/html/rfc7914#section-2&lt;/a&gt;) states that using values r=8 and p=1 appears to yield good results.</source>
          <target state="translated">키워드 인수 &lt;em&gt;N&lt;/em&gt; , &lt;em&gt;r&lt;/em&gt; 및 &lt;em&gt;p&lt;/em&gt; 는 scrypt를 조정하는 데 사용될 수 있습니다. (2016-08에 게시, RFC 7914 &lt;a href=&quot;https://tools.ietf.org/html/rfc7914#section-2&quot;&gt;tools.ietf.org/html/rfc7914#section-2은&lt;/a&gt; )를 사용하여 값 = 8 R 및 P = 1이 나타납니다 좋은 결과를 얻을 것을 말한다.</target>
        </trans-unit>
        <trans-unit id="da5de64fc9f9cdca4151a718a10d5743ef73465e" translate="yes" xml:space="preserve">
          <source>The lambda-ness affects argument handling and the behavior of &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">lambda-ness는 인수 처리와 &lt;code&gt;return&lt;/code&gt; 및 &lt;code&gt;break&lt;/code&gt; 동작에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="b9738e2273389ee18c3b528d6f42206938d1c05c" translate="yes" xml:space="preserve">
          <source>The language of the content, returned as the Content-Language header.</source>
          <target state="translated">내용의 언어로, Content-Language 헤더로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0d5fd853ca2e309a1e82eccf8f6e951ef9d03b26" translate="yes" xml:space="preserve">
          <source>The largest positive exponent in a double-precision floating point where 10 raised to this power minus 1.</source>
          <target state="translated">배정 밀도 부동 소수점 10의이 지수에서 1을 뺀 최대 지수입니다.</target>
        </trans-unit>
        <trans-unit id="cf95f77f46d6de74a4b855314a7aead81d28018d" translate="yes" xml:space="preserve">
          <source>The largest possible exponent value in a double-precision floating point.</source>
          <target state="translated">배정 밀도 부동 소수점에서 가능한 최대 지수 값입니다.</target>
        </trans-unit>
        <trans-unit id="c685ac98bdfccba13dfa7c45e1e49bac85d9a860" translate="yes" xml:space="preserve">
          <source>The largest possible integer in a double-precision floating point number.</source>
          <target state="translated">배정 밀도 부동 소수점 숫자에서 가능한 가장 큰 정수.</target>
        </trans-unit>
        <trans-unit id="95404f41c73ac072999630f3e8e05b7e1064014b" translate="yes" xml:space="preserve">
          <source>The last argument should be a Julian day number which denotes the day of calendar reform. &lt;a href=&quot;date#ITALY&quot;&gt;&lt;code&gt;Date::ITALY&lt;/code&gt;&lt;/a&gt; (2299161=1582-10-15), &lt;a href=&quot;date#ENGLAND&quot;&gt;&lt;code&gt;Date::ENGLAND&lt;/code&gt;&lt;/a&gt; (2361222=1752-09-14), &lt;a href=&quot;date#GREGORIAN&quot;&gt;&lt;code&gt;Date::GREGORIAN&lt;/code&gt;&lt;/a&gt; (the proleptic Gregorian calendar) and &lt;a href=&quot;date#JULIAN&quot;&gt;&lt;code&gt;Date::JULIAN&lt;/code&gt;&lt;/a&gt; (the proleptic Julian calendar) can be specified as a day of calendar reform.</source>
          <target state="translated">마지막 인수는 달력 개혁 날짜를 나타내는 율리우스 일 숫자 여야합니다. &lt;a href=&quot;date#ITALY&quot;&gt; &lt;code&gt;Date::ITALY&lt;/code&gt; &lt;/a&gt; (2299161 = 1582-10-15), &lt;a href=&quot;date#ENGLAND&quot;&gt; &lt;code&gt;Date::ENGLAND&lt;/code&gt; &lt;/a&gt; (2361222 = 1752-09-14), &lt;a href=&quot;date#GREGORIAN&quot;&gt; &lt;code&gt;Date::GREGORIAN&lt;/code&gt; &lt;/a&gt; ( 발화 그레고리력) 및 &lt;a href=&quot;date#JULIAN&quot;&gt; &lt;code&gt;Date::JULIAN&lt;/code&gt; &lt;/a&gt; (발화 율리우스 력) 달력 개혁의 날로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="4a6f9d4f610997c0712a6061f9f9cd6350bb9028" translate="yes" xml:space="preserve">
          <source>The last component of the real pathname can be nonexistent.</source>
          <target state="translated">실제 경로명의 마지막 구성 요소가 존재하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="455d7b982c1ce7f695f35e1ac2ed7d5db75a6d5c" translate="yes" xml:space="preserve">
          <source>The last element of day, hour, minute, or second can be a fractional number. The fractional number's precision is assumed at most nanosecond.</source>
          <target state="translated">일,시, 분 또는 초의 마지막 요소는 소수 일 수 있습니다. 소수의 정밀도는 최대 나노초로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ddc2d67cb2eb11a77590b3365183fc74e8db79ad" translate="yes" xml:space="preserve">
          <source>The last input line of string by gets or readline.</source>
          <target state="translated">get 또는 readline에 의한 문자열의 마지막 입력 행입니다.</target>
        </trans-unit>
        <trans-unit id="cf9e413b8bded9b9b13a38dfec00ad83c9b31f1a" translate="yes" xml:space="preserve">
          <source>The last local network multicast group</source>
          <target state="translated">마지막 로컬 네트워크 멀티 캐스트 그룹</target>
        </trans-unit>
        <trans-unit id="860a059ae33bee2f4e3725dd9e18669c8720bb55" translate="yes" xml:space="preserve">
          <source>The last row read from this file.</source>
          <target state="translated">이 파일에서 읽은 마지막 행.</target>
        </trans-unit>
        <trans-unit id="a9d09cc67009fe719b55ef7fbac0d3ad16cd2dcc" translate="yes" xml:space="preserve">
          <source>The last three forms fill the array with the value of the given block, which is passed the absolute index of each element to be filled.</source>
          <target state="translated">마지막 세 형식은 주어진 블록의 값으로 배열을 채우며, 채워질 각 요소의 절대 인덱스가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d3ffb0a77f509326c089f62c072995663cb848cb" translate="yes" xml:space="preserve">
          <source>The last two digits of the commercial year</source>
          <target state="translated">상업 연도의 마지막 두 자리</target>
        </trans-unit>
        <trans-unit id="a6cbc7a9f2cd13b82213a6ad1e5352f7cc89dc43" translate="yes" xml:space="preserve">
          <source>The last two forms create a new instance of a struct subclass. The number of &lt;code&gt;value&lt;/code&gt; parameters must be less than or equal to the number of attributes defined for the structure. Unset parameters default to &lt;code&gt;nil&lt;/code&gt;. Passing more parameters than number of attributes will raise an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">마지막 두 양식은 struct 서브 클래스의 새 인스턴스를 만듭니다. 횟수 &lt;code&gt;value&lt;/code&gt; 파라미터 미만이거나 구조에 대해 정의 된 속성의 수와 동일해야한다. 설정되지 않은 매개 변수의 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다. 속성 수보다 많은 매개 변수를 전달하면 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d644253a32bafc65128c7a0ae237c1bca938b9c3" translate="yes" xml:space="preserve">
          <source>The latest versions of the FIPS publications can be found here: &lt;a href=&quot;http://csrc.nist.gov/publications/PubsFIPS.html&quot;&gt;csrc.nist.gov/publications/PubsFIPS.html&lt;/a&gt;.</source>
          <target state="translated">최신 버전의 FIPS 간행물은 &lt;a href=&quot;http://csrc.nist.gov/publications/PubsFIPS.html&quot;&gt;csrc.nist.gov/publications/PubsFIPS.html&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2eba099a8d7f49b1c70740e1407fd1915ee56f3b" translate="yes" xml:space="preserve">
          <source>The latitude for this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; where 2**31 is the equator in thousandths of an arc second as an unsigned 32bit integer</source>
          <target state="translated">이 &lt;a href=&quot;loc&quot;&gt; &lt;code&gt;LOC&lt;/code&gt; 에&lt;/a&gt; 대한 위도는 2 ** 31이 부호없는 32 비트 정수로 천분의 일 초의 적도입니다.</target>
        </trans-unit>
        <trans-unit id="e2554f10ba35111f0fe84ac68cc57c6d4e7d9124" translate="yes" xml:space="preserve">
          <source>The latter means that readpartial is nonblocking-flag insensitive. It blocks on the situation &lt;a href=&quot;io#method-i-sysread&quot;&gt;&lt;code&gt;IO#sysread&lt;/code&gt;&lt;/a&gt; causes Errno::EWOULDBLOCK as if the fd is blocking mode.</source>
          <target state="translated">후자는 readpartial이 nonblocking-flag에 둔감하다는 것을 의미합니다. fd가 차단 모드 인 것처럼 &lt;a href=&quot;io#method-i-sysread&quot;&gt; &lt;code&gt;IO#sysread&lt;/code&gt; 로&lt;/a&gt; 인해 Errno :: EWOULDBLOCK이 발생 하는 상황을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="3a2318aece28d41c63a77de705743acd550ba938" translate="yes" xml:space="preserve">
          <source>The length in octets of the salt. Two special values are reserved: &lt;code&gt;:digest&lt;/code&gt; means the digest length, and &lt;code&gt;:auto&lt;/code&gt; means automatically determining the length based on the signature.</source>
          <target state="translated">소금의 옥텟 길이. 두 가지 특수 값은 예약되어 있습니다 : &lt;code&gt;:digest&lt;/code&gt; 수단 길이, 소화 &lt;code&gt;:auto&lt;/code&gt; 자동으로 서명에 따라 길이를 결정하는 수단을.</target>
        </trans-unit>
        <trans-unit id="59095e8d0ffc0f2dd79a059c438efde283df5e19" translate="yes" xml:space="preserve">
          <source>The length in octets of the salt. Two special values are reserved: &lt;code&gt;:digest&lt;/code&gt; means the digest length, and &lt;code&gt;:max&lt;/code&gt; means the maximum possible length for the combination of the private key and the selected message digest algorithm.</source>
          <target state="translated">소금의 옥텟 길이. 두 특수한 값이 예약된다 &lt;code&gt;:digest&lt;/code&gt; 수단은 길이를 소화하고 &lt;code&gt;:max&lt;/code&gt; 수단은 비밀 키의 조합에 대해 최대 가능 길이 및 선택된 메시지 다이제스트 알고리즘.</target>
        </trans-unit>
        <trans-unit id="d7a4b192c3fd2d4e7a634cd154dbdfb796d7c8cb" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;Readline.line_buffer&lt;/code&gt; and GNU Readline's rl_end are same.</source>
          <target state="translated">의 길이 &lt;code&gt;Readline.line_buffer&lt;/code&gt; 와 GNU Readline와의 rl_end은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f880a7f68078861e7dd0d676a116a72f2942d8b2" translate="yes" xml:space="preserve">
          <source>The length of the content that will be sent, returned as the Content-Length header.</source>
          <target state="translated">전송 될 컨텐츠의 길이로, Content-Length 헤더로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e8f13982dda6eadffafb5f83a81e1c14adab5a48" translate="yes" xml:space="preserve">
          <source>The length of the message in octets.</source>
          <target state="translated">메시지의 길이 (옥텟).</target>
        </trans-unit>
        <trans-unit id="214333c551b0b1d020292e7378bee39771179923" translate="yes" xml:space="preserve">
          <source>The length of the range represented in Content-Range: header.</source>
          <target state="translated">Content-Range : 헤더에 표시된 범위의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="6cd4cf0d580b1fc06cfb350507632e5f526dd309" translate="yes" xml:space="preserve">
          <source>The length of the returned array is the product of the length of &lt;code&gt;self&lt;/code&gt; and the argument arrays.</source>
          <target state="translated">리턴 된 배열의 길이는 &lt;code&gt;self&lt;/code&gt; 길이 와 인수 배열 의 곱입니다 .</target>
        </trans-unit>
        <trans-unit id="f49a45ed80f1bde4a3ab062cd9cd67bfbbc57523" translate="yes" xml:space="preserve">
          <source>The levels are:</source>
          <target state="translated">레벨은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c62cba384fd720b9ceb033e9aae1a1a09e971cb" translate="yes" xml:space="preserve">
          <source>The lexer is for internal use only.</source>
          <target state="translated">어휘 분석기는 내부 전용입니다.</target>
        </trans-unit>
        <trans-unit id="411444d20b71d3301ebd3b2f06f7e330f4067607" translate="yes" xml:space="preserve">
          <source>The library also supports reading and writing files in gzip (.gz) format with an interface similar to that of &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. The gzip format is described in RFC 1952 which is also a wrapper around a deflate stream.</source>
          <target state="translated">라이브러리는 또한 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 와 유사한 인터페이스를 사용하여 gzip (.gz) 형식의 파일 읽기 및 쓰기를 지원합니다 . gzip 형식은 RFC 1952에 설명되어 있으며 수축 스트림 주위의 래퍼이기도합니다.</target>
        </trans-unit>
        <trans-unit id="7cb43a246ed9db47da98cdcd3dfb21106a785844" translate="yes" xml:space="preserve">
          <source>The limit for field size, if any. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">필드 크기에 대한 제한입니다 (있는 경우). 자세한 내용은 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="25f0c77b17ae3fcaaa65b4fbe3253fbe659b1b38" translate="yes" xml:space="preserve">
          <source>The limit specified by this method takes less priority over any limit specified to instance methods such as ceil, floor, truncate, or round.</source>
          <target state="translated">이 메소드에 의해 지정된 한계는 ceil, floor, truncate 또는 round와 같은 인스턴스 메소드에 지정된 한계보다 우선 순위가 낮습니다.</target>
        </trans-unit>
        <trans-unit id="382d67de75585eda36e4b6766e980ce91e1a2ef7" translate="yes" xml:space="preserve">
          <source>The line number in the source code where this AST's text began.</source>
          <target state="translated">이 AST 텍스트가 시작된 소스 코드의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="8e78b231c10457c9edbca6549febebe0fc6f466b" translate="yes" xml:space="preserve">
          <source>The line number in the source code where this AST's text ended.</source>
          <target state="translated">이 AST의 텍스트가 끝나는 소스 코드의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="f97cfd17cb7561b717cc12d8ec11ee1a6ec28194" translate="yes" xml:space="preserve">
          <source>The line number of the current token. This value starts from 1. This method is valid only in event handlers.</source>
          <target state="translated">현재 토큰의 줄 번호 이 값은 1부터 시작합니다.이 메소드는 이벤트 핸들러에서만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="c9e2fa224c5332a696304bec0fe7f11a837e94c9" translate="yes" xml:space="preserve">
          <source>The line number of the last row read from this file.</source>
          <target state="translated">이 파일에서 마지막으로 읽은 행 번호입니다.</target>
        </trans-unit>
        <trans-unit id="d67af8590c708d515d8d1768d323688a60752f81" translate="yes" xml:space="preserve">
          <source>The line number of the last row read from this file. Fields with nested line-end characters will not affect this count.</source>
          <target state="translated">이 파일에서 마지막으로 읽은 행 번호입니다. 줄 끝 문자가 중첩 된 필드는이 수에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5cc44391a4640862d7b12f0e7ed26c9fdaf2ee44" translate="yes" xml:space="preserve">
          <source>The line number of this keyword in the current file.</source>
          <target state="translated">현재 파일에서이 키워드의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="ad5c4c8a3122de09c7366b7a31bf057c4653277f" translate="yes" xml:space="preserve">
          <source>The line of the data source this row is from.</source>
          <target state="translated">이 행의 데이터 소스 행입니다.</target>
        </trans-unit>
        <trans-unit id="417aa197220e994826261de4de75eaa3de8aa462" translate="yes" xml:space="preserve">
          <source>The list of addresses where &lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;RingFinger&lt;/code&gt;&lt;/a&gt; will send query packets.</source>
          <target state="translated">&lt;a href=&quot;ringfinger&quot;&gt; &lt;code&gt;RingFinger&lt;/code&gt; &lt;/a&gt; 가 쿼리 패킷을 보낼 주소 목록 .</target>
        </trans-unit>
        <trans-unit id="5c1c26067ddb560417bf1b4bad8eb95f4816ced2" translate="yes" xml:space="preserve">
          <source>The list of available SSL/TLS methods. This constant is only provided for backwards compatibility.</source>
          <target state="translated">사용 가능한 SSL / TLS 메소드 목록. 이 상수는 이전 버전과의 호환성을 위해서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="076d80d1441c8f116a0592255e40b67bcef39cc4" translate="yes" xml:space="preserve">
          <source>The list of available signal names and their interpretation is system dependent. &lt;a href=&quot;signal&quot;&gt;&lt;code&gt;Signal&lt;/code&gt;&lt;/a&gt; delivery semantics may also vary between systems; in particular signal delivery may not always be reliable.</source>
          <target state="translated">사용 가능한 신호 이름 및 해석 목록은 시스템에 따라 다릅니다. &lt;a href=&quot;signal&quot;&gt; &lt;code&gt;Signal&lt;/code&gt; &lt;/a&gt; 전달 의미는 시스템마다 다를 수 있습니다. 특히 신호 전달이 항상 신뢰할 수있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c87bdee22553c5e1835cc04f190150be5b961b57" translate="yes" xml:space="preserve">
          <source>The list of cipher suites configured for this context.</source>
          <target state="translated">이 컨텍스트에 대해 구성된 암호 제품군 목록입니다.</target>
        </trans-unit>
        <trans-unit id="bac40f1f8622e4f5c5637c06a5b70d1c57242cbe" translate="yes" xml:space="preserve">
          <source>The list of dependencies to resolve</source>
          <target state="translated">해결해야 할 종속성 목록</target>
        </trans-unit>
        <trans-unit id="e934b2847da3acbeeb3d1d3ee30d9fdc1b32151e" translate="yes" xml:space="preserve">
          <source>The list of supported extensions (and in some cases their possible values) can be derived from the &amp;ldquo;objects.h&amp;rdquo; file in the &lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; source code.</source>
          <target state="translated">지원되는 확장명 목록 (및 경우에 따라 가능한 값)은 &lt;a href=&quot;openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 소스 코드 의 &quot;objects.h&quot;파일에서 파생 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="780d8b1bdb0317ee7d50a9d647cb39b864e947b1" translate="yes" xml:space="preserve">
          <source>The local host used to establish the connection.</source>
          <target state="translated">연결을 설정하는 데 사용 된 로컬 호스트</target>
        </trans-unit>
        <trans-unit id="23651b81fd326cc0da053929a5c1a406495f5141" translate="yes" xml:space="preserve">
          <source>The local port used to establish the connection.</source>
          <target state="translated">연결을 설정하는 데 사용되는 로컬 포트.</target>
        </trans-unit>
        <trans-unit id="04ded66250b581d812020d3b4ca00618747a7bc3" translate="yes" xml:space="preserve">
          <source>The local variable is created when the parser encounters the assignment, not when the assignment occurs:</source>
          <target state="translated">로컬 변수는 파서가 할당을받을 때가 아니라 할당을 만나면 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="846c7fd50577452405ab14d0bff87468e3974d32" translate="yes" xml:space="preserve">
          <source>The locale encoding (__ENCODING__), not &lt;a href=&quot;encoding#method-c-default_internal&quot;&gt;&lt;code&gt;default_internal&lt;/code&gt;&lt;/a&gt;, is used as the encoding of created strings.</source>
          <target state="translated">&lt;a href=&quot;encoding#method-c-default_internal&quot;&gt; &lt;code&gt;default_internal&lt;/code&gt; &lt;/a&gt; 이 아닌 로케일 인코딩 (__ENCODING__) 이 작성된 문자열의 인코딩으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="452cf70a1c422d6d6554ec31c81cffd8c3ec98a8" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file).</source>
          <target state="translated">로그 장치. 이는 파일 이름 ( &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다.</target>
        </trans-unit>
        <trans-unit id="f41baf5706fb12d05d2d2fb8140b5e221eacfcbc" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file). reopen the same filename if it is &lt;code&gt;nil&lt;/code&gt;, do nothing for &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. Default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">로그 장치. 이는 파일 이름 ( &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다. 동일한 파일 이름이 &lt;code&gt;nil&lt;/code&gt; 이면 다시 열고 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 에&lt;/a&gt; 대해 아무 작업도 수행하지 않습니다 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1d6a778b4b002b5db6872fc30c0fa832a5dd9dfd" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (String) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file).</source>
          <target state="translated">로그 장치. 파일 이름 (String) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다.</target>
        </trans-unit>
        <trans-unit id="e7433f737c5ba22e8f245dd3ef69ae08c10d1d39" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (String) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file). reopen the same filename if it is &lt;code&gt;nil&lt;/code&gt;, do nothing for &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. Default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">로그 장치. 파일 이름 (String) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다. 동일한 파일 이름이 &lt;code&gt;nil&lt;/code&gt; 인 경우 다시 열면 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 에&lt;/a&gt; 대해 아무 것도 수행하지 마십시오 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c34f6d45f364e8f842374d0fba03637ece7c5035" translate="yes" xml:space="preserve">
          <source>The log file suffix format for &lt;code&gt;daily&lt;/code&gt;, &lt;code&gt;weekly&lt;/code&gt; or &lt;code&gt;monthly&lt;/code&gt; rotation. Default is '%Y%m%d'.</source>
          <target state="translated">&lt;code&gt;daily&lt;/code&gt; , &lt;code&gt;weekly&lt;/code&gt; 또는 &lt;code&gt;monthly&lt;/code&gt; 로테이션에 대한 로그 파일 접미사 형식입니다 . 기본값은 '% Y % m % d'입니다.</target>
        </trans-unit>
        <trans-unit id="2c9234937ce5c8d9c89838d11a40033809f08f35" translate="yes" xml:space="preserve">
          <source>The log message. A &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로그 메시지 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4dd67ca521be8b37cd245fe1ec75b3f7a4cfe1fc" translate="yes" xml:space="preserve">
          <source>The long name of the &lt;a href=&quot;objectid&quot;&gt;&lt;code&gt;ObjectId&lt;/code&gt;&lt;/a&gt;, as defined in &amp;lt;openssl/objects.h&amp;gt;.</source>
          <target state="translated">&amp;lt;openssl / objects.h&amp;gt;에 정의 된 &lt;a href=&quot;objectid&quot;&gt; &lt;code&gt;ObjectId&lt;/code&gt; &lt;/a&gt; 의 긴 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="ac5c657308f6efc204a612be11122152440f1b6c" translate="yes" xml:space="preserve">
          <source>The longitude for this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; where 2**31 is the prime meridian in thousandths of an arc second as an unsigned 32bit integer</source>
          <target state="translated">이 &lt;a href=&quot;loc&quot;&gt; &lt;code&gt;LOC&lt;/code&gt; &lt;/a&gt; 의 경도는 2 ** 31이 부호없는 32 비트 정수로 천분의 1 초의 자오선입니다.</target>
        </trans-unit>
        <trans-unit id="46267f7e85d9a84600a29754a266a54e47023dc8" translate="yes" xml:space="preserve">
          <source>The loop finishes when the value to be passed to the block is greater than &lt;code&gt;limit&lt;/code&gt; (if &lt;code&gt;step&lt;/code&gt; is positive) or less than &lt;code&gt;limit&lt;/code&gt; (if &lt;code&gt;step&lt;/code&gt; is negative), where &lt;code&gt;limit&lt;/code&gt; is defaulted to infinity.</source>
          <target state="translated">블록에 전달 될 값이 &lt;code&gt;limit&lt;/code&gt; 보다 크거나 ( &lt;code&gt;step&lt;/code&gt; 가 양수인 경우) &lt;code&gt;limit&lt;/code&gt; 보다 작 으면 ( &lt;code&gt;step&lt;/code&gt; 가 음수 인 경우) 루프가 완료됩니다. 여기서 &lt;code&gt;limit&lt;/code&gt; 는 기본적으로 무한대입니다.</target>
        </trans-unit>
        <trans-unit id="fd42a28ab13bb148febbfa074b8633c09db09090" translate="yes" xml:space="preserve">
          <source>The loopback address</source>
          <target state="translated">루프백 주소</target>
        </trans-unit>
        <trans-unit id="76601e95c4af19197977333c6483aee61ec6fd84" translate="yes" xml:space="preserve">
          <source>The lowest digits of &lt;a href=&quot;time#method-i-to_f&quot;&gt;&lt;code&gt;to_f&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-i-nsec&quot;&gt;&lt;code&gt;nsec&lt;/code&gt;&lt;/a&gt; are different because IEEE 754 double is not accurate enough to represent the exact number of nanoseconds since the Epoch.</source>
          <target state="translated">IEEE 754 double이 Epoch 이후 정확한 나노초 수를 나타낼만큼 정확하지 않기 때문에 &lt;a href=&quot;time#method-i-to_f&quot;&gt; &lt;code&gt;to_f&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;time#method-i-nsec&quot;&gt; &lt;code&gt;nsec&lt;/code&gt; &lt;/a&gt; 의 가장 낮은 숫자 는 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4b2f17136536bcdcc0b67d8304f9315edb7c7033" translate="yes" xml:space="preserve">
          <source>The lowest digits of &lt;a href=&quot;time#method-i-to_f&quot;&gt;&lt;code&gt;to_f&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-i-subsec&quot;&gt;&lt;code&gt;subsec&lt;/code&gt;&lt;/a&gt; are different because IEEE 754 double is not accurate enough to represent the rational number.</source>
          <target state="translated">가장 낮은 자리 &lt;a href=&quot;time#method-i-to_f&quot;&gt; &lt;code&gt;to_f&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;time#method-i-subsec&quot;&gt; &lt;code&gt;subsec&lt;/code&gt; &lt;/a&gt; IEEE 754 배의 유리수를 나타내는 정확한 충분하지 않기 때문에 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a8240a1f55e847bacf9afdb80d5979f20db87962" translate="yes" xml:space="preserve">
          <source>The lowest level emitter is an event based system. Events are sent to a &lt;code&gt;Psych::Emitter&lt;/code&gt; object. That object knows how to convert the events to a YAML document. This interface should be used when document format is known in advance or speed is a concern. See &lt;code&gt;Psych::Emitter&lt;/code&gt; for more information.</source>
          <target state="translated">가장 낮은 레벨의 이미 터는 이벤트 기반 시스템입니다. 이벤트는 &lt;code&gt;Psych::Emitter&lt;/code&gt; 객체 로 전송됩니다 . 이 객체는 이벤트를 YAML 문서로 변환하는 방법을 알고 있습니다. 문서 형식을 미리 알고 있거나 속도가 중요한 경우이 인터페이스를 사용해야합니다. 자세한 정보는 &lt;code&gt;Psych::Emitter&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="faa295f0573cc7e0b679365f35113ca0432d7678" translate="yes" xml:space="preserve">
          <source>The lowest level parser should be used when the YAML input is already known, and the developer does not want to pay the price of building an AST or automatic detection and conversion to Ruby objects. See &lt;code&gt;Psych::Parser&lt;/code&gt; for more information on using the event based parser.</source>
          <target state="translated">YAML 입력이 이미 알려진 경우 가장 낮은 수준의 구문 분석기를 사용해야하며 개발자는 AST 빌드 또는 자동 감지 및 Ruby 오브젝트로의 변환 비용을 지불하고 싶지 않습니다. 참조 &lt;code&gt;Psych::Parser&lt;/code&gt; 행사 기반 파서 사용에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="6916db97af7fbcc215e84d04bd5aea3188ac35c5" translate="yes" xml:space="preserve">
          <source>The mailbox with the associated quota.</source>
          <target state="translated">할당량이 연결된 사서함</target>
        </trans-unit>
        <trans-unit id="52545ae3e81e3c2803caa27549768e88f88f183b" translate="yes" xml:space="preserve">
          <source>The main loop performed by a DRbServer's internal thread.</source>
          <target state="translated">DRbServer의 내부 스레드가 수행하는 기본 루프.</target>
        </trans-unit>
        <trans-unit id="250cb0ca05bc75246d515eb258682a35ceccb314" translate="yes" xml:space="preserve">
          <source>The main thread of this DRbServer.</source>
          <target state="translated">이 DRbServer의 기본 스레드입니다.</target>
        </trans-unit>
        <trans-unit id="af5de340c31c6728889869aafe7a7527cf71db80" translate="yes" xml:space="preserve">
          <source>The major version of the instruction sequence.</source>
          <target state="translated">명령 시퀀스의 주요 버전입니다.</target>
        </trans-unit>
        <trans-unit id="74ed864705a92921352d7588de5ed467040deadf" translate="yes" xml:space="preserve">
          <source>The marshaling library converts collections of Ruby objects into a byte stream, allowing them to be stored outside the currently active script. This data may subsequently be read and the original objects reconstituted.</source>
          <target state="translated">마샬링 라이브러리는 Ruby 객체 모음을 바이트 스트림으로 변환하여 현재 활성화 된 스크립트 외부에 저장할 수 있습니다. 이후에이 데이터를 읽고 원본 객체를 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6359721fbbcfa297633b64bf50fb5cd1106566b" translate="yes" xml:space="preserve">
          <source>The match below fails because although 'Demand' contains 'and', the pattern does not occur at a word boundary.</source>
          <target state="translated">'Demand'에 'and'가 포함되어 있지만 단어 경계에서 패턴이 발생하지 않기 때문에 아래 일치가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="808c974ed2c4ee16692f776c1e9bcb96f4845393" translate="yes" xml:space="preserve">
          <source>The maximum memory level for allocating zlib deflate compression state.</source>
          <target state="translated">zlib 수축 압축 상태를 할당하기위한 최대 메모리 레벨.</target>
        </trans-unit>
        <trans-unit id="15b6a29a1b7d6f99c0454516c56835772c8b6d26" translate="yes" xml:space="preserve">
          <source>The maximum number of processes that can be created for the real user ID of the calling process.</source>
          <target state="translated">호출 프로세스의 실제 사용자 ID에 대해 작성할 수있는 최대 프로세스 수입니다.</target>
        </trans-unit>
        <trans-unit id="64b96ed4230248510999f351379b3ffe66f0c518" translate="yes" xml:space="preserve">
          <source>The maximum size of the zlib history buffer. Note that zlib allows larger values to enable different inflate modes. See &lt;a href=&quot;zlib/inflate#method-c-new&quot;&gt;&lt;code&gt;Zlib::Inflate.new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">zlib 히스토리 버퍼의 최대 크기입니다. zlib를 사용하면 값이 클수록 다른 팽창 모드를 사용할 수 있습니다. 자세한 내용은 &lt;a href=&quot;zlib/inflate#method-c-new&quot;&gt; &lt;code&gt;Zlib::Inflate.new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="09d914f4ec30202b0bb54573e097e9c76a8b7876" translate="yes" xml:space="preserve">
          <source>The maximum width of a line, before it is separated in to a newline</source>
          <target state="translated">줄 바꿈으로 구분되기 전에 줄의 최대 너비</target>
        </trans-unit>
        <trans-unit id="9c8e8f5d824c85e327cb2988bb85c8dcc0e0e99e" translate="yes" xml:space="preserve">
          <source>The meaning of the &lt;code&gt;options&lt;/code&gt; is as follows:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="756674ad56c03514e9d5f0a274e34fabfbc6719a" translate="yes" xml:space="preserve">
          <source>The message of the exception reports the content of podspec for the line that generated the original exception.</source>
          <target state="translated">예외 메시지는 원래 예외를 생성 한 행에 대한 podspec의 내용을보고합니다.</target>
        </trans-unit>
        <trans-unit id="96405d1c04ac31ccf2aa964281a6b129c823abe3" translate="yes" xml:space="preserve">
          <source>The message to log; does not need to be a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기록 할 메시지입니다. &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 일&lt;/a&gt; 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="abfc088a33bba2b84de874c521344bc3d906fb6e" translate="yes" xml:space="preserve">
          <source>The messages have associated levels, such as &lt;code&gt;INFO&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt; that indicate their importance. You can then give the &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; a level, and only messages at that level or higher will be printed.</source>
          <target state="translated">메시지에는 관련 &lt;code&gt;INFO&lt;/code&gt; 예 : INFO 또는 &lt;code&gt;ERROR&lt;/code&gt; ) 가 중요도를 나타냅니다. 그런 다음 &lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; 에 수준 을 부여하면 해당 수준 이상의 메시지 만 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="7ed17a46f5d164d4fb1ce3e055ca6cf1ff5c352a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;array#method-i-pop&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; removes the last element in an array and returns it:</source>
          <target state="translated">&lt;a href=&quot;array#method-i-pop&quot;&gt; &lt;code&gt;pop&lt;/code&gt; &lt;/a&gt; 메소드 는 배열의 마지막 요소를 제거하고이를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8dd1b8cdb5e4d124efa471d2a5b6465ca4789a83" translate="yes" xml:space="preserve">
          <source>The method of determining if the resource was created or not is unique to the particular service you are using. Of course, you will want to add protection from infinite looping.</source>
          <target state="translated">리소스가 생성되었는지 여부를 결정하는 방법은 사용중인 특정 서비스에 고유합니다. 물론 무한 반복으로부터 보호를 추가하고 싶을 것입니다.</target>
        </trans-unit>
        <trans-unit id="ccfa8c485fcee972d9f8521b3edcaa96ae452142" translate="yes" xml:space="preserve">
          <source>The method params() returns a hash of all parameters in the request as name/value-list pairs, where the value-list is an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of one or more values. The &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; object itself also behaves as a hash of parameter names to values, but only returns a single value (as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) for each parameter name.</source>
          <target state="translated">params () 메소드는 요청의 모든 매개 변수 해시를 이름 / 값 목록 쌍으로 리턴합니다. 여기서 값 목록은 하나 이상의 값으로 구성된 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; 의&lt;/a&gt; 목적 자체도 값 매개 변수 이름의 해시로 동작 있지만 (A와 같은 단일 값을 반환 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 각 매개 변수 이름).</target>
        </trans-unit>
        <trans-unit id="03b946c0c70bf569bc0e75dbadd02ad1f9c32728" translate="yes" xml:space="preserve">
          <source>The methods provided are &lt;a href=&quot;string#method-i-scanf&quot;&gt;&lt;code&gt;String#scanf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;kernel#method-i-scanf&quot;&gt;&lt;code&gt;Kernel#scanf&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;kernel#method-i-scanf&quot;&gt;&lt;code&gt;Kernel#scanf&lt;/code&gt;&lt;/a&gt; is a wrapper around STDIN.scanf. &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt; can be used on any &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; stream, including file handles and sockets. scanf can be called either with or without a block.</source>
          <target state="translated">제공되는 메소드는 &lt;a href=&quot;string#method-i-scanf&quot;&gt; &lt;code&gt;String#scanf&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-scanf&quot;&gt; &lt;code&gt;IO#scanf&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;kernel#method-i-scanf&quot;&gt; &lt;code&gt;Kernel#scanf&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;kernel#method-i-scanf&quot;&gt; &lt;code&gt;Kernel#scanf&lt;/code&gt; &lt;/a&gt; #scanf는 STDIN.scanf의 래퍼입니다. &lt;a href=&quot;io#method-i-scanf&quot;&gt; &lt;code&gt;IO#scanf&lt;/code&gt; &lt;/a&gt; 는 파일 핸들 및 소켓을 포함한 모든 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 스트림에서 사용할 수 있습니다 . scanf는 블록의 유무에 관계없이 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84cddd53158e7009e062db7663f73cda3c930f38" translate="yes" xml:space="preserve">
          <source>The minimum field width specifies the minimum width.</source>
          <target state="translated">최소 필드 너비는 최소 너비를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6faca15fc2ed785ce29bfd1c5630e73b3716d9a0" translate="yes" xml:space="preserve">
          <source>The minimum number of seconds to be used for TTL values in RRs.</source>
          <target state="translated">RR의 TTL 값에 사용되는 최소 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="0a97a8ac1ceb9e02af962e4894865d40c80e40d5" translate="yes" xml:space="preserve">
          <source>The minimum number of significant decimal digits in a double-precision floating point.</source>
          <target state="translated">배정 밀도 부동 소수점의 최소 유효 소수 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="a7687e6fea656889dc6c15a2a48af2a0d52bac38" translate="yes" xml:space="preserve">
          <source>The minor version of the instruction sequence.</source>
          <target state="translated">명령 시퀀스의 부 버전입니다.</target>
        </trans-unit>
        <trans-unit id="e7d2c9e2fb664b6f552ed6f31a6763a704e5cfb7" translate="yes" xml:space="preserve">
          <source>The mixed mode default is to treat a list of indices as row access, returning the rows indicated. Anything else is considered columnar access. For columnar access, the return set has an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; for each row with the values indicated by the headers in each &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. You can force column or row mode using &lt;a href=&quot;table#method-i-by_col&quot;&gt;&lt;code&gt;by_col&lt;/code&gt;&lt;/a&gt;!() or &lt;a href=&quot;table#method-i-by_row&quot;&gt;&lt;code&gt;by_row&lt;/code&gt;&lt;/a&gt;!().</source>
          <target state="translated">혼합 모드 기본값은 인덱스 목록을 행 액세스로 취급하여 표시된 행을 리턴하는 것입니다. 다른 것은 컬럼 액세스로 간주됩니다. 주상 액세스의 리턴 세트가 갖는 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 각각의 헤더에 의해 표시되는 값이 각 행의 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;table#method-i-by_col&quot;&gt; &lt;code&gt;by_col&lt;/code&gt; &lt;/a&gt; ! () 또는 &lt;a href=&quot;table#method-i-by_row&quot;&gt; &lt;code&gt;by_row&lt;/code&gt; &lt;/a&gt; ! ()를 사용하여 열 또는 행 모드를 강제 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ecc046e7d1219d6e375c3c25aabce2dff0d83a5" translate="yes" xml:space="preserve">
          <source>The mode should be an integer, as for Unix chmod.</source>
          <target state="translated">모드는 Unix chmod와 같이 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="657fa6d04a94551886639db774724f16e48b0dc5" translate="yes" xml:space="preserve">
          <source>The modified Julian day number is in elapsed days since midnight (Coordinated Universal &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;) on November 17, 1858 CE (in the Gregorian calendar).</source>
          <target state="translated">수정 된 율리우스 일 번호 자정 (협정 세계 경과 일에 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 17 일), 1858 CE (그레고리력에서).</target>
        </trans-unit>
        <trans-unit id="881eec14e2a567191faf4c34b9f0d0595a34221c" translate="yes" xml:space="preserve">
          <source>The modified attributes may be retained when &lt;code&gt;exec(2)&lt;/code&gt; system call fails.</source>
          <target state="translated">&lt;code&gt;exec(2)&lt;/code&gt; 시스템 호출이 실패하면 수정 된 속성이 유지 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61a2ebb23192061c98013ae05eff2f946e449e8a" translate="yes" xml:space="preserve">
          <source>The modifiers are &amp;ldquo;E&amp;rdquo; and &amp;ldquo;O&amp;rdquo;. They are ignored.</source>
          <target state="translated">수정자는 &quot;E&quot;및 &quot;O&quot;입니다. 그들은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e28a7551f843bfb98ea28ac3bf61743eeeb4400a" translate="yes" xml:space="preserve">
          <source>The modifiers are &amp;ldquo;E&amp;rdquo;, &amp;ldquo;O&amp;rdquo;, &amp;ldquo;:&amp;rdquo;, &amp;ldquo;::&amp;rdquo; and &amp;ldquo;:::&amp;rdquo;. &amp;ldquo;E&amp;rdquo; and &amp;ldquo;O&amp;rdquo; are ignored. No effect to result currently.</source>
          <target state="translated">수정자는&amp;ldquo;E&amp;rdquo;,&amp;ldquo;O&amp;rdquo;,&amp;ldquo;:&amp;rdquo;,&amp;ldquo;::&amp;rdquo;및&amp;ldquo;:::&amp;rdquo;입니다. &quot;E&quot;및 &quot;O&quot;는 무시됩니다. 현재 결과에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a111203f6b9742fa6ba9316a0b08c2f75811389f" translate="yes" xml:space="preserve">
          <source>The module contains several groups of functionality for handling OS processes:</source>
          <target state="translated">모듈에는 OS 프로세스를 처리하기위한 여러 기능 그룹이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="089a54897d08954cb728ea0a0d9bd9a5719b1c4b" translate="yes" xml:space="preserve">
          <source>The more accurate value is returned by &lt;a href=&quot;time#method-i-nsec&quot;&gt;&lt;code&gt;nsec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보다 정확한 값은 &lt;a href=&quot;time#method-i-nsec&quot;&gt; &lt;code&gt;nsec&lt;/code&gt; 에&lt;/a&gt; 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="cba813d4c11d37a73fbae06095fffef653980d78" translate="yes" xml:space="preserve">
          <source>The more accurate value is returned by &lt;a href=&quot;time#method-i-subsec&quot;&gt;&lt;code&gt;subsec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보다 정확한 값은 &lt;a href=&quot;time#method-i-subsec&quot;&gt; &lt;code&gt;subsec&lt;/code&gt; 에&lt;/a&gt; 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="311b028c2e8bf551c0fd09b547dfc425dd72d0f7" translate="yes" xml:space="preserve">
          <source>The most common constructive encodings are SETs and SEQUENCEs, which is why there are two sub-classes of &lt;a href=&quot;asn1/constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; representing each of them.</source>
          <target state="translated">가장 일반적인 건설 인코딩의 두 개의 하위 클래스가있는 이유입니다, 세트와 시퀀스입니다 &lt;a href=&quot;asn1/constructive&quot;&gt; &lt;code&gt;Constructive&lt;/code&gt; &lt;/a&gt; 그들 각각을 대표하는가.</target>
        </trans-unit>
        <trans-unit id="4f782338c0399529848644e45d81c3c92ac9fc09" translate="yes" xml:space="preserve">
          <source>The most common errors are:</source>
          <target state="translated">가장 일반적인 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d151e682e7c87aeaa1a6866f9dc88244ca248a2" translate="yes" xml:space="preserve">
          <source>The most common way is to compare an object against multiple patterns. The patterns are matched using the +===+ method which is aliased to +==+ on &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. Other classes must override it to give meaningful behavior. See &lt;a href=&quot;../module#method-i-3D-3D-3D&quot;&gt;&lt;code&gt;Module#===&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../regexp#method-i-3D-3D-3D&quot;&gt;&lt;code&gt;Regexp#===&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">가장 일반적인 방법은 객체를 여러 패턴과 비교하는 것입니다. &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;/a&gt; + == +에 별명 인 + === + 메소드를 사용하여 패턴을 일치시킵니다 . 의미있는 동작을 제공하려면 다른 클래스가이를 재정의해야합니다. 예제는 &lt;a href=&quot;../module#method-i-3D-3D-3D&quot;&gt; &lt;code&gt;Module#===&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../regexp#method-i-3D-3D-3D&quot;&gt; &lt;code&gt;Regexp#===&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f29507bdb8e7b7e4bdf24b8a672c7dc35a0976b1" translate="yes" xml:space="preserve">
          <source>The most common way of writing strings is using &lt;code&gt;&quot;&lt;/code&gt;:</source>
          <target state="translated">문자열을 작성하는 가장 일반적인 방법은 &lt;code&gt;&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb0f9f1a0972627a233df437e035ac38990c02d4" translate="yes" xml:space="preserve">
          <source>The most generic interface of the library is:</source>
          <target state="translated">라이브러리의 가장 일반적인 인터페이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8bc67b2fdf86b0e5b077a4ced35b62c16ee3c5c" translate="yes" xml:space="preserve">
          <source>The most likely situation is that &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt;&lt;/a&gt; buffers some data. &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; doesn't see the buffer. So &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; can block when &lt;a href=&quot;openssl/buffering#method-i-readpartial&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt;&lt;/a&gt; doesn't block.</source>
          <target state="translated">가장 가능성이 높은 상황은 &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; &lt;/a&gt; 일부 데이터를 버퍼링하는 것입니다. &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 는 버퍼를 보지 못합니다. 따라서 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;openssl/buffering#method-i-readpartial&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt; &lt;/a&gt; 이 차단되지 않을 때 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e30fceab152fddcc3f16b0c48a5aa6a2a863d60" translate="yes" xml:space="preserve">
          <source>The most likely situation is that &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; buffers some data. &lt;code&gt;IO.select&lt;/code&gt; doesn't see the buffer. So &lt;code&gt;IO.select&lt;/code&gt; can block when &lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt; doesn't block.</source>
          <target state="translated">가장 일반적인 상황은 &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; 일부 데이터를 버퍼링하는 것입니다. &lt;code&gt;IO.select&lt;/code&gt; 에 버퍼가 표시되지 않습니다. 따라서 &lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt; 이 차단되지 않으면 &lt;code&gt;IO.select&lt;/code&gt; 가 차단 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc82f3d021b0c83c586e1487100b727ac71c1bf7" translate="yes" xml:space="preserve">
          <source>The most standard error types are subclasses of &lt;a href=&quot;standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt;. A rescue clause without an explicit &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class will rescue all StandardErrors (and only those).</source>
          <target state="translated">가장 표준적인 오류 유형은 &lt;a href=&quot;standarderror&quot;&gt; &lt;code&gt;StandardError&lt;/code&gt; 의&lt;/a&gt; 서브 클래스입니다 . 명시 적 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 클래스가 없는 구조 절 은 모든 StandardError (및 그 오류 만)를 구조합니다.</target>
        </trans-unit>
        <trans-unit id="82c18dff1fef598c8ab96e1ec31e726b5405e18d" translate="yes" xml:space="preserve">
          <source>The name of the Ruby implementation.</source>
          <target state="translated">Ruby 구현의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0d5fa1599fac5039119ead4b62b172ddb697cfe4" translate="yes" xml:space="preserve">
          <source>The name of the argument.</source>
          <target state="translated">인수의 이름</target>
        </trans-unit>
        <trans-unit id="b0ae9bfa50babdc16a8e158461a1823b0195f61d" translate="yes" xml:space="preserve">
          <source>The name of the command to be removed</source>
          <target state="translated">제거 할 명령의 이름</target>
        </trans-unit>
        <trans-unit id="291b19fab86bda0e4ebc8bd5177fd74c0bbcc729" translate="yes" xml:space="preserve">
          <source>The name of the context (block, method, class, module, etc.) that this instruction sequence belongs to.</source>
          <target state="translated">이 명령어 시퀀스가 ​​속한 컨텍스트 (블록, 메소드, 클래스, 모듈 등)의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="23ef5d977abc3446a411570403e682307f9244fa" translate="yes" xml:space="preserve">
          <source>The name of the cookie; in this form, there is no &lt;a href=&quot;cookie#attribute-i-domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; or expiration. The &lt;a href=&quot;cookie#attribute-i-path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; is gleaned from the &lt;code&gt;SCRIPT_NAME&lt;/code&gt; environment variable, and &lt;a href=&quot;cookie#attribute-i-secure&quot;&gt;&lt;code&gt;secure&lt;/code&gt;&lt;/a&gt; is false.</source>
          <target state="translated">쿠키의 이름 이 형식에서는 &lt;a href=&quot;cookie#attribute-i-domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt; 이나 만료 가 없습니다 . &lt;a href=&quot;cookie#attribute-i-path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; 로부터 수집되는 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 의 환경 변수, 그리고 &lt;a href=&quot;cookie#attribute-i-secure&quot;&gt; &lt;code&gt;secure&lt;/code&gt; &lt;/a&gt; false입니다.</target>
        </trans-unit>
        <trans-unit id="eb0b6919ccde61efcbd76e9ac59889238b6d797c" translate="yes" xml:space="preserve">
          <source>The name of the unknown thing.</source>
          <target state="translated">알려지지 않은 것의 이름.</target>
        </trans-unit>
        <trans-unit id="54b2e3344f685e74053621dc1bdb0ab94f2aa71e" translate="yes" xml:space="preserve">
          <source>The name of this &lt;a href=&quot;domainname&quot;&gt;&lt;code&gt;DomainName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;domainname&quot;&gt; &lt;code&gt;DomainName&lt;/code&gt; &lt;/a&gt; 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="a9721470964edf026e4e7586efba5ebf887ea33e" translate="yes" xml:space="preserve">
          <source>The name of this function</source>
          <target state="translated">이 기능의 이름</target>
        </trans-unit>
        <trans-unit id="0bbaf98de8d7d3835e4e308c361e1e93160da5d4" translate="yes" xml:space="preserve">
          <source>The name returned by &lt;a href=&quot;env#method-c-key&quot;&gt;&lt;code&gt;ENV.key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-key&quot;&gt; &lt;code&gt;ENV.key&lt;/code&gt; 에&lt;/a&gt; 의해 반환 된 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="dd617b5e90ab7a0b455e82956f9198259876b2b3" translate="yes" xml:space="preserve">
          <source>The names of the &lt;code&gt;Errno::&lt;/code&gt; classes depend on the environment in which Ruby runs. On a typical Unix or Windows platform, there are &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt; classes such as Errno::EACCES, Errno::EAGAIN, Errno::EINTR, and so on.</source>
          <target state="translated">&lt;code&gt;Errno::&lt;/code&gt; 클래스 의 이름은 Ruby가 실행되는 환경에 따라 다릅니다. 일반적인 Unix 또는 Windows 플랫폼에는 Errno :: EACCES, Errno :: EAGAIN, Errno :: EINTR 등과 같은 &lt;a href=&quot;errno&quot;&gt; &lt;code&gt;Errno&lt;/code&gt; &lt;/a&gt; 클래스 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0456024604ae809c763b250c17ec95e11640cdc" translate="yes" xml:space="preserve">
          <source>The names of the &lt;code&gt;Errno::&lt;/code&gt; classes depend on the environment in which Ruby runs. On a typical Unix or Windows platform, there are &lt;code&gt;Errno&lt;/code&gt; classes such as &lt;code&gt;Errno::EACCES&lt;/code&gt;, &lt;code&gt;Errno::EAGAIN&lt;/code&gt;, &lt;code&gt;Errno::EINTR&lt;/code&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;Errno::&lt;/code&gt; 클래스 의 이름은 Ruby가 실행되는 환경에 따라 다릅니다. 일반적인 Unix 또는 Windows 플랫폼에는 &lt;code&gt;Errno::EACCES&lt;/code&gt; , &lt;code&gt;Errno::EAGAIN&lt;/code&gt; , &lt;code&gt;Errno::EINTR&lt;/code&gt; 등과 같은 &lt;code&gt;Errno&lt;/code&gt; 클래스 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1c6e46017f1669a6d11abd7d5dc08ab22aee261" translate="yes" xml:space="preserve">
          <source>The namespace to search for.</source>
          <target state="translated">검색 할 네임 스페이스입니다.</target>
        </trans-unit>
        <trans-unit id="9186e4b8da445d7871556732af9390315b56fe4a" translate="yes" xml:space="preserve">
          <source>The namespace/class given will have its options showed on the help usage. Check &lt;a href=&quot;group#method-c-invoke_from_option&quot;&gt;&lt;code&gt;invoke_from_option&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">제공된 네임 스페이스 / 클래스는 도움말 사용법에 대한 옵션이 표시됩니다. 자세한 정보는 &lt;a href=&quot;group#method-c-invoke_from_option&quot;&gt; &lt;code&gt;invoke_from_option&lt;/code&gt; &lt;/a&gt; 을 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="901df1e0c1d95c96af85c355300dda402bfe351f" translate="yes" xml:space="preserve">
          <source>The net/pop library supports &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication. To use &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;Net::APOP&lt;/code&gt;&lt;/a&gt; class instead of the &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;Net::POP3&lt;/code&gt;&lt;/a&gt; class. You can use the utility method, &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;Net::POP3&lt;/code&gt;&lt;/a&gt;.APOP(). For example:</source>
          <target state="translated">net / pop 라이브러리는 &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 인증을 지원 합니다. &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 를 사용하려면 &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;Net::POP3&lt;/code&gt; &lt;/a&gt; 클래스 대신 &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;Net::APOP&lt;/code&gt; &lt;/a&gt; 클래스를 사용하십시오 . &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;Net::POP3&lt;/code&gt; &lt;/a&gt; .APOP () 유틸리티 메소드를 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ff1141f023e6ca3e2bd7058d06643e202d61ac87" translate="yes" xml:space="preserve">
          <source>The network broadcast address</source>
          <target state="translated">네트워크 브로드 캐스트 주소</target>
        </trans-unit>
        <trans-unit id="11f15c9d3abb3dbd8b6411fd566203e44bb8625c" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object is buffered mode (or non-sync mode), unless &lt;code&gt;filename&lt;/code&gt; is a tty. See &lt;a href=&quot;io#method-i-flush&quot;&gt;&lt;code&gt;IO#flush&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fsync&quot;&gt;&lt;code&gt;IO#fsync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fdatasync&quot;&gt;&lt;code&gt;IO#fdatasync&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;io#method-i-sync-3D&quot;&gt;&lt;code&gt;IO#sync=&lt;/code&gt;&lt;/a&gt; about sync mode.</source>
          <target state="translated">새 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체는 &lt;code&gt;filename&lt;/code&gt; 이 tty가 아닌 한 버퍼링 모드 (또는 비동기 모드) 입니다. 동기화 모드에 대해서는 &lt;a href=&quot;io#method-i-flush&quot;&gt; &lt;code&gt;IO#flush&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fsync&quot;&gt; &lt;code&gt;IO#fsync&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fdatasync&quot;&gt; &lt;code&gt;IO#fdatasync&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;io#method-i-sync-3D&quot;&gt; &lt;code&gt;IO#sync=&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="107eed62d3dd34fa4fc7ee9a22822d7f91f164e4" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object is buffered mode (or non-sync mode), unless &lt;code&gt;filename&lt;/code&gt; is a tty. See &lt;a href=&quot;io#method-i-flush&quot;&gt;&lt;code&gt;IO#flush&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fsync&quot;&gt;&lt;code&gt;IO#fsync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fdatasync&quot;&gt;&lt;code&gt;IO#fdatasync&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;IO#sync=&lt;/code&gt; about sync mode.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 이 tty가 아닌 한 새 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체는 버퍼 모드 (또는 비동기 모드) 입니다. 동기화 모드에 대해서는 &lt;a href=&quot;io#method-i-flush&quot;&gt; &lt;code&gt;IO#flush&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fsync&quot;&gt; &lt;code&gt;IO#fsync&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fdatasync&quot;&gt; &lt;code&gt;IO#fdatasync&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;IO#sync=&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d694a0b3bcbbb027eed02e68fd12eed0c763e89" translate="yes" xml:space="preserve">
          <source>The new dRuby server will become the primary server, even if another server is currently the primary server.</source>
          <target state="translated">다른 서버가 현재 기본 서버 인 경우에도 새 dRuby 서버가 기본 서버가됩니다.</target>
        </trans-unit>
        <trans-unit id="9b71ceab6735600e06e0b313fc3f7b363bf96fbc" translate="yes" xml:space="preserve">
          <source>The next step is to create the end-entity certificate using the root CA certificate.</source>
          <target state="translated">다음 단계는 루트 CA 인증서를 사용하여 최종 엔티티 인증서를 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f210ce079d52d62cce9a7003c6d8a0786bddcac7" translate="yes" xml:space="preserve">
          <source>The nil itself.</source>
          <target state="translated">무 자체.</target>
        </trans-unit>
        <trans-unit id="ec5399075b05f3340270879f715c6d3b180b11d6" translate="yes" xml:space="preserve">
          <source>The nonce is used to prevent replay attacks but some servers do not support it.</source>
          <target state="translated">nonce는 재생 공격을 방지하는 데 사용되지만 일부 서버는이를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="57dff6886ca4feedded1bc4c406da385a133074e" translate="yes" xml:space="preserve">
          <source>The normal &lt;code&gt;require&lt;/code&gt; functionality of returning false if that file has already been loaded is preserved.</source>
          <target state="translated">파일이 이미로드 된 경우 일반적 으로 false를 반환 &lt;code&gt;require&lt;/code&gt; 기능이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="4470ba34138eea7d6a34f78cf9963f1177b2be63" translate="yes" xml:space="preserve">
          <source>The not_before and not_after fields must be filled in.</source>
          <target state="translated">not_before 및 not_after 필드를 채워야합니다.</target>
        </trans-unit>
        <trans-unit id="ef7b9b5379bcc525b031c437e0e03e12dc1237ef" translate="yes" xml:space="preserve">
          <source>The notifying class mixes in the &lt;code&gt;Observable&lt;/code&gt; module, which provides the methods for managing the associated observer objects.</source>
          <target state="translated">알림 클래스는 &lt;code&gt;Observable&lt;/code&gt; 모듈 에서 혼합되며 관련된 Observer 객체를 관리하기위한 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ceac4bcc0fb6ca38222b353f41ce522fa43ebe3f" translate="yes" xml:space="preserve">
          <source>The number of base digits for the &lt;code&gt;double&lt;/code&gt; data type.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 데이터 유형 의 기본 자릿수입니다 .</target>
        </trans-unit>
        <trans-unit id="3fdd2f0621d73b7205106501fc4775423e03cb0b" translate="yes" xml:space="preserve">
          <source>The number of bytes that are immediately available for reading.</source>
          <target state="translated">바로 읽을 수있는 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="e62c62ea352a6f6043fbb13199ed254de84e1fa7" translate="yes" xml:space="preserve">
          <source>The number of connections available on the stack.</source>
          <target state="translated">스택에서 사용 가능한 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="8b3467e9dfbf8934d0c263809fe99ff64f56a973" translate="yes" xml:space="preserve">
          <source>The number of elements in the tuple.</source>
          <target state="translated">튜플의 요소 수</target>
        </trans-unit>
        <trans-unit id="36425e9fd6284c7ea09d614b532ff3e8cfc58e72" translate="yes" xml:space="preserve">
          <source>The number of requests that should be made before opening a new connection. Typically many keep-alive capable servers tune this to 100 or less, so the 101st request will fail with ECONNRESET. If unset (default), this value has no effect, if set, connections will be reset on the request after max_requests.</source>
          <target state="translated">새 연결을 열기 전에해야 할 요청 수입니다. 일반적으로 많은 keep-alive 가능 서버가이를 100 이하로 조정하므로 101 번째 요청은 ECONNRESET으로 실패합니다. 설정되지 않은 경우 (기본값)이 값은 적용되지 않으며, 설정된 경우 max_requests 이후 요청에서 연결이 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ae02fb229b8b972161e37321ddc614f718debf20" translate="yes" xml:space="preserve">
          <source>The number of significant digits, as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. If omitted or 0, the number of significant digits is determined from the initial value.</source>
          <target state="translated">&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 유효 자릿수 입니다. 생략되거나 0이면 유효 숫자의 수가 초기 값에서 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="82b3107bf1393fb143bbe2676ab50e22da3b5f2e" translate="yes" xml:space="preserve">
          <source>The number of spaces to be indented</source>
          <target state="translated">들여 쓰기 할 공백의 수</target>
        </trans-unit>
        <trans-unit id="ce1dc4d9e3ef1e8c3a4d9bfdd2eb6e2b68547768" translate="yes" xml:space="preserve">
          <source>The number of the first source line where the instruction sequence was loaded from.</source>
          <target state="translated">명령어 시퀀스가로드 된 첫 번째 소스 라인의 번호입니다.</target>
        </trans-unit>
        <trans-unit id="1938d1f06ed1bf7fe16bfe633133a3c8be059b9e" translate="yes" xml:space="preserve">
          <source>The number of times &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; occurred.</source>
          <target state="translated">&lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 가 발생한 횟수</target>
        </trans-unit>
        <trans-unit id="c0779616dc1d6d6bbf0541b6f7c8ba03afe87401" translate="yes" xml:space="preserve">
          <source>The object the current method is attached to. See &lt;a href=&quot;syntax/methods_rdoc&quot;&gt;methods&lt;/a&gt;</source>
          <target state="translated">현재 메서드가 연결된 개체입니다. &lt;a href=&quot;syntax/methods_rdoc&quot;&gt;방법&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="3ae91720e7752e0f172ac1d1c6f8a7fc86c83b5c" translate="yes" xml:space="preserve">
          <source>The objspace library extends the &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; module and adds several methods to get internal statistic information about object/memory management.</source>
          <target state="translated">objspace 라이브러리는 ObjectSpace 모듈을 확장하고 &lt;a href=&quot;objectspace&quot;&gt; &lt;code&gt;ObjectSpace&lt;/code&gt; &lt;/a&gt; / 메모리 관리에 대한 내부 통계 정보를 얻기 위해 여러 메소드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="63cb0ac6d292de0a33b3cb29f2fd8e9b18bdbe63" translate="yes" xml:space="preserve">
          <source>The observable object must:</source>
          <target state="translated">관찰 가능한 객체는 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="1e6d225afa1abca8299e09e3fc9958795c42cc49" translate="yes" xml:space="preserve">
          <source>The offset also accepts string form:</source>
          <target state="translated">오프셋은 문자열 형식도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="47855f7ed510fced4896c5c2056b4e8861dfcb0c" translate="yes" xml:space="preserve">
          <source>The only exception is dynamic method definition: even if defined by passing a non-lambda proc, methods still have normal semantics of argument checking.</source>
          <target state="translated">단 하나의 예외는 동적 메소드 정의입니다. 람다가 아닌 proc을 전달하여 정의 된 경우에도 메소드에는 여전히 일반적인 인수 검사 의미론이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eed7f10c9a1c090abaa07243ca851a81d9d5701b" translate="yes" xml:space="preserve">
          <source>The only flag implemented in scanf for Ruby is '&lt;code&gt;*&lt;/code&gt;' (ignore upcoming conversion). Many of the flags available in C versions of scanf(3) have to do with the type of upcoming pointer arguments, and are meaningless in Ruby.</source>
          <target state="translated">Ruby의 scanf에서 구현 된 유일한 플래그는 ' &lt;code&gt;*&lt;/code&gt; '(다가오는 변환 무시)입니다. C 버전의 scanf (3)에서 사용할 수있는 많은 플래그는 다가오는 포인터 인수 유형과 관련이 있으며 Ruby에서는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="973e01594d2449daae48c68e722c7b946c07b8db" translate="yes" xml:space="preserve">
          <source>The opened &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object will be returned. If &lt;em&gt;read_only&lt;/em&gt; is true, and the file does not exist, then nil will be returned.</source>
          <target state="translated">열린 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체가 반환됩니다. 경우 &lt;em&gt;READ_ONLY&lt;/em&gt; 사실이며, 파일이 존재하지 않는, 다음 반환됩니다 NIL.</target>
        </trans-unit>
        <trans-unit id="73492dd8ad490c734fb87cbd087cceb7d94d7844" translate="yes" xml:space="preserve">
          <source>The opened file has several getter methods for its meta-information, as follows, since it is extended by &lt;a href=&quot;openuri/meta&quot;&gt;&lt;code&gt;OpenURI::Meta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">열린 파일에는 &lt;a href=&quot;openuri/meta&quot;&gt; &lt;code&gt;OpenURI::Meta&lt;/code&gt; &lt;/a&gt; 의해 확장되므로 다음과 같이 메타 정보에 대한 몇 가지 getter 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff277050cec24f281a96774a298e0c77b3f32df9" translate="yes" xml:space="preserve">
          <source>The opposite of &lt;a href=&quot;pathname#method-i-absolute-3F&quot;&gt;&lt;code&gt;Pathname#absolute?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-absolute-3F&quot;&gt; &lt;code&gt;Pathname#absolute?&lt;/code&gt; &lt;/a&gt; 의 반대 ?</target>
        </trans-unit>
        <trans-unit id="e79b14349ce3cb8e8057e916c8b9c9120fa29144" translate="yes" xml:space="preserve">
          <source>The option name is always converted to the first (preferred) name given in the original options to &lt;a href=&quot;getoptlong#method-c-new&quot;&gt;&lt;code&gt;GetoptLong.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">옵션 이름은 항상 원래 옵션에 지정된 첫 번째 (선호 한) 이름으로 &lt;a href=&quot;getoptlong#method-c-new&quot;&gt; &lt;code&gt;GetoptLong.new&lt;/code&gt; &lt;/a&gt; 로 변환 됩니다.</target>
        </trans-unit>
        <trans-unit id="3d387ec735ccfc047f61b72b5d075d0deaacd7ac" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;base&lt;/code&gt; keyword argument specifies the base directory for interpreting relative pathnames instead of the current working directory. As the results are not prefixed with the base directory name in this case, you will need to prepend the base directory name if you want real paths.</source>
          <target state="translated">선택적 &lt;code&gt;base&lt;/code&gt; 키워드 인수는 현재 작업 디렉토리 대신 상대 경로 이름을 해석하기위한 기본 디렉토리를 지정합니다. 이 경우 결과에 기본 디렉토리 이름이 접두어로 표시되지 않으므로 실제 경로를 원할 경우 기본 디렉토리 이름을 앞에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4e24c4a7df1edcf3504bd1279dca8922ab94496" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;dest&lt;/code&gt; argument is obsolete.</source>
          <target state="translated">선택적 &lt;code&gt;dest&lt;/code&gt; 인수는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65a9803a3f8a4f84c11df6cf0c0185f0e9ece281" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;half&lt;/code&gt; keyword argument is available similar to &lt;a href=&quot;float#method-i-round&quot;&gt;&lt;code&gt;Float#round&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;half&lt;/code&gt; 키워드 인수는 &lt;a href=&quot;float#method-i-round&quot;&gt; &lt;code&gt;Float#round&lt;/code&gt; &lt;/a&gt; 와 유사하게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6d17d93ec3f386da4bb8ba74d7af741a6343779" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;hash&lt;/code&gt;, if given, will generate attributes and values (can be a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;openstruct&quot;&gt;&lt;code&gt;OpenStruct&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;). For example:</source>
          <target state="translated">선택적인 &lt;code&gt;hash&lt;/code&gt; 는 주어진 경우 속성과 값을 생성합니다 ( &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;openstruct&quot;&gt; &lt;code&gt;OpenStruct&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; 일 수 있음&lt;/a&gt; ). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e2aa843cec8cd465fd68e3b571e24d53550b234" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;header_row&lt;/code&gt; parameter can be set to &lt;code&gt;true&lt;/code&gt; to indicate, via &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt;&lt;code&gt;CSV::Row.header_row?()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt;&lt;code&gt;CSV::Row.field_row?()&lt;/code&gt;&lt;/a&gt;, that this is a header row. Otherwise, the row assumes to be a field row.</source>
          <target state="translated">선택적 &lt;code&gt;header_row&lt;/code&gt; 매개 변수를 &lt;code&gt;true&lt;/code&gt; 로 설정하여 &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt; &lt;code&gt;CSV::Row.header_row?()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt; &lt;code&gt;CSV::Row.field_row?()&lt;/code&gt; &lt;/a&gt; 를 통해 이것이 헤더 행 임을 나타낼 수 있습니다 . 그렇지 않으면 행은 필드 행이라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="81790be8c3cda35716e6a222bf384cae5a7b3fe9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;header_row&lt;/code&gt; parameter can be set to &lt;code&gt;true&lt;/code&gt; to indicate, via &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt;&lt;code&gt;CSV::Row.header_row?()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt;&lt;code&gt;CSV::Row.field_row?()&lt;/code&gt;&lt;/a&gt;, that this is a header row. Otherwise, the row is assumes to be a field row.</source>
          <target state="translated">선택적 &lt;code&gt;header_row&lt;/code&gt; 매개 변수는 &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt; &lt;code&gt;CSV::Row.header_row?()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt; &lt;code&gt;CSV::Row.field_row?()&lt;/code&gt; &lt;/a&gt; 를 통해 이것이 헤더 행 임을 나타내 도록 &lt;code&gt;true&lt;/code&gt; 로 설정할 수 있습니다 . 그렇지 않으면 행은 필드 행인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="6fc88394a3b14b21fea6a06c9b285beafb74f5b9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;headers&lt;/code&gt; parameter can be set to &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of headers. If headers aren't set, headers are fetched from &lt;a href=&quot;row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; objects. Otherwise, headers() method will return headers being set in headers argument.</source>
          <target state="translated">선택적 &lt;code&gt;headers&lt;/code&gt; 매개 변수는 헤더 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로 설정할 수 있습니다 . 헤더를 설정하지 않으면 &lt;a href=&quot;row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; 객체 에서 헤더를 가져옵니다 . 그렇지 않으면 headers () 메서드는 headers 인수에 설정된 헤더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c65b70d91fdef6e6e2554b1bf564b476d1f8672e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;isapop&lt;/code&gt; specifies whether this connection is going to use &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication; it defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;isapop&lt;/code&gt; 은이 연결이 &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 인증 을 사용할지 여부를 지정합니다 . 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3075efc2ab24b71b70768911ce0e17636a66c3dc" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;level&lt;/code&gt; argument determines the level of recursion to flatten.</source>
          <target state="translated">선택적 &lt;code&gt;level&lt;/code&gt; 인수는 평탄화 할 재귀 레벨을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a1bab4f317892f92325571c645ad1584f2f4a30e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;pattern&lt;/code&gt; parameter is a pattern or a string. Only input strings that match the pattern or start with the string are included in the output hash.</source>
          <target state="translated">선택적 &lt;code&gt;pattern&lt;/code&gt; 매개 변수는 패턴 또는 문자열입니다. 패턴과 일치하거나 문자열로 시작하는 입력 문자열 만 출력 해시에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="472faf5c04e9c6ed82bf3bd6272112984517e71b" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;port&lt;/code&gt; is the port to connect to.</source>
          <target state="translated">옵션 &lt;code&gt;port&lt;/code&gt; 는 연결할 포트입니다.</target>
        </trans-unit>
        <trans-unit id="e76afc72a063acaa00fef0ed93bc3551db4fc697" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;rng&lt;/code&gt; argument will be used as the random number generator.</source>
          <target state="translated">선택적인 &lt;code&gt;rng&lt;/code&gt; 인수는 난수 생성기로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="131e5aa959a2f5094455e26eea2eb80dd2718de6" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;arity&lt;/em&gt; argument should be supplied when currying methods with variable arguments to determine how many arguments are needed before the method is called.</source>
          <target state="translated">선택적 &lt;em&gt;arity&lt;/em&gt; 인수는 변수 인수가있는 메소드를 카레 할 때 메소드가 호출되기 전에 필요한 인수 수를 판별 할 때 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a5300b5539da14c679018e34f0fae367df2c78a2" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;capacity&lt;/em&gt; keyword argument specifies the size of the internal buffer. This may improve performance, when the string will be concatenated many times (causing many realloc calls).</source>
          <target state="translated">선택적 &lt;em&gt;capacity&lt;/em&gt; 키워드 인수는 내부 버퍼의 크기를 지정합니다. 이렇게하면 문자열이 여러 번 연결되어 많은 realloc 호출이 발생하는 경우 성능이 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca55fff9634b4fc6f0c9b00958c2e4370761459c" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; keyword argument specifies the encoding of the directory. If not specified, the filesystem encoding is used.</source>
          <target state="translated">선택적 &lt;em&gt;encoding&lt;/em&gt; 키워드 인수는 디렉토리의 인코딩을 지정합니다. 지정하지 않으면 파일 시스템 인코딩이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2c80c9c55500c28a3dd9bbd39b98dc563e61fa40" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; keyword argument specifies the encoding of the new string. If not specified, the encoding of &lt;em&gt;str&lt;/em&gt; is used (or ASCII-8BIT, if &lt;em&gt;str&lt;/em&gt; is not specified).</source>
          <target state="translated">선택적 &lt;em&gt;encoding&lt;/em&gt; 키워드 인수는 새 문자열의 인코딩을 지정합니다. 지정하지 않으면 &lt;em&gt;str&lt;/em&gt; 의 인코딩 이 사용됩니다 (또는 &lt;em&gt;str&lt;/em&gt; 이 지정되지 않은 경우 ASCII-8BIT ).</target>
        </trans-unit>
        <trans-unit id="7b0f8bc6f973fbc2eedfb8dec7ea760e4337a5d1" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;filename&lt;/em&gt; argument passed to &lt;a href=&quot;kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; code is run</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 코드가 실행될 때 &lt;a href=&quot;kernel#method-i-eval&quot;&gt; &lt;code&gt;Kernel#eval&lt;/code&gt; 에&lt;/a&gt; 전달 된 선택적 &lt;em&gt;파일 이름&lt;/em&gt; 인수</target>
        </trans-unit>
        <trans-unit id="f647974208a0bed8a2421a99493d5f7bd5dc9929" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;limit&lt;/em&gt; argument specifies how many characters of each line to return. By default all characters are returned.</source>
          <target state="translated">선택적인 &lt;em&gt;limit&lt;/em&gt; 인수는 반환 할 각 줄의 문자 수를 지정합니다. 기본적으로 모든 문자가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="41be43f2f70feda6306bb88681e847b3590d99be" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;lineno&lt;/em&gt; argument passed to &lt;a href=&quot;kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; code is run</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 코드가 실행될 때 &lt;a href=&quot;kernel#method-i-eval&quot;&gt; &lt;code&gt;Kernel#eval&lt;/code&gt; 에&lt;/a&gt; 전달 되는 선택적 &lt;em&gt;lineno&lt;/em&gt; 인수</target>
        </trans-unit>
        <trans-unit id="b729a103111267d94266dac8e4cf5f77b840e72a" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;start&lt;/em&gt; parameter determines the number of initial stack entries to omit from the top of the stack.</source>
          <target state="translated">선택적인 &lt;em&gt;start&lt;/em&gt; 매개 변수는 스택 맨 위에서 생략 할 초기 스택 항목 수를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="21a13cb6c1fb37363ab27e3e4453e9ffa9fe37c0" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;opts&lt;/em&gt; is options represented by a hash. &lt;em&gt;opts&lt;/em&gt; may have following options:</source>
          <target state="translated">선택적 인수 &lt;em&gt;opts&lt;/em&gt; 는 해시로 표시되는 옵션입니다. &lt;em&gt;opts&lt;/em&gt; 에는 다음 옵션이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b2067bdbaf8bf43d6e1a1a6a29174e3c9cad12" translate="yes" xml:space="preserve">
          <source>The optional keyword parameters &lt;em&gt;loc&lt;/em&gt; and &lt;em&gt;set&lt;/em&gt; specify where to insert the new attribute. Refer to the manpage of X509_NAME_add_entry(3) for details. &lt;em&gt;loc&lt;/em&gt; defaults to -1 and &lt;em&gt;set&lt;/em&gt; defaults to 0. This appends a single-valued RDN to the end.</source>
          <target state="translated">선택적 키워드 매개 변수 &lt;em&gt;loc&lt;/em&gt; 및 &lt;em&gt;set&lt;/em&gt; 은 새 속성을 삽입 할 위치를 지정합니다. 자세한 내용은 X509_NAME_add_entry (3) 맨 페이지를 참조하십시오. &lt;em&gt;LOC는&lt;/em&gt; -1 기본값과 &lt;em&gt;설정&lt;/em&gt; 이 마지막에 단일 값 RDN을 추가 0으로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d096dd2ed050ee99a797f64e7dcba1d08bc070d6" translate="yes" xml:space="preserve">
          <source>The optional last argument &lt;em&gt;opts&lt;/em&gt; is options represented by a hash. &lt;em&gt;opts&lt;/em&gt; may have following options:</source>
          <target state="translated">선택적인 마지막 인수 &lt;em&gt;opts&lt;/em&gt; 는 해시로 표시되는 옵션입니다. &lt;em&gt;opts&lt;/em&gt; 에는 다음 옵션이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28c102809ad7f40a86ee774113fe18f69a9d4d1f" translate="yes" xml:space="preserve">
          <source>The optional parameter can be used to specify how to calculate the size in a lazy fashion (see &lt;a href=&quot;enumerator#method-i-size&quot;&gt;&lt;code&gt;Enumerator#size&lt;/code&gt;&lt;/a&gt;). It can either be a value or a callable object.</source>
          <target state="translated">선택적 매개 변수를 사용하여 느리게 크기를 계산하는 방법을 지정할 수 있습니다 ( &lt;a href=&quot;enumerator#method-i-size&quot;&gt; &lt;code&gt;Enumerator#size&lt;/code&gt; &lt;/a&gt; 참조 ). 값이거나 호출 가능한 객체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78c99fe80f67c49eec06dcb2f904bd2b56c13548" translate="yes" xml:space="preserve">
          <source>The optional parameter s consists of either an integer; or an optional '+' or ' ', followed by an optional number, followed by an optional 'E' or 'F'.</source>
          <target state="translated">선택적 매개 변수 s는 정수로 구성됩니다. 또는 선택적인 '+'또는 '', 그 뒤에 선택적인 숫자, 선택적인 'E'또는 'F'.</target>
        </trans-unit>
        <trans-unit id="8c8ab6a8f4ceb3ba7df2334bb03789a66826c492" translate="yes" xml:space="preserve">
          <source>The optional timeout parameter defines, in seconds, the total time to wait for the pattern. If the timeout expires or eof is found, nil is returned or yielded. However, the buffer in a timeout session is kept for the next expect call. The default timeout is 9999999 seconds.</source>
          <target state="translated">선택적 시간 종료 매개 변수는 패턴을 기다리는 총 시간을 초 단위로 정의합니다. 시간 초과가 만료되거나 eof가 발견되면 nil이 반환되거나 생성됩니다. 그러나 시간 종료 세션의 버퍼는 다음 예상 호출에 대해 유지됩니다. 기본 시간 초과는 9999999 초입니다.</target>
        </trans-unit>
        <trans-unit id="6ae8fa51f2e48e0f267991f3c1a1ea62da888b36" translate="yes" xml:space="preserve">
          <source>The options below give you various choices, in more or less increasing complexity.</source>
          <target state="translated">아래 옵션은 점점 더 복잡 해지는 다양한 선택을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7dce28310a689d881778bd6f3a373eeb6d0df21b" translate="yes" xml:space="preserve">
          <source>The options hash accepts the following keys:</source>
          <target state="translated">옵션 해시는 다음 키를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e8734aeabd6d1836446322aff4d31a0ab99ed976" translate="yes" xml:space="preserve">
          <source>The options to pass to &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt; are constructed by merging &lt;code&gt;opts&lt;/code&gt;, the last hash element of the array, and specifications for the pipes between each of the commands.</source>
          <target state="translated">&lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;Process.spawn&lt;/code&gt; &lt;/a&gt; 에 전달할 옵션 은 &lt;code&gt;opts&lt;/code&gt; , 배열의 마지막 해시 요소 및 각 명령 사이의 파이프 사양을 병합하여 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="37ad8576203826a94c70eaf7a2d72b8626e108a9" translate="yes" xml:space="preserve">
          <source>The options to support are passed to new() as an array of arrays. Each sub-array contains any number of &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; option names which carry the same meaning, and one of the following flags:</source>
          <target state="translated">지원하는 옵션은 배열의 배열로 new ()에 전달됩니다. 각 하위 배열에는 동일한 의미를 갖는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 옵션 이름과 다음 플래그 중 하나가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="70969b16d15f8f2eaa631d12bd961f72469a242c" translate="yes" xml:space="preserve">
          <source>The options used when no overrides are given by calling code. They are:</source>
          <target state="translated">코드를 호출하여 재정의가 없을 때 사용되는 옵션입니다. 그들은:</target>
        </trans-unit>
        <trans-unit id="5e8d2d2eaae95321183809d2d8c2fb4b167c99e0" translate="yes" xml:space="preserve">
          <source>The order in which environment variables are examined is OS-dependent. See &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;About Ordering&lt;/a&gt;.</source>
          <target state="translated">환경 변수를 검사하는 순서는 OS에 따라 다릅니다. &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;주문 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="314c6e78f7ae97836a7f20cd8bbd80e461cef7ca" translate="yes" xml:space="preserve">
          <source>The order in which values are removed/returned is not guaranteed.</source>
          <target state="translated">값이 제거 / 반환되는 순서는 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfeb8e3c6c2bfee0268b7a962df18119dfcbcfe5" translate="yes" xml:space="preserve">
          <source>The order of the names is OS-dependent. See &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;About Ordering&lt;/a&gt;.</source>
          <target state="translated">이름의 순서는 OS에 따라 다릅니다. &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;주문 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97f752b00f776ce24ec5e9d2ab2d0fa07bb13cd4" translate="yes" xml:space="preserve">
          <source>The order of the values is OS-dependent. See &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;About Ordering&lt;/a&gt;.</source>
          <target state="translated">값의 순서는 OS에 따라 다릅니다. &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;주문 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="002e5c106dc68243e96e727181899a4921c8cefe" translate="yes" xml:space="preserve">
          <source>The orders of each hashes are not compared.</source>
          <target state="translated">각 해시의 순서는 비교되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d7da42f4ed0859719b7607e12bc2d9ccdac1712" translate="yes" xml:space="preserve">
          <source>The ordinal date is a particular day of a calendar year identified by its ordinal number within the year.</source>
          <target state="translated">서수 날짜는 연도의 서수로 식별되는 달력 연도의 특정 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="f11dd76de683de980b8499851a5fbe8756a37d23" translate="yes" xml:space="preserve">
          <source>The orientation of the hemisphere as 'lat' or 'lon'</source>
          <target state="translated">'lat'또는 'lon'으로 반구의 방향</target>
        </trans-unit>
        <trans-unit id="a2ab1ed878e01d1947d161bdaecabb5b3b91e07a" translate="yes" xml:space="preserve">
          <source>The origin (zero) of the returned value varies. For example, system start up time, process start up time, the Epoch, etc.</source>
          <target state="translated">반환 된 값의 원점 (0)은 다릅니다. 예를 들어, 시스템 시작 시간, 프로세스 시작 시간, Epoch 등</target>
        </trans-unit>
        <trans-unit id="cecc355844073554de9abb2efca293d3d93ca31f" translate="yes" xml:space="preserve">
          <source>The origin in &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt; is defined as the Epoch (1970-01-01 00:00:00 UTC). But some systems count leap seconds and others doesn't. So the result can be interpreted differently across systems. &lt;a href=&quot;time#method-c-now&quot;&gt;&lt;code&gt;Time.now&lt;/code&gt;&lt;/a&gt; is recommended over &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; &lt;/a&gt; 의 원점 은 Epoch (1970-01-01 00:00:00 UTC)로 정의됩니다. 그러나 일부 시스템은 윤초를 계산하지만 다른 시스템은 그렇지 않습니다. 따라서 결과는 시스템마다 다르게 해석 될 수 있습니다. &lt;a href=&quot;time#method-c-now&quot;&gt; &lt;code&gt;Time.now&lt;/code&gt; 는&lt;/a&gt; 이상 권장 &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62461d5f0665c945266ef16a9f39ecbe2da18d0e" translate="yes" xml:space="preserve">
          <source>The original ndbm library is released in 4.3BSD. It is based on dbm library in Unix Version 7 but has different API to support multiple databases in a process.</source>
          <target state="translated">원래 ndbm 라이브러리는 4.3BSD로 릴리스되었습니다. Unix 버전 7의 dbm 라이브러리를 기반으로하지만 프로세스에서 여러 데이터베이스를 지원하는 API가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4427decdd689644cd2edb0acc4e3b3dc2d2be001" translate="yes" xml:space="preserve">
          <source>The other way to use a &lt;code&gt;case&lt;/code&gt; expression is like an if-elsif expression:</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 표현식 을 사용하는 다른 방법 은 if-elsif 표현식과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab6cc0135e77f62a28ff31167c49845fcae4028e" translate="yes" xml:space="preserve">
          <source>The output field separator for &lt;a href=&quot;kernel#method-i-print&quot;&gt;&lt;code&gt;Kernel#print&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-join&quot;&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/a&gt;. Non-nil $, will be deprecated.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-print&quot;&gt; &lt;code&gt;Kernel#print&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;array#method-i-join&quot;&gt; &lt;code&gt;Array#join&lt;/code&gt; &lt;/a&gt; 의 출력 필드 구분 기호입니다 . nil이 아닌 $는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bd60afe566be233ecdea712c2674beeade9f8624" translate="yes" xml:space="preserve">
          <source>The output field separator for the print and &lt;a href=&quot;array#method-i-join&quot;&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">print 및 &lt;a href=&quot;array#method-i-join&quot;&gt; &lt;code&gt;Array#join&lt;/code&gt; &lt;/a&gt; 의 출력 필드 구분 기호입니다 .</target>
        </trans-unit>
        <trans-unit id="606d68c5b237f3fb1b8a05b28df849650e963e57" translate="yes" xml:space="preserve">
          <source>The output length in octets. Must be &amp;lt;= &lt;code&gt;255 * HashLen&lt;/code&gt;, where HashLen is the length of the hash function output in octets.</source>
          <target state="translated">옥텟 단위의 출력 길이입니다. &amp;lt;= &lt;code&gt;255 * HashLen&lt;/code&gt; 이어야합니다 . 여기서 HashLen은 해시 함수 출력의 길이 (옥텟)입니다.</target>
        </trans-unit>
        <trans-unit id="db5fba97ffcc2a99eabad272993917978968a191" translate="yes" xml:space="preserve">
          <source>The output object.</source>
          <target state="translated">출력 객체.</target>
        </trans-unit>
        <trans-unit id="ce37fb87591ca50e11c1728f078062d6f6e1c25b" translate="yes" xml:space="preserve">
          <source>The output record separator for &lt;a href=&quot;kernel#method-i-print&quot;&gt;&lt;code&gt;Kernel#print&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt;. Default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-print&quot;&gt; &lt;code&gt;Kernel#print&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;IO#write&lt;/code&gt; &lt;/a&gt; 의 출력 레코드 구분 기호입니다 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="01b3f74916316ba798b87a2bb4ca5700f74b895f" translate="yes" xml:space="preserve">
          <source>The output record separator for the print and &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt;. Default is nil.</source>
          <target state="translated">인쇄 및 &lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;IO#write&lt;/code&gt; &lt;/a&gt; 의 출력 레코드 구분 기호입니다 . 기본값은 nil입니다.</target>
        </trans-unit>
        <trans-unit id="fa27f1011fa02d3e014431080b14e689a3a43b12" translate="yes" xml:space="preserve">
          <source>The padding character is optional. This method accepts both correctly-padded and unpadded input. Note that it still rejects incorrectly-padded input.</source>
          <target state="translated">패딩 문자는 선택 사항입니다. 이 방법은 올바르게 채워진 입력과 채워지지 않은 입력을 모두 허용합니다. 여전히 잘못 입력 된 입력을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="75887f73f237bd9e6adc753f06a8bf975aae48e7" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;min&lt;/code&gt; specifies the minimum number of bytes that should be received when a read operation is performed. (default: 1)</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 매개 변수 는 읽기 작업을 수행 할 때 수신해야하는 최소 바이트 수를 지정합니다. (기본값 : 1)</target>
        </trans-unit>
        <trans-unit id="357a20699c2ab7e10cd50bd2e2273fd31b21fd2c" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;time&lt;/code&gt; specifies the timeout in &lt;em&gt;seconds&lt;/em&gt; with a precision of 1/10 of a second. (default: 0)</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 매개 변수 는 1/10 &lt;em&gt;초의&lt;/em&gt; 정밀도로 제한 시간을 &lt;em&gt;초 단위&lt;/em&gt; 로 지정합니다 . (기본값 : 0)</target>
        </trans-unit>
        <trans-unit id="44a14d66e6ce54fa3c1ed0bc0f15ca47a6fed218" translate="yes" xml:space="preserve">
          <source>The parameters env, cmd, and opts are passed to &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt;. A commandline string and a list of argument strings can be accepted as follows:</source>
          <target state="translated">env, cmd 및 opts 매개 변수는 &lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;Process.spawn&lt;/code&gt; &lt;/a&gt; 으로 전달됩니다 . 명령 행 문자열과 인수 문자열 목록은 다음과 같이 승인 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="984c9c424075336fc05edea0c43b3e3064a534a0" translate="yes" xml:space="preserve">
          <source>The parent class for all constructed encodings. The &lt;em&gt;value&lt;/em&gt; attribute of a &lt;a href=&quot;constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; is always an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. Attributes are the same as for &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;, with the addition of &lt;em&gt;tagging&lt;/em&gt;.</source>
          <target state="translated">구성된 모든 인코딩의 부모 클래스입니다. &lt;a href=&quot;constructive&quot;&gt; &lt;code&gt;Constructive&lt;/code&gt; &lt;/a&gt; 의 &lt;em&gt;value&lt;/em&gt; 속성 은 항상 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다. 속성은 &lt;em&gt;태그&lt;/em&gt; 가 추가 된 &lt;a href=&quot;asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2421ee38537c97af8b88ff919b091a13c2e509a5" translate="yes" xml:space="preserve">
          <source>The parent class for all primitive encodings. Attributes are the same as for &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;, with the addition of &lt;em&gt;tagging&lt;/em&gt;. &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; values can never be encoded with indefinite length form, thus it is not possible to set the &lt;em&gt;indefinite_length&lt;/em&gt; attribute for &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; and its sub-classes.</source>
          <target state="translated">모든 프리미티브 인코딩의 부모 클래스 속성은 &lt;em&gt;태그&lt;/em&gt; 가 추가 된 &lt;a href=&quot;asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 와 동일 합니다. &lt;a href=&quot;primitive&quot;&gt; &lt;code&gt;Primitive&lt;/code&gt; &lt;/a&gt; 값은 무한 길이 형식으로 인코딩 될 수 없으므로 &lt;a href=&quot;primitive&quot;&gt; &lt;code&gt;Primitive&lt;/code&gt; &lt;/a&gt; 및 해당 서브 클래스에 대해 &lt;em&gt;indefinite_length&lt;/em&gt; 속성 을 설정할 수 없습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09d92b53bd3fab58debf5bf8cd2215ec425269aa" translate="yes" xml:space="preserve">
          <source>The parent process should use &lt;a href=&quot;process#method-c-wait&quot;&gt;&lt;code&gt;Process.wait&lt;/code&gt;&lt;/a&gt; to collect the termination status of its child or use &lt;a href=&quot;process#method-c-detach&quot;&gt;&lt;code&gt;Process.detach&lt;/code&gt;&lt;/a&gt; to register disinterest in their status; otherwise, the operating system may accumulate zombie processes.</source>
          <target state="translated">부모 프로세스는 &lt;a href=&quot;process#method-c-wait&quot;&gt; &lt;code&gt;Process.wait&lt;/code&gt; &lt;/a&gt; 를 사용 하여 자식의 종료 상태를 수집하거나 &lt;a href=&quot;process#method-c-detach&quot;&gt; &lt;code&gt;Process.detach&lt;/code&gt; &lt;/a&gt; 를 사용 하여 상태에 무관심을 등록해야합니다. 그렇지 않으면 운영 체제에 좀비 프로세스가 누적 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1db0666f5ad99ea1666b262aa4e7925c9593721" translate="yes" xml:space="preserve">
          <source>The parent process should use &lt;code&gt;Process.wait&lt;/code&gt; to collect the termination status of its child or use &lt;code&gt;Process.detach&lt;/code&gt; to register disinterest in their status; otherwise, the operating system may accumulate zombie processes.</source>
          <target state="translated">부모 프로세스는 &lt;code&gt;Process.wait&lt;/code&gt; 를 사용 하여 자식의 종료 상태를 수집하거나 &lt;code&gt;Process.detach&lt;/code&gt; 를 사용 하여 무관심 상태를 등록해야합니다. 그렇지 않으면 운영 체제가 좀비 프로세스를 축적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b29b9bcbac559c5a2ac01ebd4c67e6adef64fc4" translate="yes" xml:space="preserve">
          <source>The parentheses around the arguments are optional:</source>
          <target state="translated">인수 주위의 괄호는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="93fd9ee216f7411448146467a3991adbfce6523e" translate="yes" xml:space="preserve">
          <source>The passed-in no-argument block is ignored.</source>
          <target state="translated">전달 된 인수 없음 블록은 무시됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
