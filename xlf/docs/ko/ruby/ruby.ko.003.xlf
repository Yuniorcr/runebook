<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="9bf84708e4fe29e09a760330f2825cf7f981d10c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the free function for this pointer to &lt;code&gt;function&lt;/code&gt; in the given &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Fiddle::Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;주어진&lt;a href=&quot;function&quot;&gt; &lt;code&gt;Fiddle::Function&lt;/code&gt; &lt;/a&gt; 에서이 포인터가 &lt;code&gt;function&lt;/code&gt; 하도록 free 함수를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="8fc2cd441cd75098dad56601f17a0ceecdbdc83c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the group ID of the current process to &lt;em&gt;group&lt;/em&gt;. Not available on all platforms.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 에 현재 프로세스의 그룹 ID&lt;em&gt; 그룹을&lt;/em&gt; . 모든 플랫폼에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1d7094994bf64bf6e5cf6bdf366042791d2f45d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the mark for mark-based routing (Linux 2.6.25)</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 마크 기반 라우팅 표를 (리눅스 2.6.25)</target>
        </trans-unit>
        <trans-unit id="81fb629d0e6906b19e74c0d42ced00479362f6e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the names of the &lt;code&gt;members&lt;/code&gt; in this C struct</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;이 C 구조체에서 &lt;code&gt;members&lt;/code&gt; 의 이름을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="906d3174467a9f2b259fd92840c974002a18bf96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the number of seconds to wait until timing-out a read(2) call.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;read (2) 호출 시간이 초과 될 때까지 대기 할 시간 (초)을 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="a617d747aa0bd871db2b6db6fa695c9c7687e6ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the peek offset (Linux 3.4)</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;엿보기 오프셋 설정 (Linux 3.4)</target>
        </trans-unit>
        <trans-unit id="8a9ed8b145d41604e83ed7560a4a74e995ac486f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the port range for sockets with unspecified port numbers</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;포트 번호가 지정되지 않은 소켓의 포트 범위 설정</target>
        </trans-unit>
        <trans-unit id="af9039724c808dace75fc8a861f92ca8505cf1a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the read timeout.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;읽기 시간 초과를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="6c66fdd93314cb83ae69bd4f941a0aa8735f9baf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the real group ID of the calling process to &lt;em&gt;group&lt;/em&gt;. Not available on all platforms.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 에 호출 프로세스의 실제 그룹 ID&lt;em&gt; 그룹을&lt;/em&gt; . 모든 플랫폼에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="83d5e739278433eb287ccf1f8185edac2e58afe2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the real user ID of the calling process to &lt;em&gt;user&lt;/em&gt;. Not available on all platforms.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 에 호출 프로세스의 실제 사용자 ID&lt;em&gt; 사용자&lt;/em&gt; . 모든 플랫폼에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="76c25a49b3286b83d68ba4a6cc9e5a705d0fa30a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the session data for key &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;key &lt;code&gt;key&lt;/code&gt; 의 세션 데이터를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="89b2c96d197d7f7d99092ac87c54ee3369c95a4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the size of this pointer to &lt;code&gt;size&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 이 포인터의 크기 &lt;code&gt;size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a842e75fc1b7a929d4f4f2780920e264b115a748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the socket used to connect to the &lt;a href=&quot;ftp&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; server.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;ftp&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt; 서버에 연결하는 데 사용되는 소켓을 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="1003acc6b0d12df1d1ac61b7477d33c8f64c12f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the target &lt;em&gt;key&lt;/em&gt; with a given &lt;em&gt;value&lt;/em&gt; under a specific &lt;em&gt;section&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 목표&lt;em&gt; 키&lt;/em&gt; 소정와&lt;em&gt; 값을&lt;/em&gt; 특정의 아래&lt;em&gt; 섹션&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="202e95e4b3a76e0988725e7c48f2f44a138ade20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the threshold in microseconds for low latency polling (Linux 3.11)</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;낮은 대기 시간 폴링을 위해 임계 값을 마이크로 초 단위로 설정 하십시오 (Linux 3.11).</target>
        </trans-unit>
        <trans-unit id="4927c75b87594e00347802673b0107c732c78953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the user ID of the current process to &lt;em&gt;user&lt;/em&gt;. Not available on all platforms.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 현재 프로세스의 사용자 ID&lt;em&gt; 사용자&lt;/em&gt; . 모든 플랫폼에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="3ab98e98a72695d81e4cfd8ba6f1badbf6cf940b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the value at &lt;code&gt;index&lt;/code&gt; to &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; &lt;code&gt;index&lt;/code&gt; 의 값을 &lt;code&gt;int&lt;/code&gt; 로설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="11132541cd58a3859e955e02cbc095a726a56345" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; to true automatically when the request did not contain an Accept-Encoding header from the user.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;요청에 사용자의 Accept-Encoding 헤더가 포함되지 않은 경우 자동으로 true로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="19e08fec545f40a740d7b11de0683eba5e9c7d33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; whether the &lt;a href=&quot;cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; is a httponly cookie or not.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 가 httponly 쿠키인지 여부를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="333fb8165b26aa5076276dd7b25ad3566ef97a7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; whether the &lt;a href=&quot;cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; is a secure cookie or not.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 가 보안 쿠키인지 여부를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3961a909039b440c5bb08788f66d56f69a239a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; whether to operate in verbose mode.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;상세 모드에서 작동할지 여부를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="51bdf999dec83c61cf1ecc5984cbee011381e6f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; whether to use ESMTP or not. This should be done before calling &lt;a href=&quot;smtp#method-i-start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;. Note that if &lt;a href=&quot;smtp#method-i-start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; is called in ESMTP mode, and the connection fails due to a &lt;code&gt;ProtocolError&lt;/code&gt;, the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; object will automatically switch to plain &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; mode and retry (but not vice versa).</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;ESMTP 사용 여부를 설정하십시오 . &lt;a href=&quot;smtp#method-i-start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 를 호출하기 전에 수행해야합니다. 경우주의&lt;a href=&quot;smtp#method-i-start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; ESMTP 모드에서 호출하고 연결이로 인해 실패 &lt;code&gt;ProtocolError&lt;/code&gt; 의&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; 의&lt;/a&gt; 객체가 자동으로 일반으로 전환됩니다&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; 의&lt;/a&gt; 모드와 재시도 (하지만 그 반대의 경우도 마찬가지).</target>
        </trans-unit>
        <trans-unit id="4c4a0360fee8745c3d080a3eb516d653c4362d75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;&lt;code&gt;key&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt; in database.</source>
          <target state="translated">&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;데이터베이스에서 &lt;code&gt;key&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc11be98ed1e74bd236b777351e8b4158dcb1c7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../singleton&quot;&gt;&lt;code&gt;Singleton&lt;/code&gt;&lt;/a&gt; Classes</source>
          <target state="translated">&lt;a href=&quot;../singleton&quot;&gt; &lt;code&gt;Singleton&lt;/code&gt; &lt;/a&gt; 수업</target>
        </trans-unit>
        <trans-unit id="11797ca8ed7575bd6ae23e6e992f045a18f01db9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; address builder.</source>
          <target state="translated">&lt;a href=&quot;../socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 주소 빌더.</target>
        </trans-unit>
        <trans-unit id="1508eb6e3e9dbe75cd729df846e42ecb63286622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; has had listen() called on it</source>
          <target state="translated">&lt;a href=&quot;../socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 에 listen ()이 호출되었습니다</target>
        </trans-unit>
        <trans-unit id="30acd771a2ba6803b4b9b8aea6708adaa2c4b240" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; type not supported</source>
          <target state="translated">&lt;a href=&quot;../socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 유형이 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="53e83b430abb5743b8a82697c69e965eeeb1daae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; extra_data will be saved with binary data. You can access this data with &lt;a href=&quot;instructionsequence#method-c-load_from_binary_extra_data&quot;&gt;&lt;code&gt;RubyVM::InstructionSequence.load_from_binary_extra_data(binary)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;extra_data 문자열 은 이진 데이터와 함께 저장됩니다. &lt;a href=&quot;instructionsequence#method-c-load_from_binary_extra_data&quot;&gt; &lt;code&gt;RubyVM::InstructionSequence.load_from_binary_extra_data(binary)&lt;/code&gt; &lt;/a&gt; 로이 데이터에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e9877243db24dd44a0848a269c6a4eab91b88f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; representation of this configuration object, including the class name and its sections.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;클래스 이름 및 섹션을 포함하여이 구성 객체의 문자열 표현.</target>
        </trans-unit>
        <trans-unit id="1b822e41cc163ae281ab2a102a271b33a5299a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to extract URIs from.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;URI를 추출 할 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="177dc7cb2cfc2a8d0f557e13422e30141d872117" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to make safe</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;안전한 문자열</target>
        </trans-unit>
        <trans-unit id="41b37182146c828f81776445bc606a65b66560a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to remove escapes from</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;이스케이프를 제거하는 문자열</target>
        </trans-unit>
        <trans-unit id="be0d169a4d15f5bba4afa6c31f85bdb112db6882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to replaces in.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0696467c43eaaeb29e348e62bda3f9fc675f6036" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to search</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;검색 할 문자열</target>
        </trans-unit>
        <trans-unit id="ffc967e862f7e3497969a1582afd13d9a06883f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to unescape.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;이스케이프 할 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="d203bb45c329cf2aa07fbef115008f77d6947fba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 과&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e698fe54a03e2d3973172482e52b87bb8f170d15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../switch&quot;&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/a&gt; that can omit argument.</source>
          <target state="translated">&lt;a href=&quot;../switch&quot;&gt; &lt;code&gt;Switch&lt;/code&gt; &lt;/a&gt;인수를 생략 할 수있는 스위치 .</target>
        </trans-unit>
        <trans-unit id="7fd92d9aae0af701d7ec3685808f3b16060f2a0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../switch&quot;&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/a&gt; that takes an argument, which does not begin with '-'.</source>
          <target state="translated">&lt;a href=&quot;../switch&quot;&gt; &lt;code&gt;Switch&lt;/code&gt; &lt;/a&gt;'-'로 시작하지 않는 인수를 취하는 스위치 입니다.</target>
        </trans-unit>
        <trans-unit id="14f4097a30a7a840014111cc2feeb87a6f566f1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../switch&quot;&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/a&gt; that takes an argument.</source>
          <target state="translated">&lt;a href=&quot;../switch&quot;&gt; &lt;code&gt;Switch&lt;/code&gt; &lt;/a&gt;인수를 취하는 스위치 .</target>
        </trans-unit>
        <trans-unit id="df2d7250547cbb6426f99547ca57d65514db13f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../switch&quot;&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/a&gt; that takes no arguments.</source>
          <target state="translated">&lt;a href=&quot;../switch&quot;&gt; &lt;code&gt;Switch&lt;/code&gt; &lt;/a&gt;인수가없는 스위치 .</target>
        </trans-unit>
        <trans-unit id="390007a65e3ae347b5f74d049712df591dff6a53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; &amp;hellip;</source>
          <target state="translated">&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; &amp;hellip;</target>
        </trans-unit>
        <trans-unit id="d485ed1667938ec2ea1755c25e31ae6e801f28ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;pathname&lt;/code&gt;'s contents are not valid Ruby syntax.</source>
          <target state="translated">&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;pathname&lt;/code&gt; 의 내용이 유효한 Ruby 구문이 아닌경우 SyntaxError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="afe6baba70765103e60e4fbcaf0c12ddfbb8fd88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;pathname&lt;/em&gt;'s contents are not valid Ruby syntax.</source>
          <target state="translated">&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;&lt;em&gt;pathname&lt;/em&gt; 의 내용이 유효한 Ruby 구문이 아닌경우 SyntaxError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="69d361a68a9153b52fd135ede9fe38bc74d1cf3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; is raised if the given &lt;em&gt;string&lt;/em&gt; is invalid syntax.</source>
          <target state="translated">&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;주어진&lt;em&gt; 문자열&lt;/em&gt; 이 잘못된 구문이면 SyntaxError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4910cf701fbf763f9f9ef7a8c123fffe7ac9cc77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; is raised if the given string is invalid syntax.</source>
          <target state="translated">&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;주어진 문자열이 유효하지 않은 구문이면 SyntaxError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a83f97a7f831774b4749b76e167894b47d7bb0f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; Safety</source>
          <target state="translated">&lt;a href=&quot;../thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 안전</target>
        </trans-unit>
        <trans-unit id="80392b5fa31c8470b127c5f94caf30be6e8ae18e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; at which this cookie expires, as a &lt;code&gt;Time&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 이 쿠키는로 만료되는 &lt;code&gt;Time&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10013a1753b4905216cfdfa206d547d2b647d9ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; between keepalive probes (Linux 2.4, glibc 2.2)</source>
          <target state="translated">&lt;a href=&quot;../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;Keepalive 프로브 사이의 시간 (Linux 2.4, glibc 2.2)</target>
        </trans-unit>
        <trans-unit id="77a87f6d47ba8e6c571a3c9e2cb51fea0dc02bd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; elapsed in seconds for this &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; run</source>
          <target state="translated">&lt;a href=&quot;../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 이 초 단위 경과&lt;a href=&quot;../gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; 의&lt;/a&gt; 실행</target>
        </trans-unit>
        <trans-unit id="c7e77a145328f5cbb64773523207acc195118598" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; elapsed in seconds from startup to when the &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; was invoked</source>
          <target state="translated">&lt;a href=&quot;../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;시작에서&lt;a href=&quot;../gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 가 호출될 때까지의 시간 ( 초)</target>
        </trans-unit>
        <trans-unit id="d0f2c5eaa86ae9cbc28d809cb470a2369239c839" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; stamping of incoming and outgoing packets (Linux 2.6.30)</source>
          <target state="translated">&lt;a href=&quot;../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;들어오고 나가는 패킷의 타임 스탬프 (Linux 2.6.30)</target>
        </trans-unit>
        <trans-unit id="ef117097620f6261f31450a23eb6ff17d85e0c8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; has components listed in order of decreasing significance from left to right, see RFC3986 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;tools.ietf.org/html/rfc3986&lt;/a&gt; 1.2.3.</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 에는 왼쪽에서 오른쪽으로 중요성이 감소하는 순서대로 나열된 구성 요소가 있습니다.RFC3986&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt; tools.ietf.org/html/rfc3986&lt;/a&gt; 1.2.3을참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0ab01ab6be47231bcfd968a23cb1c27b6a63bafb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; is valid, bad usage is not.</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 는 유효하지만 잘못된 사용법은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d9228a9f109f86172715887179e4d8718fba93a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6a6fb99a6415db68a20aa3309dc6e71f68a71d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; has components listed in order of decreasing significance from left to right, see RFC3986 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;tools.ietf.org/html/rfc3986&lt;/a&gt; 1.2.3.</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 의&lt;/a&gt; 구성 요소는 왼쪽에서 오른쪽으로 중요성이 감소하는 순서로 나열되어있습니다.RFC3986&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt; 도구를&lt;/a&gt; 참조하십시오 .ietf.org / html / rfc3986 1.2.3.</target>
        </trans-unit>
        <trans-unit id="cd8d9efa0e7adcef336103583b0222861d7fdf56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is valid, bad usage is not.</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 가 유효하고 사용이 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="fe7aed9c791ef030136532d396617b5a2e2640ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c44ca06ee83493adf694734eebaba20f1149d47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;a&quot;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt; bit map of enabled services on this host.</source>
          <target state="translated">&lt;a href=&quot;a&quot;&gt; &lt;code&gt;A&lt;/code&gt; &lt;/a&gt;이 호스트에서 사용 가능한 서비스 의 비트 맵입니다.</target>
        </trans-unit>
        <trans-unit id="ca7b14f9042f0698b8e54520640049d57b148442" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;a&quot;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt; client MUST attempt to contact the target host with the lowest-numbered priority it can reach; target hosts with the same priority SHOULD be tried in an order defined by the weight field. The range is 0-65535. Note that it is not widely implemented and should be set to zero.</source>
          <target state="translated">&lt;a href=&quot;a&quot;&gt; &lt;code&gt;A&lt;/code&gt; &lt;/a&gt;클라이언트가 도달 할 수있는 가장 낮은 번호의 우선 순위와 대상 호스트에 연결을 시도해야한다; 우선 순위가 동일한 대상 호스트는 가중치 필드에 정의 된 순서대로 시도해야합니다. 범위는 0-65535입니다. 널리 구현되지 않았으므로 0으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6fa646399a8cee8faeb2a61823cfa57eaebc3208" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;a&quot;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt; server selection mechanism.</source>
          <target state="translated">&lt;a href=&quot;a&quot;&gt; &lt;code&gt;A&lt;/code&gt; &lt;/a&gt;서버 선택 메커니즘.</target>
        </trans-unit>
        <trans-unit id="0c03d982f90ce8c32092a2d0fdce3b6b267b4f85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;a&quot;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt; target of &amp;ldquo;.&amp;rdquo; means that the service is decidedly not available at this domain.</source>
          <target state="translated">&lt;a href=&quot;a&quot;&gt; &lt;code&gt;A&lt;/code&gt; &lt;/a&gt;&amp;ldquo;.&amp;rdquo; 의 목표 이 서비스는 해당 도메인에서 서비스를 사용할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="71a473bd76a58ddcb215857d048c7ae3a46a228b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abstractsyntaxtree&quot;&gt;&lt;code&gt;AbstractSyntaxTree&lt;/code&gt;&lt;/a&gt; provides methods to parse Ruby code into abstract syntax trees. The nodes in the tree are instances of &lt;a href=&quot;abstractsyntaxtree/node&quot;&gt;&lt;code&gt;RubyVM::AbstractSyntaxTree::Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;abstractsyntaxtree&quot;&gt; &lt;code&gt;AbstractSyntaxTree&lt;/code&gt; &lt;/a&gt; 는 Ruby 코드를 추상 구문 트리로 구문 분석하는 메소드를 제공합니다. 트리의 노드는&lt;a href=&quot;abstractsyntaxtree/node&quot;&gt; &lt;code&gt;RubyVM::AbstractSyntaxTree::Node&lt;/code&gt; &lt;/a&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="cc1dc6f9b8065873dd21e38227e9c6684f77c0b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;actions#method-i-destination_root&quot;&gt;&lt;code&gt;destination_root&lt;/code&gt;&lt;/a&gt;&amp;lt;String&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;actions#method-i-destination_root&quot;&gt;&lt;code&gt;destination_root&lt;/code&gt;&lt;/a&gt;&amp;lt;String&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f6bddd7b8998fe2d49aa31f0a14f37f411d4219c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ancillarydata&quot;&gt;&lt;code&gt;Socket::AncillaryData&lt;/code&gt;&lt;/a&gt; represents the ancillary data (control information) used by sendmsg and recvmsg system call. It contains socket &lt;a href=&quot;ancillarydata#method-i-family&quot;&gt;&lt;code&gt;family&lt;/code&gt;&lt;/a&gt;, control message (cmsg) &lt;a href=&quot;ancillarydata#method-i-level&quot;&gt;&lt;code&gt;level&lt;/code&gt;&lt;/a&gt;, cmsg &lt;a href=&quot;ancillarydata#method-i-type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; and cmsg &lt;a href=&quot;ancillarydata#method-i-data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ancillarydata&quot;&gt; &lt;code&gt;Socket::AncillaryData&lt;/code&gt; &lt;/a&gt; 는 sendmsg 및 recvmsg 시스템 호출에서 사용되는 보조 데이터 (제어 정보)를 나타냅니다. 소켓&lt;a href=&quot;ancillarydata#method-i-family&quot;&gt; &lt;code&gt;family&lt;/code&gt; &lt;/a&gt; , 제어 메시지 (cmsg)&lt;a href=&quot;ancillarydata#method-i-level&quot;&gt; &lt;code&gt;level&lt;/code&gt; &lt;/a&gt; , cmsg&lt;a href=&quot;ancillarydata#method-i-type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 및 cmsg&lt;a href=&quot;ancillarydata#method-i-data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="479b04986a65b05b0923e44042e80c867a75b07c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; is a stream designed for use in scripts that process files given as command-line arguments or passed in via &lt;a href=&quot;object#STDIN&quot;&gt;&lt;code&gt;STDIN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 는 명령 행 인수로 제공되거나&lt;a href=&quot;object#STDIN&quot;&gt; &lt;code&gt;STDIN&lt;/code&gt; &lt;/a&gt; 을 통해 전달되는 파일을 처리하는 스크립트에서 사용하도록 설계된 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="fdb2c4163f684887a73c4eb56d8053a1dcdcdef4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised if &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;._parse cannot extract information from &lt;code&gt;date&lt;/code&gt; or if the &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class cannot represent specified date.</source>
          <target state="translated">&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 경우 발생&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; ._parse로부터 정보를 추출 할 수없는 &lt;code&gt;date&lt;/code&gt; 을 또는 경우&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 지정 날짜를 나타낼 수 없습니다 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="45dd252f1527feec6bf5431b9b49364b87c34a32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;date&lt;/code&gt; is not compliant with RFC 2616 or if the &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class cannot represent specified date.</source>
          <target state="translated">&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;date&lt;/code&gt; 가 RFC 2616을 준수하지 않거나&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 클래스가 지정된 날짜를 나타낼 수없는경우 ArgumentError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1b788e0798a45127549ff17ae3033df6c9ab4d5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;date&lt;/code&gt; is not compliant with RFC 2822 or if the &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class cannot represent specified date.</source>
          <target state="translated">&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;date&lt;/code&gt; 가 RFC 2822를 준수하지 않거나&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 클래스가 지정된 날짜를 나타낼 수없는경우 ArgumentError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3e2b4e780b955b5d599de815102eff504b35680a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;date&lt;/code&gt; is not compliant with the format or if the &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class cannot represent specified date.</source>
          <target state="translated">&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;date&lt;/code&gt; 가 형식을 준수하지 않거나&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 클래스가 지정된 날짜를 나타낼 수없는경우 ArgumentError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="302adb8d5ed0b8e27da5b6f579828fb78eef6c66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised when it cannot find a relative path.</source>
          <target state="translated">&lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;상대 경로를 찾을 수 없으면 ArgumentError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0b82c3964a963badf7d8dfbbd5afa94a30c06364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arithmeticsequence&quot;&gt;&lt;code&gt;Enumerator::ArithmeticSequence&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;../enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt;, that is a representation of sequences of numbers with common difference. Instances of this class can be generated by the &lt;a href=&quot;../range#method-i-step&quot;&gt;&lt;code&gt;Range#step&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../numeric#method-i-step&quot;&gt;&lt;code&gt;Numeric#step&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;arithmeticsequence&quot;&gt; &lt;code&gt;Enumerator::ArithmeticSequence&lt;/code&gt; &lt;/a&gt; 의 서브 클래스&lt;a href=&quot;../enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; , 일반적인 차이 숫자의 시퀀스의 표현입니다. 이 클래스의 인스턴스는&lt;a href=&quot;../range#method-i-step&quot;&gt; &lt;code&gt;Range#step&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../numeric#method-i-step&quot;&gt; &lt;code&gt;Numeric#step&lt;/code&gt; &lt;/a&gt; 메소드로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d54fab6b0ac5d301a9bb177cda80a98adf1c61c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; &amp;ndash; Strings separated by ',' (e.g. 1,2,3)</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; &amp;ndash; ','로 구분 된 문자열 (예 : 1,2,3)</target>
        </trans-unit>
        <trans-unit id="eee21354d717c8ae0526582e94e3e09049ce19e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; Difference</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 차이</target>
        </trans-unit>
        <trans-unit id="eb967369445b0d0903b9d4a92084f9622b38959a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; indexing starts at 0, as in C or Java. A negative index is assumed to be relative to the end of the array&amp;mdash;that is, an index of -1 indicates the last element of the array, -2 is the next to last element in the array, and so on.</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;C 또는 Java에서와 같이 배열 인덱싱은 0에서 시작합니다. 음의 인덱스는 배열의 끝을 기준으로하는 것으로 가정합니다. 즉, -1의 인덱스는 배열의 마지막 요소를 나타내고 -2는 배열의 마지막 요소 다음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7c5b1a74d7fe6d7749db13417b8ba69dbba03113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of backtrace of the last exception thrown.</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;마지막에 발생한 예외의 역 추적 배열 .</target>
        </trans-unit>
        <trans-unit id="34334f23fd5e8a63a325cf05512289fffaf01725" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of pairs of integers. The each internal pair consists of a prime number &amp;ndash; a prime factor &amp;ndash; and a natural number &amp;ndash; an exponent.</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;정수 쌍의 배열 . 각 내부 쌍은 소수 (소수)와 자연수 (소수)로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="0f3fa5880320837ed021be9395f93bc7c4ed3cbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of schemes. If given, resulting regexp matches to URIs whose scheme is one of the match_schemes.</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;체계의 배열 . 주어진 정규 표현식은 체계가 match_schemes 중 하나 인 URI와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c6f97966a29801b71f873f117478e1d3a88b0267" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array#method-i-drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; does the opposite of &lt;a href=&quot;array#method-i-take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;, by returning the elements after &lt;code&gt;n&lt;/code&gt; elements have been dropped:</source>
          <target state="translated">&lt;a href=&quot;array#method-i-drop&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;n&lt;/code&gt; 개의 요소가 삭제 된후 요소를 반환하여&lt;a href=&quot;array#method-i-take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt; 과 반대입니다.</target>
        </trans-unit>
        <trans-unit id="b6a1e938d712706176b85389a669fbb3f9960207" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array#method-i-filter&quot;&gt;&lt;code&gt;Array#filter&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;array#method-i-select&quot;&gt;&lt;code&gt;Array#select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-filter&quot;&gt; &lt;code&gt;Array#filter&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;array#method-i-select&quot;&gt; &lt;code&gt;Array#select&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="e3a80a0451458360a7a5008a9c870786a9d08a36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array#method-i-filter-21&quot;&gt;&lt;code&gt;Array#filter!&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;array#method-i-select-21&quot;&gt;&lt;code&gt;Array#select!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-filter-21&quot;&gt; &lt;code&gt;Array#filter!&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;array#method-i-select-21&quot;&gt; &lt;code&gt;Array#select!&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 ! .</target>
        </trans-unit>
        <trans-unit id="44ca97b3cc657fff3d0c7b7cf6032241cd580a02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array#method-i-select-21&quot;&gt;&lt;code&gt;select!&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-reject-21&quot;&gt;&lt;code&gt;reject!&lt;/code&gt;&lt;/a&gt; are the corresponding destructive methods to &lt;a href=&quot;array#method-i-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-reject&quot;&gt;&lt;code&gt;reject&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;array#method-i-select-21&quot;&gt; &lt;code&gt;select!&lt;/code&gt; &lt;/a&gt;및&lt;a href=&quot;array#method-i-reject-21&quot;&gt; &lt;code&gt;reject!&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;array#method-i-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt; 하고&lt;a href=&quot;array#method-i-reject&quot;&gt; &lt;code&gt;reject&lt;/code&gt; &lt;/a&gt; 하는 해당 파괴적인 방법입니다</target>
        </trans-unit>
        <trans-unit id="afde4ef9020016bee5928184e78d858bc74b8d06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array#method-i-shelljoin&quot;&gt;&lt;code&gt;Array#shelljoin&lt;/code&gt;&lt;/a&gt; is a shortcut for this function.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-shelljoin&quot;&gt; &lt;code&gt;Array#shelljoin&lt;/code&gt; &lt;/a&gt; 은이 함수의 바로 가기입니다.</target>
        </trans-unit>
        <trans-unit id="aa4d62314b01879178958ebc6d3e55ee8dd96947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array#method-i-sum&quot;&gt;&lt;code&gt;Array#sum&lt;/code&gt;&lt;/a&gt; method may not respect method redefinition of &amp;ldquo;+&amp;rdquo; methods such as &lt;a href=&quot;integer#method-i-2B&quot;&gt;&lt;code&gt;Integer#+&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-sum&quot;&gt; &lt;code&gt;Array#sum&lt;/code&gt; &lt;/a&gt; 메소드는&lt;a href=&quot;integer#method-i-2B&quot;&gt; &lt;code&gt;Integer#+&lt;/code&gt; &lt;/a&gt; 와 같은 &quot;+&quot;메소드의 메소드 재정의를 존중하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83742196c75817787ee9d20527e5d7d170b14ff7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;array#method-i-unshift&quot;&gt;&lt;code&gt;unshift&lt;/code&gt;&lt;/a&gt; will add a new item to the beginning of an array.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-unshift&quot;&gt; &lt;code&gt;unshift&lt;/code&gt; &lt;/a&gt; 는 배열의 시작 부분에 새 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a7038ff0ed9676eee41dd43e3762c9f9b1fdfc33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asn1#UNIVERSAL_TAG_NAME&quot;&gt;&lt;code&gt;UNIVERSAL_TAG_NAME&lt;/code&gt;&lt;/a&gt; constant</source>
          <target state="translated">&lt;a href=&quot;asn1#UNIVERSAL_TAG_NAME&quot;&gt; &lt;code&gt;UNIVERSAL_TAG_NAME&lt;/code&gt; &lt;/a&gt; 상수</target>
        </trans-unit>
        <trans-unit id="d0723427447ee3b89cec25d2e4ee7a2ebddc2e28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asn1/constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; is, as its name implies, the base class for all constructed encodings, i.e. those that consist of several values, opposed to &amp;ldquo;primitive&amp;rdquo; encodings with just one single value. The value of an &lt;a href=&quot;asn1/constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; is always an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asn1/constructive&quot;&gt; &lt;code&gt;Constructive&lt;/code&gt; &lt;/a&gt; 는 이름에서 알 수 있듯이 하나의 단일 값을 가진 &quot;기본&quot;인코딩과 달리 모든 생성 된 인코딩, 즉 여러 값으로 구성된 클래스의 기본 클래스입니다. &lt;a href=&quot;asn1/constructive&quot;&gt; &lt;code&gt;Constructive&lt;/code&gt; &lt;/a&gt; 의 값은 항상&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="94f27867843da6dcae6f8b0722c68ee9476ac73d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;base&quot;&gt;&lt;code&gt;Digest::Base&lt;/code&gt;&lt;/a&gt; provides a common interface to message digest classes written in C. These classes must provide a struct of type rb_digest_metadata_t:</source>
          <target state="translated">&lt;a href=&quot;base&quot;&gt; &lt;code&gt;Digest::Base&lt;/code&gt; &lt;/a&gt; 는 C로 작성된 메시지 요약 클래스에 대한 공통 인터페이스를 제공합니다.이 클래스는 rb_digest_metadata_t 유형의 구조체를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="53251cd4a9559c8e8964da978cb8816dc3252fd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; can be used for creating object hierarchies independent of Ruby's object hierarchy, proxy objects like the &lt;a href=&quot;delegator&quot;&gt;&lt;code&gt;Delegator&lt;/code&gt;&lt;/a&gt; class, or other uses where namespace pollution from Ruby's methods and classes must be avoided.</source>
          <target state="translated">&lt;a href=&quot;basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 는 Ruby의 객체 계층,&lt;a href=&quot;delegator&quot;&gt; &lt;code&gt;Delegator&lt;/code&gt; &lt;/a&gt; 클래스와 같은 프록시 객체또는 Ruby의 메소드 및 클래스에서 네임 스페이스 오염을 피해야하는 기타 용도와 무관하게 객체 계층을 작성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07de0e2ca99ec04b06535539389a45928e614a3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; does not include &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; (for methods like &lt;code&gt;puts&lt;/code&gt;) and &lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; is outside of the namespace of the standard library so common classes will not be found without using a full class path.</source>
          <target state="translated">&lt;a href=&quot;basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 포함하지 않으며( &lt;code&gt;puts&lt;/code&gt; 와같은 메소드의 경우)&lt;a href=&quot;basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 는 표준 라이브러리의 네임 스페이스 외부에 있으므로 전체 클래스 경로를 사용하지 않으면 공통 클래스를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="28844904874fe0b8c407a594ad487e10ecac344e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; implements +__id__+, &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;object_id&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 는 + __ id __ +를구현하고&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;object_id&lt;/code&gt; 를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="f5419cac318473cf2dbfc7e8d0a693e3059fb0b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; implements +__send__+, &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;send&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 는 + __ send __ +를구현하고&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;send&lt;/code&gt; 를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="feccdb78eed150c50ae3e353720739028f32f821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; is the parent class of all classes in Ruby. It's an explicit blank class.</source>
          <target state="translated">&lt;a href=&quot;basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 는 Ruby에서 모든 클래스의 상위 클래스입니다. 명시적인 빈 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="81e311b677f119e55ac77d4bcc47c28b8b296ddb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicsocket&quot;&gt;&lt;code&gt;BasicSocket&lt;/code&gt;&lt;/a&gt; is the super class for all the &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;basicsocket&quot;&gt; &lt;code&gt;BasicSocket&lt;/code&gt; &lt;/a&gt; 은 모든&lt;a href=&quot;socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 클래스의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="cd3da5b901f19310e1856934aab174d7b62bc0d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicsocket#method-i-recv_nonblock&quot;&gt;&lt;code&gt;BasicSocket#recv_nonblock&lt;/code&gt;&lt;/a&gt; may raise any error corresponding to recvfrom(2) failure, including Errno::EWOULDBLOCK.</source>
          <target state="translated">&lt;a href=&quot;basicsocket#method-i-recv_nonblock&quot;&gt; &lt;code&gt;BasicSocket#recv_nonblock&lt;/code&gt; &lt;/a&gt; 은 Errno :: EWOULDBLOCK을 포함하여 recvfrom (2) 실패에 해당하는 오류를 발생 시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ea3a011301f0c527f0a68e5b9aebc4d590383d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basicsocket#method-i-sendmsg_nonblock&quot;&gt;&lt;code&gt;sendmsg_nonblock&lt;/code&gt;&lt;/a&gt; sends a message using sendmsg(2) system call in non-blocking manner.</source>
          <target state="translated">&lt;a href=&quot;basicsocket#method-i-sendmsg_nonblock&quot;&gt; &lt;code&gt;sendmsg_nonblock&lt;/code&gt; &lt;/a&gt; 은 비 차단 방식으로 sendmsg (2) 시스템 호출을 사용하여 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="46e3914bd1eb4fca889af918e11e619a42f9d9f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;benchmark#method-i-bmbm&quot;&gt;&lt;code&gt;bmbm&lt;/code&gt;&lt;/a&gt; yields a Benchmark::Job object and returns an array of &lt;a href=&quot;benchmark/tms&quot;&gt;&lt;code&gt;Benchmark::Tms&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;benchmark#method-i-bmbm&quot;&gt; &lt;code&gt;bmbm&lt;/code&gt; &lt;/a&gt; 은 Benchmark :: Job 객체를 생성하고 Benchmark&lt;a href=&quot;benchmark/tms&quot;&gt; &lt;code&gt;Benchmark::Tms&lt;/code&gt; &lt;/a&gt; 객체의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2190c5b9d7e7156867b7c61cf6ee309433e738d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; is released under the Ruby and 2-clause BSD licenses. See LICENSE.txt for details.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 은 Ruby 및 2 절 BSD 라이센스에 따라 릴리스됩니다. 자세한 내용은 LICENSE.txt를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a152225383512153c901654314fe69daea46d00e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; provides arbitrary-precision floating point decimal arithmetic.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 은 임의 정밀도 부동 소수점 10 진수 산술을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d78270fe9ee3e0a7bfae4527910f216472ec94bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; provides similar support for very large or very accurate floating point numbers.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 은 매우 크거나 정확한 부동 소수점 숫자에 대한 유사한 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2231b18e08c4eb1b8cc7481b7559da0048b97b60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; sometimes needs to return infinity, for example if you divide a value by zero.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;예를 들어 값을 0으로 나누는 경우와 같이 BigDecimal은 때때로 무한대를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="112ab2ff97c7e9defeb5688a1595d7a38a6f53a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#EXCEPTION_NaN&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_NaN&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_INFINITY&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_INFINITY&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_UNDERFLOW&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_UNDERFLOW&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_OVERFLOW&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_OVERFLOW&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_ZERODIVIDE&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_ZERODIVIDE&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_ALL&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_ALL&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#EXCEPTION_NaN&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_NaN&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_INFINITY&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_INFINITY&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_UNDERFLOW&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_UNDERFLOW&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_OVERFLOW&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_OVERFLOW&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_ZERODIVIDE&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_ZERODIVIDE&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;bigdecimal#EXCEPTION_ALL&quot;&gt;&lt;code&gt;BigDecimal::EXCEPTION_ALL&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b22e27b7afa9d51692ed03a8689b8e6531828d57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#ROUND_CEILING&quot;&gt;&lt;code&gt;ROUND_CEILING&lt;/code&gt;&lt;/a&gt;, :ceiling, :ceil</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#ROUND_CEILING&quot;&gt; &lt;code&gt;ROUND_CEILING&lt;/code&gt; &lt;/a&gt; , : 천장, : 천장</target>
        </trans-unit>
        <trans-unit id="bdb9b82da47ad2b31dbcf35f5a025976c347b4f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#ROUND_DOWN&quot;&gt;&lt;code&gt;ROUND_DOWN&lt;/code&gt;&lt;/a&gt;, :down, :truncate</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#ROUND_DOWN&quot;&gt; &lt;code&gt;ROUND_DOWN&lt;/code&gt; &lt;/a&gt; , : down, : 잘라 내기</target>
        </trans-unit>
        <trans-unit id="675a0a9412f3b03cda169d7e6a9f90aed57092bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#ROUND_FLOOR&quot;&gt;&lt;code&gt;ROUND_FLOOR&lt;/code&gt;&lt;/a&gt;, :floor</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#ROUND_FLOOR&quot;&gt; &lt;code&gt;ROUND_FLOOR&lt;/code&gt; &lt;/a&gt; , : 바닥</target>
        </trans-unit>
        <trans-unit id="7b188bffefd35f3247409137b7530690af239e2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#ROUND_HALF_DOWN&quot;&gt;&lt;code&gt;ROUND_HALF_DOWN&lt;/code&gt;&lt;/a&gt;, :half_down</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#ROUND_HALF_DOWN&quot;&gt; &lt;code&gt;ROUND_HALF_DOWN&lt;/code&gt; &lt;/a&gt; , : half_down</target>
        </trans-unit>
        <trans-unit id="de13b925c48f75bc526bca58911b37d76dd0da45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;, :half_even, :banker</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; &lt;/a&gt; , : half_even, : 뱅커</target>
        </trans-unit>
        <trans-unit id="b971a5f3f4b04ed32cd2942073b79f1605613533" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;, :half_up, :default</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt; , : half_up, : 기본</target>
        </trans-unit>
        <trans-unit id="0c6ea5fdd4a44eb55c9ea0c84b75e2adae6d8dc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bigdecimal#ROUND_UP&quot;&gt;&lt;code&gt;ROUND_UP&lt;/code&gt;&lt;/a&gt;, :up</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#ROUND_UP&quot;&gt; &lt;code&gt;ROUND_UP&lt;/code&gt; &lt;/a&gt; , : up</target>
        </trans-unit>
        <trans-unit id="f4bc5c0728d151bf1d66bfd2d8a18fd607f508ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;binding&quot;&gt;&lt;code&gt;Binding&lt;/code&gt;&lt;/a&gt; objects have no class-specific methods.</source>
          <target state="translated">&lt;a href=&quot;binding&quot;&gt; &lt;code&gt;Binding&lt;/code&gt; &lt;/a&gt; 개체에는 클래스 별 메서드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="28a0ca0c9b8a91d7269030ab8b55bb4b7d8a2426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bodytypeattachment&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeAttachment&lt;/code&gt;&lt;/a&gt; represents attachment body structures of messages.</source>
          <target state="translated">&lt;a href=&quot;bodytypeattachment&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeAttachment&lt;/code&gt; &lt;/a&gt; 는 메시지의 첨부 본문 구조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b35841c996b8e8f7df33e0f4f0d41845f47c9fef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bodytypebasic&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeBasic&lt;/code&gt;&lt;/a&gt; represents basic body structures of messages.</source>
          <target state="translated">&lt;a href=&quot;bodytypebasic&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeBasic&lt;/code&gt; &lt;/a&gt; 은 메시지의 기본 본문 구조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="739ae3c88367bbfdc394369152e9d6ffc2cd8223" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bodytypemessage&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeMessage&lt;/code&gt;&lt;/a&gt; represents MESSAGE/RFC822 body structures of messages.</source>
          <target state="translated">&lt;a href=&quot;bodytypemessage&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeMessage&lt;/code&gt; &lt;/a&gt; 는 메시지의 MESSAGE / RFC822 본문 구조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="451b9a367eaadd9b6cde691526505d09894f742e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bodytypemultipart&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeMultipart&lt;/code&gt;&lt;/a&gt; represents multipart body structures of messages.</source>
          <target state="translated">&lt;a href=&quot;bodytypemultipart&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeMultipart&lt;/code&gt; &lt;/a&gt; 는 메시지의 여러 부분 본문 구조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="eecc5c4d20d37cc74988cca2fc279a3cdbaddb51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bodytypetext&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeText&lt;/code&gt;&lt;/a&gt; represents TEXT body structures of messages.</source>
          <target state="translated">&lt;a href=&quot;bodytypetext&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeText&lt;/code&gt; &lt;/a&gt; 는 메시지의 TEXT 본문 구조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="370523fa9d613ac21680743471856ca998a60601" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;buffering#method-i-read_nonblock&quot;&gt;&lt;code&gt;OpenSSL::Buffering#read_nonblock&lt;/code&gt;&lt;/a&gt; needs two rescue clause as follows:</source>
          <target state="translated">&lt;a href=&quot;buffering#method-i-read_nonblock&quot;&gt; &lt;code&gt;OpenSSL::Buffering#read_nonblock&lt;/code&gt; &lt;/a&gt; 에는 다음과 같은 두 가지 구조 절이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ecc44988bb11ef0f8691289e235affa85520b283" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;buffering#method-i-write_nonblock&quot;&gt;&lt;code&gt;write_nonblock&lt;/code&gt;&lt;/a&gt; returns number of bytes written to the &lt;a href=&quot;ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; connection.</source>
          <target state="translated">&lt;a href=&quot;buffering#method-i-write_nonblock&quot;&gt; &lt;code&gt;write_nonblock&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; 연결에기록 된 바이트 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bbcee1af70a4a3cf4ba5c16bd3041041fb892ac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed.</source>
          <target state="translated">&lt;a href=&quot;bundler&quot;&gt; &lt;code&gt;Bundler&lt;/code&gt; &lt;/a&gt; 는 필요한 정확한 gem과 버전을 추적하고 설치하여 Ruby 프로젝트에 일관된 환경을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="afcb55491adabe140cefbafe390c62352162a6e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;certificate&quot;&gt;&lt;code&gt;Certificate&lt;/code&gt;&lt;/a&gt; is capable of handling DER-encoded certificates and certificates encoded in OpenSSL's PEM format.</source>
          <target state="translated">&lt;a href=&quot;certificate&quot;&gt; &lt;code&gt;Certificate&lt;/code&gt; &lt;/a&gt; 는 DER로 인코딩 된 인증서와 OpenSSL의 PEM 형식으로 인코딩 된 인증서를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="71082a77be50d5d193fdc57e013efa0c5a211bc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; is a large class, providing several categories of methods, many of which are mixed in from other modules. Some of the documentation is in this class, some in the modules &lt;a href=&quot;cgi/queryextension&quot;&gt;&lt;code&gt;CGI::QueryExtension&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cgi/htmlextension&quot;&gt;&lt;code&gt;CGI::HtmlExtension&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;cgi/cookie&quot;&gt;&lt;code&gt;CGI::Cookie&lt;/code&gt;&lt;/a&gt; for specific information on handling cookies, and cgi/session.rb (&lt;a href=&quot;cgi/session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt;) for information on sessions.</source>
          <target state="translated">&lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 는 여러 범주의 메서드를 제공하는 대규모 클래스로, 대부분은 다른 모듈에서 혼합되어 있습니다. 문서 중 일부는이 클래스에 있고 일부는&lt;a href=&quot;cgi/queryextension&quot;&gt; &lt;code&gt;CGI::QueryExtension&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;cgi/htmlextension&quot;&gt; &lt;code&gt;CGI::HtmlExtension&lt;/code&gt; &lt;/a&gt; 모듈에있습니다. 참조&lt;a href=&quot;cgi/cookie&quot;&gt; &lt;code&gt;CGI::Cookie&lt;/code&gt; &lt;/a&gt; 특정 처리 쿠키 정보, CGI / session.rb (위해&lt;a href=&quot;cgi/session&quot;&gt; &lt;code&gt;CGI::Session&lt;/code&gt; &lt;/a&gt; 세션에 대한 정보).</target>
        </trans-unit>
        <trans-unit id="8538c583d41cf35cffb04aa263518376190b9c97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; is a large class, providing several categories of methods, many of which are mixed in from other modules. Some of the documentation is in this class, some in the modules &lt;a href=&quot;cgi/queryextension&quot;&gt;&lt;code&gt;CGI::QueryExtension&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cgi/htmlextension&quot;&gt;&lt;code&gt;CGI::HtmlExtension&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;cgi/cookie&quot;&gt;&lt;code&gt;CGI::Cookie&lt;/code&gt;&lt;/a&gt; for specific information on handling cookies, and cgi/session.rb (CGI::Session) for information on sessions.</source>
          <target state="translated">&lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 는 여러 클래스의 메소드를 제공하는 큰 클래스이며, 대부분 다른 모듈과 혼합되어 있습니다. 일부 문서는이 클래스에 있고 일부는&lt;a href=&quot;cgi/queryextension&quot;&gt; &lt;code&gt;CGI::QueryExtension&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;cgi/htmlextension&quot;&gt; &lt;code&gt;CGI::HtmlExtension&lt;/code&gt; &lt;/a&gt; 모듈에있습니다. &lt;a href=&quot;cgi/cookie&quot;&gt; &lt;code&gt;CGI::Cookie&lt;/code&gt; &lt;/a&gt; 처리에 대한 특정 정보는 CGI :: Cookie 를참조하고 세션에 대한 정보는 cgi / session.rb (CGI :: Session)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7c0b57229848dadf41ce18b3ffaf67e1a1806a6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;chain&quot;&gt;&lt;code&gt;Enumerator::Chain&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;../enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt;, which represents a chain of enumerables that works as a single enumerator.</source>
          <target state="translated">&lt;a href=&quot;chain&quot;&gt; &lt;code&gt;Enumerator::Chain&lt;/code&gt; &lt;/a&gt; 의 서브 클래스&lt;a href=&quot;../enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 하나의 열거로 작동 enumerables의 체인을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f4da0f46b9bbbcadf01ff8a9083d296988c49f0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cipher#method-i-key-3D&quot;&gt;&lt;code&gt;key=&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt;&lt;code&gt;iv=&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-random_key&quot;&gt;&lt;code&gt;random_key&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-random_iv&quot;&gt;&lt;code&gt;random_iv&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-pkcs5_keyivgen&quot;&gt;&lt;code&gt;pkcs5_keyivgen&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;cipher#method-i-key-3D&quot;&gt; &lt;code&gt;key=&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt; &lt;code&gt;iv=&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;cipher#method-i-random_key&quot;&gt; &lt;code&gt;random_key&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;cipher#method-i-random_iv&quot;&gt; &lt;code&gt;random_iv&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;cipher#method-i-pkcs5_keyivgen&quot;&gt; &lt;code&gt;pkcs5_keyivgen&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa3fcde9f835ab7fae32eee9324bdfd873d7ac0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ba5dc952d9922f77db0538f5d4938eade14d391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; tree</source>
          <target state="translated">&lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 트리</target>
        </trans-unit>
        <trans-unit id="f397eceeda829fca324e57b8a0f628987087701c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Socket&lt;/code&gt; provides access to the underlying operating system socket implementations. It can be used to provide more operating system specific functionality than the protocol-specific socket classes.</source>
          <target state="translated">&lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Socket&lt;/code&gt; 은 기본 운영 체제 소켓 구현에 대한 액세스를 제공합니다. 프로토콜 별 소켓 클래스보다 더 많은 운영 체제 별 기능을 제공하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="837611ad65a9781bc15bb039e96c6f3e34f220ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closedqueueerror&quot;&gt;&lt;code&gt;ClosedQueueError&lt;/code&gt;&lt;/a&gt; is inherited from &lt;a href=&quot;stopiteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt;, so that you can break loop block.</source>
          <target state="translated">&lt;a href=&quot;closedqueueerror&quot;&gt; &lt;code&gt;ClosedQueueError&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;stopiteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt; 에서상속되므로 루프 블록을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49abb6c0753e1acc6fcb88fd059c9a925d1dd2a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmath&quot;&gt;&lt;code&gt;CMath&lt;/code&gt;&lt;/a&gt; is a library that provides trigonometric and transcendental functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments.</source>
          <target state="translated">&lt;a href=&quot;cmath&quot;&gt; &lt;code&gt;CMath&lt;/code&gt; &lt;/a&gt; 는 복소수에 삼각 함수와 초월 함수를 제공하는 라이브러리입니다. 이 모듈의 함수는 정수, 부동 소수점 숫자 또는 복소수를 인수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="ae7383055d16dda07c492f72b20c42dccc06329a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;completion&quot;&gt;&lt;code&gt;Completion&lt;/code&gt;&lt;/a&gt; for hash key.</source>
          <target state="translated">&lt;a href=&quot;completion&quot;&gt; &lt;code&gt;Completion&lt;/code&gt; &lt;/a&gt;해시 키 완성</target>
        </trans-unit>
        <trans-unit id="f2a2650dd99c97d77154b7ed3e917a1712b32ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;complex&quot;&gt;&lt;code&gt;Complex&lt;/code&gt;&lt;/a&gt; object can be created as literal, and also by using Kernel#Complex, &lt;a href=&quot;complex#method-c-rect&quot;&gt;&lt;code&gt;Complex::rect&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;complex#method-c-polar&quot;&gt;&lt;code&gt;Complex::polar&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;complex#method-i-to_c&quot;&gt;&lt;code&gt;to_c&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;complex&quot;&gt; &lt;code&gt;Complex&lt;/code&gt; &lt;/a&gt; 객체는 리터럴로 생성 할 수 있으며 Kernel # Complex,&lt;a href=&quot;complex#method-c-rect&quot;&gt; &lt;code&gt;Complex::rect&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;complex#method-c-polar&quot;&gt; &lt;code&gt;Complex::polar&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;complex#method-i-to_c&quot;&gt; &lt;code&gt;to_c&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c004ead73b01eeb6051b8e7485cd8cb151ed6b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;conditionvariable&quot;&gt;&lt;code&gt;ConditionVariable&lt;/code&gt;&lt;/a&gt; objects augment class &lt;a href=&quot;mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt;. Using condition variables, it is possible to suspend while in the middle of a critical section until a resource becomes available.</source>
          <target state="translated">&lt;a href=&quot;conditionvariable&quot;&gt; &lt;code&gt;ConditionVariable&lt;/code&gt; &lt;/a&gt; 객체는&lt;a href=&quot;mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; 클래스를 보강합니다. 조건 변수를 사용하면 리소스를 사용할 수있을 때까지 중요 섹션 중간에 일시 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="399d58f987fc3114d4f173bcc15629d3618115b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constants&quot;&gt;&lt;code&gt;File::Constants&lt;/code&gt;&lt;/a&gt; provides file-related constants. All possible file constants are listed in the documentation but they may not all be present on your platform.</source>
          <target state="translated">&lt;a href=&quot;constants&quot;&gt; &lt;code&gt;File::Constants&lt;/code&gt; &lt;/a&gt; 는 파일 관련 상수를 제공합니다. 가능한 모든 파일 상수는 설명서에 나와 있지만 모두 플랫폼에 없을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a60bf00e9a45c5cd5bca676d12b76330675a6d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constants&quot;&gt;&lt;code&gt;Socket::Constants&lt;/code&gt;&lt;/a&gt; provides socket-related constants. All possible socket constants are listed in the documentation but they may not all be present on your platform.</source>
          <target state="translated">&lt;a href=&quot;constants&quot;&gt; &lt;code&gt;Socket::Constants&lt;/code&gt; &lt;/a&gt; 는 소켓 관련 상수를 제공합니다. 가능한 모든 소켓 상수는 설명서에 나와 있지만 모두 플랫폼에 없을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0453f3cf5838a703324ebe45e741fe2807dc248" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;continuation&quot;&gt;&lt;code&gt;Continuation&lt;/code&gt;&lt;/a&gt; objects are generated by &lt;a href=&quot;kernel#method-i-callcc&quot;&gt;&lt;code&gt;Kernel#callcc&lt;/code&gt;&lt;/a&gt;, after having +require+d &lt;em&gt;continuation&lt;/em&gt;. They hold a return address and execution context, allowing a nonlocal return to the end of the &lt;a href=&quot;kernel#method-i-callcc&quot;&gt;&lt;code&gt;callcc&lt;/code&gt;&lt;/a&gt; block from anywhere within a program. Continuations are somewhat analogous to a structured version of C's &lt;code&gt;setjmp/longjmp&lt;/code&gt; (although they contain more state, so you might consider them closer to threads).</source>
          <target state="translated">&lt;a href=&quot;continuation&quot;&gt; &lt;code&gt;Continuation&lt;/code&gt; &lt;/a&gt; 객체는+ require + d&lt;em&gt; continuation&lt;/em&gt; 후&lt;a href=&quot;kernel#method-i-callcc&quot;&gt; &lt;code&gt;Kernel#callcc&lt;/code&gt; 에&lt;/a&gt; 의해 생성됩니다. 그들은 반환 주소와 실행 컨텍스트를 보유하고있어 프로그램 내의 어느 곳에서나&lt;a href=&quot;kernel#method-i-callcc&quot;&gt; &lt;code&gt;callcc&lt;/code&gt; &lt;/a&gt; 블록의 끝으로 로컬이 아닌 반환을 허용합니다. 연속은 C의 &lt;code&gt;setjmp/longjmp&lt;/code&gt; 의 구조화 된 버전과 다소 유사합니다 (더 많은 상태를 포함하고 있으므로 스레드에 더 가깝다고 생각할 수 있음).&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d75eec08bdb6092ca676b0165ad3b293f93b0df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;continuation&quot;&gt;&lt;code&gt;Continuation&lt;/code&gt;&lt;/a&gt; objects are generated by &lt;a href=&quot;kernel#method-i-callcc&quot;&gt;&lt;code&gt;Kernel#callcc&lt;/code&gt;&lt;/a&gt;, after having +require+d &lt;em&gt;continuation&lt;/em&gt;. They hold a return address and execution context, allowing a nonlocal return to the end of the &lt;code&gt;callcc&lt;/code&gt; block from anywhere within a program. Continuations are somewhat analogous to a structured version of C's &lt;code&gt;setjmp/longjmp&lt;/code&gt; (although they contain more state, so you might consider them closer to threads).</source>
          <target state="translated">&lt;a href=&quot;continuation&quot;&gt; &lt;code&gt;Continuation&lt;/code&gt; &lt;/a&gt; 객체는+ require + d&lt;em&gt; continuation&lt;/em&gt; 후에&lt;a href=&quot;kernel#method-i-callcc&quot;&gt; &lt;code&gt;Kernel#callcc&lt;/code&gt; 에&lt;/a&gt; 의해 생성됩니다. 리턴 주소와 실행 컨텍스트를 보유하여 프로그램 내 어디에서나 &lt;code&gt;callcc&lt;/code&gt; 블록의 끝으로 로컬이 아닌 리턴을 허용합니다. 계속은 C의 &lt;code&gt;setjmp/longjmp&lt;/code&gt; 의 구조화 된 버전과 다소 유사합니다 (더 많은 상태가 포함되어 있기 때문에 스레드에 더 가깝게 고려할 수 있음).&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8540d35564c2e2579f024ffd4c444631b0018adc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;converter#method-c-new&quot;&gt;&lt;code&gt;Encoding::Converter.new&lt;/code&gt;&lt;/a&gt; creates an instance of &lt;a href=&quot;converter&quot;&gt;&lt;code&gt;Encoding::Converter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;converter#method-c-new&quot;&gt; &lt;code&gt;Encoding::Converter.new&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;converter&quot;&gt; &lt;code&gt;Encoding::Converter&lt;/code&gt; &lt;/a&gt; 의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d1ba08dbdf592f4c486ca0a7f032d32d97b6b39f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;converter#method-c-new&quot;&gt;&lt;code&gt;Encoding::Converter.new&lt;/code&gt;&lt;/a&gt; optionally takes an option. The option should be a hash or an integer. The option hash can contain :invalid =&amp;gt; nil, etc. The option integer should be logical-or of constants such as &lt;a href=&quot;converter#INVALID_REPLACE&quot;&gt;&lt;code&gt;Encoding::Converter::INVALID_REPLACE&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">&lt;a href=&quot;converter#method-c-new&quot;&gt; &lt;code&gt;Encoding::Converter.new&lt;/code&gt; &lt;/a&gt; 선택 사항입니다. 옵션은 해시 또는 정수 여야합니다. 옵션 해시는 : invalid =&amp;gt; nil 등을 포함 할 수 있습니다. 옵션 정수는&lt;a href=&quot;converter#INVALID_REPLACE&quot;&gt; &lt;code&gt;Encoding::Converter::INVALID_REPLACE&lt;/code&gt; &lt;/a&gt; 등과 같은 논리 상수이거나 상수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f2e99bf567a49d725a5d02b8cb46bbb38ec4a909" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;primitive_convert&lt;/code&gt;&lt;/a&gt; converts source_buffer into destination_buffer.</source>
          <target state="translated">&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt; &lt;code&gt;primitive_convert&lt;/code&gt; &lt;/a&gt; 는 source_buffer를 destination_buffer로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="da0d9d6ea94f2f98b0a25e272f05981f55eca88f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;primitive_convert&lt;/code&gt;&lt;/a&gt; converts the content of source_buffer from beginning and store the result into destination_buffer.</source>
          <target state="translated">&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt; &lt;code&gt;primitive_convert&lt;/code&gt; &lt;/a&gt; 는 source_buffer의 내용을 처음부터 변환하여 결과를 destination_buffer에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ad19bb700879bd5933b3657075fedd4a0bfb4bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;primitive_convert&lt;/code&gt;&lt;/a&gt; drops the converted part of source_buffer. the dropped part is converted in destination_buffer or buffered in &lt;a href=&quot;converter&quot;&gt;&lt;code&gt;Encoding::Converter&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt; &lt;code&gt;primitive_convert&lt;/code&gt; &lt;/a&gt; 는 source_buffer의 변환 된 부분을 삭제합니다. 삭제 된 부분은 destination_buffer에서 변환되거나&lt;a href=&quot;converter&quot;&gt; &lt;code&gt;Encoding::Converter&lt;/code&gt; &lt;/a&gt; 객체에서 버퍼링됩니다.</target>
        </trans-unit>
        <trans-unit id="05a51ca23ab15ff864254b158c15545900105645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;primitive_convert&lt;/code&gt;&lt;/a&gt; stops conversion when one of following condition met.</source>
          <target state="translated">&lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt; &lt;code&gt;primitive_convert&lt;/code&gt; &lt;/a&gt; 는 다음 조건 중 하나가 충족되면 변환을 중지합니다.</target>
        </trans-unit>
        <trans-unit id="981d0c7aeca16d00941e5a5432a9776e3fdd0ace" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;converter#method-i-primitive_errinfo&quot;&gt;&lt;code&gt;primitive_errinfo&lt;/code&gt;&lt;/a&gt; returns important information regarding the last error as a 5-element array:</source>
          <target state="translated">&lt;a href=&quot;converter#method-i-primitive_errinfo&quot;&gt; &lt;code&gt;primitive_errinfo&lt;/code&gt; &lt;/a&gt; 는 마지막 오류에 관한 중요한 정보를 5 요소 배열로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6c49644c8d40fd0a26d0df83bc14e30a281905b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;coverage&quot;&gt;&lt;code&gt;Coverage&lt;/code&gt;&lt;/a&gt; provides coverage measurement feature for Ruby. This feature is experimental, so these APIs may be changed in future.</source>
          <target state="translated">&lt;a href=&quot;coverage&quot;&gt; &lt;code&gt;Coverage&lt;/code&gt; &lt;/a&gt; 는 Ruby에 대한 적용 범위 측정 기능을 제공합니다. 이 기능은 실험적인 기능이므로 향후 이러한 API가 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb5a817cbc3189786061cc523d66d81fec5c938b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;coverage#method-c-result&quot;&gt;&lt;code&gt;Coverage.result&lt;/code&gt;&lt;/a&gt; will return a hash that contains filename as key and coverage array as value. A coverage array gives, for each line, the number of line execution by the interpreter. A &lt;code&gt;nil&lt;/code&gt; value means coverage is disabled for this line (lines like &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;coverage#method-c-result&quot;&gt; &lt;code&gt;Coverage.result&lt;/code&gt; &lt;/a&gt; 는 파일 이름을 키로 포함하고 범위 배열을 값으로 포함하는 해시를 반환합니다. 적용 범위 배열은 각 행에 대해 인터프리터에 의한 행 실행 수를 제공합니다. &lt;code&gt;nil&lt;/code&gt; 값 수단에 따르면이 광고 중지된다 (라인 등 &lt;code&gt;else&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="315e024dd05aa0a273a79703d201d76eea3f6964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; allows to provide a set of data &lt;em&gt;converters&lt;/em&gt; e.g. transformations to try on input data. Converter could be a symbol from &lt;a href=&quot;csv#Converters&quot;&gt;&lt;code&gt;CSV::Converters&lt;/code&gt;&lt;/a&gt; constant's keys, or lambda.</source>
          <target state="translated">&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; 를&lt;/a&gt; 사용하면입력 데이터에 대한&lt;em&gt; 변환과&lt;/em&gt; 같은데이터&lt;em&gt; 변환기&lt;/em&gt; 세트를 제공 할 수 있습니다. 변환기는&lt;a href=&quot;csv#Converters&quot;&gt; &lt;code&gt;CSV::Converters&lt;/code&gt; &lt;/a&gt; 상수 키 또는 람다의기호 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c58127b30f0f654f53b1f4660f580520d3a644d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; allows to specify column names of &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; file, whether they are in data, or provided separately. If headers are specified, reading methods return an instance of &lt;a href=&quot;csv/table&quot;&gt;&lt;code&gt;CSV::Table&lt;/code&gt;&lt;/a&gt;, consisting of &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; 를&lt;/a&gt; 사용하면&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 파일의 열 이름을데이터에 있거나 별도로 제공 할 수 있습니다. 헤더가 지정된 경우 읽기 메서드는&lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; 로 구성된&lt;a href=&quot;csv/table&quot;&gt; &lt;code&gt;CSV::Table&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1d52d2f1a61aa0cbd01e398ef6248e56a48f15dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; allows to specify column names of &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; file, whether they are in data, or provided separately. If headers specified, reading methods return an instance of &lt;a href=&quot;csv/table&quot;&gt;&lt;code&gt;CSV::Table&lt;/code&gt;&lt;/a&gt;, consisting of &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; 를&lt;/a&gt; 사용하면데이터에 있는지 또는 별도로 제공되는지에 관계없이&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 파일의 열 이름을 지정할 수 있습니다. 헤더가 지정된 경우 읽기 메소드는&lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; 로 구성된&lt;a href=&quot;csv/table&quot;&gt; &lt;code&gt;CSV::Table&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="eb33990100b62a61a184a48f40fecefb221aaa05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; and Character Encodings (M17n or Multilingualization)</source>
          <target state="translated">&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 및 문자 인코딩 (M17n 또는 다국어 지원)</target>
        </trans-unit>
        <trans-unit id="39737766bd6f2187fd7cbe6e47999c8e97a8d8ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; with headers</source>
          <target state="translated">&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;헤더가있는 CSV</target>
        </trans-unit>
        <trans-unit id="5149a921d6ac7ca1479287170cb4a7f2a426f253" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;csv#method-i-to_i&quot;&gt;&lt;code&gt;to_i&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;csv#method-i-to_i&quot;&gt;&lt;code&gt;to_i&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="fe8f1603cd8da25f0007705cc825315bb4c8fd6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;csv#method-i-to_io&quot;&gt;&lt;code&gt;to_io&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;csv#method-i-to_io&quot;&gt;&lt;code&gt;to_io&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="68252e8d6948dac60ac8fa452c06a51577a9e700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; &amp;ndash; Anything accepted by &lt;code&gt;Date.parse&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; &amp;ndash; &lt;code&gt;Date.parse&lt;/code&gt; 에 의해 허용되는 모든 것</target>
        </trans-unit>
        <trans-unit id="fd52cc4339a4d01385deb0296b08658e96e19ca5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; (%m/%d/%y)</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; (% m / % d / % y)</target>
        </trans-unit>
        <trans-unit id="5429a3d0a3a3a1e3201bde470a4666196e21b498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and time format. Default value is '%Y-%m-%d %H:%M:%S'.</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 및 시간 형식 기본값은 '% Y- % m- % d % H : % M : % S'입니다.</target>
        </trans-unit>
        <trans-unit id="76b6460bb0d9ca07cceb3a00fe31b32224b812a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; &amp;ndash; Anything accepted by &lt;code&gt;DateTime.parse&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; -에 의해 허용 아무것도 &lt;code&gt;DateTime.parse&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1df322c69b7f6acbe9506a2af5f69d52c773683f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; does not consider any leap seconds, does not track any summer time rules.</source>
          <target state="translated">&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 은 윤초를 고려하지 않으며 하계 시간 규칙을 추적하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81758592d529751595d886166a4f81f49ae6ddf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dbm&quot;&gt;&lt;code&gt;YAML::DBM&lt;/code&gt;&lt;/a&gt; provides the same interface as &lt;a href=&quot;../dbm&quot;&gt;&lt;code&gt;::DBM&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dbm&quot;&gt; &lt;code&gt;YAML::DBM&lt;/code&gt; &lt;/a&gt; 같은 인터페이스를 제공합니다&lt;a href=&quot;../dbm&quot;&gt; &lt;code&gt;::DBM&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="803a7fb00c1b06d4c4bfdd65a18f43c11da99e5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deflate&quot;&gt;&lt;code&gt;Zlib::Deflate&lt;/code&gt;&lt;/a&gt; is the class for compressing data. See &lt;a href=&quot;zstream&quot;&gt;&lt;code&gt;Zlib::ZStream&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;deflate&quot;&gt; &lt;code&gt;Zlib::Deflate&lt;/code&gt; &lt;/a&gt; 는 데이터를 압축하는 클래스입니다. 자세한 내용은&lt;a href=&quot;zstream&quot;&gt; &lt;code&gt;Zlib::ZStream&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="77d63acaf1d4bd41359c07192b7bfe8577e35195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;digest&quot;&gt;&lt;code&gt;Digest&lt;/code&gt;&lt;/a&gt; algorithms</source>
          <target state="translated">&lt;a href=&quot;digest&quot;&gt; &lt;code&gt;Digest&lt;/code&gt; &lt;/a&gt; 알고리즘</target>
        </trans-unit>
        <trans-unit id="81a1ca70c8b642f06843222b270954442abd53c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;digest&quot;&gt;&lt;code&gt;OpenSSL::Digest&lt;/code&gt;&lt;/a&gt; allows you to compute message digests (sometimes interchangeably called &amp;ldquo;hashes&amp;rdquo;) of arbitrary data that are cryptographically secure, i.e. a &lt;a href=&quot;digest&quot;&gt;&lt;code&gt;Digest&lt;/code&gt;&lt;/a&gt; implements a secure one-way function.</source>
          <target state="translated">&lt;a href=&quot;digest&quot;&gt; &lt;code&gt;OpenSSL::Digest&lt;/code&gt; &lt;/a&gt; 사용하면 암호로 안전한 임의 데이터의 메시지 요약 (때로는 &quot;해시&quot;라고도 함)을 계산할 수 있습니다. 즉,&lt;a href=&quot;digest&quot;&gt; &lt;code&gt;Digest&lt;/code&gt; &lt;/a&gt; 는 안전한 단방향 기능을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="98811c17c3dc2bed10caf40975cdc3449ce50746" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dir#method-c-chdir&quot;&gt;&lt;code&gt;Dir.chdir&lt;/code&gt;&lt;/a&gt; (without block arg)</source>
          <target state="translated">&lt;a href=&quot;dir#method-c-chdir&quot;&gt; &lt;code&gt;Dir.chdir&lt;/code&gt; &lt;/a&gt; (블록 인수없이)</target>
        </trans-unit>
        <trans-unit id="d19eea10a1bddedc5185e7fb48b579b00d66ba96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dir#method-c-chdir&quot;&gt;&lt;code&gt;Dir.chdir&lt;/code&gt;&lt;/a&gt; with block</source>
          <target state="translated">&lt;a href=&quot;dir#method-c-chdir&quot;&gt; &lt;code&gt;Dir.chdir&lt;/code&gt; &lt;/a&gt;블록이있는 Dir.chdir</target>
        </trans-unit>
        <trans-unit id="0bf14dc98b9d60f48ba870cac69760450536f897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dir#method-c-mktmpdir&quot;&gt;&lt;code&gt;Dir.mktmpdir&lt;/code&gt;&lt;/a&gt; creates a temporary directory.</source>
          <target state="translated">&lt;a href=&quot;dir#method-c-mktmpdir&quot;&gt; &lt;code&gt;Dir.mktmpdir&lt;/code&gt; &lt;/a&gt; 은 임시 디렉토리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="40b3c3bb2a33e45002d9c03d9211053d8757c688" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dns&quot;&gt;&lt;code&gt;Resolv::DNS&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; stub resolver.</source>
          <target state="translated">&lt;a href=&quot;dns&quot;&gt; &lt;code&gt;Resolv::DNS&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 스텁 해결 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="d7dfc507555b63a98b4718bb39b6d2627aa49223" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;drbundumped&quot;&gt;DRb::DRbUndumped&lt;/a&gt;, &lt;a href=&quot;../monitormixin&quot;&gt;MonitorMixin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;drbundumped&quot;&gt;DRb :: DRbUndumped&lt;/a&gt; , &lt;a href=&quot;../monitormixin&quot;&gt;MonitorMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e196839fe9cf75345f57fc6293ccd50560e3a4f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt;, the Digital Signature Algorithm, is specified in NIST's FIPS 186-3. It is an asymmetric public key algorithm that may be used similar to e.g. &lt;a href=&quot;rsa&quot;&gt;&lt;code&gt;RSA&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dsa&quot;&gt; &lt;code&gt;DSA&lt;/code&gt; &lt;/a&gt;디지털 서명 알고리즘 인 DSA 는 NIST의 FIPS 186-3에 지정되어 있습니다. &lt;a href=&quot;rsa&quot;&gt; &lt;code&gt;RSA&lt;/code&gt; &lt;/a&gt; 와 유사하게 사용될 수있는 비대칭 공개 키 알고리즘입니다.</target>
        </trans-unit>
        <trans-unit id="0c155b22d2d37cabfa671340ab839d1ef7cffc1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ec&quot;&gt;&lt;code&gt;OpenSSL::PKey::EC&lt;/code&gt;&lt;/a&gt; provides access to Elliptic Curve Digital Signature Algorithm (ECDSA) and Elliptic Curve Diffie-Hellman (ECDH).</source>
          <target state="translated">&lt;a href=&quot;ec&quot;&gt; &lt;code&gt;OpenSSL::PKey::EC&lt;/code&gt; &lt;/a&gt; 는 ECDSA (Elliptic Curve Digital Signature Algorithm) 및 ECDH (Elliptic Curve Diffie-Hellman)에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5b6f25b87bdb1ba9bb82851677ddbf61be8bd37d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; conversion is disabled.</source>
          <target state="translated">&lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 변환이 비활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="449604d53cdf20e382c8fa4b791604490e810f85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;encoding#method-c-default_internal&quot;&gt;&lt;code&gt;Encoding::default_internal&lt;/code&gt;&lt;/a&gt; is initialized by the source file's internal_encoding or -E option.</source>
          <target state="translated">&lt;a href=&quot;encoding#method-c-default_internal&quot;&gt; &lt;code&gt;Encoding::default_internal&lt;/code&gt; &lt;/a&gt; 은 소스 파일의 internal_encoding 또는 -E 옵션으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="9be3aab5ea21f6a43bd9c958881e60009a43d480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;encodingerror&quot;&gt;&lt;code&gt;EncodingError&lt;/code&gt;&lt;/a&gt; is the base class for encoding errors.</source>
          <target state="translated">&lt;a href=&quot;encodingerror&quot;&gt; &lt;code&gt;EncodingError&lt;/code&gt; &lt;/a&gt; 는 인코딩 오류의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a038b3d6dff2270c31b0aa75389ade89bf58ac26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;, &lt;a href=&quot;io/generic_readable&quot;&gt;IO::generic_readable&lt;/a&gt;, &lt;a href=&quot;io/generic_writable&quot;&gt;IO::generic_writable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt;열거 가능&lt;/a&gt; , &lt;a href=&quot;io/generic_readable&quot;&gt;IO :: generic_readable&lt;/a&gt; , &lt;a href=&quot;io/generic_writable&quot;&gt;IO :: generic_writable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1ad0a8a15aa93812c0edff2daeb327328339693" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;, &lt;a href=&quot;singleton&quot;&gt;Singleton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt;열거 가능&lt;/a&gt; , &lt;a href=&quot;singleton&quot;&gt;싱글 톤&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="772f3f233e2dd5653eecd268eada21a8037dcf9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;, ExceptionForMatrix</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt; , ExceptionForMatrix</target>
        </trans-unit>
        <trans-unit id="894b7662b7dfe1fccdeb12a77087ad75212a109b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#method-i-chunk_while&quot;&gt;&lt;code&gt;Enumerable#chunk_while&lt;/code&gt;&lt;/a&gt; does the same, except splitting when the block returns &lt;code&gt;false&lt;/code&gt; instead of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;enumerable#method-i-chunk_while&quot;&gt; &lt;code&gt;Enumerable#chunk_while&lt;/code&gt; &lt;/a&gt; 은 블록이 &lt;code&gt;false&lt;/code&gt; 대신 false 를반환 할 때 분할하는 것을 제외하고 동일하게 수행 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71773591b5a7be6b196260179b0698e774a8eb50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#method-i-cycle&quot;&gt;&lt;code&gt;Enumerable#cycle&lt;/code&gt;&lt;/a&gt; saves elements in an internal array so changes to &lt;em&gt;enum&lt;/em&gt; after the first pass have no effect.</source>
          <target state="translated">&lt;a href=&quot;enumerable#method-i-cycle&quot;&gt; &lt;code&gt;Enumerable#cycle&lt;/code&gt; &lt;/a&gt; 은 내부 배열에 요소를 저장하므로첫 번째 패스 후&lt;em&gt; enum으로&lt;/em&gt; 변경해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a7a9d0d8ecb76fac86b15dee3a33c730250cd075" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#method-i-slice_when&quot;&gt;&lt;code&gt;Enumerable#slice_when&lt;/code&gt;&lt;/a&gt; does the same, except splitting when the block returns &lt;code&gt;true&lt;/code&gt; instead of &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;enumerable#method-i-slice_when&quot;&gt; &lt;code&gt;Enumerable#slice_when&lt;/code&gt; &lt;/a&gt; 은 블록이 &lt;code&gt;false&lt;/code&gt; 대신 &lt;code&gt;true&lt;/code&gt; 를반환 할 때 분할하는 것을 제외하고 동일하게 수행합니다.</target>
        </trans-unit>
        <trans-unit id="df0b70071160a769e98b6431927fc1866dfbe8cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#method-i-sum&quot;&gt;&lt;code&gt;Enumerable#sum&lt;/code&gt;&lt;/a&gt; method may not respect method redefinition of &amp;ldquo;+&amp;rdquo; methods such as &lt;a href=&quot;integer#method-i-2B&quot;&gt;&lt;code&gt;Integer#+&lt;/code&gt;&lt;/a&gt;, or &amp;ldquo;each&amp;rdquo; methods such as &lt;a href=&quot;range#method-i-each&quot;&gt;&lt;code&gt;Range#each&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enumerable#method-i-sum&quot;&gt; &lt;code&gt;Enumerable#sum&lt;/code&gt; &lt;/a&gt; 메서드는&lt;a href=&quot;integer#method-i-2B&quot;&gt; &lt;code&gt;Integer#+&lt;/code&gt; &lt;/a&gt; 와 같은 &quot;+&quot;메서드또는&lt;a href=&quot;range#method-i-each&quot;&gt; &lt;code&gt;Range#each&lt;/code&gt; &lt;/a&gt; 와 같은 &quot;each&quot;메서드의메서드 재정의를 고려하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86d47e09b906210cc781b5588ed207a61db47fd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#method-i-sum&quot;&gt;&lt;code&gt;Enumerable#sum&lt;/code&gt;&lt;/a&gt; method may not respect method redefinition of &amp;ldquo;+&amp;rdquo; methods such as &lt;a href=&quot;integer#method-i-2B&quot;&gt;&lt;code&gt;Integer#+&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enumerable#method-i-sum&quot;&gt; &lt;code&gt;Enumerable#sum&lt;/code&gt; &lt;/a&gt; 메소드는&lt;a href=&quot;integer#method-i-2B&quot;&gt; &lt;code&gt;Integer#+&lt;/code&gt; &lt;/a&gt; 와 같은 &quot;+&quot;메소드의 메소드 재정의를 존중하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7e966651522b26e7b94fa083b9fa5857696782c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; enumerates its name/value pairs in the order found in the operating system's environment variables. Therefore the ordering of &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; content is OS-dependent, and may be indeterminate.</source>
          <target state="translated">&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 는 운영 체제의 환경 변수에서 찾은 순서대로 이름 / 값 쌍을 열거합니다. 따라서&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 콘텐츠의 순서는 OS에 따라 다르며 불확실 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88b732b2b3804bc1c5d833e7cb10bb40c86b1c93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; is a Hash-like accessor for environment variables.</source>
          <target state="translated">&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 는 환경 변수에 대한 해시 유사 접근 자입니다.</target>
        </trans-unit>
        <trans-unit id="fca657e8904424a8b120df0e7d6b03dc0795b0a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; is a hash-like accessor for environment variables.</source>
          <target state="translated">&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 는 환경 변수에 대한 해시 유사 접근 자입니다.</target>
        </trans-unit>
        <trans-unit id="411bc2b9d9d1db28b4f62d930338b5bb3c30855b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env#method-c-clear&quot;&gt;&lt;code&gt;ENV.clear&lt;/code&gt;&lt;/a&gt; empties &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-clear&quot;&gt; &lt;code&gt;ENV.clear&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; . clear는 ENV를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="a3c9e841c5e83b843d9b27dc8042b633e14eecc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env#method-c-filter&quot;&gt;&lt;code&gt;ENV.filter&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;env#method-c-select&quot;&gt;&lt;code&gt;ENV.select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-filter&quot;&gt; &lt;code&gt;ENV.filter&lt;/code&gt; 는&lt;/a&gt; 별칭입니다&lt;a href=&quot;env#method-c-select&quot;&gt; &lt;code&gt;ENV.select&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6cbadf12ebe39ebb90b7d513242b48bda405ee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env#method-c-filter-21&quot;&gt;&lt;code&gt;ENV.filter!&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;env#method-c-select-21&quot;&gt;&lt;code&gt;ENV.select!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-filter-21&quot;&gt; &lt;code&gt;ENV.filter!&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;env#method-c-select-21&quot;&gt; &lt;code&gt;ENV.select!&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 . .</target>
        </trans-unit>
        <trans-unit id="caa780ce22d26570d749e2c42388c0e8105feccb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env#method-c-has_key-3F&quot;&gt;&lt;code&gt;ENV.has_key?&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;env#method-c-member-3F&quot;&gt;&lt;code&gt;ENV.member?&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;env#method-c-key-3F&quot;&gt;&lt;code&gt;ENV.key?&lt;/code&gt;&lt;/a&gt; are aliases for &lt;a href=&quot;env#method-c-include-3F&quot;&gt;&lt;code&gt;ENV.include?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-has_key-3F&quot;&gt; &lt;code&gt;ENV.has_key?&lt;/code&gt; &lt;/a&gt;,&lt;a href=&quot;env#method-c-member-3F&quot;&gt; &lt;code&gt;ENV.member?&lt;/code&gt; &lt;/a&gt;및&lt;a href=&quot;env#method-c-key-3F&quot;&gt; &lt;code&gt;ENV.key?&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;env#method-c-include-3F&quot;&gt; &lt;code&gt;ENV.include?&lt;/code&gt; &lt;/a&gt; 별칭은 무엇입니까? .</target>
        </trans-unit>
        <trans-unit id="d4085cc20e1c12b621ac4109431c701050217541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env#method-c-replace&quot;&gt;&lt;code&gt;ENV.replace&lt;/code&gt;&lt;/a&gt; replaces &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; with a new collection of entries.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-replace&quot;&gt; &lt;code&gt;ENV.replace&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 를 새 항목 모음으로대체합니다.</target>
        </trans-unit>
        <trans-unit id="150e6edfabeca59c476b3a5675bbaf177f95c180" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;env#method-c-store&quot;&gt;&lt;code&gt;ENV.store&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;env#method-c-5B-5D-3D&quot;&gt;&lt;code&gt;ENV.[]=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-store&quot;&gt; &lt;code&gt;ENV.store&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;env#method-c-5B-5D-3D&quot;&gt; &lt;code&gt;ENV.[]=&lt;/code&gt; &lt;/a&gt; 의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="3f1e5c47d080ecfa52344a41218e4a45059fc4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; &amp;ndash; Ruby Templating</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; &amp;ndash; 루비 템플릿</target>
        </trans-unit>
        <trans-unit id="88486c5f31251b450f031bf7e024e74df4420b42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; (or Ruby code generated by &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt;) returns a string in the same character encoding as the input string. When the input string has a magic comment, however, it returns a string in the encoding specified by the magic comment.</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; (의해 생성 된 코드 또는 루비&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; 는&lt;/a&gt; ) 입력 스트링과 동일한 문자 인코딩 문자열을 반환한다. 그러나 입력 문자열에 마술 설명이 있으면 마술 설명에 의해 지정된 인코딩의 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="50a5bbbbd6b288c6d98959952fbfaa32f3b3219e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; is often used in &lt;code&gt;.rhtml&lt;/code&gt; files (HTML with embedded Ruby). Notice the need in this example to provide a special binding when the template is run, so that the instance variables in the Product object can be resolved.</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 는 종종 &lt;code&gt;.rhtml&lt;/code&gt; 파일 (루비가 포함 된 HTML)에서 사용됩니다. 이 예제에서는 템플릿을 실행할 때 특별한 바인딩을 제공하여 Product 객체의 인스턴스 변수를 확인할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a5ea7f92b4ec40194ae220a9ec3f64c018915465" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; is useful for any generic templating situation. Note that in this example, we use the convenient &amp;ldquo;% at start of line&amp;rdquo; tag, and we quote the template literally with &lt;code&gt;%q{...}&lt;/code&gt; to avoid trouble with the backslash.</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 는 모든 일반적인 템플릿 상황에 유용합니다. 이 예에서는 편리한 &quot;행 시작시 %&quot;태그를사용하고 백 슬래시 문제를 피하기 위해문자 그대로 &lt;code&gt;%q{...}&lt;/code&gt; 로템플릿을 인용합니다.</target>
        </trans-unit>
        <trans-unit id="ef4115a92bdf965bc27dfd0551b2a152f8326065" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; provides an easy to use but powerful templating system for Ruby. Using &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt;, actual Ruby code can be added to any plain text document for the purposes of generating document information details and/or flow control.</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 는 Ruby에 사용하기 쉽지만 강력한 템플릿 시스템을 제공합니다. &lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; 를&lt;/a&gt; 사용하여문서 정보 세부 사항 및 / 또는 플로우 제어를 생성하기 위해 실제 루비 코드를 일반 텍스트 문서에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f54503305bdd41206eb741b5003ff44ffbe9fdc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; recognizes certain tags in the provided template and converts them based on the rules below:</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 는 제공된 템플릿에서 특정 태그를 인식하고 아래 규칙에 따라 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e4179e670f5c83bd01f22740dd905d7a7aa2f705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;errno/econnreset&quot;&gt;&lt;code&gt;Errno::ECONNRESET&lt;/code&gt;&lt;/a&gt; - a connection was forcibly closed by a peer</source>
          <target state="translated">&lt;a href=&quot;errno/econnreset&quot;&gt; &lt;code&gt;Errno::ECONNRESET&lt;/code&gt; &lt;/a&gt; 피어가 연결을 강제로 닫았습니다.</target>
        </trans-unit>
        <trans-unit id="80d370bf8f6823c4694141106b3fa37b42efd2bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;errno/econnreset&quot;&gt;&lt;code&gt;Errno::ECONNRESET&lt;/code&gt;&lt;/a&gt; - the remote host reset the connection request</source>
          <target state="translated">&lt;a href=&quot;errno/econnreset&quot;&gt; &lt;code&gt;Errno::ECONNRESET&lt;/code&gt; &lt;/a&gt; 원격 호스트가 연결 요청을 재설정</target>
        </trans-unit>
        <trans-unit id="a899f7206bb6611b2f1662c5a5b42d58fde2ea45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;errno/econnreset&quot;&gt;&lt;code&gt;Errno::ECONNRESET&lt;/code&gt;&lt;/a&gt; - the virtual circuit was reset by the remote side executing a hard or abortive close. The application should close the socket; it is no longer usable. On a UDP-datagram socket this error indicates a previous send operation resulted in an ICMP Port Unreachable message.</source>
          <target state="translated">&lt;a href=&quot;errno/econnreset&quot;&gt; &lt;code&gt;Errno::ECONNRESET&lt;/code&gt; &lt;/a&gt; 가상 회로가 원격 측에서 하드 또는 중단 폐쇄를 실행하여 재설정되었습니다. 응용 프로그램은 소켓을 닫아야합니다. 더 이상 사용할 수 없습니다. UDP 데이터 그램 소켓에서이 오류는 이전 전송 작업으로 인해 ICMP Port Unreachable 메시지가 발생했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="675acd8d2cd9029edb64adf2abda055864af55d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Bundler::Thor::Error&lt;/code&gt;&lt;/a&gt; is raised when it's caused by wrong usage of thor classes. Those errors have their backtrace suppressed and are nicely shown to the user.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Bundler::Thor::Error&lt;/code&gt; &lt;/a&gt; 는 thor 클래스의 잘못된 사용으로 인해 발생합니다. 이러한 오류는 역 추적이 억제되어 사용자에게 잘 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9b13902ebb9d3b01655179cc2e2efcd05f464fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; class for errors raised by &lt;a href=&quot;../persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt;. Various SystemCallErrors are re-raised with a human-readable message under this class.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../persistent&quot;&gt; &lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt; &lt;/a&gt; 의해 발생한 오류에 대한 오류 클래스. 이 클래스에서는 사람이 읽을 수있는 메시지로 다양한 SystemCallError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fc990359c6330000f9abf7eb94ee6051948f9f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; handling:</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 처리 :</target>
        </trans-unit>
        <trans-unit id="eaa40f32e4607fab5d54116aae70a98a49b63dd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; raised upon a &amp;ldquo;BAD&amp;rdquo; response from the server, indicating that the client command violated the &lt;a href=&quot;../imap&quot;&gt;&lt;code&gt;IMAP&lt;/code&gt;&lt;/a&gt; protocol, or an internal server failure has occurred.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 클라이언트 명령을 위반 한 것을 나타내는, 서버에서 &quot;BAD&quot;응답에 제기&lt;a href=&quot;../imap&quot;&gt; &lt;code&gt;IMAP&lt;/code&gt; 의&lt;/a&gt; 프로토콜을, 또는 내부 서버 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="1b2b1b491dd1a8534b4d3beb224baba980cff174" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; raised upon a &amp;ldquo;BYE&amp;rdquo; response from the server, indicating that the client is not being allowed to login, or has been timed out due to inactivity.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;서버에서 &quot;BYE&quot;응답으로 클라이언트에 로그인 할 수 없거나 시간 초과로 인해 시간이 초과되었음을 나타내는 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="3446296ccdecba98bdc89f9921a557f416350302" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; raised upon a &amp;ldquo;NO&amp;rdquo; response from the server, indicating that the client command could not be completed successfully.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;클라이언트 명령을 성공적으로 완료 할 수 없음을 나타내는 서버에서 &quot;아니오&quot;응답으로 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="a00c2b5ac6d51aa3b34eec075e7e3b145172e966" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; raised when a response from the server is non-parseable.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;서버의 응답을 구문 분석 할 수없는 경우 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="bdcf47994dab9b4ed2d95625271f0dbba3895a5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; raised when data is in the incorrect format.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;데이터의 형식이 잘못된 경우 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="68142acaa71797fab3ce4ee7f6eff1d050a0aeac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; raised when too many flags are interned to symbols.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;너무 많은 플래그가 심볼에 삽입되면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4af9844a01d83f3c89dbfdf3cafa9f8ca705e3e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 유형.</target>
        </trans-unit>
        <trans-unit id="a7132f9235d2e770112800c8dd07446ebcaa1a65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;etc#Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; that is only available when compiled with &lt;code&gt;HAVE_GETGRENT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;etc#Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;HAVE_GETGRENT&lt;/code&gt; 로 컴파일 할 때만 사용할 수있는&lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="45a926dfe0d20b144a7580795410e096d42720c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;etc#Passwd&quot;&gt;&lt;code&gt;Passwd&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; that contains the following members:</source>
          <target state="translated">&lt;a href=&quot;etc#Passwd&quot;&gt; &lt;code&gt;Passwd&lt;/code&gt; &lt;/a&gt; 는다음 멤버를 포함하는&lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bf35cb8c19bac0ccf1a130d863b5e744888b6ac1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;etc#method-c-sysconfdir&quot;&gt;&lt;code&gt;Etc.sysconfdir&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;etc#method-c-systmpdir&quot;&gt;&lt;code&gt;Etc.systmpdir&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;etc#method-c-sysconfdir&quot;&gt; &lt;code&gt;Etc.sysconfdir&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;etc#method-c-systmpdir&quot;&gt; &lt;code&gt;Etc.systmpdir&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39f06faf63e535a8beab08b7df355e4f24910423" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; Handling</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 처리</target>
        </trans-unit>
        <trans-unit id="1716b6f76b3d12f2670b819506c451a8eba401bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class used to return errors from the dbm library.</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;dbm 라이브러리에서 오류를 리턴하는 데 사용되는 예외 클래스.</target>
        </trans-unit>
        <trans-unit id="3498638a0c67425d7e1408cea1732021deae733c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class used to return errors from the sdbm library.</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;sdbm 라이브러리에서 오류를 리턴하는 데 사용되는 예외 클래스.</target>
        </trans-unit>
        <trans-unit id="e80964433f3469ba097080b68e6e2566044818fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; handling</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 처리</target>
        </trans-unit>
        <trans-unit id="c30622d7cee98b3549ab11f89fe66d7e9301273b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; message.</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 메시지.</target>
        </trans-unit>
        <trans-unit id="e70e5db6e544ebf0a97db76dc4f94055dd8b4170" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; to raise if the block fails to terminate in &lt;code&gt;sec&lt;/code&gt; seconds. Omitting will use the default, &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 블록이 &lt;code&gt;sec&lt;/code&gt; 단위로 종료되지 않으면 발생하는&lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 입니다. 생략하면 기본값 인&lt;a href=&quot;timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="11ce3e84263e9c8714c57c091e4334911428c7fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;falseclass&quot;&gt;&lt;code&gt;FalseClass&lt;/code&gt;&lt;/a&gt; &amp;ndash; Same as &lt;code&gt;TrueClass&lt;/code&gt;, but defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;falseclass&quot;&gt; &lt;code&gt;FalseClass&lt;/code&gt; &lt;/a&gt; - 동일 &lt;code&gt;TrueClass&lt;/code&gt; 하지만 기본값은 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f59c65e5684b33f55cbd0c82967775b8d058caee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fiddle&quot;&gt;&lt;code&gt;Fiddle&lt;/code&gt;&lt;/a&gt; is an extension to translate a foreign function interface (FFI) with ruby.</source>
          <target state="translated">&lt;a href=&quot;fiddle&quot;&gt; &lt;code&gt;Fiddle&lt;/code&gt; &lt;/a&gt; 은 외부 함수 인터페이스 (FFI)를 루비로 변환하는 확장입니다.</target>
        </trans-unit>
        <trans-unit id="4a744e13ea86144657afdce7125ba9653bb42fb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; data read from disk</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;디스크에서 읽은 파일 데이터</target>
        </trans-unit>
        <trans-unit id="cfd0b3da010d7f2eabd2618220fe60243573afa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; data written to disk will be transcoded to the default external encoding when written.</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;디스크에 기록 된 파일 데이터는 기록시 기본 외부 인코딩으로 트랜스 코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="fe3b1d58ddbfdffad8bf54d0bfa87212cb477711" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; names from &lt;a href=&quot;dir&quot;&gt;&lt;code&gt;Dir&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;dir&quot;&gt; &lt;code&gt;Dir&lt;/code&gt; 의&lt;/a&gt;파일 이름</target>
        </trans-unit>
        <trans-unit id="6a50e3cdbd88e0bb9f230d75b5a4f63502a4d6f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; property and manipulation methods</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 속성 및 조작 방법</target>
        </trans-unit>
        <trans-unit id="9dcf33e06906529107a651efde1160924705a711" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; status predicate methods</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 상태 술어 메소드</target>
        </trans-unit>
        <trans-unit id="50cd1cd32af5831ca3601a7aea83ca18aba49191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; tests on a single file:</source>
          <target state="translated">&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;단일 파일에 대한 파일 테스트 :</target>
        </trans-unit>
        <trans-unit id="80c8c607cd9ab67a6ac8d50c34d3d8f2f7b18848" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file#method-i-flock&quot;&gt;&lt;code&gt;File#flock&lt;/code&gt;&lt;/a&gt;, as the underlying flock(2) call is not specified by POSIX</source>
          <target state="translated">&lt;a href=&quot;file#method-i-flock&quot;&gt; &lt;code&gt;File#flock&lt;/code&gt; &lt;/a&gt;POSIX에서 기본 flock (2) 호출을 지정하지 않았으므로 File # flock</target>
        </trans-unit>
        <trans-unit id="72b2dd839b3fef0d89a53b356eb63f1b34119d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file/file/constants&quot;&gt;File::File::Constants&lt;/a&gt;, &lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;file/file/constants&quot;&gt;File :: File :: Constants&lt;/a&gt; , &lt;a href=&quot;enumerable&quot;&gt;열거 가능&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="770bdf185f659583fb91dcb00d5db0396efdc855" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filetest&quot;&gt;&lt;code&gt;FileTest&lt;/code&gt;&lt;/a&gt; implements file test operations similar to those used in &lt;a href=&quot;file/stat&quot;&gt;&lt;code&gt;File::Stat&lt;/code&gt;&lt;/a&gt;. It exists as a standalone module, and its methods are also insinuated into the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class. (Note that this is not done by inclusion: the interpreter cheats).</source>
          <target state="translated">&lt;a href=&quot;filetest&quot;&gt; &lt;code&gt;FileTest&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;file/stat&quot;&gt; &lt;code&gt;File::Stat&lt;/code&gt; &lt;/a&gt; 에서 사용되는 것과 유사한 파일 테스트 작업을 구현합니다. 독립형 모듈로 존재하며 해당 메서드도&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 클래스에 포함됩니다. (이것은 포함에 의해 수행되지 않습니다 : 통역사 치트).</target>
        </trans-unit>
        <trans-unit id="95310dbe0d891ab8b836f9db7bacc81053a7f3c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; &amp;ndash; Any float. (e.g. 10, 3.14, -100E+13)</source>
          <target state="translated">&lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; &amp;ndash; 모든 플로트. (예 : 10, 3.14, -100E + 13)</target>
        </trans-unit>
        <trans-unit id="b231f69051ff50da72b8d32c82586cf05e4941bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; objects represent inexact real numbers using the native architecture's double-precision floating point representation.</source>
          <target state="translated">&lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 객체는 기본 아키텍처의 배정 밀도 부동 소수점 표현을 사용하여 부정확 한 실수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="64aa9f88b2ded672ebbdc201014bd1a2d5dfd4d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float#method-i-magnitude&quot;&gt;&lt;code&gt;Float#magnitude&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;float#method-i-abs&quot;&gt;&lt;code&gt;Float#abs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;float#method-i-magnitude&quot;&gt; &lt;code&gt;Float#magnitude&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;float#method-i-abs&quot;&gt; &lt;code&gt;Float#abs&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="bb3dd80277fb32e857fc9beca41a68c3a10821cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float#method-i-to_int&quot;&gt;&lt;code&gt;to_int&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;float#method-i-to_i&quot;&gt;&lt;code&gt;to_i&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;float#method-i-to_int&quot;&gt; &lt;code&gt;to_int&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;float#method-i-to_i&quot;&gt; &lt;code&gt;to_i&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="3dcf0e8c4fde7c2dc5363a68e0893fe38093a177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ftp&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; syntax is defined by RFC1738 section 3.2.</source>
          <target state="translated">&lt;a href=&quot;ftp&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 구문은 RFC1738 섹션 3.2에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8139f915e6dba2408634892b5477af63252a1af7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ftp&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; syntax is defined by RFC1738 section 3.2.</source>
          <target state="translated">&lt;a href=&quot;ftp&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 구문은 RFC1738 섹션 3.2에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="17a462463b2fc2f23514a1c1981f687089869977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; build options</source>
          <target state="translated">&lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 빌드 옵션</target>
        </trans-unit>
        <trans-unit id="0642a4642aa15f9a7fb03d065cb62e57c7dafe00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;getoptlong&quot;&gt;&lt;code&gt;GetoptLong&lt;/code&gt;&lt;/a&gt; allows for POSIX-style options like &lt;code&gt;--file&lt;/code&gt; as well as single letter options like &lt;code&gt;-f&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;getoptlong&quot;&gt; &lt;code&gt;GetoptLong&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;--file&lt;/code&gt; 과같은 POSIX 스타일옵션과 &lt;code&gt;-f&lt;/code&gt; 와 같은 단일 문자 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3353e00b5c411199eddacc168c82eceab25782c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gzipfile&quot;&gt;&lt;code&gt;Zlib::GzipFile&lt;/code&gt;&lt;/a&gt; is an abstract class for handling a gzip formatted compressed file. The operations are defined in the subclasses, &lt;a href=&quot;gzipreader&quot;&gt;&lt;code&gt;Zlib::GzipReader&lt;/code&gt;&lt;/a&gt; for reading, and &lt;a href=&quot;gzipwriter&quot;&gt;&lt;code&gt;Zlib::GzipWriter&lt;/code&gt;&lt;/a&gt; for writing.</source>
          <target state="translated">&lt;a href=&quot;gzipfile&quot;&gt; &lt;code&gt;Zlib::GzipFile&lt;/code&gt; &lt;/a&gt; 은 gzip 형식의 압축 파일을 처리하기위한 추상 클래스입니다. 작업은 하위 클래스 인&lt;a href=&quot;gzipreader&quot;&gt; &lt;code&gt;Zlib::GzipReader&lt;/code&gt; &lt;/a&gt; 읽기) 및&lt;a href=&quot;gzipwriter&quot;&gt; &lt;code&gt;Zlib::GzipWriter&lt;/code&gt; &lt;/a&gt; 쓰기)로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="7b4a7318659a5814c3e4035b48d35b0812f599e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gzipfile#method-i-orig_name&quot;&gt;&lt;code&gt;orig_name&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;gzipwriter#method-i-orig_name-3D&quot;&gt;&lt;code&gt;Zlib::GzipWriter#orig_name=&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;gzipfile#method-i-orig_name&quot;&gt; &lt;code&gt;orig_name&lt;/code&gt; &lt;/a&gt; (&lt;a href=&quot;gzipwriter#method-i-orig_name-3D&quot;&gt; &lt;code&gt;Zlib::GzipWriter#orig_name=&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="15b9da54000abda0493bd079620ada27f275770d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gzipfile#method-i-orig_name&quot;&gt;&lt;code&gt;orig_name&lt;/code&gt;&lt;/a&gt; (Zlib::GzipWriter#orig_name=)</source>
          <target state="translated">&lt;a href=&quot;gzipfile#method-i-orig_name&quot;&gt; &lt;code&gt;orig_name&lt;/code&gt; &lt;/a&gt; (Zlib :: GzipWriter # orig_name =)</target>
        </trans-unit>
        <trans-unit id="284a6d0d4cc42ef5aa68ca495cbcf14699f91482" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gzipreader&quot;&gt;&lt;code&gt;GzipReader&lt;/code&gt;&lt;/a&gt; should be used by associating an &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, or IO-like, object.</source>
          <target state="translated">&lt;a href=&quot;gzipreader&quot;&gt; &lt;code&gt;GzipReader&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 또는 IO와 유사한 객체를 연결하여 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a39ba80c961f5a2d1e5d2495900723839089997b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gzipreader&quot;&gt;&lt;code&gt;Zlib::GzipReader&lt;/code&gt;&lt;/a&gt; is the class for reading a gzipped file. &lt;a href=&quot;gzipreader&quot;&gt;&lt;code&gt;GzipReader&lt;/code&gt;&lt;/a&gt; should be used as an &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, or -IO-like, object.</source>
          <target state="translated">&lt;a href=&quot;gzipreader&quot;&gt; &lt;code&gt;Zlib::GzipReader&lt;/code&gt; &lt;/a&gt; 는 gzip 파일을 읽는 클래스입니다. &lt;a href=&quot;gzipreader&quot;&gt; &lt;code&gt;GzipReader&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 또는 -IO와 유사한 객체로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1883fa6ac3d6daa045d7ec52cdf8a96ad93b7934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gzipwriter&quot;&gt;&lt;code&gt;Zlib::GzipWriter&lt;/code&gt;&lt;/a&gt; is a class for writing gzipped files. &lt;a href=&quot;gzipwriter&quot;&gt;&lt;code&gt;GzipWriter&lt;/code&gt;&lt;/a&gt; should be used with an instance of &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, or IO-like, object.</source>
          <target state="translated">&lt;a href=&quot;gzipwriter&quot;&gt; &lt;code&gt;Zlib::GzipWriter&lt;/code&gt; &lt;/a&gt; 는 gzip 파일을 쓰는 클래스입니다. &lt;a href=&quot;gzipwriter&quot;&gt; &lt;code&gt;GzipWriter&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 또는 IO와 유사한 객체의 인스턴스와 함께 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1fc0b198ae318f3223ec4bfcd26553da5be843b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; Keys</source>
          <target state="translated">&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 키</target>
        </trans-unit>
        <trans-unit id="5198110e27f57ad0f3a9a0c12cf15f7b9d7d5727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; with Default Value</source>
          <target state="translated">&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;기본값이있는 해시 및&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21a00ce8de56024da008233a5a9f8fbd7adaadb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; equality&amp;mdash;&lt;code&gt;other&lt;/code&gt; and &lt;code&gt;struct&lt;/code&gt; refer to the same hash key if they have the same struct subclass and have equal member values (according to &lt;a href=&quot;object#method-i-eql-3F&quot;&gt;&lt;code&gt;Object#eql?&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 동등성 &amp;mdash; &lt;code&gt;other&lt;/code&gt; 및 &lt;code&gt;struct&lt;/code&gt; 는 동일한 struct 서브 클래스를 가지고 동일한&lt;a href=&quot;object#method-i-eql-3F&quot;&gt; &lt;code&gt;Object#eql?&lt;/code&gt; &lt;/a&gt; 값을 갖는 경우 동일한 해시 키를 참조합니다 ( Object # eql? 에 따라).</target>
        </trans-unit>
        <trans-unit id="913aa1f96194e89725e401c4fb503a6374ac202e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; keys with spaces or characters that could normally not be used for method calls (e.g. &lt;code&gt;()[]*&lt;/code&gt;) will not be immediately available on the &lt;a href=&quot;openstruct&quot;&gt;&lt;code&gt;OpenStruct&lt;/code&gt;&lt;/a&gt; object as a method for retrieval or assignment, but can still be reached through the &lt;a href=&quot;object#method-i-send&quot;&gt;&lt;code&gt;Object#send&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;일반적으로 메소드 호출에 사용할 수없는 공백이나 문자가있는 해시 키 (예 : &lt;code&gt;()[]*&lt;/code&gt; )는&lt;a href=&quot;openstruct&quot;&gt; &lt;code&gt;OpenStruct&lt;/code&gt; &lt;/a&gt; 오브젝트에서 검색 또는 지정을위한 메소드로즉시 사용할 수없지만&lt;a href=&quot;object#method-i-send&quot;&gt; &lt;code&gt;Object#send&lt;/code&gt; 를&lt;/a&gt; 통해 여전히 도달 할 수 있습니다.방법.</target>
        </trans-unit>
        <trans-unit id="342f06aa19241aaf51f371aa280028ca052f0f8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6305d9aa00a910283653de25e4c58c10e0b57e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;Hash#[]&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hash#method-i-5B-5D-3D&quot;&gt;&lt;code&gt;Hash#[]=&lt;/code&gt;&lt;/a&gt; (unless &lt;a href=&quot;hash#method-c-new&quot;&gt;&lt;code&gt;Hash.new&lt;/code&gt;&lt;/a&gt; was given an unsafe block)</source>
          <target state="translated">&lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;Hash#[]&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;hash#method-i-5B-5D-3D&quot;&gt; &lt;code&gt;Hash#[]=&lt;/code&gt; &lt;/a&gt; (&lt;a href=&quot;hash#method-c-new&quot;&gt; &lt;code&gt;Hash.new&lt;/code&gt; &lt;/a&gt; 에 안전하지 않은 블록이 제공되지 않은 경우)</target>
        </trans-unit>
        <trans-unit id="a4cfd5fea0cff0eb32d88afb6dc759d262eb2501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash#method-i-filter&quot;&gt;&lt;code&gt;Hash#filter&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;hash#method-i-select&quot;&gt;&lt;code&gt;Hash#select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;hash#method-i-filter&quot;&gt; &lt;code&gt;Hash#filter&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;hash#method-i-select&quot;&gt; &lt;code&gt;Hash#select&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="bb6080d1518c8a90914970e8c87191d16a451182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash#method-i-filter-21&quot;&gt;&lt;code&gt;Hash#filter!&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;hash#method-i-select-21&quot;&gt;&lt;code&gt;Hash#select!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;hash#method-i-filter-21&quot;&gt; &lt;code&gt;Hash#filter!&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;hash#method-i-select-21&quot;&gt; &lt;code&gt;Hash#select!&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 ! .</target>
        </trans-unit>
        <trans-unit id="1f772aa753c386c3a0df6d4489c7e6e0d8b27fd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash#method-i-length&quot;&gt;&lt;code&gt;Hash#length&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;hash#method-i-size&quot;&gt;&lt;code&gt;Hash#size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;hash#method-i-length&quot;&gt; &lt;code&gt;Hash#length&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;hash#method-i-size&quot;&gt; &lt;code&gt;Hash#size&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="7e987fc96a93647955a9ee17cf47a5f9911f3c1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hash#method-i-update&quot;&gt;&lt;code&gt;Hash#update&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;hash#method-i-merge-21&quot;&gt;&lt;code&gt;Hash#merge!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;hash#method-i-update&quot;&gt; &lt;code&gt;Hash#update&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;hash#method-i-merge-21&quot;&gt; &lt;code&gt;Hash#merge!&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 ! .</target>
        </trans-unit>
        <trans-unit id="117f41f4854e8f2cd2496412a3ef4fd573d212b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;OpenSSL::HMAC&lt;/code&gt;&lt;/a&gt; allows computing Hash-based Message Authentication Code (&lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;HMAC&lt;/code&gt;&lt;/a&gt;). It is a type of message authentication code (MAC) involving a hash function in combination with a key. &lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;HMAC&lt;/code&gt;&lt;/a&gt; can be used to verify the integrity of a message as well as the authenticity.</source>
          <target state="translated">&lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;OpenSSL::HMAC&lt;/code&gt; &lt;/a&gt; 해시 기반 메시지 인증 코드 (계산 수 있습니다&lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;HMAC&lt;/code&gt; &lt;/a&gt; ). 키와 결합 된 해시 함수를 포함하는 메시지 인증 코드 (MAC) 유형입니다. &lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;HMAC&lt;/code&gt; &lt;/a&gt; 는 메시지의 무결성과 신뢰성을 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="add263a2ece7a95fec07585afa01fbc61946980f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;OpenSSL::HMAC&lt;/code&gt;&lt;/a&gt; allows computing Hash-based Message Authentication Code (HMAC). It is a type of message authentication code (MAC) involving a hash function in combination with a key. &lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;HMAC&lt;/code&gt;&lt;/a&gt; can be used to verify the integrity of a message as well as the authenticity.</source>
          <target state="translated">&lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;OpenSSL::HMAC&lt;/code&gt; &lt;/a&gt; 사용하면 해시 기반 메시지 인증 코드 (HMAC)를 계산할 수 있습니다. 키와 함께 해시 함수를 포함하는 일종의 메시지 인증 코드 (MAC)입니다. &lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;HMAC&lt;/code&gt; &lt;/a&gt; 를 사용하여 메시지의 무결성과 진위 여부를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0302b2c5346bff92511befe072b6b05b4d498901" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;OpenSSL::HMAC&lt;/code&gt;&lt;/a&gt; has a similar interface to &lt;a href=&quot;digest&quot;&gt;&lt;code&gt;OpenSSL::Digest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;OpenSSL::HMAC&lt;/code&gt; &lt;/a&gt; 에는&lt;a href=&quot;digest&quot;&gt; &lt;code&gt;OpenSSL::Digest&lt;/code&gt; &lt;/a&gt; 와 유사한 인터페이스가있습니다.</target>
        </trans-unit>
        <trans-unit id="d3eef52f8727a40950d2ca5788060017a4bb2d55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hosts&quot;&gt;&lt;code&gt;Resolv::Hosts&lt;/code&gt;&lt;/a&gt; is a hostname resolver that uses the system hosts file.</source>
          <target state="translated">&lt;a href=&quot;hosts&quot;&gt; &lt;code&gt;Resolv::Hosts&lt;/code&gt; &lt;/a&gt; 는 시스템 호스트 파일을 사용하는 호스트 이름 확인자입니다.</target>
        </trans-unit>
        <trans-unit id="716f360ca44578b3821a8ca63b1d874343818ccb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; Request Classes</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 요청 클래스</target>
        </trans-unit>
        <trans-unit id="46e7b23bc8d5187b5ae1e9b0be608d2ef9abc199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; Response Classes</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 응답 클래스</target>
        </trans-unit>
        <trans-unit id="f45a69c42ffcf659385c7ce43f4b66735c06d1ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; automatically adds Accept-Encoding for compression of response bodies and automatically decompresses gzip and deflate responses unless a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; header was sent.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 자동으로 응답 본문 압축을위한 Accept-Encoding을 추가하고&lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 헤더가 전송되지 않는 한 gzip을 압축 해제하고 응답을 압축 해제합니다.</target>
        </trans-unit>
        <trans-unit id="0815105fcaf495c32576ad95c5313cca1aec332f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; exception class. You cannot use &lt;a href=&quot;httpexceptions&quot;&gt;&lt;code&gt;Net::HTTPExceptions&lt;/code&gt;&lt;/a&gt; directly; instead, you must use its subclasses.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 예외 클래스. &lt;a href=&quot;httpexceptions&quot;&gt; &lt;code&gt;Net::HTTPExceptions&lt;/code&gt; &lt;/a&gt; 직접사용할 수 없습니다. 대신 서브 클래스를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="737aa0897bb93ff8b9edbd7cae07d8779df5ac60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; is designed to work closely with &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../uri/generic#attribute-i-host&quot;&gt;&lt;code&gt;URI::HTTP#host&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uri/generic#attribute-i-port&quot;&gt;&lt;code&gt;URI::HTTP#port&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../uri/http#method-i-request_uri&quot;&gt;&lt;code&gt;URI::HTTP#request_uri&lt;/code&gt;&lt;/a&gt; are designed to work with &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 와 밀접하게 작동하도록 설계되었습니다. &lt;a href=&quot;../uri/generic#attribute-i-host&quot;&gt; &lt;code&gt;URI::HTTP#host&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../uri/generic#attribute-i-port&quot;&gt; &lt;code&gt;URI::HTTP#port&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../uri/http#method-i-request_uri&quot;&gt; &lt;code&gt;URI::HTTP#request_uri&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 와 함께 작동하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="a6ee31510072c89df12484341a0d6981cf9a44a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; provides a rich library which can be used to build &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; user-agents. For more details about &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; see [RFC2616](&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 사용자 에이전트를 빌드하는 데 사용할 수있는 풍부한 라이브러리를 제공합니다. &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; 에&lt;/a&gt; 대한 자세한 내용은 [RFC2616] (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt; www.ietf.org/rfc/rfc2616.txt&lt;/a&gt; )을참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0e92d9ef48e7a3ef47c319d23f28c8f23440a1ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; will automatically create a proxy from the &lt;code&gt;http_proxy&lt;/code&gt; environment variable if it is present. To disable use of &lt;code&gt;http_proxy&lt;/code&gt;, pass &lt;code&gt;nil&lt;/code&gt; for the proxy address.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;http_proxy&lt;/code&gt; 환경 변수 (있는 경우)에서 프록시를 자동으로 만듭니다. &lt;code&gt;http_proxy&lt;/code&gt; 사용을 비활성화하려면프록시 주소에 &lt;code&gt;nil&lt;/code&gt; 을전달하십시오.</target>
        </trans-unit>
        <trans-unit id="662e49b99b84b4f0a993b8fb8b60501acf049552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http#method-c-start&quot;&gt;&lt;code&gt;Net::HTTP::start&lt;/code&gt;&lt;/a&gt; immediately creates a connection to an &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; server which is kept open for the duration of the block. The connection will remain open for multiple requests in the block if the server indicates it supports persistent connections.</source>
          <target state="translated">&lt;a href=&quot;http#method-c-start&quot;&gt; &lt;code&gt;Net::HTTP::start&lt;/code&gt; &lt;/a&gt; 즉시블록 기간 동안 열린 상태로 유지되는&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 서버에대한 연결을 만듭니다. 서버가 영구 연결을 지원한다고 표시하면 블록의 여러 요청에 대해 연결이 열린 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="2c7f394e03a719e09f6b42872add3e8bcbf0e0e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Berkeley_DB&quot;&gt;Berkeley DB&lt;/a&gt; versions 1 thru 6, also known as BDB and Sleepycat DB, now owned by Oracle Corporation.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Berkeley_DB&quot;&gt;&lt;/a&gt;BDB 및 Sleepycat DB라고도하는 Berkeley DB 버전 1 ~ 6 (현재 Oracle Corporation 소유)</target>
        </trans-unit>
        <trans-unit id="72243b1a35dcb4ef9d21171f731aadd756f19a62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://fallabs.com/qdbm/index.html&quot;&gt;qdbm&lt;/a&gt;, another open source reimplementation of dbm.</source>
          <target state="translated">&lt;a href=&quot;http://fallabs.com/qdbm/index.html&quot;&gt;qdbm&lt;/a&gt; , dbm의 또 다른 오픈 소스 재 구현.</target>
        </trans-unit>
        <trans-unit id="3feb397f839c1c05935e778789e9088bda4fbb1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.gnu.org/software/gdbm&quot;&gt;www.gnu.org/software/gdbm&lt;/a&gt;/</source>
          <target state="translated">&lt;a href=&quot;http://www.gnu.org/software/gdbm&quot;&gt;www.gnu.org/software/gdbm&lt;/a&gt;/</target>
        </trans-unit>
        <trans-unit id="b68c4b7a8c9dade764ce0a064fa1f9dcd19e58e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.gnu.org/software/gdbm/&quot;&gt;gdbm&lt;/a&gt;, the GNU implementation of dbm.</source>
          <target state="translated">&lt;a href=&quot;http://www.gnu.org/software/gdbm/&quot;&gt;gdbm&lt;/a&gt; , dbm의 GNU 구현.</target>
        </trans-unit>
        <trans-unit id="95412eec725e208380a50c6aefa39ebc7ecddbb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.thrysoee.dk/editline&quot;&gt;www.thrysoee.dk/editline&lt;/a&gt;/</source>
          <target state="translated">&lt;a href=&quot;http://www.thrysoee.dk/editline&quot;&gt;www.thrysoee.dk/editline&lt;/a&gt;/</target>
        </trans-unit>
        <trans-unit id="58362efc0b458b6b7f5b5bdc0b9bead964dfca9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;httpgenericrequest&quot;&gt;&lt;code&gt;HTTPGenericRequest&lt;/code&gt;&lt;/a&gt; is the parent of the &lt;a href=&quot;httprequest&quot;&gt;&lt;code&gt;Net::HTTPRequest&lt;/code&gt;&lt;/a&gt; class. Do not use this directly; use a subclass of &lt;a href=&quot;httprequest&quot;&gt;&lt;code&gt;Net::HTTPRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpgenericrequest&quot;&gt; &lt;code&gt;HTTPGenericRequest&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;httprequest&quot;&gt; &lt;code&gt;Net::HTTPRequest&lt;/code&gt; &lt;/a&gt; 클래스의 부모입니다. 이것을 직접 사용하지 마십시오. &lt;a href=&quot;httprequest&quot;&gt; &lt;code&gt;Net::HTTPRequest&lt;/code&gt; &lt;/a&gt; 의 서브 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="24a26b7acff3b88fa1e9aa7130f86f9a7a89ec71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;httpgenericrequest&quot;&gt;&lt;code&gt;HTTPGenericRequest&lt;/code&gt;&lt;/a&gt; is the parent of the HTTPRequest class. Do not use this directly; use a subclass of HTTPRequest.</source>
          <target state="translated">&lt;a href=&quot;httpgenericrequest&quot;&gt; &lt;code&gt;HTTPGenericRequest&lt;/code&gt; &lt;/a&gt; 는 HTTPRequest 클래스의 부모입니다. 이것을 직접 사용하지 마십시오. HTTPRequest의 서브 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e78816c569c27b7b4eb95d4c0b1175d3074d97d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;httpredirect&quot;&gt;&lt;code&gt;OpenURI::HTTPRedirect&lt;/code&gt;&lt;/a&gt; exception raised on redirection. Using &lt;code&gt;true&lt;/code&gt; also means that redirections between http and ftp are permitted.</source>
          <target state="translated">&lt;a href=&quot;httpredirect&quot;&gt; &lt;code&gt;OpenURI::HTTPRedirect&lt;/code&gt; &lt;/a&gt;리디렉션시 OpenURI :: HTTPRedirect 예외가 발생했습니다. &lt;code&gt;true&lt;/code&gt; 를사용하면http와 ftp 사이의 리디렉션이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e501ae3516d0a514a7a682bafe9c4fd83fa26b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ifaddr&quot;&gt;&lt;code&gt;Socket::Ifaddr&lt;/code&gt;&lt;/a&gt; represents a result of getifaddrs() function.</source>
          <target state="translated">&lt;a href=&quot;ifaddr&quot;&gt; &lt;code&gt;Socket::Ifaddr&lt;/code&gt; &lt;/a&gt; 은 getifaddrs () 함수의 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="675a3d21ab14007242ac51758a337a242b80918c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap&quot;&gt;&lt;code&gt;IMAP&lt;/code&gt;&lt;/a&gt; Overview</source>
          <target state="translated">&lt;a href=&quot;imap&quot;&gt; &lt;code&gt;IMAP&lt;/code&gt; &lt;/a&gt; 개요</target>
        </trans-unit>
        <trans-unit id="29ccccc41ead6c712094c6f126669493b515cf8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap&quot;&gt;&lt;code&gt;Net::IMAP&lt;/code&gt;&lt;/a&gt; does &lt;em&gt;not&lt;/em&gt; automatically encode and decode mailbox names to and from UTF-7.</source>
          <target state="translated">&lt;a href=&quot;imap&quot;&gt; &lt;code&gt;Net::IMAP&lt;/code&gt; &lt;/a&gt; 은사서함 이름을 UTF-7과 자동으로 인코딩 및 디코딩하지&lt;em&gt; 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e4c4a918b26a878b748add6d903be40c045eb27a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap&quot;&gt;&lt;code&gt;Net::IMAP&lt;/code&gt;&lt;/a&gt; implements Internet Message Access Protocol (&lt;a href=&quot;imap&quot;&gt;&lt;code&gt;IMAP&lt;/code&gt;&lt;/a&gt;) client functionality. The protocol is described in [IMAP].</source>
          <target state="translated">&lt;a href=&quot;imap&quot;&gt; &lt;code&gt;Net::IMAP&lt;/code&gt; &lt;/a&gt; 구현 인터넷 메시지 액세스 프로토콜 (&lt;a href=&quot;imap&quot;&gt; &lt;code&gt;IMAP&lt;/code&gt; &lt;/a&gt; ) 클라이언트 기능을 제공합니다. 프로토콜은 [IMAP]에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="afab5ecd4b56667ef85e237eb4d8541c8a4ab1c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap&quot;&gt;&lt;code&gt;Net::IMAP&lt;/code&gt;&lt;/a&gt; implements Internet Message Access Protocol (IMAP) client functionality. The protocol is described in [IMAP].</source>
          <target state="translated">&lt;a href=&quot;imap&quot;&gt; &lt;code&gt;Net::IMAP&lt;/code&gt; &lt;/a&gt; 는 IMAP ( Internet Message Access Protocol) 클라이언트 기능을 구현합니다. 프로토콜은 [IMAP]에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6aa19b5a0e89f7f3d18a84bd19fc2baecef6ca28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap&quot;&gt;&lt;code&gt;Net::IMAP&lt;/code&gt;&lt;/a&gt; supports concurrent threads. For example,</source>
          <target state="translated">&lt;a href=&quot;imap&quot;&gt; &lt;code&gt;Net::IMAP&lt;/code&gt; &lt;/a&gt; 는 동시 스레드를 지원합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="c1abfd7884559873a61a7746ffcd00e37baa7baf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#Address&quot;&gt;&lt;code&gt;Net::IMAP::Address&lt;/code&gt;&lt;/a&gt; represents electronic mail addresses.</source>
          <target state="translated">&lt;a href=&quot;imap#Address&quot;&gt; &lt;code&gt;Net::IMAP::Address&lt;/code&gt; &lt;/a&gt; 는 전자 메일 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="02c5efa58e1f15fcc65ddf539a8b26cb971296c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#ContentDisposition&quot;&gt;&lt;code&gt;Net::IMAP::ContentDisposition&lt;/code&gt;&lt;/a&gt; represents Content-Disposition fields.</source>
          <target state="translated">&lt;a href=&quot;imap#ContentDisposition&quot;&gt; &lt;code&gt;Net::IMAP::ContentDisposition&lt;/code&gt; &lt;/a&gt; 은 Content-Disposition 필드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="717fe9b386ecc02f224c3c8d62b4e02b12df4d1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#ContinuationRequest&quot;&gt;&lt;code&gt;Net::IMAP::ContinuationRequest&lt;/code&gt;&lt;/a&gt; represents command continuation requests.</source>
          <target state="translated">&lt;a href=&quot;imap#ContinuationRequest&quot;&gt; &lt;code&gt;Net::IMAP::ContinuationRequest&lt;/code&gt; &lt;/a&gt; 는 명령 연속 요청을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5f0cc5e47be0c74b0d2eed890e97ded66be0bd7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#Envelope&quot;&gt;&lt;code&gt;Net::IMAP::Envelope&lt;/code&gt;&lt;/a&gt; represents envelope structures of messages.</source>
          <target state="translated">&lt;a href=&quot;imap#Envelope&quot;&gt; &lt;code&gt;Net::IMAP::Envelope&lt;/code&gt; &lt;/a&gt; 는 메시지의 봉투 구조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e8b2b4c77499380b892856ff90e867c0ae3a9c59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#FetchData&quot;&gt;&lt;code&gt;Net::IMAP::FetchData&lt;/code&gt;&lt;/a&gt; represents the contents of the FETCH response.</source>
          <target state="translated">&lt;a href=&quot;imap#FetchData&quot;&gt; &lt;code&gt;Net::IMAP::FetchData&lt;/code&gt; &lt;/a&gt; 는 FETCH 응답의 내용을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="001b3bf1f65a21881a99bb9436879a09f61cc2d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#MailboxACLItem&quot;&gt;&lt;code&gt;Net::IMAP::MailboxACLItem&lt;/code&gt;&lt;/a&gt; represents the response from GETACL.</source>
          <target state="translated">&lt;a href=&quot;imap#MailboxACLItem&quot;&gt; &lt;code&gt;Net::IMAP::MailboxACLItem&lt;/code&gt; &lt;/a&gt; 은 GETACL의 응답을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8f088c5f5b1a8f039a68fd5ee9a9302c2be6f82c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#MailboxList&quot;&gt;&lt;code&gt;Net::IMAP::MailboxList&lt;/code&gt;&lt;/a&gt; represents contents of the LIST response.</source>
          <target state="translated">&lt;a href=&quot;imap#MailboxList&quot;&gt; &lt;code&gt;Net::IMAP::MailboxList&lt;/code&gt; &lt;/a&gt; 는 LIST 응답의 내용을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d790fe4a21abfc78cb8c976dacdd93a958bf9279" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#MailboxQuota&quot;&gt;&lt;code&gt;Net::IMAP::MailboxQuota&lt;/code&gt;&lt;/a&gt; represents contents of GETQUOTA response. This object can also be a response to GETQUOTAROOT. In the syntax specification below, the delimiter used with the &amp;ldquo;#&amp;rdquo; construct is a single space (SPACE).</source>
          <target state="translated">&lt;a href=&quot;imap#MailboxQuota&quot;&gt; &lt;code&gt;Net::IMAP::MailboxQuota&lt;/code&gt; &lt;/a&gt; 는 GETQUOTA 응답의 내용을 나타냅니다. 이 오브젝트는 GETQUOTAROOT에 대한 응답 일 수도 있습니다. 아래 구문 사양에서&amp;ldquo;#&amp;rdquo;구문과 함께 사용되는 구분 기호는 단일 공백 ​​(SPACE)입니다.</target>
        </trans-unit>
        <trans-unit id="cc9e4044c2b9ac0021b600c3e308e5ec31a11eae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#MailboxQuotaRoot&quot;&gt;&lt;code&gt;Net::IMAP::MailboxQuotaRoot&lt;/code&gt;&lt;/a&gt; represents part of the GETQUOTAROOT response. (GETQUOTAROOT can also return &lt;a href=&quot;imap#MailboxQuota&quot;&gt;&lt;code&gt;Net::IMAP::MailboxQuota&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">&lt;a href=&quot;imap#MailboxQuotaRoot&quot;&gt; &lt;code&gt;Net::IMAP::MailboxQuotaRoot&lt;/code&gt; &lt;/a&gt; 는 GETQUOTAROOT 응답의 일부를 나타냅니다. (GETQUOTAROOT는&lt;a href=&quot;imap#MailboxQuota&quot;&gt; &lt;code&gt;Net::IMAP::MailboxQuota&lt;/code&gt; &lt;/a&gt; 도 반환 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="664457af7ac74fc03985d92a3b376a08e403d300" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#ResponseCode&quot;&gt;&lt;code&gt;Net::IMAP::ResponseCode&lt;/code&gt;&lt;/a&gt; represents response codes.</source>
          <target state="translated">&lt;a href=&quot;imap#ResponseCode&quot;&gt; &lt;code&gt;Net::IMAP::ResponseCode&lt;/code&gt; &lt;/a&gt; 는 응답 코드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6e84af85fb724592f3d0d8b2b73e75628efcc5b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#ResponseText&quot;&gt;&lt;code&gt;Net::IMAP::ResponseText&lt;/code&gt;&lt;/a&gt; represents texts of responses. The text may be prefixed by the response code.</source>
          <target state="translated">&lt;a href=&quot;imap#ResponseText&quot;&gt; &lt;code&gt;Net::IMAP::ResponseText&lt;/code&gt; &lt;/a&gt; 는 응답 텍스트를 나타냅니다. 텍스트 앞에 응답 코드가 붙을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb10d47a150d6f9451ed8fda32add910a7883ad9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#StatusData&quot;&gt;&lt;code&gt;Net::IMAP::StatusData&lt;/code&gt;&lt;/a&gt; represents the contents of the STATUS response.</source>
          <target state="translated">&lt;a href=&quot;imap#StatusData&quot;&gt; &lt;code&gt;Net::IMAP::StatusData&lt;/code&gt; &lt;/a&gt; 는 STATUS 응답의 내용을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="36dcb97fdd06bf347893a2d5ddc64b41d5802eb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#TaggedResponse&quot;&gt;&lt;code&gt;Net::IMAP::TaggedResponse&lt;/code&gt;&lt;/a&gt; represents tagged responses.</source>
          <target state="translated">&lt;a href=&quot;imap#TaggedResponse&quot;&gt; &lt;code&gt;Net::IMAP::TaggedResponse&lt;/code&gt; &lt;/a&gt; 는 태그 응답을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="28dba935ddb5b2fe021344be526acd457e64dc5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#ThreadMember&quot;&gt;&lt;code&gt;Net::IMAP::ThreadMember&lt;/code&gt;&lt;/a&gt; represents a thread-node returned by &lt;a href=&quot;imap#method-i-thread&quot;&gt;&lt;code&gt;Net::IMAP#thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;imap#ThreadMember&quot;&gt; &lt;code&gt;Net::IMAP::ThreadMember&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;imap#method-i-thread&quot;&gt; &lt;code&gt;Net::IMAP#thread&lt;/code&gt; &lt;/a&gt; 리턴 한 스레드 노드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f7553aee5ec5be688434166e71a15ac4490189fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;imap#UntaggedResponse&quot;&gt;&lt;code&gt;Net::IMAP::UntaggedResponse&lt;/code&gt;&lt;/a&gt; represents untagged responses.</source>
          <target state="translated">&lt;a href=&quot;imap#UntaggedResponse&quot;&gt; &lt;code&gt;Net::IMAP::UntaggedResponse&lt;/code&gt; &lt;/a&gt; 는 태그없는 응답을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b5e73d01e90125cbb4e9edc009c165c60275c164" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;importer#method-i-struct&quot;&gt;&lt;code&gt;Fiddle::Importer#struct&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;importer#method-i-union&quot;&gt;&lt;code&gt;Fiddle::Importer#union&lt;/code&gt;&lt;/a&gt; wrap this functionality in an easy-to-use manner.</source>
          <target state="translated">&lt;a href=&quot;importer#method-i-struct&quot;&gt; &lt;code&gt;Fiddle::Importer#struct&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;importer#method-i-union&quot;&gt; &lt;code&gt;Fiddle::Importer#union&lt;/code&gt; &lt;/a&gt; 은이 기능을 사용하기 쉬운 방식으로 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="81a2d81634e2ae50e72b911fe305df5c63b42b40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; &amp;ndash; Any integer. Will convert octal. (e.g. 124, -3, 040)</source>
          <target state="translated">&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; &amp;ndash; 임의의 정수. 8 진수로 변환합니다. (예 : 124, -3, 040)</target>
        </trans-unit>
        <trans-unit id="ab5ebc68ed0cb5b716876b36407b0b9d9f5ef9d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;integer#method-i-magnitude&quot;&gt;&lt;code&gt;Integer#magnitude&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;integer#method-i-abs&quot;&gt;&lt;code&gt;Integer#abs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;integer#method-i-magnitude&quot;&gt; &lt;code&gt;Integer#magnitude&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;integer#method-i-abs&quot;&gt; &lt;code&gt;Integer#abs&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="466a3a631298851ba0fdd1ec3dbc329f0b414682" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;integer#method-i-to_int&quot;&gt;&lt;code&gt;to_int&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;integer#method-i-to_i&quot;&gt;&lt;code&gt;to_i&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;integer#method-i-to_int&quot;&gt; &lt;code&gt;to_int&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;integer#method-i-to_i&quot;&gt; &lt;code&gt;to_i&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="44bc0d59e5cfe5112f39453bb263ec02c1c69f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; Open Mode</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 개방 모드</target>
        </trans-unit>
        <trans-unit id="3ad5bd240fb1628d11d2810c031608fbcd56ea0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; encoding example</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 인코딩 예</target>
        </trans-unit>
        <trans-unit id="014f4aebd8a099407ede5eea997e7e3940fbaad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4fd159b54172ed7fb107714de59182578cde2d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-c-copy_stream&quot;&gt;&lt;code&gt;IO.copy_stream&lt;/code&gt;&lt;/a&gt; copies &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt;. &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; is either a filename or an IO-like object. IO-like object for &lt;em&gt;src&lt;/em&gt; should have &lt;a href=&quot;io#method-i-readpartial&quot;&gt;&lt;code&gt;readpartial&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io#method-i-read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method. IO-like object for &lt;em&gt;dst&lt;/em&gt; should have &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method. (Specialized mechanisms, such as sendfile system call, may be used on appropriate situation.)</source>
          <target state="translated">&lt;a href=&quot;io#method-c-copy_stream&quot;&gt; &lt;code&gt;IO.copy_stream&lt;/code&gt; &lt;/a&gt; 은&lt;em&gt; src&lt;/em&gt; 를&lt;em&gt; dst&lt;/em&gt; 로&lt;em&gt; 복사&lt;/em&gt; 합니다.&lt;em&gt; src&lt;/em&gt; 및&lt;em&gt; dst&lt;/em&gt; 는 파일 이름 또는 IO와 유사한 객체입니다.&lt;em&gt; src에&lt;/em&gt; 대한 IO 류 객체에는&lt;a href=&quot;io#method-i-readpartial&quot;&gt; &lt;code&gt;readpartial&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;io#method-i-read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 메소드가 있어야합니다.&lt;em&gt; dst에&lt;/em&gt; 대한 IO 류 객체에는&lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메서드가 있어야합니다. (sendfile 시스템 호출과 같은 특수 메커니즘은 적절한 상황에서 사용될 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="b0b92561fba273baac1e159c55e54c78092e5647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-c-copy_stream&quot;&gt;&lt;code&gt;IO.copy_stream&lt;/code&gt;&lt;/a&gt; copies &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dst&lt;/em&gt;. &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; is either a filename or an IO-like object. IO-like object for &lt;em&gt;src&lt;/em&gt; should have &lt;code&gt;readpartial&lt;/code&gt; or &lt;code&gt;read&lt;/code&gt; method. IO-like object for &lt;em&gt;dst&lt;/em&gt; should have &lt;code&gt;write&lt;/code&gt; method. (Specialized mechanisms, such as sendfile system call, may be used on appropriate situation.)</source>
          <target state="translated">&lt;a href=&quot;io#method-c-copy_stream&quot;&gt; &lt;code&gt;IO.copy_stream&lt;/code&gt; &lt;/a&gt; 은&lt;em&gt; src&lt;/em&gt; 를&lt;em&gt; dst에 복사&lt;/em&gt; 합니다. &lt;em&gt;src&lt;/em&gt; 와&lt;em&gt; dst&lt;/em&gt; 는 파일 이름이거나 IO와 유사한 객체입니다. &lt;em&gt;src에&lt;/em&gt; 대한 IO 유사 오브젝트에는 &lt;code&gt;readpartial&lt;/code&gt; 또는 &lt;code&gt;read&lt;/code&gt; 메소드가 있어야합니다. &lt;em&gt;dst에&lt;/em&gt; 대한 IO 유사 오브젝트에는 &lt;code&gt;write&lt;/code&gt; 메소드가 있어야합니다. sendfile 시스템 호출과 같은 특수한 메커니즘이 적절한 상황에서 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9201c3ffbcaebe94e6d31c3c2acaaed25d563cb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt; is called by various &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; opening methods such as &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;IO::open&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;file#method-c-open&quot;&gt;&lt;code&gt;File::open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;io#method-c-new&quot;&gt; &lt;code&gt;IO.new&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;IO::open&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;kernel#method-i-open&quot;&gt; &lt;code&gt;Kernel#open&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;file#method-c-open&quot;&gt; &lt;code&gt;File::open&lt;/code&gt; &lt;/a&gt; 과같은다양한&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 열기 메소드에의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dc09cb374c03afa6d56beb4149675896cd35342d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-c-popen&quot;&gt;&lt;code&gt;IO.popen&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;open3&quot;&gt;&lt;code&gt;Open3&lt;/code&gt;&lt;/a&gt; library, or Process#spawn may also be used to communicate with subprocesses through an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;io#method-c-popen&quot;&gt; &lt;code&gt;IO.popen&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;open3&quot;&gt; &lt;code&gt;Open3&lt;/code&gt; &lt;/a&gt; 라이브러리 또는 Process # spawn은&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 를&lt;/a&gt; 통해 하위 프로세스와 통신하는 데 사용될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccebeae9526ff988c1a62548432a7b1d456bbc00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; peeks the buffer of &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects for testing readability. If the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; buffer is not empty, &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; immediately notifies readability. This &amp;ldquo;peek&amp;rdquo; only happens for &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects. It does not happen for IO-like objects such as &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 는가독성을 테스트하기 위해&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 개체의 버퍼를 엿봅니다. 경우&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 버퍼가 비어 있지&lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 즉시 가독성 통지합니다. 이 &quot;peek&quot;은&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 개체에대해서만 발생합니다. &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; &lt;/a&gt; 과 같은 IO와 유사한 객체에는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="251a2afeeaee1469ea7785e58211f0e6f658ecee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-i-raw-21&quot;&gt;&lt;code&gt;IO#raw!&lt;/code&gt;&lt;/a&gt; is usable to disable newline conversions:</source>
          <target state="translated">&lt;a href=&quot;io#method-i-raw-21&quot;&gt; &lt;code&gt;IO#raw!&lt;/code&gt; &lt;/a&gt;개행 변환을 비활성화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="229acd6fb89e1d933d716a6540b1a25ecd119b23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-i-read_nonblock&quot;&gt;&lt;code&gt;read_nonblock&lt;/code&gt;&lt;/a&gt; causes &lt;a href=&quot;eoferror&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; on EOF.</source>
          <target state="translated">&lt;a href=&quot;io#method-i-read_nonblock&quot;&gt; &lt;code&gt;read_nonblock&lt;/code&gt; &lt;/a&gt; 은EOF에서&lt;a href=&quot;eoferror&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 를발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="7f4831ade66d8a72fdd947fb9475569fb2f2a52a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-i-read_nonblock&quot;&gt;&lt;code&gt;read_nonblock&lt;/code&gt;&lt;/a&gt; just calls the read(2) system call. It causes all errors the read(2) system call causes: Errno::EWOULDBLOCK, Errno::EINTR, etc. The caller should care such errors.</source>
          <target state="translated">&lt;a href=&quot;io#method-i-read_nonblock&quot;&gt; &lt;code&gt;read_nonblock&lt;/code&gt; &lt;/a&gt; 은 read (2) 시스템 호출 만 호출합니다. read (2) 시스템 호출로 인해 발생하는 모든 오류는 Errno :: EWOULDBLOCK, Errno :: EINTR 등입니다. 호출자는 이러한 오류를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="ae8a44f6a929c9ccd9edc85affbb73cd4eb36bf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#method-i-write_nonblock&quot;&gt;&lt;code&gt;write_nonblock&lt;/code&gt;&lt;/a&gt; just calls the write(2) system call. It causes all errors the write(2) system call causes: Errno::EWOULDBLOCK, Errno::EINTR, etc. The result may also be smaller than string.length (partial write). The caller should care such errors and partial write.</source>
          <target state="translated">&lt;a href=&quot;io#method-i-write_nonblock&quot;&gt; &lt;code&gt;write_nonblock&lt;/code&gt; 은&lt;/a&gt; 단지 write (2) 시스템 호출을 호출합니다. write (2) 시스템 호출로 인한 모든 오류가 발생합니다. Errno :: EWOULDBLOCK, Errno :: EINTR 등. 결과는 string.length (부분 쓰기)보다 작을 수도 있습니다. 호출자는 이러한 오류와 부분 쓰기를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="73c1964063aa428dd2a95de795ccfea6c53f82b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ipaddr&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; provides a set of methods to manipulate an IP address. Both IPv4 and IPv6 are supported.</source>
          <target state="translated">&lt;a href=&quot;ipaddr&quot;&gt; &lt;code&gt;IPAddr&lt;/code&gt; &lt;/a&gt; 은 IP 주소를 조작하는 일련의 메소드를 제공합니다. IPv4와 IPv6이 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="27f96c47257a008e1325bd190c6ad5180cf1bae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ipsocket&quot;&gt;&lt;code&gt;IPSocket&lt;/code&gt;&lt;/a&gt; is the super class of &lt;a href=&quot;tcpsocket&quot;&gt;&lt;code&gt;TCPSocket&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;udpsocket&quot;&gt;&lt;code&gt;UDPSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ipsocket&quot;&gt; &lt;code&gt;IPSocket&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;tcpsocket&quot;&gt; &lt;code&gt;TCPSocket&lt;/code&gt; &lt;/a&gt; 과&lt;a href=&quot;udpsocket&quot;&gt; &lt;code&gt;UDPSocket&lt;/code&gt; &lt;/a&gt; 의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="93b23089395b494791cd83da3994de918cced066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ipv4&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; mapped &lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; address format a:b:c:d:e:f:w.x.y.z</source>
          <target state="translated">&lt;a href=&quot;ipv4&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt; 매핑 된&lt;a href=&quot;ipv6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt; 주소 형식 a : b : c : d : e : f : wxyz</target>
        </trans-unit>
        <trans-unit id="34f9a7d1dde5bbf5d88045011cb1d75651f4928e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; address format a:b:c:d:e:f:g:h</source>
          <target state="translated">&lt;a href=&quot;ipv6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt; 주소 형식 a : b : c : d : e : f : g : h</target>
        </trans-unit>
        <trans-unit id="5bfc459e2d7fbaafc8883885e65917e53e4e70be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; is a lightweight data-interchange format. It is easy for us humans to read and write. Plus, equally simple for machines to generate or parse. &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; is completely language agnostic, making it the ideal interchange format.</source>
          <target state="translated">&lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 은 간단한 데이터 교환 형식입니다. 우리 인간은 읽고 쓰는 것이 쉽습니다. 또한 머신이 생성하거나 파싱하는 것도 마찬가지로 간단합니다. &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 은 언어에 구애받지 않으므로 이상적인 교환 형식입니다.</target>
        </trans-unit>
        <trans-unit id="e2039045aaa66c614abf27e01652af2271d5e2cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; version</source>
          <target state="translated">&lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 버전</target>
        </trans-unit>
        <trans-unit id="3559067dc0e3d98066cde2b4dd68864d681e6a7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kdf&quot;&gt;&lt;code&gt;KDF&lt;/code&gt;&lt;/a&gt; is typically used for securely deriving arbitrary length symmetric keys to be used with an &lt;a href=&quot;cipher&quot;&gt;&lt;code&gt;OpenSSL::Cipher&lt;/code&gt;&lt;/a&gt; from passwords. Another use case is for storing passwords: Due to the ability to tweak the effort of computation by increasing the iteration count, computation can be slowed down artificially in order to render possible attacks infeasible.</source>
          <target state="translated">&lt;a href=&quot;kdf&quot;&gt; &lt;code&gt;KDF&lt;/code&gt; &lt;/a&gt; 는 일반적으로&lt;a href=&quot;cipher&quot;&gt; &lt;code&gt;OpenSSL::Cipher&lt;/code&gt; &lt;/a&gt; 에서 OpenSSL :: Cipher 와 함께 사용할 임의의 길이 대칭 키를 안전하게 파생시키는 데 사용됩니다. 또 다른 사용 사례는 암호를 저장하는 것입니다. 반복 횟수를 증가시켜 계산 노력을 조정할 수 있기 때문에 가능한 공격을 실현할 수 없도록 인위적으로 계산 속도를 늦출 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06cad97a804b76898d77babe0ef5ef56d30cce20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#method-i-gem&quot;&gt;&lt;code&gt;Kernel#gem&lt;/code&gt;&lt;/a&gt; only loads prerelease versions when prerelease &lt;code&gt;requirements&lt;/code&gt; are given:</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-gem&quot;&gt; &lt;code&gt;Kernel#gem&lt;/code&gt; &lt;/a&gt; #gem은시험판 &lt;code&gt;requirements&lt;/code&gt; 이 제공될 때 시험판 버전 만로드합니다.</target>
        </trans-unit>
        <trans-unit id="ec0a2d50261fad12c9bbbfb8243ad4de568dfa70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#method-i-gem&quot;&gt;&lt;code&gt;Kernel#gem&lt;/code&gt;&lt;/a&gt; returns true if the gem was activated, otherwise false. If the gem could not be found, didn't match the version requirements, or a different version was already activated, an exception will be raised.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-gem&quot;&gt; &lt;code&gt;Kernel#gem&lt;/code&gt; &lt;/a&gt;gem이 활성화 된 경우 Kernel # gem 는 true를 반환하고, 그렇지 않으면 false를 반환합니다. gem을 찾을 수 없거나 버전 요구 사항과 일치하지 않거나 다른 버전이 이미 활성화 된 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3248093f599c6bc768face23b19278c32c9d91a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#method-i-gem&quot;&gt;&lt;code&gt;Kernel#gem&lt;/code&gt;&lt;/a&gt; should be called &lt;strong&gt;before&lt;/strong&gt; any require statements (otherwise RubyGems may load a conflicting library version).</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-gem&quot;&gt; &lt;code&gt;Kernel#gem&lt;/code&gt; &lt;/a&gt; 는require 문&lt;strong&gt; 전에&lt;/strong&gt; 호출&lt;strong&gt; 해야&lt;/strong&gt; 합니다. 그렇지 않으면 RubyGem이 충돌하는 라이브러리 버전을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="717e7c18d060f95ff55505af38c8387d254e2dda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#method-i-srand&quot;&gt;&lt;code&gt;Kernel.srand&lt;/code&gt;&lt;/a&gt; may be used to ensure that sequences of random numbers are reproducible between different runs of a program.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-srand&quot;&gt; &lt;code&gt;Kernel.srand&lt;/code&gt; 를&lt;/a&gt; 사용하면 프로그램의 다른 실행간에 임의의 숫자 시퀀스를 재현 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f45a926bc498296120a44fa972f0bf0c6bfcf7b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lazy&quot;&gt;&lt;code&gt;Enumerator::Lazy&lt;/code&gt;&lt;/a&gt; can be constructed from any &lt;a href=&quot;../enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;../enumerable#method-i-lazy&quot;&gt;&lt;code&gt;Enumerable#lazy&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;lazy&quot;&gt; &lt;code&gt;Enumerator::Lazy&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;../enumerable#method-i-lazy&quot;&gt; &lt;code&gt;Enumerable#lazy&lt;/code&gt; &lt;/a&gt; 메서드를사용하여모든&lt;a href=&quot;../enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 에서 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5414c83c5eaef957a5610751aaee76b660aaf2c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lazy&quot;&gt;&lt;code&gt;Enumerator::Lazy&lt;/code&gt;&lt;/a&gt; is a special type of &lt;a href=&quot;../enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt;, that allows constructing chains of operations without evaluating them immediately, and evaluating values on as-needed basis. In order to do so it redefines most of &lt;a href=&quot;../enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; methods so that they just construct another lazy enumerator.</source>
          <target state="translated">&lt;a href=&quot;lazy&quot;&gt; &lt;code&gt;Enumerator::Lazy&lt;/code&gt; &lt;/a&gt; 는 특별한 유형의&lt;a href=&quot;../enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 로서, 즉시 평가하지 않고 작업 체인을 구성하고 필요에 따라 값을 평가할 수 있습니다. 그렇게하기 위해 대부분의&lt;a href=&quot;../enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 메서드를재정 의하여다른 lazy 열거자를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5c1276403de4e4edac81b60347805d910236b9e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;LDAP&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; SCHEMA (described in RFC2255).</source>
          <target state="translated">&lt;a href=&quot;ldap&quot;&gt; &lt;code&gt;LDAP&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; SCHEMA (RFC2255에 설명 됨).</target>
        </trans-unit>
        <trans-unit id="2a18103db554cef9fc01216ee9b383d9486d248d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;LDAP&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; SCHEMA (described in RFC2255).</source>
          <target state="translated">&lt;a href=&quot;ldap&quot;&gt; &lt;code&gt;LDAP&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; SCHEMA (RFC2255에 설명 됨).</target>
        </trans-unit>
        <trans-unit id="bb088667390448b2dce2da3121633a21803fd8cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; of all switches and summary string.</source>
          <target state="translated">&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;모든 스위치 및 요약 문자열 목록</target>
        </trans-unit>
        <trans-unit id="66707475c55cf90c15cfdb18bfe6d0cc09e8eba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; of long style options with &amp;ldquo;no-&amp;rdquo; prefix.</source>
          <target state="translated">&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;접두사가&amp;ldquo;no-&amp;rdquo;인 긴 스타일 옵션 목록 .</target>
        </trans-unit>
        <trans-unit id="863b8c51bd6ba28db10c55b7a6a3a04986f09d95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; of long style options.</source>
          <target state="translated">&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;긴 스타일 옵션 목록 .</target>
        </trans-unit>
        <trans-unit id="78db47610c422f10dd12476828cde4b362586064" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; of short style options.</source>
          <target state="translated">&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;짧은 스타일 옵션 목록 .</target>
        </trans-unit>
        <trans-unit id="408821099bde696674c6ecbcebd268fbc53e741d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Syslog::Logger&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; work-alike that logs via syslog instead of to a file. You can use &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Syslog::Logger&lt;/code&gt;&lt;/a&gt; to aggregate logs between multiple machines.</source>
          <target state="translated">&lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Syslog::Logger&lt;/code&gt; &lt;/a&gt; 는파일 대신 syslog를 통해 로그하는&lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; 와 유사합니다. &lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Syslog::Logger&lt;/code&gt; &lt;/a&gt; 를사용하여 여러 시스템간에 로그를 집계할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1592c875104b43a26e6571c1b1c930bcebfd4d6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;logger/severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt; label for logging (max 5 chars).</source>
          <target state="translated">&lt;a href=&quot;logger/severity&quot;&gt; &lt;code&gt;Severity&lt;/code&gt; &lt;/a&gt;로깅에 대한 심각도 레이블 (최대 5 자).</target>
        </trans-unit>
        <trans-unit id="d2a866d2abbf074a60839bab4610cda032369f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;logger/severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt;. Constants are defined in &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; namespace: &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;FATAL&lt;/code&gt;, or &lt;code&gt;UNKNOWN&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;logger/severity&quot;&gt; &lt;code&gt;Severity&lt;/code&gt; &lt;/a&gt; . 상수는&lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; 네임 스페이스 ( &lt;code&gt;DEBUG&lt;/code&gt; , &lt;code&gt;INFO&lt;/code&gt; , &lt;code&gt;WARN&lt;/code&gt; , &lt;code&gt;ERROR&lt;/code&gt; , &lt;code&gt;FATAL&lt;/code&gt; 또는 &lt;code&gt;UNKNOWN&lt;/code&gt; )에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc801231bfc245deaf4e9383b48d4a996efb1f0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lusolve&quot;&gt;LUSolve&lt;/a&gt;, &lt;a href=&quot;jacobian&quot;&gt;Jacobian&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lusolve&quot;&gt;루 콜브&lt;/a&gt; , &lt;a href=&quot;jacobian&quot;&gt;야 코비안&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9523d9c3b4304eeb6501ad8b86628a0aee0220c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; Format</source>
          <target state="translated">&lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt; 형식</target>
        </trans-unit>
        <trans-unit id="b32e32bd34daa250eb6a469063f7b8e68de6d4c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; can't dump following objects:</source>
          <target state="translated">&lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt; 는 다음과 같은 물건을 버릴 수 없습니다 :</target>
        </trans-unit>
        <trans-unit id="f7669d3b7cf5ff63b686aba85bd089c8cf16b53a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; the object to &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt;객체를&lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; 에&lt;/a&gt;마샬링 하십시오.</target>
        </trans-unit>
        <trans-unit id="e63ac81a3d95747944f00ecfdc5131d5d9137ab5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; encapsulates the result of matching a &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; against string. It is returned by &lt;a href=&quot;regexp#method-i-match&quot;&gt;&lt;code&gt;Regexp#match&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#method-i-match&quot;&gt;&lt;code&gt;String#match&lt;/code&gt;&lt;/a&gt;, and also stored in a global variable returned by &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; 과 문자열을 일치시킨 결과를 캡슐화합니다. 그것은에 의해 반환되는&lt;a href=&quot;regexp#method-i-match&quot;&gt; &lt;code&gt;Regexp#match&lt;/code&gt; &lt;/a&gt; 와&lt;a href=&quot;string#method-i-match&quot;&gt; &lt;code&gt;String#match&lt;/code&gt; &lt;/a&gt; , 또한에 의해 반환 된 글로벌 변수에 저장&lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="484b95e3e76c392a2819d684f71cbb13f47ee0ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matchplatform&quot;&gt;Bundler::MatchPlatform&lt;/a&gt;, &lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;matchplatform&quot;&gt;번 들러 :: MatchPlatform&lt;/a&gt; , &lt;a href=&quot;../comparable&quot;&gt;비교 가능&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="566372e6722777cb7aad562ea8e8c1575ecaecb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;math#method-c-lgamma&quot;&gt;&lt;code&gt;Math.lgamma(x)&lt;/code&gt;&lt;/a&gt; is same as</source>
          <target state="translated">&lt;a href=&quot;math#method-c-lgamma&quot;&gt; &lt;code&gt;Math.lgamma(x)&lt;/code&gt; &lt;/a&gt; 는</target>
        </trans-unit>
        <trans-unit id="2df5efd63a2d61878d69efcaa47318c66b3f5b98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matrix&quot;&gt;&lt;code&gt;Matrix&lt;/code&gt;&lt;/a&gt; addition.</source>
          <target state="translated">&lt;a href=&quot;matrix&quot;&gt; &lt;code&gt;Matrix&lt;/code&gt; &lt;/a&gt; 추가.</target>
        </trans-unit>
        <trans-unit id="02d49bd2639ac80b669528ac1a5a5a0039655e80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matrix&quot;&gt;&lt;code&gt;Matrix&lt;/code&gt;&lt;/a&gt; division (multiplication by the inverse).</source>
          <target state="translated">&lt;a href=&quot;matrix&quot;&gt; &lt;code&gt;Matrix&lt;/code&gt; &lt;/a&gt; 나누기 (역의 곱셈).</target>
        </trans-unit>
        <trans-unit id="b6fb023077441b945be98707a82c64771225d683" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matrix&quot;&gt;&lt;code&gt;Matrix&lt;/code&gt;&lt;/a&gt; exponentiation. Equivalent to multiplying the matrix by itself N times. Non integer exponents will be handled by diagonalizing the matrix.</source>
          <target state="translated">&lt;a href=&quot;matrix&quot;&gt; &lt;code&gt;Matrix&lt;/code&gt; &lt;/a&gt; 지수. 행렬 자체에 N 배를 곱한 것과 같습니다. 정수가 아닌 지수는 행렬을 대각선으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="7006edd5bec9c07ce577a810c0287428fb400f1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matrix&quot;&gt;&lt;code&gt;Matrix&lt;/code&gt;&lt;/a&gt; multiplication.</source>
          <target state="translated">&lt;a href=&quot;matrix&quot;&gt; &lt;code&gt;Matrix&lt;/code&gt; &lt;/a&gt; 곱셈.</target>
        </trans-unit>
        <trans-unit id="da8d0b62a51a93141f6925ceab62df7b80fa7ab6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matrix&quot;&gt;&lt;code&gt;Matrix&lt;/code&gt;&lt;/a&gt; subtraction.</source>
          <target state="translated">&lt;a href=&quot;matrix&quot;&gt; &lt;code&gt;Matrix&lt;/code&gt; &lt;/a&gt; 빼기.</target>
        </trans-unit>
        <trans-unit id="dfe113521597001e0728934eac55b8582768822a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;matrix#method-c-new&quot;&gt;&lt;code&gt;Matrix.new&lt;/code&gt;&lt;/a&gt; is private; use &lt;a href=&quot;matrix#method-c-rows&quot;&gt;&lt;code&gt;Matrix.rows&lt;/code&gt;&lt;/a&gt;, columns, [], etc&amp;hellip; to create.</source>
          <target state="translated">&lt;a href=&quot;matrix#method-c-new&quot;&gt; &lt;code&gt;Matrix.new&lt;/code&gt; &lt;/a&gt; 는 비공개입니다. 사용&lt;a href=&quot;matrix#method-c-rows&quot;&gt; &lt;code&gt;Matrix.rows&lt;/code&gt; 는&lt;/a&gt; , 열, [], 등 ... 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b89af038b95dcb771144411829b14b900dcfe19e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;md5&quot;&gt;&lt;code&gt;MD5&lt;/code&gt;&lt;/a&gt; calculates a digest of 128 bits (16 bytes).</source>
          <target state="translated">&lt;a href=&quot;md5&quot;&gt; &lt;code&gt;MD5&lt;/code&gt; &lt;/a&gt; 는 128 비트 (16 바이트)의 다이제스트를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="4658e8449958a22348309a6890ff51070d5cf380" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mdns&quot;&gt;&lt;code&gt;Resolv::MDNS&lt;/code&gt;&lt;/a&gt; is a one-shot Multicast &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; (mDNS) resolver. It blindly makes queries to the mDNS addresses without understanding anything about multicast ports.</source>
          <target state="translated">&lt;a href=&quot;mdns&quot;&gt; &lt;code&gt;Resolv::MDNS&lt;/code&gt; &lt;/a&gt; 는 원샷 멀티 캐스트&lt;a href=&quot;dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; (mDNS) 리졸버입니다. 멀티 캐스트 포트에 대한 이해없이 mDNS 주소에 대해 맹목적으로 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="83ae22e7ef676ccf302a93ecb44a39d5dcaf4017" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; Catalogue</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 카탈로그</target>
        </trans-unit>
        <trans-unit id="3347c094c79b32d5391159d5e1462b3218015a41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; Categories</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 카테고리</target>
        </trans-unit>
        <trans-unit id="aa82d4cdcf6faa9ef7e4c2df42d78928ca7e6872" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; calls made over dRuby behave largely the same as normal Ruby method calls made within a process. &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; calls with blocks are supported, as are raising exceptions. In addition to a method's standard errors, a dRuby call may also raise one of the dRuby-specific errors, all of which are subclasses of &lt;a href=&quot;drb/drberror&quot;&gt;&lt;code&gt;DRb::DRbError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 프로세스 내에서 정상 루비 메서드 호출로 거의 같은 dRuby 동작합니다을 통해 만들어 호출합니다. 예외가 발생하는 것처럼 블록이있는&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 호출이 지원됩니다. 메서드의 표준 오류 외에도 dRuby 호출은 dRuby 관련 오류 중 하나를 발생시킬 수 있으며,이 오류는 모두&lt;a href=&quot;drb/drberror&quot;&gt; &lt;code&gt;DRb::DRbError&lt;/code&gt; &lt;/a&gt; 하위 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4ac99aa213a27b1ac630f286e31bde0c14383253" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; documentation</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 문서</target>
        </trans-unit>
        <trans-unit id="e17589ad634695125d685e027024b7e3cee0d430" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; objects are created by &lt;a href=&quot;object#method-i-method&quot;&gt;&lt;code&gt;Object#method&lt;/code&gt;&lt;/a&gt;, and are associated with a particular object (not just with a class). They may be used to invoke the method within the object, and as a block associated with an iterator. They may also be unbound from one object (creating an &lt;a href=&quot;unboundmethod&quot;&gt;&lt;code&gt;UnboundMethod&lt;/code&gt;&lt;/a&gt;) and bound to another.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 개체는&lt;a href=&quot;object#method-i-method&quot;&gt; &lt;code&gt;Object#method&lt;/code&gt; 에&lt;/a&gt; 의해 생성되며클래스뿐만 아니라 특정 개체와 연결됩니다. 객체 내에서 메서드를 호출하는 데 사용할 수 있으며 반복기와 관련된 블록으로 사용할 수 있습니다. 또한 한 개체에서 바인딩 해제되고 (&lt;a href=&quot;unboundmethod&quot;&gt; &lt;code&gt;UnboundMethod&lt;/code&gt; &lt;/a&gt; 생성) 다른 개체에 바인딩 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ec020e01482c074dfe3d0d93374cd5d1ca90eb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; objects are created by &lt;code&gt;Object#method&lt;/code&gt;, and are associated with a particular object (not just with a class). They may be used to invoke the method within the object, and as a block associated with an iterator. They may also be unbound from one object (creating an &lt;code&gt;UnboundMethod&lt;/code&gt;) and bound to another.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 객체는 &lt;code&gt;Object#method&lt;/code&gt; 에 의해 생성되며클래스뿐만 아니라 특정 객체와 연결됩니다. 그것들은 객체 내에서 메소드를 호출하고 반복자와 관련된 블록으로 사용될 수 있습니다. 그것들은 또한 하나의 객체에서 언 바운드되어 ( &lt;code&gt;UnboundMethod&lt;/code&gt; 생성) 다른 객체에 바인딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0117712d37d25c85e6e93fa5dac0259724e3b52f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; used to provide marshalling support.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;마샬링 지원을 제공하는 데 사용되는 방법 .</target>
        </trans-unit>
        <trans-unit id="806d9e021b0690ecc9ad4db62c61beb37d649a90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mlsxentry&quot;&gt;&lt;code&gt;MLSxEntry&lt;/code&gt;&lt;/a&gt; represents an entry in responses of MLST/MLSD. Each entry has the facts (e.g., size, last modification time, etc.) and the pathname.</source>
          <target state="translated">&lt;a href=&quot;mlsxentry&quot;&gt; &lt;code&gt;MLSxEntry&lt;/code&gt; &lt;/a&gt; 는 MLST / MLSD의 응답 항목을 나타냅니다. 각 항목에는 사실 (예 : 크기, 마지막 수정 시간 등)과 경로 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a19266bb94178302efe10cb877db379ee3e83822" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; Functions</source>
          <target state="translated">&lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; 기능</target>
        </trans-unit>
        <trans-unit id="04b488e4e79b12acf211af5530fb898e1c4cbdc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; and Old &lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; 및 기존&lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1c3b8dbe07b9261314e7c9afa8d99b14aecd383" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; to handle processes.</source>
          <target state="translated">&lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;프로세스를 처리하는 모듈 .</target>
        </trans-unit>
        <trans-unit id="2d97229232391d1887fbd919f245db2abfd32dee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;molinillo&quot;&gt;&lt;code&gt;Bundler::Molinillo&lt;/code&gt;&lt;/a&gt; is a generic dependency resolution algorithm.</source>
          <target state="translated">&lt;a href=&quot;molinillo&quot;&gt; &lt;code&gt;Bundler::Molinillo&lt;/code&gt; &lt;/a&gt; 는 일반적인 의존성 해결 알고리즘입니다.</target>
        </trans-unit>
        <trans-unit id="e3b3cc39ab98f12ceb3234c461c6d26bc74da2ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;molinillo/ui&quot;&gt;Bundler::Molinillo::UI&lt;/a&gt;, &lt;a href=&quot;molinillo/specificationprovider&quot;&gt;Bundler::Molinillo::SpecificationProvider&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;molinillo/ui&quot;&gt;번 들러 :: Molinillo :: UI&lt;/a&gt; , 번 &lt;a href=&quot;molinillo/specificationprovider&quot;&gt;들러 :: Molinillo :: SpecificationProvider&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40f05d022dd494f10d9f0c65626079b2198da6a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; implements a simple semaphore that can be used to coordinate access to shared data from multiple concurrent threads.</source>
          <target state="translated">&lt;a href=&quot;mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; 는 여러 개의 동시 스레드에서 공유 데이터에 대한 액세스를 조정하는 데 사용할 수있는 간단한 세마포어를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="7f22809fce682a1716aa5a3712f2d6dc5ebf9ada" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex#method-i-lock&quot;&gt;&lt;code&gt;Mutex#lock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mutex#method-i-synchronize&quot;&gt;&lt;code&gt;Mutex#synchronize&lt;/code&gt;&lt;/a&gt; and any code using them are explicitly unsafe. This includes &lt;a href=&quot;monitor&quot;&gt;&lt;code&gt;Monitor&lt;/code&gt;&lt;/a&gt; in the standard library which uses &lt;a href=&quot;mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; to provide reentrancy.</source>
          <target state="translated">&lt;a href=&quot;mutex#method-i-lock&quot;&gt; &lt;code&gt;Mutex#lock&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;mutex#method-i-synchronize&quot;&gt; &lt;code&gt;Mutex#synchronize&lt;/code&gt; &lt;/a&gt; 및 이들을 사용하는 모든 코드는 명시 적으로 안전하지 않습니다. 여기에는&lt;a href=&quot;mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; 를 사용하여 재진입을 제공하는 표준 라이브러리의&lt;a href=&quot;monitor&quot;&gt; &lt;code&gt;Monitor&lt;/code&gt; &lt;/a&gt; 가포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c1dffbda130624daa3badcc45e09390c15d3409f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex#method-i-lock&quot;&gt;&lt;code&gt;Mutex#lock&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mutex#method-i-synchronize&quot;&gt;&lt;code&gt;Mutex#synchronize&lt;/code&gt;&lt;/a&gt; and any code using them are explicitly unsafe. This includes Monitor in the standard library which uses &lt;a href=&quot;mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; to provide reentrancy.</source>
          <target state="translated">&lt;a href=&quot;mutex#method-i-lock&quot;&gt; &lt;code&gt;Mutex#lock&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;mutex#method-i-synchronize&quot;&gt; &lt;code&gt;Mutex#synchronize&lt;/code&gt; &lt;/a&gt; 및이를 사용하는 모든 코드는 명시 적으로 안전하지 않습니다. 여기에는&lt;a href=&quot;mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; 를 사용하여 재진입을 제공하는 표준 라이브러리의 모니터가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f684c98eb83ec36737c6265778ecc01ea6aaf429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;netscape&quot;&gt;&lt;code&gt;OpenSSL::Netscape&lt;/code&gt;&lt;/a&gt; is a namespace for &lt;a href=&quot;netscape/spki&quot;&gt;&lt;code&gt;SPKI&lt;/code&gt;&lt;/a&gt; (Simple Public Key Infrastructure) which implements Signed Public Key and Challenge. See &lt;a href=&quot;http://tools.ietf.org/html/rfc2692&quot;&gt;RFC 2692&lt;/a&gt; and &lt;a href=&quot;http://tools.ietf.org/html/rfc2692&quot;&gt;RFC 2693&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;netscape&quot;&gt; &lt;code&gt;OpenSSL::Netscape&lt;/code&gt; &lt;/a&gt; 는서명 된 공개 키 및 챌린지를 구현하는&lt;a href=&quot;netscape/spki&quot;&gt; &lt;code&gt;SPKI&lt;/code&gt; &lt;/a&gt; (Simple Public Key Infrastructure)의 네임 스페이스입니다. 자세한 내용은&lt;a href=&quot;http://tools.ietf.org/html/rfc2692&quot;&gt; RFC 2692&lt;/a&gt; 및&lt;a href=&quot;http://tools.ietf.org/html/rfc2692&quot;&gt; RFC 2693&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="56f8e3b950ec68ca7827535fc2a154c15ff53d4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;node&quot;&gt;&lt;code&gt;RubyVM::AbstractSyntaxTree::Node&lt;/code&gt;&lt;/a&gt; instances are created by parse methods in &lt;a href=&quot;../abstractsyntaxtree&quot;&gt;&lt;code&gt;RubyVM::AbstractSyntaxTree&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;node&quot;&gt; &lt;code&gt;RubyVM::AbstractSyntaxTree::Node&lt;/code&gt; &lt;/a&gt; 인스턴스는&lt;a href=&quot;../abstractsyntaxtree&quot;&gt; &lt;code&gt;RubyVM::AbstractSyntaxTree&lt;/code&gt; &lt;/a&gt; 구문 분석 메소드로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="23a07fb64392d66db662fe032f9610906010c9bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is raised if the underlying operating system does not support &lt;em&gt;fsync(2)&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;notimplementederror&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;기본 운영 체제가&lt;em&gt; fsync (2)를&lt;/em&gt; 지원하지 않으면 NotImplementedError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="febe37e2b6427a0dc3d84d6eeecba91c3a0bcd73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; &amp;ndash; Any integer, float, or rational (1, 3.4, 1/3)</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; &amp;ndash; 모든 정수, 부동 또는 합리적인 (1, 3.4, 1/3)</target>
        </trans-unit>
        <trans-unit id="e9f3b8773122e23a9564a2e3791d4915fea05c88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; allows instantiation of heap-allocated objects. Other core numeric classes such as &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; are implemented as immediates, which means that each &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; is a single immutable object which is always passed by value.</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 는 힙 할당 객체의 인스턴스화를 허용합니다. &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 와 같은 다른 핵심 숫자 클래스는 즉시로 구현됩니다. 즉, 각&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 는 항상 값으로 전달되는 단일 불변 개체입니다.</target>
        </trans-unit>
        <trans-unit id="e16a3eb2a05aab8b4e834c8efe2767e7a1eff5c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; implements this by converting its value to a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; and invoking &lt;a href=&quot;float#method-i-ceil&quot;&gt;&lt;code&gt;Float#ceil&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 은 값을&lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 로 변환하고&lt;a href=&quot;float#method-i-ceil&quot;&gt; &lt;code&gt;Float#ceil&lt;/code&gt; 을&lt;/a&gt; 호출하여이를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="779f2c3added11bd0c574ed389ac2ca324620ba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; implements this by converting its value to a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; and invoking &lt;a href=&quot;float#method-i-floor&quot;&gt;&lt;code&gt;Float#floor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 은 값을&lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 로 변환하고&lt;a href=&quot;float#method-i-floor&quot;&gt; &lt;code&gt;Float#floor&lt;/code&gt; 를&lt;/a&gt; 호출하여이를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="31669d825b04088a6fee0345db08dc03521b8424" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; implements this by converting its value to a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; and invoking &lt;a href=&quot;float#method-i-round&quot;&gt;&lt;code&gt;Float#round&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 은 값을&lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 로 변환하고&lt;a href=&quot;float#method-i-round&quot;&gt; &lt;code&gt;Float#round&lt;/code&gt; 를&lt;/a&gt; 호출하여이를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="c139a0145bb2a551eee0e68aef03192c2333cae4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; implements this by converting its value to a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; and invoking &lt;a href=&quot;float#method-i-truncate&quot;&gt;&lt;code&gt;Float#truncate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 은 값을&lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 로 변환하고&lt;a href=&quot;float#method-i-truncate&quot;&gt; &lt;code&gt;Float#truncate&lt;/code&gt; 를&lt;/a&gt; 호출하여이를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="de87585e0e4a2cf6c7736e7c3aac26aba2f27213" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; is the class from which all higher-level numeric classes should inherit.</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 는 모든 상위 숫자 숫자 클래스가 상속해야하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="926a2efad2092ff72293e1bb3392f73cf1fb5b51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; time zones that include minutes, such as &lt;code&gt;-10:00&lt;/code&gt; or &lt;code&gt;+1330&lt;/code&gt; will work, as will simpler hour-only time zones like &lt;code&gt;-10&lt;/code&gt; or &lt;code&gt;+13&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-10:00&lt;/code&gt; 또는 &lt;code&gt;+1330&lt;/code&gt; 과 같이 분을 포함하는 숫자 시간대가 작동하며 &lt;code&gt;-10&lt;/code&gt; 또는 &lt;code&gt;+13&lt;/code&gt; 과 같은 더 단순한 시간 전용 시간대가 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4e184f9a8c0ea74d3964662d3ed1c0278641d74e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numeric#method-i-magnitude&quot;&gt;&lt;code&gt;Numeric#magnitude&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;numeric#method-i-abs&quot;&gt;&lt;code&gt;Numeric#abs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numeric#method-i-magnitude&quot;&gt; &lt;code&gt;Numeric#magnitude&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;numeric#method-i-abs&quot;&gt; &lt;code&gt;Numeric#abs&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="07393266a3b6c7e5ca70f9891cd8796b681d3869" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; References</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="137a328d1705f6b2605cffe650286f0bde1ae6a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; is the default root of all Ruby objects. &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; inherits from &lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; which allows creating alternate object hierarchies. Methods on &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; are available to all classes unless explicitly overridden.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 는 모든 Ruby 객체의 기본 루트입니다. 대체 객체 계층을 생성 할 수있는&lt;a href=&quot;basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 에서&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 상속합니다. 명시 적으로 재정의되지 않는 한 모든 클래스에서&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;/a&gt; 메소드를사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="421e6d558a93122c40ca0fd2b2d0bc25fed3429a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; mixes in the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module, making the built-in kernel functions globally accessible. Although the instance methods of &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; are defined by the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module, we have chosen to document them here for clarity.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 모듈에서 객체가 혼합되어내장 커널 기능을 전역 적으로 액세스 할 수 있습니다. &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 의 인스턴스 메소드는&lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 모듈에의해 정의되지만명확성을 위해 여기에 문서화하기로 선택했습니다.</target>
        </trans-unit>
        <trans-unit id="35a4480eaf70f552bb8f4e8eca4440f787f28aa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#ARGV&quot;&gt;&lt;code&gt;ARGV&lt;/code&gt;&lt;/a&gt; contains the command line arguments used to run ruby.</source>
          <target state="translated">&lt;a href=&quot;object#ARGV&quot;&gt; &lt;code&gt;ARGV&lt;/code&gt; &lt;/a&gt; 에는 루비를 실행하는 데 사용되는 명령 줄 인수가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9ed5b822c21806ff697e12ead39a4999ada1c86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#DATA&quot;&gt;&lt;code&gt;DATA&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; that contains the data section of the executed file. To create a data section use &lt;code&gt;__END__&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;object#DATA&quot;&gt; &lt;code&gt;DATA&lt;/code&gt; 는&lt;/a&gt; A는&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 실행 된 파일의 데이터 섹션이 포함되어 있습니다. 데이터 섹션을 만들려면 &lt;code&gt;__END__&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="30db85b3195a3959be23fd0466b43c0661e2a074" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; also provides support for object finalizers, procs that will be called when a specific object is about to be destroyed by garbage collection.</source>
          <target state="translated">&lt;a href=&quot;objectspace&quot;&gt; &lt;code&gt;ObjectSpace&lt;/code&gt; &lt;/a&gt;또한 ObjectSpace 는 가비지 수집에 의해 특정 객체가 소멸 될 때 호출되는 객체 종료자를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9de1f0676d3bdd8e060abf70e87f8cccae202702" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ocsp&quot;&gt;&lt;code&gt;OpenSSL::OCSP&lt;/code&gt;&lt;/a&gt; implements Online Certificate Status Protocol requests and responses.</source>
          <target state="translated">&lt;a href=&quot;ocsp&quot;&gt; &lt;code&gt;OpenSSL::OCSP&lt;/code&gt; &lt;/a&gt; 는 온라인 인증서 상태 프로토콜 요청 및 응답을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="a9ba9f97a720b437ad0f1329f7bd97500e72434c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ocsp/response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; has valid confirmations</source>
          <target state="translated">&lt;a href=&quot;ocsp/response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 에 유효한 확인이 있습니다</target>
        </trans-unit>
        <trans-unit id="2c2c3904cd46c6dff33f61a36a4c31678e8d917e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3&quot;&gt;&lt;code&gt;Open3&lt;/code&gt;&lt;/a&gt; grants you access to stdin, stdout, stderr and a thread to wait for the child process when running another program. You can specify various attributes, redirections, current directory, etc., of the program in the same way as for &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;open3&quot;&gt; &lt;code&gt;Open3&lt;/code&gt; &lt;/a&gt; 은 다른 프로그램을 실행할 때 자식 프로세스를 기다리는 stdin, stdout, stderr 및 스레드에 대한 액세스 권한을 부여합니다. &lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;Process.spawn&lt;/code&gt; &lt;/a&gt; 과 같은 방식으로 프로그램의 다양한 속성, 리디렉션, 현재 디렉토리 등을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d71773211f987ae86875af105d05a3fcc21fdb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-capture2&quot;&gt;&lt;code&gt;Open3.capture2&lt;/code&gt;&lt;/a&gt; : give a string for stdin; get a string for stdout</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-capture2&quot;&gt; &lt;code&gt;Open3.capture2&lt;/code&gt; &lt;/a&gt; : stdin에 대한 문자열을 제공합니다. stdout에 대한 문자열을 얻을</target>
        </trans-unit>
        <trans-unit id="8e15aef13f41a2bfeef55956b8266698b1bba140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-capture2&quot;&gt;&lt;code&gt;Open3.capture2&lt;/code&gt;&lt;/a&gt; captures the standard output of a command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-capture2&quot;&gt; &lt;code&gt;Open3.capture2&lt;/code&gt; &lt;/a&gt; 는 명령의 표준 출력을 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="db96bb44e9498bffe5b63b6c97797d0df3e42d0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-capture2e&quot;&gt;&lt;code&gt;Open3.capture2e&lt;/code&gt;&lt;/a&gt; : give a string for stdin; get a string for merged stdout and stderr</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-capture2e&quot;&gt; &lt;code&gt;Open3.capture2e&lt;/code&gt; &lt;/a&gt; : stdin에 대한 문자열을 제공합니다. 병합 된 stdout 및 stderr에 대한 문자열을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="0c08802f362880e72e808cace0482060b58519db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-capture2e&quot;&gt;&lt;code&gt;Open3.capture2e&lt;/code&gt;&lt;/a&gt; captures the standard output and the standard error of a command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-capture2e&quot;&gt; &lt;code&gt;Open3.capture2e&lt;/code&gt; &lt;/a&gt; 는 표준 출력과 명령의 표준 오류를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="6cccb7e49843aa2da06a90e961ea2f6894207b8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-capture3&quot;&gt;&lt;code&gt;Open3.capture3&lt;/code&gt;&lt;/a&gt; : give a string for stdin; get strings for stdout, stderr</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-capture3&quot;&gt; &lt;code&gt;Open3.capture3&lt;/code&gt; &lt;/a&gt; : stdin에 대한 문자열을 제공합니다. stdout, stderr에 대한 문자열 가져 오기</target>
        </trans-unit>
        <trans-unit id="32fa8c9a5ea85f1ae1d4755cc82f3abf9e9004db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-capture3&quot;&gt;&lt;code&gt;Open3.capture3&lt;/code&gt;&lt;/a&gt; captures the standard output and the standard error of a command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-capture3&quot;&gt; &lt;code&gt;Open3.capture3&lt;/code&gt; &lt;/a&gt; 은 표준 출력과 명령의 표준 오류를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="c5a9a2dd6334164bc7d5d8a3e8aa2dfa11cc0630" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline&quot;&gt;&lt;code&gt;Open3.pipeline&lt;/code&gt;&lt;/a&gt; : run a pipeline and wait for its completion</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline&quot;&gt; &lt;code&gt;Open3.pipeline&lt;/code&gt; &lt;/a&gt; : 파이프 라인을 실행하고 완료를 기다립니다</target>
        </trans-unit>
        <trans-unit id="8bf37579fde506e2d9146bb3931f69661fc5d138" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline&quot;&gt;&lt;code&gt;Open3.pipeline&lt;/code&gt;&lt;/a&gt; starts a list of commands as a pipeline. It waits for the completion of the commands. No pipes are created for stdin of the first command and stdout of the last command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline&quot;&gt; &lt;code&gt;Open3.pipeline&lt;/code&gt; &lt;/a&gt; 은 명령 목록을 파이프 라인으로 시작합니다. 명령 완료를 기다립니다. 첫 번째 명령의 stdin과 마지막 명령의 stdout에 대해 파이프가 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="802b66fc8e96061c76828ed5b885ee1659de1c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_r&quot;&gt;&lt;code&gt;Open3.pipeline_r&lt;/code&gt;&lt;/a&gt; : pipe for last stdout of a pipeline</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_r&quot;&gt; &lt;code&gt;Open3.pipeline_r&lt;/code&gt; &lt;/a&gt; : 파이프 라인의 마지막 표준 출력을위한 파이프</target>
        </trans-unit>
        <trans-unit id="db05ad991fca5478dee1efbccf0fc01201b8d5bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_r&quot;&gt;&lt;code&gt;Open3.pipeline_r&lt;/code&gt;&lt;/a&gt; starts a list of commands as a pipeline with a pipe which connects to stdout of the last command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_r&quot;&gt; &lt;code&gt;Open3.pipeline_r&lt;/code&gt; &lt;/a&gt; 은 마지막 명령의 stdout에 연결되는 파이프가있는 파이프 라인으로 명령 목록을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="1656951349306f80eb22c71c249182be08eafa4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_rw&quot;&gt;&lt;code&gt;Open3.pipeline_rw&lt;/code&gt;&lt;/a&gt; : pipes for first stdin and last stdout of a pipeline</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_rw&quot;&gt; &lt;code&gt;Open3.pipeline_rw&lt;/code&gt; &lt;/a&gt; : 파이프 라인의 첫 번째 stdin 및 마지막 stdout 용 파이프</target>
        </trans-unit>
        <trans-unit id="9f2bc312ac17f2130e7f9ec9e8162e19247a793c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_rw&quot;&gt;&lt;code&gt;Open3.pipeline_rw&lt;/code&gt;&lt;/a&gt; starts a list of commands as a pipeline with pipes which connect to stdin of the first command and stdout of the last command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_rw&quot;&gt; &lt;code&gt;Open3.pipeline_rw&lt;/code&gt; &lt;/a&gt; 는 첫 번째 명령의 stdin과 마지막 명령의 stdout에 연결되는 파이프가있는 파이프 라인으로 명령 목록을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="bdb6a3ebc0cad65a14c0a063516a75194f09700f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_start&quot;&gt;&lt;code&gt;Open3.pipeline_start&lt;/code&gt;&lt;/a&gt; : run a pipeline without waiting</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_start&quot;&gt; &lt;code&gt;Open3.pipeline_start&lt;/code&gt; &lt;/a&gt; : 기다리지 않고 파이프 라인을 실행</target>
        </trans-unit>
        <trans-unit id="c7efa17fa6296226c9962486df7fd12ef1088b69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_start&quot;&gt;&lt;code&gt;Open3.pipeline_start&lt;/code&gt;&lt;/a&gt; starts a list of commands as a pipeline. No pipes are created for stdin of the first command and stdout of the last command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_start&quot;&gt; &lt;code&gt;Open3.pipeline_start&lt;/code&gt; &lt;/a&gt; 는 명령 목록을 파이프 라인으로 시작합니다. 첫 번째 명령의 stdin과 마지막 명령의 stdout에 대해 파이프가 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="95405f77c4144b811442fef4df6526bf87a021d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_w&quot;&gt;&lt;code&gt;Open3.pipeline_w&lt;/code&gt;&lt;/a&gt; : pipe for first stdin of a pipeline</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_w&quot;&gt; &lt;code&gt;Open3.pipeline_w&lt;/code&gt; &lt;/a&gt; : 파이프 라인의 첫 번째 stdin을위한 파이프</target>
        </trans-unit>
        <trans-unit id="8031958aaebecdfdd37c33f7ef220f284eebc1dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-pipeline_w&quot;&gt;&lt;code&gt;Open3.pipeline_w&lt;/code&gt;&lt;/a&gt; starts a list of commands as a pipeline with a pipe which connects to stdin of the first command.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-pipeline_w&quot;&gt; &lt;code&gt;Open3.pipeline_w&lt;/code&gt; &lt;/a&gt; 는 첫 번째 명령의 stdin에 연결되는 파이프가있는 파이프 라인으로 명령 목록을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a8599df61a876e505d51943d63fd8d0a7f5a45b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-popen2&quot;&gt;&lt;code&gt;Open3.popen2&lt;/code&gt;&lt;/a&gt; : pipes for stdin, stdout</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-popen2&quot;&gt; &lt;code&gt;Open3.popen2&lt;/code&gt; &lt;/a&gt; : stdin, stdout 용 파이프</target>
        </trans-unit>
        <trans-unit id="8392e3fc86c14d4dc01eef3e1a1bdf39a71a2af5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-popen2&quot;&gt;&lt;code&gt;Open3.popen2&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;open3#method-c-popen3&quot;&gt;&lt;code&gt;Open3.popen3&lt;/code&gt;&lt;/a&gt; except that it doesn't create a pipe for the standard error stream.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-popen2&quot;&gt; &lt;code&gt;Open3.popen2&lt;/code&gt; &lt;/a&gt; 는표준 오류 스트림에 대한 파이프를 생성하지 않는다는 점을 제외하고&lt;a href=&quot;open3#method-c-popen3&quot;&gt; &lt;code&gt;Open3.popen3&lt;/code&gt; &lt;/a&gt; 과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="eb5ec8ec70df2d9255044eaebb4de1fa4177fc43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-popen2e&quot;&gt;&lt;code&gt;Open3.popen2e&lt;/code&gt;&lt;/a&gt; : pipes for stdin, merged stdout and stderr</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-popen2e&quot;&gt; &lt;code&gt;Open3.popen2e&lt;/code&gt; &lt;/a&gt; : 표준 stdin, 병합 stdout 및 stderr 용 파이프</target>
        </trans-unit>
        <trans-unit id="7a1f4560c10be0c9328d83f90286d2fb2e8a1f52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-popen2e&quot;&gt;&lt;code&gt;Open3.popen2e&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;open3#method-c-popen3&quot;&gt;&lt;code&gt;Open3.popen3&lt;/code&gt;&lt;/a&gt; except that it merges the standard output stream and the standard error stream.</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-popen2e&quot;&gt; &lt;code&gt;Open3.popen2e&lt;/code&gt; &lt;/a&gt; 는표준 출력 스트림과 표준 오류 스트림을 병합&lt;a href=&quot;open3#method-c-popen3&quot;&gt; &lt;code&gt;Open3.popen3&lt;/code&gt; &lt;/a&gt; 점을 제외하고 Open3.popen3 과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="bc4d37bee56d7a2ac8527a8279b4b4645b722615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;open3#method-c-popen3&quot;&gt;&lt;code&gt;Open3.popen3&lt;/code&gt;&lt;/a&gt; : pipes for stdin, stdout, stderr</source>
          <target state="translated">&lt;a href=&quot;open3#method-c-popen3&quot;&gt; &lt;code&gt;Open3.popen3&lt;/code&gt; &lt;/a&gt; : stdin, stdout, stderr 용 파이프</target>
        </trans-unit>
        <trans-unit id="fbd7c5a4b48a1a18b92e799b979dcda426221f99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openread#method-i-open&quot;&gt;&lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt;&lt;/a&gt; provides `open' for &lt;a href=&quot;../uri/http&quot;&gt;&lt;code&gt;URI::HTTP&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../uri/ftp&quot;&gt;&lt;code&gt;URI::FTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;openread#method-i-open&quot;&gt; &lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;../uri/http&quot;&gt; &lt;code&gt;URI::HTTP&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../uri/ftp&quot;&gt; &lt;code&gt;URI::FTP&lt;/code&gt; &lt;/a&gt; 'open'을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="001a193f7ef5b1ff96f9fb13942706f24cf9fafe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openread#method-i-open&quot;&gt;&lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt;&lt;/a&gt; returns an IO-like object if block is not given. Otherwise it yields the &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object and return the value of the block. The &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object is extended with &lt;a href=&quot;meta&quot;&gt;&lt;code&gt;OpenURI::Meta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;openread#method-i-open&quot;&gt; &lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt; &lt;/a&gt; 은 블록이 제공되지 않으면 IO와 유사한 객체를 반환합니다. 그렇지 않으면&lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체를생성하고 블록 값을 반환합니다. &lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 의&lt;/a&gt; 객체로 확장&lt;a href=&quot;meta&quot;&gt; &lt;code&gt;OpenURI::Meta&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="340470a0e137b6888cf03c128e610e20493ba04a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openread#method-i-open&quot;&gt;&lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt;&lt;/a&gt; takes optional 3 arguments as:</source>
          <target state="translated">&lt;a href=&quot;openread#method-i-open&quot;&gt; &lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt; &lt;/a&gt; 은 다음과 같은 선택적 3 개의 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="405c9a94e6cfab5f5979fdf636f0b034d4836767" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openread#method-i-read&quot;&gt;&lt;code&gt;OpenURI::OpenRead#read(&lt;/code&gt;&lt;/a&gt;) reads a content referenced by self and returns the content as string. The string is extended with &lt;a href=&quot;meta&quot;&gt;&lt;code&gt;OpenURI::Meta&lt;/code&gt;&lt;/a&gt;. The argument &lt;code&gt;options&lt;/code&gt; is same as &lt;a href=&quot;openread#method-i-open&quot;&gt;&lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;openread#method-i-read&quot;&gt; &lt;code&gt;OpenURI::OpenRead#read(&lt;/code&gt; &lt;/a&gt; )는 self가 참조하는 컨텐츠를 읽고 컨텐츠를 문자열로 리턴합니다. 문자열은&lt;a href=&quot;meta&quot;&gt; &lt;code&gt;OpenURI::Meta&lt;/code&gt; &lt;/a&gt; 확장됩니다. 인수 &lt;code&gt;options&lt;/code&gt; 은&lt;a href=&quot;openread#method-i-open&quot;&gt; &lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9811c371b1bee656f360fe70cda156ededa44eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; provides &lt;a href=&quot;openssl/ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt;, TLS and general purpose cryptography. It wraps the &lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; library.</source>
          <target state="translated">&lt;a href=&quot;openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;openssl/ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; , TLS 및 범용 암호화를제공 합니다 . &lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; 라이브러리를래핑합니다.</target>
        </trans-unit>
        <trans-unit id="92585f7242ce786510b8098cb31c6b0079e1e951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; ruby extension version</source>
          <target state="translated">&lt;a href=&quot;openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 루비 확장 버전</target>
        </trans-unit>
        <trans-unit id="a2b954f344a6fe1119d31d31bf4841add4d1a26e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; will prompt you for your pass phrase when loading an encrypted key. If you will not be able to type in the pass phrase you may provide it when loading the key:</source>
          <target state="translated">&lt;a href=&quot;openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt;암호화 된 키를로드 할 때 OpenSSL 에서 암호 문구를 입력하라는 메시지를 표시합니다. 암호 문구를 입력 할 수없는 경우 키를로드 할 때 암호 문구를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12b5710c860e782e5e5cd9f602d44be4b9ad406a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl/cipher#method-c-ciphers&quot;&gt;&lt;code&gt;OpenSSL::Cipher.ciphers&lt;/code&gt;&lt;/a&gt; returns a list of available ciphers.</source>
          <target state="translated">&lt;a href=&quot;openssl/cipher#method-c-ciphers&quot;&gt; &lt;code&gt;OpenSSL::Cipher.ciphers&lt;/code&gt; &lt;/a&gt; 는 사용 가능한 암호 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e4925b0c3370358b789dd4d091454236293530ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl/pkcs5&quot;&gt;&lt;code&gt;PKCS5&lt;/code&gt;&lt;/a&gt; supports PBKDF2 as it was specified in PKCS#5 &lt;a href=&quot;http://www.rsa.com/rsalabs/node.asp?id=2127&quot;&gt;v2.0&lt;/a&gt;. It still uses a password, a salt, and additionally a number of iterations that will slow the key derivation process down. The slower this is, the more work it requires being able to brute-force the resulting key.</source>
          <target state="translated">&lt;a href=&quot;openssl/pkcs5&quot;&gt; &lt;code&gt;PKCS5&lt;/code&gt; &lt;/a&gt; 는 PKCS # 5&lt;a href=&quot;http://www.rsa.com/rsalabs/node.asp?id=2127&quot;&gt; v2.0&lt;/a&gt; 에 지정된대로 PBKDF2를 지원합니다. 여전히 암호, 솔트 및 추가 반복을 사용하여 키 파생 프로세스 속도가 느려집니다. 이 속도가 느릴수록 결과 키를 무차별 강제 실행하는 데 더 많은 작업이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dd84ca5e72ffdda11a8768e61565b885036c6455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl/ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; Server</source>
          <target state="translated">&lt;a href=&quot;openssl/ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; 서버</target>
        </trans-unit>
        <trans-unit id="27168fb5fbb6083ca2388fc14e18a967eb215c2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl/ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; and TLS Connections</source>
          <target state="translated">&lt;a href=&quot;openssl/ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; 및 TLS 연결</target>
        </trans-unit>
        <trans-unit id="8532bb3eac1fab088aaac4d44c103463f71b1e24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openssl/ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; client</source>
          <target state="translated">&lt;a href=&quot;openssl/ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; 클라이언트</target>
        </trans-unit>
        <trans-unit id="8e7927986be4f84ae1c9c5a684bdb1db410f6287" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;opentimeout&quot;&gt;&lt;code&gt;OpenTimeout&lt;/code&gt;&lt;/a&gt;, a subclass of &lt;a href=&quot;../timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt;, is raised if a connection cannot be created within the open_timeout.</source>
          <target state="translated">&lt;a href=&quot;opentimeout&quot;&gt; &lt;code&gt;OpenTimeout&lt;/code&gt; &lt;/a&gt;open_timeout 내에 연결을 작성할 수없는 경우&lt;a href=&quot;../timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인 OpenTimeout 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3419daf1481221fe7a28387c84345d23479e2cd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openuri&quot;&gt;&lt;code&gt;OpenURI&lt;/code&gt;&lt;/a&gt; is an easy-to-use wrapper for &lt;a href=&quot;net/http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt;, Net::HTTPS and &lt;a href=&quot;net/ftp&quot;&gt;&lt;code&gt;Net::FTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;openuri&quot;&gt; &lt;code&gt;OpenURI&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;net/http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; , Net :: HTTPS 및&lt;a href=&quot;net/ftp&quot;&gt; &lt;code&gt;Net::FTP&lt;/code&gt; &lt;/a&gt; 위한 사용하기 쉬운 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="c6a47eea51a50d4290333c078317b6a629ca0bb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;openuri/openread#method-i-open&quot;&gt;&lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt;&lt;/a&gt; provides &lt;a href=&quot;openuri/openread#method-i-open&quot;&gt;&lt;code&gt;URI::HTTP#open&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openuri/openread#method-i-open&quot;&gt;&lt;code&gt;URI::HTTPS#open&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openuri/openread#method-i-open&quot;&gt;&lt;code&gt;URI::FTP#open&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;openuri/openread#method-i-open&quot;&gt; &lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;openuri/openread#method-i-open&quot;&gt; &lt;code&gt;URI::HTTP#open&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;openuri/openread#method-i-open&quot;&gt; &lt;code&gt;URI::HTTPS#open&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;openuri/openread#method-i-open&quot;&gt; &lt;code&gt;URI::FTP#open&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;kernel#method-i-open&quot;&gt; &lt;code&gt;Kernel#open&lt;/code&gt; 을 제공&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c45c23e37a0627c51d5ecc99dd5bf225b8dc1602" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;option&quot;&gt;&lt;code&gt;Socket::Option&lt;/code&gt;&lt;/a&gt; represents a socket option used by &lt;a href=&quot;../basicsocket#method-i-getsockopt&quot;&gt;&lt;code&gt;BasicSocket#getsockopt&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../basicsocket#method-i-setsockopt&quot;&gt;&lt;code&gt;BasicSocket#setsockopt&lt;/code&gt;&lt;/a&gt;. A socket option contains the socket &lt;a href=&quot;option#method-i-family&quot;&gt;&lt;code&gt;family&lt;/code&gt;&lt;/a&gt;, protocol &lt;a href=&quot;option#method-i-level&quot;&gt;&lt;code&gt;level&lt;/code&gt;&lt;/a&gt;, option name &lt;a href=&quot;option#method-i-optname&quot;&gt;&lt;code&gt;optname&lt;/code&gt;&lt;/a&gt; and option value &lt;a href=&quot;option#method-i-data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;option&quot;&gt; &lt;code&gt;Socket::Option&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;../basicsocket#method-i-getsockopt&quot;&gt; &lt;code&gt;BasicSocket#getsockopt&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../basicsocket#method-i-setsockopt&quot;&gt; &lt;code&gt;BasicSocket#setsockopt&lt;/code&gt; 에서&lt;/a&gt; 사용하는 소켓 옵션을 나타냅니다. 소켓 옵션에는 소켓&lt;a href=&quot;option#method-i-family&quot;&gt; &lt;code&gt;family&lt;/code&gt; &lt;/a&gt; , 프로토콜&lt;a href=&quot;option#method-i-level&quot;&gt; &lt;code&gt;level&lt;/code&gt; &lt;/a&gt; , 옵션 이름&lt;a href=&quot;option#method-i-optname&quot;&gt; &lt;code&gt;optname&lt;/code&gt; &lt;/a&gt; 및 옵션 값&lt;a href=&quot;option#method-i-data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="417e58b2958c5a80aae49f536b2cf1ea0b71b6c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; can be used to automatically generate help for the commands you write:</source>
          <target state="translated">&lt;a href=&quot;optionparser&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt; 를 사용하여 작성하는 명령에 대한 도움말을 자동으로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e835ef56abd5a6cf0999a0132ab94873dd357254" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; comes with a few ready-to-use kinds of type coercion. They are:</source>
          <target state="translated">&lt;a href=&quot;optionparser&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt; 는 즉시 사용 가능한 몇 가지 유형의 강제 변환이 제공됩니다. 그들은:</target>
        </trans-unit>
        <trans-unit id="27487632fa51b66ced4f71437d54f48bcae20943" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; is a class for command-line option analysis. It is much more advanced, yet also easier to use, than &lt;a href=&quot;getoptlong&quot;&gt;&lt;code&gt;GetoptLong&lt;/code&gt;&lt;/a&gt;, and is a more Ruby-oriented solution.</source>
          <target state="translated">&lt;a href=&quot;optionparser&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt; 는 명령 줄 옵션 분석을위한 클래스입니다. &lt;a href=&quot;getoptlong&quot;&gt; &lt;code&gt;GetoptLong&lt;/code&gt; &lt;/a&gt; 보다 훨씬 고급이지만 사용하기가 더 쉽고루비 지향 솔루션입니다.</target>
        </trans-unit>
        <trans-unit id="7afc04667efe704c6b0def7ee66917ea01ee6844" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; supports the ability to coerce command line arguments into objects for us.</source>
          <target state="translated">&lt;a href=&quot;optionparser&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt; 는 명령 줄 인수를 객체로 강제 변환하는 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="916477b2043d7d8c607dbfe0ea621b271ca1fdbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;optionparser#DecimalInteger&quot;&gt;&lt;code&gt;DecimalInteger&lt;/code&gt;&lt;/a&gt; &amp;ndash; Like &lt;code&gt;Integer&lt;/code&gt;, but no octal format.</source>
          <target state="translated">&lt;a href=&quot;optionparser#DecimalInteger&quot;&gt; &lt;code&gt;DecimalInteger&lt;/code&gt; &lt;/a&gt; &amp;ndash; &lt;code&gt;Integer&lt;/code&gt; 와 유사하지만 8 진 형식은 없습니다.</target>
        </trans-unit>
        <trans-unit id="d4931cee20e85d804524f9a9936b8c7edfa6c960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;optionparser#DecimalNumeric&quot;&gt;&lt;code&gt;DecimalNumeric&lt;/code&gt;&lt;/a&gt; &amp;ndash; Decimal integer or float.</source>
          <target state="translated">&lt;a href=&quot;optionparser#DecimalNumeric&quot;&gt; &lt;code&gt;DecimalNumeric&lt;/code&gt; &lt;/a&gt; &amp;ndash; 십진 정수 또는 부동 소수점입니다.</target>
        </trans-unit>
        <trans-unit id="2ed2d2ec6c12fba2ef41b0f461b69734ad6abb92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;optionparser#OctalInteger&quot;&gt;&lt;code&gt;OctalInteger&lt;/code&gt;&lt;/a&gt; &amp;ndash; Like &lt;code&gt;Integer&lt;/code&gt;, but no decimal format.</source>
          <target state="translated">&lt;a href=&quot;optionparser#OctalInteger&quot;&gt; &lt;code&gt;OctalInteger&lt;/code&gt; &lt;/a&gt; &amp;ndash; &lt;code&gt;Integer&lt;/code&gt; 와 유사하지만 10 진수 형식은 없습니다.</target>
        </trans-unit>
        <trans-unit id="5ed26475d0dbf6d2f046e2998bc1c7a6da0581a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parseerror#Reason&quot;&gt;&lt;code&gt;Reason&lt;/code&gt;&lt;/a&gt; which caused the error.</source>
          <target state="translated">&lt;a href=&quot;parseerror#Reason&quot;&gt; &lt;code&gt;Reason&lt;/code&gt; &lt;/a&gt;오류가 발생한 이유 입니다.</target>
        </trans-unit>
        <trans-unit id="1c7f34243c79b9cadf35908aecdccc03e85f965f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; is immutable. It has no method for destructive update.</source>
          <target state="translated">&lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 은 변경할 수 없습니다. 파괴적인 업데이트 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="4320b0b6d0791807eda178e88a21a1a5b9e53510" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; represents the name of a file or directory on the filesystem, but not the file itself.</source>
          <target state="translated">&lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 이름은 파일 시스템의 파일 또는 디렉토리 이름을 나타내지 만 파일 자체는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0fa1952c4e9079c195d79ec2ec0d06f7c31976a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-c-getwd&quot;&gt;&lt;code&gt;Pathname.getwd&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;pathname#method-c-pwd&quot;&gt;&lt;code&gt;Pathname.pwd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pathname#method-c-getwd&quot;&gt; &lt;code&gt;Pathname.getwd&lt;/code&gt; &lt;/a&gt; /&lt;a href=&quot;pathname#method-c-pwd&quot;&gt; &lt;code&gt;Pathname.pwd&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b0c1cb9ce27defd538ab58254fbf096369558fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-chown&quot;&gt;&lt;code&gt;chown&lt;/code&gt;&lt;/a&gt;(owner, group)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-chown&quot;&gt; &lt;code&gt;chown&lt;/code&gt; &lt;/a&gt; (소유자, 그룹)</target>
        </trans-unit>
        <trans-unit id="93e9458fba9e315c7d42e4536bc85fc893e1d8c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-each_entry&quot;&gt;&lt;code&gt;each_entry&lt;/code&gt;&lt;/a&gt;(&amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-each_entry&quot;&gt;&lt;code&gt;each_entry&lt;/code&gt;&lt;/a&gt;(&amp;amp;block)</target>
        </trans-unit>
        <trans-unit id="1d83b7dc25c5eea2bb8fd781e3bfc56c2a48103c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-each_line&quot;&gt;&lt;code&gt;each_line&lt;/code&gt;&lt;/a&gt;(*args, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-each_line&quot;&gt; &lt;code&gt;each_line&lt;/code&gt; &lt;/a&gt; (* args, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="a48658f2e72aa34c00c17200ca8232b57c54e7f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;(&amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;(&amp;amp;block)</target>
        </trans-unit>
        <trans-unit id="f9856b6c96e593fb14034ec884369a95ebaf0dba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-fnmatch&quot;&gt;&lt;code&gt;fnmatch&lt;/code&gt;&lt;/a&gt;(pattern, *args)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-fnmatch&quot;&gt; &lt;code&gt;fnmatch&lt;/code&gt; &lt;/a&gt; (패턴, * args)</target>
        </trans-unit>
        <trans-unit id="749ecdf6db246415dd165cd1e269c1e8521e3b88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-fnmatch-3F&quot;&gt;&lt;code&gt;fnmatch?&lt;/code&gt;&lt;/a&gt;(pattern, *args)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-fnmatch-3F&quot;&gt; &lt;code&gt;fnmatch?&lt;/code&gt; &lt;/a&gt;(패턴, * args)</target>
        </trans-unit>
        <trans-unit id="792ecafc820c5ceccfd2c245e0771406da23df26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-lchown&quot;&gt;&lt;code&gt;lchown&lt;/code&gt;&lt;/a&gt;(owner, group)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-lchown&quot;&gt; &lt;code&gt;lchown&lt;/code&gt; &lt;/a&gt; (소유자, 그룹)</target>
        </trans-unit>
        <trans-unit id="755b4d40bcecbbd9a249384571c20ea0b9fa20df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-open&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;(*args, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-open&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; (* args, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="a4199280f439ab4dd788f2c74f85084196f8ad7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-to_path&quot;&gt;&lt;code&gt;to_path&lt;/code&gt;&lt;/a&gt; is implemented so &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; objects are usable with &lt;a href=&quot;file#method-c-open&quot;&gt;&lt;code&gt;File.open&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-to_path&quot;&gt; &lt;code&gt;to_path&lt;/code&gt; &lt;/a&gt; 가 구현되어&lt;a href=&quot;file#method-c-open&quot;&gt; &lt;code&gt;File.open&lt;/code&gt; &lt;/a&gt; 등으로&lt;a href=&quot;pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 객체를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cf9eade705514c0e5e2f0f9e78e7b96deeea76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-unlink&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;pathname#method-i-delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-unlink&quot;&gt; &lt;code&gt;unlink&lt;/code&gt; &lt;/a&gt; /&lt;a href=&quot;pathname#method-i-delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95f65c4dd8a7e820f51604d5fc175772dab7e108" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pathname#method-i-utime&quot;&gt;&lt;code&gt;utime&lt;/code&gt;&lt;/a&gt;(atime, mtime)</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-utime&quot;&gt; &lt;code&gt;utime&lt;/code&gt; &lt;/a&gt; (한 번, mtime)</target>
        </trans-unit>
        <trans-unit id="78d41911ba2e62da585e40922e531c929cf6da93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;period&quot;&gt;Logger::Period&lt;/a&gt;, &lt;a href=&quot;../monitormixin&quot;&gt;MonitorMixin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;period&quot;&gt;로거 :: 기간&lt;/a&gt; , &lt;a href=&quot;../monitormixin&quot;&gt;MonitorMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3a8d443b1c9402d1ba83d0d465c856485947122" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; maintains persistent connections across all the servers you wish to talk to. For each host:port you communicate with a single persistent connection is created.</source>
          <target state="translated">&lt;a href=&quot;persistent&quot;&gt; &lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt; &lt;/a&gt; 는 대화하려는 모든 서버에서 지속적인 연결을 유지합니다. 각 호스트에 대해 단일 영구 연결과 통신하는 포트가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="e578ab026e76c8a26a5e2a3031c282f0eb51e062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Persistent&lt;/code&gt;&lt;/a&gt; connections for &lt;a href=&quot;../../../../net/http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;persistent&quot;&gt; &lt;code&gt;Persistent&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../../../../net/http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 대한 지속적인 연결</target>
        </trans-unit>
        <trans-unit id="0c5e15f5e2f848f567f04d4ab8410d742dc6a67e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac&quot;&gt;&lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac&lt;/code&gt;&lt;/a&gt; has been renamed to &lt;a href=&quot;kdf#method-c-pbkdf2_hmac&quot;&gt;&lt;code&gt;OpenSSL::KDF.pbkdf2_hmac&lt;/code&gt;&lt;/a&gt;. This method is provided for backwards compatibility.</source>
          <target state="translated">&lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac&quot;&gt; &lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac&lt;/code&gt; &lt;/a&gt; 이름이&lt;a href=&quot;kdf#method-c-pbkdf2_hmac&quot;&gt; &lt;code&gt;OpenSSL::KDF.pbkdf2_hmac&lt;/code&gt; &lt;/a&gt; 로 변경되었습니다. 이 방법은 이전 버전과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0835e02f75a3ce7f60bf71960ab626e4f96be414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pkey/dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;pkey/dsa&quot;&gt;&lt;code&gt;OpenSSL::PKey::DSA&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;pkey/dsa&quot;&gt; &lt;code&gt;DSA&lt;/code&gt; &lt;/a&gt; (&lt;a href=&quot;pkey/dsa&quot;&gt; &lt;code&gt;OpenSSL::PKey::DSA&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="fdc8fd8a6ed077f83aeb46f4232d4c72a5174fc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pkey/dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt; (OpenSSL::PKey::DSA)</source>
          <target state="translated">&lt;a href=&quot;pkey/dsa&quot;&gt; &lt;code&gt;DSA&lt;/code&gt; &lt;/a&gt; (OpenSSL :: PKey :: DSA)</target>
        </trans-unit>
        <trans-unit id="8d875654c393ebc49c1bb81234cc811064677688" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pkey/rsa&quot;&gt;&lt;code&gt;RSA&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;pkey/rsa&quot;&gt;&lt;code&gt;OpenSSL::PKey::RSA&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;pkey/rsa&quot;&gt; &lt;code&gt;RSA&lt;/code&gt; &lt;/a&gt; (&lt;a href=&quot;pkey/rsa&quot;&gt; &lt;code&gt;OpenSSL::PKey::RSA&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="79da6ceef0fffa899669d33c9bd2c2826c7a8cb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pkey/rsa&quot;&gt;&lt;code&gt;RSA&lt;/code&gt;&lt;/a&gt; (OpenSSL::PKey::RSA)</source>
          <target state="translated">&lt;a href=&quot;pkey/rsa&quot;&gt; &lt;code&gt;RSA&lt;/code&gt; &lt;/a&gt; (OpenSSL :: PKey :: RSA)</target>
        </trans-unit>
        <trans-unit id="058fccf89f78b4805a87678ca00141c2d850e2ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plugin/sourcelist&quot;&gt;&lt;code&gt;SourceList&lt;/code&gt;&lt;/a&gt; object to be used while parsing the Gemfile, setting the approptiate options to be used with &lt;a href=&quot;source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; classes for plugin installation</source>
          <target state="translated">&lt;a href=&quot;plugin/sourcelist&quot;&gt; &lt;code&gt;SourceList&lt;/code&gt; &lt;/a&gt;플러그인 설치를 위해&lt;a href=&quot;source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt; 클래스와 함께 사용할 적절한 옵션을 설정하여 Gemfile을 구문 분석하는 동안 사용할 SourceList 객체</target>
        </trans-unit>
        <trans-unit id="309573ee85c4c34ad665c7b75aaf9213527ae907" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pointer&quot;&gt;&lt;code&gt;Fiddle::Pointer&lt;/code&gt;&lt;/a&gt; is a class to handle C pointers</source>
          <target state="translated">&lt;a href=&quot;pointer&quot;&gt; &lt;code&gt;Fiddle::Pointer&lt;/code&gt; &lt;/a&gt; 는 C 포인터를 처리하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4b89c9ac8e245383c1ad204989cc75267b49f8be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; authentication error.</source>
          <target state="translated">&lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 인증 오류</target>
        </trans-unit>
        <trans-unit id="ff5bbd0910f5ca2f1f15769b7944c09e6a15b929" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pop3#method-i-delete_all&quot;&gt;&lt;code&gt;POP3#delete_all&lt;/code&gt;&lt;/a&gt; is an alternative for &lt;a href=&quot;pop3#method-i-each_mail&quot;&gt;&lt;code&gt;each_mail&lt;/code&gt;&lt;/a&gt; and delete.</source>
          <target state="translated">&lt;a href=&quot;pop3#method-i-delete_all&quot;&gt; &lt;code&gt;POP3#delete_all&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;pop3#method-i-each_mail&quot;&gt; &lt;code&gt;each_mail&lt;/code&gt; &lt;/a&gt; 및 delete의 대안입니다.</target>
        </trans-unit>
        <trans-unit id="81a9bce26880807edef4dc8f817e75d88cd196cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pp#method-c-pp&quot;&gt;&lt;code&gt;PP.pp&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;out&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;pp#method-c-pp&quot;&gt; &lt;code&gt;PP.pp&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;out&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="97b6a70340faa1aa81b6546329c1835fabde83f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pp#method-c-singleline_pp&quot;&gt;&lt;code&gt;PP.singleline_pp&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;out&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;pp#method-c-singleline_pp&quot;&gt; &lt;code&gt;PP.singleline_pp&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;out&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="fa0bcc76cb43432d003b4f0abdf957498bee8226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ppmethods#method-i-seplist&quot;&gt;&lt;code&gt;seplist&lt;/code&gt;&lt;/a&gt; iterates the &lt;code&gt;list&lt;/code&gt; using &lt;code&gt;iter_method&lt;/code&gt;. It yields each object to the block given for &lt;a href=&quot;ppmethods#method-i-seplist&quot;&gt;&lt;code&gt;seplist&lt;/code&gt;&lt;/a&gt;. The procedure &lt;code&gt;separator_proc&lt;/code&gt; is called between each yields.</source>
          <target state="translated">&lt;a href=&quot;ppmethods#method-i-seplist&quot;&gt; &lt;code&gt;seplist&lt;/code&gt; 는&lt;/a&gt; 반복 할 &lt;code&gt;list&lt;/code&gt; 사용하여 &lt;code&gt;iter_method&lt;/code&gt; 을 . &lt;a href=&quot;ppmethods#method-i-seplist&quot;&gt; &lt;code&gt;seplist&lt;/code&gt; 에&lt;/a&gt; 지정된 블록에 각 객체를 생성합니다. 각 yield 사이에서 &lt;code&gt;separator_proc&lt;/code&gt; 프로 시저가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f65b6ebfa57497ab5dcea97341e7b2c4dd37ec06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;prime&quot;&gt;&lt;code&gt;Prime&lt;/code&gt;&lt;/a&gt; is Enumerable:</source>
          <target state="translated">&lt;a href=&quot;prime&quot;&gt; &lt;code&gt;Prime&lt;/code&gt; &lt;/a&gt; 은 열거 가능합니다.</target>
        </trans-unit>
        <trans-unit id="a32481231d32df76eb95c28d38d38c91be127e8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;prime#method-i-prime_division&quot;&gt;&lt;code&gt;prime_division&lt;/code&gt;&lt;/a&gt;(n) returns:</source>
          <target state="translated">&lt;a href=&quot;prime#method-i-prime_division&quot;&gt; &lt;code&gt;prime_division&lt;/code&gt; &lt;/a&gt; (n)은 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c53eb0d3b6a0be8619c573375af6b3abb8ee8aea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; sub-classes and their mapping to Ruby classes</source>
          <target state="translated">&lt;a href=&quot;primitive&quot;&gt; &lt;code&gt;Primitive&lt;/code&gt; &lt;/a&gt; 서브 클래스 및 Ruby 클래스에 대한 맵핑</target>
        </trans-unit>
        <trans-unit id="451fad4f5cd0135f7c95c9824d19d912b3c02b10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; objects are &lt;em&gt;closures&lt;/em&gt;, meaning they remember and can use the entire context in which they were created.</source>
          <target state="translated">&lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 객체는&lt;em&gt; 클로저로&lt;/em&gt; , 생성 된 전체 컨텍스트를 기억하고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5f6c3eaf9ce513f9dea05f856bf909439473f93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;proc#method-c-new&quot;&gt;&lt;code&gt;Proc.new&lt;/code&gt;&lt;/a&gt; is the same as &lt;code&gt;proc&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;proc#method-c-new&quot;&gt; &lt;code&gt;Proc.new&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;proc&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7648fa2f63144ec791e915785e23cb39d6dca0ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;proc#method-i-lambda-3F&quot;&gt;&lt;code&gt;Proc#lambda?&lt;/code&gt;&lt;/a&gt; is a predicate for the tricks. It returns &lt;code&gt;true&lt;/code&gt; if no tricks apply.</source>
          <target state="translated">&lt;a href=&quot;proc#method-i-lambda-3F&quot;&gt; &lt;code&gt;Proc#lambda?&lt;/code&gt; &lt;/a&gt;트릭의 술어입니다. 트릭이 적용되지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="8dc9c795be5300d7dd89d0effe25667a320240f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; credentials</source>
          <target state="translated">&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 자격 증명</target>
        </trans-unit>
        <trans-unit id="a836c7ae7e5ff28ba1f1938265041ae5a0bb2975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; out-of-band data</source>
          <target state="translated">&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 대역 외 데이터</target>
        </trans-unit>
        <trans-unit id="18342e05cd8fea42ddfa259462a1c77ba3f9c342" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; implements a file based persistence mechanism based on a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;. User code can store hierarchies of Ruby objects (values) into the data store file by name (keys). An object hierarchy may be just a single object. User code may later read values back from the data store or even update data, as needed.</source>
          <target state="translated">&lt;a href=&quot;pstore&quot;&gt; &lt;code&gt;PStore&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 기반의 파일 기반 지속성 메커니즘을 구현합니다. 사용자 코드는 이름 (키)별로 Ruby 객체 (값)의 계층을 데이터 저장소 파일에 저장할 수 있습니다. 객체 계층은 단일 객체 일 수 있습니다. 사용자 코드는 나중에 데이터 저장소에서 값을 다시 읽거나 필요에 따라 데이터를 업데이트 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="51fd70b5026ff3bd5b3af6d796abab9f68922d59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; objects are always reentrant. But if &lt;em&gt;thread_safe&lt;/em&gt; is set to true, then it will become thread-safe at the cost of a minor performance hit.</source>
          <target state="translated">&lt;a href=&quot;pstore&quot;&gt; &lt;code&gt;PStore&lt;/code&gt; &lt;/a&gt; 오브젝트는 항상 재진입됩니다. 그러나&lt;em&gt; thread_safe&lt;/em&gt; 가 true로 설정되면성능이 약간 저하되어 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="3495342eca8e777fe170125706017651f3ca1550" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; is a YAML parser and emitter. &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; leverages libyaml [Home page: &lt;a href=&quot;https://pyyaml.org/wiki/LibYAML&quot;&gt;pyyaml.org/wiki/LibYAML&lt;/a&gt;] or [HG repo: &lt;a href=&quot;https://bitbucket.org/xi/libyaml&quot;&gt;bitbucket.org/xi/libyaml&lt;/a&gt;] for its YAML parsing and emitting capabilities. In addition to wrapping libyaml, &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; also knows how to serialize and de-serialize most Ruby objects to and from the YAML format.</source>
          <target state="translated">&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 는 YAML 파서 및 이미 터입니다. &lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 은YAML 파싱 및 방출 기능을 위해libyaml [홈페이지 :&lt;a href=&quot;https://pyyaml.org/wiki/LibYAML&quot;&gt; pyyaml.org/wiki/LibYAML&lt;/a&gt; ] 또는 [HG repo :&lt;a href=&quot;https://bitbucket.org/xi/libyaml&quot;&gt; bitbucket.org/xi/libyaml&lt;/a&gt; ]을 활용합니다. libyaml을 감싸는 것 외에도&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 은 대부분의 Ruby 객체를 YAML 형식으로 직렬화하고 역 직렬화하는 방법을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="04055fa912031067f1c07b25f83b0a28c41e92c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; provides a range of interfaces for parsing a YAML document ranging from low level to high level, depending on your parsing needs. At the lowest level, is an event based parser. Mid level is access to the raw YAML AST, and at the highest level is the ability to unmarshal YAML to Ruby objects.</source>
          <target state="translated">&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 은 구문 분석 요구에 따라 낮은 수준에서 높은 수준에 이르는 YAML 문서를 구문 분석하기위한 다양한 인터페이스를 제공합니다. 가장 낮은 레벨에서는 이벤트 기반 구문 분석기입니다. 중간 레벨은 원시 YAML AST에 액세스하며 최상위 레벨은 YAML을 Ruby 오브젝트로 마샬링 해제하는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="825ef40732530ca274afb1f7ebb4787f3f08ee53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; provides a range of interfaces ranging from low to high level for producing YAML documents. Very similar to the YAML parsing interfaces, &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; provides at the lowest level, an event based system, mid-level is building a YAML AST, and the highest level is converting a Ruby object straight to a YAML document.</source>
          <target state="translated">&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 은 YAML 문서 생성을 위해 낮은 수준에서 높은 수준에 이르는 다양한 인터페이스를 제공합니다. YAML 구문 분석 인터페이스와 매우 유사한&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 는 최하위 레벨, 이벤트 기반 시스템을 제공하고 중간 레벨은 YAML AST를 빌드하며 최상위 레벨은 Ruby 오브젝트를 YAML 문서로 바로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="c9e2ea826860275bf0fb3a9c810e22b54710fc58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; provides access to an AST produced from parsing a YAML document. This tree is built using the &lt;code&gt;Psych::Parser&lt;/code&gt; and &lt;code&gt;Psych::TreeBuilder&lt;/code&gt;. The AST can be examined and manipulated freely. Please see &lt;a href=&quot;psych#method-c-parse_stream&quot;&gt;&lt;code&gt;Psych::parse_stream&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Psych::Nodes&lt;/code&gt;, and &lt;code&gt;Psych::Nodes::Node&lt;/code&gt; for more information on dealing with YAML syntax trees.</source>
          <target state="translated">&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 은 YAML 문서를 구문 분석하여 생성 된 AST에 대한 액세스를 제공합니다. 이 트리는 &lt;code&gt;Psych::Parser&lt;/code&gt; 및 &lt;code&gt;Psych::TreeBuilder&lt;/code&gt; 사용하여 빌드됩니다. AST는 자유롭게 검사하고 조작 할 수 있습니다. YAML 구문 트리 처리에 대한 자세한 내용은&lt;a href=&quot;psych#method-c-parse_stream&quot;&gt; &lt;code&gt;Psych::parse_stream&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Psych::Nodes&lt;/code&gt; 및 &lt;code&gt;Psych::Nodes::Node&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d760b6731e5117b3a222cdceebbc2e107c66b4d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pty&quot;&gt;&lt;code&gt;PTY&lt;/code&gt;&lt;/a&gt; allows you to allocate new terminals using &lt;a href=&quot;pty#method-c-open&quot;&gt;&lt;code&gt;::open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pty#method-c-spawn&quot;&gt;&lt;code&gt;::spawn&lt;/code&gt;&lt;/a&gt; a new terminal with a specific command.</source>
          <target state="translated">&lt;a href=&quot;pty&quot;&gt; &lt;code&gt;PTY&lt;/code&gt; 를&lt;/a&gt; 사용하면특정 명령으로&lt;a href=&quot;pty#method-c-open&quot;&gt; &lt;code&gt;::open&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;pty#method-c-spawn&quot;&gt; &lt;code&gt;::spawn&lt;/code&gt; &lt;/a&gt; 새 터미널을 사용하여 새 터미널을 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2042aed63086dfcb9f7641b16813f4e296ecc13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; for repair mode (Linux 3.5, glibc 2.18)</source>
          <target state="translated">&lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;복구 모드 대기열 (Linux 3.5, glibc 2.18)</target>
        </trans-unit>
        <trans-unit id="6b6d534a0c3f163369beb8e414052b6a81071a37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; provides an interface to Ruby's pseudo-random number generator, or PRNG. The PRNG produces a deterministic sequence of bits which approximate true randomness. The sequence may be represented by integers, floats, or binary strings.</source>
          <target state="translated">&lt;a href=&quot;random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt; 은 Ruby의 의사 난수 생성기 (PRNG)에 대한 인터페이스를 제공합니다. PRNG는 진정한 랜덤 성을 근사하는 결정적 비트 시퀀스를 생성합니다. 시퀀스는 정수, 부동 소수점 또는 이진 문자열로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f09fa477734c14480d97328a005790810de8006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;random#method-c-new&quot;&gt;&lt;code&gt;Random.new&lt;/code&gt;&lt;/a&gt; will create a new PRNG with a state independent of &lt;a href=&quot;random#DEFAULT&quot;&gt;&lt;code&gt;Random::DEFAULT&lt;/code&gt;&lt;/a&gt;, allowing multiple generators with different seed values or sequence positions to exist simultaneously. &lt;a href=&quot;random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; objects can be marshaled, allowing sequences to be saved and resumed.</source>
          <target state="translated">&lt;a href=&quot;random#method-c-new&quot;&gt; &lt;code&gt;Random.new&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;random#DEFAULT&quot;&gt; &lt;code&gt;Random::DEFAULT&lt;/code&gt; &lt;/a&gt; 와독립적 인 상태로 새 PRNG를생성하여 다른 시드 값 또는 시퀀스 위치를 가진 여러 생성기가 동시에 존재할 수 있습니다. &lt;a href=&quot;random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt; 객체를 마샬링하여 시퀀스를 저장하고 재개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23110f71a4d65e22b5c376667ac3a95c20c23c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;random#method-c-seed&quot;&gt;&lt;code&gt;::seed&lt;/code&gt;&lt;/a&gt; is equivalent to ::add where &lt;em&gt;entropy&lt;/em&gt; is length of &lt;em&gt;str&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;random#method-c-seed&quot;&gt; &lt;code&gt;::seed&lt;/code&gt; &lt;/a&gt; 는&lt;em&gt; 엔트로피&lt;/em&gt; 가&lt;em&gt; str의&lt;/em&gt; 길이 인:: add와 같습니다.</target>
        </trans-unit>
        <trans-unit id="28bcfc5ac64a934b7409ff20dc32beacb03d8d78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; operations &lt;code&gt;n[i, len]&lt;/code&gt; and &lt;code&gt;n[i..j]&lt;/code&gt; are naturally extended.</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 연산 &lt;code&gt;n[i, len]&lt;/code&gt; 및 &lt;code&gt;n[i..j]&lt;/code&gt; 는 자연스럽게 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="31223fed899e30b76d22a9551286cfe650758510" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rational#method-i-magnitude&quot;&gt;&lt;code&gt;Rational#magnitude&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;rational#method-i-abs&quot;&gt;&lt;code&gt;Rational#abs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;rational#method-i-magnitude&quot;&gt; &lt;code&gt;Rational#magnitude&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;rational#method-i-abs&quot;&gt; &lt;code&gt;Rational#abs&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="57dec63597ab86b812398890637f6f0fe26d2ebe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt; will only call this proc with characters specified in &lt;code&gt;completer_quote_characters&lt;/code&gt;, to discover if they indicate the end of a quoted argument, or characters specified in &lt;code&gt;completer_word_break_characters&lt;/code&gt;, to discover if they indicate a break between arguments.</source>
          <target state="translated">&lt;a href=&quot;readline&quot;&gt; &lt;code&gt;Readline&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;completer_quote_characters&lt;/code&gt; 에 지정된 문자를 사용하여이 proc을 호출하여 인용 된 인수의 끝을 나타내는 지 또는 &lt;code&gt;completer_word_break_characters&lt;/code&gt; 에 지정된 문자를식별하여 인수 사이의 구분을 나타내는 지 여부를 발견합니다.</target>
        </trans-unit>
        <trans-unit id="083e4caee0e480150646b387968e289ffdb63c2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;readtimeout&quot;&gt;&lt;code&gt;ReadTimeout&lt;/code&gt;&lt;/a&gt;, a subclass of &lt;a href=&quot;../timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt;, is raised if a chunk of the response cannot be read within the read_timeout.</source>
          <target state="translated">&lt;a href=&quot;readtimeout&quot;&gt; &lt;code&gt;ReadTimeout&lt;/code&gt; &lt;/a&gt;read_timeout 내에서 응답 청크를 읽을 수없는 경우&lt;a href=&quot;../timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인 ReadTimeout 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f14d849c315a3c30df25b21c7a3bd067b43df5ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;referror&quot;&gt;&lt;code&gt;RefError&lt;/code&gt;&lt;/a&gt; is raised when a referenced object has been recycled by the garbage collector</source>
          <target state="translated">&lt;a href=&quot;referror&quot;&gt; &lt;code&gt;RefError&lt;/code&gt; &lt;/a&gt;가비지 수집기에서 참조 된 개체를 재활용하면 RefError 발생</target>
        </trans-unit>
        <trans-unit id="95aa9903797169c45cff2ba1ca0a4a41035d0e1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; &amp;ndash; Regular expressions. Also includes options.</source>
          <target state="translated">&lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; - 정규 표현식. 옵션도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="108ad4843f25f2fa6f7fb104957a9d57df5d44ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;&lt;em&gt;internally&lt;/em&gt; used for parsing IPv4 address.</source>
          <target state="translated">&lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt;IPv4 주소를 구문 분석하는 데&lt;em&gt; 내부적으로&lt;/em&gt; 사용되는 정규식 .</target>
        </trans-unit>
        <trans-unit id="43fc0731ae2b387cc4a3d64175d82b1f4ad17be7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;&lt;em&gt;internally&lt;/em&gt; used for parsing IPv6 address.</source>
          <target state="translated">&lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt;IPv6 주소를 구문 분석하는 데&lt;em&gt; 내부적으로&lt;/em&gt; 사용되는 정규식 .</target>
        </trans-unit>
        <trans-unit id="6b0251e6a1eaaa5e03f25988e53b840c8cfbed45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;regexp#method-i-match&quot;&gt;&lt;code&gt;Regexp#match&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="translated">&lt;a href=&quot;regexp#method-i-match&quot;&gt; &lt;code&gt;Regexp#match&lt;/code&gt; &lt;/a&gt; 방법</target>
        </trans-unit>
        <trans-unit id="a183c4d02f79b029f5cdccafc3c43638a803cb25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;regexp#method-i-match&quot;&gt;&lt;code&gt;Regexp#match&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object which makes the captured text available with its [] method:</source>
          <target state="translated">&lt;a href=&quot;regexp#method-i-match&quot;&gt; &lt;code&gt;Regexp#match&lt;/code&gt; &lt;/a&gt; 는캡처 된 텍스트를 [] 메소드로 사용 가능하게하는&lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; &lt;/a&gt; 객체를반환합니다.</target>
        </trans-unit>
        <trans-unit id="c3a803e555a9216fe8870d85cad907bc61f4fed1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;resolv&quot;&gt;&lt;code&gt;Resolv&lt;/code&gt;&lt;/a&gt; can look up various &lt;a href=&quot;resolv/dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resources using the &lt;a href=&quot;resolv/dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; module directly.</source>
          <target state="translated">&lt;a href=&quot;resolv&quot;&gt; &lt;code&gt;Resolv&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;resolv/dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 모듈을 직접사용하여다양한&lt;a href=&quot;resolv/dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 리소스를조회 할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="8cb44c47d49c2f37b4c87a50a0d0ba016ecaf753" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;resolv&quot;&gt;&lt;code&gt;Resolv&lt;/code&gt;&lt;/a&gt; is a thread-aware &lt;a href=&quot;resolv/dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resolver library written in Ruby. &lt;a href=&quot;resolv&quot;&gt;&lt;code&gt;Resolv&lt;/code&gt;&lt;/a&gt; can handle multiple &lt;a href=&quot;resolv/dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; requests concurrently without blocking the entire Ruby interpreter.</source>
          <target state="translated">&lt;a href=&quot;resolv&quot;&gt; &lt;code&gt;Resolv&lt;/code&gt; &lt;/a&gt; 는Ruby로 작성된스레드 인식&lt;a href=&quot;resolv/dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 확인자 라이브러리입니다. &lt;a href=&quot;resolv&quot;&gt; &lt;code&gt;Resolv&lt;/code&gt; &lt;/a&gt; 는전체 Ruby 인터프리터를 차단하지 않고여러&lt;a href=&quot;resolv/dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt; 요청을 동시에처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="a66dcd9dba370df4033a79112f3dc1ee87156fb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rfc2396_parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; for internal use [Bundler::URI::DEFAULT_PARSER by default].</source>
          <target state="translated">&lt;a href=&quot;rfc2396_parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;내부 사용을위한 파서 [기본적으로 번 들러 :: URI :: DEFAULT_PARSER].</target>
        </trans-unit>
        <trans-unit id="80f54df6c79fb94b2f411c406f0e9cd6f92c27db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rfc2396_parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; for internal use [URI::DEFAULT_PARSER by default].</source>
          <target state="translated">&lt;a href=&quot;rfc2396_parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;내부 용 파서 [기본적으로 URI :: DEFAULT_PARSER].</target>
        </trans-unit>
        <trans-unit id="06ddeb097dc51a221bcfb312e0473c3e5ea30282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rinda&quot;&gt;&lt;code&gt;Rinda&lt;/code&gt;&lt;/a&gt; is part of &lt;a href=&quot;drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; (dRuby).</source>
          <target state="translated">&lt;a href=&quot;rinda&quot;&gt; &lt;code&gt;Rinda&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt; (dRuby)의일부입니다.</target>
        </trans-unit>
        <trans-unit id="ac1bf4bcfad6cc641bb67a3d00a973b78d4a063d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;Rinda::RingFinger&lt;/code&gt;&lt;/a&gt; also understands multicast addresses and sets them up properly. This allows you to run multiple RingServers on the same host:</source>
          <target state="translated">&lt;a href=&quot;ringfinger&quot;&gt; &lt;code&gt;Rinda::RingFinger&lt;/code&gt; &lt;/a&gt; 는 또한 멀티 캐스트 주소를 이해하고 올바르게 설정합니다. 이를 통해 동일한 호스트에서 여러 RingServer를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb45b2aa27fee96ffbd66151f55a44aa8420e1b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;RingFinger&lt;/code&gt;&lt;/a&gt; is used by &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; clients to discover the RingServer's &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt;. Typically, all a client needs to do is call &lt;a href=&quot;ringfinger#method-c-primary&quot;&gt;&lt;code&gt;RingFinger.primary&lt;/code&gt;&lt;/a&gt; to retrieve the remote &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt;, which it can then begin using.</source>
          <target state="translated">&lt;a href=&quot;ringfinger&quot;&gt; &lt;code&gt;RingFinger&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;ringserver&quot;&gt; &lt;code&gt;RingServer&lt;/code&gt; &lt;/a&gt; 클라이언트가 RingServer의&lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; &lt;/a&gt; 를 발견하는데 사용합니다. 일반적으로 클라이언트가해야 할 일은원격&lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; &lt;/a&gt; 를 검색하기 위해&lt;a href=&quot;ringfinger#method-c-primary&quot;&gt; &lt;code&gt;RingFinger.primary&lt;/code&gt; &lt;/a&gt; 를호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="489837e3cb92e2b7fa956e91baea7c85f23b8f0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ringprovider&quot;&gt;&lt;code&gt;RingProvider&lt;/code&gt;&lt;/a&gt; uses a &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; advertised &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt; as a name service. &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt; clients can register themselves with the remote &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt; and look up other provided services via the remote &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ringprovider&quot;&gt; &lt;code&gt;RingProvider&lt;/code&gt; 는&lt;/a&gt; 사용&lt;a href=&quot;ringserver&quot;&gt; &lt;code&gt;RingServer&lt;/code&gt; 가&lt;/a&gt; 광고&lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; 을&lt;/a&gt; 이름 서비스로. &lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; 의&lt;/a&gt; 클라이언트가 원격으로 자신을 등록 할 수 있습니다&lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; &lt;/a&gt; 및 원격 통해 다른 제공하는 서비스를 찾아&lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="788dafa4a10821f2c11462cdf4e0e0f0c43c0c94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; can also listen on multicast addresses for announcements. This allows multiple RingServers to run on the same host. To use network broadcast and multicast:</source>
          <target state="translated">&lt;a href=&quot;ringserver&quot;&gt; &lt;code&gt;RingServer&lt;/code&gt; &lt;/a&gt;또한 RingServer 는 멀티 캐스트 주소에서 알림을들을 수 있습니다. 이를 통해 여러 개의 RingServer가 동일한 호스트에서 실행될 수 있습니다. 네트워크 브로드 캐스트 및 멀티 캐스트를 사용하려면</target>
        </trans-unit>
        <trans-unit id="a78db4518ade20d75931f05471918425d72d4592" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ripper&quot;&gt;&lt;code&gt;Ripper&lt;/code&gt;&lt;/a&gt; is a Ruby script parser.</source>
          <target state="translated">&lt;a href=&quot;ripper&quot;&gt; &lt;code&gt;Ripper&lt;/code&gt; &lt;/a&gt; 는 루비 스크립트 파서입니다.</target>
        </trans-unit>
        <trans-unit id="bcca1da7be3f305e4ea501722f66066d578a7111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ripper&quot;&gt;&lt;code&gt;Ripper&lt;/code&gt;&lt;/a&gt; provides an easy interface for parsing your program into a symbolic expression tree (or S-expression).</source>
          <target state="translated">&lt;a href=&quot;ripper&quot;&gt; &lt;code&gt;Ripper&lt;/code&gt; &lt;/a&gt; 는 프로그램을 기호 표현식 트리 (또는 S- 표현식)로 구문 분석하기위한 쉬운 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dcd9e066190c938eb2bcaab1445d680e2ff75113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rmd160&quot;&gt;&lt;code&gt;RMD160&lt;/code&gt;&lt;/a&gt; calculates a digest of 160 bits (20 bytes).</source>
          <target state="translated">&lt;a href=&quot;rmd160&quot;&gt; &lt;code&gt;RMD160&lt;/code&gt; &lt;/a&gt; 은 160 비트 (20 바이트)의 다이제스트를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="2cc31f7e7c1e29886d607298a89b8ec0ec7e0de4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rsa&quot;&gt;&lt;code&gt;RSA&lt;/code&gt;&lt;/a&gt; is an asymmetric public key algorithm that has been formalized in RFC 3447. It is in widespread use in public key infrastructures (PKI) where certificates (cf. &lt;a href=&quot;../x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt;) often are issued on the basis of a public/private &lt;a href=&quot;rsa&quot;&gt;&lt;code&gt;RSA&lt;/code&gt;&lt;/a&gt; key pair. &lt;a href=&quot;rsa&quot;&gt;&lt;code&gt;RSA&lt;/code&gt;&lt;/a&gt; is used in a wide field of applications such as secure (symmetric) key exchange, e.g. when establishing a secure TLS/SSL connection. It is also used in various digital signature schemes.</source>
          <target state="translated">&lt;a href=&quot;rsa&quot;&gt; &lt;code&gt;RSA&lt;/code&gt; &lt;/a&gt; 는 RFC 3447에 공식화 된 비대칭 공개 키 알고리즘입니다.이 인증서는 공개 키 인프라 (PKI)에서 널리 사용되며 인증서 (cf.&lt;a href=&quot;../x509/certificate&quot;&gt; &lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt; &lt;/a&gt; )는 종종 공개 / 기반으로 발행됩니다. 개인&lt;a href=&quot;rsa&quot;&gt; &lt;code&gt;RSA&lt;/code&gt; &lt;/a&gt; 키 쌍. &lt;a href=&quot;rsa&quot;&gt; &lt;code&gt;RSA&lt;/code&gt; &lt;/a&gt; 는 보안 TLS / SSL 연결 설정과 같은 보안 (대칭) 키 교환과 같은 광범위한 응용 분야에서 사용됩니다. 다양한 디지털 서명 체계에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1ea52736b88607041d73cf66564f4da5826391d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rsaerror&quot;&gt;&lt;code&gt;RSAError&lt;/code&gt;&lt;/a&gt; will be raised if an error occurs.</source>
          <target state="translated">&lt;a href=&quot;rsaerror&quot;&gt; &lt;code&gt;RSAError&lt;/code&gt; &lt;/a&gt;오류가 발생하면 RSAError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="523ce04d8c560ee633edb7e59c206eca6a55c632" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rubyvm#DEFAULT_PARAMS&quot;&gt;&lt;code&gt;DEFAULT_PARAMS&lt;/code&gt;&lt;/a&gt; This constant exposes the VM's default parameters. Note that changing these values does not affect VM execution. Specification is not stable and you should not depend on this value. Of course, this constant is MRI specific.</source>
          <target state="translated">&lt;a href=&quot;rubyvm#DEFAULT_PARAMS&quot;&gt; &lt;code&gt;DEFAULT_PARAMS&lt;/code&gt; &lt;/a&gt; 이 상수는 VM의 기본 매개 변수를 노출합니다. 이러한 값을 변경해도 VM 실행에는 영향을주지 않습니다. 사양이 안정적이지 않으며이 값에 의존해서는 안됩니다. 물론이 상수는 MRI에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="6fef6613390b9a73c8f5a9c3294641695574d0eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rubyvm#DEFAULT_PARAMS&quot;&gt;&lt;code&gt;DEFAULT_PARAMS&lt;/code&gt;&lt;/a&gt; This constant variable shows VM's default parameters. Note that changing these values does not affect VM execution. Specification is not stable and you should not depend on this value. Of course, this constant is MRI specific.</source>
          <target state="translated">&lt;a href=&quot;rubyvm#DEFAULT_PARAMS&quot;&gt; &lt;code&gt;DEFAULT_PARAMS&lt;/code&gt; &lt;/a&gt; 이 상수 변수는 VM의 기본 매개 변수를 보여줍니다. 이 값을 변경해도 VM 실행에는 영향을 미치지 않습니다. 사양이 안정적이지 않으므로이 값에 의존해서는 안됩니다. 물론이 상수는 MRI에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="816490c73c633afed4dfe5a412d1529ad2b7fa9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rubyvm#INSTRUCTION_NAMES&quot;&gt;&lt;code&gt;INSTRUCTION_NAMES&lt;/code&gt;&lt;/a&gt; A list of bytecode instruction names in MRI. This constant is MRI specific.</source>
          <target state="translated">&lt;a href=&quot;rubyvm#INSTRUCTION_NAMES&quot;&gt; &lt;code&gt;INSTRUCTION_NAMES&lt;/code&gt; &lt;/a&gt; MRI의 바이트 코드 명령어 이름 목록입니다. 이 상수는 MRI에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="705df4542c4e4f7a976cca242e7a956e9ee18bc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rubyvm#OPTS&quot;&gt;&lt;code&gt;OPTS&lt;/code&gt;&lt;/a&gt; An &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of VM build options. This constant is MRI specific.</source>
          <target state="translated">&lt;a href=&quot;rubyvm#OPTS&quot;&gt; &lt;code&gt;OPTS&lt;/code&gt; &lt;/a&gt; VM 빌드 옵션의&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; . 이 상수는 MRI에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="3e5f64e114c57d498c92c6dd191583e709485f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rubyvm#OPTS&quot;&gt;&lt;code&gt;OPTS&lt;/code&gt;&lt;/a&gt;, which shows vm build options</source>
          <target state="translated">&lt;a href=&quot;rubyvm#OPTS&quot;&gt; &lt;code&gt;OPTS&lt;/code&gt; &lt;/a&gt;vm 빌드 옵션을 보여주는 OPTS</target>
        </trans-unit>
        <trans-unit id="04c9466a007a56f823a69cc2b0c712ad1e739fbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; &amp;ndash; default for &lt;code&gt;raise&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; &amp;ndash; &lt;code&gt;raise&lt;/code&gt; 의 기본값</target>
        </trans-unit>
        <trans-unit id="b649aea2ba0bfad15b6b613ce1a0a48b30e8985f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scanf&quot;&gt;&lt;code&gt;Scanf&lt;/code&gt;&lt;/a&gt; scans an input string or stream according to a &lt;strong&gt;format&lt;/strong&gt;, as described below in Conversions, and returns an array of matches between the format and the input. The format is defined in a string, and is similar (though not identical) to the formats used in &lt;a href=&quot;kernel#method-i-printf&quot;&gt;&lt;code&gt;Kernel#printf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#method-i-sprintf&quot;&gt;&lt;code&gt;Kernel#sprintf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanf&quot;&gt; &lt;code&gt;Scanf&lt;/code&gt; &lt;/a&gt; 는 아래 변환에서 설명한대로&lt;strong&gt; format&lt;/strong&gt; 에 따라 입력 문자열 또는 스트림을 스캔하고 형식과 입력 사이의 일치 배열을 반환합니다. 형식은 문자열로 정의되며&lt;a href=&quot;kernel#method-i-printf&quot;&gt; &lt;code&gt;Kernel#printf&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;kernel#method-i-sprintf&quot;&gt; &lt;code&gt;Kernel#sprintf&lt;/code&gt; 에&lt;/a&gt; 사용 된 형식과 유사하지만 동일하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="5565cc74dee38566243379851ea01ac0183bfb4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scripterror&quot;&gt;&lt;code&gt;ScriptError&lt;/code&gt;&lt;/a&gt; is the superclass for errors raised when a script can not be executed because of a &lt;code&gt;LoadError&lt;/code&gt;, &lt;code&gt;NotImplementedError&lt;/code&gt; or a &lt;code&gt;SyntaxError&lt;/code&gt;. Note these type of &lt;code&gt;ScriptErrors&lt;/code&gt; are not &lt;code&gt;StandardError&lt;/code&gt; and will not be rescued unless it is specified explicitly (or its ancestor &lt;code&gt;Exception&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;scripterror&quot;&gt; &lt;code&gt;ScriptError&lt;/code&gt; 는&lt;/a&gt; 오류에 대한 슈퍼 클래스는 스크립트가 때문에의 실행 할 수없는 경우에 발생 &lt;code&gt;LoadError&lt;/code&gt; , &lt;code&gt;NotImplementedError&lt;/code&gt; 또는 &lt;code&gt;SyntaxError&lt;/code&gt; . 이러한 유형의 &lt;code&gt;ScriptErrors&lt;/code&gt; 는 &lt;code&gt;StandardError&lt;/code&gt; 가 아니며 명시 적으로 지정되지 않은 한 (또는 조상 &lt;code&gt;Exception&lt;/code&gt; )구제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="71255ca5a4c25ea9aa77897fcf2fedb812f63ad7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sdbm&quot;&gt;&lt;code&gt;SDBM&lt;/code&gt;&lt;/a&gt; provides a simple file-based key-value store, which can only store &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; keys and values.</source>
          <target state="translated">&lt;a href=&quot;sdbm&quot;&gt; &lt;code&gt;SDBM&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 키와 값만저장할 수있는 간단한 파일 기반 키-값 저장소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="abe52ca97cdd81a8e13bbe1090ae37ad8f316b72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; is extended by the &lt;a href=&quot;random/formatter&quot;&gt;&lt;code&gt;Random::Formatter&lt;/code&gt;&lt;/a&gt; module which defines the following methods:</source>
          <target state="translated">&lt;a href=&quot;securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt; 은다음 메소드를 정의하는&lt;a href=&quot;random/formatter&quot;&gt; &lt;code&gt;Random::Formatter&lt;/code&gt; &lt;/a&gt; 모듈에의해 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="f519e126600bb88364243872aba1dea0090bf04f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; verification mode.</source>
          <target state="translated">&lt;a href=&quot;session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 검증 모드.</target>
        </trans-unit>
        <trans-unit id="ab9d513fa1724dd36919e19e7da363bfaae24141" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;session#method-i-delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; deletes a session from session storage. It does not however remove the session id from the client. If the client makes another request with the same id, the effect will be to start a new session with the old session's id.</source>
          <target state="translated">&lt;a href=&quot;session#method-i-delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; 는 세션 저장소에서 세션을 삭제합니다. 그러나 클라이언트에서 세션 ID를 제거하지는 않습니다. 클라이언트가 동일한 ID로 다른 요청을하면 이전 세션의 ID로 새 세션을 시작하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b80dc79b991a931436d7cf5c6d2ea0e5c43a58a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; +@addr+, the internal stored ip address, to given &lt;code&gt;addr&lt;/code&gt;. The parameter &lt;code&gt;addr&lt;/code&gt; is validated using the first &lt;code&gt;family&lt;/code&gt; member, which is &lt;code&gt;Socket::AF_INET&lt;/code&gt; or &lt;code&gt;Socket::AF_INET6&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 주어진에, + @ 요지 +, 내부 저장된 IP 주소 &lt;code&gt;addr&lt;/code&gt; . &lt;code&gt;addr&lt;/code&gt; 매개 변수는 첫 번째 &lt;code&gt;family&lt;/code&gt; 멤버 ( &lt;code&gt;Socket::AF_INET&lt;/code&gt; 또는 &lt;code&gt;Socket::AF_INET6&lt;/code&gt; 사용하여 유효성 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="16b093ca2ecf4b6b16f32f61adb9ab82e0e39651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; I/O position from the beginning</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;처음부터 I / O 위치 설정</target>
        </trans-unit>
        <trans-unit id="f9a66352cce8d393e1fee41ddb70b08c13f76b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; I/O position from the current position</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;현재 위치에서 I / O 위치 설정</target>
        </trans-unit>
        <trans-unit id="0b150cfd2b85ae9b57887b164ec0baa7bfd776d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; I/O position from the end</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;끝에서 I / O 위치 설정</target>
        </trans-unit>
        <trans-unit id="b8c4b5156d952db23a74fbec7737ff7c53b11216" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; I/O position to the next hole</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; I / 다음 구멍에 O 위치</target>
        </trans-unit>
        <trans-unit id="14494f0927b241e3275a1610669dc7d63635ad3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; I/O position to the next location containing data</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;I / O 위치를 데이터가 포함 된 다음 위치로 설정</target>
        </trans-unit>
        <trans-unit id="f3deae307d113472dce9b49ba24d00f084a3cadd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; Intersection &amp;mdash; Returns a new array containing unique elements common to &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other_ary&lt;/code&gt;s. Order is preserved from the original array.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; Intersection &amp;mdash; &lt;code&gt;self&lt;/code&gt; 및 &lt;code&gt;other_ary&lt;/code&gt; 에 공통된 고유 한 요소를 포함하는 새 배열을 반환합니다. 순서는 원래 배열에서 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="3c331dce7544a35dc339146ff5fb7d9c16332324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; Intersection &amp;mdash; Returns a new array containing unique elements common to the two arrays. The order is preserved from the original array.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;교차점 설정 &amp;mdash; 두 배열에 공통 인 고유 한 요소를 포함하는 새 배열을 반환합니다. 순서는 원래 배열에서 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="b137515dcd6330bded73a94b2d1904f55751772d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; Union &amp;mdash; Returns a new array by joining &lt;code&gt;ary&lt;/code&gt; with &lt;code&gt;other_ary&lt;/code&gt;, excluding any duplicates and preserving the order from the given arrays.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; Union &amp;mdash;중복을 제외하고 지정된 배열의 순서를 유지하여 &lt;code&gt;ary&lt;/code&gt; 를 &lt;code&gt;other_ary&lt;/code&gt; 와결합하여 새 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c2bbbf6e34bd60727da9172df13d650c52d356b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; Union &amp;mdash; Returns a new array by joining &lt;code&gt;other_ary&lt;/code&gt;s with &lt;code&gt;self&lt;/code&gt;, excluding any duplicates and preserving the order from the given arrays.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; Union &amp;mdash;중복을 제외하고 주어진 배열의 순서를 유지하여 &lt;code&gt;other_ary&lt;/code&gt; 를 &lt;code&gt;self&lt;/code&gt; 와결합하여 새 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f5713ff824488807becf521bfc57e3ad57b247f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; an error (a protected method).</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;오류를 설정하십시오 (보호 된 방법).</target>
        </trans-unit>
        <trans-unit id="54e86d507ee8400410a75673308c35a552f69f0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; assumes that the identity of each element does not change while it is stored. Modifying an element of a set will render the set to an unreliable state.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 는 각 요소의 ID가 저장되는 동안 변경되지 않는다고 가정합니다. 세트의 요소를 수정하면 세트를 신뢰할 수없는 상태로 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="1d8ee45ee077fc0ffe0ac3503bdf2b675050104c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; current netmask to given mask.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 주어진 마스크에 현재의 넷 마스크.</target>
        </trans-unit>
        <trans-unit id="f27148a090c96de5630f9138f123e0ab70282db2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; date-time format.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;날짜-시간 형식을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5757561b105f10acc55598452937975bd1add85a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; debug output.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;디버그 출력을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c70fc7798f104ed7f30245e37c62bdce4bcc8028" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; element or elements of matrix.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;행렬의 요소를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d624949e05e65ab40b083f16c165df70be140a9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; element or elements of vector.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 요소를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6f5e1774896832d497748c7ccf8bc07b4ef4c2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; implements a collection of unordered values with no duplicates. This is a hybrid of Array's intuitive inter-operation facilities and Hash's fast lookup.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 은 중복없이 정렬되지 않은 값의 모음을 구현합니다. 이것은 Array의 직관적 인 상호 운용 기능과 Hash의 빠른 조회 기능이 혼합 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="f36ce1e8a808fd106401bf1b2dfcd4d1d322fe38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; is easy to use with &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; objects (implementing &lt;code&gt;each&lt;/code&gt;). Most of the initializer methods and binary operators accept generic &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; objects besides sets and arrays. An &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; object can be converted to &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;to_set&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 객체와 함께 사용하기 쉽습니다( &lt;code&gt;each&lt;/code&gt; 구현). 이니셜 라이저 메서드와 이진 연산자는 대부분집합과 배열 외에일반&lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 개체를허용합니다. &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; 에서&lt;/a&gt; 객체로 변환 할 수있는&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 은 Using &lt;code&gt;to_set&lt;/code&gt; 의 방법을.</target>
        </trans-unit>
        <trans-unit id="db8fd11f337ee09bf39e5fa24ccdf5972ede7777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; local variable named &lt;code&gt;symbol&lt;/code&gt; as &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; &lt;code&gt;symbol&lt;/code&gt; 이라는 로컬 변수를 &lt;code&gt;obj&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd083f423e5eb75351717760d295b019a82ad92a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; logging severity threshold.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;로깅 심각도 임계 값을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f7d73f675f81d36d2fa2f1c98f8ed9ba88d883d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; maximum segment size</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;최대 세그먼트 크기 설정</target>
        </trans-unit>
        <trans-unit id="573f6914998d5f892e4b640b56743b9a77f5358b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; netns of a socket (Linux 3.4)</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;소켓의 넷 설정 (Linux 3.4)</target>
        </trans-unit>
        <trans-unit id="4778c53a54e684e43a84bd1f11f39cf61d60b5eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; options. Takes the same argument as &lt;a href=&quot;getoptlong#method-c-new&quot;&gt;&lt;code&gt;GetoptLong.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;옵션을 설정하십시오 . &lt;a href=&quot;getoptlong#method-c-new&quot;&gt; &lt;code&gt;GetoptLong.new&lt;/code&gt; &lt;/a&gt; 와 동일한 인수를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b3181c6b1174fb7eb5c60b34b7b90b2ca6a5fe89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; terminal size to &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;터미널 크기를 &lt;code&gt;rows&lt;/code&gt; 과 &lt;code&gt;columns&lt;/code&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="bc33d8649ffd19cbc9f130b05ed43e67879d2bdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the accept character set for all new &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;모든 새&lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 인스턴스에대해 승인 문자 세트를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="e00df85509a31780b99d909162e7c2ec15aa5cb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the byte position of the scan pointer.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;스캔 포인터의 바이트 위치를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="8667548eac048b068087c268a3854fd03fa23dc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the changed state of this object. Notifications will be sent only if the changed &lt;code&gt;state&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;이 객체의 변경된 상태를 설정 합니다. 변경된 &lt;code&gt;state&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우에만 알림이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="41d21784297ca735072df7ab5d86507a9afc48f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the default &lt;a href=&quot;acl&quot;&gt;&lt;code&gt;ACL&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;acl&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;기본&lt;a href=&quot;acl&quot;&gt; &lt;code&gt;ACL&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;acl&lt;/code&gt; 로설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="e808ae891e6a8e840ec2b8aa39a3a44ba8d99c4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the default id conversion object.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;기본 ID 변환 객체를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="f33f371858b0294b5daa255d247496f4147d87c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the handling of the ordering of options and arguments. A &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if option processing has already started.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;옵션 및 인수 순서 처리를 설정 하십시오. &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 에이&lt;/a&gt; 옵션 처리가 이미 시작된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ccb255687b4c7dbbd4a700f141115864ccb1963e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the index of the current cursor position in &lt;code&gt;Readline.line_buffer&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Readline.line_buffer&lt;/code&gt; 에서 현재 커서 위치의 인덱스를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="c9bcfa5ab6e7f583d6331ca18095a54647f927d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the mark for mark-based routing (Linux 2.6.25)</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 마크 기반 라우팅 표를 (리눅스 2.6.25)</target>
        </trans-unit>
        <trans-unit id="4d18f0140875b3d56826705a2788733203bfdc9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the peek offset (Linux 3.4)</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;엿보기 오프셋 설정 (Linux 3.4)</target>
        </trans-unit>
        <trans-unit id="d35992998506c2ba2cb938a1302e35d0289761ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the port range for sockets with unspecified port numbers</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;포트 번호가 지정되지 않은 소켓의 포트 범위 설정</target>
        </trans-unit>
        <trans-unit id="2fa552c12c0fc06eaeed4f0492b84265ab9ee1a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the scan pointer to the end of the string and clear matching data.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;스캔 포인터를 문자열 끝으로 설정 하고 일치하는 데이터를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="6bcc55d8e4f37cbd98dbe97f79ac51711a2ef0c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the scan pointer to the previous position. Only one previous position is remembered, and it changes with each scanning operation.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;스캔 포인터를 이전 위치로 설정 하십시오. 이전 위치는 하나만 기억되며 각 스캔 작업에 따라 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="a9356212619c0780b8b378a48beacaf0f1ae179b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the supplemental group access list to the given &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of group IDs.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 주어진에 보조 그룹 액세스 목록을&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 그룹 ID의.</target>
        </trans-unit>
        <trans-unit id="1a9856e5ba6cf595f6c542f82b7e304f69f57918" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the supplemental group access list to the given &lt;code&gt;Array&lt;/code&gt; of group IDs.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;보충 그룹 액세스 목록을 주어진그룹 ID의 &lt;code&gt;Array&lt;/code&gt; 로 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="bab9df2ce24733f9cb17bc6d82f0e34ec77fe58d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; the threshold in microseconds for low latency polling (Linux 3.11)</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;낮은 대기 시간 폴링을 위해 임계 값을 마이크로 초로 설정 하십시오 (Linux 3.11).</target>
        </trans-unit>
        <trans-unit id="0085e6c616faf5cd58ec10ac16ba601d3c550035" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; up option processing.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;옵션 처리를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="b52516beb7f5dfe2a71f798c6898a4b23f39252b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; as storage, so you must note the following points:</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 를 저장소로사용하므로 다음 사항에 유의해야합니다.</target>
        </trans-unit>
        <trans-unit id="f7cf8cd575b55814c498a7dcacda8e358c8af8b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; yydebug.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;yydebug를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="41bec2b80b332d68c881fe3c41ecc5614d7bc91f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shell&quot;&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/a&gt; implements an idiomatic Ruby interface for common UNIX shell commands.</source>
          <target state="translated">&lt;a href=&quot;shell&quot;&gt; &lt;code&gt;Shell&lt;/code&gt; &lt;/a&gt; 은 일반적인 UNIX 셸 명령에 대한 관용적 인 Ruby 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="8eef99478f2441b5ef32a34e128b041904b7bab6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shell&quot;&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;optionparser/completion&quot;&gt;&lt;code&gt;Completion&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shell&quot;&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;optionparser/completion&quot;&gt;&lt;code&gt;Completion&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ba61a6fdf650df12f7ca9cd0d8ef631a13b80fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shellwords&quot;&gt;&lt;code&gt;Shellwords&lt;/code&gt;&lt;/a&gt; &amp;ndash; Anything accepted by &lt;code&gt;Shellwords.shellwords&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;shellwords&quot;&gt; &lt;code&gt;Shellwords&lt;/code&gt; 는&lt;/a&gt; - 아무것도에 의해 허용 &lt;code&gt;Shellwords.shellwords&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33db63f8012f3838d9bc4967d84f27737f381a93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shellwords&quot;&gt;&lt;code&gt;Shellwords&lt;/code&gt;&lt;/a&gt; also comes with a core extension for &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array#method-i-shelljoin&quot;&gt;&lt;code&gt;Array#shelljoin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;shellwords&quot;&gt; &lt;code&gt;Shellwords&lt;/code&gt; &lt;/a&gt; 에는&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;array#method-i-shelljoin&quot;&gt; &lt;code&gt;Array#shelljoin&lt;/code&gt; &lt;/a&gt; 의 핵심 확장이 포함되어있습니다.</target>
        </trans-unit>
        <trans-unit id="87d117a48b34dc906d884363833a81eda51c1c05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt; is safe to use inside blocks passed to &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;signal#method-c-trap&quot;&gt; &lt;code&gt;Signal.trap&lt;/code&gt; 는&lt;/a&gt; 전달 블록 내에서 사용하는 것이 안전합니다&lt;a href=&quot;signal#method-c-trap&quot;&gt; &lt;code&gt;Signal.trap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d46f171f9604511816fff1058992e2bd4c79ac8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;singleforwardable&quot;&gt;&lt;code&gt;SingleForwardable&lt;/code&gt;&lt;/a&gt; can be used to setup delegation at the object level as well.</source>
          <target state="translated">&lt;a href=&quot;singleforwardable&quot;&gt; &lt;code&gt;SingleForwardable&lt;/code&gt; &lt;/a&gt; 을 사용하여 개체 수준에서 위임을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4acff3a2503224d0a71f1d2e87256d076b7b69e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;singleline&quot;&gt;&lt;code&gt;PrettyPrint::SingleLine&lt;/code&gt;&lt;/a&gt; is used by &lt;a href=&quot;../prettyprint#method-c-singleline_format&quot;&gt;&lt;code&gt;PrettyPrint.singleline_format&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;singleline&quot;&gt; &lt;code&gt;PrettyPrint::SingleLine&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;../prettyprint#method-c-singleline_format&quot;&gt; &lt;code&gt;PrettyPrint.singleline_format&lt;/code&gt; &lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ad2188055cdc9782e0b60b747e69926efb854adf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;singleton&quot;&gt;&lt;code&gt;Singleton&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;singleton&quot;&gt; &lt;code&gt;Singleton&lt;/code&gt; &lt;/a&gt; 과&lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd0bb565b7889075ce2e06e105ef64b2f3904d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; Authentication</source>
          <target state="translated">&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증</target>
        </trans-unit>
        <trans-unit id="ee0ab24cce117abf6382372c531e96eb078f66b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; has had listen() called on it</source>
          <target state="translated">&lt;a href=&quot;socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 에 listen ()이 호출되었습니다</target>
        </trans-unit>
        <trans-unit id="b2bd6e76d43d1cb4d2177bd04e49d8fa01f1932b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; type not supported</source>
          <target state="translated">&lt;a href=&quot;socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 유형이 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="70fd7491026a11bc1a1aee91df13910221fef1aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#SOCK_DGRAM&quot;&gt;&lt;code&gt;Socket::SOCK_DGRAM&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socket#SOCK_DGRAM&quot;&gt;&lt;code&gt;Socket::SOCK_DGRAM&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="dc9411722ebcfc01a0ee27cd8aa8403c075981a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-sockaddr_in&quot;&gt;&lt;code&gt;Socket.sockaddr_in&lt;/code&gt;&lt;/a&gt;(&amp;ldquo;smtp&amp;rdquo;, &amp;ldquo;2001:DB8::1&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-sockaddr_in&quot;&gt; &lt;code&gt;Socket.sockaddr_in&lt;/code&gt; &lt;/a&gt; (&amp;ldquo;smtp&amp;rdquo;,&amp;ldquo;2001 : DB8 :: 1&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="2b7ba8c68dbbbc58ef0e9dc88a70a8f6600347a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-sockaddr_in&quot;&gt;&lt;code&gt;Socket.sockaddr_in&lt;/code&gt;&lt;/a&gt;(80, &amp;ldquo;172.18.22.42&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-sockaddr_in&quot;&gt; &lt;code&gt;Socket.sockaddr_in&lt;/code&gt; &lt;/a&gt; (80,&amp;ldquo;172.18.22.42&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="5a404e1650f91d1bf589f6db516631881af9fc08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-sockaddr_in&quot;&gt;&lt;code&gt;Socket.sockaddr_in&lt;/code&gt;&lt;/a&gt;(80, &amp;ldquo;www.ruby-lang.org&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-sockaddr_in&quot;&gt; &lt;code&gt;Socket.sockaddr_in&lt;/code&gt; &lt;/a&gt; (80,&amp;ldquo;www.ruby-lang.org&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="62cfe236b938da29739327838c69507a9b14495b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-sockaddr_un&quot;&gt;&lt;code&gt;Socket.sockaddr_un&lt;/code&gt;&lt;/a&gt;(&amp;ldquo;/tmp/sock&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-sockaddr_un&quot;&gt;&lt;code&gt;Socket.sockaddr_un&lt;/code&gt;&lt;/a&gt;(&amp;ldquo;/tmp/sock&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="7c26b43177f8f7af638759ea919c88884eaff1e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-tcp&quot;&gt;&lt;code&gt;Socket.tcp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;TCPSocket.open&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-tcp&quot;&gt; &lt;code&gt;Socket.tcp&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;TCPSocket.open&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49ef1fea279ea56d397724910214d67de869818f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-tcp_server_loop&quot;&gt;&lt;code&gt;Socket.tcp_server_loop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;TCPServer.open&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-tcp_server_loop&quot;&gt; &lt;code&gt;Socket.tcp_server_loop&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;TCPServer.open&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00856da8c59ac6c63789e274d55c640e007954fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-udp_server_loop&quot;&gt;&lt;code&gt;Socket.udp_server_loop&lt;/code&gt;&lt;/a&gt; can be implemented using this method as follows.</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-udp_server_loop&quot;&gt; &lt;code&gt;Socket.udp_server_loop&lt;/code&gt; &lt;/a&gt; 는이 방법을 사용하여 다음과 같이 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8568cf37508d45fab7313189795d0fe207d35c11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-unix&quot;&gt;&lt;code&gt;Socket.unix&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;UNIXSocket.open&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-unix&quot;&gt; &lt;code&gt;Socket.unix&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;UNIXSocket.open&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="161fc50fc5cd64620425359216fa0c13b0ec8f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-c-unix_server_loop&quot;&gt;&lt;code&gt;Socket.unix_server_loop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;UNIXServer.open&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-unix_server_loop&quot;&gt; &lt;code&gt;Socket.unix_server_loop&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;UNIXServer.open&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41f53acb4221d014c3843fa100879083aa9149a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-i-accept_nonblock&quot;&gt;&lt;code&gt;Socket#accept_nonblock&lt;/code&gt;&lt;/a&gt; may raise any error corresponding to accept(2) failure, including Errno::EWOULDBLOCK.</source>
          <target state="translated">&lt;a href=&quot;socket#method-i-accept_nonblock&quot;&gt; &lt;code&gt;Socket#accept_nonblock&lt;/code&gt; &lt;/a&gt; 은 Errno :: EWOULDBLOCK을 포함하여 accept (2) 실패에 해당하는 오류를 발생 시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="892f4c5e11beab98cad71a7175e411d58f11c0d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-i-connect_nonblock&quot;&gt;&lt;code&gt;Socket#connect_nonblock&lt;/code&gt;&lt;/a&gt; may raise any error corresponding to connect(2) failure, including Errno::EINPROGRESS.</source>
          <target state="translated">&lt;a href=&quot;socket#method-i-connect_nonblock&quot;&gt; &lt;code&gt;Socket#connect_nonblock&lt;/code&gt; &lt;/a&gt; 은 Errno :: EINPROGRESS를 포함하여 connect (2) 실패에 해당하는 오류를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85e45b405283d1482402b97f9522270edbfe274b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#method-i-recvfrom_nonblock&quot;&gt;&lt;code&gt;Socket#recvfrom_nonblock&lt;/code&gt;&lt;/a&gt; may raise any error corresponding to recvfrom(2) failure, including Errno::EWOULDBLOCK.</source>
          <target state="translated">&lt;a href=&quot;socket#method-i-recvfrom_nonblock&quot;&gt; &lt;code&gt;Socket#recvfrom_nonblock&lt;/code&gt; &lt;/a&gt; 은 Errno :: EWOULDBLOCK을 포함하여 recvfrom (2) 실패에 해당하는 오류를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="042cddebc35d712fe955d82f430e5158f7c9348f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socketerror&quot;&gt;&lt;code&gt;SocketError&lt;/code&gt;&lt;/a&gt; is the error class for socket.</source>
          <target state="translated">&lt;a href=&quot;socketerror&quot;&gt; &lt;code&gt;SocketError&lt;/code&gt; &lt;/a&gt; 는 소켓 의 오류 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d4e150c6b5cfd0ad7b80ce8a4eeab163a85956fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; implements a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; that guarantees that its elements are yielded in sorted order (according to the return values of their #&amp;lt;=&amp;gt; methods) when iterating over them.</source>
          <target state="translated">&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 은 요소를 반복 할 때 요소가 # &amp;lt;=&amp;gt; 메서드의 반환 값에 따라 정렬 된 순서로 산출되도록하는&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 을구현합니다.</target>
        </trans-unit>
        <trans-unit id="a252707d19f00ed419a1553f8a46c9d59f9a3d29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;srv&quot;&gt;&lt;code&gt;SRV&lt;/code&gt;&lt;/a&gt; resource record defined in RFC 2782</source>
          <target state="translated">&lt;a href=&quot;srv&quot;&gt; &lt;code&gt;SRV&lt;/code&gt; &lt;/a&gt;RFC 2782에 정의 된 SRV 리소스 레코드</target>
        </trans-unit>
        <trans-unit id="5ce772fbfa159d9558401c90aea79efde39782c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; 2.0</source>
          <target state="translated">&lt;a href=&quot;ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; 2.0</target>
        </trans-unit>
        <trans-unit id="9570ba2a1473c5231ffb071a8e94f1eb40083c29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; 3.0</source>
          <target state="translated">&lt;a href=&quot;ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; 3.0</target>
        </trans-unit>
        <trans-unit id="95998aa5ea31c578ca7d61293eb135944f18c85a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sslconfig&quot;&gt;&lt;code&gt;SSLConfig&lt;/code&gt;&lt;/a&gt; handles the needed SSL information for establishing a &lt;a href=&quot;../drbsslsocket&quot;&gt;&lt;code&gt;DRbSSLSocket&lt;/code&gt;&lt;/a&gt; connection, including generating the X509 / RSA pair.</source>
          <target state="translated">&lt;a href=&quot;sslconfig&quot;&gt; &lt;code&gt;SSLConfig&lt;/code&gt; &lt;/a&gt; 는X509 / RSA 쌍 생성을 포함하여&lt;a href=&quot;../drbsslsocket&quot;&gt; &lt;code&gt;DRbSSLSocket&lt;/code&gt; &lt;/a&gt; 연결을 설정하는 데 필요한 SSL 정보를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="91977d6cba85ee17cc10316dee101d8b8f1888b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sslcontext#attribute-i-cert&quot;&gt;&lt;code&gt;cert=&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sslcontext#attribute-i-key&quot;&gt;&lt;code&gt;key=&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;sslcontext#attribute-i-extra_chain_cert&quot;&gt;&lt;code&gt;extra_chain_cert=&lt;/code&gt;&lt;/a&gt; are old accessor methods for setting certificate and internally call this method.</source>
          <target state="translated">&lt;a href=&quot;sslcontext#attribute-i-cert&quot;&gt; &lt;code&gt;cert=&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;sslcontext#attribute-i-key&quot;&gt; &lt;code&gt;key=&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;sslcontext#attribute-i-extra_chain_cert&quot;&gt; &lt;code&gt;extra_chain_cert=&lt;/code&gt; &lt;/a&gt; 는 인증서를 설정하기위한 오래된 접근 자 메서드이며 내부적으로이 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="0c8d6830a983112ce2868dc93367395ee9cac116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sslserver&quot;&gt;&lt;code&gt;SSLServer&lt;/code&gt;&lt;/a&gt; represents a TCP/IP server socket with Secure Sockets Layer.</source>
          <target state="translated">&lt;a href=&quot;sslserver&quot;&gt; &lt;code&gt;SSLServer&lt;/code&gt; &lt;/a&gt; 는 SSL (Secure Sockets Layer)이있는 TCP / IP 서버 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ee216242ad8b48fbb476761bf3aec5e243510f99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt; &amp;ndash; default for &lt;code&gt;rescue&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;standarderror&quot;&gt; &lt;code&gt;StandardError&lt;/code&gt; &lt;/a&gt; &amp;ndash; &lt;code&gt;rescue&lt;/code&gt; 기본값</target>
        </trans-unit>
        <trans-unit id="14af16480ae4addb590aa64a227fa532890119bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;status&quot;&gt;&lt;code&gt;Process::Status&lt;/code&gt;&lt;/a&gt; encapsulates the information on the status of a running or terminated system process. The built-in variable &lt;code&gt;$?&lt;/code&gt; is either &lt;code&gt;nil&lt;/code&gt; or a &lt;a href=&quot;status&quot;&gt;&lt;code&gt;Process::Status&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;status&quot;&gt; &lt;code&gt;Process::Status&lt;/code&gt; &lt;/a&gt; 는 실행 중이거나 종료 된 시스템 프로세스의 상태에 대한 정보를 캡슐화합니다. 내장 변수 &lt;code&gt;$?&lt;/code&gt; 중 하나입니다 &lt;code&gt;nil&lt;/code&gt; 또는&lt;a href=&quot;status&quot;&gt; &lt;code&gt;Process::Status&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="3eff29be081f5dd3b5826d23209c5a81aba37f5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stopiteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; raised in the block breaks the loop. In this case, loop returns the &amp;ldquo;result&amp;rdquo; value stored in the exception.</source>
          <target state="translated">&lt;a href=&quot;stopiteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;블록에서 발생한 StopIteration 은 루프를 끊습니다. 이 경우 루프는 예외에 저장된 &quot;결과&quot;값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3158a35a99ecaa09292c29188d7869ad5f393046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;store&quot;&gt;&lt;code&gt;YAML::Store&lt;/code&gt;&lt;/a&gt; objects are always reentrant. But if &lt;em&gt;thread_safe&lt;/em&gt; is set to true, then it will become thread-safe at the cost of a minor performance hit.</source>
          <target state="translated">&lt;a href=&quot;store&quot;&gt; &lt;code&gt;YAML::Store&lt;/code&gt; &lt;/a&gt; 객체는 항상 재진입됩니다. 그러나&lt;em&gt; thread_safe&lt;/em&gt; 가 true로 설정되면성능이 약간 저하되어 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="b7764ca55251855f6e48dc280eab960e07859fff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;store&quot;&gt;&lt;code&gt;YAML::Store&lt;/code&gt;&lt;/a&gt; provides the same functionality as &lt;a href=&quot;../pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt;, except it uses YAML to dump objects instead of &lt;a href=&quot;../marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;store&quot;&gt; &lt;code&gt;YAML::Store&lt;/code&gt; &lt;/a&gt; 는YAML을 사용하여&lt;a href=&quot;../marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt; 대신 객체를 덤프한다는 점을 제외하고&lt;a href=&quot;../pstore&quot;&gt; &lt;code&gt;PStore&lt;/code&gt; &lt;/a&gt; 와 동일한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b9515619e91a7f5c550ab4d5dbdf8e1edfaf7961" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; &amp;ndash; Any non-empty string</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &amp;ndash; 비어 있지 않은 문자열</target>
        </trans-unit>
        <trans-unit id="34e3f2206dd73fd6e09daa380f240ffae3140fab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; Output&amp;mdash;Writes &lt;em&gt;obj&lt;/em&gt; to &lt;em&gt;ios&lt;/em&gt;. &lt;em&gt;obj&lt;/em&gt; will be converted to a string using &lt;code&gt;to_s&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; Output&amp;mdash;&lt;em&gt; obj&lt;/em&gt; 를&lt;em&gt; ios에&lt;/em&gt; 씁니다. &lt;em&gt;obj&lt;/em&gt; 는 &lt;code&gt;to_s&lt;/code&gt; 를 사용하여 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="48c0b34fb6f017113c7166489c8f06e89dcf1f8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; arguments are converted to symbols.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 인수는 기호로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="7ba91706b47a0d3dbb49b031f0e2f066a2412962" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; for carriage return</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;캐리지 리턴을위한 문자열</target>
        </trans-unit>
        <trans-unit id="bafb9d07f7a1885e56c76854dbb0e20023b4f40a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; for linefeed</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;줄 바꿈을위한 문자열</target>
        </trans-unit>
        <trans-unit id="d4d70ae082c8e8c931756f24f66be04ef03714de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; representations:</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 표현 :</target>
        </trans-unit>
        <trans-unit id="981bf3c51b7bd7e0c838b96cca3b5aa394842a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that specifies which version of the HTML generation methods to use. If not specified, no HTML generation methods will be loaded.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;사용할 HTML 생성 방법의 버전을 지정하는 문자열 입니다. 지정하지 않으면 HTML 생성 방법이로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="97b9bb807f200bd5041cf4847cfb7e720aa03561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to extract URIs from.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;URI를 추출 할 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="e046a61106a673ed739e925e2ac92f92eadf2d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 과&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64bba078ee11b2eac1a1d3ec063101e6df35746b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#method-i-inspect&quot;&gt;&lt;code&gt;String#inspect&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regexp#method-i-inspect&quot;&gt;&lt;code&gt;Regexp#inspect&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;string#method-i-inspect&quot;&gt; &lt;code&gt;String#inspect&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;regexp#method-i-inspect&quot;&gt; &lt;code&gt;Regexp#inspect&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8210e2fa2b3b8b22cb07a254828d732064b0218d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#method-i-shellescape&quot;&gt;&lt;code&gt;String#shellescape&lt;/code&gt;&lt;/a&gt; is a shorthand for this function.</source>
          <target state="translated">&lt;a href=&quot;string#method-i-shellescape&quot;&gt; &lt;code&gt;String#shellescape&lt;/code&gt; &lt;/a&gt; 는이 함수의 줄임말입니다.</target>
        </trans-unit>
        <trans-unit id="0016d25fcf14d04d459b8180d7ea2ee7126c5cb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#method-i-shellsplit&quot;&gt;&lt;code&gt;String#shellsplit&lt;/code&gt;&lt;/a&gt; is a shortcut for this function.</source>
          <target state="translated">&lt;a href=&quot;string#method-i-shellsplit&quot;&gt; &lt;code&gt;String#shellsplit&lt;/code&gt; &lt;/a&gt; 은이 함수의 바로 가기입니다.</target>
        </trans-unit>
        <trans-unit id="4cd12f4440a7afad5799fe581618c52c0a9c6c53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stringscanner&quot;&gt;&lt;code&gt;StringScanner&lt;/code&gt;&lt;/a&gt; provides for lexical scanning operations on a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Here is an example of its usage:</source>
          <target state="translated">&lt;a href=&quot;stringscanner&quot;&gt; &lt;code&gt;StringScanner&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 에서 어휘 스캔 작업을 제공합니다. 사용법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f0b5868f8b88219483b1330efdc7eba52b13795" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stringscanner#method-i-beginning_of_line-3F&quot;&gt;&lt;code&gt;beginning_of_line?&lt;/code&gt;&lt;/a&gt; (#bol?)</source>
          <target state="translated">&lt;a href=&quot;stringscanner#method-i-beginning_of_line-3F&quot;&gt; &lt;code&gt;beginning_of_line?&lt;/code&gt; &lt;/a&gt;(#bol?)</target>
        </trans-unit>
        <trans-unit id="562f8587681051a17d407506bfd797c847f4ac1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stringscanner#method-i-beginning_of_line-3F&quot;&gt;&lt;code&gt;beginning_of_line?&lt;/code&gt;&lt;/a&gt; (bol?)</source>
          <target state="translated">&lt;a href=&quot;stringscanner#method-i-beginning_of_line-3F&quot;&gt; &lt;code&gt;beginning_of_line?&lt;/code&gt; &lt;/a&gt;(볼?)</target>
        </trans-unit>
        <trans-unit id="df3d7c95cac32619b5a5f1edb917091e4c657e48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct#Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; that is only available when compiled with &lt;code&gt;HAVE_GETGRENT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct#Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;HAVE_GETGRENT&lt;/code&gt; 로 컴파일 할 때만 사용할 수있는&lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1de24170e998f981c7b3d9e48e89b8ade5322af7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct#Passwd&quot;&gt;&lt;code&gt;Passwd&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; that contains the following members:</source>
          <target state="translated">&lt;a href=&quot;struct#Passwd&quot;&gt; &lt;code&gt;Passwd&lt;/code&gt; &lt;/a&gt; 는다음 멤버를 포함하는&lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="175cc66af2edc312fa62db3e68f61910d1a7bcf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct#Tms&quot;&gt;&lt;code&gt;Tms&lt;/code&gt;&lt;/a&gt; for backward compatibility</source>
          <target state="translated">&lt;a href=&quot;struct#Tms&quot;&gt; &lt;code&gt;Tms&lt;/code&gt; &lt;/a&gt;이전 버전과의 호환성을위한 Tms</target>
        </trans-unit>
        <trans-unit id="7610cff053c75a2858b394261fdeec489efd8c36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct#method-i-filter&quot;&gt;&lt;code&gt;Struct#filter&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;struct#method-i-select&quot;&gt;&lt;code&gt;Struct#select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct#method-i-filter&quot;&gt; &lt;code&gt;Struct#filter&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;struct#method-i-select&quot;&gt; &lt;code&gt;Struct#select&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="7e52af67b56cfccce671c235fede757791bbd020" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;switch&quot;&gt;&lt;code&gt;OptionParser::Switch&lt;/code&gt;&lt;/a&gt; instance to be added.</source>
          <target state="translated">&lt;a href=&quot;switch&quot;&gt; &lt;code&gt;OptionParser::Switch&lt;/code&gt; &lt;/a&gt; 추가 할 인스턴스를 전환 합니다.</target>
        </trans-unit>
        <trans-unit id="6ee7b9cad6c0ca18d402ed80ce2fd03b3f08ff95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;switch&quot;&gt;&lt;code&gt;OptionParser::Switch&lt;/code&gt;&lt;/a&gt; instance to be inserted.</source>
          <target state="translated">&lt;a href=&quot;switch&quot;&gt; &lt;code&gt;OptionParser::Switch&lt;/code&gt; &lt;/a&gt; 삽입 할 인스턴스를 전환 합니다.</target>
        </trans-unit>
        <trans-unit id="97db99647b31e171d63cb24b176dc2c99a23189a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; naming the method that will be called when this &lt;a href=&quot;observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; has changes.</source>
          <target state="translated">&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 이 때 호출 될 메소드 명명&lt;a href=&quot;observable&quot;&gt; &lt;code&gt;Observable&lt;/code&gt; &lt;/a&gt; 변경 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="392e148accce87b273edd20769d38ba0769b5da7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; objects represent names inside the Ruby interpreter. They are generated using the &lt;code&gt;:name&lt;/code&gt; and &lt;code&gt;:&quot;string&quot;&lt;/code&gt; literals syntax, and by the various &lt;code&gt;to_sym&lt;/code&gt; methods. The same &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object will be created for a given name or string for the duration of a program's execution, regardless of the context or meaning of that name. Thus if &lt;code&gt;Fred&lt;/code&gt; is a constant in one context, a method in another, and a class in a third, the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:Fred&lt;/code&gt; will be the same object in all three contexts.</source>
          <target state="translated">&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 객체는 Ruby 인터프리터 내부의 이름을 나타냅니다. &lt;code&gt;:name&lt;/code&gt; 및 &lt;code&gt;:&quot;string&quot;&lt;/code&gt; 리터럴 구문과 다양한 &lt;code&gt;to_sym&lt;/code&gt; 메소드를사용하여 생성됩니다. 해당 이름의 컨텍스트 또는 의미에 관계없이 프로그램 실행 기간 동안 주어진 이름 또는 문자열에 대해동일한&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 객체가 생성됩니다. 따라서 &lt;code&gt;Fred&lt;/code&gt; 가 한 컨텍스트에서는 상수이고 다른 컨텍스트에서는 메서드이고 세 번째 컨텍스트에서는&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; &lt;code&gt;:Fred&lt;/code&gt; 가 세 컨텍스트 모두에서 동일한 객체가됩니다.</target>
        </trans-unit>
        <trans-unit id="2e24d538918a309c65ab990d459311e9f829abaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; (case insensitive)</source>
          <target state="translated">&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; (대소 문자 구분)</target>
        </trans-unit>
        <trans-unit id="b5e32397137968d98a169d84d8971115496737f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; table used for displaying incoming events:</source>
          <target state="translated">&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;들어오는 이벤트를 표시하는 데 사용되는 기호 테이블 :</target>
        </trans-unit>
        <trans-unit id="67054ca2c391c6c657cf1bae7393ecca265c8135" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; table used for displaying trace information</source>
          <target state="translated">&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;추적 정보를 표시하는 데 사용되는 기호 테이블</target>
        </trans-unit>
        <trans-unit id="bb68120273cf61116b2359e65e6dffa1111de609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syslog&quot;&gt;&lt;code&gt;Syslog&lt;/code&gt;&lt;/a&gt; messages are typically passed to a central logging daemon. The daemon may filter them; route them into different files (usually found under /var/log); place them in SQL databases; forward them to centralized logging servers via TCP or UDP; or even alert the system administrator via email, pager or text message.</source>
          <target state="translated">&lt;a href=&quot;syslog&quot;&gt; &lt;code&gt;Syslog&lt;/code&gt; &lt;/a&gt; 메시지는 일반적으로 중앙 로깅 데몬으로 전달됩니다. 데몬이이를 필터링 할 수 있습니다. 다른 파일 (일반적으로 / var / log에 있음)로 라우팅하십시오. SQL 데이터베이스에 배치하십시오. TCP 또는 UDP를 통해 중앙 로깅 서버로 전달합니다. 또는 이메일, 호출기 또는 문자 메시지를 통해 시스템 관리자에게 알리십시오.</target>
        </trans-unit>
        <trans-unit id="fe3f3a80c20f14e9e867610be320562dfb84eb87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;systemcallerror&quot;&gt;&lt;code&gt;SystemCallError&lt;/code&gt;&lt;/a&gt; is the base class for all low-level platform-dependent errors.</source>
          <target state="translated">&lt;a href=&quot;systemcallerror&quot;&gt; &lt;code&gt;SystemCallError&lt;/code&gt; &lt;/a&gt; 는 모든 하위 레벨 플랫폼 종속 오류의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="bf2fd78a5caf6790e3a9e674fdc84a4ac93240a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tcpserver&quot;&gt;&lt;code&gt;TCPServer&lt;/code&gt;&lt;/a&gt; represents a TCP/IP server socket.</source>
          <target state="translated">&lt;a href=&quot;tcpserver&quot;&gt; &lt;code&gt;TCPServer&lt;/code&gt; &lt;/a&gt; 는 TCP / IP 서버 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="999076a5287ddf8f7c69f59260b201d4b0570333" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tcpserver#method-i-accept_nonblock&quot;&gt;&lt;code&gt;TCPServer#accept_nonblock&lt;/code&gt;&lt;/a&gt; may raise any error corresponding to accept(2) failure, including Errno::EWOULDBLOCK.</source>
          <target state="translated">&lt;a href=&quot;tcpserver#method-i-accept_nonblock&quot;&gt; &lt;code&gt;TCPServer#accept_nonblock&lt;/code&gt; &lt;/a&gt; 은 Errno :: EWOULDBLOCK을 포함하여 accept (2) 실패에 해당하는 오류를 발생 시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de61e39c1a7a7ee1f7b71ba67fc78ab7a11d0edd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tcpsocket&quot;&gt;&lt;code&gt;TCPSocket&lt;/code&gt;&lt;/a&gt; represents a TCP/IP client socket.</source>
          <target state="translated">&lt;a href=&quot;tcpsocket&quot;&gt; &lt;code&gt;TCPSocket&lt;/code&gt; &lt;/a&gt; 은 TCP / IP 클라이언트 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b159b7f9fe5925c25210a577061d0eb4b3bff456" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; itself however may not be entirely thread-safe. If you access the same &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; object from multiple threads then you should protect it with a mutex.</source>
          <target state="translated">&lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt;그러나 Tempfile 자체는 완전히 스레드 안전하지 않을 수 있습니다. 여러 스레드에서동일한&lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt; 객체에액세스하는 경우뮤텍스로 보호해야합니다.</target>
        </trans-unit>
        <trans-unit id="e46274a0f249f381f0794fc5820aa87c174fb7e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; initialization</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 초기화</target>
        </trans-unit>
        <trans-unit id="59763dec08ddfb234d914e9f16daac80212de47b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; local values are carried along with threads, and do not respect fibers. For example:</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 로컬 값은 스레드와 함께 전달되며 섬유를 존중하지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ce4f9d1c61eba042511fd7d3bf1322594a662616" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; status</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 상태</target>
        </trans-unit>
        <trans-unit id="d80a67391de6e3f602bc093615da967ae1ae878b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; termination</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 종료</target>
        </trans-unit>
        <trans-unit id="35923c6b64866c59b486f57a06adee21db230ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; variables and scope</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 변수 및 범위</target>
        </trans-unit>
        <trans-unit id="606a59b3a58033b330f35d46aa3ecfd514e3120c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;thread#method-i-5B-5D&quot;&gt;&lt;code&gt;Thread#[]&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;thread#method-i-5B-5D-3D&quot;&gt;&lt;code&gt;Thread#[]=&lt;/code&gt;&lt;/a&gt; are not thread-local but fiber-local. This confusion did not exist in Ruby 1.8 because fibers are only available since Ruby 1.9. Ruby 1.9 chooses that the methods behaves fiber-local to save following idiom for dynamic scope.</source>
          <target state="translated">&lt;a href=&quot;thread#method-i-5B-5D&quot;&gt; &lt;code&gt;Thread#[]&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;thread#method-i-5B-5D-3D&quot;&gt; &lt;code&gt;Thread#[]=&lt;/code&gt; &lt;/a&gt; 는 스레드 로컬이 아니라 파이버 로컬입니다. 이 혼동은 Ruby 1.8에서 존재하지 않았기 때문에 Ruby 1.9 이후에만 파이버를 사용할 수 있습니다. Ruby 1.9는 동적 범위에 대한 다음 관용구를 저장하기 위해 메소드가 광 로컬로 작동하도록 선택합니다.</target>
        </trans-unit>
        <trans-unit id="6cb4ba7de15bebe35910548db7dab9356b988801" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threadgroup&quot;&gt;&lt;code&gt;ThreadGroup&lt;/code&gt;&lt;/a&gt; provides a means of keeping track of a number of threads as a group.</source>
          <target state="translated">&lt;a href=&quot;threadgroup&quot;&gt; &lt;code&gt;ThreadGroup&lt;/code&gt; &lt;/a&gt; 은 여러 스레드를 그룹으로 추적하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f700b582beef12da4daddab5f3a85b686c650770" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; &amp;ndash; Anything accepted by &lt;code&gt;Time.httpdate&lt;/code&gt; or &lt;code&gt;Time.parse&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; &amp;ndash; &lt;code&gt;Time.httpdate&lt;/code&gt; 또는 &lt;code&gt;Time.parse&lt;/code&gt; 에 의해 허용되는 모든 것</target>
        </trans-unit>
        <trans-unit id="d7ee51577046a12e3e71eb980abfe0678da2334f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; between keepalive probes (Linux 2.4, glibc 2.2)</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;Keepalive 프로브 사이의 시간 (Linux 2.4, glibc 2.2)</target>
        </trans-unit>
        <trans-unit id="7a4c5d894a49dcb373523bdf96fea2b49fc269a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; is an abstraction of dates and times. &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; is stored internally as the number of seconds with fraction since the &lt;em&gt;Epoch&lt;/em&gt;, January 1, 1970 00:00 UTC. Also see the library module &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class treats GMT (Greenwich Mean &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;) and UTC (Coordinated Universal &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;) as equivalent. GMT is the older way of referring to these baseline times but persists in the names of calls on POSIX systems.</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 은 날짜와 시간의 추상화입니다. &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 은1970 년 1 월 1 일 00:00 UTC이후&lt;em&gt; Epoch&lt;/em&gt; 이후 분수로 초 단위로 내부적으로 저장됩니다. 라이브러리 모듈&lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 도 참조하십시오. &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 클래스 취급 GMT (그리니치&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; )와 UTC (협정 세계&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 동등한 등). GMT는 이러한 기준 시간을 참조하는 오래된 방법이지만 POSIX 시스템의 통화 이름에는 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="d7f16b023ee63f34be78b068c43f11cd43554f74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; stamping of incoming and outgoing packets (Linux 2.6.30)</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;들어오고 나가는 패킷의 타임 스탬프 (Linux 2.6.30)</target>
        </trans-unit>
        <trans-unit id="da7204974704061c371e1ac359c5731bfd513cee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; zone as hour offset from UTC (e.g. +0900)</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; UTC로부터의 오프셋 (offset) 시간과 같은 영역 (예 : 0900)</target>
        </trans-unit>
        <trans-unit id="93dcb608906b8009096ce377a0457fe7239aeca2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; zone name</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 영역 이름</target>
        </trans-unit>
        <trans-unit id="7973385f0ba6ddc1eee50424b7aa8647d3105cbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;timeout&quot;&gt;&lt;code&gt;Timeout&lt;/code&gt;&lt;/a&gt; long-running blocks</source>
          <target state="translated">&lt;a href=&quot;timeout&quot;&gt; &lt;code&gt;Timeout&lt;/code&gt; &lt;/a&gt; 장기 실행 블록</target>
        </trans-unit>
        <trans-unit id="a687111b9e470d582889f1d1edc49b6369e7c5e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;timeout&quot;&gt;&lt;code&gt;Timeout&lt;/code&gt;&lt;/a&gt; provides a way to auto-terminate a potentially long-running operation if it hasn't finished in a fixed amount of time.</source>
          <target state="translated">&lt;a href=&quot;timeout&quot;&gt; &lt;code&gt;Timeout&lt;/code&gt; &lt;/a&gt; 은 고정 된 시간 내에 완료되지 않은 경우 장기 실행 가능성이있는 작업을 자동 종료하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ff70e00d4721680a62988ca21c4a794f69072847" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; message to raise with &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;. Omitting will use the default, &amp;ldquo;execution expired&amp;rdquo;</source>
          <target state="translated">&lt;a href=&quot;timeout/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 와 함께 발생하는 오류 메시지. 생략하면 기본값 &quot;실행 만료&quot;가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9bae6389af1eb30f9fa77232a08cd54a3edfc1d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trueclass&quot;&gt;&lt;code&gt;TrueClass&lt;/code&gt;&lt;/a&gt; &amp;ndash; Accepts '+, yes, true, -, no, false' and defaults as &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;trueclass&quot;&gt; &lt;code&gt;TrueClass&lt;/code&gt; &lt;/a&gt; &amp;ndash; '+, yes, true,-, no, false'를 수락하고 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1bed0cbe0818637882dbdbe6f14e28e85cdbe10e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; implements topological sorting using Tarjan's algorithm for strongly connected components.</source>
          <target state="translated">&lt;a href=&quot;tsort&quot;&gt; &lt;code&gt;TSort&lt;/code&gt; &lt;/a&gt; 는 강력하게 연결된 구성 요소에 Tarjan의 알고리즘을 사용하여 토폴로지 정렬을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="3b3da054fc7d2b9e51e817bb0f2896986a412c87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; is designed to be able to be used with any object which can be interpreted as a directed graph.</source>
          <target state="translated">&lt;a href=&quot;tsort&quot;&gt; &lt;code&gt;TSort&lt;/code&gt; &lt;/a&gt; 는 유 방향 그래프로 해석 될 수있는 모든 객체와 함께 사용할 수 있도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="7b7e8df4c167f562c9e32f98d4de9d1516e9907c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; requires two methods to interpret an object as a graph, &lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt;&lt;code&gt;tsort_each_node&lt;/code&gt;&lt;/a&gt; and tsort_each_child.</source>
          <target state="translated">&lt;a href=&quot;tsort&quot;&gt; &lt;code&gt;TSort&lt;/code&gt; &lt;/a&gt; 에는 오브젝트를&lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt; &lt;code&gt;tsort_each_node&lt;/code&gt; &lt;/a&gt; 및 tsort_each_child그래프로 해석하는 두 가지 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d1fd7b9822896b0c31095ea62347d72041e48b41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort#method-i-each_strongly_connected_component&quot;&gt;&lt;code&gt;each_strongly_connected_component&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-each_strongly_connected_component&quot;&gt; &lt;code&gt;each_strongly_connected_component&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cda4ca998a1427885ed9a79a2eed490a0f473513" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort#method-i-each_strongly_connected_component_from&quot;&gt;&lt;code&gt;each_strongly_connected_component_from&lt;/code&gt;&lt;/a&gt; doesn't call &lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt;&lt;code&gt;tsort_each_node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-each_strongly_connected_component_from&quot;&gt; &lt;code&gt;each_strongly_connected_component_from&lt;/code&gt; 는&lt;/a&gt; 호출하지 않습니다&lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt; &lt;code&gt;tsort_each_node&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6f1f98002b66d00f5ee52df2eec0615837772d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort#method-i-tsort_each&quot;&gt;&lt;code&gt;tsort_each&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;nil&lt;/code&gt;. If there is a cycle, &lt;code&gt;TSort::Cyclic&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-tsort_each&quot;&gt; &lt;code&gt;tsort_each&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 사이클이 있으면 &lt;code&gt;TSort::Cyclic&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b63f5de6c1b3875178988436584444a00d7a19f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt;&lt;code&gt;tsort_each_child&lt;/code&gt;&lt;/a&gt; is used to iterate for child nodes of &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt; &lt;code&gt;tsort_each_child&lt;/code&gt; 은&lt;/a&gt; 의 자식 노드에 대한 반복하는 데 사용되는&lt;em&gt; 노드&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="37c9e745dca2de003b72a470872b9590e9a6de5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt;&lt;code&gt;tsort_each_child&lt;/code&gt;&lt;/a&gt; is used to iterate for child nodes of a given node.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt; &lt;code&gt;tsort_each_child&lt;/code&gt; &lt;/a&gt; 는 주어진 노드의 자식 노드를 반복하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b7944139d34dbe1a6e5ad9532f6799b254989236" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt;&lt;code&gt;tsort_each_node&lt;/code&gt;&lt;/a&gt; is used to iterate for all nodes over a graph.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt; &lt;code&gt;tsort_each_node&lt;/code&gt; &lt;/a&gt; 는 그래프에서 모든 노드를 반복하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cb0e34a9c5a902c1bda0fe238f32a7110219ff0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tuplebag&quot;&gt;&lt;code&gt;TupleBag&lt;/code&gt;&lt;/a&gt; is an unordered collection of tuples. It is the basis of Tuplespace.</source>
          <target state="translated">&lt;a href=&quot;tuplebag&quot;&gt; &lt;code&gt;TupleBag&lt;/code&gt; &lt;/a&gt; 는 정렬되지 않은 튜플 모음입니다. Tuplespace의 기초입니다.</target>
        </trans-unit>
        <trans-unit id="1b07ca1ff4ff7349fdf69c7d35aa9d62e24e5b79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tuplespaceproxy&quot;&gt;&lt;code&gt;TupleSpaceProxy&lt;/code&gt;&lt;/a&gt; allows a remote Tuplespace to appear as local.</source>
          <target state="translated">&lt;a href=&quot;tuplespaceproxy&quot;&gt; &lt;code&gt;TupleSpaceProxy&lt;/code&gt; 를&lt;/a&gt; 사용하면 원격 Tuplespace가 로컬로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b6b24f62aba6482c58f4ff7513b8c9619133170" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;udpsocket&quot;&gt;&lt;code&gt;UDPSocket&lt;/code&gt;&lt;/a&gt; represents a UDP/IP socket.</source>
          <target state="translated">&lt;a href=&quot;udpsocket&quot;&gt; &lt;code&gt;UDPSocket&lt;/code&gt; &lt;/a&gt; 은 UDP / IP 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="52ff848a856616ee601d8766f2984ac4a0157346" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;udpsocket#method-i-recvfrom_nonblock&quot;&gt;&lt;code&gt;UDPSocket#recvfrom_nonblock&lt;/code&gt;&lt;/a&gt; may raise any error corresponding to recvfrom(2) failure, including Errno::EWOULDBLOCK.</source>
          <target state="translated">&lt;a href=&quot;udpsocket#method-i-recvfrom_nonblock&quot;&gt; &lt;code&gt;UDPSocket#recvfrom_nonblock&lt;/code&gt; &lt;/a&gt; 은 Errno :: EWOULDBLOCK을 포함하여 recvfrom (2) 실패에 해당하는 오류를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88bf1a31d41ff2afd0c267ff98a62eb2a58ff56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixserver&quot;&gt;&lt;code&gt;UNIXServer&lt;/code&gt;&lt;/a&gt; represents a UNIX domain stream server socket.</source>
          <target state="translated">&lt;a href=&quot;unixserver&quot;&gt; &lt;code&gt;UNIXServer&lt;/code&gt; &lt;/a&gt; 는 UNIX 도메인 스트림 서버 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="584b9b9772d8791fe8c0348ec5238d36ed653de3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixserver#method-i-accept_nonblock&quot;&gt;&lt;code&gt;UNIXServer#accept_nonblock&lt;/code&gt;&lt;/a&gt; may raise any error corresponding to accept(2) failure, including Errno::EWOULDBLOCK.</source>
          <target state="translated">&lt;a href=&quot;unixserver#method-i-accept_nonblock&quot;&gt; &lt;code&gt;UNIXServer#accept_nonblock&lt;/code&gt; &lt;/a&gt; 은 Errno :: EWOULDBLOCK을 포함하여 accept (2) 실패에 해당하는 오류를 발생 시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c6fdea2988d8432cd9487c343c8730be28b9896" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixsocket&quot;&gt;&lt;code&gt;UNIXSocket&lt;/code&gt;&lt;/a&gt; represents a UNIX domain stream client socket.</source>
          <target state="translated">&lt;a href=&quot;unixsocket&quot;&gt; &lt;code&gt;UNIXSocket&lt;/code&gt; &lt;/a&gt; 은 UNIX 도메인 스트림 클라이언트 소켓을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="297f4e44f88d7fae2c20d25dcf8a9b19853412b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixsocket#method-c-pair&quot;&gt;&lt;code&gt;UNIXSocket.pair&lt;/code&gt;&lt;/a&gt; {|s1, s2|</source>
          <target state="translated">&lt;a href=&quot;unixsocket#method-c-pair&quot;&gt; &lt;code&gt;UNIXSocket.pair&lt;/code&gt; &lt;/a&gt; {| s1, s2 |</target>
        </trans-unit>
        <trans-unit id="6b947b54b8671ea20a1dfac4c82f7c5380b6e0d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri&quot;&gt;&lt;code&gt;Bundler::URI&lt;/code&gt;&lt;/a&gt; is a module providing classes to handle Uniform Resource Identifiers (&lt;a href=&quot;http://tools.ietf.org/html/rfc2396&quot;&gt;RFC2396&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;Bundler::URI&lt;/code&gt; &lt;/a&gt; 는 Uniform Resource Identifier (&lt;a href=&quot;http://tools.ietf.org/html/rfc2396&quot;&gt; RFC2396&lt;/a&gt; )를 처리하는 클래스를 제공하는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="7adfbd24fe67a04bb97bb1bbb07c1a0fea0932ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; &amp;ndash; Anything accepted by &lt;code&gt;URI.parse&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; &amp;ndash; &lt;code&gt;URI.parse&lt;/code&gt; 에 의해 허용되는 모든 것</target>
        </trans-unit>
        <trans-unit id="ff0eb466a1df1a326388fc261e535fc839467c02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is a module providing classes to handle Uniform Resource Identifiers (&lt;a href=&quot;http://tools.ietf.org/html/rfc2396&quot;&gt;RFC2396&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;http://tools.ietf.org/html/rfc2396&quot;&gt; URLC&lt;/a&gt; (Uniform Resource Identifier)를 처리하기위한 클래스를 제공하는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="dba411529edf05f15d09b29363f0981f3c397330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; objects can be opened in a similar way.</source>
          <target state="translated">&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;비슷한 방식으로 URI 객체를 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e1d71a76b9cd8d81c89fb86f3371bed84bba4d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; objects can be read directly. The returned string is also extended by &lt;a href=&quot;openuri/meta&quot;&gt;&lt;code&gt;OpenURI::Meta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 객체는 직접 읽을 수 있습니다. 반환 된 문자열은&lt;a href=&quot;openuri/meta&quot;&gt; &lt;code&gt;OpenURI::Meta&lt;/code&gt; &lt;/a&gt; 의해 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="5b7a2b45cc91781246fd80d647d7bb1bfae60501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/badurierror&quot;&gt;&lt;code&gt;Bundler::URI::BadURIError&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/badurierror&quot;&gt; &lt;code&gt;Bundler::URI::BadURIError&lt;/code&gt; &lt;/a&gt; (uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="efc0e4069a01a6927ca8b8fd1f4248d3ac0a54c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/badurierror&quot;&gt;&lt;code&gt;URI::BadURIError&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/badurierror&quot;&gt; &lt;code&gt;URI::BadURIError&lt;/code&gt; &lt;/a&gt; (uri / common.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="9fcb854c605f1e255021cffffa13cf0a3a9957c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/error&quot;&gt;&lt;code&gt;Bundler::URI::Error&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/error&quot;&gt; &lt;code&gt;Bundler::URI::Error&lt;/code&gt; &lt;/a&gt; Error-(uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="4af65d8c56e8bf717a71d3c3c871c6d247edbd66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/error&quot;&gt;&lt;code&gt;URI::Error&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/error&quot;&gt; &lt;code&gt;URI::Error&lt;/code&gt; &lt;/a&gt; Error-(uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="77bcf8f26dda1b80b01e90588c11d0fd127678e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/escape&quot;&gt;&lt;code&gt;Bundler::URI::Escape&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/escape&quot;&gt; &lt;code&gt;Bundler::URI::Escape&lt;/code&gt; &lt;/a&gt; (uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="40e81f356f1b010b94f14e8a5bf9c1a9e70d03b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/escape&quot;&gt;&lt;code&gt;URI::Escape&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/escape&quot;&gt; &lt;code&gt;URI::Escape&lt;/code&gt; &lt;/a&gt; -(uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="a4949704bd2271d40f34b90d492d13642093749e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/file&quot;&gt;&lt;code&gt;Bundler::URI::File&lt;/code&gt;&lt;/a&gt; - (in uri/file.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/file&quot;&gt; &lt;code&gt;Bundler::URI::File&lt;/code&gt; &lt;/a&gt; (uri / file.rb에서)</target>
        </trans-unit>
        <trans-unit id="9807fea59f1ac07bf7d64a04ce28caf962223d99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/file&quot;&gt;&lt;code&gt;URI::File&lt;/code&gt;&lt;/a&gt; - (in uri/file.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/file&quot;&gt; &lt;code&gt;URI::File&lt;/code&gt; &lt;/a&gt; -(uri / file.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="ed3805d36195a93c732472ad1f271b392fa98f1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/ftp&quot;&gt;&lt;code&gt;Bundler::URI::FTP&lt;/code&gt;&lt;/a&gt; - (in uri/ftp.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/ftp&quot;&gt; &lt;code&gt;Bundler::URI::FTP&lt;/code&gt; &lt;/a&gt; 들러 :: URI :: FTP- (uri / ftp.rb에서)</target>
        </trans-unit>
        <trans-unit id="55e49716d9f0f3a97549378b51dc8598c8a375ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/ftp&quot;&gt;&lt;code&gt;URI::FTP&lt;/code&gt;&lt;/a&gt; - (in uri/ftp.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/ftp&quot;&gt; &lt;code&gt;URI::FTP&lt;/code&gt; &lt;/a&gt; (uri / ftp.rb에서)</target>
        </trans-unit>
        <trans-unit id="957d5e28906fbd566b8e6e8d4e75bc88ef033ec4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/generic&quot;&gt;&lt;code&gt;Bundler::URI::Generic&lt;/code&gt;&lt;/a&gt; (in uri/generic.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/generic&quot;&gt; &lt;code&gt;Bundler::URI::Generic&lt;/code&gt; &lt;/a&gt; (uri / generic.rb에서)</target>
        </trans-unit>
        <trans-unit id="46c72de535a44936e07e9de8eb75ace06d8059c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/generic&quot;&gt;&lt;code&gt;URI::Generic&lt;/code&gt;&lt;/a&gt; (in uri/generic.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/generic&quot;&gt; &lt;code&gt;URI::Generic&lt;/code&gt; &lt;/a&gt; (uri / generic.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="c24b6e0a6f8e21d07ce5e9ae865e3ca2b1a77918" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/http&quot;&gt;&lt;code&gt;Bundler::URI::HTTP&lt;/code&gt;&lt;/a&gt; - (in uri/http.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/http&quot;&gt; &lt;code&gt;Bundler::URI::HTTP&lt;/code&gt; &lt;/a&gt; (uri / http.rb에서)</target>
        </trans-unit>
        <trans-unit id="29831f6da1948446f0a44802fb47586b61ff0841" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/http&quot;&gt;&lt;code&gt;URI::HTTP&lt;/code&gt;&lt;/a&gt; - (in uri/http.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/http&quot;&gt; &lt;code&gt;URI::HTTP&lt;/code&gt; &lt;/a&gt; (uri / http.rb에서)</target>
        </trans-unit>
        <trans-unit id="31bad2a45462cb740969a0fc06e0fda8898aa50e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/https&quot;&gt;&lt;code&gt;Bundler::URI::HTTPS&lt;/code&gt;&lt;/a&gt; - (in uri/https.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/https&quot;&gt; &lt;code&gt;Bundler::URI::HTTPS&lt;/code&gt; &lt;/a&gt; 들러 :: URI :: HTTPS- (uri / https.rb에서)</target>
        </trans-unit>
        <trans-unit id="a2b98fbebf821845120b86c77a7fbadae0565696" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/https&quot;&gt;&lt;code&gt;URI::HTTPS&lt;/code&gt;&lt;/a&gt; - (in uri/https.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/https&quot;&gt; &lt;code&gt;URI::HTTPS&lt;/code&gt; &lt;/a&gt; (uri / https.rb)</target>
        </trans-unit>
        <trans-unit id="7609a6ce55705b060099339d18737284d4c49d9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/invalidcomponenterror&quot;&gt;&lt;code&gt;Bundler::URI::InvalidComponentError&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/invalidcomponenterror&quot;&gt; &lt;code&gt;Bundler::URI::InvalidComponentError&lt;/code&gt; &lt;/a&gt; (uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="50f9566f82b359d34d4a1b0881d71550e2c48061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/invalidcomponenterror&quot;&gt;&lt;code&gt;URI::InvalidComponentError&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/invalidcomponenterror&quot;&gt; &lt;code&gt;URI::InvalidComponentError&lt;/code&gt; &lt;/a&gt; (uri / common.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="05db0f77db25916da571fa66564eaf2b6558e8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/invalidurierror&quot;&gt;&lt;code&gt;Bundler::URI::InvalidURIError&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/invalidurierror&quot;&gt; &lt;code&gt;Bundler::URI::InvalidURIError&lt;/code&gt; &lt;/a&gt; (uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="c078f03e428737f996605eda43413e96bb6f7bc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/invalidurierror&quot;&gt;&lt;code&gt;URI::InvalidURIError&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/invalidurierror&quot;&gt; &lt;code&gt;URI::InvalidURIError&lt;/code&gt; &lt;/a&gt; (uri / common.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="daf4347c2fb38d23574c5eececf2def720cef765" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/ldap&quot;&gt;&lt;code&gt;Bundler::URI::LDAP&lt;/code&gt;&lt;/a&gt; - (in uri/ldap.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/ldap&quot;&gt; &lt;code&gt;Bundler::URI::LDAP&lt;/code&gt; &lt;/a&gt; 들러 :: URI :: LDAP- (uri / ldap.rb에서)</target>
        </trans-unit>
        <trans-unit id="4d1705fb3fd3d6701e73acad12e4f505a0af58a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/ldap&quot;&gt;&lt;code&gt;URI::LDAP&lt;/code&gt;&lt;/a&gt; - (in uri/ldap.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/ldap&quot;&gt; &lt;code&gt;URI::LDAP&lt;/code&gt; &lt;/a&gt; (uri / ldap.rb에서)</target>
        </trans-unit>
        <trans-unit id="dd1a6b0be3bf7b8cd47a9a95f599d0f2e1ffe121" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/ldaps&quot;&gt;&lt;code&gt;Bundler::URI::LDAPS&lt;/code&gt;&lt;/a&gt; - (in uri/ldaps.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/ldaps&quot;&gt; &lt;code&gt;Bundler::URI::LDAPS&lt;/code&gt; &lt;/a&gt; 들러 :: URI :: LDAPS-(uri / ldaps.rb에서)</target>
        </trans-unit>
        <trans-unit id="879bb14f853eb869743a704aca25a1df45ef046a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/ldaps&quot;&gt;&lt;code&gt;URI::LDAPS&lt;/code&gt;&lt;/a&gt; - (in uri/ldaps.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/ldaps&quot;&gt; &lt;code&gt;URI::LDAPS&lt;/code&gt; &lt;/a&gt; LDAPS-(uri / ldaps.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="50b28bd877e52fd85df5879b4021c43807634504" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/mailto&quot;&gt;&lt;code&gt;Bundler::URI::MailTo&lt;/code&gt;&lt;/a&gt; - (in uri/mailto.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/mailto&quot;&gt; &lt;code&gt;Bundler::URI::MailTo&lt;/code&gt; &lt;/a&gt; MailTo-(uri / mailto.rb에서)</target>
        </trans-unit>
        <trans-unit id="0e6890c41704ce8fd3f716cb16696d1a3771b75f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/mailto&quot;&gt;&lt;code&gt;URI::MailTo&lt;/code&gt;&lt;/a&gt; - (in uri/mailto.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/mailto&quot;&gt; &lt;code&gt;URI::MailTo&lt;/code&gt; &lt;/a&gt; MailTo-(uri / mailto.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="68b020f5056db2f321f6e1efc43dbd77aef4aee8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/rfc2396_parser&quot;&gt;&lt;code&gt;Bundler::URI::Parser&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/rfc2396_parser&quot;&gt; &lt;code&gt;Bundler::URI::Parser&lt;/code&gt; &lt;/a&gt; Parser-(uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="9fcfaaffd697f1245d45a8b870b9ead4a47222a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/rfc2396_parser&quot;&gt;&lt;code&gt;URI::Parser&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/rfc2396_parser&quot;&gt; &lt;code&gt;URI::Parser&lt;/code&gt; &lt;/a&gt; Parser-(uri / common.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="8859fb39e2a89261fdc1d56b01481f031b8dfcd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/rfc2396_regexp&quot;&gt;&lt;code&gt;Bundler::URI::REGEXP&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/rfc2396_regexp&quot;&gt; &lt;code&gt;Bundler::URI::REGEXP&lt;/code&gt; &lt;/a&gt; 들러 :: URI :: REGEXP-(uri / common.rb에서)</target>
        </trans-unit>
        <trans-unit id="30954a54e2e21f6526e1db766010a8d68813dbeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri/rfc2396_regexp&quot;&gt;&lt;code&gt;URI::REGEXP&lt;/code&gt;&lt;/a&gt; - (in uri/common.rb)</source>
          <target state="translated">&lt;a href=&quot;uri/rfc2396_regexp&quot;&gt; &lt;code&gt;URI::REGEXP&lt;/code&gt; &lt;/a&gt; REGEXP-(uri / common.rb에 있음)</target>
        </trans-unit>
        <trans-unit id="cf2b880553961745dbac59c647bbfe39a156f585" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt; addition.</source>
          <target state="translated">&lt;a href=&quot;vector&quot;&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;/a&gt; 추가.</target>
        </trans-unit>
        <trans-unit id="daeeda7ae2bb9f8e01c38bd44a7b69c200bb5cf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt; arithmetic:</source>
          <target state="translated">&lt;a href=&quot;vector&quot;&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;/a&gt; 산술 :</target>
        </trans-unit>
        <trans-unit id="21c5fd3ee31182a21c0f2f145ac767f7faaf9e19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt; division.</source>
          <target state="translated">&lt;a href=&quot;vector&quot;&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;/a&gt; 부문.</target>
        </trans-unit>
        <trans-unit id="2a6d884d209ab6cad6b7bd45c505fa98427e3a36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt; functions:</source>
          <target state="translated">&lt;a href=&quot;vector&quot;&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;/a&gt; 기능 :</target>
        </trans-unit>
        <trans-unit id="33d1840131f87c530b41de1e03c8c3551cb9f9ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt; subtraction.</source>
          <target state="translated">&lt;a href=&quot;vector&quot;&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;/a&gt; 빼기.</target>
        </trans-unit>
        <trans-unit id="0168a430a7379f6b00d35e61c70789c071647788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-c-basis&quot;&gt;&lt;code&gt;Vector.basis&lt;/code&gt;&lt;/a&gt;(size: n, index: k)</source>
          <target state="translated">&lt;a href=&quot;vector#method-c-basis&quot;&gt; &lt;code&gt;Vector.basis&lt;/code&gt; &lt;/a&gt; (크기 : n, 색인 : k)</target>
        </trans-unit>
        <trans-unit id="4728cd620aa00051f5e5662e5751030cd7da5cb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-c-elements&quot;&gt;&lt;code&gt;Vector.elements&lt;/code&gt;&lt;/a&gt;(array, copy = true)</source>
          <target state="translated">&lt;a href=&quot;vector#method-c-elements&quot;&gt; &lt;code&gt;Vector.elements&lt;/code&gt; &lt;/a&gt; (배열, 복사 = 참)</target>
        </trans-unit>
        <trans-unit id="ec944895e4753f0da1ae430603afb6843b7e1cfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-c-new&quot;&gt;&lt;code&gt;Vector.new&lt;/code&gt;&lt;/a&gt; is private; use Vector[] or &lt;a href=&quot;vector#method-c-elements&quot;&gt;&lt;code&gt;Vector.elements&lt;/code&gt;&lt;/a&gt; to create.</source>
          <target state="translated">&lt;a href=&quot;vector#method-c-new&quot;&gt; &lt;code&gt;Vector.new&lt;/code&gt; &lt;/a&gt; 는 비공개입니다. Vector [] 또는&lt;a href=&quot;vector#method-c-elements&quot;&gt; &lt;code&gt;Vector.elements&lt;/code&gt; &lt;/a&gt; 를 사용하여 만듭니다.</target>
        </trans-unit>
        <trans-unit id="eb066b472b06bfd9f10a8f7da897c1e164aebaf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-i-2A&quot;&gt;&lt;code&gt;*(x)&lt;/code&gt;&lt;/a&gt; &amp;ldquo;is matrix or number&amp;rdquo;</source>
          <target state="translated">&lt;a href=&quot;vector#method-i-2A&quot;&gt; &lt;code&gt;*(x)&lt;/code&gt; &lt;/a&gt; &amp;ldquo;행렬 또는 숫자입니다&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="021b2ff44062e612291eda2c90bba40e46be5d68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-i-2B&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/a&gt;@</source>
          <target state="translated">&lt;a href=&quot;vector#method-i-2B&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/a&gt;@</target>
        </trans-unit>
        <trans-unit id="3bd4b3f7329d9bd6429949ab84deeb92ad7de8de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-i-2D&quot;&gt;&lt;code&gt;-&lt;/code&gt;&lt;/a&gt;@</source>
          <target state="translated">&lt;a href=&quot;vector#method-i-2D&quot;&gt;&lt;code&gt;-&lt;/code&gt;&lt;/a&gt;@</target>
        </trans-unit>
        <trans-unit id="369af398ddfb62127eae9daae29a18b4fb0d2564" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-i-5B-5D-3D&quot;&gt;&lt;code&gt;[]=&lt;/code&gt;&lt;/a&gt;(i, v)</source>
          <target state="translated">&lt;a href=&quot;vector#method-i-5B-5D-3D&quot;&gt; &lt;code&gt;[]=&lt;/code&gt; &lt;/a&gt; (i, v)</target>
        </trans-unit>
        <trans-unit id="8ec17a084a0708ef34f7105817d36fc71fc77192" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-i-cross_product&quot;&gt;&lt;code&gt;cross_product(v)&lt;/code&gt;&lt;/a&gt;, cross(v)</source>
          <target state="translated">&lt;a href=&quot;vector#method-i-cross_product&quot;&gt; &lt;code&gt;cross_product(v)&lt;/code&gt; &lt;/a&gt; , 크로스 (v)</target>
        </trans-unit>
        <trans-unit id="2f365dba578d30149fcfc9b62610e64f8f3e5baa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vector#method-i-inner_product&quot;&gt;&lt;code&gt;inner_product(v)&lt;/code&gt;&lt;/a&gt;, dot(v)</source>
          <target state="translated">&lt;a href=&quot;vector#method-i-inner_product&quot;&gt; &lt;code&gt;inner_product(v)&lt;/code&gt; &lt;/a&gt; , 도트 (v)</target>
        </trans-unit>
        <trans-unit id="c53ec347dcd2834e93e1b79126972ab42af33fd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; of a possible problem</source>
          <target state="translated">&lt;a href=&quot;warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;가능한 문제에 대한 경고</target>
        </trans-unit>
        <trans-unit id="8f123c2a9cfa0b215965cf1752dc9571d581c04c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writetimeout&quot;&gt;&lt;code&gt;WriteTimeout&lt;/code&gt;&lt;/a&gt;, a subclass of &lt;a href=&quot;../timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt;, is raised if a chunk of the response cannot be written within the write_timeout. Not raised on Windows.</source>
          <target state="translated">&lt;a href=&quot;writetimeout&quot;&gt; &lt;code&gt;WriteTimeout&lt;/code&gt; &lt;/a&gt;응답 덩어리를 write_timeout 내에 쓸 수없는 경우&lt;a href=&quot;../timeout/error&quot;&gt; &lt;code&gt;Timeout::Error&lt;/code&gt; &lt;/a&gt; 의 하위 클래스 인 WriteTimeout 이 발생합니다. Windows에서는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d637d34e53892d449249f94369b2d54b662b1347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zlib#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; is the default flush method and allows deflate to decide how much data to accumulate before producing output in order to maximize compression.</source>
          <target state="translated">&lt;a href=&quot;zlib#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt; 는 기본 플러시 방법이며 압축을 최대화하기 위해 출력을 생성하기 전에 누적 할 데이터 양을 디 플레이트 에서 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b58713683b56f416ed0121de34670a48f689804" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zlib/deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt; compression strategy designed to be almost as fast as &lt;a href=&quot;zlib#HUFFMAN_ONLY&quot;&gt;&lt;code&gt;HUFFMAN_ONLY&lt;/code&gt;&lt;/a&gt;, but give better compression for PNG image data.</source>
          <target state="translated">&lt;a href=&quot;zlib/deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; &lt;/a&gt; 거의 최대한 빨리 할 수 있도록 설계 압축 전략&lt;a href=&quot;zlib#HUFFMAN_ONLY&quot;&gt; &lt;code&gt;HUFFMAN_ONLY&lt;/code&gt; &lt;/a&gt; 하지만, PNG 이미지 데이터에 대한 더 나은 압축을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9726b4acff1126871d52d1bfcecb451215636351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zlib/deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt; strategy for data produced by a filter (or predictor). The effect of &lt;a href=&quot;zlib#FILTERED&quot;&gt;&lt;code&gt;FILTERED&lt;/code&gt;&lt;/a&gt; is to force more Huffman codes and less string matching; it is somewhat intermediate between &lt;a href=&quot;zlib#DEFAULT_STRATEGY&quot;&gt;&lt;code&gt;DEFAULT_STRATEGY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zlib#HUFFMAN_ONLY&quot;&gt;&lt;code&gt;HUFFMAN_ONLY&lt;/code&gt;&lt;/a&gt;. Filtered data consists mostly of small values with a somewhat random distribution.</source>
          <target state="translated">&lt;a href=&quot;zlib/deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; &lt;/a&gt; 필터 (또는 예측)에 의해 생성 된 데이터를위한 전략. &lt;a href=&quot;zlib#FILTERED&quot;&gt; &lt;code&gt;FILTERED&lt;/code&gt; &lt;/a&gt; 의 효과는더 많은 허프만 코드와 더 적은 문자열 일치를 강제하는 것입니다. &lt;a href=&quot;zlib#DEFAULT_STRATEGY&quot;&gt; &lt;code&gt;DEFAULT_STRATEGY&lt;/code&gt; &lt;/a&gt; 와&lt;a href=&quot;zlib#HUFFMAN_ONLY&quot;&gt; &lt;code&gt;HUFFMAN_ONLY&lt;/code&gt; &lt;/a&gt; 사이의 중간에있습니다. 필터링 된 데이터는 주로 임의의 분포가 작은 작은 값으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="97678a0651c1e9c21b62f50cfc3684cf16313086" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zlib/deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt; strategy which prevents the use of dynamic Huffman codes, allowing for a simpler decoder for specialized applications.</source>
          <target state="translated">&lt;a href=&quot;zlib/deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; &lt;/a&gt; 전문 애플리케이션을위한 간단한 디코더를 허용, 동적 허프만 코드의 사용을 방지 전략.</target>
        </trans-unit>
        <trans-unit id="d450f6067bdd79d3b141181a3d9069d82db7998f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zlib/deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt; strategy which uses Huffman codes only (no string matching).</source>
          <target state="translated">&lt;a href=&quot;zlib/deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; &lt;/a&gt; 허프만 코드 전용 (문자열 일치)를 사용 전략.</target>
        </trans-unit>
        <trans-unit id="db19e6a9a2f07b766df98ae5812901167b01182e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zstream&quot;&gt;&lt;code&gt;Zlib::ZStream&lt;/code&gt;&lt;/a&gt; is the abstract class for the stream which handles the compressed data. The operations are defined in the subclasses: &lt;a href=&quot;deflate&quot;&gt;&lt;code&gt;Zlib::Deflate&lt;/code&gt;&lt;/a&gt; for compression, and &lt;a href=&quot;inflate&quot;&gt;&lt;code&gt;Zlib::Inflate&lt;/code&gt;&lt;/a&gt; for decompression.</source>
          <target state="translated">&lt;a href=&quot;zstream&quot;&gt; &lt;code&gt;Zlib::ZStream&lt;/code&gt; &lt;/a&gt; 은 압축 된 데이터를 처리하는 스트림의 추상 클래스입니다. 작업은 서브 클래스에 정의되어 있습니다 :압축의 경우&lt;a href=&quot;deflate&quot;&gt; &lt;code&gt;Zlib::Deflate&lt;/code&gt; &lt;/a&gt; 및압축 해제의 경우&lt;a href=&quot;inflate&quot;&gt; &lt;code&gt;Zlib::Inflate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c24e034b82aa8fa9ef30cb57cc6e36fdf85fa895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pretty_print&lt;/code&gt; takes the &lt;code&gt;pp&lt;/code&gt; argument, which is an instance of the &lt;a href=&quot;pp&quot;&gt;&lt;code&gt;PP&lt;/code&gt;&lt;/a&gt; class. The method uses &lt;a href=&quot;prettyprint#method-i-text&quot;&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;prettyprint#method-i-breakable&quot;&gt;&lt;code&gt;breakable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;prettyprint#method-i-nest&quot;&gt;&lt;code&gt;nest&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;prettyprint#method-i-group&quot;&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pp/ppmethods#method-i-pp&quot;&gt;&lt;code&gt;pp&lt;/code&gt;&lt;/a&gt; to print the object.</source>
          <target state="translated">&lt;code&gt;#pretty_print&lt;/code&gt; 는 &lt;a href=&quot;pp&quot;&gt; &lt;code&gt;PP&lt;/code&gt; &lt;/a&gt; 클래스 의 인스턴스 인 &lt;code&gt;pp&lt;/code&gt; 인수를 사용합니다 . 이 메소드는 &lt;a href=&quot;prettyprint#method-i-text&quot;&gt; &lt;code&gt;text&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;prettyprint#method-i-breakable&quot;&gt; &lt;code&gt;breakable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;prettyprint#method-i-nest&quot;&gt; &lt;code&gt;nest&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;prettyprint#method-i-group&quot;&gt; &lt;code&gt;group&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pp/ppmethods#method-i-pp&quot;&gt; &lt;code&gt;pp&lt;/code&gt; &lt;/a&gt; 를 사용하여 객체를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="9a13d9e23d2a256f31093765b4a656ffb35103cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$!&lt;/code&gt; contains the current exception.</source>
          <target state="translated">&lt;code&gt;$!&lt;/code&gt; 현재 예외를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="5974f68494dc2f68fd9da61cd7b027f217c33897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;amp;&lt;/code&gt; contains the complete matched text;</source>
          <target state="translated">&lt;code&gt;$&amp;amp;&lt;/code&gt; 는 완전하게 일치하는 텍스트를 포함합니다;</target>
        </trans-unit>
        <trans-unit id="796aefe8db5917a5f72d0c1a30b96bc64f2fde2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;amp;&lt;/code&gt; is &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;$&amp;amp;&lt;/code&gt; 는 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; 입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="942e2af7fa77910fc6c73615aeafa7b220e9985f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;amp;&lt;/code&gt; is &lt;code&gt;Regexp.last_match[0]&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;$&amp;amp;&lt;/code&gt; 는 &lt;code&gt;Regexp.last_match[0]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6904a4faf3c67c2f72423d0207fd1df30f073b01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$'&lt;/code&gt; contains string after match;</source>
          <target state="translated">&lt;code&gt;$'&lt;/code&gt; 는 일치 후에 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c45868a04725b8e1aaab1c47c4bf76012890cda5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$'&lt;/code&gt; is &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.post_match&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;$'&lt;/code&gt; 는 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.post_match&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6e89a4bcc207b7c908b78ab4a3e932b7c19c2243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$'&lt;/code&gt; is &lt;code&gt;Regexp.last_match.post_match&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;$'&lt;/code&gt; 는 &lt;code&gt;Regexp.last_match.post_match&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="f69ec867fadf0c17dc0f3564b046961abab09d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$+&lt;/code&gt; contains last capture group.</source>
          <target state="translated">&lt;code&gt;$+&lt;/code&gt; 에는 마지막 캡처 그룹이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7d17058f34f112790bf31208a9e32793902a30a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$+&lt;/code&gt; is &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt; (the last capture).</source>
          <target state="translated">&lt;code&gt;$+&lt;/code&gt; 는 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; &lt;/a&gt; (마지막 캡처)입니다.</target>
        </trans-unit>
        <trans-unit id="e4d38eaa6742178e235290934a8ed5f262e4791c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$+&lt;/code&gt; is &lt;code&gt;Regexp.last_match[-1]&lt;/code&gt; (the last capture).</source>
          <target state="translated">&lt;code&gt;$+&lt;/code&gt; 는 &lt;code&gt;Regexp.last_match[-1]&lt;/code&gt; (마지막 캡처)입니다.</target>
        </trans-unit>
        <trans-unit id="8a054d7a56b0f14e8c6f0f6f06b62a461fd1b7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; and so on contain text matching first, second, etc capture group;</source>
          <target state="translated">&lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; 등은 첫 번째, 두 번째 등의 캡처 그룹과 일치하는 텍스트를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="3dfa2c3b6cad56e44ba1deb3a53a17ca0d003ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, and so on are &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt; (captures by number);</source>
          <target state="translated">&lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; 등은 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; &lt;/a&gt; (숫자로 캡처)입니다.</target>
        </trans-unit>
        <trans-unit id="e876b58d6737f2126aaf39a224db1c26ba75463e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, and so on are &lt;code&gt;Regexp.last_match[i]&lt;/code&gt; (captures by number);</source>
          <target state="translated">&lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; 등은 &lt;code&gt;Regexp.last_match[i]&lt;/code&gt; (숫자 별 캡처)입니다.</target>
        </trans-unit>
        <trans-unit id="a011b423397e9d771676baae900f42592e4bd16a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&lt;/code&gt; - Matches end of line</source>
          <target state="translated">&lt;code&gt;$&lt;/code&gt; -줄 끝과 일치</target>
        </trans-unit>
        <trans-unit id="ada9e4d8d018b6ecc51144213030c4b5d34de70b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$@&lt;/code&gt; contains its backtrace.</source>
          <target state="translated">&lt;code&gt;$@&lt;/code&gt; 에는 역 추적이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="464052956d95e06f679d680665171260edd5e8f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$`&lt;/code&gt; contains string before match;</source>
          <target state="translated">&lt;code&gt;$`&lt;/code&gt; 는 일치하기 전에 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="70c8582a909676e44e89427e90ecc23cc36fa62c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$`&lt;/code&gt; is &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.pre_match&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;$`&lt;/code&gt; 는 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.pre_match&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="69c4e273255f707c2f0520d808580337b62f74d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$`&lt;/code&gt; is &lt;code&gt;Regexp.last_match.pre_match&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;$`&lt;/code&gt; 는 &lt;code&gt;Regexp.last_match.pre_match&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="bc0ac4a63bc1e3ef91d89d74a5f1e2db8d563875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$~&lt;/code&gt; is &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;$~&lt;/code&gt; 는 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; 입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77b4e39d47c7cb254a1913763992a8ee4c87c086" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$~&lt;/code&gt; is &lt;code&gt;Regexp.last_match&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;$~&lt;/code&gt; 는 &lt;code&gt;Regexp.last_match&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="205b4ebba8e6cc18f0908c288c0331a4b87c65ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$~&lt;/code&gt; is equivalent to &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;$~&lt;/code&gt; 는 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="cd95bd60e1c9591718433bc1a68ce69b5467fd4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;.&lt;/code&gt;, called &amp;ldquo;safe navigation operator&amp;rdquo;, allows to skip method call when receiver is &lt;code&gt;nil&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt; and doesn't evaluate method's arguments if the call is skipped.</source>
          <target state="translated">&lt;code&gt;&amp;amp;.&lt;/code&gt; &quot;안전 내비게이션 연산자&quot;라고하는 수신자는 &lt;code&gt;nil&lt;/code&gt; 인 경우 메소드 호출을 건너 뛸 수 있습니다 . 호출을 건너 뛰면 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 메소드의 인수를 평가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c79024a097f5745b422de3e711787a5fb1ee7e46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; is the basis for the methods &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;between?&lt;/code&gt;, included from module &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;. The method String#== does not use Comparable#==.</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 이 방법의 기초가 &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , 및 &lt;code&gt;between?&lt;/code&gt; 모듈 &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 포함되어 있습니다 . String # == 메소드는 Comparable # ==을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="20344e280c432ed27aacd719badf74692dec0bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;compiled&amp;gt;&lt;/code&gt; if the iseq was evaluated from a string.</source>
          <target state="translated">&lt;code&gt;&amp;lt;compiled&amp;gt;&lt;/code&gt; iseq가 문자열에서 평가 된 경우 &amp;lt;컴파일&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e9f48a8dbf9f2dd7f3d49d22954e8b27a23d84ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; if it's at the top level, &lt;code&gt;&amp;lt;compiled&amp;gt;&lt;/code&gt; if it was evaluated from a string.</source>
          <target state="translated">&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; 최상위 수준에 있으면 &lt;code&gt;&amp;lt;compiled&amp;gt;&lt;/code&gt; 문자열에서 평가 된 경우 &amp;lt;compiled&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1af2515e464f2e1ab5ba86148d5346c8c7f0933c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(1..)&lt;/code&gt; and &lt;code&gt;(1...)&lt;/code&gt; are not equal, although technically representing the same sequence.</source>
          <target state="translated">&lt;code&gt;(1..)&lt;/code&gt; 기술적으로 동일한 순서를 나타내지 만 (1 ..) 과 &lt;code&gt;(1...)&lt;/code&gt; 은 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a99441e000ed45d745acdd2bc29d907e33ccdacb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?!&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;)&lt;/code&gt; - &lt;em&gt;Negative lookahead&lt;/em&gt; assertion: ensures that the following characters do not match &lt;em&gt;pat&lt;/em&gt;, but doesn't include those characters in the matched text</source>
          <target state="translated">&lt;code&gt;(?!&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;)&lt;/code&gt; - &lt;em&gt;음수 미리보기&lt;/em&gt; 어설 션 : 다음 문자가 &lt;em&gt;pat&lt;/em&gt; 와 일치하지 않지만 일치 하는 텍스트에 해당 문자가 포함되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="7c4796330b292051bf9d416467f6f173d59a21ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?&amp;lt;!&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;)&lt;/code&gt; - &lt;em&gt;Negative lookbehind&lt;/em&gt; assertion: ensures that the preceding characters do not match &lt;em&gt;pat&lt;/em&gt;, but doesn't include those characters in the matched text</source>
          <target state="translated">&lt;code&gt;(?&amp;lt;!&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;)&lt;/code&gt; - &lt;em&gt;음수 숨김&lt;/em&gt; 어설 션 : 앞의 문자가 &lt;em&gt;pat&lt;/em&gt; 와 일치하지 않지만 일치 하는 텍스트에 해당 문자가 포함되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="a2cc3c94f20ea69daf895ae2414d58c3c3233c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?&amp;lt;=&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;)&lt;/code&gt; - &lt;em&gt;Positive lookbehind&lt;/em&gt; assertion: ensures that the preceding characters match &lt;em&gt;pat&lt;/em&gt;, but doesn't include those characters in the matched text</source>
          <target state="translated">&lt;code&gt;(?&amp;lt;=&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;)&lt;/code&gt; - &lt;em&gt;긍정적 인 lookbehind&lt;/em&gt; 어설 션 : 앞의 문자가 &lt;em&gt;pat&lt;/em&gt; 와 일치 하지만 일치하는 텍스트에 해당 문자가 포함되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="aeba0bc9329b0af6ea88f0bf2d81910bdb482192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?=&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;)&lt;/code&gt; - &lt;em&gt;Positive lookahead&lt;/em&gt; assertion: ensures that the following characters match &lt;em&gt;pat&lt;/em&gt;, but doesn't include those characters in the matched text</source>
          <target state="translated">&lt;code&gt;(?=&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;)&lt;/code&gt; - &lt;em&gt;긍정적 인 미리보기&lt;/em&gt; 어설 션 : 다음 문자가 &lt;em&gt;pat&lt;/em&gt; 와 일치 하지만 일치하는 텍스트에 해당 문자가 포함되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="2cf0bcc95b3316adf49d4fa0bff8c80691297cab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; - Zero or more times</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; -0 번 이상</target>
        </trans-unit>
        <trans-unit id="b1eab486fedb6935c2e522461912c9a934212a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; - One or more times</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; -한 번 이상</target>
        </trans-unit>
        <trans-unit id="f9816a7873f7d7b70881f93e687756bed01904b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...&lt;/code&gt; in argument definition means argument is optional (has some default value).</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; 인수 정의에서 인자는 선택 사항입니다 (일부 기본값이 있음).</target>
        </trans-unit>
        <trans-unit id="ca34b3496e0db364971a15c9b04ba882f9951711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/./&lt;/code&gt; - Any character except a newline.</source>
          <target state="translated">&lt;code&gt;/./&lt;/code&gt; - 줄 바꿈을 제외한 모든 문자</target>
        </trans-unit>
        <trans-unit id="a611aa52ba62c017fe02c40c6ef53abbebf50771" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/./m&lt;/code&gt; - Any character (the &lt;code&gt;m&lt;/code&gt; modifier enables multiline mode)</source>
          <target state="translated">&lt;code&gt;/./m&lt;/code&gt; - 모든 문자 ( &lt;code&gt;m&lt;/code&gt; 수정자는 여러 줄 모드를 사용합니다)</target>
        </trans-unit>
        <trans-unit id="3e7cef79855eebad78392207c91ac281bc18f15a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;/e&lt;/code&gt; - EUC-JP</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;/e&lt;/code&gt; -EUC-JP</target>
        </trans-unit>
        <trans-unit id="c1e4762fcdf6eb3d8360c4f8943aab898684c892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;/n&lt;/code&gt; - ASCII-8BIT</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;/n&lt;/code&gt; -ASCII-8BIT</target>
        </trans-unit>
        <trans-unit id="516bd20cdab2d1e5da12ce90924dd03bc9d56982" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;/s&lt;/code&gt; - Windows-31J</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;/s&lt;/code&gt; -Windows-31J</target>
        </trans-unit>
        <trans-unit id="9f3ce63f2959cef342523954230651660e12e8da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt;&lt;em&gt;pat&lt;/em&gt;&lt;code&gt;/u&lt;/code&gt; - UTF-8</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; &lt;em&gt;pat &lt;/em&gt; &lt;code&gt;/u&lt;/code&gt; -UTF-8</target>
        </trans-unit>
        <trans-unit id="1130df34e65f8ec09b5715499b929cbbc9d4e902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:alnum:]]/&lt;/code&gt; - Alphabetic and numeric character</source>
          <target state="translated">&lt;code&gt;/[[:alnum:]]/&lt;/code&gt; -알파벳과 숫자</target>
        </trans-unit>
        <trans-unit id="ea907ee9bc04c452ea66c21354b175ffbed4aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:alpha:]]/&lt;/code&gt; - Alphabetic character</source>
          <target state="translated">&lt;code&gt;/[[:alpha:]]/&lt;/code&gt; -알파벳 문자</target>
        </trans-unit>
        <trans-unit id="3b25cce324719854f8e4af89a9085d12177ad928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:ascii:]]/&lt;/code&gt; - A character in the ASCII character set</source>
          <target state="translated">&lt;code&gt;/[[:ascii:]]/&lt;/code&gt; -ASCII 문자 집합의 문자</target>
        </trans-unit>
        <trans-unit id="8868a3e699dc1e6f3e1e1a7f672eb124679010c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:blank:]]/&lt;/code&gt; - Space or tab</source>
          <target state="translated">&lt;code&gt;/[[:blank:]]/&lt;/code&gt; -공백 또는 탭</target>
        </trans-unit>
        <trans-unit id="681ce9160a5c8c51bf4513074b5888d47b76c54c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:cntrl:]]/&lt;/code&gt; - Control character</source>
          <target state="translated">&lt;code&gt;/[[:cntrl:]]/&lt;/code&gt; -제어 문자</target>
        </trans-unit>
        <trans-unit id="00f13766ecd2a621d191697c2f87279c8d447fc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:digit:]]/&lt;/code&gt; - Digit</source>
          <target state="translated">&lt;code&gt;/[[:digit:]]/&lt;/code&gt; -숫자</target>
        </trans-unit>
        <trans-unit id="77bdea64cb55568092f1b8d097f813acf530946d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:graph:]]/&lt;/code&gt; - Non-blank character (excludes spaces, control characters, and similar)</source>
          <target state="translated">&lt;code&gt;/[[:graph:]]/&lt;/code&gt; -공백이 아닌 문자 (공백, 제어 문자 등은 제외)</target>
        </trans-unit>
        <trans-unit id="39ff3ed7e6fe8b31a9f5b0a89b86e465d87622f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:lower:]]/&lt;/code&gt; - Lowercase alphabetical character</source>
          <target state="translated">&lt;code&gt;/[[:lower:]]/&lt;/code&gt; -알파벳 소문자</target>
        </trans-unit>
        <trans-unit id="f6c54654d1650ce39dc9be158c034a5ac1c12b82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:print:]]/&lt;/code&gt; - Like [:graph:], but includes the space character</source>
          <target state="translated">&lt;code&gt;/[[:print:]]/&lt;/code&gt; -[: graph :]와 비슷하지만 공백 문자를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="ac9e66654922e9588a7976aaf9cd8077ea871d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:punct:]]/&lt;/code&gt; - Punctuation character</source>
          <target state="translated">&lt;code&gt;/[[:punct:]]/&lt;/code&gt; -문장 부호 문자</target>
        </trans-unit>
        <trans-unit id="268a0116a4570ee108e9c5512a98e66d004c82a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:space:]]/&lt;/code&gt; - Whitespace character (&lt;code&gt;[:blank:]&lt;/code&gt;, newline, carriage return, etc.)</source>
          <target state="translated">&lt;code&gt;/[[:space:]]/&lt;/code&gt; -공백 문자 ( &lt;code&gt;[:blank:]&lt;/code&gt; , 줄 바꿈, 캐리지 리턴 등)</target>
        </trans-unit>
        <trans-unit id="bfb588be562cb89296fda0088798659e4b6c8707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:upper:]]/&lt;/code&gt; - Uppercase alphabetical</source>
          <target state="translated">&lt;code&gt;/[[:upper:]]/&lt;/code&gt; -알파벳 대문자</target>
        </trans-unit>
        <trans-unit id="c9a02053c238d522622544cf0dd0f12c509749e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:word:]]/&lt;/code&gt; - A character in one of the following Unicode general categories &lt;em&gt;Letter&lt;/em&gt;, &lt;em&gt;Mark&lt;/em&gt;, &lt;em&gt;Number&lt;/em&gt;, &lt;em&gt;Connector_Punctuation&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;/[[:word:]]/&lt;/code&gt; -다음 유니 코드 일반 범주 &lt;em&gt;Letter&lt;/em&gt; , &lt;em&gt;Mark&lt;/em&gt; , &lt;em&gt;Number&lt;/em&gt; , &lt;em&gt;Connector_Punctuation&lt;/em&gt; 중 하나의 &lt;em&gt;문자&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f77485016ea86c33b6a1ead173223c18036ce49f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/[[:xdigit:]]/&lt;/code&gt; - Digit allowed in a hexadecimal number (i.e., 0-9a-fA-F)</source>
          <target state="translated">&lt;code&gt;/[[:xdigit:]]/&lt;/code&gt; 진수로 허용 된 숫자 (예 : 0-9a-fA-F)</target>
        </trans-unit>
        <trans-unit id="402bac4a6ab97de9dfa3f124e1e2a8eaea2e2ad6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\D/&lt;/code&gt; - A non-digit character (&lt;code&gt;[^0-9]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;/\D/&lt;/code&gt; -숫자가 아닌 문자 ( &lt;code&gt;[^0-9]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="74f5c3c40b6ab18e3b7b098ea8df32c8f4c9c69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\H/&lt;/code&gt; - A non-hexdigit character (&lt;code&gt;[^0-9a-fA-F]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;/\H/&lt;/code&gt; -16 진수가 아닌 문자 ( &lt;code&gt;[^0-9a-fA-F]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="381b3d34e2bc659c719f4100e776002b696e04f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\R/&lt;/code&gt; - A linebreak: &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\v&lt;/code&gt;, &lt;code&gt;\f&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;&lt;code&gt;\u0085&lt;/code&gt; (NEXT LINE), &lt;code&gt;\u2028&lt;/code&gt; (LINE SEPARATOR), &lt;code&gt;\u2029&lt;/code&gt; (PARAGRAPH SEPARATOR) or &lt;code&gt;\r\n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/\R/&lt;/code&gt; - &lt;code&gt;\u0085&lt;/code&gt; : &lt;code&gt;\n&lt;/code&gt; , &lt;code&gt;\v&lt;/code&gt; , &lt;code&gt;\f&lt;/code&gt; , &lt;code&gt;\r&lt;/code&gt; \ u0085 (다음 줄), &lt;code&gt;\u2028&lt;/code&gt; ( 줄 구분자 ), &lt;code&gt;\u2029&lt;/code&gt; ( 단락 구분자 ) 또는 &lt;code&gt;\r\n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1da7fa0bb7c4d378b1ab7b880f10137ffc03d8cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\S/&lt;/code&gt; - A non-whitespace character: &lt;code&gt;/[^ \t\r\n\f\v]/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/\S/&lt;/code&gt; -공백이 아닌 문자 : &lt;code&gt;/[^ \t\r\n\f\v]/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8411ef7a84016bd9a53f3dfa1377cc1f8ef0f5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\W/&lt;/code&gt; - A non-word character (&lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt;). Please take a look at &lt;a href=&quot;https://bugs.ruby-lang.org/issues/4044&quot;&gt;Bug #4044&lt;/a&gt; if using &lt;code&gt;/\W/&lt;/code&gt; with the &lt;code&gt;/i&lt;/code&gt; modifier.</source>
          <target state="translated">&lt;code&gt;/\W/&lt;/code&gt; -단어가 아닌 문자 ( &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt; ). &lt;code&gt;/i&lt;/code&gt; 수정 자 와 함께 &lt;code&gt;/\W/&lt;/code&gt; 를 사용하는 경우 &lt;a href=&quot;https://bugs.ruby-lang.org/issues/4044&quot;&gt;버그 # 4044를&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="22b1b3141f83de2178497a2498c7c5495a37518e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\d/&lt;/code&gt; - A digit character (&lt;code&gt;[0-9]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;/\d/&lt;/code&gt; -숫자 문자 ( &lt;code&gt;[0-9]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="604cfe0183da6f288e375688a7a54a42d3f0f8e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\h/&lt;/code&gt; - A hexdigit character (&lt;code&gt;[0-9a-fA-F]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;/\h/&lt;/code&gt; -16 진수 문자 ( &lt;code&gt;[0-9a-fA-F]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7613ab629ddf837487df48608d59583c406d45e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{ASCII}/&lt;/code&gt; - A character in the ASCII character set</source>
          <target state="translated">&lt;code&gt;/\p{ASCII}/&lt;/code&gt; -ASCII 문자 집합의 문자</target>
        </trans-unit>
        <trans-unit id="8c1eeeaa04dde90f28e09ba0f1628fab60fee9f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Alnum}/&lt;/code&gt; - Alphabetic and numeric character</source>
          <target state="translated">&lt;code&gt;/\p{Alnum}/&lt;/code&gt; -알파벳과 숫자</target>
        </trans-unit>
        <trans-unit id="54460e05b51f7363d373621813bfb45502d93e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Alpha}/&lt;/code&gt; - Alphabetic character</source>
          <target state="translated">&lt;code&gt;/\p{Alpha}/&lt;/code&gt; -알파벳 문자</target>
        </trans-unit>
        <trans-unit id="837a5eb88ba6d44d2aa90c8930d2baf280de0283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Any}/&lt;/code&gt; - Any Unicode character (including unassigned characters)</source>
          <target state="translated">&lt;code&gt;/\p{Any}/&lt;/code&gt; -모든 유니 코드 문자 (할당되지 않은 문자 포함)</target>
        </trans-unit>
        <trans-unit id="d39c9afe8e08c6f7cfd8b3be6221c75c812f3842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Assigned}/&lt;/code&gt; - An assigned character</source>
          <target state="translated">&lt;code&gt;/\p{Assigned}/&lt;/code&gt; -할당 된 문자</target>
        </trans-unit>
        <trans-unit id="57b1491cfec9326f30fdbd5bb1f309bcd1ea306f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Blank}/&lt;/code&gt; - Space or tab</source>
          <target state="translated">&lt;code&gt;/\p{Blank}/&lt;/code&gt; -공백 또는 탭</target>
        </trans-unit>
        <trans-unit id="8dfab3df13567b898ff208533dc27b72c1555230" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Cc}/&lt;/code&gt; - 'Other: Control'</source>
          <target state="translated">&lt;code&gt;/\p{Cc}/&lt;/code&gt; - '기타 : 제어'</target>
        </trans-unit>
        <trans-unit id="c140dcbf9d6be70d4dcaba1cf8af2594c984cad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Cf}/&lt;/code&gt; - 'Other: Format'</source>
          <target state="translated">&lt;code&gt;/\p{Cf}/&lt;/code&gt; - '기타 : 형식'</target>
        </trans-unit>
        <trans-unit id="41450db89e2258dbbf006ab6cbfc5be875f0b963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Cntrl}/&lt;/code&gt; - Control character</source>
          <target state="translated">&lt;code&gt;/\p{Cntrl}/&lt;/code&gt; -제어 문자</target>
        </trans-unit>
        <trans-unit id="8291f5ec3a4ae2bd92a3ef9839aa8a82719c2ca3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Cn}/&lt;/code&gt; - 'Other: Not Assigned'</source>
          <target state="translated">&lt;code&gt;/\p{Cn}/&lt;/code&gt; - '기타 : 할당되지 않음'</target>
        </trans-unit>
        <trans-unit id="a8662b75e392f589c9ff46d07159936b0b11be42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Co}/&lt;/code&gt; - 'Other: Private Use'</source>
          <target state="translated">&lt;code&gt;/\p{Co}/&lt;/code&gt; - '기타 : 개인 사용'</target>
        </trans-unit>
        <trans-unit id="07e79c269d9ff79934bbb3e950b8f1e7d3014d58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Cs}/&lt;/code&gt; - 'Other: Surrogate'</source>
          <target state="translated">&lt;code&gt;/\p{Cs}/&lt;/code&gt; - '기타 : 대리'</target>
        </trans-unit>
        <trans-unit id="b242ae1a77e97d30f791658fe1fc2b544b687750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{C}/&lt;/code&gt; - 'Other'</source>
          <target state="translated">&lt;code&gt;/\p{C}/&lt;/code&gt; - '기타'</target>
        </trans-unit>
        <trans-unit id="9b9e9cb5f501585288b3993cbc4f70d159d8dd48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Digit}/&lt;/code&gt; - Digit</source>
          <target state="translated">&lt;code&gt;/\p{Digit}/&lt;/code&gt; -숫자</target>
        </trans-unit>
        <trans-unit id="ca7b48b6d99b7e062a5b657d219ca01c07f8b705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Graph}/&lt;/code&gt; - Non-blank character (excludes spaces, control characters, and similar)</source>
          <target state="translated">&lt;code&gt;/\p{Graph}/&lt;/code&gt; -공백이 아닌 문자 (공백, 제어 문자 등은 제외)</target>
        </trans-unit>
        <trans-unit id="a6d118dbbfdcdce7d8079f18a174fbb817dedc9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Ll}/&lt;/code&gt; - 'Letter: Lowercase'</source>
          <target state="translated">&lt;code&gt;/\p{Ll}/&lt;/code&gt; - '문자 : 소문자'</target>
        </trans-unit>
        <trans-unit id="eec20a1d1b25a6d4f35230f9636e95c890e95cd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Lm}/&lt;/code&gt; - 'Letter: Mark'</source>
          <target state="translated">&lt;code&gt;/\p{Lm}/&lt;/code&gt; - '글자 : 표시'</target>
        </trans-unit>
        <trans-unit id="0a6c6672a9a61371a21009e308c030cfbd6e5207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Lower}/&lt;/code&gt; - Lowercase alphabetical character</source>
          <target state="translated">&lt;code&gt;/\p{Lower}/&lt;/code&gt; -소문자 알파벳 문자</target>
        </trans-unit>
        <trans-unit id="af2edd78ec336f4c1580aa932cf251c720216acc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Lo}/&lt;/code&gt; - 'Letter: Other'</source>
          <target state="translated">&lt;code&gt;/\p{Lo}/&lt;/code&gt; - '문자 : 기타'</target>
        </trans-unit>
        <trans-unit id="cc3fbc32298b0d3de120fd97f76acf37fdaca6a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Lt}/&lt;/code&gt; - 'Letter: Titlecase'</source>
          <target state="translated">&lt;code&gt;/\p{Lt}/&lt;/code&gt; - '글자 : 제목</target>
        </trans-unit>
        <trans-unit id="f211747cfa083f93e5d158582c140d0fc9f70d0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Lu}/&lt;/code&gt; - 'Letter: Uppercase</source>
          <target state="translated">&lt;code&gt;/\p{Lu}/&lt;/code&gt; - '문자 : 대문자</target>
        </trans-unit>
        <trans-unit id="dafbcca465fd30bcd01b94d2715dfe6068eb7344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{L}/&lt;/code&gt; - 'Letter'</source>
          <target state="translated">&lt;code&gt;/\p{L}/&lt;/code&gt; - '글자'</target>
        </trans-unit>
        <trans-unit id="27c67444eabb7734118526f5954aea24f44ee6be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Mc}/&lt;/code&gt; - 'Mark: Spacing Combining'</source>
          <target state="translated">&lt;code&gt;/\p{Mc}/&lt;/code&gt; - '마크 : 간격 결합'</target>
        </trans-unit>
        <trans-unit id="cdfc599414d5629f64a6dc804689635cf700f79d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Me}/&lt;/code&gt; - 'Mark: Enclosing'</source>
          <target state="translated">&lt;code&gt;/\p{Me}/&lt;/code&gt; - '마크 : 둘러싸 기'</target>
        </trans-unit>
        <trans-unit id="9f39a96b480c3a434c77feec7430fecf77f39ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Mn}/&lt;/code&gt; - 'Mark: Nonspacing'</source>
          <target state="translated">&lt;code&gt;/\p{Mn}/&lt;/code&gt; - '표시 : 간격 없음'</target>
        </trans-unit>
        <trans-unit id="508f5f06221794c8a69fe32b1f8bfb6a202781d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{M}/&lt;/code&gt; - 'Mark'</source>
          <target state="translated">&lt;code&gt;/\p{M}/&lt;/code&gt; - '마크'</target>
        </trans-unit>
        <trans-unit id="59b3dea00dbc5010fad4c86dddcdc0e3e4d6e82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Nd}/&lt;/code&gt; - 'Number: Decimal Digit'</source>
          <target state="translated">&lt;code&gt;/\p{Nd}/&lt;/code&gt; - '숫자 : 소수 자릿수'</target>
        </trans-unit>
        <trans-unit id="7aab13b8c84879ca4123f538632ea886c2e15a0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Nl}/&lt;/code&gt; - 'Number: Letter'</source>
          <target state="translated">&lt;code&gt;/\p{Nl}/&lt;/code&gt; - '숫자 : 문자'</target>
        </trans-unit>
        <trans-unit id="675a7885b30fce1c46e9f415f7f4bda3192adebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{No}/&lt;/code&gt; - 'Number: Other'</source>
          <target state="translated">&lt;code&gt;/\p{No}/&lt;/code&gt; - '번호 : 기타'</target>
        </trans-unit>
        <trans-unit id="fa5db6bbefd4fa6b84439915696073ba148f1694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{N}/&lt;/code&gt; - 'Number'</source>
          <target state="translated">&lt;code&gt;/\p{N}/&lt;/code&gt; - '숫자'</target>
        </trans-unit>
        <trans-unit id="94b6010218429953d3c9c0c21ab7945e577fafa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Pc}/&lt;/code&gt; - 'Punctuation: Connector'</source>
          <target state="translated">&lt;code&gt;/\p{Pc}/&lt;/code&gt; - '문구 : 커넥터'</target>
        </trans-unit>
        <trans-unit id="afe2ce545efb60acd69085adbc136676b0eff9da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Pd}/&lt;/code&gt; - 'Punctuation: Dash'</source>
          <target state="translated">&lt;code&gt;/\p{Pd}/&lt;/code&gt; - '문구 : 대시'</target>
        </trans-unit>
        <trans-unit id="fa4edadf3164c723a210076d80eb8b22ede905bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Pe}/&lt;/code&gt; - 'Punctuation: Close'</source>
          <target state="translated">&lt;code&gt;/\p{Pe}/&lt;/code&gt; - '문구 : 닫기'</target>
        </trans-unit>
        <trans-unit id="bedf1c89e5dc2b5ecd447c721b5031046ad20f38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Pf}/&lt;/code&gt; - 'Punctuation: Final Quote'</source>
          <target state="translated">&lt;code&gt;/\p{Pf}/&lt;/code&gt; - '문구 : 최종 견적'</target>
        </trans-unit>
        <trans-unit id="7ea16858d71ea96cf79303ced6c54fe5c503924c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Pi}/&lt;/code&gt; - 'Punctuation: Initial Quote'</source>
          <target state="translated">&lt;code&gt;/\p{Pi}/&lt;/code&gt; - '문구 : 초기 견적'</target>
        </trans-unit>
        <trans-unit id="a8837354acaba90f6597470a56d756e147b12105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Po}/&lt;/code&gt; - 'Punctuation: Other'</source>
          <target state="translated">&lt;code&gt;/\p{Po}/&lt;/code&gt; - '문구 : 기타'</target>
        </trans-unit>
        <trans-unit id="8c056f5113f18d667633f1d74b77a0bbf6a14fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Print}/&lt;/code&gt; - Like &lt;code&gt;\p{Graph}&lt;/code&gt;, but includes the space character</source>
          <target state="translated">&lt;code&gt;/\p{Print}/&lt;/code&gt; - &lt;code&gt;\p{Graph}&lt;/code&gt; 와 비슷하지만 공백 문자를 포함</target>
        </trans-unit>
        <trans-unit id="824782bcdd043f95387d370415ff0191083e59e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Ps}/&lt;/code&gt; - 'Punctuation: Open'</source>
          <target state="translated">&lt;code&gt;/\p{Ps}/&lt;/code&gt; - '문구 : 열기'</target>
        </trans-unit>
        <trans-unit id="94eee3f8092f28c1c1f09aaab73991a3c81f84a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Punct}/&lt;/code&gt; - Punctuation character</source>
          <target state="translated">&lt;code&gt;/\p{Punct}/&lt;/code&gt; -문장 부호 문자</target>
        </trans-unit>
        <trans-unit id="ab54229136eb11d66695cc4e58699b0fe43582cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{P}/&lt;/code&gt; - 'Punctuation'</source>
          <target state="translated">&lt;code&gt;/\p{P}/&lt;/code&gt; - '문구'</target>
        </trans-unit>
        <trans-unit id="8d1cba362c30a4b7c540e2034bef1218bc5897a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Sc}/&lt;/code&gt; - 'Symbol: Currency'</source>
          <target state="translated">&lt;code&gt;/\p{Sc}/&lt;/code&gt; - '기호 : 통화'</target>
        </trans-unit>
        <trans-unit id="89c064eca8ad50a16649f02f3831e93c729b6cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Sk}/&lt;/code&gt; - 'Symbol: Modifier'</source>
          <target state="translated">&lt;code&gt;/\p{Sk}/&lt;/code&gt; - '기호 : 수정 자'</target>
        </trans-unit>
        <trans-unit id="421a5eac3cc75bd2e480cb1c1f2f51066885340b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Sm}/&lt;/code&gt; - 'Symbol: Math'</source>
          <target state="translated">&lt;code&gt;/\p{Sm}/&lt;/code&gt; - '기호 : 수학'</target>
        </trans-unit>
        <trans-unit id="56db5965e9f518c6af5c73e40f6a281c6dfad8be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{So}/&lt;/code&gt; - 'Symbol: Other'</source>
          <target state="translated">&lt;code&gt;/\p{So}/&lt;/code&gt; - '기호 : 기타'</target>
        </trans-unit>
        <trans-unit id="ca310374998cf6dd1d5db7b51c31c70433a46128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Space}/&lt;/code&gt; - Whitespace character (&lt;code&gt;[:blank:]&lt;/code&gt;, newline, carriage return, etc.)</source>
          <target state="translated">&lt;code&gt;/\p{Space}/&lt;/code&gt; -공백 문자 ( &lt;code&gt;[:blank:]&lt;/code&gt; , 줄 바꿈, 캐리지 리턴 등)</target>
        </trans-unit>
        <trans-unit id="4441e17db492ffdaaa0935a71a0076135cf73756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{S}/&lt;/code&gt; - 'Symbol'</source>
          <target state="translated">&lt;code&gt;/\p{S}/&lt;/code&gt; - '기호'</target>
        </trans-unit>
        <trans-unit id="54c22ebaac3b2186a95f643c0195d8d0660327ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Upper}/&lt;/code&gt; - Uppercase alphabetical</source>
          <target state="translated">&lt;code&gt;/\p{Upper}/&lt;/code&gt; -대문자 알파벳</target>
        </trans-unit>
        <trans-unit id="e02012679323ddb5bb45fc1aea63778207b02c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Word}/&lt;/code&gt; - A member of one of the following Unicode general category &lt;em&gt;Letter&lt;/em&gt;, &lt;em&gt;Mark&lt;/em&gt;, &lt;em&gt;Number&lt;/em&gt;, &lt;em&gt;Connector_Punctuation&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;/\p{Word}/&lt;/code&gt; -다음 유니 코드 일반 범주 &lt;em&gt;Letter&lt;/em&gt; , &lt;em&gt;Mark&lt;/em&gt; , &lt;em&gt;Number&lt;/em&gt; , &lt;em&gt;Connector_Punctuation&lt;/em&gt; 중 하나의 멤버&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c41341482edce072a2f73402badeef1b3657f2d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{XDigit}/&lt;/code&gt; - Digit allowed in a hexadecimal number (i.e., 0-9a-fA-F)</source>
          <target state="translated">&lt;code&gt;/\p{XDigit}/&lt;/code&gt; 진수로 허용 된 숫자 (예 : 0-9a-fA-F)</target>
        </trans-unit>
        <trans-unit id="38626c32daae040d2f02f0b54b8c5c8554004fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Zl}/&lt;/code&gt; - 'Separator: Line'</source>
          <target state="translated">&lt;code&gt;/\p{Zl}/&lt;/code&gt; - '구분자 : 줄'</target>
        </trans-unit>
        <trans-unit id="4321b2791dc701910be89b753129bc81e12efc6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Zp}/&lt;/code&gt; - 'Separator: Paragraph'</source>
          <target state="translated">&lt;code&gt;/\p{Zp}/&lt;/code&gt; - '구분자 : 단락'</target>
        </trans-unit>
        <trans-unit id="3d74eba86a6da50ab007e76edb4b0d2647a222a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Zs}/&lt;/code&gt; - 'Separator: Space'</source>
          <target state="translated">&lt;code&gt;/\p{Zs}/&lt;/code&gt; - '구분자 : 공간'</target>
        </trans-unit>
        <trans-unit id="b7d22ad62cafa24d70d572e114c3897049e48a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\p{Z}/&lt;/code&gt; - 'Separator'</source>
          <target state="translated">&lt;code&gt;/\p{Z}/&lt;/code&gt; - '구분자'</target>
        </trans-unit>
        <trans-unit id="9f5fa58a03a458777d89ca412f357d64e4dd1de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\s/&lt;/code&gt; - A whitespace character: &lt;code&gt;/[ \t\r\n\f\v]/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/\s/&lt;/code&gt; -공백 문자 : &lt;code&gt;/[ \t\r\n\f\v]/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b40247db1821c6c2663bf827b79faf0a08f956a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/\w/&lt;/code&gt; - A word character (&lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;/\w/&lt;/code&gt; -단어 문자 ( &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1c0f06757f99e12c6671dd85240ba5655a6ba471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/pat/i&lt;/code&gt; - Ignore case</source>
          <target state="translated">&lt;code&gt;/pat/i&lt;/code&gt; - 대소 문자 무시</target>
        </trans-unit>
        <trans-unit id="60ea9f10d5094ca89e017bc611bae828baa15005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/pat/m&lt;/code&gt; - Treat a newline as a character matched by &lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/pat/m&lt;/code&gt; - 개행을 일치하는 문자로 취급합니다 &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41139b6bfd010399ee986485ff55ac4ba42538b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/pat/o&lt;/code&gt; - Perform &lt;code&gt;#{}&lt;/code&gt; interpolation only once</source>
          <target state="translated">&lt;code&gt;/pat/o&lt;/code&gt; - 수행 &lt;code&gt;#{}&lt;/code&gt; 한 번만 보간</target>
        </trans-unit>
        <trans-unit id="06017285fdf83cf8d83e912887007792107675c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/pat/x&lt;/code&gt; - Ignore whitespace and comments in the pattern</source>
          <target state="translated">&lt;code&gt;/pat/x&lt;/code&gt; - 패턴에서 공백과 주석을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="2daa7690c8d217f2c091f3fd8e162f0d35435812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:CONTEXT_SPECIFIC&lt;/code&gt; (the default for tagged values)</source>
          <target state="translated">&lt;code&gt;:CONTEXT_SPECIFIC&lt;/code&gt; (태그 된 값의 기본값)</target>
        </trans-unit>
        <trans-unit id="5765edbd24c09e348a51570982bc6984140f4a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:UNIVERSAL&lt;/code&gt; (the default for untagged values)</source>
          <target state="translated">&lt;code&gt;:UNIVERSAL&lt;/code&gt; (태그가없는 값의 기본값)</target>
        </trans-unit>
        <trans-unit id="50c0e3545f0af2c9641439aac16c287f86c407ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:_alone&lt;/code&gt; can be used to force items into their own chunk. For example, you can put lines that contain a URL by themselves, and chunk the rest of the lines together, like this:</source>
          <target state="translated">&lt;code&gt;:_alone&lt;/code&gt; 을 사용하여 항목을 자체 청크로 만들 수 있습니다. 예를 들어, URL을 포함하는 행을 단독으로 배치하고 다음과 같이 나머지 행을 청크 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79e7c5f62bd38d9469ffec156222e22d625d89de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:_alone&lt;/code&gt; specifies that the element should be chunked by itself.</source>
          <target state="translated">&lt;code&gt;:_alone&lt;/code&gt; 은 요소 자체를 청크하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ca05a310f2b0aafb39dd77cb255f823f280f3d0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:down&lt;/code&gt;: round half toward zero</source>
          <target state="translated">&lt;code&gt;:down&lt;/code&gt; : 반쪽을 0으로 반올림</target>
        </trans-unit>
        <trans-unit id="b4cd33c8b5559683d49ee7e453d581cd243ac0bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:even&lt;/code&gt;: round half toward the nearest even number</source>
          <target state="translated">&lt;code&gt;:even&lt;/code&gt; : 반을 가장 가까운 짝수로 반올림</target>
        </trans-unit>
        <trans-unit id="5cae284410b4063f6143be19bf695f1086c31096" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ftp_active_mode =&amp;gt; true&lt;/code&gt; is used to make ftp active mode. Ruby 1.9 uses passive mode by default. Note that the active mode is default in Ruby 1.8 or prior.</source>
          <target state="translated">&lt;code&gt;:ftp_active_mode =&amp;gt; true&lt;/code&gt; 는 ftp 활성 모드를 만드는 데 사용됩니다. Ruby 1.9는 기본적으로 수동 모드를 사용합니다. 활성 모드는 Ruby 1.8 이전 버전에서 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="26a16dd9407be66a6f8b6ea87a6fa9cb3944ffae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hertz&lt;/code&gt; can be used to obtain the exact value of the clock ticks per second for times() function and CLOCKS_PER_SEC for clock() function.</source>
          <target state="translated">&lt;code&gt;:hertz&lt;/code&gt; 는 times () 함수의 경우 초당 클럭 틱의 정확한 값을 얻고 clock () 함수의 경우 CLOCKS_PER_SEC를 얻는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77266a600fe408cf893367eb15fb83daee75630e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:redirect&lt;/code&gt; is true by default. &lt;code&gt;:redirect =&amp;gt; false&lt;/code&gt; is used to disable all HTTP redirects.</source>
          <target state="translated">&lt;code&gt;:redirect&lt;/code&gt; 는 기본적으로 true입니다. &lt;code&gt;:redirect =&amp;gt; false&lt;/code&gt; 는 모든 HTTP 리디렉션을 비활성화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3dd449de39620c256415bec879a12050931e5a0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; is the only checked entry in &lt;code&gt;options&lt;/code&gt; and is preferred over the &lt;code&gt;timeout&lt;/code&gt; argument (which will be removed in a future release). Other options may be used by subclasses that extend &lt;a href=&quot;timedstack&quot;&gt;&lt;code&gt;TimedStack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; 은 &lt;code&gt;options&lt;/code&gt; 에서 유일하게 확인 된 항목이며 &lt;code&gt;timeout&lt;/code&gt; 인수 보다 선호 됩니다 (향후 릴리스에서 제거됨). &lt;a href=&quot;timedstack&quot;&gt; &lt;code&gt;TimedStack&lt;/code&gt; &lt;/a&gt; 을 확장하는 하위 클래스에서 다른 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b69a2fbe06a4e67fbccb706bcefa4b0e1e6f41b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:up&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;: round half away from zero (default)</source>
          <target state="translated">&lt;code&gt;:up&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; : 반에서 0으로 반올림 (기본값)</target>
        </trans-unit>
        <trans-unit id="69b43b1994d9ea97c9db1231b06e7a8171610250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=begin&lt;/code&gt; and &lt;code&gt;=end&lt;/code&gt; can not be indented, so this is a syntax error:</source>
          <target state="translated">&lt;code&gt;=begin&lt;/code&gt; 및 &lt;code&gt;=end&lt;/code&gt; 는 들여 쓰기 할 수 없으므로 구문 오류입니다.</target>
        </trans-unit>
        <trans-unit id="83a66cf25815434e09a5700c29aa382d4053e53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=~&lt;/code&gt; and &lt;a href=&quot;regexp#method-i-match&quot;&gt;&lt;code&gt;Regexp#match&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=~&lt;/code&gt; 와 &lt;a href=&quot;regexp#method-i-match&quot;&gt; &lt;code&gt;Regexp#match&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1822f9e634764e7d5272e50bafa713425ee19bea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=~&lt;/code&gt; is Ruby's basic pattern-matching operator. When one operand is a regular expression and the other is a string then the regular expression is used as a pattern to match against the string. (This operator is equivalently defined by &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; so the order of &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; do not matter. Other classes may have different implementations of &lt;code&gt;=~&lt;/code&gt;.) If a match is found, the operator returns index of first match in string, otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;=~&lt;/code&gt; 는 Ruby의 기본 패턴 일치 연산자입니다. 한 피연산자가 정규식이고 다른 피연산자가 문자열 인 경우 정규식은 문자열과 일치하는 패턴으로 사용됩니다. (이 연산자는 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 에&lt;/a&gt; 의해 동등하게 정의 되므로 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; 의 순서는 중요하지 않습니다. 다른 클래스는 &lt;code&gt;=~&lt;/code&gt; 의 구현이 다를 수 있습니다 .) 일치하는 항목이 발견되면 연산자는 문자열에서 첫 번째 일치 색인을 리턴합니다. &lt;code&gt;nil&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c59b10041731c4a557fdf85b265791bac446da74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=~&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;=~&lt;/code&gt; 연산자</target>
        </trans-unit>
        <trans-unit id="b3281e20db5345144e4422ee0ac831b01bd844dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; - Zero or one times (optional)</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; -0 회 또는 1 회 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="e2e2b28a831ae731a86a12a7f4b34430dc00b3d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARGF&lt;/code&gt; is a stream designed for use in scripts that process files given as command-line arguments or passed in via STDIN.</source>
          <target state="translated">&lt;code&gt;ARGF&lt;/code&gt; 는 명령 행 인수로 제공되거나 STDIN을 통해 전달되는 파일을 처리하는 스크립트에서 사용하도록 설계된 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="75776d746a8be9632cbbd1662175579d88b10bb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARGF&lt;/code&gt; sets the line number automatically as you read data, so normally you will not need to set it explicitly. To access the current line number use &lt;code&gt;ARGF.lineno&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ARGF&lt;/code&gt; 는 데이터를 읽을 때 줄 번호를 자동으로 설정하므로 일반적으로 명시 적으로 설정할 필요는 없습니다. 현재 행 번호에 액세스하려면 &lt;code&gt;ARGF.lineno&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3498ab32fd3ac9d83a8d2858e78c8a41a8c4a1f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARGF&lt;/code&gt; treats the files named on the command line as a single file created by concatenating their contents. After returning the last character of the first file, it returns the first character of the second file, and so on.</source>
          <target state="translated">&lt;code&gt;ARGF&lt;/code&gt; 는 명령 행에 이름 지정된 파일을 내용을 연결하여 작성된 단일 파일로 취급합니다. 첫 번째 파일의 마지막 문자를 반환 한 후 두 번째 파일의 첫 번째 문자 등을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="be11b73875ae931522e2991e3aa71562a84e3674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; 과 &lt;code&gt;END&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="719b9430291f9b301a87ef9211033c613a98297d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; defines a block that is run before any other code in the current file. It is typically used in one-liners with &lt;code&gt;ruby -e&lt;/code&gt;. Similarly &lt;code&gt;END&lt;/code&gt; defines a block that is run after any other code.</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; 은 현재 파일에서 다른 코드보다 먼저 실행되는 블록을 정의합니다. 일반적으로 &lt;code&gt;ruby -e&lt;/code&gt; 와 함께 하나의 라이너에 사용됩니다 . 마찬가지로 &lt;code&gt;END&lt;/code&gt; 는 다른 코드 다음에 실행되는 블록을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6843393b095f0a19d5cec27d5a1516e16ca38fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; must appear at top-level and &lt;code&gt;END&lt;/code&gt; will issue a warning when you use it inside a method.</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; 은 최상위에 나타나야하며 &lt;code&gt;END&lt;/code&gt; 는 메소드 내에서 사용할 때 경고를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="9d85980e043b11180356148de4ccb4357d45671e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bundler.setup&lt;/code&gt; can be called only once, all subsequent calls are no-op.</source>
          <target state="translated">&lt;code&gt;Bundler.setup&lt;/code&gt; 은 한 번만 호출 할 수 있으며 모든 후속 호출은 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4a6c1de03fd418831b04411f8509174f5658ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CommandProcessor#transact&lt;/code&gt; executes the given block against self, in this case &lt;code&gt;sh&lt;/code&gt;; our &lt;a href=&quot;shell&quot;&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/a&gt; object. Within the block we can substitute &lt;code&gt;sh.cd&lt;/code&gt; to &lt;code&gt;cd&lt;/code&gt;, because the scope within the block uses &lt;code&gt;sh&lt;/code&gt; already.</source>
          <target state="translated">&lt;code&gt;CommandProcessor#transact&lt;/code&gt; 는 주어진 블록을 self에 대해 실행합니다 (이 경우 &lt;code&gt;sh&lt;/code&gt; ) . 우리의 &lt;a href=&quot;shell&quot;&gt; &lt;code&gt;Shell&lt;/code&gt; &lt;/a&gt; 객체입니다. 블록 내에서 &lt;code&gt;sh&lt;/code&gt; 를 이미 사용하므로 블록 내에서 &lt;code&gt;sh.cd&lt;/code&gt; 를 &lt;code&gt;cd&lt;/code&gt; 로 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1126cbd36d6b9fd7d1ab774ddfedc739a1cc1810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Length&lt;/code&gt; is automatically calculated from the size of the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; returned by the content block.</source>
          <target state="translated">&lt;code&gt;Content-Length&lt;/code&gt; 는 내용 블록이 반환 한 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 의 크기에서 자동으로 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="95bb26e5eb3f25bb48446545c194dc7704136598" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; completes connection</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 연결 완료</target>
        </trans-unit>
        <trans-unit id="3442659649df149679b0424934ca16176fb7a488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; completes record</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 기록 완료</target>
        </trans-unit>
        <trans-unit id="d27f1ad03c1fb63ab6a93b6f50cbf1c192949507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; discarded before delivery</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 배송 전에 삭제 된 데이터</target>
        </trans-unit>
        <trans-unit id="e580a186f35d7d90d3c427f990925b3d83ee68b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; for this generic resource.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 이 일반 자원에 대한 데이터 입니다.</target>
        </trans-unit>
        <trans-unit id="f44fddda4b0e93815fe4fb2eb8afb8b2fed9021e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; input into an instance of &lt;a href=&quot;zstream&quot;&gt;&lt;code&gt;Zlib::ZStream&lt;/code&gt;&lt;/a&gt; are temporally stored into the end of input buffer, and then data in input buffer are processed from the beginning of the buffer until no more output from the stream is produced (i.e. until &lt;a href=&quot;zstream#method-i-avail_out&quot;&gt;&lt;code&gt;avail_out&lt;/code&gt;&lt;/a&gt; &amp;gt; 0 after processing). During processing, output buffer is allocated and expanded automatically to hold all output data.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; &lt;a href=&quot;zstream&quot;&gt; &lt;code&gt;Zlib::ZStream&lt;/code&gt; &lt;/a&gt; 인스턴스에 입력 된 데이터 는 입력 버퍼의 끝에 일시적으로 저장되고, 입력 버퍼의 데이터는 스트림에서 더 이상 출력이 생성되지 않을 때까지 (예 : &lt;a href=&quot;zstream#method-i-avail_out&quot;&gt; &lt;code&gt;avail_out&lt;/code&gt; &lt;/a&gt; &amp;gt; 0 이후 까지) 버퍼의 시작부터 처리됩니다. 가공). 처리 중에 출력 버퍼가 자동으로 할당되고 확장되어 모든 출력 데이터를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="3f890ffbb37c12d445883c464ac7dee38721ed70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; ready to be read</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 읽을 준비가 된 데이터</target>
        </trans-unit>
        <trans-unit id="29d79ece4807d4c42879b63f6004057f98f2f560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; remains in the current packet</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 는 현재 패킷에 남아 있습니다</target>
        </trans-unit>
        <trans-unit id="5b544fb3b58c6a620f93381ab87cea4e47014fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; size limits vary between implementations. Original Berkeley DB was limited to 2GB of data. Dbm libraries also sometimes limit the total size of a key/value pair, and the total size of all the keys that hash to the same value. These limits can be as little as 512 bytes. That said, gdbm and recent versions of Berkeley DB do away with these limits.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 크기 제한은 구현마다 다릅니다. 원래 버클리 DB는 2GB의 데이터로 제한되었습니다. Dbm 라이브러리는 때때로 키 / 값 쌍의 전체 크기와 동일한 값으로 해시하는 모든 키의 전체 크기를 제한합니다. 이러한 제한은 512 바이트만큼 작을 수 있습니다. 그러나 gdbm과 최신 버전의 Berkeley DB는 이러한 한계를 극복했습니다.</target>
        </trans-unit>
        <trans-unit id="6e53a2e56276afaf9fcfaf2065594c6974e04c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; to add to the file. Can be given as a block.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 파일에 추가 할 데이터 입니다. 블록으로 주어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b383c8439ca616b6103728c38198e1e4356a67f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; transmitted by the server to the client and status responses that do not indicate command completion are prefixed with the token &amp;ldquo;*&amp;rdquo;, and are called untagged responses.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 서버에서 클라이언트로 전송 된 데이터 및 명령 완료를 나타내지 않는 상태 응답에는 &quot;*&quot;토큰이 접두어로 붙지 않은 응답이라고합니다.</target>
        </trans-unit>
        <trans-unit id="f8b8001a2e7fd28c498a573e0497b46187f84744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EOFError&lt;/code&gt; is a subclass of &lt;code&gt;IOError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EOFError&lt;/code&gt; 는 &lt;code&gt;IOError&lt;/code&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="e0be1ed4d32206741e13368eaf9667240e9df4b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Encoding::ASCII_8BIT&lt;/code&gt; is a special encoding that is usually used for a byte string, not a character string. But as the name insists, its characters in the range of ASCII are considered as ASCII characters. This is useful when you use ASCII-8BIT characters with other ASCII compatible characters.</source>
          <target state="translated">&lt;code&gt;Encoding::ASCII_8BIT&lt;/code&gt; 는 일반적으로 문자열이 아닌 바이트 문자열에 사용되는 특수 인코딩입니다. 그러나 이름에서 알 수 있듯이 ASCII 범위의 문자는 ASCII 문자로 간주됩니다. 다른 ASCII 호환 문자와 함께 ASCII-8BIT 문자를 사용할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f6b5ab383d51c8b212ee9eef20b3ef7e62ca723f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileTest&lt;/code&gt; implements file test operations similar to those used in &lt;code&gt;File::Stat&lt;/code&gt;. It exists as a standalone module, and its methods are also insinuated into the &lt;code&gt;File&lt;/code&gt; class. (Note that this is not done by inclusion: the interpreter cheats).</source>
          <target state="translated">&lt;code&gt;FileTest&lt;/code&gt; 는 &lt;code&gt;File::Stat&lt;/code&gt; 에서 사용 된 것과 유사한 파일 테스트 작업을 구현합니다 . 독립형 모듈로 존재하며 해당 메소드도 &lt;code&gt;File&lt;/code&gt; 클래스에 격리됩니다. (이것은 인터프리터가 속임수를 포함하여 수행되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="fffda5e19a9cd2ce55a970da0dc1c146c6bc7497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO.select&lt;/code&gt; peeks the buffer of &lt;code&gt;IO&lt;/code&gt; objects for testing readability. If the &lt;code&gt;IO&lt;/code&gt; buffer is not empty, &lt;code&gt;IO.select&lt;/code&gt; immediately notifies readability. This &amp;ldquo;peek&amp;rdquo; only happens for &lt;code&gt;IO&lt;/code&gt; objects. It does not happen for IO-like objects such as &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO.select&lt;/code&gt; 는 가독성 테스트를 위해 &lt;code&gt;IO&lt;/code&gt; 객체 의 버퍼를 엿 봅니다. 경우 &lt;code&gt;IO&lt;/code&gt; 버퍼가 비어 있지 &lt;code&gt;IO.select&lt;/code&gt; 즉시 가독성 통지합니다. 이&amp;ldquo;피킹&amp;rdquo;은 &lt;code&gt;IO&lt;/code&gt; 객체 에서만 발생 합니다. &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; &lt;/a&gt; 과 같은 IO 유사 오브젝트에는 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9dcb36b682b9b26f9cb167463f9717bcd2e02b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON.generate&lt;/code&gt; only allows objects or arrays to be converted to &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; syntax. &lt;code&gt;to_json&lt;/code&gt;, however, accepts many Ruby classes even though it acts only as a method for serialization:</source>
          <target state="translated">&lt;code&gt;JSON.generate&lt;/code&gt; 에서는 객체 또는 배열 만 &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 구문 으로 변환 할 수 있습니다 . 그러나 &lt;code&gt;to_json&lt;/code&gt; 은 직렬화 방법으로 만 작동하지만 많은 Ruby 클래스를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="589abc135e98fd01127b581c2c037ce754fcfa2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MatchData&lt;/code&gt; encapsulates the result of matching a &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; against string. It is returned by &lt;a href=&quot;regexp#method-i-match&quot;&gt;&lt;code&gt;Regexp#match&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#method-i-match&quot;&gt;&lt;code&gt;String#match&lt;/code&gt;&lt;/a&gt;, and also stored in a global variable returned by &lt;a href=&quot;regexp#method-c-last_match&quot;&gt;&lt;code&gt;Regexp.last_match&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MatchData&lt;/code&gt; 는 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt; 와 문자열 을 일치시킨 결과를 캡슐화합니다 . 그것은에 의해 반환되는 &lt;a href=&quot;regexp#method-i-match&quot;&gt; &lt;code&gt;Regexp#match&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;string#method-i-match&quot;&gt; &lt;code&gt;String#match&lt;/code&gt; &lt;/a&gt; , 또한에 의해 반환 된 글로벌 변수에 저장 &lt;a href=&quot;regexp#method-c-last_match&quot;&gt; &lt;code&gt;Regexp.last_match&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a394471588d83dd42b311e09165a6ac83f4047d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::IMAP::BodyTypeBasic&lt;/code&gt;, &lt;a href=&quot;imap/bodytypetext&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeText&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;imap/bodytypemessage&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeMessage&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;imap/bodytypemultipart&quot;&gt;&lt;code&gt;Net::IMAP::BodyTypeMultipart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Net::IMAP::BodyTypeBasic&lt;/code&gt; , &lt;a href=&quot;imap/bodytypetext&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeText&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;imap/bodytypemessage&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeMessage&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;imap/bodytypemultipart&quot;&gt; &lt;code&gt;Net::IMAP::BodyTypeMultipart&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b3d242866e0f7ee6e29191961136a18994647e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotImplementedError&lt;/code&gt; is raised if the underlying operating system does not support &lt;em&gt;fsync(2)&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;NotImplementedError&lt;/code&gt; 기본 운영 체제가 &lt;em&gt;fsync (2)를&lt;/em&gt; 지원하지 않으면 NotImplementedError 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="9a7475fd8506e2c55e3f0b59f0c18f58a4531d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prime&lt;/code&gt;::&lt;code&gt;EratosthenesGenerator&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Prime&lt;/code&gt;::&lt;code&gt;EratosthenesGenerator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4ced9f9fb6d21470ed53f6f7632487ea0e4bd91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prime&lt;/code&gt;::&lt;code&gt;Generator23&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Prime&lt;/code&gt;::&lt;code&gt;Generator23&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbc12a101bdf131b9e2c1615f1057569e11f2c2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prime&lt;/code&gt;::&lt;code&gt;PseudoPrimeGenerator&lt;/code&gt; is the base class for generators. There are few implementations of generator.</source>
          <target state="translated">&lt;code&gt;Prime&lt;/code&gt; :: &lt;code&gt;PseudoPrimeGenerator&lt;/code&gt; 는 생성기의 기본 클래스입니다. 생성기의 구현은 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="7da49efba16c3196ba35d6ebe29f2b5b4ddcbf45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prime&lt;/code&gt;::&lt;code&gt;TrialDivisionGenerator&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Prime&lt;/code&gt;::&lt;code&gt;TrialDivisionGenerator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3db6617f415de18dca902f7c76c1143f3233c53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process.clock_getres(:CLOCK_BASED_CLOCK_PROCESS_CPUTIME_ID, :hertz)&lt;/code&gt; returns CLOCKS_PER_SEC.</source>
          <target state="translated">&lt;code&gt;Process.clock_getres(:CLOCK_BASED_CLOCK_PROCESS_CPUTIME_ID, :hertz)&lt;/code&gt; 는 CLOCKS_PER_SEC를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9dc5270b60956c97917cc9e7aa823e14dec3c58a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process.clock_getres(:TIMES_BASED_CLOCK_PROCESS_CPUTIME_ID, :hertz)&lt;/code&gt; returns the clock ticks per second.</source>
          <target state="translated">&lt;code&gt;Process.clock_getres(:TIMES_BASED_CLOCK_PROCESS_CPUTIME_ID, :hertz)&lt;/code&gt; 는 초당 클럭 틱을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af2927d061233e54694b3720235a0a16fd6d1ebe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process.clock_getres&lt;/code&gt; also accepts &lt;code&gt;:hertz&lt;/code&gt; as &lt;code&gt;unit&lt;/code&gt;. &lt;code&gt;:hertz&lt;/code&gt; means a the reciprocal of &lt;code&gt;:float_second&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Process.clock_getres&lt;/code&gt; 는 &lt;code&gt;:hertz&lt;/code&gt; 를 &lt;code&gt;unit&lt;/code&gt; 로 허용 합니다. &lt;code&gt;:hertz&lt;/code&gt; 는 &lt;code&gt;:float_second&lt;/code&gt; 의 역수를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="1d110d5a3508e40c996f2470f8b2ee474796dc24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process::Status&lt;/code&gt; encapsulates the information on the status of a running or terminated system process. The built-in variable &lt;code&gt;$?&lt;/code&gt; is either &lt;code&gt;nil&lt;/code&gt; or a &lt;code&gt;Process::Status&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Process::Status&lt;/code&gt; 는 실행 중이거나 종료 된 시스템 프로세스의 상태에 대한 정보를 캡슐화합니다. 내장 변수 &lt;code&gt;$?&lt;/code&gt; 중 하나입니다 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;Process::Status&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="d0f06df63b78947c7f7adf7e69ff5cf3b400c215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PseudoPrimeGenerator&lt;/code&gt;#succ raises &lt;code&gt;NotImplementedError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PseudoPrimeGenerator&lt;/code&gt; 의 #succ이 제기 &lt;code&gt;NotImplementedError&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="8a213fd4f2bbb69d6c445746c261d40489c6205c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RDoc&lt;/code&gt;, distributed with Ruby, uses its own template engine, which can be reused elsewhere;</source>
          <target state="translated">&lt;code&gt;RDoc&lt;/code&gt; Ruby와 함께 배포되는 RDoc 은 자체 템플릿 엔진을 사용하여 다른 곳에서 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abaf0606b911dbfd43aa134ce3ebcb427b39cf20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol&lt;/code&gt; objects represent names and some strings inside the Ruby interpreter. They are generated using the &lt;code&gt;:name&lt;/code&gt; and &lt;code&gt;:&quot;string&quot;&lt;/code&gt; literals syntax, and by the various &lt;code&gt;to_sym&lt;/code&gt; methods. The same &lt;code&gt;Symbol&lt;/code&gt; object will be created for a given name or string for the duration of a program's execution, regardless of the context or meaning of that name. Thus if &lt;code&gt;Fred&lt;/code&gt; is a constant in one context, a method in another, and a class in a third, the &lt;code&gt;Symbol&lt;/code&gt;&lt;code&gt;:Fred&lt;/code&gt; will be the same object in all three contexts.</source>
          <target state="translated">&lt;code&gt;Symbol&lt;/code&gt; 객체는 Ruby 인터프리터 내부의 이름과 일부 문자열을 나타냅니다. &lt;code&gt;:name&lt;/code&gt; 및 &lt;code&gt;:&quot;string&quot;&lt;/code&gt; 리터럴 구문과 다양한 &lt;code&gt;to_sym&lt;/code&gt; 메소드를 사용하여 생성됩니다 . 해당 이름의 컨텍스트 나 의미에 관계없이 프로그램이 실행되는 동안 주어진 이름이나 문자열에 대해 동일한 &lt;code&gt;Symbol&lt;/code&gt; 객체가 생성됩니다. 따라서 &lt;code&gt;Fred&lt;/code&gt; 가 한 컨텍스트에서 상수이고 다른 컨텍스트에서 메소드이고 세 번째 클래스에서 클래스 인 경우 &lt;code&gt;Symbol&lt;/code&gt; &lt;code&gt;:Fred&lt;/code&gt; 는 세 컨텍스트에서 모두 동일한 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="792046d6f2275fd894727c3114a3c1563e1c9923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynchronizedArray&lt;/code&gt; implements an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with synchronized access to items. This &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; is implemented as subclass of &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; which includes the &lt;a href=&quot;monitormixin&quot;&gt;&lt;code&gt;MonitorMixin&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;SynchronizedArray&lt;/code&gt; 는 항목에 대한 동기화 된 액세스 권한이 있는 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 를 구현 합니다. 이 &lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;monitormixin&quot;&gt; &lt;code&gt;MonitorMixin&lt;/code&gt; &lt;/a&gt; 모듈 을 포함하는 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; 의&lt;/a&gt; 서브 클래스 로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="c0b1f508c7c7689a8b08e261efd145fc9f7cc940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\A&lt;/code&gt; - Matches beginning of string.</source>
          <target state="translated">&lt;code&gt;\A&lt;/code&gt; 문자열의 시작과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9b779dc89ce6abc943517efb2bf82d67415a95e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\B&lt;/code&gt; - Matches non-word boundaries</source>
          <target state="translated">&lt;code&gt;\B&lt;/code&gt; 단어가 아닌 경계와 일치</target>
        </trans-unit>
        <trans-unit id="b61db0ddd41cfe6c07a02c7b0759171cb4ed7c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\G&lt;/code&gt; - Matches first matching position:</source>
          <target state="translated">&lt;code&gt;\G&lt;/code&gt; 첫 번째 일치 위치와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="e39013ec1351afe1921976e9132f4e5f419b3408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Z&lt;/code&gt; - Matches end of string. If string ends with a newline, it matches just before newline</source>
          <target state="translated">&lt;code&gt;\Z&lt;/code&gt; 문자열 끝과 일치합니다. 문자열이 개행으로 끝나는 경우 개행 직전에 일치합니다.</target>
        </trans-unit>
        <trans-unit id="ac90d157e6ea008027588aea36ccce6e39d426ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\b&lt;/code&gt; - Matches word boundaries when outside brackets; backspace (0x08) when inside brackets</source>
          <target state="translated">&lt;code&gt;\b&lt;/code&gt; 대괄호 밖에있을 때 단어 경계와 일치합니다. 괄호 안에있을 때 백 스페이스 (0x08)</target>
        </trans-unit>
        <trans-unit id="f91554cfb79f79a24b31f31ba94e535a51cdba65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\z&lt;/code&gt; - Matches end of string</source>
          <target state="translated">&lt;code&gt;\z&lt;/code&gt; 문자열 끝과 일치</target>
        </trans-unit>
        <trans-unit id="4d1db721cf072b479814688141bce9c1be080047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; - Matches beginning of line</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; -줄의 시작과 일치</target>
        </trans-unit>
        <trans-unit id="990d1410a36599e0266b5f03d0bde6124d1e29e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abi&lt;/code&gt; is the ABI of the function</source>
          <target state="translated">&lt;code&gt;abi&lt;/code&gt; 는 함수의 ABI입니다</target>
        </trans-unit>
        <trans-unit id="9ab67ab76806774654516e60bb32e682aecf8c3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abi&lt;/code&gt; is the abi of the closure</source>
          <target state="translated">&lt;code&gt;abi&lt;/code&gt; 는 폐쇄의 abi입니다</target>
        </trans-unit>
        <trans-unit id="37b9ea1f4e471cc399a3f5bfbb9264ee02bf91ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; is the action to perform. &lt;code&gt;enctype&lt;/code&gt; is the encoding type, which defaults to &amp;ldquo;multipart/form-data&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 은 수행 할 조치입니다. &lt;code&gt;enctype&lt;/code&gt; 은 인코딩 유형이며 기본값은 &quot;multipart / form-data&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2dd96921c462137331d90bb49f6fb1e4a3f18883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt; is the hostname or ip address of your &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; server.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 는 &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 서버 의 호스트 이름 또는 IP 주소입니다 .</target>
        </trans-unit>
        <trans-unit id="802c9a1cdc21f321d9be180dc702710d63af4763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt; is the hostname or ip address of your &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server. &lt;code&gt;port&lt;/code&gt; is the port to connect to; it defaults to port 25.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 는 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 서버 의 호스트 이름 또는 IP 주소입니다 . &lt;code&gt;port&lt;/code&gt; 는 연결할 포트 입니다. 기본값은 포트 25입니다.</target>
        </trans-unit>
        <trans-unit id="e378643de5b9576d38b3f0c52458818b3a56f15b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt; is the hostname or ip address of your smtp server.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 는 smtp 서버의 호스트 이름 또는 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="f81bab57f61ee24945e365a9c9c688a45d3d4ea6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt; must be a &lt;a href=&quot;ipv4&quot;&gt;&lt;code&gt;Resolv::IPv4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;Resolv::IPv6&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Retrieved name will be a &lt;a href=&quot;dns/name&quot;&gt;&lt;code&gt;Resolv::DNS::Name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 는 &lt;a href=&quot;ipv4&quot;&gt; &lt;code&gt;Resolv::IPv4&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ipv6&quot;&gt; &lt;code&gt;Resolv::IPv6&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이어야합니다 . 검색된 이름은 &lt;a href=&quot;dns/name&quot;&gt; &lt;code&gt;Resolv::DNS::Name&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bafaab5527c041b46343f09edd1fa9700dc4adbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt; must be a &lt;a href=&quot;ipv4&quot;&gt;&lt;code&gt;Resolv::IPv4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;Resolv::IPv6&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Retrieved names will be &lt;a href=&quot;dns/name&quot;&gt;&lt;code&gt;Resolv::DNS::Name&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 는 &lt;a href=&quot;ipv4&quot;&gt; &lt;code&gt;Resolv::IPv4&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ipv6&quot;&gt; &lt;code&gt;Resolv::IPv6&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이어야합니다 . 검색된 이름은 &lt;a href=&quot;dns/name&quot;&gt; &lt;code&gt;Resolv::DNS::Name&lt;/code&gt; &lt;/a&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="60165ded592917d39c87e69735fdc233fc67711b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addresses&lt;/code&gt; can contain multiple addresses. If a multicast address is given in &lt;code&gt;addresses&lt;/code&gt; then the &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; will listen for multicast queries.</source>
          <target state="translated">&lt;code&gt;addresses&lt;/code&gt; 는 여러 주소 를 포함 할 수 있습니다. 멀티 캐스트 주소가 주어진 경우 &lt;code&gt;addresses&lt;/code&gt; 다음 &lt;a href=&quot;ringserver&quot;&gt; &lt;code&gt;RingServer&lt;/code&gt; 는&lt;/a&gt; 멀티 캐스트 쿼리를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="8e1915b48105b2409b64ca172cea6dc0e6a3334c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;undef&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; 및 &lt;code&gt;undef&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78d5cce69b3448fd9b64e049f3cb8f0778c2c40e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; can be a string, giving the alignment of the caption (one of top, bottom, left, or right). It can be a hash of all the attributes of the element. Or it can be omitted.</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; 은 캡션의 정렬을 제공하는 문자열 일 수 있습니다 (위쪽, 아래쪽, 왼쪽 또는 오른쪽 중 하나). 요소의 모든 속성에 대한 해시 일 수 있습니다. 또는 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5223f51a54cdc4de95c913634fc6a075f41c2a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; must match one of the IPv6::Regex* constants</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; 는 IPv6 :: Regex * 상수 중 하나와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="159261df4bf97f60fa69385b8f08c8de9a5138c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; must match the LOC::Alt::Regex constant</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; 는 LOC :: Alt :: Regex 상수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="ef509e62853bf5a8d2a5a25ce2d3f81d7b9724b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; must match the LOC::Coord::Regex constant</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; 는 LOC :: Coord :: Regex 상수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ab3f7d376ae92ce88d6d0fd3642c78d804f6c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; must match the LOC::Size::Regex constant</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; 는 LOC :: Size :: Regex 상수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="15ff360398f79a4126fe227693394b807421efb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; are passed the callback</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 콜백에 전달됩니다</target>
        </trans-unit>
        <trans-unit id="f166ff5a47acf578744e8aa38f4409a687720c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of arguments, passed to the &lt;code&gt;ptr&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 &lt;code&gt;ptr&lt;/code&gt; 함수에 전달되는 인수 의 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="70af04309836e8bfa0343b97b0362a4a0e2e8de2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of arguments, passed to the callback function</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 인수 의 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 이며 콜백 함수에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="142686f9848faeb71a09fc9c5bcd33d1e05074e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argtype&lt;/code&gt; is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of arguments, passed to the &lt;code&gt;name&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;argtype&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; 함수에 전달 된 인수 의 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c5a277f933ccb28639df261037fcaec3b4b9ed27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argtype&lt;/code&gt; is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of arguments, passed to the callback function</source>
          <target state="translated">&lt;code&gt;argtype&lt;/code&gt; 은 인수 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 이며 콜백 함수에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3e7d71054d1af3526b6fb83c09e6712a4b3b2699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attr&lt;/code&gt; is a list of attributes to fetch; see the documentation for &lt;a href=&quot;imap#FetchData&quot;&gt;&lt;code&gt;Net::IMAP::FetchData&lt;/code&gt;&lt;/a&gt; for a list of valid attributes.</source>
          <target state="translated">&lt;code&gt;attr&lt;/code&gt; 은 가져올 속성 목록입니다. 유효한 속성 목록은 &lt;a href=&quot;imap#FetchData&quot;&gt; &lt;code&gt;Net::IMAP::FetchData&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c2523e305f68394e6df2dc216a0edbaa22e202b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backlog&lt;/code&gt; - the maximum length of the queue for pending connections.</source>
          <target state="translated">&lt;code&gt;backlog&lt;/code&gt; -보류중인 연결의 최대 큐 길이입니다.</target>
        </trans-unit>
        <trans-unit id="52a401f8a8ef77662fd8f1bf50f31fc81f5e8795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base&lt;/code&gt; must be greater than or equal to 2.</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; 이 2보다 크거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="e8c893a62b80d19ed7de90eb6ae3737873f4a623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; of beginless range and &lt;code&gt;end&lt;/code&gt; of endless range are &lt;code&gt;nil&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 않는 범위의 시작 과 &lt;code&gt;end&lt;/code&gt; 이없는 범위의 끝은 &lt;code&gt;nil&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="2d9b5b29f28b7a9050ec581a0fa3ce86fea0e35b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; is passed to the callback</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; 이 콜백으로 전달됩니다</target>
        </trans-unit>
        <trans-unit id="5c957575431e27cbff774aa2feac8a7c1a3de876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; Statement</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 계산서</target>
        </trans-unit>
        <trans-unit id="72a9601395ced9b6a99380e120ec134848c53b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; accepts a value that supplies the result of the expression it is &amp;ldquo;breaking&amp;rdquo; out of:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 는 &quot;breaking&quot;이라는 표현의 결과를 제공하는 값을받습니다 :</target>
        </trans-unit>
        <trans-unit id="15961e6d774b308fa6cafaaa8f1b3bf9cff90c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; - destination &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; buffer</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; - 대상 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 버퍼</target>
        </trans-unit>
        <trans-unit id="4bfac2d7ad0172d865409d0e164579ac2b70c242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is a string containing a marshalled object that could not be unmarshalled. &lt;code&gt;err&lt;/code&gt; is the error message that was raised when the unmarshalling failed. It is used to determine the name of the unmarshalled object.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 는 정렬 해제 할 수없는 마샬링 된 객체를 포함하는 문자열입니다. &lt;code&gt;err&lt;/code&gt; 은 비 정렬 화가 실패했을 때 발생한 오류 메시지입니다. 비 정렬 화 된 객체의 이름을 결정하는데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c11567d16fd34bb1db716926a4537b419b94f325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_type&lt;/code&gt; is the ABI of the function</source>
          <target state="translated">&lt;code&gt;call_type&lt;/code&gt; 은 함수의 ABI입니다.</target>
        </trans-unit>
        <trans-unit id="0474f67d4395f078502b414ed8f6fdf696d67541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_type&lt;/code&gt; is the abi of the closure</source>
          <target state="translated">&lt;code&gt;call_type&lt;/code&gt; 은 클로저의 abi입니다.</target>
        </trans-unit>
        <trans-unit id="bac3152ae2e5a2f99f89aabbbed55b140f75d8c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;case&lt;/code&gt; Expression</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 표현</target>
        </trans-unit>
        <trans-unit id="2cfc0028ac04e2f462b0addb9c3878e2ce8727b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;catch&lt;/code&gt; executes its block. If &lt;code&gt;throw&lt;/code&gt; is not called, the block executes normally, and &lt;code&gt;catch&lt;/code&gt; returns the value of the last expression evaluated.</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 는 블록을 실행합니다. 경우 &lt;code&gt;throw&lt;/code&gt; 호출되지 않습니다, 블록은 일반적으로 실행하고, &lt;code&gt;catch&lt;/code&gt; 평가 마지막 표현식의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e5be433344613a3024a062a014af77e681da81c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cite&lt;/code&gt; can either be a string, give the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for the source of the quoted text, or a hash, giving all attributes of the element, or it can be omitted, in which case the element has no attributes.</source>
          <target state="translated">&lt;code&gt;cite&lt;/code&gt; 는 문자열 이거나 인용 된 텍스트의 소스에 대한 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 제공 하거나 해시로 요소의 모든 속성을 제공하거나 생략 할 수 있으며,이 경우 요소에 속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6c634f5adab795c8f5de45e3a029ed731a7d6d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clock_id&lt;/code&gt; can be a symbol as &lt;code&gt;Process.clock_gettime&lt;/code&gt;. However the result may not be accurate. For example, +Process.clock_getres(:GETTIMEOFDAY_BASED_CLOCK_REALTIME)+ returns 1.0e-06 which means 1 microsecond, but actual resolution can be more coarse.</source>
          <target state="translated">&lt;code&gt;clock_id&lt;/code&gt; 는 &lt;code&gt;Process.clock_gettime&lt;/code&gt; 과 같은 기호 일 수 있습니다 . 그러나 결과가 정확하지 않을 수 있습니다. 예를 들어 + Process.clock_getres (: GETTIMEOFDAY_BASED_CLOCK_REALTIME) +는 1.0e-06을 반환합니다. 이는 1 마이크로 초를 의미하지만 실제 해상도는 더 거칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69b1050234c52eed047af46e1e677cd25dc4b331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clock_id&lt;/code&gt; can be a symbol as &lt;code&gt;Process.clock_gettime&lt;/code&gt;. However the result may not be accurate. For example, &lt;code&gt;Process.clock_getres(:GETTIMEOFDAY_BASED_CLOCK_REALTIME)&lt;/code&gt; returns 1.0e-06 which means 1 microsecond, but actual resolution can be more coarse.</source>
          <target state="translated">&lt;code&gt;clock_id&lt;/code&gt; 는 &lt;code&gt;Process.clock_gettime&lt;/code&gt; 과 같은 기호가 될 수 있습니다 . 그러나 결과가 정확하지 않을 수 있습니다. 예를 들어 &lt;code&gt;Process.clock_getres(:GETTIMEOFDAY_BASED_CLOCK_REALTIME)&lt;/code&gt; 은 1 마이크로 초를 의미하는 1.0e-06을 반환하지만 실제 해상도는 더 거칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73b3dfc154b77f716a8611414682a9b3e82898bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clock_id&lt;/code&gt; specifies a kind of clock. It is specified as a constant which begins with &lt;code&gt;Process::CLOCK_&lt;/code&gt; such as &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;Process::CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;process#CLOCK_MONOTONIC&quot;&gt;&lt;code&gt;Process::CLOCK_MONOTONIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;clock_id&lt;/code&gt; 는 시계 종류를 지정합니다. 그것은로 시작하는 상수로 지정 &lt;code&gt;Process::CLOCK_&lt;/code&gt; 같은 &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt; &lt;code&gt;Process::CLOCK_REALTIME&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;process#CLOCK_MONOTONIC&quot;&gt; &lt;code&gt;Process::CLOCK_MONOTONIC&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="32c464060d42b850dd24d3b82c1b9a4fd30687b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clock_id&lt;/code&gt; specifies a kind of clock. See the document of &lt;code&gt;Process.clock_gettime&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;clock_id&lt;/code&gt; 는 시계 종류를 지정합니다. 자세한 내용은 &lt;code&gt;Process.clock_gettime&lt;/code&gt; 문서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="1dc006d7877c8851b54b600535bade8668a39976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close&lt;/code&gt; will be ignored.</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5fa8fc54152fa34247b407cbdfab963431de920a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close_obj&lt;/code&gt; - text appended after the &amp;amp;blok. Default is ''</source>
          <target state="translated">&lt;code&gt;close_obj&lt;/code&gt; - &amp;amp; blok 뒤에 추가 된 텍스트 기본값은 ''</target>
        </trans-unit>
        <trans-unit id="89763f390bd5e3b70c246e8506a327920c2c82c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close_width&lt;/code&gt; - noop argument. Present for compatibility.</source>
          <target state="translated">&lt;code&gt;close_width&lt;/code&gt; -noop 인수 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="779c9286a4f55c9164e09a0108eaf739310ff5c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;closed?&lt;/code&gt; will return true</source>
          <target state="translated">&lt;code&gt;closed?&lt;/code&gt; 사실을 반환합니다</target>
        </trans-unit>
        <trans-unit id="60495b76ab3f76048f805909785bf6b491e7056a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt; and &lt;code&gt;command_line&lt;/code&gt; are the full commands to run, given a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Any additional &lt;code&gt;arguments&lt;/code&gt; will be passed to the command.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 와 &lt;code&gt;command_line&lt;/code&gt; 은 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 이&lt;/a&gt; 주어지면 실행할 전체 명령 입니다. 추가 &lt;code&gt;arguments&lt;/code&gt; 는 모두 명령에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3d40f44143db3426088ff3a28ce5d3092810314b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat&lt;/code&gt; can take multiple arguments, and all the arguments are concatenated in order.</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; 은 여러 개의 인수를 취할 수 있으며 모든 인수는 순서대로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="eee0026b51920ea032bf3b2362cfb8fb40a228d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; is the configuration for the new server. This may be nil.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 는 새 서버의 구성입니다. 이것은 0 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5822340615ded74b62c41262fb8e5527c81085b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config_info&lt;/code&gt; can be:</source>
          <target state="translated">&lt;code&gt;config_info&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b9581a9100b64b0f58472604b74f8127e3a92832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctype&lt;/code&gt; is the C type to be returned</source>
          <target state="translated">&lt;code&gt;ctype&lt;/code&gt; 은 반환 할 C 유형입니다.</target>
        </trans-unit>
        <trans-unit id="c25855e542862c2c96f5aaaa564d13761b9c6f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctype&lt;/code&gt; is the return type of the function</source>
          <target state="translated">&lt;code&gt;ctype&lt;/code&gt; 은 함수의 반환 유형입니다</target>
        </trans-unit>
        <trans-unit id="f44d96355aa1b0cbc8764cb204b13aa61dd625c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;define_method&lt;/code&gt; always defines a method without the tricks, even if a non-lambda &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object is given. This is the only exception for which the tricks are not preserved.</source>
          <target state="translated">&lt;code&gt;define_method&lt;/code&gt; 람다가 아닌 &lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 객체가 제공 되더라도 define_method는 항상 트릭없이 메소드를 정의합니다 . 트릭이 유지되지 않는 유일한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="6574cc31804f54b1f99fdebb013d3f2db00ea8da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;define_method&lt;/code&gt; is treated the same as method definition. The defined method has no tricks.</source>
          <target state="translated">&lt;code&gt;define_method&lt;/code&gt; 는 메소드 정의와 동일하게 취급됩니다. 정의 된 방법에는 트릭이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0fbc07f9ffc4a3fe09d933eaed8ab1c87e9e22ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defined?&lt;/code&gt; is a keyword that returns a string describing its argument:</source>
          <target state="translated">&lt;code&gt;defined?&lt;/code&gt; 인수를 설명하는 문자열을 반환하는 키워드입니다.</target>
        </trans-unit>
        <trans-unit id="c8cb5e338c34b194f02541ef2d633b731927c1ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dest&lt;/code&gt; argument is obsolete. It still works but you must not use it.</source>
          <target state="translated">&lt;code&gt;dest&lt;/code&gt; 인수는 더 이상 사용되지 않습니다. 여전히 작동하지만 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="10509d3cb596e4f186a91e4d2cc2e3454ba46ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do end&lt;/code&gt; has lower precedence than &lt;code&gt;{ }&lt;/code&gt; so:</source>
          <target state="translated">&lt;code&gt;do end&lt;/code&gt; 가 &lt;code&gt;{ }&lt;/code&gt; 보다 우선 순위가 낮 으므로</target>
        </trans-unit>
        <trans-unit id="17b95254f694a0bfed6c8eebbfb426259bb2ebd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dup&lt;/code&gt; argument is obsolete and not used now.</source>
          <target state="translated">&lt;code&gt;dup&lt;/code&gt; 인수는 더 이상 사용되지 않으며 현재 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="296a8187dc4c5e939db7a1eba09fa62f846ef414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;each&lt;/code&gt; of beginless range raises an exception;</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; 않는 범위는 각각 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="e16683abd506a4793671d5087bf136c616a6e88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;each&lt;/code&gt; of endless range enumerates infinite sequence (may be useful in combination with &lt;a href=&quot;enumerable#method-i-take_while&quot;&gt;&lt;code&gt;Enumerable#take_while&lt;/code&gt;&lt;/a&gt; or similar methods);</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; 의 무한 범위는 무한 시퀀스를 열거한다 ( &lt;a href=&quot;enumerable#method-i-take_while&quot;&gt; &lt;code&gt;Enumerable#take_while&lt;/code&gt; &lt;/a&gt; 또는 유사한 방법과 조합하여 유용 할 수 있음 );</target>
        </trans-unit>
        <trans-unit id="206e1a70cf4116ce2dcdc490541ada836cf52f45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt; of endless range is &lt;code&gt;nil&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; 무단 범위이다 &lt;code&gt;nil&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="eb9dc5acdc78df51417ad25ed5d3a1ab84c409c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt; defaults to the basename of the program.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 는 기본적으로 프로그램의 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="000671d81cb7da88cb760c7ad31837e40191364b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event&lt;/code&gt; can be:</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4b0dd96787cd59839a39b25a31fe481a6fb88c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;facility&lt;/code&gt; describes the type of program opening the syslog, and is the logical OR of any of the following which are defined for the host OS:</source>
          <target state="translated">&lt;code&gt;facility&lt;/code&gt; 는 syslog를 여는 프로그램 유형을 설명하며 호스트 OS에 대해 정의 된 다음 중 하나의 논리적 OR입니다.</target>
        </trans-unit>
        <trans-unit id="9335613bbf1b7267d6b8b33353c111ee03f954f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; can be an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 은 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8046c861e96b2ad738a19df476b6f928241b6e48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; is used for `__FILE__` and exception backtrace. &lt;code&gt;path&lt;/code&gt; is used for &lt;code&gt;require_relative&lt;/code&gt; base. It is recommended these should be the same full path.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 은`__FILE__` 및 예외 역 추적에 사용됩니다. &lt;code&gt;path&lt;/code&gt; 는 &lt;code&gt;require_relative&lt;/code&gt; 기본에 사용됩니다 . 전체 경로가 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="1c109af5aa635faef64f5f69d9941725968a373f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; defaults to basename of the program without suffix in a directory ~/.options, then the basename with '.options' suffix under XDG and Haiku standard places.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 기본적으로 ~ / .options 디렉토리에 접미사가없는 프로그램의 기본 이름이고 XDG 및 Haiku 표준 위치에서 '.options'접미사가있는 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fd55199c0becdf89a17e8960595845b1e9e2b712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; defaults to basename of the program without suffix in a directory ~/.options.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 은 ~ / .options 디렉토리에 접미사가없는 프로그램의 기본 이름으로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1e4ad1bbbcfb92a9155a61a18a67ee387bad1eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; will be used in the exception message if any exception is raised while parsing.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 파싱하는 동안 예외가 발생하면 filename 이 예외 메시지에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e17fb328422d4706d9e3eaea4a649c2cd76b53f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; - zero or more of the &lt;code&gt;MSG_&lt;/code&gt; options</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; -0 개 이상의 &lt;code&gt;MSG_&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="e3ba81e0852b1049efc336a68374199f06a635dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; is a bitwise OR of the &lt;code&gt;FNM_XXX&lt;/code&gt; constants. The same glob pattern and flags are used by &lt;a href=&quot;dir#method-c-glob&quot;&gt;&lt;code&gt;Dir::glob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 는 &lt;code&gt;FNM_XXX&lt;/code&gt; 상수 의 비트 단위 OR입니다 . &lt;a href=&quot;dir#method-c-glob&quot;&gt; &lt;code&gt;Dir::glob&lt;/code&gt; &lt;/a&gt; 와 동일한 glob 패턴과 플래그가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f69bc52354acddc10b52bb883098bf80939d32e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fmode&lt;/code&gt; is an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; open mode string, &lt;code&gt;ext_enc&lt;/code&gt; is the external encoding for the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;int_enc&lt;/code&gt; is the internal encoding.</source>
          <target state="translated">&lt;code&gt;fmode&lt;/code&gt; 는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 개방 모드 문자열이고 &lt;code&gt;ext_enc&lt;/code&gt; 는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 의 외부 인코딩 이고 &lt;code&gt;int_enc&lt;/code&gt; 는 내부 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="495b4b0cd95db55ba8c3be2f196213152c5e6736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; Loop</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프</target>
        </trans-unit>
        <trans-unit id="fecd2eec2b3c9527d421dafc100fd641f74c1947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forwardable.rb&lt;/code&gt; provides single-method delegation via the &lt;a href=&quot;forwardable#method-i-def_delegator&quot;&gt;&lt;code&gt;def_delegator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;forwardable#method-i-def_delegators&quot;&gt;&lt;code&gt;def_delegators&lt;/code&gt;&lt;/a&gt; methods. For full-class delegation via DelegateClass, see &lt;code&gt;delegate.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forwardable.rb&lt;/code&gt; 는 &lt;a href=&quot;forwardable#method-i-def_delegator&quot;&gt; &lt;code&gt;def_delegator&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;forwardable#method-i-def_delegators&quot;&gt; &lt;code&gt;def_delegators&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 단일 메소드 위임을 제공 합니다. DelegateClass를 통해 전체 수준의 위임을 참조 &lt;code&gt;delegate.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33550352b9805973f4bbee9521e6a5ad8950947f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fractional_digits&lt;/code&gt; specifies a number of digits to use for fractional seconds. Its default value is 0.</source>
          <target state="translated">&lt;code&gt;fractional_digits&lt;/code&gt; 는 소수 초에 사용할 자릿수를 지정합니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="bf40e06c4fe47cb50fae3954ffeee6a1491f5346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;freefunc&lt;/code&gt; must be an address pointing to a function or an instance of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Fiddle::Function&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;freefunc&lt;/code&gt; 는 &lt;a href=&quot;function&quot;&gt; &lt;code&gt;Fiddle::Function&lt;/code&gt; &lt;/a&gt; 의 함수 또는 인스턴스를 가리키는 주소 여야합니다.</target>
        </trans-unit>
        <trans-unit id="810ba61ced8e0edb0fc96e13f06132a7df494438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;freefunc&lt;/code&gt; will be called when the instance is garbage collected.</source>
          <target state="translated">&lt;code&gt;freefunc&lt;/code&gt; 인스턴스가 가비지 수집되면 freefunc 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3c9ec7a9bcdfa7933e9039232922c3400cbaf3a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_addr&lt;/code&gt; is a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; representing the source mail address.</source>
          <target state="translated">&lt;code&gt;from_addr&lt;/code&gt; 은 소스 메일 주소를 나타내는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="792acba78500f352f5f55ec618695defafd13b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;front&lt;/code&gt; is the front object for the server, that is, the object to which remote method calls on the server will be passed. If nil, then the server will not accept remote method calls.</source>
          <target state="translated">&lt;code&gt;front&lt;/code&gt; 는 서버의 전면 객체, 즉 서버에서 원격 메서드 호출이 전달 될 객체입니다. nil이면 서버는 원격 메소드 호출을 수락하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2157626835727e61da2c3c5dc0e6de2484903e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;front&lt;/code&gt; is the server's front object. This may be nil.</source>
          <target state="translated">&lt;code&gt;front&lt;/code&gt; 는 서버의 전면 객체입니다. 이것은 0 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d4d46180a74573fa857ab22f080e5a6b5eb572a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; relies on open-uri, so passing application user input would provide a command injection attack vector.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 은 open-uri에 의존하므로 애플리케이션 사용자 입력을 전달하면 명령 주입 공격 벡터가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="91f1d73d9b7709ca6c3e107e062d2b9373595b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;helo&lt;/code&gt; is the &lt;em&gt;HELO&lt;/em&gt;&lt;em&gt;domain&lt;/em&gt; provided by the client to the server (see overview comments); it defaults to 'localhost'.</source>
          <target state="translated">&lt;code&gt;helo&lt;/code&gt; 는 클라이언트가 서버에 제공 한 &lt;em&gt;HELO &lt;/em&gt;&lt;em&gt;도메인입니다&lt;/em&gt; (개요 설명 참조). 기본값은 'localhost'입니다.</target>
        </trans-unit>
        <trans-unit id="a9ade688e9981f7c3ffd2ed63ee4656f6e408560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;helo&lt;/code&gt; is the &lt;em&gt;HELO&lt;/em&gt;&lt;em&gt;domain&lt;/em&gt; that you'll dispatch mails from; see the discussion in the overview notes.</source>
          <target state="translated">&lt;code&gt;helo&lt;/code&gt; 는 메일을 발송할 &lt;em&gt;HELO &lt;/em&gt;&lt;em&gt;도메인&lt;/em&gt; 입니다. 개요 노트의 토론을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ae0d95de09e809eeb0fb78744a3a2fe9e0fe3e01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;href&lt;/code&gt; can either be a string, giving the URL for the HREF attribute, or it can be a hash of the element's attributes.</source>
          <target state="translated">&lt;code&gt;href&lt;/code&gt; 는 HREF 속성에 대한 URL을 제공하는 문자열이거나 요소 속성의 해시 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c754e706ee2c97681a09269a4bd9316562915f49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;href&lt;/code&gt; can either by a string, giving the base URL for the HREF attribute, or it can be a has of the element's attributes.</source>
          <target state="translated">&lt;code&gt;href&lt;/code&gt; 는 문자열을 기준으로 HREF 속성의 기본 URL을 제공하거나 요소 속성을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfd2497a6e202e6db16850df37677091befc4670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; must be placed after &lt;code&gt;r&lt;/code&gt;, the opposite is not allowed.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; &lt;code&gt;r&lt;/code&gt; 뒤에 배치해야하며 그 반대는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1dcef95828e3528cf264defe61d4591ee5ebac30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, and &lt;code&gt;x&lt;/code&gt; can also be applied on the subexpression level with the &lt;code&gt;(?&lt;/code&gt;&lt;em&gt;on&lt;/em&gt;&lt;code&gt;-&lt;/code&gt;&lt;em&gt;off&lt;/em&gt;&lt;code&gt;)&lt;/code&gt; construct, which enables options &lt;em&gt;on&lt;/em&gt;, and disables options &lt;em&gt;off&lt;/em&gt; for the expression enclosed by the parentheses:</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; , &lt;code&gt;m&lt;/code&gt; 및 &lt;code&gt;x&lt;/code&gt; 는 &lt;code&gt;(?&lt;/code&gt; &lt;em&gt;on &lt;/em&gt; &lt;code&gt;-&lt;/code&gt; &lt;em&gt;off &lt;/em&gt; &lt;code&gt;)&lt;/code&gt; 구성을 사용 하여 하위 표현식 레벨에 적용 할 수도 있습니다.이 옵션은 옵션을 &lt;em&gt;설정&lt;/em&gt; 하고 괄호로 묶은 표현식에 대해 옵션을 &lt;em&gt;해제&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="700e680afbc0a522bc9ac25e7d5e967ab834271c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ident&lt;/code&gt; is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; which identifies the calling program.</source>
          <target state="translated">&lt;code&gt;ident&lt;/code&gt; 는 호출 프로그램을 식별 하는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="35a89c30a389db7bc3bef6d169fda7298d137e9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; Expression</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 식 이면</target>
        </trans-unit>
        <trans-unit id="d4cbe718b8cc681164f9a8c67a376eec34923e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt; can also be used to modify an expression. When used as a modifier the left-hand side is the &amp;ldquo;then&amp;rdquo; expression and the right-hand side is the &amp;ldquo;test&amp;rdquo; expression:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;unless&lt;/code&gt; 을 사용하여 표현식을 수정할 수도 있습니다. 수정 자로 사용될 때 왼쪽은 &quot;then&quot;표현식이고 오른쪽은 &quot;test&quot;표현식입니다.</target>
        </trans-unit>
        <trans-unit id="efd1a04bfe5a8345a843f38868349fec147983f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt; can also be used to modify an expression. When used as a modifier the left-hand side is the &amp;ldquo;then&amp;rdquo; statement and the right-hand side is the &amp;ldquo;test&amp;rdquo; expression:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;unless&lt;/code&gt; 또한 표현을 수정하는 데 사용할 수 있습니다. 수정 자로 사용되는 경우 왼쪽은 &quot;then&quot;문이고 오른쪽은 &quot;test&quot;표현식입니다.</target>
        </trans-unit>
        <trans-unit id="6531b00313f478e0d57b881eaa3adef4aa725178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indent&lt;/code&gt; - noop argument. Present for compatibility.</source>
          <target state="translated">&lt;code&gt;indent&lt;/code&gt; -noop 인수. 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="4fb1f1094375f282bba957a15dbaaf2aac2c76f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; is a 0-based index.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 는 0부터 시작하는 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="8d754b90705671d5e8cd5aac07bd4707d78c76ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initheader&lt;/code&gt; are the default headers to use. &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; adds Accept-Encoding to enable compression of the response body unless Accept-Encoding or &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; are supplied in &lt;code&gt;initheader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initheader&lt;/code&gt; 는 사용할 기본 헤더입니다. &lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 는 Accept-Encoding 또는 &lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;initheader&lt;/code&gt; 에 제공 되지 않는 한 Accept-Encoding을 추가하여 응답 본문을 압축 할 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="d65e6ea07682f1f5d4a4b44eb6873b1ef458e70b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initheader&lt;/code&gt; must be a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; like { 'Accept' =&amp;gt; '&lt;strong&gt;/&lt;/strong&gt;', &amp;hellip; }, and it defaults to an empty hash. If &lt;code&gt;initheader&lt;/code&gt; doesn't have the key 'accept-encoding', then a value of &amp;ldquo;gzip;q=1.0,deflate;q=0.6,identity;q=0.3&amp;rdquo; is used, so that gzip compression is used in preference to deflate compression, which is used in preference to no compression. Ruby doesn't have libraries to support the compress (Lempel-Ziv) compression, so that is not supported. The intent of this is to reduce bandwidth by default. If this routine sets up compression, then it does the decompression also, removing the header as well to prevent confusion. Otherwise it leaves the body as it found it.</source>
          <target state="translated">&lt;code&gt;initheader&lt;/code&gt; 는 { 'Accept'=&amp;gt; ' &lt;strong&gt;/&lt;/strong&gt; ',&amp;hellip;} 와 같은 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 여야하며 기본값은 빈 해시입니다. &lt;code&gt;initheader&lt;/code&gt; 에 'accept-encoding'키가없는 경우 &quot;gzip; q = 1.0, deflate; q = 0.6, identity; q = 0.3&quot;값이 사용되므로 gzip 압축이 기본적으로 수축됩니다. 압축은 압축이없는 것보다 우선적으로 사용됩니다. Ruby에는 압축 (Lempel-Ziv) 압축을 지원하는 라이브러리가 없으므로 지원되지 않습니다. 이를 위해 기본적으로 대역폭을 줄입니다. 이 루틴이 압축을 설정하면 압축 해제도 수행하여 혼란을 방지하기 위해 헤더를 제거합니다. 그렇지 않으면 발견 된대로 몸을 떠납니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ec4b2b3a68597e4830a463fd46c1cf35464379c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inspect&lt;/code&gt; also provides, when possible, method argument names (call sequence) and source location.</source>
          <target state="translated">&lt;code&gt;inspect&lt;/code&gt; 는 가능한 경우 메서드 인수 이름 (호출 시퀀스)과 소스 위치도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ce1f5b692c41a4d74565d823c87c1945a1902435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; should not have its value changed while it is in use as a key (an &lt;code&gt;unfrozen String&lt;/code&gt; passed as a key will be duplicated and frozen).</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 사용하는 동안 키 의 값을 변경하면 안됩니다 (키로 전달 된 &lt;code&gt;unfrozen String&lt;/code&gt; 은 복제되어 고정됩니다).</target>
        </trans-unit>
        <trans-unit id="76fe3acff67ac6bffad0a915ecd0b018f89d6718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lambda&lt;/code&gt;, &lt;code&gt;proc&lt;/code&gt; and &lt;a href=&quot;proc#method-c-new&quot;&gt;&lt;code&gt;Proc.new&lt;/code&gt;&lt;/a&gt; preserve the tricks of a &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object given by &lt;code&gt;&amp;amp;&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;lambda&lt;/code&gt; , &lt;code&gt;proc&lt;/code&gt; 및 &lt;a href=&quot;proc#method-c-new&quot;&gt; &lt;code&gt;Proc.new&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;&amp;amp;&lt;/code&gt; 인수로 주어진 &lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 객체 의 트릭을 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="0f3a915d37607972e0aef2a3925850163cb7eb1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; is an integer, usually one of the SOL_ constants such as Socket::SOL_SOCKET, or a protocol level. A string or symbol of the name, possibly without prefix, is also accepted.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; 은 일반적으로 Socket :: SOL_SOCKET과 같은 SOL_ 상수 또는 프로토콜 수준 중 하나 인 정수입니다. 접두사가없는 이름의 문자열 또는 기호도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4f89e417ec1ebaafcfce6a77c43ba22d656e1b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_address&lt;/code&gt; is an &lt;a href=&quot;../addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;local_address&lt;/code&gt; 는 &lt;a href=&quot;../addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="69b2e7a2e5389738093fc778f43d6598e4412b19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_sockaddr&lt;/code&gt; - the &lt;code&gt;struct&lt;/code&gt; sockaddr contained in a string or an &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="translated">&lt;code&gt;local_sockaddr&lt;/code&gt; - &lt;code&gt;struct&lt;/code&gt; SOCKADDR는 문자열 또는에 포함 &lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 객체</target>
        </trans-unit>
        <trans-unit id="1d2dc269bb3fd796b5c6c6ae87d2e69620b2ad55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxlen&lt;/code&gt; - the maximum number of bytes to receive from the socket</source>
          <target state="translated">&lt;code&gt;maxlen&lt;/code&gt; - 소켓으로부터받는 최대 바이트 수</target>
        </trans-unit>
        <trans-unit id="a5d514e2bee9cf9c2eb806062a730918b5f0d324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxlen&lt;/code&gt; - the number of bytes to receive from the socket</source>
          <target state="translated">&lt;code&gt;maxlen&lt;/code&gt; - 소켓으로부터받는 바이트 수</target>
        </trans-unit>
        <trans-unit id="c5ec79ec9d0b7bac69f1c90aa1753d9def17003d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxwidth&lt;/code&gt; - Argument position expected to be here for compatibility.</source>
          <target state="translated">&lt;code&gt;maxwidth&lt;/code&gt; - 호환성을 위해 인수 위치가 여기에있을 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="35c2c7a3babdbe9fee54f49a8602fe6a4c7f5478" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxwidth&lt;/code&gt; specifies maximum line length. If it is not specified, 79 is assumed. However actual outputs may overflow &lt;code&gt;maxwidth&lt;/code&gt; if long non-breakable texts are provided.</source>
          <target state="translated">&lt;code&gt;maxwidth&lt;/code&gt; 는 최대 줄 길이를 지정합니다. 지정하지 않으면 79로 가정합니다. 그러나 &lt;code&gt;maxwidth&lt;/code&gt; 않는 긴 텍스트를 제공하면 실제 출력이 최대 너비를 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4b88616b4cae4a3d14e34368fd77cdd6d3cc9cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxwidth&lt;/code&gt;, &lt;code&gt;newline&lt;/code&gt; and &lt;code&gt;genspace&lt;/code&gt; are ignored.</source>
          <target state="translated">&lt;code&gt;maxwidth&lt;/code&gt; , &lt;code&gt;newline&lt;/code&gt; 및 &lt;code&gt;genspace&lt;/code&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b059cb99d5a05d64302dfab5ca494d99f1e8cc07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt; should be either &amp;ldquo;get&amp;rdquo; or &amp;ldquo;post&amp;rdquo;, and defaults to the latter. &lt;code&gt;action&lt;/code&gt; defaults to the current &lt;a href=&quot;../cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; script name. &lt;code&gt;enctype&lt;/code&gt; defaults to &amp;ldquo;application/x-www-form-urlencoded&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; 는 &quot;get&quot;또는 &quot;post&quot;여야하며 기본값은 후자입니다. &lt;code&gt;action&lt;/code&gt; 은 현재 &lt;a href=&quot;../cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 스크립트 이름으로 기본 설정됩니다 . &lt;code&gt;enctype&lt;/code&gt; 의 기본값은&amp;ldquo;application / x-www-form-urlencoded&amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="170b918dfd9cd7a8a2a383a3c254fddd10363999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;perm&lt;/code&gt; are the same as &lt;a href=&quot;../kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 및 &lt;code&gt;perm&lt;/code&gt; 은 &lt;a href=&quot;../kernel#method-i-open&quot;&gt; &lt;code&gt;Kernel#open&lt;/code&gt; &lt;/a&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="6a13d8d96b5bd655e440c7d9eb2658b4971c7c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; is the symbolic and absolute mode can be used.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 는 기호이며 절대 모드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c5feb6a4bf76103ca6d707d2e9040d59ef6d1b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n[...j]&lt;/code&gt; is zero if &lt;code&gt;n &amp;amp; ((1 &amp;lt;&amp;lt; j) - 1)&lt;/code&gt; is zero. Otherwise, raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;n[...j]&lt;/code&gt; &lt;code&gt;n &amp;amp; ((1 &amp;lt;&amp;lt; j) - 1)&lt;/code&gt; 이 0 이면 n [... j] 는 0입니다. 그렇지 않으면 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
