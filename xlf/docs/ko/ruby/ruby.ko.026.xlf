<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="3b87ddaf5cf062291fe6dec9d7a8444c28bd69c1" translate="yes" xml:space="preserve">
          <source>The events can be a bit mask of &lt;code&gt;IO::READABLE&lt;/code&gt;, &lt;code&gt;IO::WRITABLE&lt;/code&gt; or &lt;code&gt;IO::PRIORITY&lt;/code&gt;.</source>
          <target state="translated">이벤트는 &lt;code&gt;IO::READABLE&lt;/code&gt; , &lt;code&gt;IO::WRITABLE&lt;/code&gt; 또는 &lt;code&gt;IO::PRIORITY&lt;/code&gt; 의 비트 마스크 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e54472914e122220862dbfcd74566e682fd30ea9" translate="yes" xml:space="preserve">
          <source>The exact library used depends on how Ruby was compiled. It could be any of the following:</source>
          <target state="translated">사용 된 정확한 라이브러리는 Ruby가 컴파일 된 방법에 따라 다릅니다. 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="911d398dc4bad3dfa35c914be5c4982e19fa1b50" translate="yes" xml:space="preserve">
          <source>The example above is very verbose. You can shorten the code by using some utility methods. First, the block form of &lt;a href=&quot;pop3#method-c-start&quot;&gt;&lt;code&gt;Net::POP3.start&lt;/code&gt;&lt;/a&gt; can be used instead of &lt;a href=&quot;pop3#method-c-new&quot;&gt;&lt;code&gt;POP3.new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pop3#method-i-start&quot;&gt;&lt;code&gt;POP3#start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pop3#method-i-finish&quot;&gt;&lt;code&gt;POP3#finish&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위의 예는 매우 장황합니다. 일부 유틸리티 메소드를 사용하여 코드를 줄일 수 있습니다. 먼저 &lt;a href=&quot;pop3#method-c-new&quot;&gt; &lt;code&gt;POP3.new&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pop3#method-i-start&quot;&gt; &lt;code&gt;POP3#start&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pop3#method-i-finish&quot;&gt; &lt;code&gt;POP3#finish&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;pop3#method-c-start&quot;&gt; &lt;code&gt;Net::POP3.start&lt;/code&gt; &lt;/a&gt; 의 블록 형식을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="228908d34b0aa1ef11ecd9863d5c468af74d5b69" translate="yes" xml:space="preserve">
          <source>The examples here assume the prior execution of:</source>
          <target state="translated">여기의 예는 다음의 사전 실행을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="9a51648c976c02f62dd0f5376f37f7e8e7fdb8f0" translate="yes" xml:space="preserve">
          <source>The examples in this section use method &lt;code&gt;Array#replace&lt;/code&gt;, which accepts an Array-convertible argument.</source>
          <target state="translated">이 섹션의 예제에서는 Array-convertible 인수를 허용하는 Array &lt;code&gt;Array#replace&lt;/code&gt; 메서드를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="e95e7099230bc3eb13abe50b5b836497c1426314" translate="yes" xml:space="preserve">
          <source>The examples in this section use method &lt;code&gt;Array.new&lt;/code&gt;, which accepts an Integer-convertible argument.</source>
          <target state="translated">이 섹션의 예제에서는 Integer 변환 가능한 인수를 허용하는 &lt;code&gt;Array.new&lt;/code&gt; 메서드를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="51dead89c605b52410a7a2a24142b042e9524ae2" translate="yes" xml:space="preserve">
          <source>The examples in this section use method &lt;code&gt;Hash#merge&lt;/code&gt;, which accepts a Hash-convertible argument.</source>
          <target state="translated">이 섹션의 예제에서는 Hash 변환 가능한 인수를 허용하는 Hash &lt;code&gt;Hash#merge&lt;/code&gt; 메서드를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="38c9e1bf32144e9832ca45e17e92392de54cd3b2" translate="yes" xml:space="preserve">
          <source>The examples in this section use method &lt;code&gt;String::new&lt;/code&gt;, which accepts a String-convertible argument.</source>
          <target state="translated">이 섹션의 예제에서는 String-convertible 인수를 허용하는 String &lt;code&gt;String::new&lt;/code&gt; 메서드를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="35224fc1b51799570d027e3e200d109df75791ea" translate="yes" xml:space="preserve">
          <source>The exception class which will be raised when pushing into a closed &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;queue#method-i-close&quot;&gt;&lt;code&gt;Queue#close&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sizedqueue#method-i-close&quot;&gt;&lt;code&gt;SizedQueue#close&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">닫힌 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 푸시 할 때 발생하는 예외 클래스입니다 . &lt;a href=&quot;queue#method-i-close&quot;&gt; &lt;code&gt;Queue#close&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sizedqueue#method-i-close&quot;&gt; &lt;code&gt;SizedQueue#close&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72199b578ff0c66347a31e54b9f999651d4a9dfa" translate="yes" xml:space="preserve">
          <source>The exception information message set by 'raise'.</source>
          <target state="translated">'raise'에 의해 설정된 예외 정보 메시지.</target>
        </trans-unit>
        <trans-unit id="92d29fe7583517e1cd85087672f0d45b39fbd161" translate="yes" xml:space="preserve">
          <source>The exception is matched to the rescue section starting at the top, and matches only once. If an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised in the begin section, it will not be handled in the &lt;a href=&quot;../standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">예외는 상단에서 시작하는 구조 섹션과 일치하며 한 번만 일치합니다. 는 IF &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 지정된 시작 부분에서 발생, 그것은에서 처리되지 않습니다 &lt;a href=&quot;../standarderror&quot;&gt; &lt;code&gt;StandardError&lt;/code&gt; 의&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cb98a30a2d7e15fe2fb43b0e14c05e9dd5c4f25c" translate="yes" xml:space="preserve">
          <source>The exception thrown to terminate the given block cannot be rescued inside the block unless &lt;code&gt;klass&lt;/code&gt; is given explicitly.</source>
          <target state="translated">&lt;code&gt;klass&lt;/code&gt; 가 명시 적으로 제공 되지 않으면 주어진 블록을 종료하기 위해 발생한 예외를 블록 내부에서 구할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="74ae540c30c2fd18545e3ecd183dc38a2f97b87b" translate="yes" xml:space="preserve">
          <source>The exception thrown to terminate the given block cannot be rescued inside the block unless &lt;code&gt;klass&lt;/code&gt; is given explicitly. However, the block can use ensure to prevent the handling of the exception. For that reason, this method cannot be relied on to enforce timeouts for untrusted blocks.</source>
          <target state="translated">주어진 블록을 종료하기 위해 던져진 예외 는 &lt;code&gt;klass&lt;/code&gt; 가 명시 적으로 주어 지지 않는 한 블록 내에서 구조 될 수 없습니다 . 그러나 블록은 예외 처리를 방지하기 위해 ensure를 사용할 수 있습니다. 이러한 이유로이 방법은 신뢰할 수없는 블록에 대한 시간 제한을 적용하는 데 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="955b0a78fc6dd54cd2b79ec12c40985c83f45c3b" translate="yes" xml:space="preserve">
          <source>The exclusive access mode (&amp;ldquo;x&amp;rdquo;) can be used together with &amp;ldquo;w&amp;rdquo; to ensure the file is created. &lt;code&gt;Errno::EEXIST&lt;/code&gt; is raised when it already exists. It may not be supported with all kinds of streams (e.g. pipes).</source>
          <target state="translated">단독 액세스 모드 ( &quot;x&quot;)를 &quot;w&quot;와 함께 사용하여 파일을 만들 수 있습니다. &lt;code&gt;Errno::EEXIST&lt;/code&gt; 는 이미 존재하면 발생합니다. 모든 종류의 스트림 (예 : 파이프)에서는 지원되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b07b8e3b1cf920ce39787ba7086b7588e3202418" translate="yes" xml:space="preserve">
          <source>The exclusive access mode (&amp;ldquo;x&amp;rdquo;) can be used together with &amp;ldquo;w&amp;rdquo; to ensure the file is created. Errno::EEXIST is raised when it already exists. It may not be supported with all kinds of streams (e.g. pipes).</source>
          <target state="translated">독점 액세스 모드 ( &quot;x&quot;)를 &quot;w&quot;와 함께 사용하여 파일이 생성되었는지 확인할 수 있습니다. Errno :: EEXIST는 이미 존재하는 경우 발생합니다. 모든 종류의 스트림 (예 : 파이프)에서는 지원되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9cc9e2256b05213b634c1bef0ef9a422f07fff7" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;table[header]&lt;/code&gt;, where &lt;code&gt;header&lt;/code&gt; is a String, returns column values (Array of Strings) if the column exists and if the access mode is &lt;code&gt;:col&lt;/code&gt; or &lt;code&gt;:col_or_row&lt;/code&gt;:</source>
          <target state="translated">식 &lt;code&gt;table[header]&lt;/code&gt; , &lt;code&gt;header&lt;/code&gt; 문자열되고, 열이 존재하는 경우 열 값 (문자열의 배열)를 반환하고, 접속 모드 인 경우 &lt;code&gt;:col&lt;/code&gt; 이나 &lt;code&gt;:col_or_row&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1a3327077de99c9819977b865d5b4ff429961e43" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;table[n]&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is a non-negative Integer, returns the +n+th row of the table, if that row exists, and if the access mode is &lt;code&gt;:row&lt;/code&gt; or &lt;code&gt;:col_or_row&lt;/code&gt;:</source>
          <target state="translated">발현 &lt;code&gt;table[n]&lt;/code&gt; , 여기서, &lt;code&gt;n&lt;/code&gt; , 음이 아닌 정수이며, 그 행이 존재하는 경우, 테이블의 + N + 행째를 반환하고, 상기 액세스 모드 인 경우 &lt;code&gt;:row&lt;/code&gt; 하거나 &lt;code&gt;:col_or_row&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ea0e658bcdf651f850120b1d23b3bd92aa864de8" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;table[range]&lt;/code&gt;, where &lt;code&gt;range&lt;/code&gt; is a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object, returns rows from the table, beginning at row &lt;code&gt;range.first&lt;/code&gt;, if those rows exist, and if the access mode is &lt;code&gt;:row&lt;/code&gt; or &lt;code&gt;:col_or_row&lt;/code&gt;:</source>
          <target state="translated">식 &lt;code&gt;table[range]&lt;/code&gt; , &lt;code&gt;range&lt;/code&gt; A는 &lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 목적은 행에서 시작하여, 테이블의 행을 반환 &lt;code&gt;range.first&lt;/code&gt; 행만이 존재하는 경우, 상기 접속 모드 인 경우 &lt;code&gt;:row&lt;/code&gt; 하거나 &lt;code&gt;:col_or_row&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="aa57c1b626146c8281affd96a299b4cadbab1d3c" translate="yes" xml:space="preserve">
          <source>The extension may be created from &lt;em&gt;der&lt;/em&gt; data or from an extension &lt;em&gt;oid&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;. The &lt;em&gt;oid&lt;/em&gt; may be either an OID or an extension name. If &lt;em&gt;critical&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; the extension is marked critical.</source>
          <target state="translated">확장을 만들 수있다 &lt;em&gt;데어&lt;/em&gt; 데이터 또는 확장에서 &lt;em&gt;OID&lt;/em&gt; 및 &lt;em&gt;값&lt;/em&gt; . &lt;em&gt;OID는&lt;/em&gt; OID를 또는 확장자 이름이 될 수 있습니다. 경우 &lt;em&gt;중요한이&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; 확장 중요한 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="df94a17d0216a7c6ddb5f2518f1578633aae5a5f" translate="yes" xml:space="preserve">
          <source>The facility argument is used to specify what type of program is logging the message.</source>
          <target state="translated">facility 인수는 메시지를 로깅하는 프로그램 유형을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1287c46893838d67ab0e07cd3b2fc2ea679f94a5" translate="yes" xml:space="preserve">
          <source>The fact that the last value is also put to outgoing port means that &lt;code&gt;take&lt;/code&gt; can be used as some analog of &lt;a href=&quot;thread#method-i-join&quot;&gt;&lt;code&gt;Thread#join&lt;/code&gt;&lt;/a&gt; (&amp;ldquo;just wait till ractor finishes&amp;rdquo;), but don't forget it will raise if somebody had already consumed everything ractor have produced.</source>
          <target state="translated">마지막 값이 나가는 포트에도 입력된다는 사실은 &lt;code&gt;take&lt;/code&gt; 를 &lt;a href=&quot;thread#method-i-join&quot;&gt; &lt;code&gt;Thread#join&lt;/code&gt; &lt;/a&gt; 의 일부 아날로그로 사용할 수 있다는 것을 의미합니다 ( &quot;레이터가 끝날 때까지 기다리십시오&quot;).하지만 누군가 이미 모든 레이터를 소비했다면이 값이 올라갈 것임을 잊지 마십시오. 생산했습니다.</target>
        </trans-unit>
        <trans-unit id="92f92e58280d7b560aa835809a01e1c123f32d3e" translate="yes" xml:space="preserve">
          <source>The false itself.</source>
          <target state="translated">거짓 자체.</target>
        </trans-unit>
        <trans-unit id="c8f849b505c52a4c30ff977ca14f13b7e6283ef6" translate="yes" xml:space="preserve">
          <source>The fiber which receives the transfer call is treats it much like a resume call. Arguments passed to transfer are treated like those passed to resume.</source>
          <target state="translated">호 전환 전화를받는 파이버는 재개 호처럼 처리합니다. 전달 된 인수는 재개하기 위해 전달 된 인수처럼 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="b2ceb9bc6a21dfb7d73708ba1b0f1fef45856a69" translate="yes" xml:space="preserve">
          <source>The field header, if any.</source>
          <target state="translated">필드 헤더 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="1bee5d440fe98063654d400b6134543e61b6bc0d" translate="yes" xml:space="preserve">
          <source>The field type characters are:</source>
          <target state="translated">필드 유형 문자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d0cabb0dec3924f84ac20c0ab88719a5fa4fc4b" translate="yes" xml:space="preserve">
          <source>The field width is an optional integer, followed optionally by a period and a precision. The width specifies the minimum number of characters that will be written to the result for this field.</source>
          <target state="translated">필드 너비는 선택적 정수이며, 선택적으로 마침표와 정밀도입니다. 너비는이 필드의 결과에 기록 될 최소 문자 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="faf24efdc523d12ab59303a13b046afcf135824b" translate="yes" xml:space="preserve">
          <source>The file &lt;a href=&quot;cgi/session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; provides session management functionality; see that class for more details.</source>
          <target state="translated">&lt;a href=&quot;cgi/session&quot;&gt; &lt;code&gt;CGI::Session&lt;/code&gt; &lt;/a&gt; 파일 은 세션 관리 기능을 제공합니다. 자세한 내용은 해당 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3d0a6e7a170738386439792ce47ebe5dbf0fc73d" translate="yes" xml:space="preserve">
          <source>The file can contain several CA certificates.</source>
          <target state="translated">파일에는 여러 CA 인증서가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05cd16ac3fa98662444f1eaa098e46d8d6e92977" translate="yes" xml:space="preserve">
          <source>The file descriptor for the socket.</source>
          <target state="translated">소켓에 대한 파일 설명자입니다.</target>
        </trans-unit>
        <trans-unit id="6a541343df3021bee76251f08876e60c134a8a41" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file is invalid.</source>
          <target state="translated">현재 파일의 파일 디스크립터가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea45bab6fbadc9b33ac8274bfb89c630f120be45" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file refers to a FIFO or pipe. (Linux raises &lt;code&gt;Errno::EINVAL&lt;/code&gt; in this case).</source>
          <target state="translated">현재 파일의 파일 디스크립터는 FIFO 또는 파이프를 나타냅니다. ( 이 경우 Linux는 &lt;code&gt;Errno::EINVAL&lt;/code&gt; 을 발생시킵니다).</target>
        </trans-unit>
        <trans-unit id="a9543905f6ee8e99166f4c7f21e15936b85a28bf" translate="yes" xml:space="preserve">
          <source>The file descriptor of the current file refers to a FIFO or pipe. (Linux raises Errno::EINVAL in this case).</source>
          <target state="translated">현재 파일의 파일 설명자는 FIFO 또는 파이프를 참조합니다. (이 경우 Linux는 Errno :: EINVAL을 발생시킵니다).</target>
        </trans-unit>
        <trans-unit id="b222f402a17e16ae0f187d040de19b4a4448ed14" translate="yes" xml:space="preserve">
          <source>The file name of the input.</source>
          <target state="translated">입력 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="973e938d148820965aa55987b1cdee5059db5a96" translate="yes" xml:space="preserve">
          <source>The file object of the script, pointing just after &lt;code&gt;__END__&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__END__&lt;/code&gt; 바로 뒤를 가리키는 스크립트의 파일 객체 .</target>
        </trans-unit>
        <trans-unit id="f7a8c67411d2deec52cc2870c835955cd0b1af51" translate="yes" xml:space="preserve">
          <source>The file object of the script, pointing just after __END__.</source>
          <target state="translated">__END__ 바로 다음을 가리키는 스크립트의 파일 객체입니다.</target>
        </trans-unit>
        <trans-unit id="8c264f1173ab5a719baa76a54aa4ce72af93a876" translate="yes" xml:space="preserve">
          <source>The first byte has the following special values:</source>
          <target state="translated">첫 번째 바이트에는 다음과 같은 특수 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e59da9a691237ca54aa4b33261e45bb84199d8d1" translate="yes" xml:space="preserve">
          <source>The first call to &lt;code&gt;instance&lt;/code&gt; creates and caches a CSV object:</source>
          <target state="translated">&lt;code&gt;instance&lt;/code&gt; 대한 첫 번째 호출 은 CSV 개체를 만들고 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="8532c56dc8fd8a41cd0e6430ec7538ed40a18f8c" translate="yes" xml:space="preserve">
          <source>The first character to be incremented is the rightmost alphanumeric: or, if no alphanumerics, the rightmost character:</source>
          <target state="translated">증가 할 첫 번째 문자는 맨 오른쪽의 영숫자입니다. 또는 영숫자가없는 경우 맨 오른쪽의 문자입니다.</target>
        </trans-unit>
        <trans-unit id="ed602da95001f4afe8ee72a23bcfb244c0a1bb76" translate="yes" xml:space="preserve">
          <source>The first element is a multicast address and the second is an inbound interface address. The third is an inbound interface index.</source>
          <target state="translated">첫 번째 요소는 멀티 캐스트 주소이고 두 번째 요소는 인바운드 인터페이스 주소입니다. 세 번째는 인바운드 인터페이스 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="7fce24f0bc3c112f0c870498f3780dcd73f6a101" translate="yes" xml:space="preserve">
          <source>The first form calculates &lt;code&gt;bn1 * point + bn2 * G&lt;/code&gt;, where &lt;code&gt;G&lt;/code&gt; is the generator of the group of &lt;em&gt;point&lt;/em&gt;. &lt;em&gt;bn2&lt;/em&gt; may be omitted, and in that case, the result is just &lt;code&gt;bn1 * point&lt;/code&gt;.</source>
          <target state="translated">첫 번째 양식은 &lt;code&gt;bn1 * point + bn2 * G&lt;/code&gt; 계산합니다 . 여기서 &lt;code&gt;G&lt;/code&gt; 는 &lt;em&gt;점&lt;/em&gt; 그룹의 생성기입니다 . &lt;em&gt;bn2&lt;/em&gt; 는 생략 될 수 있으며,이 경우 결과는 &lt;code&gt;bn1 * point&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bef04668e054cb27329677b3d2603c9607aeb76b" translate="yes" xml:space="preserve">
          <source>The first form is equivalent to &lt;a href=&quot;module#method-i-attr_reader&quot;&gt;&lt;code&gt;attr_reader&lt;/code&gt;&lt;/a&gt;. The second form is equivalent to &lt;code&gt;attr_accessor(name)&lt;/code&gt; but deprecated. The last form is equivalent to &lt;code&gt;attr_reader(name)&lt;/code&gt; but deprecated.</source>
          <target state="translated">첫 번째 형식은 &lt;a href=&quot;module#method-i-attr_reader&quot;&gt; &lt;code&gt;attr_reader&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 두 번째 형식은 &lt;code&gt;attr_accessor(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다. 마지막 형식은 &lt;code&gt;attr_reader(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d0f69743646b883b6da09ea63836e171d6f8406" translate="yes" xml:space="preserve">
          <source>The first form is equivalent to &lt;a href=&quot;module#method-i-attr_reader&quot;&gt;&lt;code&gt;attr_reader&lt;/code&gt;&lt;/a&gt;. The second form is equivalent to &lt;code&gt;attr_accessor(name)&lt;/code&gt; but deprecated. The last form is equivalent to &lt;code&gt;attr_reader(name)&lt;/code&gt; but deprecated. Returns an array of defined method names as symbols.</source>
          <target state="translated">첫 번째 형식은 &lt;a href=&quot;module#method-i-attr_reader&quot;&gt; &lt;code&gt;attr_reader&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 두 번째 형식은 &lt;code&gt;attr_accessor(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다. 마지막 형식은 &lt;code&gt;attr_reader(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다. 정의 된 메서드 이름의 배열을 기호로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4e0bdaa0adad0cfc4a502cad439ee9f784f0bb92" translate="yes" xml:space="preserve">
          <source>The first form is equivalent to &lt;code&gt;attr_reader&lt;/code&gt;. The second form is equivalent to &lt;code&gt;attr_accessor(name)&lt;/code&gt; but deprecated. The last form is equivalent to &lt;code&gt;attr_reader(name)&lt;/code&gt; but deprecated.</source>
          <target state="translated">첫 번째 형식은 &lt;code&gt;attr_reader&lt;/code&gt; 와 같습니다 . 두 번째 형식은 &lt;code&gt;attr_accessor(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다. 마지막 형식은 &lt;code&gt;attr_reader(name)&lt;/code&gt; 와 동일 하지만 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="287b710cb619f5747a68f3fd3567c2f6f4b3e6de" translate="yes" xml:space="preserve">
          <source>The first form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded to encoding &lt;code&gt;encoding&lt;/code&gt;. The second form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded from src_encoding to dst_encoding. The last form returns a copy of &lt;code&gt;str&lt;/code&gt; transcoded to &lt;code&gt;Encoding.default_internal&lt;/code&gt;.</source>
          <target state="translated">첫 번째 형식은 인코딩 &lt;code&gt;encoding&lt;/code&gt; 트랜스 코딩 된 &lt;code&gt;str&lt;/code&gt; 의 복사본을 반환합니다 . 두 번째 형식은 src_encoding에서 dst_encoding으로 트랜스 코딩 된 &lt;code&gt;str&lt;/code&gt; 의 복사본을 반환합니다 . 마지막 형식은 &lt;code&gt;Encoding.default_internal&lt;/code&gt; 로 트랜스 코딩 된 &lt;code&gt;str&lt;/code&gt; 사본을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b6f03b444eafef2dd35ae106761f74d8ee243792" translate="yes" xml:space="preserve">
          <source>The first form returns the &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object generated by the last successful pattern match. Equivalent to reading the special global variable &lt;code&gt;$~&lt;/code&gt; (see Special global variables in &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">첫 번째 형식은 마지막으로 성공한 패턴 일치로 생성 된 &lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; &lt;/a&gt; 개체를 반환합니다 . 특수 전역 변수 &lt;code&gt;$~&lt;/code&gt; 를 읽는 것과 같습니다 ( 자세한 내용 은 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; 의&lt;/a&gt; 특수 전역 변수 참조).</target>
        </trans-unit>
        <trans-unit id="56647e4884170a0eec2e5db002376ab493e58034" translate="yes" xml:space="preserve">
          <source>The first form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from str.encoding to &lt;code&gt;encoding&lt;/code&gt;. The second form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from src_encoding to dst_encoding. The &lt;code&gt;options&lt;/code&gt; keyword arguments give details for conversion. See &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;String#encode&lt;/code&gt;&lt;/a&gt; for details. Returns the string even if no changes were made.</source>
          <target state="translated">첫 번째 형식은 &lt;em&gt;str&lt;/em&gt; 의 내용을 str.encoding에서 &lt;code&gt;encoding&lt;/code&gt; 으로 트랜스 코딩합니다 . 두 번째 형식은 &lt;em&gt;str&lt;/em&gt; 의 내용을 src_encoding에서 dst_encoding으로 트랜스 코딩합니다 . &lt;code&gt;options&lt;/code&gt; 키워드 인자는 변환에 대한 세부 사항을 제공합니다. 자세한 내용은 &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;String#encode&lt;/code&gt; &lt;/a&gt; 를 참조하십시오. 변경 사항이없는 경우에도 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a151eaddbec51935fe4272fd6afa695860b7276" translate="yes" xml:space="preserve">
          <source>The first form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from str.encoding to &lt;code&gt;encoding&lt;/code&gt;. The second form transcodes the contents of &lt;em&gt;str&lt;/em&gt; from src_encoding to dst_encoding. The options &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; gives details for conversion. See &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;String#encode&lt;/code&gt;&lt;/a&gt; for details. Returns the string even if no changes were made.</source>
          <target state="translated">첫 번째 형식은 &lt;em&gt;str&lt;/em&gt; 의 내용을 str.encoding에서 &lt;code&gt;encoding&lt;/code&gt; 으로 트랜스 코딩합니다 . 두 번째 형식은 &lt;em&gt;str&lt;/em&gt; 의 내용을 src_encoding에서 dst_encoding으로 트랜스 코딩합니다 . &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 옵션 은 변환에 대한 세부 사항을 제공합니다. 자세한 내용은 &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;String#encode&lt;/code&gt; &lt;/a&gt; 를 참조하십시오. 변경 사항이 없어도 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="71c091ee5798053ac7f58ee7e261fa11ffe9af5d" translate="yes" xml:space="preserve">
          <source>The first group of parentheses captures 'n' and the second 'ti'. The second group is referred to later with the backreference &lt;code&gt;\2&lt;/code&gt;:</source>
          <target state="translated">첫 번째 괄호 그룹은 'n'과 두 번째 'ti'를 캡처합니다. 두 번째 그룹은 나중에 역 참조 &lt;code&gt;\2&lt;/code&gt; 참조됩니다 .</target>
        </trans-unit>
        <trans-unit id="fcc157ce509f69520a31a4627088623f2941641d" translate="yes" xml:space="preserve">
          <source>The first group of parentheses is now made non-capturing with '?:', so it still matches 'n', but doesn't create the backreference. Thus, the backreference &lt;code&gt;\1&lt;/code&gt; now refers to 'ti'.</source>
          <target state="translated">첫 번째 괄호 그룹은 이제 '? :'로 캡처하지 않으므로 여전히 'n'과 일치하지만 역 참조를 만들지는 않습니다. 따라서 역 참조 &lt;code&gt;\1&lt;/code&gt; 이제 'ti'를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="cd5e9d8b4a834f4588da7909a19847d7fb7e686e" translate="yes" xml:space="preserve">
          <source>The first line of the human readable reply text</source>
          <target state="translated">사람이 읽을 수있는 답장 텍스트의 첫 번째 줄</target>
        </trans-unit>
        <trans-unit id="43d244406bab298362ac496f5ae5d6755bcd7521" translate="yes" xml:space="preserve">
          <source>The first option name is considered to be the preferred (canonical) name. Other than that, the elements of each sub-array can be in any order.</source>
          <target state="translated">첫 번째 옵션 이름은 선호되는 (정식) 이름으로 간주됩니다. 그 외에도 각 하위 배열의 요소는 임의의 순서로있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc237a01ee04a5331de48fe4bde5a1463d56e9de" translate="yes" xml:space="preserve">
          <source>The first receiver is &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">첫 번째 수신자는 &lt;code&gt;self&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b4a118fda9eda8319dac4c4b334cf4231a2a5f79" translate="yes" xml:space="preserve">
          <source>The first three forms set the selected elements of &lt;code&gt;self&lt;/code&gt; (which may be the entire array) to &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">처음 세 형식은 선택한 &lt;code&gt;self&lt;/code&gt; 요소 (전체 배열 일 수 있음)를 &lt;code&gt;obj&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="072bc6a355bfe1a4645b537e5cf7b840882d2476" translate="yes" xml:space="preserve">
          <source>The first time it is called it opens the file and returns the first entry; each successive call returns the next entry, or &lt;code&gt;nil&lt;/code&gt; if the end of the file has been reached.</source>
          <target state="translated">처음 호출 될 때 파일을 열고 첫 번째 항목을 리턴합니다. 각 연속 호출은 다음 항목을 반환하거나 파일 끝에 도달하면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f4d286e05bafe286b8b26cee6a57b01374eaf87e" translate="yes" xml:space="preserve">
          <source>The first two bytes of the stream contain the major and minor version, each as a single byte encoding a digit. The version implemented in Ruby is 4.8 (stored as &amp;ldquo;x04x08&amp;rdquo;) and is supported by ruby 1.8.0 and newer.</source>
          <target state="translated">스트림의 처음 2 바이트에는 메이저 버전과 마이너 버전이 포함되며 각각은 숫자를 인코딩하는 단일 바이트입니다. Ruby로 구현 된 버전은 4.8 ( &quot;x04x08&quot;로 저장)이며 ruby ​​1.8.0 이상에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8dbbd0a0ef5e5569e7f851d3899fe0e1d77e3389" translate="yes" xml:space="preserve">
          <source>The first two forms are used to create a new &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; subclass &lt;code&gt;class_name&lt;/code&gt; that can contain a value for each &lt;code&gt;member_name&lt;/code&gt;. This subclass can be used to create instances of the structure like any other &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">처음 두 양식은 각 &lt;code&gt;member_name&lt;/code&gt; 의 값을 포함 할 수 있는 새 &lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 서브 클래스 &lt;code&gt;class_name&lt;/code&gt; 을 작성하는 데 사용됩니다 . 이 서브 클래스는 다른 &lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 구조의 인스턴스를 만드는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88d7f18a849c7920874ce3f2ce898509e19beded" translate="yes" xml:space="preserve">
          <source>The first value is the current number of significant digits in the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;. The second value is the maximum number of significant digits for the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">첫 번째 값은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 현재 유효 자릿수입니다 . 두 번째 값은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 최대 유효 자릿수입니다 .</target>
        </trans-unit>
        <trans-unit id="a89696d6d8f023ca086652d5e54d9269bb96558c" translate="yes" xml:space="preserve">
          <source>The first value represents the sign of the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, and is -1 or 1, or 0 if the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; is Not a Number.</source>
          <target state="translated">첫 번째 값은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 부호를 나타내며 -1 또는 1이거나 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 이 숫자가 아닌 경우 0 입니다.</target>
        </trans-unit>
        <trans-unit id="f207d25e3140e4cb366ab93f284b12fce5504d26" translate="yes" xml:space="preserve">
          <source>The first way is by using the class method &lt;a href=&quot;thread#method-c-stop&quot;&gt;&lt;code&gt;::stop&lt;/code&gt;&lt;/a&gt;, to put the current running thread to sleep and schedule the execution of another thread.</source>
          <target state="translated">첫 번째 방법은 클래스 메소드 &lt;a href=&quot;thread#method-c-stop&quot;&gt; &lt;code&gt;::stop&lt;/code&gt; &lt;/a&gt; 을 사용하여 현재 실행중인 스레드를 휴면 상태로 만들고 다른 스레드의 실행을 예약하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="491def4ba451f6481ff4dd5528cfc5dfaf0e7216" translate="yes" xml:space="preserve">
          <source>The fixnum type is used to represent both ruby Fixnum objects and the sizes of marshaled arrays, hashes, instance variables and other types. In the following sections &amp;ldquo;long&amp;rdquo; will mean the format described below, which supports full 32 bit precision.</source>
          <target state="translated">fixnum 유형은 루비 Fixnum 오브젝트와 마샬링 된 배열, 해시, 인스턴스 변수 및 기타 유형의 크기를 나타내는 데 사용됩니다. 다음 섹션에서 &quot;long&quot;은 아래에 설명 된 형식을 의미하며 전체 32 비트 정밀도를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="27afd3be9806910cf4dd160394eb17bffcf0bf6d" translate="yes" xml:space="preserve">
          <source>The flag is used for initial value of &lt;a href=&quot;basicsocket#method-c-do_not_reverse_lookup&quot;&gt;&lt;code&gt;do_not_reverse_lookup&lt;/code&gt;&lt;/a&gt; for each socket.</source>
          <target state="translated">플래그는 각 소켓에 대한 초기 값 &lt;a href=&quot;basicsocket#method-c-do_not_reverse_lookup&quot;&gt; &lt;code&gt;do_not_reverse_lookup&lt;/code&gt; &lt;/a&gt; 에 사용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="db32fed8f46fab1dcc4e60354783b9323ee2085d" translate="yes" xml:space="preserve">
          <source>The flag value can be either of:</source>
          <target state="translated">플래그 값은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="944607c5718cd118bb1cd25f452f563fd505d548" translate="yes" xml:space="preserve">
          <source>The flags modifies the behavior of the formats. The flag characters are:</source>
          <target state="translated">플래그는 형식의 동작을 수정합니다. 플래그 문자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b19230239a88c8a4cc8551efa3fc2a4495f6ff62" translate="yes" xml:space="preserve">
          <source>The flip-flop is a rarely seen conditional expression. It's primary use is for processing text from ruby one-line programs used with &lt;code&gt;ruby -n&lt;/code&gt; or &lt;code&gt;ruby -p&lt;/code&gt;.</source>
          <target state="translated">플립 플롭은 거의 보이지 않는 조건식입니다. &lt;code&gt;ruby -n&lt;/code&gt; 또는 &lt;code&gt;ruby -p&lt;/code&gt; 와 함께 사용되는 ruby ​​한 줄 프로그램의 텍스트를 처리하는 데 주로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9bf9bb78967de7f682cdfe83269eab421c646802" translate="yes" xml:space="preserve">
          <source>The flip-flop must be used inside a conditional such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;unless&lt;/code&gt;, &lt;code&gt;until&lt;/code&gt; etc. including the modifier forms.</source>
          <target state="translated">플립 플롭은 이러한 조건 내에서 사용되어야하므로, &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;unless&lt;/code&gt; , &lt;code&gt;until&lt;/code&gt; 등 개질제 형태 등.</target>
        </trans-unit>
        <trans-unit id="a12aadaf0a808408707cf62e33e729b40f01b535" translate="yes" xml:space="preserve">
          <source>The following are &lt;em&gt;metacharacters&lt;/em&gt;&lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;. They have a specific meaning when appearing in a pattern. To match them literally they must be backslash-escaped. To match a backslash literally, backslash-escape it: &lt;code&gt;\\&lt;/code&gt;.</source>
          <target state="translated">다음은 &lt;em&gt;메타 문자 &lt;/em&gt; &lt;code&gt;(&lt;/code&gt; , &lt;code&gt;)&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;]&lt;/code&gt; , &lt;code&gt;{&lt;/code&gt; , &lt;code&gt;}&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; . 패턴으로 나타날 때 특정 의미를 갖습니다. 문자 그대로 일치 시키려면 백 슬래시 이스케이프 처리해야합니다. 백 슬래시를 문자 그대로 일치 시키려면 백 슬래시를 이스케이프하십시오 : &lt;code&gt;\\&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b75f210490d236ca69d4039cf3c9fc3437e8c002" translate="yes" xml:space="preserve">
          <source>The following are examples of valid Ruby methods:</source>
          <target state="translated">다음은 유효한 Ruby 메소드의 예입니다.</target>
        </trans-unit>
        <trans-unit id="1158125c14e5678fbd8dbdd19e4c083611c5a54b" translate="yes" xml:space="preserve">
          <source>The following are the methods most likely to be useful to users:</source>
          <target state="translated">다음은 사용자에게 가장 유용한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="7dd4fee7f6b4e4f173c322317ed6e77f17b18e58" translate="yes" xml:space="preserve">
          <source>The following conversions are available.</source>
          <target state="translated">다음과 같은 변환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="1f5a045b724813c2b05245c7edb3728a2ca0766d" translate="yes" xml:space="preserve">
          <source>The following example code can be used as the basis of an &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; user-agent which can perform a variety of request types using persistent connections.</source>
          <target state="translated">다음 예제 코드는 지속적 연결을 사용하여 다양한 요청 유형을 수행 할 수 있는 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 사용자 에이전트 의 기초로 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="498d48967db49488df7cf0e00790ce91c80ebabd" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to mix the &lt;a href=&quot;tsort&quot;&gt;&lt;code&gt;TSort&lt;/code&gt;&lt;/a&gt; module into an existing class (in this case, &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;). Here, we're treating each key in the hash as a node in the graph, and so we simply alias the required &lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt;&lt;code&gt;tsort_each_node&lt;/code&gt;&lt;/a&gt; method to Hash's each_key method. For each key in the hash, the associated value is an array of the node's child nodes. This choice in turn leads to our implementation of the required &lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt;&lt;code&gt;tsort_each_child&lt;/code&gt;&lt;/a&gt; method, which fetches the array of child nodes and then iterates over that array using the user-supplied block.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;tsort&quot;&gt; &lt;code&gt;TSort&lt;/code&gt; &lt;/a&gt; 모듈을 기존 클래스 (이 경우 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; ) 로 혼합하는 방법을 보여줍니다 . 여기서는 해시의 각 키를 그래프의 노드로 취급하므로 필요한 &lt;a href=&quot;tsort#method-i-tsort_each_node&quot;&gt; &lt;code&gt;tsort_each_node&lt;/code&gt; &lt;/a&gt; 메소드의 별칭 을 Hash의 each_key 메소드로 별칭 지정하면 됩니다. 해시의 각 키에 대해 연관된 값은 노드의 하위 노드 배열입니다. 이 선택으로 인해 필요한 &lt;a href=&quot;tsort#method-i-tsort_each_child&quot;&gt; &lt;code&gt;tsort_each_child&lt;/code&gt; &lt;/a&gt; 메소드가 구현되어 하위 노드의 배열을 가져온 다음 사용자 제공 블록을 사용하여 해당 배열을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="af84116b697fd16d052110e9b0774c0829c86f17" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this nicely. A &lt;code&gt;Ticker&lt;/code&gt;, when run, continually receives the stock &lt;code&gt;Price&lt;/code&gt; for its &lt;code&gt;@symbol&lt;/code&gt;. A &lt;code&gt;Warner&lt;/code&gt; is a general observer of the price, and two warners are demonstrated, a &lt;code&gt;WarnLow&lt;/code&gt; and a &lt;code&gt;WarnHigh&lt;/code&gt;, which print a warning if the price is below or above their set limits, respectively.</source>
          <target state="translated">다음 예제는이를 잘 보여줍니다. &lt;code&gt;Ticker&lt;/code&gt; , 실행할 때, 지속적으로 주식 수신 &lt;code&gt;Price&lt;/code&gt; 자사에 대한 &lt;code&gt;@symbol&lt;/code&gt; . &lt;code&gt;Warner&lt;/code&gt; 가격의 일반 관찰자이며, 두 워너가 시연된다 &lt;code&gt;WarnLow&lt;/code&gt; 과 &lt;code&gt;WarnHigh&lt;/code&gt; 가격이 각각 자신의 설정 한도 이하 또는 이상이면 경고를 인쇄.</target>
        </trans-unit>
        <trans-unit id="53cb18b7ae651bfbce8f1182ff741a5928ad13a3" translate="yes" xml:space="preserve">
          <source>The following example illustrates the &lt;code&gt;limit&lt;/code&gt; parameter.</source>
          <target state="translated">다음 예제는 &lt;code&gt;limit&lt;/code&gt; 매개 변수 를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e1a46d7f2be556bfcd06013bca97898233f1ab5f" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of a lambda:</source>
          <target state="translated">다음 예제는 람다 사용을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0397ba42b9ba420d4c09beb219f5db51b252fb18" translate="yes" xml:space="preserve">
          <source>The following example is a complete Ruby program. You can run it and see the effect of specifying various options. This is probably the best way to learn the features of &lt;code&gt;optparse&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 완전한 Ruby 프로그램입니다. 이를 실행하고 다양한 옵션을 지정하는 효과를 볼 수 있습니다. 이것은 아마도 &lt;code&gt;optparse&lt;/code&gt; 의 기능을 배우는 가장 좋은 방법 일 것입니다 .</target>
        </trans-unit>
        <trans-unit id="6b1c2858fec7215198f421b921eaeb6ce5e5ef08" translate="yes" xml:space="preserve">
          <source>The following example performs a conditional GET using the If-Modified-Since header. If the files has not been modified since the time in the header a Not Modified response will be returned. See RFC 2616 section 9.3 for further details.</source>
          <target state="translated">다음 예제는 If-Modified-Since 헤더를 사용하여 조건부 GET을 수행합니다. 헤더에서 시간 이후로 파일이 수정되지 않은 경우 수정되지 않음 응답이 리턴됩니다. 자세한 내용은 RFC 2616 섹션 9.3을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="51b50785b8692f7fcd4ee9abae98095c987049a5" translate="yes" xml:space="preserve">
          <source>The following example raises the soft limit of core size to the hard limit to try to make core dump possible.</source>
          <target state="translated">다음 예는 코어 덤프의 가능을 시도하기 위해 코어 크기의 소프트 한계를 하드 한계로 올립니다.</target>
        </trans-unit>
        <trans-unit id="3e4d02536a9bbcb32067005cca9c458f0f7e8d1d" translate="yes" xml:space="preserve">
          <source>The following example shows that an exception is raised if the key is not found and a default value is not supplied.</source>
          <target state="translated">다음 예제는 키를 찾을 수없고 기본값이 제공되지 않은 경우 예외가 발생 함을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="43eb347591c7e55fd7d4b4b386e0582b514bf10a" translate="yes" xml:space="preserve">
          <source>The following exceptions are defined as subclasses of &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt;. These exceptions are raised when zlib library functions return with an error status.</source>
          <target state="translated">다음 예외는 &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Zlib::Error&lt;/code&gt; &lt;/a&gt; 서브 클래스로 정의됩니다 . 이러한 예외는 zlib 라이브러리 함수가 오류 상태와 함께 리턴 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9cc7eb726ec3a5d3307d840aa0563e35c2723422" translate="yes" xml:space="preserve">
          <source>The following key values have special meaning:</source>
          <target state="translated">다음 키 값은 특별한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="04b93b5f83cfee61d0625788215fe163ac38e7d6" translate="yes" xml:space="preserve">
          <source>The following keywords are used by Ruby.</source>
          <target state="translated">다음 키워드는 Ruby에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="67813a639d9340429fcef3b186fbc1106fac4486" translate="yes" xml:space="preserve">
          <source>The following members below are optional, and must be compiled with special flags:</source>
          <target state="translated">아래의 멤버는 선택 사항이며 특수 플래그로 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f266550f300cebe46b99c10a20f17c66c0dc85f" translate="yes" xml:space="preserve">
          <source>The following metacharacters also behave like character classes:</source>
          <target state="translated">다음 메타 문자는 문자 클래스처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="192f6108ba4ec83a93a3743b287e3f14327ebcee" translate="yes" xml:space="preserve">
          <source>The following methods in &lt;a href=&quot;gzipreader&quot;&gt;&lt;code&gt;Zlib::GzipReader&lt;/code&gt;&lt;/a&gt; are just like their counterparts in &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, but they raise &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;gzipfile/error&quot;&gt;&lt;code&gt;Zlib::GzipFile::Error&lt;/code&gt;&lt;/a&gt; exception if an error was found in the gzip file.</source>
          <target state="translated">&lt;a href=&quot;gzipreader&quot;&gt; &lt;code&gt;Zlib::GzipReader&lt;/code&gt; &lt;/a&gt; 의 다음 메소드는 &lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 의&lt;/a&gt; 해당 메소드와 동일 하지만 gzip 파일에서 오류가 발견되면 &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Zlib::Error&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;gzipfile/error&quot;&gt; &lt;code&gt;Zlib::GzipFile::Error&lt;/code&gt; &lt;/a&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="ebfb1017bf8725a9c3b289c852e2c56c7e060bbb" translate="yes" xml:space="preserve">
          <source>The following modes must be used separately, and along with one or more of the modes seen above.</source>
          <target state="translated">다음 모드는 별도로, 위에서 본 하나 이상의 모드와 함께 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5d8c997259696a4b9e9ef99aeefd41cae48bf327" translate="yes" xml:space="preserve">
          <source>The following options are also recognised, but only apply if the session id is stored in a cookie.</source>
          <target state="translated">다음 옵션도 인식되지만 세션 ID가 쿠키에 저장된 경우에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="641ebe00918d389f940d8e875a4e0516a0ee5d25" translate="yes" xml:space="preserve">
          <source>The following patterns match instantly as you would expect:</source>
          <target state="translated">다음 패턴은 예상대로 즉시 일치합니다.</target>
        </trans-unit>
        <trans-unit id="1049183f6db8f4c5be5babea92cbcbd5767ab9b6" translate="yes" xml:space="preserve">
          <source>The following program finds pythagorean triples:</source>
          <target state="translated">다음 프로그램은 피타고라스 트리플을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="5ab81ae8dd8c55f7de6921ebdad9ebc4e3547bcb" translate="yes" xml:space="preserve">
          <source>The following ruby code will reconstruct the Bignum value from an array of bytes:</source>
          <target state="translated">다음 루비 코드는 바이트 배열에서 Bignum 값을 재구성합니다.</target>
        </trans-unit>
        <trans-unit id="2936d5adb9e240b503a66e2c87b97599cd38ff58" translate="yes" xml:space="preserve">
          <source>The following values are supported:</source>
          <target state="translated">다음과 같은 값이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="cfaea439f1162a9e56215144275f0fcda0e1973f" translate="yes" xml:space="preserve">
          <source>The following will log to syslogd on your local machine:</source>
          <target state="translated">다음은 로컬 시스템의 syslogd에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="2938882319ed23b0d196b6ef4578dbee64a2fc2e" translate="yes" xml:space="preserve">
          <source>The form data to set, which should be an enumerable. See below for more details.</source>
          <target state="translated">설정할 양식 데이터로, 열거 가능해야합니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="277aae9ea9e4d1e1ab1a4e3bbca05748f329451a" translate="yes" xml:space="preserve">
          <source>The form of the flip-flop is an expression that indicates when the flip-flop turns on, &lt;code&gt;..&lt;/code&gt; (or &lt;code&gt;...&lt;/code&gt;), then an expression that indicates when the flip-flop will turn off. While the flip-flop is on it will continue to evaluate to &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; when off.</source>
          <target state="translated">플립 플롭의 형태는 플립 플롭이 켜질 때를 나타내는 식, &lt;code&gt;..&lt;/code&gt; (또는 &lt;code&gt;...&lt;/code&gt; ), 플립 플롭이 꺼지는시기를 나타내는 식이다. 플립 플롭은에 지속적으로 평가에 있지만 &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;false&lt;/code&gt; 때를.</target>
        </trans-unit>
        <trans-unit id="a59e06eb1f2391912d21bca1c2ab8e347e86ad6e" translate="yes" xml:space="preserve">
          <source>The format may contain &lt;strong&gt;conversion specifiers&lt;/strong&gt;, which tell scanf what form (type) each particular matched substring should be converted to (e.g., decimal integer, floating point number, literal string, etc.) The matches and conversions take place from left to right, and the conversions themselves are returned as an array.</source>
          <target state="translated">형식은 &lt;strong&gt;변환 지정자를&lt;/strong&gt; 포함 할 수 있으며 , 각 특정 일치하는 하위 문자열을 변환해야하는 형식 (유형) (예 : 10 진 정수, 부동 소수점 수, 리터럴 문자열 등)을 scanf에게 알려줍니다. 일치 및 변환은 왼쪽에서 오른쪽으로, 전환 자체는 배열로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9d9de655a28e3e9345895de7218363cfebaa10f2" translate="yes" xml:space="preserve">
          <source>The format string may also contain characters other than those in the conversion specifiers. Whitespace (blanks, tabs, or newlines) in the format string matches any amount of whitespace, including none, in the input. Everything else matches only itself.</source>
          <target state="translated">형식 문자열에는 변환 지정자 이외의 문자도 포함될 수 있습니다. 형식 문자열의 공백 (공백, 탭 또는 줄 바꿈)은 입력에서 공백을 포함하여 공백을 포함합니다. 다른 모든 것 자체 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="01ad28b61d010941d875968c4965283b3a074b1c" translate="yes" xml:space="preserve">
          <source>The fourth value is an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; exponent.</source>
          <target state="translated">네 번째 값은 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 지수입니다.</target>
        </trans-unit>
        <trans-unit id="b9b9e74d45d63b01f1970c90ec6ca01a65008da4" translate="yes" xml:space="preserve">
          <source>The front object of the DRbServer.</source>
          <target state="translated">DRbServer의 전면 오브젝트.</target>
        </trans-unit>
        <trans-unit id="b66c766703998c5ecd2d21515f5e807a607e4fb0" translate="yes" xml:space="preserve">
          <source>The full list of operating system errors on your particular platform are available as the constants of &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 플랫폼의 전체 운영 체제 오류 목록은 &lt;a href=&quot;errno&quot;&gt; &lt;code&gt;Errno&lt;/code&gt; &lt;/a&gt; 상수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d752311ceddde8aaa9bad09ecc2e661bd516fc57" translate="yes" xml:space="preserve">
          <source>The full list of operating system errors on your particular platform are available as the constants of &lt;code&gt;Errno&lt;/code&gt;.</source>
          <target state="translated">특정 플랫폼의 운영 체제 오류 전체 목록은 &lt;code&gt;Errno&lt;/code&gt; 상수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fbcc130a324c3c90e9fd960b9ebfc929d4a7a422" translate="yes" xml:space="preserve">
          <source>The full month name (&amp;ldquo;January&amp;rdquo;)</source>
          <target state="translated">월 이름 (&amp;ldquo;1 월&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="8cdef1391c4056e529eec7c62f50671cb70a0565" translate="yes" xml:space="preserve">
          <source>The full path where the plugin should cache the gem so that it can be installed latter.</source>
          <target state="translated">플러그인이 gem을 캐시하여 나중에 설치 될 수 있도록하는 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3f27b909c78ed98a4126c07544a1536e850fa542" translate="yes" xml:space="preserve">
          <source>The full ruby version string, like &lt;code&gt;ruby -v&lt;/code&gt; prints</source>
          <target state="translated">&lt;code&gt;ruby -v&lt;/code&gt; 프린트 와 같은 전체 루비 버전 문자열</target>
        </trans-unit>
        <trans-unit id="c84aa183d43ee74824c57ee6f0803b899c35e29b" translate="yes" xml:space="preserve">
          <source>The full weekday name (&amp;ldquo;Sunday&amp;rdquo;)</source>
          <target state="translated">전체 요일 이름 (&amp;ldquo;일요일&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="273464bb2108e38bfc4ec3dc3f36003bdaa03e9d" translate="yes" xml:space="preserve">
          <source>The function identified by &lt;em&gt;num&lt;/em&gt; is system dependent. On some Unix systems, the numbers may be obtained from a header file called &lt;code&gt;syscall.h&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;num&lt;/em&gt; 으로 식별되는 기능 은 시스템에 따라 다릅니다. 일부 유닉스 시스템에서는 &lt;code&gt;syscall.h&lt;/code&gt; 라는 헤더 파일에서 숫자를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0da5c87d957370efb21eab292da3cf40cd2553ab" translate="yes" xml:space="preserve">
          <source>The gateway needs to install this id conversion and create servers for each of the protocols or networks it will be a gateway between. It then needs to create a server that attaches to each of these networks. For example:</source>
          <target state="translated">게이트웨이는이 ID 변환을 설치하고 게이트웨이가 될 각 프로토콜 또는 네트워크에 대한 서버를 작성해야합니다. 그런 다음 각 네트워크에 연결되는 서버를 만들어야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eebf21ee00b3d88add51c1b25bf66c5667142613" translate="yes" xml:space="preserve">
          <source>The general structure of the method documentation should be:</source>
          <target state="translated">메소드 문서의 일반적인 구조는 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="9a2c95112b08c522fbbe399758bbbbec8aa15210" translate="yes" xml:space="preserve">
          <source>The generator (an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;) g of the Diffie-Hellman parameters.</source>
          <target state="translated">Diffie-Hellman 매개 변수 의 생성기 ( &lt;a href=&quot;../bn&quot;&gt; &lt;code&gt;OpenSSL::BN&lt;/code&gt; &lt;/a&gt; ) g.</target>
        </trans-unit>
        <trans-unit id="645923ef9d0b656ac58abcfb3fa02e75f3182623" translate="yes" xml:space="preserve">
          <source>The generator may be initialized with either a system-generated or user-supplied seed value by using &lt;a href=&quot;random#method-c-srand&quot;&gt;&lt;code&gt;Random.srand&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Generator는 &lt;a href=&quot;random#method-c-srand&quot;&gt; &lt;code&gt;Random.srand&lt;/code&gt; &lt;/a&gt; 를 사용하여 시스템 생성 또는 사용자 제공 시드 값으로 초기화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd9767f86fa02bc235219fb5f6d51552fd87cffc" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;hash&lt;/code&gt; has pairs like &lt;code&gt;ExceptionClass =&amp;gt; :TimingSymbol&lt;/code&gt;. Where the ExceptionClass is the interrupt handled by the given block. The TimingSymbol can be one of the following symbols:</source>
          <target state="translated">주어진 &lt;code&gt;hash&lt;/code&gt; 에는 &lt;code&gt;ExceptionClass =&amp;gt; :TimingSymbol&lt;/code&gt; 과 같은 쌍이 있습니다. 여기서 ExceptionClass는 주어진 블록에 의해 처리되는 인터럽트입니다. TimingSymbol은 다음 심볼 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6d2320e5c001ccacdff3ed274de18d7a8d57dea" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;indexes&lt;/code&gt; may be in any order, and may repeat:</source>
          <target state="translated">주어진 &lt;code&gt;indexes&lt;/code&gt; 는 임의의 순서 일 수 있으며 반복 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e7d8a8608e29e2fc030b2cfd3ebc5d39b2dc226" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;indexes&lt;/code&gt; may have a mixture of signs:</source>
          <target state="translated">지정된 &lt;code&gt;indexes&lt;/code&gt; 에는 다음과 같은 기호가 혼합되어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b035634172efef20a3cb991d9506826c8a2e387" translate="yes" xml:space="preserve">
          <source>The given hashes are merged left to right.</source>
          <target state="translated">주어진 해시는 왼쪽에서 오른쪽으로 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="20db563415d7c2b7bb6d03b3dfdfb9b0b286ab1c" translate="yes" xml:space="preserve">
          <source>The global constant &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; (also accessible as &lt;code&gt;$&amp;lt;&lt;/code&gt;) provides an IO-like stream which allows access to all files mentioned on the command line (or STDIN if no files are mentioned). &lt;a href=&quot;argf#method-i-path&quot;&gt;&lt;code&gt;ARGF#path&lt;/code&gt;&lt;/a&gt; and its alias &lt;a href=&quot;argf#method-i-filename&quot;&gt;&lt;code&gt;ARGF#filename&lt;/code&gt;&lt;/a&gt; are provided to access the name of the file currently being read.</source>
          <target state="translated">전역 상수 &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;$&amp;lt;&lt;/code&gt; 로도 액세스 가능 )는 명령 행에서 언급 된 모든 파일 (또는 파일이 언급되지 않은 경우 STDIN)에 액세스 할 수있는 IO 유사 스트림을 제공합니다. &lt;a href=&quot;argf#method-i-path&quot;&gt; &lt;code&gt;ARGF#path&lt;/code&gt; &lt;/a&gt; 및 해당 별명 &lt;a href=&quot;argf#method-i-filename&quot;&gt; &lt;code&gt;ARGF#filename&lt;/code&gt; &lt;/a&gt; 은 현재 읽고있는 파일의 이름에 액세스하기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7ebc251e55333f4d3e90975725cfb712ee4eb1b3" translate="yes" xml:space="preserve">
          <source>The global default options for the &lt;a href=&quot;json#method-i-dump&quot;&gt;&lt;code&gt;JSON.dump&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;json#method-i-dump&quot;&gt; &lt;code&gt;JSON.dump&lt;/code&gt; &lt;/a&gt; 메소드 의 글로벌 기본 옵션 :</target>
        </trans-unit>
        <trans-unit id="dac7754ac3960dc7981043625115ce2b61b6bd90" translate="yes" xml:space="preserve">
          <source>The global default options for the &lt;a href=&quot;json#method-i-load&quot;&gt;&lt;code&gt;JSON.load&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;json#method-i-load&quot;&gt; &lt;code&gt;JSON.load&lt;/code&gt; &lt;/a&gt; 메소드 의 글로벌 기본 옵션 :</target>
        </trans-unit>
        <trans-unit id="04d1d5361fbef6f23bf2e59d7a775cdc4f357cd5" translate="yes" xml:space="preserve">
          <source>The global directory root for all plugin related data</source>
          <target state="translated">모든 플러그인 관련 데이터의 글로벌 디렉토리 루트</target>
        </trans-unit>
        <trans-unit id="a9c6eff5841cd6699df45ee07c6f6255fb1674cb" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;false&lt;/code&gt; is the only instance of class &lt;a href=&quot;falseclass&quot;&gt;&lt;code&gt;FalseClass&lt;/code&gt;&lt;/a&gt; and represents a logically false value in boolean expressions. The class provides operators allowing &lt;code&gt;false&lt;/code&gt; to participate correctly in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;false&lt;/code&gt; 는 &lt;a href=&quot;falseclass&quot;&gt; &lt;code&gt;FalseClass&lt;/code&gt; &lt;/a&gt; 클래스의 유일한 인스턴스이며 부울 표현식에서 논리적으로 false 값을 나타냅니다. 이 클래스는 &lt;code&gt;false&lt;/code&gt; 가 논리식에 올바르게 참여할 수 있도록하는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="c90547b71e821afe37047d8dbc77b56cd174cad5" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;false&lt;/code&gt; is the only instance of class &lt;code&gt;FalseClass&lt;/code&gt; and represents a logically false value in boolean expressions. The class provides operators allowing &lt;code&gt;false&lt;/code&gt; to participate correctly in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;false&lt;/code&gt; 는 &lt;code&gt;FalseClass&lt;/code&gt; 클래스의 유일한 인스턴스이며 부울 식에서 논리적으로 false 값을 나타냅니다. 이 클래스는 &lt;code&gt;false&lt;/code&gt; 가 논리 표현식에 올바르게 참여할 수 있도록하는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="9605f713c17c7900d2aee896488a9a5705e4d2f9" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;true&lt;/code&gt; is the only instance of class &lt;a href=&quot;trueclass&quot;&gt;&lt;code&gt;TrueClass&lt;/code&gt;&lt;/a&gt; and represents a logically true value in boolean expressions. The class provides operators allowing &lt;code&gt;true&lt;/code&gt; to be used in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;true&lt;/code&gt; 는 &lt;a href=&quot;trueclass&quot;&gt; &lt;code&gt;TrueClass&lt;/code&gt; &lt;/a&gt; 클래스의 유일한 인스턴스이며 부울 식에서 논리적으로 true 값을 나타냅니다. 이 클래스는 논리식에서 &lt;code&gt;true&lt;/code&gt; 를 사용할 수있는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="22864028830453c29cd8c50d337b6db8a25bce0c" translate="yes" xml:space="preserve">
          <source>The global value &lt;code&gt;true&lt;/code&gt; is the only instance of class &lt;code&gt;TrueClass&lt;/code&gt; and represents a logically true value in boolean expressions. The class provides operators allowing &lt;code&gt;true&lt;/code&gt; to be used in logical expressions.</source>
          <target state="translated">전역 값 &lt;code&gt;true&lt;/code&gt; 는 &lt;code&gt;TrueClass&lt;/code&gt; 클래스의 유일한 인스턴스이며 부울 식에서 논리적으로 true 값을 나타냅니다. 이 클래스는 &lt;code&gt;true&lt;/code&gt; 를 논리식에 사용할 수있는 연산자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="380fff3f3a6baabcd40b14b3d4369e46189620da" translate="yes" xml:space="preserve">
          <source>The goal of this class is to manipulate file path information in a neater way than standard Ruby provides. The examples below demonstrate the difference.</source>
          <target state="translated">이 클래스의 목표는 표준 Ruby가 제공하는 것보다 깔끔한 방식으로 파일 경로 정보를 조작하는 것입니다. 아래 예제는 차이점을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d626b3be193b2d7506ad0189b21f1ecd20cae4e0" translate="yes" xml:space="preserve">
          <source>The goal when documenting a method is to impart the most important information about the method in the least amount of time. A reader of the method documentation should be able to quickly understand the purpose of the method and how to use it. Providing too little information about the method is not good, but providing unimportant information or unnecessary examples is not good either. Use your judgment about what the user of the method needs to know to use the method correctly.</source>
          <target state="translated">방법을 문서화 할 때 목표는 최소한의 시간에 방법에 대한 가장 중요한 정보를 전달하는 것입니다. 메소드 문서의 독자는 메소드의 목적과 사용 방법을 빠르게 이해할 수 있어야합니다. 방법에 대한 정보를 너무 적게 제공하는 것은 좋지 않지만 중요하지 않은 정보 나 불필요한 예제를 제공하는 것도 좋지 않습니다. 메소드 사용자가 메소드를 올바르게 사용하기 위해 알아야 할 사항에 대한 판단을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1792fb3deec90d0a9ce3c9abba91a1df4e8a1dcd" translate="yes" xml:space="preserve">
          <source>The graph is represented by &lt;em&gt;each_node&lt;/em&gt; and &lt;em&gt;each_child&lt;/em&gt;. &lt;em&gt;each_node&lt;/em&gt; should have &lt;code&gt;call&lt;/code&gt; method which yields for each node in the graph. &lt;em&gt;each_child&lt;/em&gt; should have &lt;code&gt;call&lt;/code&gt; method which takes a node argument and yields for each child node.</source>
          <target state="translated">그래프는 &lt;em&gt;each_node&lt;/em&gt; 및 &lt;em&gt;each_child로&lt;/em&gt; 표시됩니다 . &lt;em&gt;each_node&lt;/em&gt; 에는 그래프의 각 노드에 대해 생성되는 &lt;code&gt;call&lt;/code&gt; 메소드가 있어야합니다 . &lt;em&gt;each_child&lt;/em&gt; 에는 노드 인수를 사용하고 각 자식 노드에 대해 산출하는 &lt;code&gt;call&lt;/code&gt; 메소드 가 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="d43ef3daba6128e61ae664d271fed9133721c1f9" translate="yes" xml:space="preserve">
          <source>The hash algorithm used in MGF1 (the currently supported mask generation function (MGF)).</source>
          <target state="translated">MGF1 (현재 지원되는 마스크 생성 함수 (MGF))에 사용되는 해시 알고리즘.</target>
        </trans-unit>
        <trans-unit id="dfa2862feb2b775b60cb5bca4a624ad23dff70ee" translate="yes" xml:space="preserve">
          <source>The hash algorithm used in MGF1.</source>
          <target state="translated">MGF1에서 사용되는 해시 알고리즘.</target>
        </trans-unit>
        <trans-unit id="eef27b41c817a117ed465052dc5d98571472e5b1" translate="yes" xml:space="preserve">
          <source>The hash algorithm used with &lt;a href=&quot;hmac&quot;&gt;&lt;code&gt;HMAC&lt;/code&gt;&lt;/a&gt; for the PRF. May be a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; representing the algorithm name, or an instance of &lt;a href=&quot;digest&quot;&gt;&lt;code&gt;OpenSSL::Digest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">PRF에 &lt;a href=&quot;hmac&quot;&gt; &lt;code&gt;HMAC&lt;/code&gt; &lt;/a&gt; 와 함께 사용되는 해시 알고리즘 . 알고리즘 이름을 나타내는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;digest&quot;&gt; &lt;code&gt;OpenSSL::Digest&lt;/code&gt; &lt;/a&gt; 의 인스턴스 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0f967b47380501cda497e47376fa515119c4950" translate="yes" xml:space="preserve">
          <source>The hash arguments, env and options, are same as &lt;a href=&quot;kernel#method-i-exec&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;Kernel#spawn&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">해시 인수, env 및 옵션은 &lt;a href=&quot;kernel#method-i-exec&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt; 과 동일 합니다 . 자세한 내용은 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;Kernel#spawn&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6dac7906ccab88521b6d3266c1c07757148fa052" translate="yes" xml:space="preserve">
          <source>The hash arguments, env and options, are same as &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt;. See &lt;code&gt;Kernel.spawn&lt;/code&gt; for details.</source>
          <target state="translated">해시 인수 env 및 옵션은 &lt;code&gt;exec&lt;/code&gt; 및 &lt;code&gt;spawn&lt;/code&gt; 과 동일 합니다 . 자세한 내용은 &lt;code&gt;Kernel.spawn&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1a9bbffc2ba5a8eef0d1e861040882683b875312" translate="yes" xml:space="preserve">
          <source>The hash contains current environment variables.</source>
          <target state="translated">해시는 현재 환경 변수를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b862a5e504b0376ea8c84c346ba305c970071424" translate="yes" xml:space="preserve">
          <source>The hash function.</source>
          <target state="translated">해시 함수.</target>
        </trans-unit>
        <trans-unit id="61ed1cee8c1805e3235725cb75ccfe09673d6d4b" translate="yes" xml:space="preserve">
          <source>The hash includes information about internal statistics about &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; such as:</source>
          <target state="translated">해시는 다음과 같은 &lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 에 대한 내부 통계에 대한 정보를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="58435b4f519d9a40edbe31c76f389fbc983789db" translate="yes" xml:space="preserve">
          <source>The hash key is the name of the option and the value</source>
          <target state="translated">해시 키는 옵션의 이름과 값입니다</target>
        </trans-unit>
        <trans-unit id="3b4209cdbf11326057e730685718a60431decf3f" translate="yes" xml:space="preserve">
          <source>The hash keys specifies a file descriptor in the child process started by &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt;. :err, 2 and STDERR specifies the standard error stream (stderr).</source>
          <target state="translated">해시 키는 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; 에&lt;/a&gt; 의해 시작된 자식 프로세스의 파일 설명자를 지정 합니다 . : err, 2 및 STDERR은 표준 오류 스트림 (stderr)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0b494189159f33d7ea6600c7a5c9d0a4fb4445a5" translate="yes" xml:space="preserve">
          <source>The hash keys specifies a file descriptor in the child process started by &lt;code&gt;spawn&lt;/code&gt;. :err, 2 and STDERR specifies the standard error stream (stderr).</source>
          <target state="translated">해시 키는 &lt;code&gt;spawn&lt;/code&gt; 에 의해 시작된 하위 프로세스의 파일 설명자를 지정 합니다 . : err, 2 및 STDERR은 표준 오류 스트림 (stderr)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b8beb9e7a49680f73f916f3c9e50a0e6b6c4e111" translate="yes" xml:space="preserve">
          <source>The hash keys specifies a file descriptor in the child process started by spawn. :err, 2 and STDERR specifies the standard error stream (stderr).</source>
          <target state="translated">해시 키는 spawn에 의해 시작된 자식 프로세스의 파일 설명자를 지정합니다. : err, 2 및 STDERR은 표준 오류 스트림 (stderr)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c9168d9a358415e1747435531b872358c9983aca" translate="yes" xml:space="preserve">
          <source>The hash keys specify file descriptors in the child process. The hash values specifies file descriptors in the parent process. So the above specifies exchanging stdout and stderr. Internally, &lt;code&gt;spawn&lt;/code&gt; uses an extra file descriptor to resolve such cyclic file descriptor mapping.</source>
          <target state="translated">해시 키는 자식 프로세스에서 파일 설명자를 지정합니다. 해시 값은 상위 프로세스에서 파일 설명자를 지정합니다. 따라서 위의 stdout 및 stderr 교환을 지정합니다. 내부적으로 &lt;code&gt;spawn&lt;/code&gt; 은 추가 파일 디스크립터를 사용하여 이러한 주기적 파일 디스크립터 맵핑을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="6b95d8f4c62b81ae4bd2dfd88662ac476ec26a81" translate="yes" xml:space="preserve">
          <source>The hash may include other options, where keys are symbols:</source>
          <target state="translated">해시는 키가 기호 인 다른 옵션을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5a158e3b2acd73c87d19904912e7c97531fc1c9" translate="yes" xml:space="preserve">
          <source>The hash table becomes invalid if the hash value of a key has changed after the entry was created. See &lt;a href=&quot;#class-Hash-label-Modifying+an+Active+Hash+Key&quot;&gt;Modifying an Active Hash Key&lt;/a&gt;.</source>
          <target state="translated">항목이 생성 된 후 키의 해시 값이 변경되면 해시 테이블이 무효화됩니다. &lt;a href=&quot;#class-Hash-label-Modifying+an+Active+Hash+Key&quot;&gt;활성 해시 키 수정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d33da203f76376449c01bce5ee031469fa20860" translate="yes" xml:space="preserve">
          <source>The hash value for an object may not be identical across invocations or implementations of Ruby. If you need a stable identifier across Ruby invocations and implementations you will need to generate one with a custom method.</source>
          <target state="translated">객체의 해시 값은 Ruby 호출 또는 구현에서 동일하지 않을 수 있습니다. Ruby 호출 및 구현에서 안정적인 식별자가 필요한 경우 사용자 지정 메서드를 사용하여 식별자를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f12850ade2cf06adb0386be60a59b2cecac0c826" translate="yes" xml:space="preserve">
          <source>The hash value is used along with &lt;a href=&quot;object#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; by the &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; class to determine if two objects reference the same hash key. Any hash value that exceeds the capacity of an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; will be truncated before being used.</source>
          <target state="translated">해시 값은 &lt;a href=&quot;object#method-i-eql-3F&quot;&gt; &lt;code&gt;eql?&lt;/code&gt; &lt;/a&gt;두 개체가 동일한 해시 키를 참조하는지 확인 하려면 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 클래스에 의해 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 의 용량을 초과하는 해시 값 은 사용되기 전에 잘립니다.</target>
        </trans-unit>
        <trans-unit id="e7f85e331b65f7b15c9af5a8e7841f525dd0d5d1" translate="yes" xml:space="preserve">
          <source>The hash value returned is suitable for use as a certificate's filename in a CA path.</source>
          <target state="translated">반환 된 해시 값은 CA 경로에서 인증서의 파일 이름으로 사용하기에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="e701ade7a9ca1e55e1befc2ec2dba4ef3df015e4" translate="yes" xml:space="preserve">
          <source>The hash values specifies a file descriptor in the parent process which invokes &lt;a href=&quot;kernel#method-i-spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt;. :out, 1 and STDOUT specifies the standard output stream (stdout).</source>
          <target state="translated">해시 값은 &lt;a href=&quot;kernel#method-i-spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt; 을 호출하는 부모 프로세스의 파일 설명자를 지정 합니다 . : out, 1 및 STDOUT은 표준 출력 스트림 (stdout)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f94473b68afb729cc91ff4f202625662c4f7f8ea" translate="yes" xml:space="preserve">
          <source>The hash values specifies a file descriptor in the parent process which invokes &lt;code&gt;spawn&lt;/code&gt;. :out, 1 and STDOUT specifies the standard output stream (stdout).</source>
          <target state="translated">해시 값은 부모 프로세스에서 &lt;code&gt;spawn&lt;/code&gt; 을 호출하는 파일 디스크립터를 지정 합니다 . : out, 1 및 STDOUT은 표준 출력 스트림 (stdout)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3d4b4c42529cce93c2e8779a1e22277917bd126b" translate="yes" xml:space="preserve">
          <source>The hash values specifies a file descriptor in the parent process which invokes spawn. :out, 1 and STDOUT specifies the standard output stream (stdout).</source>
          <target state="translated">해시 값은 spawn을 호출하는 상위 프로세스의 파일 설명자를 지정합니다. : out, 1 및 STDOUT은 표준 출력 스트림 (stdout)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="03151c0e4bb94b79e95a0be44a3dd31f74dc2a2d" translate="yes" xml:space="preserve">
          <source>The header for the column, when available.</source>
          <target state="translated">사용 가능한 경우 열의 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="035ad28d3c10b04cff2a9d21286360118589ca36" translate="yes" xml:space="preserve">
          <source>The headers can be supplied as a pre-encoded string, such as &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt;, or as an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Arrays like &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt;.</source>
          <target state="translated">헤더는 &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt; 와 같이 미리 인코딩 된 문자열로 제공 되거나 &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt; 와 같은 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로 제공 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="0115ad07218ff271b2367ec50427cdcffb275560" translate="yes" xml:space="preserve">
          <source>The headers can be supplied as a pre-encoded string, such as &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt;, or as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Arrays like &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt;.</source>
          <target state="translated">헤더는 &lt;code&gt;&quot;subject=subscribe&amp;amp;cc=address&quot;&lt;/code&gt; 와 같은 사전 인코딩 된 문자열 또는 &lt;code&gt;[['subject', 'subscribe'], ['cc', 'address']]&lt;/code&gt; 와 같은 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로 제공 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="8ca1a54e1295cc27c7a75e1148aacf98d1589228" translate="yes" xml:space="preserve">
          <source>The heredoc starts on the line following &lt;code&gt;&amp;lt;&amp;lt;HEREDOC&lt;/code&gt; and ends with the next line that starts with &lt;code&gt;HEREDOC&lt;/code&gt;. The result includes the ending newline.</source>
          <target state="translated">다음 라인에 히어 닥 시작 &lt;code&gt;&amp;lt;&amp;lt;HEREDOC&lt;/code&gt; 함께 시작되는 다음 라인 단부와 &lt;code&gt;HEREDOC&lt;/code&gt; . 결과에는 줄 바꿈이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="caff69e136be69a035574a45e0d4608770495e62" translate="yes" xml:space="preserve">
          <source>The high level YAML parser provided by &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; simply takes YAML as input and returns a Ruby data structure. For information on using the high level parser see &lt;a href=&quot;psych#method-c-load&quot;&gt;&lt;code&gt;Psych.load&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; 에서&lt;/a&gt; 제공하는 높은 수준의 YAML 파서는 단순히 YAML을 입력으로 사용하고 Ruby 데이터 구조를 반환합니다. 상위 레벨 구문 분석기 사용에 대한 정보는 &lt;a href=&quot;psych#method-c-load&quot;&gt; &lt;code&gt;Psych.load&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6273bfd3b600d7bca4244913715a29317519628c" translate="yes" xml:space="preserve">
          <source>The high level emitter has the easiest interface. &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; simply takes a Ruby data structure and converts it to a YAML document. See &lt;a href=&quot;psych#method-c-dump&quot;&gt;&lt;code&gt;Psych.dump&lt;/code&gt;&lt;/a&gt; for more information on dumping a Ruby data structure.</source>
          <target state="translated">하이 레벨 이미 터는 가장 쉬운 인터페이스를 가지고 있습니다. &lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; 은&lt;/a&gt; 단순히 Ruby 데이터 구조를 가져 와서 YAML 문서로 변환합니다. Ruby 데이터 구조 덤프에 대한 자세한 정보는 &lt;a href=&quot;psych#method-c-dump&quot;&gt; &lt;code&gt;Psych.dump&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd2b3665cc1b524a662f8fdaa3a4df886ca1cf72" translate="yes" xml:space="preserve">
          <source>The higher level methods are listed below.</source>
          <target state="translated">보다 높은 수준의 방법이 아래에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="31712855374d288892d5919ac3326746cdd69b95" translate="yes" xml:space="preserve">
          <source>The highest group matched by the last successful match.</source>
          <target state="translated">마지막으로 성공한 경기와 일치하는 가장 높은 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="bfb001f0c9c551abbcb2cd47c98de97dabfbac66" translate="yes" xml:space="preserve">
          <source>The history buffer. It extends &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; module, so it behaves just like an array. For example, gets the fifth content that the user input by &lt;code&gt;HISTORY[4]&lt;/code&gt;.</source>
          <target state="translated">히스토리 버퍼. &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 모듈을 확장 하므로 배열처럼 작동합니다. 예를 들어, 사용자가 &lt;code&gt;HISTORY[4]&lt;/code&gt; 입력 한 다섯 번째 콘텐츠를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ea487c9b8ddd550dc6906c5da9376bb13579dd86" translate="yes" xml:space="preserve">
          <source>The history buffer. It extends &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; module, so it behaves just like an array. For example, gets the fifth content that the user input by HISTORY.</source>
          <target state="translated">히스토리 버퍼. &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 모듈을 확장 하므로 배열처럼 동작합니다. 예를 들어, 사용자가 HISTORY에서 입력 한 다섯 번째 컨텐츠를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f879e5f3e99969e4cefc88daa7c5207612f5493b" translate="yes" xml:space="preserve">
          <source>The horizontal precision using ssize type values in meters using scientific notation as 2 integers of XeY for precision use value/2 e.g. 2m = +/-1m</source>
          <target state="translated">정밀 사용 값 / 2에 대해 과학적 표기법을 XeY의 2 정수로 사용하여 미터 단위의 크기 크기 값을 사용하는 수평 정밀도</target>
        </trans-unit>
        <trans-unit id="2fdf9af6c004dcbfb988d92ed41bfb30a7b2d1df" translate="yes" xml:space="preserve">
          <source>The host of this &lt;a href=&quot;mx&quot;&gt;&lt;code&gt;MX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것의 호스트 &lt;a href=&quot;mx&quot;&gt; &lt;code&gt;MX&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9958bc3f9111ca361e0c24d0bc28bdbb568b8e23" translate="yes" xml:space="preserve">
          <source>The host these services run on.</source>
          <target state="translated">이러한 서비스가 실행되는 호스트</target>
        </trans-unit>
        <trans-unit id="aa7f6fc2e422190a8e8e6318fa3093f89928d4e2" translate="yes" xml:space="preserve">
          <source>The human readable reply text of the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; response</source>
          <target state="translated">&lt;a href=&quot;../smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 응답 의 사람이 읽을 수있는 회신 텍스트</target>
        </trans-unit>
        <trans-unit id="2e5761c346f24cb2ee67ab0288801dbfd97cef33" translate="yes" xml:space="preserve">
          <source>The id of this session.</source>
          <target state="translated">이 세션의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="7209d9bf976dec7a73d91a826c49f1edc2586d27" translate="yes" xml:space="preserve">
          <source>The identifier may also be surrounded with double quotes (which is the same as no quotes) or with backticks. When surrounded by backticks the HEREDOC behaves like Kernel#`:</source>
          <target state="translated">식별자는 큰 따옴표 (따옴표가없는 것과 동일) 또는 백틱으로 묶을 수도 있습니다. 백틱으로 둘러 싸인 HEREDOC은 Kernel #`처럼 동작합니다.</target>
        </trans-unit>
        <trans-unit id="71b0628ff743241585e4bd8388da9140fc4965de" translate="yes" xml:space="preserve">
          <source>The idiom may not work as dynamic scope if the methods are thread-local and a given block switches fiber.</source>
          <target state="translated">방법이 스레드 로컬이고 지정된 블록 스위치 파이버 인 경우 관용구가 동적 범위로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7823efd88570f05c6cdcdeba7b9c6d877d28d4c3" translate="yes" xml:space="preserve">
          <source>The imaginary unit.</source>
          <target state="translated">가상의 단위.</target>
        </trans-unit>
        <trans-unit id="a513b6c2cd22cc1c4c169b4a9f8813d576957fc8" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the combinations are yielded.</source>
          <target state="translated">구현은 조합이 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="058134ee68018dd38c0047d3ca6f78956b3eb4d1" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the constants are yielded.</source>
          <target state="translated">구현은 상수가 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c09fbe11e7b808a2a27325da75d9125f5262d98f" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the permutations are yielded.</source>
          <target state="translated">구현에서는 순열이 생성되는 순서를 보증하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26544ad30b16bfcd3c0373d4d440f7eab35e2f25" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the repeated combinations are yielded.</source>
          <target state="translated">구현은 반복되는 조합이 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab01bf3799a2fb452e23cd803705708a8737d0e9" translate="yes" xml:space="preserve">
          <source>The implementation makes no guarantees about the order in which the repeated permutations are yielded.</source>
          <target state="translated">구현은 반복 순열이 생성되는 순서를 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8c0f703c407e20770d71b5165dfa12ad88daaa0" translate="yes" xml:space="preserve">
          <source>The included modules from the refinement for &lt;code&gt;C&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 개선에서 포함 된 모듈</target>
        </trans-unit>
        <trans-unit id="9ab62eadf8a5f9396cb08d2ac599554a6904a25b" translate="yes" xml:space="preserve">
          <source>The included modules of &lt;code&gt;C&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 에 포함 된 모듈</target>
        </trans-unit>
        <trans-unit id="21d1836bc74cac3298abbecea66b302772b1d629" translate="yes" xml:space="preserve">
          <source>The included modules of &lt;code&gt;R&lt;/code&gt; in reverse order</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; 의 포함 된 모듈을 역순으로</target>
        </trans-unit>
        <trans-unit id="7b4cf09c5e4942b853b4a3fb9934a80f2f62fc59" translate="yes" xml:space="preserve">
          <source>The included modules of the current class. Note that the current class may be a refinement.</source>
          <target state="translated">현재 클래스에 포함 된 모듈. 현재 클래스는 다듬을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ea48090cbb1b6d4569b3843f06305d03a9a0f31" translate="yes" xml:space="preserve">
          <source>The indentation of the least-indented line will be removed from each line of the content. Note that empty lines and lines consisting solely of literal tabs and spaces will be ignored for the purposes of determining indentation, but escaped tabs and spaces are considered non-indentation characters.</source>
          <target state="translated">들여 쓰기가 가장 적은 줄은 내용의 각 줄에서 제거됩니다. 들여 쓰기를 결정하기 위해 리터럴 탭과 공백으로 만 구성된 빈 줄과 행은 무시되지만 이스케이프 된 탭과 공백은 들여 쓰기가 아닌 문자로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="df4cfef5b1024b18dd3a971d562bbe5fafa5474d" translate="yes" xml:space="preserve">
          <source>The index in &lt;code&gt;Readline.line_buffer&lt;/code&gt; which matches the start of input-string passed to &lt;a href=&quot;readline#method-c-completion_proc&quot;&gt;&lt;code&gt;completion_proc&lt;/code&gt;&lt;/a&gt; is computed by subtracting the length of input-string from &lt;code&gt;Readline.point&lt;/code&gt;.</source>
          <target state="translated">내의 인덱스 &lt;code&gt;Readline.line_buffer&lt;/code&gt; 에 전달 된 입력 문자열의 시작과 일치 &lt;a href=&quot;readline#method-c-completion_proc&quot;&gt; &lt;code&gt;completion_proc&lt;/code&gt; 는&lt;/a&gt; 로부터 입력 스트링의 길이를 감산함으로써 계산된다 &lt;code&gt;Readline.point&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="c03c77eee883b26021edbb7ef860d5d725cb9512" translate="yes" xml:space="preserve">
          <source>The index method is specialized to return the index as [row, column] It also accepts an optional &lt;code&gt;selector&lt;/code&gt; argument, see &lt;a href=&quot;matrix#method-i-each&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">index 메소드는 인덱스를 [행, 열]로 리턴하도록 특화되어 있습니다. 또한 선택적 &lt;code&gt;selector&lt;/code&gt; 인수를 허용합니다 . 자세한 내용 은 &lt;a href=&quot;matrix#method-i-each&quot;&gt; &lt;code&gt;each&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="743fd5fc56580ad66d04057e2575e67994de88e2" translate="yes" xml:space="preserve">
          <source>The index object used to store the details about the plugin</source>
          <target state="translated">플러그인에 대한 세부 사항을 저장하는 데 사용되는 색인 오브젝트</target>
        </trans-unit>
        <trans-unit id="bbdf03376c50f5d3aa39b9686fa5d2f9dd139405" translate="yes" xml:space="preserve">
          <source>The information about the last match in the current scope (thread-local and frame-local).</source>
          <target state="translated">현재 범위 (스레드 로컬 및 프레임 로컬)의 마지막 일치에 대한 정보입니다.</target>
        </trans-unit>
        <trans-unit id="850f2c195740568bd650438bf014979797d3d786" translate="yes" xml:space="preserve">
          <source>The information about the last match in the current scope.</source>
          <target state="translated">현재 범위의 마지막 일치에 대한 정보입니다.</target>
        </trans-unit>
        <trans-unit id="fafc9303484bc0df7a0197a6053ee09b37debd69" translate="yes" xml:space="preserve">
          <source>The information accessible consists of the information found in the /etc/passwd and /etc/group files, plus information about the system's temporary directory (/tmp) and configuration directory (/etc).</source>
          <target state="translated">액세스 가능한 정보는 / etc / passwd 및 / etc / group 파일에있는 정보와 시스템의 임시 디렉토리 (/ tmp) 및 구성 디렉토리 (/ etc)에 대한 정보로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="deb26bb4fc05a45f9d56134b2632049f543654f6" translate="yes" xml:space="preserve">
          <source>The information is returned as a &lt;a href=&quot;etc#Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">정보는 &lt;a href=&quot;etc#Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt; 구조체 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b568353f0e5b0ded55a27143aa1a196a3bab7403" translate="yes" xml:space="preserve">
          <source>The information is returned as a &lt;a href=&quot;etc#Passwd&quot;&gt;&lt;code&gt;Passwd&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">정보는 &lt;a href=&quot;etc#Passwd&quot;&gt; &lt;code&gt;Passwd&lt;/code&gt; &lt;/a&gt; 구조체 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f21228c5da1ac62a1403258b39f0ce177349084" translate="yes" xml:space="preserve">
          <source>The information that makes up each key identifying a method is the following, from left to right:</source>
          <target state="translated">메서드를 식별하는 각 키를 구성하는 정보는 왼쪽에서 오른쪽으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0a784c5c2ea75876a9536a8352973affd53e154f" translate="yes" xml:space="preserve">
          <source>The information that makes up each key identifying branches or conditionals is the following, from left to right:</source>
          <target state="translated">분기 또는 조건을 식별하는 각 키를 구성하는 정보는 왼쪽에서 오른쪽으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="df8852f01f94dd3f7f138eafbfd7c76903adbf0c" translate="yes" xml:space="preserve">
          <source>The initial default value and initial default proc for the new hash depend on which form above was used. See &lt;a href=&quot;#class-Hash-label-Default+Values&quot;&gt;Default Values&lt;/a&gt;.</source>
          <target state="translated">새 해시에 대한 초기 기본값 및 초기 기본 proc은 위의 양식이 사용 된 것에 따라 다릅니다. &lt;a href=&quot;#class-Hash-label-Default+Values&quot;&gt;기본값을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3eec32586efcc08a6522ac9569df8eaa12baf287" translate="yes" xml:space="preserve">
          <source>The initial value, as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 등&lt;/a&gt; 의 초기 값 입니다.</target>
        </trans-unit>
        <trans-unit id="8dbb536b4b69d9a076e30fba42c5254c6008ecc0" translate="yes" xml:space="preserve">
          <source>The input keying material.</source>
          <target state="translated">입력 키 자료.</target>
        </trans-unit>
        <trans-unit id="d829cb82443ba50f573c9ebedd5465748e14ba7e" translate="yes" xml:space="preserve">
          <source>The input record separator, newline by default.</source>
          <target state="translated">입력 레코드 구분 기호 (기본적으로 줄 바꾸기).</target>
        </trans-unit>
        <trans-unit id="2948f52a668e1b255b02d286b87bad4b256fe5de" translate="yes" xml:space="preserve">
          <source>The input record separator, newline by default. Aliased to $-0.</source>
          <target state="translated">입력 레코드 구분 기호, 기본적으로 줄 바꿈. $ -0으로 별칭이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="6c42550ddcf1fb254df539ab5c8e45517dff7faa" translate="yes" xml:space="preserve">
          <source>The input to be parsed can be a string:</source>
          <target state="translated">구문 분석 할 입력은 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da5f95a1f4952906982651afd9bf065d687bdff2" translate="yes" xml:space="preserve">
          <source>The input to be parsed can be in a file:</source>
          <target state="translated">구문 분석 할 입력은 파일에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89a101e6f4b973f28af95b67323fdd4b021b3f30" translate="yes" xml:space="preserve">
          <source>The input to be parsed can be in an open IO stream:</source>
          <target state="translated">구문 분석 할 입력은 개방형 IO 스트림에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4ceeac4af124af2b5c8c8d6beffd6e28fd6b15d" translate="yes" xml:space="preserve">
          <source>The instance is created at upon the first call of Klass.instance().</source>
          <target state="translated">인스턴스는 Klass.instance ()를 처음 호출 할 때 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="16c731a8ce248cb0f89cded4bd139be65da21f2c" translate="yes" xml:space="preserve">
          <source>The instruction sequence results will almost certainly change as Ruby changes, so example output in this documentation may be different from what you see.</source>
          <target state="translated">명령 순서 결과는 Ruby가 변경됨에 따라 거의 확실하게 변경되므로이 문서의 출력 예는 실제와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="536c45d4dc9216a9c5f89c17cf373caefc91b7e7" translate="yes" xml:space="preserve">
          <source>The integer memory location of this function</source>
          <target state="translated">이 함수의 정수 메모리 위치</target>
        </trans-unit>
        <trans-unit id="e9c7450d48827577749c31af45a475e35525f27b" translate="yes" xml:space="preserve">
          <source>The integer operating system error number corresponding to a particular error is available as the class constant &lt;code&gt;Errno::&lt;/code&gt;&lt;em&gt;error&lt;/em&gt;&lt;code&gt;::Errno&lt;/code&gt;.</source>
          <target state="translated">특정 오류에 해당하는 정수 운영 체제 오류 번호는 클래스 상수 &lt;code&gt;Errno::&lt;/code&gt; &lt;em&gt;error &lt;/em&gt; &lt;code&gt;::Errno&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5573634dba21068712dd0b53f65c04fa46a14c6" translate="yes" xml:space="preserve">
          <source>The interface index to send IPv6 multicast packets from.</source>
          <target state="translated">IPv6 멀티 캐스트 패킷을 보내는 인터페이스 색인입니다.</target>
        </trans-unit>
        <trans-unit id="e350b02cce032cb6b359e711705764960c70b4f5" translate="yes" xml:space="preserve">
          <source>The internal encoding is optional and when not set, the Ruby default internal encoding is used. If not explicitly set this default internal encoding is &lt;code&gt;nil&lt;/code&gt; meaning that by default, no transcoding occurs.</source>
          <target state="translated">내부 인코딩은 선택 사항이며 설정되지 않은 경우 Ruby 기본 내부 인코딩이 사용됩니다. 명시 적으로 설정하지 않으면이 기본 내부 인코딩은 &lt;code&gt;nil&lt;/code&gt; 이며 기본적으로 트랜스 코딩이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c7b31022b8059e69be6597c50a421d17b8a750e" translate="yes" xml:space="preserve">
          <source>The internal encoding of an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object can be set with &lt;a href=&quot;io#method-i-set_encoding&quot;&gt;&lt;code&gt;IO#set_encoding&lt;/code&gt;&lt;/a&gt; or at &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object creation (see &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt; options).</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 의 내부 인코딩은 &lt;a href=&quot;io#method-i-set_encoding&quot;&gt; &lt;code&gt;IO#set_encoding&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 생성 시 설정할 수 있습니다 ( &lt;a href=&quot;io#method-c-new&quot;&gt; &lt;code&gt;IO.new&lt;/code&gt; &lt;/a&gt; 옵션 참조 ).</target>
        </trans-unit>
        <trans-unit id="ec5a81c1ad55c7473a13a1b1a61c77581f2a319d" translate="yes" xml:space="preserve">
          <source>The invocation of &lt;code&gt;breakable&lt;/code&gt; in the block doesn't break a line and is treated as just an invocation of &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">블록에서 &lt;code&gt;breakable&lt;/code&gt; 을 호출 해도 줄이 끊어지지 않고 &lt;code&gt;text&lt;/code&gt; 호출만으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="78daa7611292caf7e83bc0f13a0cd73ad6203ebe" translate="yes" xml:space="preserve">
          <source>The io/console extension provides methods for interacting with the console. The console can be accessed from &lt;a href=&quot;io#method-c-console&quot;&gt;&lt;code&gt;IO.console&lt;/code&gt;&lt;/a&gt; or the standard input/output/error &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">io / console 확장은 콘솔과 상호 작용하는 방법을 제공합니다. 콘솔은 &lt;a href=&quot;io#method-c-console&quot;&gt; &lt;code&gt;IO.console&lt;/code&gt; &lt;/a&gt; 또는 표준 입 / 출력 / 오류 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 개체 에서 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5648d6c520b2c8f0685cfe0aafe4053afeb3024" translate="yes" xml:space="preserve">
          <source>The iteration count. This provides the ability to tune the algorithm. It is better to use the highest count possible for the maximum resistance to brute-force attacks.</source>
          <target state="translated">반복 횟수 이를 통해 알고리즘을 조정할 수 있습니다. 무차별 대항 공격에 대한 최대 저항을 위해 가능한 한 많은 수를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="44aaff1a7fcccac90476cc4ed0c7f392e6022e74" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-c-strongly_connected_components&quot;&gt;&lt;code&gt;TSort.strongly_connected_components&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-c-strongly_connected_components&quot;&gt; &lt;code&gt;TSort.strongly_connected_components&lt;/code&gt; &lt;/a&gt; 메소드 의 반복기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="dcacceb6671fcafb92f9876f07ac6620712efb4e" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-c-tsort&quot;&gt;&lt;code&gt;TSort.tsort&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-c-tsort&quot;&gt; &lt;code&gt;TSort.tsort&lt;/code&gt; &lt;/a&gt; 메소드 의 반복기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="d74485b91828857827ccbd43d24998b030fcf3b1" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-i-strongly_connected_components&quot;&gt;&lt;code&gt;strongly_connected_components&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.each_strongly_connected_component&lt;/code&gt; is similar to &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.strongly_connected_components.each&lt;/code&gt;, but modification of &lt;em&gt;obj&lt;/em&gt; during the iteration may lead to unexpected results.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-strongly_connected_components&quot;&gt; &lt;code&gt;strongly_connected_components&lt;/code&gt; &lt;/a&gt; 메소드 의 반복기 버전입니다 . &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.each_strongly_connected_component&lt;/code&gt; 와 유사 &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.strongly_connected_components.each&lt;/code&gt; 하지만 수정 &lt;em&gt;OBJ&lt;/em&gt; 반복하는 동안 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e62ecc4e33923a5a704d21adf22af2d42a03fdf2" translate="yes" xml:space="preserve">
          <source>The iterator version of the &lt;a href=&quot;tsort#method-i-tsort&quot;&gt;&lt;code&gt;tsort&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort_each&lt;/code&gt; is similar to &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort.each&lt;/code&gt;, but modification of &lt;em&gt;obj&lt;/em&gt; during the iteration may lead to unexpected results.</source>
          <target state="translated">&lt;a href=&quot;tsort#method-i-tsort&quot;&gt; &lt;code&gt;tsort&lt;/code&gt; &lt;/a&gt; 메소드 의 반복자 버전입니다 . &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort_each&lt;/code&gt; 와 유사 &lt;code&gt;&lt;em&gt;obj&lt;/em&gt;.tsort.each&lt;/code&gt; 하지만 수정 &lt;em&gt;OBJ&lt;/em&gt; 반복하는 동안 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b353458758c261b374877635946fc7a33194676" translate="yes" xml:space="preserve">
          <source>The keys in the pairs must be symbols containing instance variable names.</source>
          <target state="translated">쌍의 키는 인스턴스 변수 이름을 포함하는 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="9cc79388d76e56a78bc4dbfe3ff81d2d7b67f795" translate="yes" xml:space="preserve">
          <source>The keys mean:</source>
          <target state="translated">열쇠는 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b43d8feb1ae5a9203e6d517d03b401b1ad37a137" translate="yes" xml:space="preserve">
          <source>The keys starting with &lt;code&gt;:T_&lt;/code&gt; means live objects. For example, &lt;code&gt;:T_ARRAY&lt;/code&gt; is the number of arrays. &lt;code&gt;:FREE&lt;/code&gt; means object slots which is not used now. &lt;code&gt;:TOTAL&lt;/code&gt; means sum of above.</source>
          <target state="translated">&lt;code&gt;:T_&lt;/code&gt; 로 시작하는 키 는 라이브 객체를 의미합니다. 예를 들어 &lt;code&gt;:T_ARRAY&lt;/code&gt; 는 배열 수입니다. &lt;code&gt;:FREE&lt;/code&gt; 는 현재 사용되지 않는 객체 슬롯을 의미합니다. &lt;code&gt;:TOTAL&lt;/code&gt; 은 위의 합을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ba3f94978008bced0c75e86b546b291433d87b14" translate="yes" xml:space="preserve">
          <source>The keyword arguments &lt;em&gt;N&lt;/em&gt;, &lt;em&gt;r&lt;/em&gt; and &lt;em&gt;p&lt;/em&gt; can be used to tune scrypt. RFC 7914 (published on 2016-08, &lt;a href=&quot;https://tools.ietf.org/html/rfc7914#section-2&quot;&gt;tools.ietf.org/html/rfc7914#section-2&lt;/a&gt;) states that using values r=8 and p=1 appears to yield good results.</source>
          <target state="translated">키워드 인수 &lt;em&gt;N&lt;/em&gt; , &lt;em&gt;r&lt;/em&gt; 및 &lt;em&gt;p&lt;/em&gt; 는 scrypt를 조정하는 데 사용될 수 있습니다. (2016-08에 게시, RFC 7914 &lt;a href=&quot;https://tools.ietf.org/html/rfc7914#section-2&quot;&gt;tools.ietf.org/html/rfc7914#section-2은&lt;/a&gt; )를 사용하여 값 = 8 R 및 P = 1이 나타납니다 좋은 결과를 얻을 것을 말한다.</target>
        </trans-unit>
        <trans-unit id="da5de64fc9f9cdca4151a718a10d5743ef73465e" translate="yes" xml:space="preserve">
          <source>The lambda-ness affects argument handling and the behavior of &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">lambda-ness는 인수 처리와 &lt;code&gt;return&lt;/code&gt; 및 &lt;code&gt;break&lt;/code&gt; 동작에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="b9738e2273389ee18c3b528d6f42206938d1c05c" translate="yes" xml:space="preserve">
          <source>The language of the content, returned as the Content-Language header.</source>
          <target state="translated">내용의 언어로, Content-Language 헤더로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0d5fd853ca2e309a1e82eccf8f6e951ef9d03b26" translate="yes" xml:space="preserve">
          <source>The largest positive exponent in a double-precision floating point where 10 raised to this power minus 1.</source>
          <target state="translated">배정 밀도 부동 소수점 10의이 지수에서 1을 뺀 최대 지수입니다.</target>
        </trans-unit>
        <trans-unit id="cf95f77f46d6de74a4b855314a7aead81d28018d" translate="yes" xml:space="preserve">
          <source>The largest possible exponent value in a double-precision floating point.</source>
          <target state="translated">배정 밀도 부동 소수점에서 가능한 최대 지수 값입니다.</target>
        </trans-unit>
        <trans-unit id="c685ac98bdfccba13dfa7c45e1e49bac85d9a860" translate="yes" xml:space="preserve">
          <source>The largest possible integer in a double-precision floating point number.</source>
          <target state="translated">배정 밀도 부동 소수점 숫자에서 가능한 가장 큰 정수.</target>
        </trans-unit>
        <trans-unit id="95404f41c73ac072999630f3e8e05b7e1064014b" translate="yes" xml:space="preserve">
          <source>The last argument should be a Julian day number which denotes the day of calendar reform. &lt;a href=&quot;date#ITALY&quot;&gt;&lt;code&gt;Date::ITALY&lt;/code&gt;&lt;/a&gt; (2299161=1582-10-15), &lt;a href=&quot;date#ENGLAND&quot;&gt;&lt;code&gt;Date::ENGLAND&lt;/code&gt;&lt;/a&gt; (2361222=1752-09-14), &lt;a href=&quot;date#GREGORIAN&quot;&gt;&lt;code&gt;Date::GREGORIAN&lt;/code&gt;&lt;/a&gt; (the proleptic Gregorian calendar) and &lt;a href=&quot;date#JULIAN&quot;&gt;&lt;code&gt;Date::JULIAN&lt;/code&gt;&lt;/a&gt; (the proleptic Julian calendar) can be specified as a day of calendar reform.</source>
          <target state="translated">마지막 인수는 달력 개혁 날짜를 나타내는 율리우스 일 숫자 여야합니다. &lt;a href=&quot;date#ITALY&quot;&gt; &lt;code&gt;Date::ITALY&lt;/code&gt; &lt;/a&gt; (2299161 = 1582-10-15), &lt;a href=&quot;date#ENGLAND&quot;&gt; &lt;code&gt;Date::ENGLAND&lt;/code&gt; &lt;/a&gt; (2361222 = 1752-09-14), &lt;a href=&quot;date#GREGORIAN&quot;&gt; &lt;code&gt;Date::GREGORIAN&lt;/code&gt; &lt;/a&gt; ( 발화 그레고리력) 및 &lt;a href=&quot;date#JULIAN&quot;&gt; &lt;code&gt;Date::JULIAN&lt;/code&gt; &lt;/a&gt; (발화 율리우스 력) 달력 개혁의 날로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="4a6f9d4f610997c0712a6061f9f9cd6350bb9028" translate="yes" xml:space="preserve">
          <source>The last component of the real pathname can be nonexistent.</source>
          <target state="translated">실제 경로명의 마지막 구성 요소가 존재하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="455d7b982c1ce7f695f35e1ac2ed7d5db75a6d5c" translate="yes" xml:space="preserve">
          <source>The last element of day, hour, minute, or second can be a fractional number. The fractional number's precision is assumed at most nanosecond.</source>
          <target state="translated">일,시, 분 또는 초의 마지막 요소는 소수 일 수 있습니다. 소수의 정밀도는 최대 나노초로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ddc2d67cb2eb11a77590b3365183fc74e8db79ad" translate="yes" xml:space="preserve">
          <source>The last input line of string by gets or readline.</source>
          <target state="translated">get 또는 readline에 의한 문자열의 마지막 입력 행입니다.</target>
        </trans-unit>
        <trans-unit id="cf9e413b8bded9b9b13a38dfec00ad83c9b31f1a" translate="yes" xml:space="preserve">
          <source>The last local network multicast group</source>
          <target state="translated">마지막 로컬 네트워크 멀티 캐스트 그룹</target>
        </trans-unit>
        <trans-unit id="860a059ae33bee2f4e3725dd9e18669c8720bb55" translate="yes" xml:space="preserve">
          <source>The last row read from this file.</source>
          <target state="translated">이 파일에서 읽은 마지막 행.</target>
        </trans-unit>
        <trans-unit id="a9d09cc67009fe719b55ef7fbac0d3ad16cd2dcc" translate="yes" xml:space="preserve">
          <source>The last three forms fill the array with the value of the given block, which is passed the absolute index of each element to be filled.</source>
          <target state="translated">마지막 세 형식은 주어진 블록의 값으로 배열을 채우며, 채워질 각 요소의 절대 인덱스가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d3ffb0a77f509326c089f62c072995663cb848cb" translate="yes" xml:space="preserve">
          <source>The last two digits of the commercial year</source>
          <target state="translated">상업 연도의 마지막 두 자리</target>
        </trans-unit>
        <trans-unit id="a6cbc7a9f2cd13b82213a6ad1e5352f7cc89dc43" translate="yes" xml:space="preserve">
          <source>The last two forms create a new instance of a struct subclass. The number of &lt;code&gt;value&lt;/code&gt; parameters must be less than or equal to the number of attributes defined for the structure. Unset parameters default to &lt;code&gt;nil&lt;/code&gt;. Passing more parameters than number of attributes will raise an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">마지막 두 양식은 struct 서브 클래스의 새 인스턴스를 만듭니다. 횟수 &lt;code&gt;value&lt;/code&gt; 파라미터 미만이거나 구조에 대해 정의 된 속성의 수와 동일해야한다. 설정되지 않은 매개 변수의 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다. 속성 수보다 많은 매개 변수를 전달하면 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d644253a32bafc65128c7a0ae237c1bca938b9c3" translate="yes" xml:space="preserve">
          <source>The latest versions of the FIPS publications can be found here: &lt;a href=&quot;http://csrc.nist.gov/publications/PubsFIPS.html&quot;&gt;csrc.nist.gov/publications/PubsFIPS.html&lt;/a&gt;.</source>
          <target state="translated">최신 버전의 FIPS 간행물은 &lt;a href=&quot;http://csrc.nist.gov/publications/PubsFIPS.html&quot;&gt;csrc.nist.gov/publications/PubsFIPS.html&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2eba099a8d7f49b1c70740e1407fd1915ee56f3b" translate="yes" xml:space="preserve">
          <source>The latitude for this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; where 2**31 is the equator in thousandths of an arc second as an unsigned 32bit integer</source>
          <target state="translated">이 &lt;a href=&quot;loc&quot;&gt; &lt;code&gt;LOC&lt;/code&gt; 에&lt;/a&gt; 대한 위도는 2 ** 31이 부호없는 32 비트 정수로 천분의 일 초의 적도입니다.</target>
        </trans-unit>
        <trans-unit id="e2554f10ba35111f0fe84ac68cc57c6d4e7d9124" translate="yes" xml:space="preserve">
          <source>The latter means that readpartial is nonblocking-flag insensitive. It blocks on the situation &lt;a href=&quot;io#method-i-sysread&quot;&gt;&lt;code&gt;IO#sysread&lt;/code&gt;&lt;/a&gt; causes Errno::EWOULDBLOCK as if the fd is blocking mode.</source>
          <target state="translated">후자는 readpartial이 nonblocking-flag에 둔감하다는 것을 의미합니다. fd가 차단 모드 인 것처럼 &lt;a href=&quot;io#method-i-sysread&quot;&gt; &lt;code&gt;IO#sysread&lt;/code&gt; 로&lt;/a&gt; 인해 Errno :: EWOULDBLOCK이 발생 하는 상황을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="3a2318aece28d41c63a77de705743acd550ba938" translate="yes" xml:space="preserve">
          <source>The length in octets of the salt. Two special values are reserved: &lt;code&gt;:digest&lt;/code&gt; means the digest length, and &lt;code&gt;:auto&lt;/code&gt; means automatically determining the length based on the signature.</source>
          <target state="translated">소금의 옥텟 길이. 두 가지 특수 값은 예약되어 있습니다 : &lt;code&gt;:digest&lt;/code&gt; 수단 길이, 소화 &lt;code&gt;:auto&lt;/code&gt; 자동으로 서명에 따라 길이를 결정하는 수단을.</target>
        </trans-unit>
        <trans-unit id="59095e8d0ffc0f2dd79a059c438efde283df5e19" translate="yes" xml:space="preserve">
          <source>The length in octets of the salt. Two special values are reserved: &lt;code&gt;:digest&lt;/code&gt; means the digest length, and &lt;code&gt;:max&lt;/code&gt; means the maximum possible length for the combination of the private key and the selected message digest algorithm.</source>
          <target state="translated">소금의 옥텟 길이. 두 특수한 값이 예약된다 &lt;code&gt;:digest&lt;/code&gt; 수단은 길이를 소화하고 &lt;code&gt;:max&lt;/code&gt; 수단은 비밀 키의 조합에 대해 최대 가능 길이 및 선택된 메시지 다이제스트 알고리즘.</target>
        </trans-unit>
        <trans-unit id="d7a4b192c3fd2d4e7a634cd154dbdfb796d7c8cb" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;Readline.line_buffer&lt;/code&gt; and GNU Readline's rl_end are same.</source>
          <target state="translated">의 길이 &lt;code&gt;Readline.line_buffer&lt;/code&gt; 와 GNU Readline와의 rl_end은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f880a7f68078861e7dd0d676a116a72f2942d8b2" translate="yes" xml:space="preserve">
          <source>The length of the content that will be sent, returned as the Content-Length header.</source>
          <target state="translated">전송 될 컨텐츠의 길이로, Content-Length 헤더로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e8f13982dda6eadffafb5f83a81e1c14adab5a48" translate="yes" xml:space="preserve">
          <source>The length of the message in octets.</source>
          <target state="translated">메시지의 길이 (옥텟).</target>
        </trans-unit>
        <trans-unit id="214333c551b0b1d020292e7378bee39771179923" translate="yes" xml:space="preserve">
          <source>The length of the range represented in Content-Range: header.</source>
          <target state="translated">Content-Range : 헤더에 표시된 범위의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="6cd4cf0d580b1fc06cfb350507632e5f526dd309" translate="yes" xml:space="preserve">
          <source>The length of the returned array is the product of the length of &lt;code&gt;self&lt;/code&gt; and the argument arrays.</source>
          <target state="translated">리턴 된 배열의 길이는 &lt;code&gt;self&lt;/code&gt; 길이 와 인수 배열 의 곱입니다 .</target>
        </trans-unit>
        <trans-unit id="f49a45ed80f1bde4a3ab062cd9cd67bfbbc57523" translate="yes" xml:space="preserve">
          <source>The levels are:</source>
          <target state="translated">레벨은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c62cba384fd720b9ceb033e9aae1a1a09e971cb" translate="yes" xml:space="preserve">
          <source>The lexer is for internal use only.</source>
          <target state="translated">어휘 분석기는 내부 전용입니다.</target>
        </trans-unit>
        <trans-unit id="411444d20b71d3301ebd3b2f06f7e330f4067607" translate="yes" xml:space="preserve">
          <source>The library also supports reading and writing files in gzip (.gz) format with an interface similar to that of &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. The gzip format is described in RFC 1952 which is also a wrapper around a deflate stream.</source>
          <target state="translated">라이브러리는 또한 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 와 유사한 인터페이스를 사용하여 gzip (.gz) 형식의 파일 읽기 및 쓰기를 지원합니다 . gzip 형식은 RFC 1952에 설명되어 있으며 수축 스트림 주위의 래퍼이기도합니다.</target>
        </trans-unit>
        <trans-unit id="7cb43a246ed9db47da98cdcd3dfb21106a785844" translate="yes" xml:space="preserve">
          <source>The limit for field size, if any. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">필드 크기에 대한 제한입니다 (있는 경우). 자세한 내용은 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="25f0c77b17ae3fcaaa65b4fbe3253fbe659b1b38" translate="yes" xml:space="preserve">
          <source>The limit specified by this method takes less priority over any limit specified to instance methods such as ceil, floor, truncate, or round.</source>
          <target state="translated">이 메소드에 의해 지정된 한계는 ceil, floor, truncate 또는 round와 같은 인스턴스 메소드에 지정된 한계보다 우선 순위가 낮습니다.</target>
        </trans-unit>
        <trans-unit id="382d67de75585eda36e4b6766e980ce91e1a2ef7" translate="yes" xml:space="preserve">
          <source>The line number in the source code where this AST's text began.</source>
          <target state="translated">이 AST 텍스트가 시작된 소스 코드의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="8e78b231c10457c9edbca6549febebe0fc6f466b" translate="yes" xml:space="preserve">
          <source>The line number in the source code where this AST's text ended.</source>
          <target state="translated">이 AST의 텍스트가 끝나는 소스 코드의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="f97cfd17cb7561b717cc12d8ec11ee1a6ec28194" translate="yes" xml:space="preserve">
          <source>The line number of the current token. This value starts from 1. This method is valid only in event handlers.</source>
          <target state="translated">현재 토큰의 줄 번호 이 값은 1부터 시작합니다.이 메소드는 이벤트 핸들러에서만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="c9e2fa224c5332a696304bec0fe7f11a837e94c9" translate="yes" xml:space="preserve">
          <source>The line number of the last row read from this file.</source>
          <target state="translated">이 파일에서 마지막으로 읽은 행 번호입니다.</target>
        </trans-unit>
        <trans-unit id="d67af8590c708d515d8d1768d323688a60752f81" translate="yes" xml:space="preserve">
          <source>The line number of the last row read from this file. Fields with nested line-end characters will not affect this count.</source>
          <target state="translated">이 파일에서 마지막으로 읽은 행 번호입니다. 줄 끝 문자가 중첩 된 필드는이 수에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5cc44391a4640862d7b12f0e7ed26c9fdaf2ee44" translate="yes" xml:space="preserve">
          <source>The line number of this keyword in the current file.</source>
          <target state="translated">현재 파일에서이 키워드의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="ad5c4c8a3122de09c7366b7a31bf057c4653277f" translate="yes" xml:space="preserve">
          <source>The line of the data source this row is from.</source>
          <target state="translated">이 행의 데이터 소스 행입니다.</target>
        </trans-unit>
        <trans-unit id="417aa197220e994826261de4de75eaa3de8aa462" translate="yes" xml:space="preserve">
          <source>The list of addresses where &lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;RingFinger&lt;/code&gt;&lt;/a&gt; will send query packets.</source>
          <target state="translated">&lt;a href=&quot;ringfinger&quot;&gt; &lt;code&gt;RingFinger&lt;/code&gt; &lt;/a&gt; 가 쿼리 패킷을 보낼 주소 목록 .</target>
        </trans-unit>
        <trans-unit id="5c1c26067ddb560417bf1b4bad8eb95f4816ced2" translate="yes" xml:space="preserve">
          <source>The list of available SSL/TLS methods. This constant is only provided for backwards compatibility.</source>
          <target state="translated">사용 가능한 SSL / TLS 메소드 목록. 이 상수는 이전 버전과의 호환성을 위해서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="076d80d1441c8f116a0592255e40b67bcef39cc4" translate="yes" xml:space="preserve">
          <source>The list of available signal names and their interpretation is system dependent. &lt;a href=&quot;signal&quot;&gt;&lt;code&gt;Signal&lt;/code&gt;&lt;/a&gt; delivery semantics may also vary between systems; in particular signal delivery may not always be reliable.</source>
          <target state="translated">사용 가능한 신호 이름 및 해석 목록은 시스템에 따라 다릅니다. &lt;a href=&quot;signal&quot;&gt; &lt;code&gt;Signal&lt;/code&gt; &lt;/a&gt; 전달 의미는 시스템마다 다를 수 있습니다. 특히 신호 전달이 항상 신뢰할 수있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c87bdee22553c5e1835cc04f190150be5b961b57" translate="yes" xml:space="preserve">
          <source>The list of cipher suites configured for this context.</source>
          <target state="translated">이 컨텍스트에 대해 구성된 암호 제품군 목록입니다.</target>
        </trans-unit>
        <trans-unit id="bac40f1f8622e4f5c5637c06a5b70d1c57242cbe" translate="yes" xml:space="preserve">
          <source>The list of dependencies to resolve</source>
          <target state="translated">해결해야 할 종속성 목록</target>
        </trans-unit>
        <trans-unit id="e934b2847da3acbeeb3d1d3ee30d9fdc1b32151e" translate="yes" xml:space="preserve">
          <source>The list of supported extensions (and in some cases their possible values) can be derived from the &amp;ldquo;objects.h&amp;rdquo; file in the &lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; source code.</source>
          <target state="translated">지원되는 확장명 목록 (및 경우에 따라 가능한 값)은 &lt;a href=&quot;openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 소스 코드 의 &quot;objects.h&quot;파일에서 파생 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="780d8b1bdb0317ee7d50a9d647cb39b864e947b1" translate="yes" xml:space="preserve">
          <source>The local host used to establish the connection.</source>
          <target state="translated">연결을 설정하는 데 사용 된 로컬 호스트</target>
        </trans-unit>
        <trans-unit id="23651b81fd326cc0da053929a5c1a406495f5141" translate="yes" xml:space="preserve">
          <source>The local port used to establish the connection.</source>
          <target state="translated">연결을 설정하는 데 사용되는 로컬 포트.</target>
        </trans-unit>
        <trans-unit id="04ded66250b581d812020d3b4ca00618747a7bc3" translate="yes" xml:space="preserve">
          <source>The local variable is created when the parser encounters the assignment, not when the assignment occurs:</source>
          <target state="translated">로컬 변수는 파서가 할당을받을 때가 아니라 할당을 만나면 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="846c7fd50577452405ab14d0bff87468e3974d32" translate="yes" xml:space="preserve">
          <source>The locale encoding (__ENCODING__), not &lt;a href=&quot;encoding#method-c-default_internal&quot;&gt;&lt;code&gt;default_internal&lt;/code&gt;&lt;/a&gt;, is used as the encoding of created strings.</source>
          <target state="translated">&lt;a href=&quot;encoding#method-c-default_internal&quot;&gt; &lt;code&gt;default_internal&lt;/code&gt; &lt;/a&gt; 이 아닌 로케일 인코딩 (__ENCODING__) 이 작성된 문자열의 인코딩으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="452cf70a1c422d6d6554ec31c81cffd8c3ec98a8" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file).</source>
          <target state="translated">로그 장치. 이는 파일 이름 ( &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다.</target>
        </trans-unit>
        <trans-unit id="f41baf5706fb12d05d2d2fb8140b5e221eacfcbc" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file). reopen the same filename if it is &lt;code&gt;nil&lt;/code&gt;, do nothing for &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. Default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">로그 장치. 이는 파일 이름 ( &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다. 동일한 파일 이름이 &lt;code&gt;nil&lt;/code&gt; 이면 다시 열고 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 에&lt;/a&gt; 대해 아무 작업도 수행하지 않습니다 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8a7804efa1adc360b82dc85d0a467d57b9162a14" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;), &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file), &lt;code&gt;nil&lt;/code&gt; (it writes nothing) or &lt;code&gt;File::NULL&lt;/code&gt; (same as &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">로그 장치. 이것은 파일 이름 ( &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ), &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일), &lt;code&gt;nil&lt;/code&gt; (아무것도 쓰지 않음) 또는 &lt;code&gt;File::NULL&lt;/code&gt; ( &lt;code&gt;nil&lt;/code&gt; 과 동일 )입니다.</target>
        </trans-unit>
        <trans-unit id="1d6a778b4b002b5db6872fc30c0fa832a5dd9dfd" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (String) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file).</source>
          <target state="translated">로그 장치. 파일 이름 (String) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다.</target>
        </trans-unit>
        <trans-unit id="e7433f737c5ba22e8f245dd3ef69ae08c10d1d39" translate="yes" xml:space="preserve">
          <source>The log device. This is a filename (String) or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (typically &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, or an open file). reopen the same filename if it is &lt;code&gt;nil&lt;/code&gt;, do nothing for &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. Default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">로그 장치. 파일 이름 (String) 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 (일반적으로 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; 또는 열린 파일)입니다. 동일한 파일 이름이 &lt;code&gt;nil&lt;/code&gt; 인 경우 다시 열면 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 에&lt;/a&gt; 대해 아무 것도 수행하지 마십시오 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c34f6d45f364e8f842374d0fba03637ece7c5035" translate="yes" xml:space="preserve">
          <source>The log file suffix format for &lt;code&gt;daily&lt;/code&gt;, &lt;code&gt;weekly&lt;/code&gt; or &lt;code&gt;monthly&lt;/code&gt; rotation. Default is '%Y%m%d'.</source>
          <target state="translated">&lt;code&gt;daily&lt;/code&gt; , &lt;code&gt;weekly&lt;/code&gt; 또는 &lt;code&gt;monthly&lt;/code&gt; 로테이션에 대한 로그 파일 접미사 형식입니다 . 기본값은 '% Y % m % d'입니다.</target>
        </trans-unit>
        <trans-unit id="2c9234937ce5c8d9c89838d11a40033809f08f35" translate="yes" xml:space="preserve">
          <source>The log message. A &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로그 메시지 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4dd67ca521be8b37cd245fe1ec75b3f7a4cfe1fc" translate="yes" xml:space="preserve">
          <source>The long name of the &lt;a href=&quot;objectid&quot;&gt;&lt;code&gt;ObjectId&lt;/code&gt;&lt;/a&gt;, as defined in &amp;lt;openssl/objects.h&amp;gt;.</source>
          <target state="translated">&amp;lt;openssl / objects.h&amp;gt;에 정의 된 &lt;a href=&quot;objectid&quot;&gt; &lt;code&gt;ObjectId&lt;/code&gt; &lt;/a&gt; 의 긴 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="ac5c657308f6efc204a612be11122152440f1b6c" translate="yes" xml:space="preserve">
          <source>The longitude for this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; where 2**31 is the prime meridian in thousandths of an arc second as an unsigned 32bit integer</source>
          <target state="translated">이 &lt;a href=&quot;loc&quot;&gt; &lt;code&gt;LOC&lt;/code&gt; &lt;/a&gt; 의 경도는 2 ** 31이 부호없는 32 비트 정수로 천분의 1 초의 자오선입니다.</target>
        </trans-unit>
        <trans-unit id="46267f7e85d9a84600a29754a266a54e47023dc8" translate="yes" xml:space="preserve">
          <source>The loop finishes when the value to be passed to the block is greater than &lt;code&gt;limit&lt;/code&gt; (if &lt;code&gt;step&lt;/code&gt; is positive) or less than &lt;code&gt;limit&lt;/code&gt; (if &lt;code&gt;step&lt;/code&gt; is negative), where &lt;code&gt;limit&lt;/code&gt; is defaulted to infinity.</source>
          <target state="translated">블록에 전달 될 값이 &lt;code&gt;limit&lt;/code&gt; 보다 크거나 ( &lt;code&gt;step&lt;/code&gt; 가 양수인 경우) &lt;code&gt;limit&lt;/code&gt; 보다 작 으면 ( &lt;code&gt;step&lt;/code&gt; 가 음수 인 경우) 루프가 완료됩니다. 여기서 &lt;code&gt;limit&lt;/code&gt; 는 기본적으로 무한대입니다.</target>
        </trans-unit>
        <trans-unit id="fd42a28ab13bb148febbfa074b8633c09db09090" translate="yes" xml:space="preserve">
          <source>The loopback address</source>
          <target state="translated">루프백 주소</target>
        </trans-unit>
        <trans-unit id="76601e95c4af19197977333c6483aee61ec6fd84" translate="yes" xml:space="preserve">
          <source>The lowest digits of &lt;a href=&quot;time#method-i-to_f&quot;&gt;&lt;code&gt;to_f&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-i-nsec&quot;&gt;&lt;code&gt;nsec&lt;/code&gt;&lt;/a&gt; are different because IEEE 754 double is not accurate enough to represent the exact number of nanoseconds since the Epoch.</source>
          <target state="translated">IEEE 754 double이 Epoch 이후 정확한 나노초 수를 나타낼만큼 정확하지 않기 때문에 &lt;a href=&quot;time#method-i-to_f&quot;&gt; &lt;code&gt;to_f&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;time#method-i-nsec&quot;&gt; &lt;code&gt;nsec&lt;/code&gt; &lt;/a&gt; 의 가장 낮은 숫자 는 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4b2f17136536bcdcc0b67d8304f9315edb7c7033" translate="yes" xml:space="preserve">
          <source>The lowest digits of &lt;a href=&quot;time#method-i-to_f&quot;&gt;&lt;code&gt;to_f&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-i-subsec&quot;&gt;&lt;code&gt;subsec&lt;/code&gt;&lt;/a&gt; are different because IEEE 754 double is not accurate enough to represent the rational number.</source>
          <target state="translated">가장 낮은 자리 &lt;a href=&quot;time#method-i-to_f&quot;&gt; &lt;code&gt;to_f&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;time#method-i-subsec&quot;&gt; &lt;code&gt;subsec&lt;/code&gt; &lt;/a&gt; IEEE 754 배의 유리수를 나타내는 정확한 충분하지 않기 때문에 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a8240a1f55e847bacf9afdb80d5979f20db87962" translate="yes" xml:space="preserve">
          <source>The lowest level emitter is an event based system. Events are sent to a &lt;code&gt;Psych::Emitter&lt;/code&gt; object. That object knows how to convert the events to a YAML document. This interface should be used when document format is known in advance or speed is a concern. See &lt;code&gt;Psych::Emitter&lt;/code&gt; for more information.</source>
          <target state="translated">가장 낮은 레벨의 이미 터는 이벤트 기반 시스템입니다. 이벤트는 &lt;code&gt;Psych::Emitter&lt;/code&gt; 객체 로 전송됩니다 . 이 객체는 이벤트를 YAML 문서로 변환하는 방법을 알고 있습니다. 문서 형식을 미리 알고 있거나 속도가 중요한 경우이 인터페이스를 사용해야합니다. 자세한 정보는 &lt;code&gt;Psych::Emitter&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="faa295f0573cc7e0b679365f35113ca0432d7678" translate="yes" xml:space="preserve">
          <source>The lowest level parser should be used when the YAML input is already known, and the developer does not want to pay the price of building an AST or automatic detection and conversion to Ruby objects. See &lt;code&gt;Psych::Parser&lt;/code&gt; for more information on using the event based parser.</source>
          <target state="translated">YAML 입력이 이미 알려진 경우 가장 낮은 수준의 구문 분석기를 사용해야하며 개발자는 AST 빌드 또는 자동 감지 및 Ruby 오브젝트로의 변환 비용을 지불하고 싶지 않습니다. 참조 &lt;code&gt;Psych::Parser&lt;/code&gt; 행사 기반 파서 사용에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="6916db97af7fbcc215e84d04bd5aea3188ac35c5" translate="yes" xml:space="preserve">
          <source>The mailbox with the associated quota.</source>
          <target state="translated">할당량이 연결된 사서함</target>
        </trans-unit>
        <trans-unit id="52545ae3e81e3c2803caa27549768e88f88f183b" translate="yes" xml:space="preserve">
          <source>The main loop performed by a DRbServer's internal thread.</source>
          <target state="translated">DRbServer의 내부 스레드가 수행하는 기본 루프.</target>
        </trans-unit>
        <trans-unit id="250cb0ca05bc75246d515eb258682a35ceccb314" translate="yes" xml:space="preserve">
          <source>The main thread of this DRbServer.</source>
          <target state="translated">이 DRbServer의 기본 스레드입니다.</target>
        </trans-unit>
        <trans-unit id="af5de340c31c6728889869aafe7a7527cf71db80" translate="yes" xml:space="preserve">
          <source>The major version of the instruction sequence.</source>
          <target state="translated">명령 시퀀스의 주요 버전입니다.</target>
        </trans-unit>
        <trans-unit id="74ed864705a92921352d7588de5ed467040deadf" translate="yes" xml:space="preserve">
          <source>The marshaling library converts collections of Ruby objects into a byte stream, allowing them to be stored outside the currently active script. This data may subsequently be read and the original objects reconstituted.</source>
          <target state="translated">마샬링 라이브러리는 Ruby 객체 모음을 바이트 스트림으로 변환하여 현재 활성화 된 스크립트 외부에 저장할 수 있습니다. 이후에이 데이터를 읽고 원본 객체를 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6359721fbbcfa297633b64bf50fb5cd1106566b" translate="yes" xml:space="preserve">
          <source>The match below fails because although 'Demand' contains 'and', the pattern does not occur at a word boundary.</source>
          <target state="translated">'Demand'에 'and'가 포함되어 있지만 단어 경계에서 패턴이 발생하지 않기 때문에 아래 일치가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="808c974ed2c4ee16692f776c1e9bcb96f4845393" translate="yes" xml:space="preserve">
          <source>The maximum memory level for allocating zlib deflate compression state.</source>
          <target state="translated">zlib 수축 압축 상태를 할당하기위한 최대 메모리 레벨.</target>
        </trans-unit>
        <trans-unit id="15b6a29a1b7d6f99c0454516c56835772c8b6d26" translate="yes" xml:space="preserve">
          <source>The maximum number of processes that can be created for the real user ID of the calling process.</source>
          <target state="translated">호출 프로세스의 실제 사용자 ID에 대해 작성할 수있는 최대 프로세스 수입니다.</target>
        </trans-unit>
        <trans-unit id="64b96ed4230248510999f351379b3ffe66f0c518" translate="yes" xml:space="preserve">
          <source>The maximum size of the zlib history buffer. Note that zlib allows larger values to enable different inflate modes. See &lt;a href=&quot;zlib/inflate#method-c-new&quot;&gt;&lt;code&gt;Zlib::Inflate.new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">zlib 히스토리 버퍼의 최대 크기입니다. zlib를 사용하면 값이 클수록 다른 팽창 모드를 사용할 수 있습니다. 자세한 내용은 &lt;a href=&quot;zlib/inflate#method-c-new&quot;&gt; &lt;code&gt;Zlib::Inflate.new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="09d914f4ec30202b0bb54573e097e9c76a8b7876" translate="yes" xml:space="preserve">
          <source>The maximum width of a line, before it is separated in to a newline</source>
          <target state="translated">줄 바꿈으로 구분되기 전에 줄의 최대 너비</target>
        </trans-unit>
        <trans-unit id="ecc70e6c65fbbf3d3cb14dce923ac6eb4476a824" translate="yes" xml:space="preserve">
          <source>The maximum-valued element from &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 최대 값 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="344ad3ec3ee279821bdd4a49b479faadd9ad8a0e" translate="yes" xml:space="preserve">
          <source>The meaning of &lt;code&gt;move&lt;/code&gt; argument is the same as for &lt;a href=&quot;ractor#method-i-send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;move&lt;/code&gt; 인수 의 의미는 &lt;a href=&quot;ractor#method-i-send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="9c8e8f5d824c85e327cb2988bb85c8dcc0e0e99e" translate="yes" xml:space="preserve">
          <source>The meaning of the &lt;code&gt;options&lt;/code&gt; is as follows:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="756674ad56c03514e9d5f0a274e34fabfbc6719a" translate="yes" xml:space="preserve">
          <source>The message of the exception reports the content of podspec for the line that generated the original exception.</source>
          <target state="translated">예외 메시지는 원래 예외를 생성 한 행에 대한 podspec의 내용을보고합니다.</target>
        </trans-unit>
        <trans-unit id="96405d1c04ac31ccf2aa964281a6b129c823abe3" translate="yes" xml:space="preserve">
          <source>The message to log; does not need to be a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기록 할 메시지입니다. &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 일&lt;/a&gt; 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="abfc088a33bba2b84de874c521344bc3d906fb6e" translate="yes" xml:space="preserve">
          <source>The messages have associated levels, such as &lt;code&gt;INFO&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt; that indicate their importance. You can then give the &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; a level, and only messages at that level or higher will be printed.</source>
          <target state="translated">메시지에는 관련 &lt;code&gt;INFO&lt;/code&gt; 예 : INFO 또는 &lt;code&gt;ERROR&lt;/code&gt; ) 가 중요도를 나타냅니다. 그런 다음 &lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; 에 수준 을 부여하면 해당 수준 이상의 메시지 만 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="fe950bc61a53da4a1a790d93a41d85bf4cb51276" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../module#method-i-const_set&quot;&gt;&lt;code&gt;Module#const_set&lt;/code&gt;&lt;/a&gt; is not affected.</source>
          <target state="translated">&lt;a href=&quot;../module#method-i-const_set&quot;&gt; &lt;code&gt;Module#const_set&lt;/code&gt; &lt;/a&gt; 메소드 는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ed17a46f5d164d4fb1ce3e055ca6cf1ff5c352a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;array#method-i-pop&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; removes the last element in an array and returns it:</source>
          <target state="translated">&lt;a href=&quot;array#method-i-pop&quot;&gt; &lt;code&gt;pop&lt;/code&gt; &lt;/a&gt; 메소드 는 배열의 마지막 요소를 제거하고이를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ea308b57990d392b17e508892c517d9dafff985f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_set&lt;/code&gt; is added to &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; for convenience.</source>
          <target state="translated">편의를 위해 &lt;code&gt;to_set&lt;/code&gt; 메소드 가 &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="647fc91ddb04919b83ca0be590047084dd1c7409" translate="yes" xml:space="preserve">
          <source>The method accepts no arguments.</source>
          <target state="translated">이 메서드는 인수를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39a0fb3d14990345b179e2d7f7bbb3212e1fb44a" translate="yes" xml:space="preserve">
          <source>The method blocks if the queue is empty.</source>
          <target state="translated">큐가 비어 있으면 메서드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="faacc74b1ff921beb526d2334757c55e885eebfc" translate="yes" xml:space="preserve">
          <source>The method is &lt;em&gt;expected&lt;/em&gt; to immediately run the provided block of code in a separate non-blocking fiber.</source>
          <target state="translated">이 방법은 제공된 코드 블록을 별도의 비 차단 광섬유에서 즉시 실행할 &lt;em&gt;것으로 예상&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="e48870ebe2dbc5957328bbb3adf8363f3ebb16a7" translate="yes" xml:space="preserve">
          <source>The method is blocking, and will return only when somebody consumes the sent message.</source>
          <target state="translated">이 메서드는 차단 중이며 누군가 보낸 메시지를 사용할 때만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="177bd223375d2cadb13cb5c71d9a40d99fab8115" translate="yes" xml:space="preserve">
          <source>The method is non-blocking (will return immediately even if the ractor is not ready to receive anything):</source>
          <target state="translated">이 메서드는 차단되지 않습니다 (레이터가 아무것도받을 준비가되지 않은 경우에도 즉시 반환 됨).</target>
        </trans-unit>
        <trans-unit id="b50c3dfed638965cb119f0e3a38697d059a5c5f6" translate="yes" xml:space="preserve">
          <source>The method name.</source>
          <target state="translated">메서드 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8dd1b8cdb5e4d124efa471d2a5b6465ca4789a83" translate="yes" xml:space="preserve">
          <source>The method of determining if the resource was created or not is unique to the particular service you are using. Of course, you will want to add protection from infinite looping.</source>
          <target state="translated">리소스가 생성되었는지 여부를 결정하는 방법은 사용중인 특정 서비스에 고유합니다. 물론 무한 반복으로부터 보호를 추가하고 싶을 것입니다.</target>
        </trans-unit>
        <trans-unit id="ccfa8c485fcee972d9f8521b3edcaa96ae452142" translate="yes" xml:space="preserve">
          <source>The method params() returns a hash of all parameters in the request as name/value-list pairs, where the value-list is an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of one or more values. The &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; object itself also behaves as a hash of parameter names to values, but only returns a single value (as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) for each parameter name.</source>
          <target state="translated">params () 메소드는 요청의 모든 매개 변수 해시를 이름 / 값 목록 쌍으로 리턴합니다. 여기서 값 목록은 하나 이상의 값으로 구성된 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; 의&lt;/a&gt; 목적 자체도 값 매개 변수 이름의 해시로 동작 있지만 (A와 같은 단일 값을 반환 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 각 매개 변수 이름).</target>
        </trans-unit>
        <trans-unit id="180990fc0ae15afc83eab233cc07fbb661a14e33" translate="yes" xml:space="preserve">
          <source>The method returns an object &lt;code&gt;obj&lt;/code&gt; for which &lt;code&gt;obj.kind_of?(Array)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;obj.kind_of?(Array)&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환하는 객체 &lt;code&gt;obj&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4c71ef4cd3f4996b86e8e88a3f313e19e0cded6f" translate="yes" xml:space="preserve">
          <source>The method returns an object &lt;code&gt;obj&lt;/code&gt; for which &lt;code&gt;obj.kind_of?(Hash)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;obj.kind_of?(Hash)&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환하는 객체 &lt;code&gt;obj&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="0cddc82b7b40acd638ca849ba8eb792c2b8ccd24" translate="yes" xml:space="preserve">
          <source>The method returns an object &lt;code&gt;obj&lt;/code&gt; for which &lt;code&gt;obj.kind_of?(Integer)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;obj.kind_of?(Integer)&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환하는 객체 &lt;code&gt;obj&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="755ec8a2a4aa23694c23b3ae5e16e3ada5537947" translate="yes" xml:space="preserve">
          <source>The method returns an object &lt;code&gt;obj&lt;/code&gt; for which &lt;code&gt;obj.kind_of?(String)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;obj.kind_of?(String)&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 객체 &lt;code&gt;obj&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="691d567c2150a5952ed499a09f8e025334188069" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hash#method-i-values_at&quot;&gt;&lt;code&gt;values_at&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;hash#method-i-dig&quot;&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/a&gt; need to return the value associated to a certain key. When that key is not found, that value will be determined by its default proc (if any) or else its default (initially `nil`).</source>
          <target state="translated">&lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;hash#method-i-values_at&quot;&gt; &lt;code&gt;values_at&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;hash#method-i-dig&quot;&gt; &lt;code&gt;dig&lt;/code&gt; &lt;/a&gt; 메서드 는 특정 키와 관련된 값을 반환해야합니다. 해당 키를 찾을 수없는 경우 해당 값은 기본 proc (있는 경우) 또는 기본값 (처음에는 'nil')에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="03b946c0c70bf569bc0e75dbadd02ad1f9c32728" translate="yes" xml:space="preserve">
          <source>The methods provided are &lt;a href=&quot;string#method-i-scanf&quot;&gt;&lt;code&gt;String#scanf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;kernel#method-i-scanf&quot;&gt;&lt;code&gt;Kernel#scanf&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;kernel#method-i-scanf&quot;&gt;&lt;code&gt;Kernel#scanf&lt;/code&gt;&lt;/a&gt; is a wrapper around STDIN.scanf. &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt; can be used on any &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; stream, including file handles and sockets. scanf can be called either with or without a block.</source>
          <target state="translated">제공되는 메소드는 &lt;a href=&quot;string#method-i-scanf&quot;&gt; &lt;code&gt;String#scanf&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-scanf&quot;&gt; &lt;code&gt;IO#scanf&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;kernel#method-i-scanf&quot;&gt; &lt;code&gt;Kernel#scanf&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;kernel#method-i-scanf&quot;&gt; &lt;code&gt;Kernel#scanf&lt;/code&gt; &lt;/a&gt; #scanf는 STDIN.scanf의 래퍼입니다. &lt;a href=&quot;io#method-i-scanf&quot;&gt; &lt;code&gt;IO#scanf&lt;/code&gt; &lt;/a&gt; 는 파일 핸들 및 소켓을 포함한 모든 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 스트림에서 사용할 수 있습니다 . scanf는 블록의 유무에 관계없이 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84cddd53158e7009e062db7663f73cda3c930f38" translate="yes" xml:space="preserve">
          <source>The minimum field width specifies the minimum width.</source>
          <target state="translated">최소 필드 너비는 최소 너비를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6faca15fc2ed785ce29bfd1c5630e73b3716d9a0" translate="yes" xml:space="preserve">
          <source>The minimum number of seconds to be used for TTL values in RRs.</source>
          <target state="translated">RR의 TTL 값에 사용되는 최소 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="0a97a8ac1ceb9e02af962e4894865d40c80e40d5" translate="yes" xml:space="preserve">
          <source>The minimum number of significant decimal digits in a double-precision floating point.</source>
          <target state="translated">배정 밀도 부동 소수점의 최소 유효 소수 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="0e17a60aa2df65c40734f64a22814404accb112a" translate="yes" xml:space="preserve">
          <source>The minimum-valued element from &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 최소값 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="a7687e6fea656889dc6c15a2a48af2a0d52bac38" translate="yes" xml:space="preserve">
          <source>The minor version of the instruction sequence.</source>
          <target state="translated">명령 시퀀스의 부 버전입니다.</target>
        </trans-unit>
        <trans-unit id="e7d2c9e2fb664b6f552ed6f31a6763a704e5cfb7" translate="yes" xml:space="preserve">
          <source>The mixed mode default is to treat a list of indices as row access, returning the rows indicated. Anything else is considered columnar access. For columnar access, the return set has an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; for each row with the values indicated by the headers in each &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. You can force column or row mode using &lt;a href=&quot;table#method-i-by_col&quot;&gt;&lt;code&gt;by_col&lt;/code&gt;&lt;/a&gt;!() or &lt;a href=&quot;table#method-i-by_row&quot;&gt;&lt;code&gt;by_row&lt;/code&gt;&lt;/a&gt;!().</source>
          <target state="translated">혼합 모드 기본값은 인덱스 목록을 행 액세스로 취급하여 표시된 행을 리턴하는 것입니다. 다른 것은 컬럼 액세스로 간주됩니다. 주상 액세스의 리턴 세트가 갖는 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 각각의 헤더에 의해 표시되는 값이 각 행의 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;table#method-i-by_col&quot;&gt; &lt;code&gt;by_col&lt;/code&gt; &lt;/a&gt; ! () 또는 &lt;a href=&quot;table#method-i-by_row&quot;&gt; &lt;code&gt;by_row&lt;/code&gt; &lt;/a&gt; ! ()를 사용하여 열 또는 행 모드를 강제 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ecc046e7d1219d6e375c3c25aabce2dff0d83a5" translate="yes" xml:space="preserve">
          <source>The mode should be an integer, as for Unix chmod.</source>
          <target state="translated">모드는 Unix chmod와 같이 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="657fa6d04a94551886639db774724f16e48b0dc5" translate="yes" xml:space="preserve">
          <source>The modified Julian day number is in elapsed days since midnight (Coordinated Universal &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;) on November 17, 1858 CE (in the Gregorian calendar).</source>
          <target state="translated">수정 된 율리우스 일 번호 자정 (협정 세계 경과 일에 &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; 17 일), 1858 CE (그레고리력에서).</target>
        </trans-unit>
        <trans-unit id="881eec14e2a567191faf4c34b9f0d0595a34221c" translate="yes" xml:space="preserve">
          <source>The modified attributes may be retained when &lt;code&gt;exec(2)&lt;/code&gt; system call fails.</source>
          <target state="translated">&lt;code&gt;exec(2)&lt;/code&gt; 시스템 호출이 실패하면 수정 된 속성이 유지 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61a2ebb23192061c98013ae05eff2f946e449e8a" translate="yes" xml:space="preserve">
          <source>The modifiers are &amp;ldquo;E&amp;rdquo; and &amp;ldquo;O&amp;rdquo;. They are ignored.</source>
          <target state="translated">수정자는 &quot;E&quot;및 &quot;O&quot;입니다. 그들은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e28a7551f843bfb98ea28ac3bf61743eeeb4400a" translate="yes" xml:space="preserve">
          <source>The modifiers are &amp;ldquo;E&amp;rdquo;, &amp;ldquo;O&amp;rdquo;, &amp;ldquo;:&amp;rdquo;, &amp;ldquo;::&amp;rdquo; and &amp;ldquo;:::&amp;rdquo;. &amp;ldquo;E&amp;rdquo; and &amp;ldquo;O&amp;rdquo; are ignored. No effect to result currently.</source>
          <target state="translated">수정자는&amp;ldquo;E&amp;rdquo;,&amp;ldquo;O&amp;rdquo;,&amp;ldquo;:&amp;rdquo;,&amp;ldquo;::&amp;rdquo;및&amp;ldquo;:::&amp;rdquo;입니다. &quot;E&quot;및 &quot;O&quot;는 무시됩니다. 현재 결과에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a111203f6b9742fa6ba9316a0b08c2f75811389f" translate="yes" xml:space="preserve">
          <source>The module contains several groups of functionality for handling OS processes:</source>
          <target state="translated">모듈에는 OS 프로세스를 처리하기위한 여러 기능 그룹이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="089a54897d08954cb728ea0a0d9bd9a5719b1c4b" translate="yes" xml:space="preserve">
          <source>The more accurate value is returned by &lt;a href=&quot;time#method-i-nsec&quot;&gt;&lt;code&gt;nsec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보다 정확한 값은 &lt;a href=&quot;time#method-i-nsec&quot;&gt; &lt;code&gt;nsec&lt;/code&gt; 에&lt;/a&gt; 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="cba813d4c11d37a73fbae06095fffef653980d78" translate="yes" xml:space="preserve">
          <source>The more accurate value is returned by &lt;a href=&quot;time#method-i-subsec&quot;&gt;&lt;code&gt;subsec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보다 정확한 값은 &lt;a href=&quot;time#method-i-subsec&quot;&gt; &lt;code&gt;subsec&lt;/code&gt; 에&lt;/a&gt; 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="311b028c2e8bf551c0fd09b547dfc425dd72d0f7" translate="yes" xml:space="preserve">
          <source>The most common constructive encodings are SETs and SEQUENCEs, which is why there are two sub-classes of &lt;a href=&quot;asn1/constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; representing each of them.</source>
          <target state="translated">가장 일반적인 건설 인코딩의 두 개의 하위 클래스가있는 이유입니다, 세트와 시퀀스입니다 &lt;a href=&quot;asn1/constructive&quot;&gt; &lt;code&gt;Constructive&lt;/code&gt; &lt;/a&gt; 그들 각각을 대표하는가.</target>
        </trans-unit>
        <trans-unit id="4f782338c0399529848644e45d81c3c92ac9fc09" translate="yes" xml:space="preserve">
          <source>The most common errors are:</source>
          <target state="translated">가장 일반적인 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d151e682e7c87aeaa1a6866f9dc88244ca248a2" translate="yes" xml:space="preserve">
          <source>The most common way is to compare an object against multiple patterns. The patterns are matched using the +===+ method which is aliased to +==+ on &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. Other classes must override it to give meaningful behavior. See &lt;a href=&quot;../module#method-i-3D-3D-3D&quot;&gt;&lt;code&gt;Module#===&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../regexp#method-i-3D-3D-3D&quot;&gt;&lt;code&gt;Regexp#===&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">가장 일반적인 방법은 객체를 여러 패턴과 비교하는 것입니다. &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;/a&gt; + == +에 별명 인 + === + 메소드를 사용하여 패턴을 일치시킵니다 . 의미있는 동작을 제공하려면 다른 클래스가이를 재정의해야합니다. 예제는 &lt;a href=&quot;../module#method-i-3D-3D-3D&quot;&gt; &lt;code&gt;Module#===&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../regexp#method-i-3D-3D-3D&quot;&gt; &lt;code&gt;Regexp#===&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f29507bdb8e7b7e4bdf24b8a672c7dc35a0976b1" translate="yes" xml:space="preserve">
          <source>The most common way of writing strings is using &lt;code&gt;&quot;&lt;/code&gt;:</source>
          <target state="translated">문자열을 작성하는 가장 일반적인 방법은 &lt;code&gt;&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb0f9f1a0972627a233df437e035ac38990c02d4" translate="yes" xml:space="preserve">
          <source>The most generic interface of the library is:</source>
          <target state="translated">라이브러리의 가장 일반적인 인터페이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8bc67b2fdf86b0e5b077a4ced35b62c16ee3c5c" translate="yes" xml:space="preserve">
          <source>The most likely situation is that &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt;&lt;/a&gt; buffers some data. &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; doesn't see the buffer. So &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt; can block when &lt;a href=&quot;openssl/buffering#method-i-readpartial&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt;&lt;/a&gt; doesn't block.</source>
          <target state="translated">가장 가능성이 높은 상황은 &lt;a href=&quot;openssl/ssl/sslsocket&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; &lt;/a&gt; 일부 데이터를 버퍼링하는 것입니다. &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 는 버퍼를 보지 못합니다. 따라서 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;openssl/buffering#method-i-readpartial&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt; &lt;/a&gt; 이 차단되지 않을 때 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e30fceab152fddcc3f16b0c48a5aa6a2a863d60" translate="yes" xml:space="preserve">
          <source>The most likely situation is that &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; buffers some data. &lt;code&gt;IO.select&lt;/code&gt; doesn't see the buffer. So &lt;code&gt;IO.select&lt;/code&gt; can block when &lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt; doesn't block.</source>
          <target state="translated">가장 일반적인 상황은 &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; 일부 데이터를 버퍼링하는 것입니다. &lt;code&gt;IO.select&lt;/code&gt; 에 버퍼가 표시되지 않습니다. 따라서 &lt;code&gt;OpenSSL::SSL::SSLSocket#readpartial&lt;/code&gt; 이 차단되지 않으면 &lt;code&gt;IO.select&lt;/code&gt; 가 차단 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc82f3d021b0c83c586e1487100b727ac71c1bf7" translate="yes" xml:space="preserve">
          <source>The most standard error types are subclasses of &lt;a href=&quot;standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt;. A rescue clause without an explicit &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class will rescue all StandardErrors (and only those).</source>
          <target state="translated">가장 표준적인 오류 유형은 &lt;a href=&quot;standarderror&quot;&gt; &lt;code&gt;StandardError&lt;/code&gt; 의&lt;/a&gt; 서브 클래스입니다 . 명시 적 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 클래스가 없는 구조 절 은 모든 StandardError (및 그 오류 만)를 구조합니다.</target>
        </trans-unit>
        <trans-unit id="82c18dff1fef598c8ab96e1ec31e726b5405e18d" translate="yes" xml:space="preserve">
          <source>The name of the Ruby implementation.</source>
          <target state="translated">Ruby 구현의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0d5fa1599fac5039119ead4b62b172ddb697cfe4" translate="yes" xml:space="preserve">
          <source>The name of the argument.</source>
          <target state="translated">인수의 이름</target>
        </trans-unit>
        <trans-unit id="b0ae9bfa50babdc16a8e158461a1823b0195f61d" translate="yes" xml:space="preserve">
          <source>The name of the command to be removed</source>
          <target state="translated">제거 할 명령의 이름</target>
        </trans-unit>
        <trans-unit id="291b19fab86bda0e4ebc8bd5177fd74c0bbcc729" translate="yes" xml:space="preserve">
          <source>The name of the context (block, method, class, module, etc.) that this instruction sequence belongs to.</source>
          <target state="translated">이 명령어 시퀀스가 ​​속한 컨텍스트 (블록, 메소드, 클래스, 모듈 등)의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="23ef5d977abc3446a411570403e682307f9244fa" translate="yes" xml:space="preserve">
          <source>The name of the cookie; in this form, there is no &lt;a href=&quot;cookie#attribute-i-domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; or expiration. The &lt;a href=&quot;cookie#attribute-i-path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; is gleaned from the &lt;code&gt;SCRIPT_NAME&lt;/code&gt; environment variable, and &lt;a href=&quot;cookie#attribute-i-secure&quot;&gt;&lt;code&gt;secure&lt;/code&gt;&lt;/a&gt; is false.</source>
          <target state="translated">쿠키의 이름 이 형식에서는 &lt;a href=&quot;cookie#attribute-i-domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt; 이나 만료 가 없습니다 . &lt;a href=&quot;cookie#attribute-i-path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; 로부터 수집되는 &lt;code&gt;SCRIPT_NAME&lt;/code&gt; 의 환경 변수, 그리고 &lt;a href=&quot;cookie#attribute-i-secure&quot;&gt; &lt;code&gt;secure&lt;/code&gt; &lt;/a&gt; false입니다.</target>
        </trans-unit>
        <trans-unit id="eb0b6919ccde61efcbd76e9ac59889238b6d797c" translate="yes" xml:space="preserve">
          <source>The name of the unknown thing.</source>
          <target state="translated">알려지지 않은 것의 이름.</target>
        </trans-unit>
        <trans-unit id="54b2e3344f685e74053621dc1bdb0ab94f2aa71e" translate="yes" xml:space="preserve">
          <source>The name of this &lt;a href=&quot;domainname&quot;&gt;&lt;code&gt;DomainName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;domainname&quot;&gt; &lt;code&gt;DomainName&lt;/code&gt; &lt;/a&gt; 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="a9721470964edf026e4e7586efba5ebf887ea33e" translate="yes" xml:space="preserve">
          <source>The name of this function</source>
          <target state="translated">이 기능의 이름</target>
        </trans-unit>
        <trans-unit id="0bbaf98de8d7d3835e4e308c361e1e93160da5d4" translate="yes" xml:space="preserve">
          <source>The name returned by &lt;a href=&quot;env#method-c-key&quot;&gt;&lt;code&gt;ENV.key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;env#method-c-key&quot;&gt; &lt;code&gt;ENV.key&lt;/code&gt; 에&lt;/a&gt; 의해 반환 된 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="4de4946bd58ac71a36ed0462a3435a27b6714ba8" translate="yes" xml:space="preserve">
          <source>The name set in &lt;a href=&quot;ractor#method-c-new&quot;&gt;&lt;code&gt;Ractor.new&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;ractor#method-c-new&quot;&gt; &lt;code&gt;Ractor.new&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 에 설정된 이름 .</target>
        </trans-unit>
        <trans-unit id="dd617b5e90ab7a0b455e82956f9198259876b2b3" translate="yes" xml:space="preserve">
          <source>The names of the &lt;code&gt;Errno::&lt;/code&gt; classes depend on the environment in which Ruby runs. On a typical Unix or Windows platform, there are &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt; classes such as Errno::EACCES, Errno::EAGAIN, Errno::EINTR, and so on.</source>
          <target state="translated">&lt;code&gt;Errno::&lt;/code&gt; 클래스 의 이름은 Ruby가 실행되는 환경에 따라 다릅니다. 일반적인 Unix 또는 Windows 플랫폼에는 Errno :: EACCES, Errno :: EAGAIN, Errno :: EINTR 등과 같은 &lt;a href=&quot;errno&quot;&gt; &lt;code&gt;Errno&lt;/code&gt; &lt;/a&gt; 클래스 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0456024604ae809c763b250c17ec95e11640cdc" translate="yes" xml:space="preserve">
          <source>The names of the &lt;code&gt;Errno::&lt;/code&gt; classes depend on the environment in which Ruby runs. On a typical Unix or Windows platform, there are &lt;code&gt;Errno&lt;/code&gt; classes such as &lt;code&gt;Errno::EACCES&lt;/code&gt;, &lt;code&gt;Errno::EAGAIN&lt;/code&gt;, &lt;code&gt;Errno::EINTR&lt;/code&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;Errno::&lt;/code&gt; 클래스 의 이름은 Ruby가 실행되는 환경에 따라 다릅니다. 일반적인 Unix 또는 Windows 플랫폼에는 &lt;code&gt;Errno::EACCES&lt;/code&gt; , &lt;code&gt;Errno::EAGAIN&lt;/code&gt; , &lt;code&gt;Errno::EINTR&lt;/code&gt; 등과 같은 &lt;code&gt;Errno&lt;/code&gt; 클래스 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1c6e46017f1669a6d11abd7d5dc08ab22aee261" translate="yes" xml:space="preserve">
          <source>The namespace to search for.</source>
          <target state="translated">검색 할 네임 스페이스입니다.</target>
        </trans-unit>
        <trans-unit id="9186e4b8da445d7871556732af9390315b56fe4a" translate="yes" xml:space="preserve">
          <source>The namespace/class given will have its options showed on the help usage. Check &lt;a href=&quot;group#method-c-invoke_from_option&quot;&gt;&lt;code&gt;invoke_from_option&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">제공된 네임 스페이스 / 클래스는 도움말 사용법에 대한 옵션이 표시됩니다. 자세한 정보는 &lt;a href=&quot;group#method-c-invoke_from_option&quot;&gt; &lt;code&gt;invoke_from_option&lt;/code&gt; &lt;/a&gt; 을 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="a396ec904a41f12b101a82ce0e3cae44658e3ab4" translate="yes" xml:space="preserve">
          <source>The nested objects may be instances of various classes. See &lt;a href=&quot;https://docs.ruby-lang.org/en/master/doc/dig_methods_rdoc.html&quot;&gt;Dig Methods&lt;/a&gt;.</source>
          <target state="translated">중첩 된 개체는 다양한 클래스의 인스턴스 일 수 있습니다. &lt;a href=&quot;https://docs.ruby-lang.org/en/master/doc/dig_methods_rdoc.html&quot;&gt;굴착 방법을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="901df1e0c1d95c96af85c355300dda402bfe351f" translate="yes" xml:space="preserve">
          <source>The net/pop library supports &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication. To use &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;Net::APOP&lt;/code&gt;&lt;/a&gt; class instead of the &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;Net::POP3&lt;/code&gt;&lt;/a&gt; class. You can use the utility method, &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;Net::POP3&lt;/code&gt;&lt;/a&gt;.APOP(). For example:</source>
          <target state="translated">net / pop 라이브러리는 &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 인증을 지원 합니다. &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 를 사용하려면 &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;Net::POP3&lt;/code&gt; &lt;/a&gt; 클래스 대신 &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;Net::APOP&lt;/code&gt; &lt;/a&gt; 클래스를 사용하십시오 . &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;Net::POP3&lt;/code&gt; &lt;/a&gt; .APOP () 유틸리티 메소드를 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ff1141f023e6ca3e2bd7058d06643e202d61ac87" translate="yes" xml:space="preserve">
          <source>The network broadcast address</source>
          <target state="translated">네트워크 브로드 캐스트 주소</target>
        </trans-unit>
        <trans-unit id="11f15c9d3abb3dbd8b6411fd566203e44bb8625c" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object is buffered mode (or non-sync mode), unless &lt;code&gt;filename&lt;/code&gt; is a tty. See &lt;a href=&quot;io#method-i-flush&quot;&gt;&lt;code&gt;IO#flush&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fsync&quot;&gt;&lt;code&gt;IO#fsync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fdatasync&quot;&gt;&lt;code&gt;IO#fdatasync&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;io#method-i-sync-3D&quot;&gt;&lt;code&gt;IO#sync=&lt;/code&gt;&lt;/a&gt; about sync mode.</source>
          <target state="translated">새 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체는 &lt;code&gt;filename&lt;/code&gt; 이 tty가 아닌 한 버퍼링 모드 (또는 비동기 모드) 입니다. 동기화 모드에 대해서는 &lt;a href=&quot;io#method-i-flush&quot;&gt; &lt;code&gt;IO#flush&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fsync&quot;&gt; &lt;code&gt;IO#fsync&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fdatasync&quot;&gt; &lt;code&gt;IO#fdatasync&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;io#method-i-sync-3D&quot;&gt; &lt;code&gt;IO#sync=&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="107eed62d3dd34fa4fc7ee9a22822d7f91f164e4" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object is buffered mode (or non-sync mode), unless &lt;code&gt;filename&lt;/code&gt; is a tty. See &lt;a href=&quot;io#method-i-flush&quot;&gt;&lt;code&gt;IO#flush&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fsync&quot;&gt;&lt;code&gt;IO#fsync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;io#method-i-fdatasync&quot;&gt;&lt;code&gt;IO#fdatasync&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;IO#sync=&lt;/code&gt; about sync mode.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 이 tty가 아닌 한 새 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체는 버퍼 모드 (또는 비동기 모드) 입니다. 동기화 모드에 대해서는 &lt;a href=&quot;io#method-i-flush&quot;&gt; &lt;code&gt;IO#flush&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fsync&quot;&gt; &lt;code&gt;IO#fsync&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io#method-i-fdatasync&quot;&gt; &lt;code&gt;IO#fdatasync&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;IO#sync=&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d694a0b3bcbbb027eed02e68fd12eed0c763e89" translate="yes" xml:space="preserve">
          <source>The new dRuby server will become the primary server, even if another server is currently the primary server.</source>
          <target state="translated">다른 서버가 현재 기본 서버 인 경우에도 새 dRuby 서버가 기본 서버가됩니다.</target>
        </trans-unit>
        <trans-unit id="9b71ceab6735600e06e0b313fc3f7b363bf96fbc" translate="yes" xml:space="preserve">
          <source>The next step is to create the end-entity certificate using the root CA certificate.</source>
          <target state="translated">다음 단계는 루트 CA 인증서를 사용하여 최종 엔티티 인증서를 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f210ce079d52d62cce9a7003c6d8a0786bddcac7" translate="yes" xml:space="preserve">
          <source>The nil itself.</source>
          <target state="translated">무 자체.</target>
        </trans-unit>
        <trans-unit id="ec5399075b05f3340270879f715c6d3b180b11d6" translate="yes" xml:space="preserve">
          <source>The nonce is used to prevent replay attacks but some servers do not support it.</source>
          <target state="translated">nonce는 재생 공격을 방지하는 데 사용되지만 일부 서버는이를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="57dff6886ca4feedded1bc4c406da385a133074e" translate="yes" xml:space="preserve">
          <source>The normal &lt;code&gt;require&lt;/code&gt; functionality of returning false if that file has already been loaded is preserved.</source>
          <target state="translated">파일이 이미로드 된 경우 일반적 으로 false를 반환 &lt;code&gt;require&lt;/code&gt; 기능이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="4470ba34138eea7d6a34f78cf9963f1177b2be63" translate="yes" xml:space="preserve">
          <source>The not_before and not_after fields must be filled in.</source>
          <target state="translated">not_before 및 not_after 필드를 채워야합니다.</target>
        </trans-unit>
        <trans-unit id="ef7b9b5379bcc525b031c437e0e03e12dc1237ef" translate="yes" xml:space="preserve">
          <source>The notifying class mixes in the &lt;code&gt;Observable&lt;/code&gt; module, which provides the methods for managing the associated observer objects.</source>
          <target state="translated">알림 클래스는 &lt;code&gt;Observable&lt;/code&gt; 모듈 에서 혼합되며 관련된 Observer 객체를 관리하기위한 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ceac4bcc0fb6ca38222b353f41ce522fa43ebe3f" translate="yes" xml:space="preserve">
          <source>The number of base digits for the &lt;code&gt;double&lt;/code&gt; data type.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 데이터 유형 의 기본 자릿수입니다 .</target>
        </trans-unit>
        <trans-unit id="3fdd2f0621d73b7205106501fc4775423e03cb0b" translate="yes" xml:space="preserve">
          <source>The number of bytes that are immediately available for reading.</source>
          <target state="translated">바로 읽을 수있는 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="ed18474c68ffa0e2882f64d2da641017af9c6c26" translate="yes" xml:space="preserve">
          <source>The number of combinations is the product of the sizes of all the arrays, including both &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other_arrays&lt;/code&gt;.</source>
          <target state="translated">조합 수는 &lt;code&gt;self&lt;/code&gt; 및 &lt;code&gt;other_arrays&lt;/code&gt; 를 포함하여 모든 배열 크기의 곱 입니다.</target>
        </trans-unit>
        <trans-unit id="e62c62ea352a6f6043fbb13199ed254de84e1fa7" translate="yes" xml:space="preserve">
          <source>The number of connections available on the stack.</source>
          <target state="translated">스택에서 사용 가능한 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="8b3467e9dfbf8934d0c263809fe99ff64f56a973" translate="yes" xml:space="preserve">
          <source>The number of elements in the tuple.</source>
          <target state="translated">튜플의 요소 수</target>
        </trans-unit>
        <trans-unit id="36425e9fd6284c7ea09d614b532ff3e8cfc58e72" translate="yes" xml:space="preserve">
          <source>The number of requests that should be made before opening a new connection. Typically many keep-alive capable servers tune this to 100 or less, so the 101st request will fail with ECONNRESET. If unset (default), this value has no effect, if set, connections will be reset on the request after max_requests.</source>
          <target state="translated">새 연결을 열기 전에해야 할 요청 수입니다. 일반적으로 많은 keep-alive 가능 서버가이를 100 이하로 조정하므로 101 번째 요청은 ECONNRESET으로 실패합니다. 설정되지 않은 경우 (기본값)이 값은 적용되지 않으며, 설정된 경우 max_requests 이후 요청에서 연결이 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ae02fb229b8b972161e37321ddc614f718debf20" translate="yes" xml:space="preserve">
          <source>The number of significant digits, as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. If omitted or 0, the number of significant digits is determined from the initial value.</source>
          <target state="translated">&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 유효 자릿수 입니다. 생략되거나 0이면 유효 숫자의 수가 초기 값에서 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="82b3107bf1393fb143bbe2676ab50e22da3b5f2e" translate="yes" xml:space="preserve">
          <source>The number of spaces to be indented</source>
          <target state="translated">들여 쓰기 할 공백의 수</target>
        </trans-unit>
        <trans-unit id="ce1dc4d9e3ef1e8c3a4d9bfdd2eb6e2b68547768" translate="yes" xml:space="preserve">
          <source>The number of the first source line where the instruction sequence was loaded from.</source>
          <target state="translated">명령어 시퀀스가로드 된 첫 번째 소스 라인의 번호입니다.</target>
        </trans-unit>
        <trans-unit id="1938d1f06ed1bf7fe16bfe633133a3c8be059b9e" translate="yes" xml:space="preserve">
          <source>The number of times &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; occurred.</source>
          <target state="translated">&lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt; 가 발생한 횟수</target>
        </trans-unit>
        <trans-unit id="c0779616dc1d6d6bbf0541b6f7c8ba03afe87401" translate="yes" xml:space="preserve">
          <source>The object the current method is attached to. See &lt;a href=&quot;syntax/methods_rdoc&quot;&gt;methods&lt;/a&gt;</source>
          <target state="translated">현재 메서드가 연결된 개체입니다. &lt;a href=&quot;syntax/methods_rdoc&quot;&gt;방법&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="3ae91720e7752e0f172ac1d1c6f8a7fc86c83b5c" translate="yes" xml:space="preserve">
          <source>The objspace library extends the &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; module and adds several methods to get internal statistic information about object/memory management.</source>
          <target state="translated">objspace 라이브러리는 ObjectSpace 모듈을 확장하고 &lt;a href=&quot;objectspace&quot;&gt; &lt;code&gt;ObjectSpace&lt;/code&gt; &lt;/a&gt; / 메모리 관리에 대한 내부 통계 정보를 얻기 위해 여러 메소드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="63cb0ac6d292de0a33b3cb29f2fd8e9b18bdbe63" translate="yes" xml:space="preserve">
          <source>The observable object must:</source>
          <target state="translated">관찰 가능한 객체는 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="1e6d225afa1abca8299e09e3fc9958795c42cc49" translate="yes" xml:space="preserve">
          <source>The offset also accepts string form:</source>
          <target state="translated">오프셋은 문자열 형식도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c9fb4d6b35fbdb480647be99b5fcab4f47709e11" translate="yes" xml:space="preserve">
          <source>The older syntax for Hash data uses the &amp;ldquo;hash rocket,&amp;rdquo; &lt;code&gt;=&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Hash 데이터에 대한 이전 구문은 &quot;hash rocket&quot; &lt;code&gt;=&amp;gt;&lt;/code&gt; 을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="47855f7ed510fced4896c5c2056b4e8861dfcb0c" translate="yes" xml:space="preserve">
          <source>The only exception is dynamic method definition: even if defined by passing a non-lambda proc, methods still have normal semantics of argument checking.</source>
          <target state="translated">단 하나의 예외는 동적 메소드 정의입니다. 람다가 아닌 proc을 전달하여 정의 된 경우에도 메소드에는 여전히 일반적인 인수 검사 의미론이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eed7f10c9a1c090abaa07243ca851a81d9d5701b" translate="yes" xml:space="preserve">
          <source>The only flag implemented in scanf for Ruby is '&lt;code&gt;*&lt;/code&gt;' (ignore upcoming conversion). Many of the flags available in C versions of scanf(3) have to do with the type of upcoming pointer arguments, and are meaningless in Ruby.</source>
          <target state="translated">Ruby의 scanf에서 구현 된 유일한 플래그는 ' &lt;code&gt;*&lt;/code&gt; '(다가오는 변환 무시)입니다. C 버전의 scanf (3)에서 사용할 수있는 많은 플래그는 다가오는 포인터 인수 유형과 관련이 있으며 Ruby에서는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="973e01594d2449daae48c68e722c7b946c07b8db" translate="yes" xml:space="preserve">
          <source>The opened &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object will be returned. If &lt;em&gt;read_only&lt;/em&gt; is true, and the file does not exist, then nil will be returned.</source>
          <target state="translated">열린 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체가 반환됩니다. 경우 &lt;em&gt;READ_ONLY&lt;/em&gt; 사실이며, 파일이 존재하지 않는, 다음 반환됩니다 NIL.</target>
        </trans-unit>
        <trans-unit id="73492dd8ad490c734fb87cbd087cceb7d94d7844" translate="yes" xml:space="preserve">
          <source>The opened file has several getter methods for its meta-information, as follows, since it is extended by &lt;a href=&quot;openuri/meta&quot;&gt;&lt;code&gt;OpenURI::Meta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">열린 파일에는 &lt;a href=&quot;openuri/meta&quot;&gt; &lt;code&gt;OpenURI::Meta&lt;/code&gt; &lt;/a&gt; 의해 확장되므로 다음과 같이 메타 정보에 대한 몇 가지 getter 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff277050cec24f281a96774a298e0c77b3f32df9" translate="yes" xml:space="preserve">
          <source>The opposite of &lt;a href=&quot;pathname#method-i-absolute-3F&quot;&gt;&lt;code&gt;Pathname#absolute?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pathname#method-i-absolute-3F&quot;&gt; &lt;code&gt;Pathname#absolute?&lt;/code&gt; &lt;/a&gt; 의 반대 ?</target>
        </trans-unit>
        <trans-unit id="e79b14349ce3cb8e8057e916c8b9c9120fa29144" translate="yes" xml:space="preserve">
          <source>The option name is always converted to the first (preferred) name given in the original options to &lt;a href=&quot;getoptlong#method-c-new&quot;&gt;&lt;code&gt;GetoptLong.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">옵션 이름은 항상 원래 옵션에 지정된 첫 번째 (선호 한) 이름으로 &lt;a href=&quot;getoptlong#method-c-new&quot;&gt; &lt;code&gt;GetoptLong.new&lt;/code&gt; &lt;/a&gt; 로 변환 됩니다.</target>
        </trans-unit>
        <trans-unit id="3d387ec735ccfc047f61b72b5d075d0deaacd7ac" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;base&lt;/code&gt; keyword argument specifies the base directory for interpreting relative pathnames instead of the current working directory. As the results are not prefixed with the base directory name in this case, you will need to prepend the base directory name if you want real paths.</source>
          <target state="translated">선택적 &lt;code&gt;base&lt;/code&gt; 키워드 인수는 현재 작업 디렉토리 대신 상대 경로 이름을 해석하기위한 기본 디렉토리를 지정합니다. 이 경우 결과에 기본 디렉토리 이름이 접두어로 표시되지 않으므로 실제 경로를 원할 경우 기본 디렉토리 이름을 앞에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4e24c4a7df1edcf3504bd1279dca8922ab94496" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;dest&lt;/code&gt; argument is obsolete.</source>
          <target state="translated">선택적 &lt;code&gt;dest&lt;/code&gt; 인수는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65a9803a3f8a4f84c11df6cf0c0185f0e9ece281" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;half&lt;/code&gt; keyword argument is available similar to &lt;a href=&quot;float#method-i-round&quot;&gt;&lt;code&gt;Float#round&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;half&lt;/code&gt; 키워드 인수는 &lt;a href=&quot;float#method-i-round&quot;&gt; &lt;code&gt;Float#round&lt;/code&gt; &lt;/a&gt; 와 유사하게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6d17d93ec3f386da4bb8ba74d7af741a6343779" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;hash&lt;/code&gt;, if given, will generate attributes and values (can be a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;openstruct&quot;&gt;&lt;code&gt;OpenStruct&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;). For example:</source>
          <target state="translated">선택적인 &lt;code&gt;hash&lt;/code&gt; 는 주어진 경우 속성과 값을 생성합니다 ( &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;openstruct&quot;&gt; &lt;code&gt;OpenStruct&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; 일 수 있음&lt;/a&gt; ). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e2aa843cec8cd465fd68e3b571e24d53550b234" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;header_row&lt;/code&gt; parameter can be set to &lt;code&gt;true&lt;/code&gt; to indicate, via &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt;&lt;code&gt;CSV::Row.header_row?()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt;&lt;code&gt;CSV::Row.field_row?()&lt;/code&gt;&lt;/a&gt;, that this is a header row. Otherwise, the row assumes to be a field row.</source>
          <target state="translated">선택적 &lt;code&gt;header_row&lt;/code&gt; 매개 변수를 &lt;code&gt;true&lt;/code&gt; 로 설정하여 &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt; &lt;code&gt;CSV::Row.header_row?()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt; &lt;code&gt;CSV::Row.field_row?()&lt;/code&gt; &lt;/a&gt; 를 통해 이것이 헤더 행 임을 나타낼 수 있습니다 . 그렇지 않으면 행은 필드 행이라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="81790be8c3cda35716e6a222bf384cae5a7b3fe9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;header_row&lt;/code&gt; parameter can be set to &lt;code&gt;true&lt;/code&gt; to indicate, via &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt;&lt;code&gt;CSV::Row.header_row?()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt;&lt;code&gt;CSV::Row.field_row?()&lt;/code&gt;&lt;/a&gt;, that this is a header row. Otherwise, the row is assumes to be a field row.</source>
          <target state="translated">선택적 &lt;code&gt;header_row&lt;/code&gt; 매개 변수는 &lt;a href=&quot;row#method-i-header_row-3F&quot;&gt; &lt;code&gt;CSV::Row.header_row?()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;row#method-i-field_row-3F&quot;&gt; &lt;code&gt;CSV::Row.field_row?()&lt;/code&gt; &lt;/a&gt; 를 통해 이것이 헤더 행 임을 나타내 도록 &lt;code&gt;true&lt;/code&gt; 로 설정할 수 있습니다 . 그렇지 않으면 행은 필드 행인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="6fc88394a3b14b21fea6a06c9b285beafb74f5b9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;headers&lt;/code&gt; parameter can be set to &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of headers. If headers aren't set, headers are fetched from &lt;a href=&quot;row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; objects. Otherwise, headers() method will return headers being set in headers argument.</source>
          <target state="translated">선택적 &lt;code&gt;headers&lt;/code&gt; 매개 변수는 헤더 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로 설정할 수 있습니다 . 헤더를 설정하지 않으면 &lt;a href=&quot;row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; 객체 에서 헤더를 가져옵니다 . 그렇지 않으면 headers () 메서드는 headers 인수에 설정된 헤더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c65b70d91fdef6e6e2554b1bf564b476d1f8672e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;isapop&lt;/code&gt; specifies whether this connection is going to use &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication; it defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;isapop&lt;/code&gt; 은이 연결이 &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 인증 을 사용할지 여부를 지정합니다 . 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3075efc2ab24b71b70768911ce0e17636a66c3dc" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;level&lt;/code&gt; argument determines the level of recursion to flatten.</source>
          <target state="translated">선택적 &lt;code&gt;level&lt;/code&gt; 인수는 평탄화 할 재귀 레벨을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a1bab4f317892f92325571c645ad1584f2f4a30e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;pattern&lt;/code&gt; parameter is a pattern or a string. Only input strings that match the pattern or start with the string are included in the output hash.</source>
          <target state="translated">선택적 &lt;code&gt;pattern&lt;/code&gt; 매개 변수는 패턴 또는 문자열입니다. 패턴과 일치하거나 문자열로 시작하는 입력 문자열 만 출력 해시에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="472faf5c04e9c6ed82bf3bd6272112984517e71b" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;port&lt;/code&gt; is the port to connect to.</source>
          <target state="translated">옵션 &lt;code&gt;port&lt;/code&gt; 는 연결할 포트입니다.</target>
        </trans-unit>
        <trans-unit id="dac240693a66dd542613804103acd59ec7ec0826" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;random&lt;/code&gt; argument will be used as the random number generator:</source>
          <target state="translated">선택적 &lt;code&gt;random&lt;/code&gt; 인수는 난수 생성기로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e76afc72a063acaa00fef0ed93bc3551db4fc697" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;rng&lt;/code&gt; argument will be used as the random number generator.</source>
          <target state="translated">선택적인 &lt;code&gt;rng&lt;/code&gt; 인수는 난수 생성기로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="131e5aa959a2f5094455e26eea2eb80dd2718de6" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;arity&lt;/em&gt; argument should be supplied when currying methods with variable arguments to determine how many arguments are needed before the method is called.</source>
          <target state="translated">선택적 &lt;em&gt;arity&lt;/em&gt; 인수는 변수 인수가있는 메소드를 카레 할 때 메소드가 호출되기 전에 필요한 인수 수를 판별 할 때 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a5300b5539da14c679018e34f0fae367df2c78a2" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;capacity&lt;/em&gt; keyword argument specifies the size of the internal buffer. This may improve performance, when the string will be concatenated many times (causing many realloc calls).</source>
          <target state="translated">선택적 &lt;em&gt;capacity&lt;/em&gt; 키워드 인수는 내부 버퍼의 크기를 지정합니다. 이렇게하면 문자열이 여러 번 연결되어 많은 realloc 호출이 발생하는 경우 성능이 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca55fff9634b4fc6f0c9b00958c2e4370761459c" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; keyword argument specifies the encoding of the directory. If not specified, the filesystem encoding is used.</source>
          <target state="translated">선택적 &lt;em&gt;encoding&lt;/em&gt; 키워드 인수는 디렉토리의 인코딩을 지정합니다. 지정하지 않으면 파일 시스템 인코딩이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2c80c9c55500c28a3dd9bbd39b98dc563e61fa40" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;encoding&lt;/em&gt; keyword argument specifies the encoding of the new string. If not specified, the encoding of &lt;em&gt;str&lt;/em&gt; is used (or ASCII-8BIT, if &lt;em&gt;str&lt;/em&gt; is not specified).</source>
          <target state="translated">선택적 &lt;em&gt;encoding&lt;/em&gt; 키워드 인수는 새 문자열의 인코딩을 지정합니다. 지정하지 않으면 &lt;em&gt;str&lt;/em&gt; 의 인코딩 이 사용됩니다 (또는 &lt;em&gt;str&lt;/em&gt; 이 지정되지 않은 경우 ASCII-8BIT ).</target>
        </trans-unit>
        <trans-unit id="7b0f8bc6f973fbc2eedfb8dec7ea760e4337a5d1" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;filename&lt;/em&gt; argument passed to &lt;a href=&quot;kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; code is run</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 코드가 실행될 때 &lt;a href=&quot;kernel#method-i-eval&quot;&gt; &lt;code&gt;Kernel#eval&lt;/code&gt; 에&lt;/a&gt; 전달 된 선택적 &lt;em&gt;파일 이름&lt;/em&gt; 인수</target>
        </trans-unit>
        <trans-unit id="f647974208a0bed8a2421a99493d5f7bd5dc9929" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;limit&lt;/em&gt; argument specifies how many characters of each line to return. By default all characters are returned.</source>
          <target state="translated">선택적인 &lt;em&gt;limit&lt;/em&gt; 인수는 반환 할 각 줄의 문자 수를 지정합니다. 기본적으로 모든 문자가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="41be43f2f70feda6306bb88681e847b3590d99be" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;lineno&lt;/em&gt; argument passed to &lt;a href=&quot;kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; code is run</source>
          <target state="translated">&lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; &lt;/a&gt; 코드가 실행될 때 &lt;a href=&quot;kernel#method-i-eval&quot;&gt; &lt;code&gt;Kernel#eval&lt;/code&gt; 에&lt;/a&gt; 전달 되는 선택적 &lt;em&gt;lineno&lt;/em&gt; 인수</target>
        </trans-unit>
        <trans-unit id="b729a103111267d94266dac8e4cf5f77b840e72a" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;start&lt;/em&gt; parameter determines the number of initial stack entries to omit from the top of the stack.</source>
          <target state="translated">선택적인 &lt;em&gt;start&lt;/em&gt; 매개 변수는 스택 맨 위에서 생략 할 초기 스택 항목 수를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="21a13cb6c1fb37363ab27e3e4453e9ffa9fe37c0" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;em&gt;opts&lt;/em&gt; is options represented by a hash. &lt;em&gt;opts&lt;/em&gt; may have following options:</source>
          <target state="translated">선택적 인수 &lt;em&gt;opts&lt;/em&gt; 는 해시로 표시되는 옵션입니다. &lt;em&gt;opts&lt;/em&gt; 에는 다음 옵션이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b2067bdbaf8bf43d6e1a1a6a29174e3c9cad12" translate="yes" xml:space="preserve">
          <source>The optional keyword parameters &lt;em&gt;loc&lt;/em&gt; and &lt;em&gt;set&lt;/em&gt; specify where to insert the new attribute. Refer to the manpage of X509_NAME_add_entry(3) for details. &lt;em&gt;loc&lt;/em&gt; defaults to -1 and &lt;em&gt;set&lt;/em&gt; defaults to 0. This appends a single-valued RDN to the end.</source>
          <target state="translated">선택적 키워드 매개 변수 &lt;em&gt;loc&lt;/em&gt; 및 &lt;em&gt;set&lt;/em&gt; 은 새 속성을 삽입 할 위치를 지정합니다. 자세한 내용은 X509_NAME_add_entry (3) 맨 페이지를 참조하십시오. &lt;em&gt;LOC는&lt;/em&gt; -1 기본값과 &lt;em&gt;설정&lt;/em&gt; 이 마지막에 단일 값 RDN을 추가 0으로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d096dd2ed050ee99a797f64e7dcba1d08bc070d6" translate="yes" xml:space="preserve">
          <source>The optional last argument &lt;em&gt;opts&lt;/em&gt; is options represented by a hash. &lt;em&gt;opts&lt;/em&gt; may have following options:</source>
          <target state="translated">선택적인 마지막 인수 &lt;em&gt;opts&lt;/em&gt; 는 해시로 표시되는 옵션입니다. &lt;em&gt;opts&lt;/em&gt; 에는 다음 옵션이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28c102809ad7f40a86ee774113fe18f69a9d4d1f" translate="yes" xml:space="preserve">
          <source>The optional parameter can be used to specify how to calculate the size in a lazy fashion (see &lt;a href=&quot;enumerator#method-i-size&quot;&gt;&lt;code&gt;Enumerator#size&lt;/code&gt;&lt;/a&gt;). It can either be a value or a callable object.</source>
          <target state="translated">선택적 매개 변수를 사용하여 느리게 크기를 계산하는 방법을 지정할 수 있습니다 ( &lt;a href=&quot;enumerator#method-i-size&quot;&gt; &lt;code&gt;Enumerator#size&lt;/code&gt; &lt;/a&gt; 참조 ). 값이거나 호출 가능한 객체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78c99fe80f67c49eec06dcb2f904bd2b56c13548" translate="yes" xml:space="preserve">
          <source>The optional parameter s consists of either an integer; or an optional '+' or ' ', followed by an optional number, followed by an optional 'E' or 'F'.</source>
          <target state="translated">선택적 매개 변수 s는 정수로 구성됩니다. 또는 선택적인 '+'또는 '', 그 뒤에 선택적인 숫자, 선택적인 'E'또는 'F'.</target>
        </trans-unit>
        <trans-unit id="8c8ab6a8f4ceb3ba7df2334bb03789a66826c492" translate="yes" xml:space="preserve">
          <source>The optional timeout parameter defines, in seconds, the total time to wait for the pattern. If the timeout expires or eof is found, nil is returned or yielded. However, the buffer in a timeout session is kept for the next expect call. The default timeout is 9999999 seconds.</source>
          <target state="translated">선택적 시간 종료 매개 변수는 패턴을 기다리는 총 시간을 초 단위로 정의합니다. 시간 초과가 만료되거나 eof가 발견되면 nil이 반환되거나 생성됩니다. 그러나 시간 종료 세션의 버퍼는 다음 예상 호출에 대해 유지됩니다. 기본 시간 초과는 9999999 초입니다.</target>
        </trans-unit>
        <trans-unit id="6ae8fa51f2e48e0f267991f3c1a1ea62da888b36" translate="yes" xml:space="preserve">
          <source>The options below give you various choices, in more or less increasing complexity.</source>
          <target state="translated">아래 옵션은 점점 더 복잡 해지는 다양한 선택을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7dce28310a689d881778bd6f3a373eeb6d0df21b" translate="yes" xml:space="preserve">
          <source>The options hash accepts the following keys:</source>
          <target state="translated">옵션 해시는 다음 키를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e8734aeabd6d1836446322aff4d31a0ab99ed976" translate="yes" xml:space="preserve">
          <source>The options to pass to &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt; are constructed by merging &lt;code&gt;opts&lt;/code&gt;, the last hash element of the array, and specifications for the pipes between each of the commands.</source>
          <target state="translated">&lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;Process.spawn&lt;/code&gt; &lt;/a&gt; 에 전달할 옵션 은 &lt;code&gt;opts&lt;/code&gt; , 배열의 마지막 해시 요소 및 각 명령 사이의 파이프 사양을 병합하여 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="37ad8576203826a94c70eaf7a2d72b8626e108a9" translate="yes" xml:space="preserve">
          <source>The options to support are passed to new() as an array of arrays. Each sub-array contains any number of &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; option names which carry the same meaning, and one of the following flags:</source>
          <target state="translated">지원하는 옵션은 배열의 배열로 new ()에 전달됩니다. 각 하위 배열에는 동일한 의미를 갖는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 옵션 이름과 다음 플래그 중 하나가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="70969b16d15f8f2eaa631d12bd961f72469a242c" translate="yes" xml:space="preserve">
          <source>The options used when no overrides are given by calling code. They are:</source>
          <target state="translated">코드를 호출하여 재정의가 없을 때 사용되는 옵션입니다. 그들은:</target>
        </trans-unit>
        <trans-unit id="5e8d2d2eaae95321183809d2d8c2fb4b167c99e0" translate="yes" xml:space="preserve">
          <source>The order in which environment variables are examined is OS-dependent. See &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;About Ordering&lt;/a&gt;.</source>
          <target state="translated">환경 변수를 검사하는 순서는 OS에 따라 다릅니다. &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;주문 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="314c6e78f7ae97836a7f20cd8bbd80e461cef7ca" translate="yes" xml:space="preserve">
          <source>The order in which values are removed/returned is not guaranteed.</source>
          <target state="translated">값이 제거 / 반환되는 순서는 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfeb8e3c6c2bfee0268b7a962df18119dfcbcfe5" translate="yes" xml:space="preserve">
          <source>The order of the names is OS-dependent. See &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;About Ordering&lt;/a&gt;.</source>
          <target state="translated">이름의 순서는 OS에 따라 다릅니다. &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;주문 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7fd65505a06fd4e32f25cfedf560fc29a0671c9d" translate="yes" xml:space="preserve">
          <source>The order of the returned combinations is indeterminate.</source>
          <target state="translated">반환 된 조합의 순서는 불확실합니다.</target>
        </trans-unit>
        <trans-unit id="97f752b00f776ce24ec5e9d2ab2d0fa07bb13cd4" translate="yes" xml:space="preserve">
          <source>The order of the values is OS-dependent. See &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;About Ordering&lt;/a&gt;.</source>
          <target state="translated">값의 순서는 OS에 따라 다릅니다. &lt;a href=&quot;#class-ENV-label-About+Ordering&quot;&gt;주문 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="002e5c106dc68243e96e727181899a4921c8cefe" translate="yes" xml:space="preserve">
          <source>The orders of each hashes are not compared.</source>
          <target state="translated">각 해시의 순서는 비교되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d7da42f4ed0859719b7607e12bc2d9ccdac1712" translate="yes" xml:space="preserve">
          <source>The ordinal date is a particular day of a calendar year identified by its ordinal number within the year.</source>
          <target state="translated">서수 날짜는 연도의 서수로 식별되는 달력 연도의 특정 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="f11dd76de683de980b8499851a5fbe8756a37d23" translate="yes" xml:space="preserve">
          <source>The orientation of the hemisphere as 'lat' or 'lon'</source>
          <target state="translated">'lat'또는 'lon'으로 반구의 방향</target>
        </trans-unit>
        <trans-unit id="a2ab1ed878e01d1947d161bdaecabb5b3b91e07a" translate="yes" xml:space="preserve">
          <source>The origin (zero) of the returned value varies. For example, system start up time, process start up time, the Epoch, etc.</source>
          <target state="translated">반환 된 값의 원점 (0)은 다릅니다. 예를 들어, 시스템 시작 시간, 프로세스 시작 시간, Epoch 등</target>
        </trans-unit>
        <trans-unit id="cecc355844073554de9abb2efca293d3d93ca31f" translate="yes" xml:space="preserve">
          <source>The origin in &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt; is defined as the Epoch (1970-01-01 00:00:00 UTC). But some systems count leap seconds and others doesn't. So the result can be interpreted differently across systems. &lt;a href=&quot;time#method-c-now&quot;&gt;&lt;code&gt;Time.now&lt;/code&gt;&lt;/a&gt; is recommended over &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; &lt;/a&gt; 의 원점 은 Epoch (1970-01-01 00:00:00 UTC)로 정의됩니다. 그러나 일부 시스템은 윤초를 계산하지만 다른 시스템은 그렇지 않습니다. 따라서 결과는 시스템마다 다르게 해석 될 수 있습니다. &lt;a href=&quot;time#method-c-now&quot;&gt; &lt;code&gt;Time.now&lt;/code&gt; 는&lt;/a&gt; 이상 권장 &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62461d5f0665c945266ef16a9f39ecbe2da18d0e" translate="yes" xml:space="preserve">
          <source>The original ndbm library is released in 4.3BSD. It is based on dbm library in Unix Version 7 but has different API to support multiple databases in a process.</source>
          <target state="translated">원래 ndbm 라이브러리는 4.3BSD로 릴리스되었습니다. Unix 버전 7의 dbm 라이브러리를 기반으로하지만 프로세스에서 여러 데이터베이스를 지원하는 API가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4427decdd689644cd2edb0acc4e3b3dc2d2be001" translate="yes" xml:space="preserve">
          <source>The other way to use a &lt;code&gt;case&lt;/code&gt; expression is like an if-elsif expression:</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 표현식 을 사용하는 다른 방법 은 if-elsif 표현식과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8720e82814b430fdc78ad1251f49511d9f6846aa" translate="yes" xml:space="preserve">
          <source>The outer Array is the entire &amp;ldquo;table&amp;rdquo;.</source>
          <target state="translated">외부 배열은 전체 &quot;테이블&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ab6cc0135e77f62a28ff31167c49845fcae4028e" translate="yes" xml:space="preserve">
          <source>The output field separator for &lt;a href=&quot;kernel#method-i-print&quot;&gt;&lt;code&gt;Kernel#print&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-join&quot;&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/a&gt;. Non-nil $, will be deprecated.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-print&quot;&gt; &lt;code&gt;Kernel#print&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;array#method-i-join&quot;&gt; &lt;code&gt;Array#join&lt;/code&gt; &lt;/a&gt; 의 출력 필드 구분 기호입니다 . nil이 아닌 $는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bd60afe566be233ecdea712c2674beeade9f8624" translate="yes" xml:space="preserve">
          <source>The output field separator for the print and &lt;a href=&quot;array#method-i-join&quot;&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">print 및 &lt;a href=&quot;array#method-i-join&quot;&gt; &lt;code&gt;Array#join&lt;/code&gt; &lt;/a&gt; 의 출력 필드 구분 기호입니다 .</target>
        </trans-unit>
        <trans-unit id="606d68c5b237f3fb1b8a05b28df849650e963e57" translate="yes" xml:space="preserve">
          <source>The output length in octets. Must be &amp;lt;= &lt;code&gt;255 * HashLen&lt;/code&gt;, where HashLen is the length of the hash function output in octets.</source>
          <target state="translated">옥텟 단위의 출력 길이입니다. &amp;lt;= &lt;code&gt;255 * HashLen&lt;/code&gt; 이어야합니다 . 여기서 HashLen은 해시 함수 출력의 길이 (옥텟)입니다.</target>
        </trans-unit>
        <trans-unit id="db5fba97ffcc2a99eabad272993917978968a191" translate="yes" xml:space="preserve">
          <source>The output object.</source>
          <target state="translated">출력 객체.</target>
        </trans-unit>
        <trans-unit id="ce37fb87591ca50e11c1728f078062d6f6e1c25b" translate="yes" xml:space="preserve">
          <source>The output record separator for &lt;a href=&quot;kernel#method-i-print&quot;&gt;&lt;code&gt;Kernel#print&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt;. Default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-print&quot;&gt; &lt;code&gt;Kernel#print&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;IO#write&lt;/code&gt; &lt;/a&gt; 의 출력 레코드 구분 기호입니다 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="01b3f74916316ba798b87a2bb4ca5700f74b895f" translate="yes" xml:space="preserve">
          <source>The output record separator for the print and &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt;. Default is nil.</source>
          <target state="translated">인쇄 및 &lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;IO#write&lt;/code&gt; &lt;/a&gt; 의 출력 레코드 구분 기호입니다 . 기본값은 nil입니다.</target>
        </trans-unit>
        <trans-unit id="eb4f21721d9f5b3fa188e1f0a3ddffaf60e652ab" translate="yes" xml:space="preserve">
          <source>The output stream must be open for writing.</source>
          <target state="translated">쓰기를 위해 출력 스트림이 열려 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="fa27f1011fa02d3e014431080b14e689a3a43b12" translate="yes" xml:space="preserve">
          <source>The padding character is optional. This method accepts both correctly-padded and unpadded input. Note that it still rejects incorrectly-padded input.</source>
          <target state="translated">패딩 문자는 선택 사항입니다. 이 방법은 올바르게 채워진 입력과 채워지지 않은 입력을 모두 허용합니다. 여전히 잘못 입력 된 입력을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="75887f73f237bd9e6adc753f06a8bf975aae48e7" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;min&lt;/code&gt; specifies the minimum number of bytes that should be received when a read operation is performed. (default: 1)</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 매개 변수 는 읽기 작업을 수행 할 때 수신해야하는 최소 바이트 수를 지정합니다. (기본값 : 1)</target>
        </trans-unit>
        <trans-unit id="357a20699c2ab7e10cd50bd2e2273fd31b21fd2c" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;time&lt;/code&gt; specifies the timeout in &lt;em&gt;seconds&lt;/em&gt; with a precision of 1/10 of a second. (default: 0)</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 매개 변수 는 1/10 &lt;em&gt;초의&lt;/em&gt; 정밀도로 제한 시간을 &lt;em&gt;초 단위&lt;/em&gt; 로 지정합니다 . (기본값 : 0)</target>
        </trans-unit>
        <trans-unit id="44a14d66e6ce54fa3c1ed0bc0f15ca47a6fed218" translate="yes" xml:space="preserve">
          <source>The parameters env, cmd, and opts are passed to &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt;. A commandline string and a list of argument strings can be accepted as follows:</source>
          <target state="translated">env, cmd 및 opts 매개 변수는 &lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;Process.spawn&lt;/code&gt; &lt;/a&gt; 으로 전달됩니다 . 명령 행 문자열과 인수 문자열 목록은 다음과 같이 승인 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="984c9c424075336fc05edea0c43b3e3064a534a0" translate="yes" xml:space="preserve">
          <source>The parent class for all constructed encodings. The &lt;em&gt;value&lt;/em&gt; attribute of a &lt;a href=&quot;constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; is always an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. Attributes are the same as for &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;, with the addition of &lt;em&gt;tagging&lt;/em&gt;.</source>
          <target state="translated">구성된 모든 인코딩의 부모 클래스입니다. &lt;a href=&quot;constructive&quot;&gt; &lt;code&gt;Constructive&lt;/code&gt; &lt;/a&gt; 의 &lt;em&gt;value&lt;/em&gt; 속성 은 항상 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 입니다. 속성은 &lt;em&gt;태그&lt;/em&gt; 가 추가 된 &lt;a href=&quot;asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2421ee38537c97af8b88ff919b091a13c2e509a5" translate="yes" xml:space="preserve">
          <source>The parent class for all primitive encodings. Attributes are the same as for &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;, with the addition of &lt;em&gt;tagging&lt;/em&gt;. &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; values can never be encoded with indefinite length form, thus it is not possible to set the &lt;em&gt;indefinite_length&lt;/em&gt; attribute for &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; and its sub-classes.</source>
          <target state="translated">모든 프리미티브 인코딩의 부모 클래스 속성은 &lt;em&gt;태그&lt;/em&gt; 가 추가 된 &lt;a href=&quot;asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 와 동일 합니다. &lt;a href=&quot;primitive&quot;&gt; &lt;code&gt;Primitive&lt;/code&gt; &lt;/a&gt; 값은 무한 길이 형식으로 인코딩 될 수 없으므로 &lt;a href=&quot;primitive&quot;&gt; &lt;code&gt;Primitive&lt;/code&gt; &lt;/a&gt; 및 해당 서브 클래스에 대해 &lt;em&gt;indefinite_length&lt;/em&gt; 속성 을 설정할 수 없습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09d92b53bd3fab58debf5bf8cd2215ec425269aa" translate="yes" xml:space="preserve">
          <source>The parent process should use &lt;a href=&quot;process#method-c-wait&quot;&gt;&lt;code&gt;Process.wait&lt;/code&gt;&lt;/a&gt; to collect the termination status of its child or use &lt;a href=&quot;process#method-c-detach&quot;&gt;&lt;code&gt;Process.detach&lt;/code&gt;&lt;/a&gt; to register disinterest in their status; otherwise, the operating system may accumulate zombie processes.</source>
          <target state="translated">부모 프로세스는 &lt;a href=&quot;process#method-c-wait&quot;&gt; &lt;code&gt;Process.wait&lt;/code&gt; &lt;/a&gt; 를 사용 하여 자식의 종료 상태를 수집하거나 &lt;a href=&quot;process#method-c-detach&quot;&gt; &lt;code&gt;Process.detach&lt;/code&gt; &lt;/a&gt; 를 사용 하여 상태에 무관심을 등록해야합니다. 그렇지 않으면 운영 체제에 좀비 프로세스가 누적 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1db0666f5ad99ea1666b262aa4e7925c9593721" translate="yes" xml:space="preserve">
          <source>The parent process should use &lt;code&gt;Process.wait&lt;/code&gt; to collect the termination status of its child or use &lt;code&gt;Process.detach&lt;/code&gt; to register disinterest in their status; otherwise, the operating system may accumulate zombie processes.</source>
          <target state="translated">부모 프로세스는 &lt;code&gt;Process.wait&lt;/code&gt; 를 사용 하여 자식의 종료 상태를 수집하거나 &lt;code&gt;Process.detach&lt;/code&gt; 를 사용 하여 무관심 상태를 등록해야합니다. 그렇지 않으면 운영 체제가 좀비 프로세스를 축적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b29b9bcbac559c5a2ac01ebd4c67e6adef64fc4" translate="yes" xml:space="preserve">
          <source>The parentheses around the arguments are optional:</source>
          <target state="translated">인수 주위의 괄호는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="93fd9ee216f7411448146467a3991adbfce6523e" translate="yes" xml:space="preserve">
          <source>The passed-in no-argument block is ignored.</source>
          <target state="translated">전달 된 인수 없음 블록은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="717a943aad2e85afe177950af6e392095a4e2314" translate="yes" xml:space="preserve">
          <source>The passphrase.</source>
          <target state="translated">암호.</target>
        </trans-unit>
        <trans-unit id="36ad0ec3f230a74aef14a1e2b135afa11748860e" translate="yes" xml:space="preserve">
          <source>The password of the proxy server, if one is configured.</source>
          <target state="translated">프록시 서버의 비밀번호입니다 (구성된 경우).</target>
        </trans-unit>
        <trans-unit id="199ef13802bff19d5662de72417a6e1852d5057f" translate="yes" xml:space="preserve">
          <source>The patchlevel for this Ruby. If this is a development build of Ruby the patchlevel will be -1.</source>
          <target state="translated">이 Ruby의 패치 레벨입니다. 이것이 Ruby의 개발 빌드 인 경우 패치 레벨은 -1이됩니다.</target>
        </trans-unit>
        <trans-unit id="962c144dd7fb32568d65124cc161b986468b51a2" translate="yes" xml:space="preserve">
          <source>The patchlevel for this ruby. If this is a development build of ruby the patchlevel will be -1</source>
          <target state="translated">이 루비의 패치 레벨. 이것이 루비의 개발 빌드 인 경우 패치 레벨은 -1입니다.</target>
        </trans-unit>
        <trans-unit id="1c9e53195e8260ff6351b9954e0dc42dfeb84857" translate="yes" xml:space="preserve">
          <source>The path to a directory containing CA certificates in PEM format.</source>
          <target state="translated">PEM 형식의 CA 인증서가 포함 된 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="adbcd61bd7af976b48b5fae144eea5c44e167a97" translate="yes" xml:space="preserve">
          <source>The path to a file containing a PEM-format CA certificate</source>
          <target state="translated">PEM 형식 CA 인증서가 포함 된 파일의 경로</target>
        </trans-unit>
        <trans-unit id="3a6485ffbdf19c45e5569b5628b2d2db1f4518a8" translate="yes" xml:space="preserve">
          <source>The path to the current file.</source>
          <target state="translated">현재 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="8375923faef191dece8acf1701590c13e9684a42" translate="yes" xml:space="preserve">
          <source>The path to the file to execute. Can be a web address or a relative path from the source root.</source>
          <target state="translated">실행할 파일의 경로입니다. 소스 주소의 웹 주소 또는 상대 경로 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5472bd33d08fff9c6812fb6b85abcf9cdbee52eb" translate="yes" xml:space="preserve">
          <source>The pathname depends on the Operating System: Unix, Windows, etc. This library works with pathnames of local OS, however non-Unix pathnames are supported experimentally.</source>
          <target state="translated">경로 이름은 운영 체제 : Unix, Windows 등에 따라 다릅니다.이 라이브러리는 로컬 OS의 경로 이름과 함께 작동하지만 비 유닉스 경로 이름은 실험적으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="2091a74367379fde3cb0ec94a4b35cfd2e69f147" translate="yes" xml:space="preserve">
          <source>The pathname may not point to the file corresponding to &lt;em&gt;file&lt;/em&gt;. For instance, the pathname becomes void when the file has been moved or deleted.</source>
          <target state="translated">경로 이름이 file에 해당하는 &lt;em&gt;파일을&lt;/em&gt; 가리 키지 않을 수 &lt;em&gt;있습니다&lt;/em&gt; . 예를 들어, 파일이 이동되거나 삭제되면 경로명이 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="9f2769e9032e84effdfca498fd2e1ba4a32196eb" translate="yes" xml:space="preserve">
          <source>The pattern below matches a vowel followed by 2 word characters:</source>
          <target state="translated">아래 패턴은 모음 뒤에 2 단어 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="5257733d7783a73e1dd5c272dbb397466dfbf3c0" translate="yes" xml:space="preserve">
          <source>The pattern below uses positive lookahead and positive lookbehind to match text appearing in tags without including the tags in the match:</source>
          <target state="translated">아래 패턴은 긍정적 인 미리보기와 긍정적 인 비하인드를 사용하여 일치하는 태그를 포함하지 않고 태그에 나타나는 텍스트를 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="59b6cc3817c546fd47920371e92cf6e60c1bb3f7" translate="yes" xml:space="preserve">
          <source>The pattern matching syntax is described on &lt;a href=&quot;pattern_matching_rdoc&quot;&gt;its own page&lt;/a&gt;.</source>
          <target state="translated">패턴 일치 구문은 &lt;a href=&quot;pattern_matching_rdoc&quot;&gt;자체 페이지&lt;/a&gt; 에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="63f455f0c1a75a765389dbd52a5c11309c5da60d" translate="yes" xml:space="preserve">
          <source>The per-session private key, an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">세션 별 개인 키, &lt;a href=&quot;../bn&quot;&gt; &lt;code&gt;OpenSSL::BN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ad0ee0b34de5b74f53f79a096036949b01857f2" translate="yes" xml:space="preserve">
          <source>The per-session public key (an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;) matching the private key. This needs to be passed to &lt;a href=&quot;dh#method-i-compute_key&quot;&gt;&lt;code&gt;DH#compute_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">개인 키와 일치하는 세션 별 공개 키 ( &lt;a href=&quot;../bn&quot;&gt; &lt;code&gt;OpenSSL::BN&lt;/code&gt; &lt;/a&gt; ) 이것은 &lt;a href=&quot;dh#method-i-compute_key&quot;&gt; &lt;code&gt;DH#compute_key&lt;/code&gt; &lt;/a&gt; 로 전달 되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="9319ff590735d23c94a44a4c6e4d5d65fd69938c" translate="yes" xml:space="preserve">
          <source>The permission bits &lt;code&gt;0644&lt;/code&gt; (in octal) would thus be interpreted as read/write for owner, and read-only for group and other. Higher-order bits may also be used to indicate the type of file (plain, directory, pipe, socket, and so on) and various other special features. If the permissions are for a directory, the meaning of the execute bit changes; when set the directory can be searched.</source>
          <target state="translated">따라서 허가 비트 &lt;code&gt;0644&lt;/code&gt; (8 진수)는 소유자에 대한 읽기 / 쓰기, 그룹 및 기타에 대한 읽기 전용으로 해석됩니다. 상위 비트는 파일 유형 (일반, 디렉토리, 파이프, 소켓 등) 및 다양한 기타 특수 기능을 나타내는 데 사용될 수도 있습니다. 디렉토리에 대한 권한이있는 경우 실행 비트의 의미가 변경됩니다. 설정하면 디렉토리를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5fee9f7e91cb52bc0540f6845e231442b0c62ee" translate="yes" xml:space="preserve">
          <source>The person responsible for this domain name.</source>
          <target state="translated">이 도메인 이름을 담당하는 사람입니다.</target>
        </trans-unit>
        <trans-unit id="acab5f1e6922c7a7d0b37b345bdf64d570719912" translate="yes" xml:space="preserve">
          <source>The platform for this ruby</source>
          <target state="translated">이 루비를위한 플랫폼</target>
        </trans-unit>
        <trans-unit id="fa6f8274b100b760578bb465f2a5cfc61a906e46" translate="yes" xml:space="preserve">
          <source>The platform identifier.</source>
          <target state="translated">플랫폼 식별자.</target>
        </trans-unit>
        <trans-unit id="8b1f24dcc206557e3a8172e934cb3212d5d96b19" translate="yes" xml:space="preserve">
          <source>The plugins should declare that they handle a command through this helper.</source>
          <target state="translated">플러그인은이 헬퍼를 통해 명령을 처리한다고 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6079cef90c486623b9c7dd07fd1b3e3179503cf" translate="yes" xml:space="preserve">
          <source>The plugins should declare that they provide a installation source through this helper.</source>
          <target state="translated">플러그인은이 헬퍼를 통해 설치 소스를 제공함을 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="15154a1255ccdfd58411609bd22eeb12796f41f1" translate="yes" xml:space="preserve">
          <source>The port number of the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server to connect to.</source>
          <target state="translated">연결할 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 서버 의 포트 번호입니다 .</target>
        </trans-unit>
        <trans-unit id="5ae83665d0c51a4b3c8cdc93a67735bc37f8bde6" translate="yes" xml:space="preserve">
          <source>The port number to connect to.</source>
          <target state="translated">연결할 포트 번호입니다.</target>
        </trans-unit>
        <trans-unit id="c6c7d006bf067113dec2111ac651e823102bdff0" translate="yes" xml:space="preserve">
          <source>The port of the proxy server, if one is configured.</source>
          <target state="translated">프록시 서버의 포트 (구성된 경우)</target>
        </trans-unit>
        <trans-unit id="ff540a27876c41eb0bf8f8edb15a983c65338338" translate="yes" xml:space="preserve">
          <source>The port on this target host of this service.</source>
          <target state="translated">이 서비스의이 대상 호스트에있는 포트입니다.</target>
        </trans-unit>
        <trans-unit id="81f5b5db960bbd5758a6d4947b08b6484b6d36c2" translate="yes" xml:space="preserve">
          <source>The port that &lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;RingFinger&lt;/code&gt;&lt;/a&gt; will send query packets to.</source>
          <target state="translated">&lt;a href=&quot;ringfinger&quot;&gt; &lt;code&gt;RingFinger&lt;/code&gt; &lt;/a&gt; 가 쿼리 패킷을 보낼 포트입니다 .</target>
        </trans-unit>
        <trans-unit id="457a7a1451a410ede91de12f869ecb84279819c1" translate="yes" xml:space="preserve">
          <source>The port, socktype, protocol of the result is filled by zero. So, it is not appropriate to create a socket.</source>
          <target state="translated">결과의 포트, 소켓 유형, 프로토콜은 0으로 채워집니다. 따라서 소켓을 만드는 것은 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="15a2186e15322a1f038c71b29f22ca062dc6c45c" translate="yes" xml:space="preserve">
          <source>The portion of the path that does not make use of the slash '/'. The path typically refers to an absolute path or an opaque part. (See RFC2396 Section 3 and 5.2.)</source>
          <target state="translated">슬래시 '/'를 사용하지 않는 경로 부분. 경로는 일반적으로 절대 경로 또는 불투명 부분을 나타냅니다. RFC2396 섹션 3 및 5.2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="62900790bf8e258208773edf7ce1b0534fae9a1a" translate="yes" xml:space="preserve">
          <source>The positional arguments for the message follow the method name:</source>
          <target state="translated">메시지의 위치 인수는 메소드 이름을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="7d3eaa714a98563fca46e654c10d88ee52dddb4b" translate="yes" xml:space="preserve">
          <source>The precision of the result value depends on the type of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">결과 값의 정밀도는 &lt;code&gt;b&lt;/code&gt; 유형에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="400d33b7ea6235c9a2ace1b0c07192d7021a64f0" translate="yes" xml:space="preserve">
          <source>The preference for this &lt;a href=&quot;mx&quot;&gt;&lt;code&gt;MX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;mx&quot;&gt; &lt;code&gt;MX&lt;/code&gt; &lt;/a&gt; 의 설정입니다 .</target>
        </trans-unit>
        <trans-unit id="ac81125b454812a7e3b00c68df74ea10fa2efc21" translate="yes" xml:space="preserve">
          <source>The preferred local date and time representation</source>
          <target state="translated">선호하는 현지 날짜 및 시간 표현</target>
        </trans-unit>
        <trans-unit id="ad8ebf110f332ce011d083fd018fd7816c36f8d2" translate="yes" xml:space="preserve">
          <source>The prefix and suffix of the name of the directory is specified by the optional first argument, &lt;em&gt;prefix_suffix&lt;/em&gt;.</source>
          <target state="translated">디렉토리 이름의 접 두부 및 접미 부는 선택적 첫 번째 인수 인 &lt;em&gt;prefix_suffix로&lt;/em&gt; 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="3fa7d59418034d4e745a54b5f2e40e3c7f2092eb" translate="yes" xml:space="preserve">
          <source>The prepended modules from the refinement for &lt;code&gt;C&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 에 대한 개선에서 추가 된 모듈</target>
        </trans-unit>
        <trans-unit id="4f67d3707b0b86068f946d0504a808f4bd3d2905" translate="yes" xml:space="preserve">
          <source>The prepended modules of &lt;code&gt;C&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 의 앞에 붙인 모듈</target>
        </trans-unit>
        <trans-unit id="530e95813537ca24caca69f99b74a6f2fe53b8a8" translate="yes" xml:space="preserve">
          <source>The prepended modules of &lt;code&gt;R&lt;/code&gt; in reverse order</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; 의 앞에 붙은 모듈은 역순으로</target>
        </trans-unit>
        <trans-unit id="0c0e1285d1004449383b1db4bf8ea0667c4544f5" translate="yes" xml:space="preserve">
          <source>The primary e-mail address of the URL, as a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">URL의 기본 이메일 주소 ( &lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7945d5b92c6071692fc2ca256edcfbbc6e7b4fa" translate="yes" xml:space="preserve">
          <source>The primary e-mail address of the URL, as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">URL의 기본 이메일 주소입니다 ( &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4568679c1b0945a1cd1f5e3acaeb06fa51e015f" translate="yes" xml:space="preserve">
          <source>The primary interface to this library. Use to setup delegation when defining your class.</source>
          <target state="translated">이 라이브러리의 기본 인터페이스입니다. 클래스를 정의 할 때 위임을 설정하는 데 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7e14329c0060f5c5a1055ee9d2b532d151843256" translate="yes" xml:space="preserve">
          <source>The primary local dRuby server.</source>
          <target state="translated">기본 로컬 dRuby 서버.</target>
        </trans-unit>
        <trans-unit id="bf7224ede03972e588a62e6e6244aabb694697fb" translate="yes" xml:space="preserve">
          <source>The primary read method for wrapped Strings and IOs, a single row is pulled from the data source, parsed and returned as an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of fields (if header rows are not used) or a &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; (when header rows are used).</source>
          <target state="translated">랩핑 된 문자열 및 IO에 대한 기본 읽기 방법 인 단일 행은 데이터 소스에서 가져 와서 구문 분석되어 필드 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; (헤더 행이 사용되지 않는 경우) 또는 &lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; (헤더 행이 사용되는 경우) 로 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="1819895b08ef7a2b0e9116fd8a046b1b1132e539" translate="yes" xml:space="preserve">
          <source>The primary use of this method (as opposed to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;) is probably to set debugging (#set_debug_output) or ESMTP (#esmtp=), which must be done before the session is started.</source>
          <target state="translated">&lt;a href=&quot;smtp#method-c-start&quot;&gt; &lt;code&gt;SMTP.start&lt;/code&gt; &lt;/a&gt; 와 달리이 방법의 주요 용도 는 세션을 시작하기 전에 수행해야하는 디버깅 (#set_debug_output) 또는 ESMTP (# esmtp =)를 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="00e50e3a3673f744cc6367789db03a632dac7378" translate="yes" xml:space="preserve">
          <source>The primary use of this method (as opposed to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;) is probably to set debugging (&lt;a href=&quot;smtp#method-i-set_debug_output&quot;&gt;&lt;code&gt;set_debug_output&lt;/code&gt;&lt;/a&gt;) or ESMTP (&lt;a href=&quot;smtp#attribute-i-esmtp&quot;&gt;&lt;code&gt;esmtp=&lt;/code&gt;&lt;/a&gt;), which must be done before the session is started.</source>
          <target state="translated">이 방법의 주된 용도 ( &lt;a href=&quot;smtp#method-c-start&quot;&gt; &lt;code&gt;SMTP.start&lt;/code&gt; &lt;/a&gt; 와 반대 )는 아마도 세션이 시작되기 전에 완료되어야하는 디버깅 ( &lt;a href=&quot;smtp#method-i-set_debug_output&quot;&gt; &lt;code&gt;set_debug_output&lt;/code&gt; &lt;/a&gt; ) 또는 ESMTP ( &lt;a href=&quot;smtp#attribute-i-esmtp&quot;&gt; &lt;code&gt;esmtp=&lt;/code&gt; &lt;/a&gt; )를 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0789cf0556c72e4c3ad373cb5d073457370968be" translate="yes" xml:space="preserve">
          <source>The primary write method for wrapped Strings and IOs, &lt;code&gt;row&lt;/code&gt; (an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt;) is converted to &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; and appended to the data source. When a &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; is passed, only the row's fields() are appended to the output.</source>
          <target state="translated">랩핑 된 문자열 및 IO의 기본 쓰기 방법 인 &lt;code&gt;row&lt;/code&gt; ( &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; )은 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 로 변환되어 데이터 소스에 추가됩니다. 때 &lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; 전달됩니다 만 행의 필드는 () 출력에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b56f0b8f435c8fa9f49368b6a41dd600d0e41794" translate="yes" xml:space="preserve">
          <source>The prime (an &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;) of the Diffie-Hellman parameters.</source>
          <target state="translated">Diffie-Hellman 매개 변수 의 소수 ( &lt;a href=&quot;../bn&quot;&gt; &lt;code&gt;OpenSSL::BN&lt;/code&gt; &lt;/a&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="9e107b9e0e308e4bb29cc43d4a8bb0ab670142e4" translate="yes" xml:space="preserve">
          <source>The priority levels, in descending order, are:</source>
          <target state="translated">우선 순위 수준은 내림차순으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d6210aca4d4a30353c5cd8151287339e66211a76" translate="yes" xml:space="preserve">
          <source>The priority mask persists through calls to open() and close().</source>
          <target state="translated">우선 순위 마스크는 open () 및 close () 호출을 통해 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="abba2a0dd12993af4fa355c6651820f926add4b5" translate="yes" xml:space="preserve">
          <source>The priority of this target host.</source>
          <target state="translated">이 대상 호스트의 우선 순위.</target>
        </trans-unit>
        <trans-unit id="a49fb359ea679d5b61a8b476c6806c3e89a2cca6" translate="yes" xml:space="preserve">
          <source>The private key for &lt;em&gt;certificate&lt;/em&gt;. An instance of &lt;a href=&quot;../pkey/pkey&quot;&gt;&lt;code&gt;OpenSSL::PKey::PKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;인증서&lt;/em&gt; 의 개인 키입니다 . &lt;a href=&quot;../pkey/pkey&quot;&gt; &lt;code&gt;OpenSSL::PKey::PKey&lt;/code&gt; &lt;/a&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="57e06c9f894ca718c6533e9e4eb09a8442b4db3e" translate="yes" xml:space="preserve">
          <source>The process id of the process to check</source>
          <target state="translated">확인할 프로세스의 프로세스 ID</target>
        </trans-unit>
        <trans-unit id="aaac0d94ff20444e0e5f5f9eaeefc04d734be7a2" translate="yes" xml:space="preserve">
          <source>The process identifier for the command.</source>
          <target state="translated">명령의 프로세스 식별자.</target>
        </trans-unit>
        <trans-unit id="ada6f924e601e2a86df5e933b32f7afa93f1f3ca" translate="yes" xml:space="preserve">
          <source>The process number of the Ruby running this script.</source>
          <target state="translated">이 스크립트를 실행하는 Ruby의 프로세스 번호입니다.</target>
        </trans-unit>
        <trans-unit id="269c5b83b5a61d671be0aa562aab6819dba5f00e" translate="yes" xml:space="preserve">
          <source>The process number of the Ruby running this script. Same as &lt;a href=&quot;process#method-c-pid&quot;&gt;&lt;code&gt;Process.pid&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스크립트를 실행하는 Ruby의 프로세스 번호입니다. &lt;a href=&quot;process#method-c-pid&quot;&gt; &lt;code&gt;Process.pid&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="76a14599bbd2f916c1eeda76af2e2a1ec95341ce" translate="yes" xml:space="preserve">
          <source>The progname configured, or passed to the logger method.</source>
          <target state="translated">프로그램 이름이 구성되었거나 로거 메소드로 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="0d0ed99396f62c9df6bb8aae76ccf321fc12981b" translate="yes" xml:space="preserve">
          <source>The protocol for &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; over an SSL socket</source>
          <target state="translated">SSL 소켓을 통한 &lt;a href=&quot;../drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt; 프로토콜</target>
        </trans-unit>
        <trans-unit id="802421a257350d9ecd6875bd590f9b137bb89655" translate="yes" xml:space="preserve">
          <source>The protocol instance returned by &lt;a href=&quot;drbprotocol#method-i-open&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; must have the following methods:</source>
          <target state="translated">&lt;a href=&quot;drbprotocol#method-i-open&quot;&gt; &lt;code&gt;open&lt;/code&gt; 에&lt;/a&gt; 의해 리턴 된 프로토콜 인스턴스 는 다음 메소드를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="6699ff6d2db683aa91a10e0f38be05ca02551329" translate="yes" xml:space="preserve">
          <source>The protocol instance returned by &lt;a href=&quot;drbprotocol#method-i-open_server&quot;&gt;&lt;code&gt;open_server()&lt;/code&gt;&lt;/a&gt;.accept() must have the following methods:</source>
          <target state="translated">&lt;a href=&quot;drbprotocol#method-i-open_server&quot;&gt; &lt;code&gt;open_server()&lt;/code&gt; &lt;/a&gt; .accept ()가 리턴 한 프로토콜 인스턴스 에는 다음 메소드가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4bd789da90f5f778600cf8bde1e25dd31f7db22d" translate="yes" xml:space="preserve">
          <source>The protocol instance returned by &lt;a href=&quot;drbprotocol#method-i-open_server&quot;&gt;&lt;code&gt;open_server&lt;/code&gt;&lt;/a&gt; must have the following methods:</source>
          <target state="translated">&lt;a href=&quot;drbprotocol#method-i-open_server&quot;&gt; &lt;code&gt;open_server&lt;/code&gt; 에&lt;/a&gt; 의해 리턴 된 프로토콜 인스턴스 에는 다음 메소드가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e90488c27bad643100c7f6df0e063fe5c3b5c15b" translate="yes" xml:space="preserve">
          <source>The protocol-defined priority for all packets on this socket</source>
          <target state="translated">이 소켓의 모든 패킷에 대한 프로토콜 정의 우선 순위</target>
        </trans-unit>
        <trans-unit id="cf23ecc2191c77d059ee8b92d567b9d89cd0c9d0" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;block&lt;/code&gt; is passed a header and field for each pair in the row and expected to return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on whether the pair should be deleted.</source>
          <target state="translated">제공된 &lt;code&gt;block&lt;/code&gt; 에는 행의 각 쌍에 대한 헤더 및 필드가 전달되며 쌍을 삭제해야하는지에 따라 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 리턴 해야합니다.</target>
        </trans-unit>
        <trans-unit id="310cf35b0eafaa3b002ce9358161dc318009db57" translate="yes" xml:space="preserve">
          <source>The public key infrastructure (PKI) model relies on trusted certificate authorities (&amp;ldquo;root CAs&amp;rdquo;) that issue these certificates, so that end users need to base their trust just on a selected few authorities that themselves again vouch for subordinate CAs issuing their certificates to end users.</source>
          <target state="translated">PKI (공개 키 인프라) 모델은 이러한 인증서를 발급하는 신뢰할 수있는 인증 기관 ( &quot;루트 CA&quot;)에 의존하므로 최종 사용자는 자신이 인증서를 발급하는 하위 CA를 다시 보증하는 선택된 소수의 기관에 대해서만 신뢰를 설정해야합니다. 최종 사용자.</target>
        </trans-unit>
        <trans-unit id="e9e3cff746d0b341e483381f7627b1c5e4eb2a02" translate="yes" xml:space="preserve">
          <source>The public_key portion of the certificate must contain a valid public key.</source>
          <target state="translated">인증서의 public_key 부분은 유효한 공개 키를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="f110f55fd959c5e5afa44c1cdba8507d00eed545" translate="yes" xml:space="preserve">
          <source>The purpose of using base64 to encode data is that it translates any binary data into purely printable characters.</source>
          <target state="translated">base64를 사용하여 데이터를 인코딩하는 목적은 이진 데이터를 순전히 인쇄 가능한 문자로 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="944e50ea3712ab54d77adb31079f950e8026e75c" translate="yes" xml:space="preserve">
          <source>The quotient is rounded toward negative infinity, as shown in the following table:</source>
          <target state="translated">몫은 다음 표와 같이 음의 무한대로 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="0b0502e1943b206623abd789b6236a2c4e8728ec" translate="yes" xml:space="preserve">
          <source>The quotient q is (a/b).floor, and the modulus is the amount that must be added to q * b to get a.</source>
          <target state="translated">몫 q는 (a / b) .floor이며, 계수는 a를 얻기 위해 q * b에 더해야하는 양입니다.</target>
        </trans-unit>
        <trans-unit id="d3eceb8a1459799a15da529241773608d5b620f1" translate="yes" xml:space="preserve">
          <source>The range is 0-65535.</source>
          <target state="translated">범위는 0-65535입니다.</target>
        </trans-unit>
        <trans-unit id="e3fa74a94c80c06b035c32406725a0b50d5483d7" translate="yes" xml:space="preserve">
          <source>The raw &lt;a href=&quot;ipv4&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; address as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원시 &lt;a href=&quot;ipv4&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt; 주소는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="75141d494dfa8a89912be937b41ace0c3f700f2f" translate="yes" xml:space="preserve">
          <source>The raw &lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; address as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원시 &lt;a href=&quot;ipv6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt; 주소는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="494691dcf532f6ba9aa780c000ed5ee0d404fbe8" translate="yes" xml:space="preserve">
          <source>The raw altitude</source>
          <target state="translated">원시 고도</target>
        </trans-unit>
        <trans-unit id="0c262e6f4ad8708291e829b0866f12d9bdc18367" translate="yes" xml:space="preserve">
          <source>The raw coordinates</source>
          <target state="translated">원시 좌표</target>
        </trans-unit>
        <trans-unit id="7de606ae740ce759c8111a78273b9b48004e31c0" translate="yes" xml:space="preserve">
          <source>The raw size</source>
          <target state="translated">실 치수</target>
        </trans-unit>
        <trans-unit id="26007c781e358396e36eee47fade68aafee09004" translate="yes" xml:space="preserve">
          <source>The real enumeration is performed when any non-redefined &lt;a href=&quot;../enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; method is called, like &lt;a href=&quot;../enumerable#method-i-first&quot;&gt;&lt;code&gt;Enumerable#first&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../enumerable#method-i-to_a&quot;&gt;&lt;code&gt;Enumerable#to_a&lt;/code&gt;&lt;/a&gt; (the latter is aliased as &lt;a href=&quot;lazy#method-i-force&quot;&gt;&lt;code&gt;force&lt;/code&gt;&lt;/a&gt; for more semantic code):</source>
          <target state="translated">실제 열거는 &lt;a href=&quot;../enumerable#method-i-first&quot;&gt; &lt;code&gt;Enumerable#first&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../enumerable#method-i-to_a&quot;&gt; &lt;code&gt;Enumerable#to_a&lt;/code&gt; &lt;/a&gt; 와 같이 재정의되지 않은 &lt;a href=&quot;../enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; 메서드가 호출 될 때 수행됩니다 (후자는 보다 의미 론적 코드에 대한 &lt;a href=&quot;lazy#method-i-force&quot;&gt; &lt;code&gt;force&lt;/code&gt; &lt;/a&gt; 로 별칭이 지정됨 ).</target>
        </trans-unit>
        <trans-unit id="03854271b9f622464185970d508f078955ab7a2e" translate="yes" xml:space="preserve">
          <source>The reason this block was terminated: :break, :redo, :retry, :next, :return, or :noreason.</source>
          <target state="translated">이 블록이 종료 된 이유는 : break, : redo, : retry, : next, : return 또는 : noreason입니다.</target>
        </trans-unit>
        <trans-unit id="ac545a4412cb5b3920eeb169174870d4dc0fb9f2" translate="yes" xml:space="preserve">
          <source>The recommended way to handle non-idempotent requests is the following:</source>
          <target state="translated">비등 전성 요청을 처리하는 권장 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5022b69f6cbf29d3dd7f3d6fc5ab1a1e598d4f59" translate="yes" xml:space="preserve">
          <source>The refinement for &lt;code&gt;C&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 의 개선</target>
        </trans-unit>
        <trans-unit id="2fdc20d7c56b796d25c43bfdbf0f52b9400e87a3" translate="yes" xml:space="preserve">
          <source>The regex marking a line as a comment. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details</source>
          <target state="translated">라인을 주석으로 표시하는 정규식. 자세한 내용은 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="247108a61da81ed91303f3175b0fd12df9bd41a4" translate="yes" xml:space="preserve">
          <source>The regex marking a line as a comment. See &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">줄을 주석으로 표시하는 정규식입니다. 자세한 내용은 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="683d8868edbb5f9a98ae9c3561557f3dc3bd4ada" translate="yes" xml:space="preserve">
          <source>The regular expression may be followed by flags which adjust the matching behavior of the regular expression. The &amp;ldquo;i&amp;rdquo; flag makes the regular expression case-insensitive:</source>
          <target state="translated">정규 표현식 뒤에 정규 표현식의 일치 동작을 조정하는 플래그가 올 수 있습니다. &quot;i&quot;플래그는 정규식을 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4c83f9113492ddc8b3be962724cd680fba8d7ef" translate="yes" xml:space="preserve">
          <source>The relative path to the Ruby file where the instruction sequence was loaded from.</source>
          <target state="translated">명령 시퀀스가로드 된 Ruby 파일의 상대 경로입니다.</target>
        </trans-unit>
        <trans-unit id="6f75fe2321874d763b8ecdf657013d99aa5d096e" translate="yes" xml:space="preserve">
          <source>The release date string.</source>
          <target state="translated">출시 날짜 문자열</target>
        </trans-unit>
        <trans-unit id="5f735854555f0656bdbf008200f902ed38241f96" translate="yes" xml:space="preserve">
          <source>The remaining arguments are used for &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; authentication, if required or desired. &lt;code&gt;user&lt;/code&gt; is the account name; &lt;code&gt;secret&lt;/code&gt; is your password or other authentication token; and &lt;code&gt;authtype&lt;/code&gt; is the authentication type, one of :plain, :login, or :cram_md5. See the discussion of &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; Authentication in the overview notes.</source>
          <target state="translated">나머지 인수는 필요하거나 원하는 경우 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증에 사용됩니다 . &lt;code&gt;user&lt;/code&gt; 는 계정 이름입니다. &lt;code&gt;secret&lt;/code&gt; 은 비밀번호 또는 기타 인증 토큰입니다. 과 &lt;code&gt;authtype&lt;/code&gt; 일반 : : 로그인 또는 : cram_md5 인증 유형 중 하나입니다. 개요 노트에서 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b690821f28679af87bb086203951c846623e900" translate="yes" xml:space="preserve">
          <source>The remaining arguments are used for &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; authentication, if required or desired. &lt;code&gt;user&lt;/code&gt; is the account name; &lt;code&gt;secret&lt;/code&gt; is your password or other authentication token; and &lt;code&gt;authtype&lt;/code&gt; is the authentication type, one of :plain, :login, or :cram_md5. See the discussion of &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; Authentication in the overview notes. If &lt;code&gt;tls_verify&lt;/code&gt; is true, verify the server's certificate. The default is true. If the hostname in the server certificate is different from &lt;code&gt;address&lt;/code&gt;, it can be specified with &lt;code&gt;tls_hostname&lt;/code&gt;.</source>
          <target state="translated">나머지 인수는 필요하거나 원하는 경우 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증에 사용됩니다 . &lt;code&gt;user&lt;/code&gt; 는 계정 이름입니다. &lt;code&gt;secret&lt;/code&gt; 은 암호 또는 기타 인증 토큰입니다. 과 &lt;code&gt;authtype&lt;/code&gt; 일반 : : 로그인 또는 : cram_md5 인증 유형 중 하나입니다. 개요 노트에서 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증에 대한 설명을 참조하십시오 . 경우 &lt;code&gt;tls_verify&lt;/code&gt; 이 사실, 서버의 인증서를 확인합니다. 기본값은 true입니다. 서버 인증서의 호스트 이름이 &lt;code&gt;address&lt;/code&gt; 와 다른 경우 &lt;code&gt;tls_hostname&lt;/code&gt; 으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="878f510e58a0f807db29902e73e6cb10bebf6b8d" translate="yes" xml:space="preserve">
          <source>The request types &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; supports are listed below in the section &amp;ldquo;HTTP Request Classes&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 지원 요청 유형 은 아래&amp;ldquo;HTTP 요청 클래스&amp;rdquo;섹션에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="d625ca680d7b6dcafd05cc136b0a94a5c6f6cf62" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;precision&lt;/code&gt; parameter is used to determine the number of significant digits for the result.</source>
          <target state="translated">필수 &lt;code&gt;precision&lt;/code&gt; 매개 변수는 결과의 유효 자릿수를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f740cac76122348086b1aa4f279c56a25aa04dcc" translate="yes" xml:space="preserve">
          <source>The reserved multicast group</source>
          <target state="translated">예약 된 멀티 캐스트 그룹</target>
        </trans-unit>
        <trans-unit id="7a765f80cd0f99d5a7b05b625ebd34462efeb748" translate="yes" xml:space="preserve">
          <source>The responder ID is based on the key name.</source>
          <target state="translated">응답자 ID는 키 이름을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="ac5d1a5b52c7fa713c43f708a0423e2f725a2040" translate="yes" xml:space="preserve">
          <source>The responder ID is based on the public key.</source>
          <target state="translated">응답자 ID는 공개 키를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="1611f68f48bd3ce00e85f1e334bfdb47c255a768" translate="yes" xml:space="preserve">
          <source>The response contains the status information (success/fail). We can display the status as a string:</source>
          <target state="translated">응답에는 상태 정보 (성공 / 실패)가 포함됩니다. 상태를 문자열로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9b257977b122c3f1ec3bf2a3227594900ce4433" translate="yes" xml:space="preserve">
          <source>The response that caused this error</source>
          <target state="translated">이 오류를 일으킨 응답</target>
        </trans-unit>
        <trans-unit id="0074262c3f4cc23e922ff2cc06737b9f1b130a12" translate="yes" xml:space="preserve">
          <source>The rest of the methods are adequately described in their own documentation.</source>
          <target state="translated">나머지 방법은 자체 문서에 적절히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1db3c3c177474b6eeb0f7460eb5eec402987a492" translate="yes" xml:space="preserve">
          <source>The result contains 122 random bits (15.25 random bytes).</source>
          <target state="translated">결과에는 122 개의 임의 비트 (15.25 개의 임의 바이트)가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="61dda46bf90b304e048e1187c431d0aa736a22bb" translate="yes" xml:space="preserve">
          <source>The result enumerator yields the chunked elements as an array. So &lt;code&gt;each&lt;/code&gt; method can be called as follows:</source>
          <target state="translated">결과 열거자는 청크 된 요소를 배열로 생성합니다. 따라서 &lt;code&gt;each&lt;/code&gt; 메소드는 다음과 같이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c39e4a1b8e30e61e5b51f25f52214640fa6d842" translate="yes" xml:space="preserve">
          <source>The result inherits any tainting in the original string or any supplied replacement string.</source>
          <target state="translated">결과는 원래 문자열 또는 제공된 대체 문자열의 오염을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="9f0ebf1761072f53d4d5a5892243977956c211d7" translate="yes" xml:space="preserve">
          <source>The result is an array of conversions.</source>
          <target state="translated">결과는 전환 배열입니다.</target>
        </trans-unit>
        <trans-unit id="3623bb74bc6d0291d171fd6adff5bdf83f9a3afa" translate="yes" xml:space="preserve">
          <source>The result is highly platform dependent. So &lt;a href=&quot;encoding#method-c-find&quot;&gt;&lt;code&gt;Encoding.find(Encoding.locale_charmap)&lt;/code&gt;&lt;/a&gt; may cause an error. If you need some encoding object even for unknown locale, &lt;a href=&quot;encoding#method-c-find&quot;&gt;&lt;code&gt;Encoding.find&lt;/code&gt;&lt;/a&gt;(&amp;ldquo;locale&amp;rdquo;) can be used.</source>
          <target state="translated">그 결과 플랫폼에 따라 크게 달라집니다. 따라서 &lt;a href=&quot;encoding#method-c-find&quot;&gt; &lt;code&gt;Encoding.find(Encoding.locale_charmap)&lt;/code&gt; &lt;/a&gt; 는 오류를 일으킬 수 있습니다. 알 수없는 로캘 일지라도 일부 인코딩 개체가 필요한 경우 &lt;a href=&quot;encoding#method-c-find&quot;&gt; &lt;code&gt;Encoding.find&lt;/code&gt; &lt;/a&gt; ( &quot;locale&quot;)를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a37760e60d8435574be8f3b0b04a7cf68726ce7" translate="yes" xml:space="preserve">
          <source>The result is intended as the number of processes to use all available processors.</source>
          <target state="translated">결과는 사용 가능한 모든 프로세서를 사용하는 프로세스 수입니다.</target>
        </trans-unit>
        <trans-unit id="bf343cbc537abd68400b45ce3330c2ecee93ec6b" translate="yes" xml:space="preserve">
          <source>The result is not guaranteed to be stable. When the comparison of two elements returns &lt;code&gt;0&lt;/code&gt;, the order of the elements is unpredictable.</source>
          <target state="translated">결과는 안정적으로 보장되지 않습니다. 두 요소의 비교가 &lt;code&gt;0&lt;/code&gt; 을 반환 하면 요소의 순서를 예측할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="70060c815babac774b02701417982ec3c0961885" translate="yes" xml:space="preserve">
          <source>The result is not guaranteed to be stable. When two keys are equal, the order of the corresponding elements is unpredictable.</source>
          <target state="translated">결과는 안정적으로 보장되지 않습니다. 두 개의 키가 같으면 해당 요소의 순서를 예측할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e51adb6bfd80ee1244f29c873f3807d895098a00" translate="yes" xml:space="preserve">
          <source>The result may contain 0-9 and a-f.</source>
          <target state="translated">결과는 0-9와 af를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be27e361a9c46221281cc5fc1b8dca7566d7e467" translate="yes" xml:space="preserve">
          <source>The result may contain A-Z, a-z and 0-9.</source>
          <target state="translated">결과에는 AZ, az 및 0-9가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95a77460dbae1446c88da76a5cd8c83121644d32" translate="yes" xml:space="preserve">
          <source>The result may contain A-Z, a-z, 0-9, &amp;ldquo;+&amp;rdquo;, &amp;ldquo;/&amp;rdquo; and &amp;ldquo;=&amp;rdquo;.</source>
          <target state="translated">결과에는 AZ, az, 0-9, &quot;+&quot;, &quot;/&quot;및 &quot;=&quot;이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b379840e8e8817890e227b6e1aae2773817a6de6" translate="yes" xml:space="preserve">
          <source>The result may contain A-Z, a-z, 0-9, &amp;ldquo;-&amp;rdquo; and &amp;ldquo;_&amp;rdquo;. &amp;ldquo;=&amp;rdquo; is also used if &lt;em&gt;padding&lt;/em&gt; is true.</source>
          <target state="translated">결과에는 AZ, az, 0-9,&amp;ldquo;-&amp;rdquo;및&amp;ldquo;_&amp;rdquo;이 포함될 수 있습니다. &lt;em&gt;패딩&lt;/em&gt; 이 true 인 경우에도 &quot;=&quot;가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7c91e2a60d5bcff09c54ec90806243a3fdb9d58c" translate="yes" xml:space="preserve">
          <source>The result may contain any byte: &amp;ldquo;x00&amp;rdquo; - &amp;ldquo;xff&amp;rdquo;.</source>
          <target state="translated">결과에는 임의의 바이트 &quot;x00&quot;- &quot;xff&quot;가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5844629cda9aeb43083fb0624ca5a2da4094f8ab" translate="yes" xml:space="preserve">
          <source>The result may contain the current directory &lt;code&gt;#&amp;lt;Pathname:.&amp;gt;&lt;/code&gt; and the parent directory &lt;code&gt;#&amp;lt;Pathname:..&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">결과는 현재 디렉토리 &lt;code&gt;#&amp;lt;Pathname:.&amp;gt;&lt;/code&gt; 및 상위 디렉토리 &lt;code&gt;#&amp;lt;Pathname:..&amp;gt;&lt;/code&gt; 를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02b8d38c55a5334237a0ec6c6de4154d1aab92b1" translate="yes" xml:space="preserve">
          <source>The result may contain whatever characters are in the source array.</source>
          <target state="translated">결과는 소스 배열에있는 문자를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df7153fee5077a91bad7c87d7c2fdc9589611158" translate="yes" xml:space="preserve">
          <source>The result might be smaller number than physical cpus especially when ruby process is bound to specific cpus. This is intended for getting better parallel processing.</source>
          <target state="translated">루비 프로세스가 특정 CPU에 바인딩 된 경우 결과는 물리적 CPU보다 적을 수 있습니다. 이것은 더 나은 병렬 처리를 얻기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="601dfbda9d7e30e3397b728f9ff9ef08e9c4e348" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;gt; NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="translated">&lt;code&gt;NaN &amp;gt; NaN&lt;/code&gt; 의 결과 는 정의되지 않으므로 구현에 따른 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="886b5a8bd1ef5b4110176e104cec267a49e667ee" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;gt;= NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="translated">&lt;code&gt;NaN &amp;gt;= NaN&lt;/code&gt; 의 결과 는 정의되지 않으므로 구현에 따른 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9fcbd8c0fc789b53709518345a11cc8000bcb2f2" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;lt; NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="translated">&lt;code&gt;NaN &amp;lt; NaN&lt;/code&gt; 의 결과 는 정의되지 않으므로 구현에 따른 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="786ba3077efdc8923c5d5201f8c4b71bc9db7db9" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;lt;= NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="translated">&lt;code&gt;NaN &amp;lt;= NaN&lt;/code&gt; 의 결과 는 정의되지 않으므로 구현에 따른 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7c55b05befdb109338fa881d72586ae1bf2be676" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN &amp;lt;=&amp;gt; NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="translated">&lt;code&gt;NaN &amp;lt;=&amp;gt; NaN&lt;/code&gt; 의 결과 는 정의되지 않으므로 구현에 따른 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="84f88c85b3bf3e6dc9f4bd8012b7eced5570ff0b" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN == NaN&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="translated">&lt;code&gt;NaN == NaN&lt;/code&gt; 의 결과 는 정의되지 않으므로 구현에 따른 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1e8b672f74cd1ecf28ee6d049f42826ac0bdb96b" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;NaN.eql?(NaN)&lt;/code&gt; is undefined, so an implementation-dependent value is returned.</source>
          <target state="translated">&lt;code&gt;NaN.eql?(NaN)&lt;/code&gt; 의 결과 는 정의되어 있지 않으므로 구현에 따른 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7d6e14db4df9967ef025d737fa63ffe0b8fd80dd" translate="yes" xml:space="preserve">
          <source>The result of a &lt;code&gt;while&lt;/code&gt; loop is &lt;code&gt;nil&lt;/code&gt; unless &lt;code&gt;break&lt;/code&gt; is used to supply a value.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 를 사용하여 값을 제공 하지 않으면 &lt;code&gt;while&lt;/code&gt; 루프 의 결과 는 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8881ad2534071bf408d1937dfcb14620d7aa7bc0" translate="yes" xml:space="preserve">
          <source>The result of calling &lt;code&gt;foo&lt;/code&gt; is this:</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; 를 호출 한 결과 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="938c99bd54c4088d23750bb0ba7bbb18c1b3a9cc" translate="yes" xml:space="preserve">
          <source>The result value of a &lt;code&gt;case&lt;/code&gt; expression is the last value executed in the expression.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 표현식 의 결과 값은 표현식에서 마지막으로 실행 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="c8ca4b3928ec3a1399315322ab5e6685bfb28a11" translate="yes" xml:space="preserve">
          <source>The result value of a &lt;code&gt;for&lt;/code&gt; loop is the value iterated over unless &lt;code&gt;break&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프 의 결과 값은 &lt;code&gt;break&lt;/code&gt; 를 사용 하지 않는 한 반복되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="b29504225cc64a4867eccbedf16dd6472cbaf4e9" translate="yes" xml:space="preserve">
          <source>The result value of an &lt;code&gt;if&lt;/code&gt; expression is the last value executed in the expression.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 표현식 의 결과 값은 표현식에서 마지막으로 실행 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="8d786453b3b8fc68f28c9ef2a60408ad92daad0f" translate="yes" xml:space="preserve">
          <source>The result value of an &lt;code&gt;unless&lt;/code&gt; expression is the last value executed in the expression.</source>
          <target state="translated">&lt;code&gt;unless&lt;/code&gt; 표현식 의 결과 값은 표현식에서 마지막으로 실행 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="01be55a0c09b1d115faa58cff213ed7e949d0a99" translate="yes" xml:space="preserve">
          <source>The result:</source>
          <target state="translated">결과:</target>
        </trans-unit>
        <trans-unit id="949ba83fd5c7f7f7d8712ebdd6053790677d9fa7" translate="yes" xml:space="preserve">
          <source>The results contains just the names in the directory, without any trailing slashes or recursive look-up.</source>
          <target state="translated">결과에는 슬래시 나 재귀 적 조회없이 디렉토리의 이름 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7861f57efc0ca1a04015ede3837172f3ea154889" translate="yes" xml:space="preserve">
          <source>The results which matched single wildcard or character set are sorted in binary ascending order, unless false is given as the optional &lt;code&gt;sort&lt;/code&gt; keyword argument. The order of an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of pattern strings and braces are preserved.</source>
          <target state="translated">선택적 &lt;code&gt;sort&lt;/code&gt; 키워드 인수 로 false가 제공되지 않는 한 단일 와일드 카드 또는 문자 세트와 일치하는 결과는 이진 오름차순으로 정렬 됩니다. 패턴 문자열 및 중괄호 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 의 순서 는 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="269ee8990d66824e120090419666080479595eae" translate="yes" xml:space="preserve">
          <source>The retrieved or created session is automatically added to &lt;code&gt;request&lt;/code&gt; as a cookie, and also to its &lt;code&gt;output_hidden&lt;/code&gt; table, which is used to add hidden input elements to forms.</source>
          <target state="translated">검색 또는 생성 된 세션은 쿠키 로 &lt;code&gt;request&lt;/code&gt; 하기 위해 자동으로 추가 되며 양식에 숨겨진 입력 요소를 추가하는 데 사용되는 &lt;code&gt;output_hidden&lt;/code&gt; 테이블 에도 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="2b2a39e4f6ff8d02541a6185f8dfc3ce5f715d28" translate="yes" xml:space="preserve">
          <source>The return value can be a rational number.</source>
          <target state="translated">반환 값은 유리수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e73f5890fe900320843256392f2eaaefbfa1f5a" translate="yes" xml:space="preserve">
          <source>The return value is 4-elements array.</source>
          <target state="translated">반환 값은 4 요소 배열입니다.</target>
        </trans-unit>
        <trans-unit id="3e0a4bc45f538b1a1bc75af86c6b2c47b3c4df0c" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;true&lt;/code&gt; if the signature is valid, &lt;code&gt;false&lt;/code&gt; otherwise. &lt;a href=&quot;rsaerror&quot;&gt;&lt;code&gt;RSAError&lt;/code&gt;&lt;/a&gt; will be raised if an error occurs.</source>
          <target state="translated">서명이 유효하면 반환 값은 &lt;code&gt;true&lt;/code&gt; 이고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다. 오류가 발생하면 &lt;a href=&quot;rsaerror&quot;&gt; &lt;code&gt;RSAError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="54b92382b5c01a9dba3c757f47680a3540761eae" translate="yes" xml:space="preserve">
          <source>The return value is a hash of attributes. For example:</source>
          <target state="translated">반환 값은 속성의 해시입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6654c4ae9d05b71119df894579c8645817a73a50" translate="yes" xml:space="preserve">
          <source>The return value is a hash which has 5 keys at least:</source>
          <target state="translated">반환 값은 적어도 5 개의 키를 가진 해시입니다.</target>
        </trans-unit>
        <trans-unit id="860b6d7cf06ced607e0578a658e3b599b2a5595b" translate="yes" xml:space="preserve">
          <source>The return value is a string or nil. nil means no configuration-defined value. (confstr() returns 0 but errno is not set.)</source>
          <target state="translated">반환 값은 문자열 또는 nil입니다. nil은 구성 정의 값이 없음을 의미합니다. (confstr ()은 0을 반환하지만 errno는 설정되지 않았습니다.)</target>
        </trans-unit>
        <trans-unit id="446ecfb332ff5649ed77ea678300d2db7bc5e276" translate="yes" xml:space="preserve">
          <source>The return value is a value from block execution in this case.</source>
          <target state="translated">이 경우 반환 값은 블록 실행의 값입니다.</target>
        </trans-unit>
        <trans-unit id="45909ab09002db03a38b5b6668d655a14a5a73a1" translate="yes" xml:space="preserve">
          <source>The return value is always &lt;code&gt;true&lt;/code&gt; since every private key is also a public key.</source>
          <target state="translated">모든 개인 키도 공개 키이므로 반환 값은 항상 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c42fa4a413a71b94a0f8a036f309291c3844e7ae" translate="yes" xml:space="preserve">
          <source>The return value is an array &lt;code&gt;[0, aProc]&lt;/code&gt;.</source>
          <target state="translated">반환 값은 배열 &lt;code&gt;[0, aProc]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="58a7a3436b3aee9baa4723ee6e7397252fb69ac7" translate="yes" xml:space="preserve">
          <source>The return value is an array of &lt;a href=&quot;imap#FetchData&quot;&gt;&lt;code&gt;Net::IMAP::FetchData&lt;/code&gt;&lt;/a&gt; or nil (instead of an empty array) if there is no matching message.</source>
          <target state="translated">반환 값은 일치하는 메시지가없는 경우 &lt;a href=&quot;imap#FetchData&quot;&gt; &lt;code&gt;Net::IMAP::FetchData&lt;/code&gt; &lt;/a&gt; 의 배열 이거나 빈 배열이 아닌 nil입니다.</target>
        </trans-unit>
        <trans-unit id="464c995fb91ced589bff76fe388f634513e92dc4" translate="yes" xml:space="preserve">
          <source>The return value is an array of &lt;a href=&quot;imap#FetchData&quot;&gt;&lt;code&gt;Net::IMAP::FetchData&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">반환 값은 &lt;a href=&quot;imap#FetchData&quot;&gt; &lt;code&gt;Net::IMAP::FetchData&lt;/code&gt; &lt;/a&gt; 의 배열입니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6658ff7e1a622d2419fa25110f9e26f33306bf70" translate="yes" xml:space="preserve">
          <source>The return value is an array of &lt;code&gt;Net::IMAP::MailboxList&lt;/code&gt;. For example:</source>
          <target state="translated">반환 값은 &lt;code&gt;Net::IMAP::MailboxList&lt;/code&gt; 의 배열입니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="83168450a53003e6e76a76e0f39d881415a214cf" translate="yes" xml:space="preserve">
          <source>The return value is an integer or nil. nil means indefinite limit. (fpathconf() returns -1 but errno is not set.)</source>
          <target state="translated">리턴 값은 정수 또는 nil입니다. nil은 무한정을 의미합니다. (fpathconf ()는 -1을 반환하지만 errno는 설정되지 않았습니다.)</target>
        </trans-unit>
        <trans-unit id="63f261b9a45621d8d751cb73e3b38db8ec94fd15" translate="yes" xml:space="preserve">
          <source>The return value is an integer or nil. nil means indefinite limit. (sysconf() returns -1 but errno is not set.)</source>
          <target state="translated">리턴 값은 정수 또는 nil입니다. nil은 무한정을 의미합니다. (sysconf ()는 -1을 반환하지만 errno는 설정되지 않았습니다.)</target>
        </trans-unit>
        <trans-unit id="1b7b4c17e4558d6ebd2902ebcbf8f5bc1ad538be" translate="yes" xml:space="preserve">
          <source>The return value is one of the following:</source>
          <target state="translated">반환 값은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="955ce2cb752553a3be477acaac46dd773c369c30" translate="yes" xml:space="preserve">
          <source>The return value of &lt;a href=&quot;socket#method-c-udp_server_sockets&quot;&gt;&lt;code&gt;Socket.udp_server_sockets&lt;/code&gt;&lt;/a&gt; is appropriate for the argument.</source>
          <target state="translated">&lt;a href=&quot;socket#method-c-udp_server_sockets&quot;&gt; &lt;code&gt;Socket.udp_server_sockets&lt;/code&gt; &lt;/a&gt; 의 반환 값이 인수에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="d985364d4782a21c95c2a87805400361921421cf" translate="yes" xml:space="preserve">
          <source>The return value of this method is passed to the next event handler (as of &lt;a href=&quot;../enumerable#method-i-inject&quot;&gt;&lt;code&gt;Enumerable#inject&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메소드의 리턴 값은 다음 이벤트 핸들러로 전달됩니다 ( &lt;a href=&quot;../enumerable#method-i-inject&quot;&gt; &lt;code&gt;Enumerable#inject&lt;/code&gt; 기준&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="61df8f3b205f417925146bfd828ab200ffb8ea00" translate="yes" xml:space="preserve">
          <source>The return value, &lt;em&gt;numbytes_sent&lt;/em&gt; is an integer which is the number of bytes sent.</source>
          <target state="translated">리턴 값 &lt;em&gt;numbytes_sent&lt;/em&gt; 는 전송 된 바이트 수인 정수입니다.</target>
        </trans-unit>
        <trans-unit id="f1042efcea4faeadddcad8d243e184965a56c8cf" translate="yes" xml:space="preserve">
          <source>The returned String will be deduplicated as long as it does not have any instance variables set on it.</source>
          <target state="translated">반환 된 문자열은 인스턴스 변수가 설정되지 않은 한 중복 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="afd253583ed854de7b335229bceeb1d292925ecc" translate="yes" xml:space="preserve">
          <source>The returned array may contain other nodes or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">반환 된 배열에는 다른 노드 또는 &lt;code&gt;nil&lt;/code&gt; 이 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d7610aa06bb70e314675342c9b703c5b138415d" translate="yes" xml:space="preserve">
          <source>The returned hash has two keys :considered and :moved. The hash for :considered lists the number of objects that were considered for movement by the compactor, and the :moved hash lists the number of objects that were actually moved. Some objects can't be moved (maybe they were pinned) so these numbers can be used to calculate compaction efficiency.</source>
          <target state="translated">반환 된 해시는 considered와 : moved라는 두 개의 키를 가지고 있습니다. : considered에 대한 해시는 압축기에서 이동을 고려한 개체의 수를 나열하고 : moved 해시는 실제로 이동 된 개체의 수를 나열합니다. 일부 개체는 이동할 수 없으므로 (고정되었을 수 있음)이 숫자를 사용하여 압축 효율성을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e272be68b7c11caccb5dff2ac0149cca87110bd" translate="yes" xml:space="preserve">
          <source>The role of &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; for parsing tagged values</source>
          <target state="translated">태그 값을 구문 분석하기위한 &lt;a href=&quot;asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 의 역할</target>
        </trans-unit>
        <trans-unit id="8c94880e54257414feb0e7cbced0ff27e235a89d" translate="yes" xml:space="preserve">
          <source>The root directory needed for some actions.</source>
          <target state="translated">일부 조치에 필요한 루트 디렉토리.</target>
        </trans-unit>
        <trans-unit id="613d7b0f5e7400e6a852ef7bb7a18ec323142b3a" translate="yes" xml:space="preserve">
          <source>The ruby version string (VERSION was deprecated).</source>
          <target state="translated">루비 버전 문자열 (VERSION은 더 이상 사용되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="dd9a97a3ce420cc71aad2fc0137f5602a7c510f8" translate="yes" xml:space="preserve">
          <source>The running version of ruby</source>
          <target state="translated">루비의 실행 버전</target>
        </trans-unit>
        <trans-unit id="6e9a895df6cea75d8f73a02630772eeec9894ccc" translate="yes" xml:space="preserve">
          <source>The safe level for this server. This is a number corresponding to $SAFE.</source>
          <target state="translated">이 서버의 안전 수준. 이것은 $ SAFE에 해당하는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="6afc8c210b7d21f6fca72d6d137fd7b3bf4ddf11" translate="yes" xml:space="preserve">
          <source>The safe level of the DRbServer. The attribute sets $SAFE for methods performed in the main_loop. Defaults to 0.</source>
          <target state="translated">DRbServer의 안전 수준. 이 속성은 main_loop에서 수행 된 메소드에 $ SAFE를 설정합니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="9bfc4f095372c6a25117b6bf3f78dfd612519c9c" translate="yes" xml:space="preserve">
          <source>The salt.</source>
          <target state="translated">소금.</target>
        </trans-unit>
        <trans-unit id="177966c8d854732e3cc928f0a8461be3faf4d649" translate="yes" xml:space="preserve">
          <source>The salt. Salts prevent attacks based on dictionaries of common passwords and attacks based on rainbow tables. It is a public value that can be safely stored along with the password (e.g. if the derived value is used for password storage).</source>
          <target state="translated">소금. 솔트는 일반적인 암호 사전을 기반으로하는 공격과 레인보우 테이블을 기반으로하는 공격을 방지합니다. 암호와 함께 안전하게 저장할 수있는 공개 값입니다 (예 : 파생 값이 암호 저장에 사용되는 경우).</target>
        </trans-unit>
        <trans-unit id="5a4b6bbf13387f0563cfa2dd3804ecab6b86de2a" translate="yes" xml:space="preserve">
          <source>The same applies for `eql?` and `hash`</source>
          <target state="translated">`eql?`과`hash`도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="f36bb9e91239838e6f6d1e50923cbaa1b7013d55" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="600b36b73b3d0bce202e0a244bccd02a68f99b7e" translate="yes" xml:space="preserve">
          <source>The same as &lt;code&gt;$!.backtrace&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$!.backtrace&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="c711bf2342f825a79d2f8f7aa78a751aa488cbf6" translate="yes" xml:space="preserve">
          <source>The same as &lt;code&gt;ruby --version&lt;/code&gt;, a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; describing various aspects of the Ruby implementation.</source>
          <target state="translated">Ruby 구현의 다양한 측면을 설명 하는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ruby --version&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="158de1b785b5d9eba8d55e5a80c6765d736c3a00" translate="yes" xml:space="preserve">
          <source>The same as ARGV.</source>
          <target state="translated">ARGV와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="908871855e2cf190d2bb3fc092cb6ff61921605a" translate="yes" xml:space="preserve">
          <source>The same is true for &lt;code&gt;unless&lt;/code&gt;.</source>
          <target state="translated">그렇지 &lt;code&gt;unless&lt;/code&gt; 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="7440d47e77013c0e5736162bdc213dabf0ad8e40" translate="yes" xml:space="preserve">
          <source>The same is true for a &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 나 &lt;code&gt;module&lt;/code&gt; 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="40614b427c31d8ee04e70e92e52ae05bb0220544" translate="yes" xml:space="preserve">
          <source>The same is true for a &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, and &lt;code&gt;block&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; , &lt;code&gt;module&lt;/code&gt; 및 &lt;code&gt;block&lt;/code&gt; 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="e4fea6921e0cd8d75824bf6f0e192aeb87b865e8" translate="yes" xml:space="preserve">
          <source>The same is true for constants:</source>
          <target state="translated">상수도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="86e45f766c5c878e6e513f44ae28f15105ba0e40" translate="yes" xml:space="preserve">
          <source>The same number will be returned on all calls to &lt;code&gt;object_id&lt;/code&gt; for a given object, and no two active objects will share an id.</source>
          <target state="translated">지정된 객체에 대해 &lt;code&gt;object_id&lt;/code&gt; 를 호출 할 때마다 동일한 번호가 반환되며 두 개의 활성 객체가 ID를 공유하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="34a6405881dc2f5056b5c9543c1ee028c3ed08ad" translate="yes" xml:space="preserve">
          <source>The scanner's state of the current token. This value is the bitwise OR of zero or more of the &lt;code&gt;Ripper::EXPR_*&lt;/code&gt; constants.</source>
          <target state="translated">현재 토큰의 스캐너 상태입니다. 이 값은 &lt;code&gt;Ripper::EXPR_*&lt;/code&gt; 상수 중 0 이상의 비트 단위 OR입니다 .</target>
        </trans-unit>
        <trans-unit id="fc9831308d4c734401b1fb83873c391b17503606" translate="yes" xml:space="preserve">
          <source>The scheduler runs into a wait loop, checking all the blocked fibers (which it has registered on hook calls) and resuming them when the awaited resource is ready (I/O ready, sleep time passed).</source>
          <target state="translated">스케줄러는 대기 루프로 실행되어 차단 된 모든 파이버 (훅 ​​호출에 등록됨)를 확인하고 대기중인 리소스가 준비되면 (I / O 준비, 휴면 시간 경과) 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="2859292a4df5fac1fd93c32f225ade618288e1a8" translate="yes" xml:space="preserve">
          <source>The script encoding (__ENCODING__), not &lt;a href=&quot;encoding#method-c-default_internal&quot;&gt;&lt;code&gt;default_internal&lt;/code&gt;&lt;/a&gt;, is used as the encoding of created strings.</source>
          <target state="translated">&lt;a href=&quot;encoding#method-c-default_internal&quot;&gt; &lt;code&gt;default_internal&lt;/code&gt; &lt;/a&gt; 이 아닌 스크립트 인코딩 (__ENCODING__) 이 생성 된 문자열의 인코딩으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4f008e0a95afe7ebe13258099e961d390c7a95c1" translate="yes" xml:space="preserve">
          <source>The script encoding of the current file. See &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 파일의 스크립트 인코딩 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3febca7b10c0bad64fef71a1321befc0cf51fd0e" translate="yes" xml:space="preserve">
          <source>The second and third form take a single argument which is either an array of key-value pairs or an object convertible to a hash.</source>
          <target state="translated">두 번째와 세 번째 형식은 키-값 쌍의 배열이거나 해시로 변환 가능한 객체 인 단일 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5a9027d2747de8b79fef5373887a0b704f9dfcbc" translate="yes" xml:space="preserve">
          <source>The second form calculates &lt;code&gt;bns[0] * point + bns[1] * points[0] + ... + bns[-1] * points[-1] + bn2 * G&lt;/code&gt;. &lt;em&gt;bn2&lt;/em&gt; may be omitted. &lt;em&gt;bns&lt;/em&gt; must be an array of &lt;a href=&quot;../../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;points&lt;/em&gt; must be an array of &lt;a href=&quot;point&quot;&gt;&lt;code&gt;OpenSSL::PKey::EC::Point&lt;/code&gt;&lt;/a&gt;. Please note that &lt;code&gt;points[0]&lt;/code&gt; is not multiplied by &lt;code&gt;bns[0]&lt;/code&gt;, but &lt;code&gt;bns[1]&lt;/code&gt;.</source>
          <target state="translated">두 번째 형태는 &lt;code&gt;bns[0] * point + bns[1] * points[0] + ... + bns[-1] * points[-1] + bn2 * G&lt;/code&gt; 합니다. &lt;em&gt;bn2&lt;/em&gt; 는 생략 될 수 있습니다. &lt;em&gt;bns&lt;/em&gt; 는 &lt;a href=&quot;../../bn&quot;&gt; &lt;code&gt;OpenSSL::BN&lt;/code&gt; &lt;/a&gt; 의 배열이어야합니다 . &lt;em&gt;points&lt;/em&gt; 는 &lt;a href=&quot;point&quot;&gt; &lt;code&gt;OpenSSL::PKey::EC::Point&lt;/code&gt; &lt;/a&gt; 의 배열이어야합니다 . 주의하시기 바랍니다 &lt;code&gt;points[0]&lt;/code&gt; 곱되지 &lt;code&gt;bns[0]&lt;/code&gt; 하지만, &lt;code&gt;bns[1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="134600606b743f60938e64e67aa777bf381d7655" translate="yes" xml:space="preserve">
          <source>The second form calls the instance method &lt;code&gt;constants&lt;/code&gt;.</source>
          <target state="translated">두 번째 양식은 인스턴스 메소드 &lt;code&gt;constants&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="7b0d93041cc340e416077940c02f2ce523fa6ea3" translate="yes" xml:space="preserve">
          <source>The second form creates a copy of the array passed as a parameter (the array is generated by calling &lt;a href=&quot;array#method-i-to_ary&quot;&gt;&lt;code&gt;to_ary&lt;/code&gt;&lt;/a&gt; on the parameter).</source>
          <target state="translated">두 번째 형식은 매개 변수로 전달 된 배열의 사본을 작성합니다 (배열은 매개 변수에서 &lt;a href=&quot;array#method-i-to_ary&quot;&gt; &lt;code&gt;to_ary&lt;/code&gt; &lt;/a&gt; 를 호출하여 생성됨 ).</target>
        </trans-unit>
        <trans-unit id="39f9f9fc2bcb390272a27de606298ed3fd378639" translate="yes" xml:space="preserve">
          <source>The second form returns the &lt;em&gt;n&lt;/em&gt;th field in this &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;n&lt;/em&gt; can be a string or symbol to reference a named capture.</source>
          <target state="translated">두 번째 양식은 이 &lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;em&gt;n&lt;/em&gt; 번째 필드를 반환 합니다. &lt;em&gt;n&lt;/em&gt; 은 명명 된 캡처를 참조하기위한 문자열 또는 기호 일 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="762574c32754fb703cb15ad7f6655dfae4e028da" translate="yes" xml:space="preserve">
          <source>The second value is a string representing the significant digits of the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, with no leading zeros.</source>
          <target state="translated">두 번째 값은 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 유효 숫자를 나타내는 문자열이며 앞에 0이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e0d1c94210b03ddb5240f6ead09da06d6a45bc5f" translate="yes" xml:space="preserve">
          <source>The second visibility is &lt;code&gt;protected&lt;/code&gt;. When calling a protected method the sender must be a subclass of the receiver or the receiver must be a subclass of the sender. Otherwise a &lt;a href=&quot;../nomethoderror&quot;&gt;&lt;code&gt;NoMethodError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">두 번째 가시성은 &lt;code&gt;protected&lt;/code&gt; . 보호 된 메소드를 호출 할 때 송신자는 수신자의 서브 클래스이거나 수신자는 송신자의 서브 클래스 여야합니다. 그렇지 않으면 &lt;a href=&quot;../nomethoderror&quot;&gt; &lt;code&gt;NoMethodError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="35cbe9c9af17732a9920f89321ba89fba353d4b5" translate="yes" xml:space="preserve">
          <source>The selectors may be either integer indices or ranges.</source>
          <target state="translated">선택기는 정수 인덱스 또는 범위 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e892f1a88443435e41ed2970c8ec762e72ed89a0" translate="yes" xml:space="preserve">
          <source>The semantics of a piece of advice are platform-dependent. See &lt;em&gt;man 2 posix_fadvise&lt;/em&gt; for details.</source>
          <target state="translated">조언의 의미는 플랫폼에 따라 다릅니다. 자세한 내용은 &lt;em&gt;man 2 posix_fadvise&lt;/em&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38084c63337b4e84b40209aa7c4f29289b806f19" translate="yes" xml:space="preserve">
          <source>The sender's credentials</source>
          <target state="translated">발신자의 자격 증명</target>
        </trans-unit>
        <trans-unit id="7b339e5612fbcf780e022dd63f72d24bef552e20" translate="yes" xml:space="preserve">
          <source>The sequence number of the message on the server.</source>
          <target state="translated">서버에서 메시지의 순서 번호입니다.</target>
        </trans-unit>
        <trans-unit id="3d6fa74b56d3fc39e4a7e9ef3403c117b2a171e5" translate="yes" xml:space="preserve">
          <source>The sequence number of this message.</source>
          <target state="translated">이 메시지의 순서 번호.</target>
        </trans-unit>
        <trans-unit id="a3948d111552eef3a5ea0d7ceda05c9810f71b4c" translate="yes" xml:space="preserve">
          <source>The server completion result response indicates the success or failure of the operation. It is tagged with the same tag as the client command which began the operation.</source>
          <target state="translated">서버 완료 결과 응답은 작업의 성공 또는 실패를 나타냅니다. 작업을 시작한 클라이언트 명령과 동일한 태그로 태그됩니다.</target>
        </trans-unit>
        <trans-unit id="d4b5960043449a44f31680f711cce21469e88adf" translate="yes" xml:space="preserve">
          <source>The server software, returned as the Server header.</source>
          <target state="translated">서버 소프트웨어로, 서버 헤더로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a7bcc31ea63b622ebb4a10d4e8c82a5eaf557373" translate="yes" xml:space="preserve">
          <source>The server will immediately start running in its own thread.</source>
          <target state="translated">서버는 즉시 자체 스레드에서 실행을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="84968745d462535ec5cc5af9bd7ded188d776d59" translate="yes" xml:space="preserve">
          <source>The server's last response code.</source>
          <target state="translated">서버의 마지막 응답 코드.</target>
        </trans-unit>
        <trans-unit id="01f5ac745845bfaac0121947931294477a569f78" translate="yes" xml:space="preserve">
          <source>The server's last response.</source>
          <target state="translated">서버의 마지막 응답</target>
        </trans-unit>
        <trans-unit id="648557ee7223c4b84fd91272c5691a12b6da891f" translate="yes" xml:space="preserve">
          <source>The server's welcome message.</source>
          <target state="translated">서버의 환영 메시지.</target>
        </trans-unit>
        <trans-unit id="e6e3c8501fb8a056955cb662fdcc5f5c8682a244" translate="yes" xml:space="preserve">
          <source>The service specified is a datagram service (looks up UDP ports)</source>
          <target state="translated">지정된 서비스는 데이터 그램 서비스입니다 (UDP 포트를 찾습니다).</target>
        </trans-unit>
        <trans-unit id="2caaa8e779037defa74a3a2df59c81185ebce5e9" translate="yes" xml:space="preserve">
          <source>The session id is a secure random number by &lt;a href=&quot;../securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; if possible, otherwise an SHA512 hash based upon the time, a random number, and a constant string. This routine is used internally for automatically generated session ids.</source>
          <target state="translated">세션 ID는 가능하면 &lt;a href=&quot;../securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; 에&lt;/a&gt; 의한 안전한 난수 , 그렇지 않으면 시간, 난수 및 상수 문자열을 기반으로하는 SHA512 해시입니다. 이 루틴은 자동으로 생성 된 세션 ID에 내부적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="04ae4b924c666a2d3621037f6260158797e76344" translate="yes" xml:space="preserve">
          <source>The set of all prime numbers.</source>
          <target state="translated">모든 소수의 집합입니다.</target>
        </trans-unit>
        <trans-unit id="9476a92a4d072d345aa9a1a4d9c3229e779ac062" translate="yes" xml:space="preserve">
          <source>The set of special characters and their escaped values</source>
          <target state="translated">특수 문자 세트와 이스케이프 된 값</target>
        </trans-unit>
        <trans-unit id="243a577dc0c34d63da9788175c801936f7e3d428" translate="yes" xml:space="preserve">
          <source>The shellwords() function was originally a port of shellwords.pl, but modified to conform to the &lt;a href=&quot;shell&quot;&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/a&gt; &amp;amp; Utilities volume of the IEEE Std 1003.1-2008, 2016 Edition [1].</source>
          <target state="translated">shellwords () 함수는 원래 shellwords.pl의 포트 였지만 IEEE Std 1003.1-2008, 2016 Edition [1] 의 &lt;a href=&quot;shell&quot;&gt; &lt;code&gt;Shell&lt;/code&gt; &lt;/a&gt; &amp;amp; Utilities 볼륨에 맞게 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7f99e25d55e884099039e4fae3edb023895e6da7" translate="yes" xml:space="preserve">
          <source>The shellwords() function was originally a port of shellwords.pl, but modified to conform to the Shell &amp;amp; Utilities volume of the IEEE Std 1003.1-2008, 2016 Edition [1].</source>
          <target state="translated">shellwords () 함수는 원래 shellwords.pl의 포트 였지만 IEEE Std 1003.1-2008, 2016 Edition [1]의 Shell &amp;amp; Utilities 볼륨을 준수하도록 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="1b0c56f66bc0c9595548c7055fa6aaab81b42653" translate="yes" xml:space="preserve">
          <source>The short name of the &lt;a href=&quot;objectid&quot;&gt;&lt;code&gt;ObjectId&lt;/code&gt;&lt;/a&gt;, as defined in &amp;lt;openssl/objects.h&amp;gt;.</source>
          <target state="translated">&amp;lt;openssl / objects.h&amp;gt;에 정의 된 &lt;a href=&quot;objectid&quot;&gt; &lt;code&gt;ObjectId&lt;/code&gt; &lt;/a&gt; 의 짧은 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="9e22815bb3ef1330feedfc154ca65fe158c29b2f" translate="yes" xml:space="preserve">
          <source>The similarity between method and local variable names can lead to confusing code, for example:</source>
          <target state="translated">메소드와 로컬 변수 이름의 유사성으로 인해 코드가 혼동 될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c228a945042fc815748acd7657638c9c69177305" translate="yes" xml:space="preserve">
          <source>The simplest &lt;code&gt;if&lt;/code&gt; expression has two parts, a &amp;ldquo;test&amp;rdquo; expression and a &amp;ldquo;then&amp;rdquo; expression. If the &amp;ldquo;test&amp;rdquo; expression evaluates to a true then the &amp;ldquo;then&amp;rdquo; expression is evaluated.</source>
          <target state="translated">가장 간단한 &lt;code&gt;if&lt;/code&gt; 표현은 두 부분으로, &quot;테스트&quot;표현하고 &quot;다음&quot;식이있다. &quot;test&quot;표현식이 true로 평가되면 &quot;then&quot;표현식이 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="87f82be18e2ae852580cc24ceb7a391816a8e260" translate="yes" xml:space="preserve">
          <source>The simplest way to create or update a Hash value (instance method &lt;a href=&quot;hash#method-i-5B-5D-3D&quot;&gt;&lt;code&gt;[]=&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">해시 값을 생성하거나 업데이트하는 가장 간단한 방법 (인스턴스 메서드 &lt;a href=&quot;hash#method-i-5B-5D-3D&quot;&gt; &lt;code&gt;[]=&lt;/code&gt; &lt;/a&gt; ) :</target>
        </trans-unit>
        <trans-unit id="fbe4653c23cb2a52f5e3808f0b400885321b7cef" translate="yes" xml:space="preserve">
          <source>The simplest way to delete a Hash entry (instance method &lt;a href=&quot;hash#method-i-delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Hash 항목을 삭제하는 가장 간단한 방법 (인스턴스 메소드 &lt;a href=&quot;hash#method-i-delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt; ) :</target>
        </trans-unit>
        <trans-unit id="043dd7b3fc67780935bfc3757e6587f9349ac721" translate="yes" xml:space="preserve">
          <source>The simplest way to do this is via cookies. The &lt;a href=&quot;session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; class provides transparent support for session id communication via cookies if the client has cookies enabled.</source>
          <target state="translated">가장 간단한 방법은 쿠키를 이용하는 것입니다. &lt;a href=&quot;session&quot;&gt; &lt;code&gt;CGI::Session&lt;/code&gt; &lt;/a&gt; 클래스는 클라이언트가 쿠키를 사용하도록 설정 한 경우 쿠키를 통해 세션 ID 통신을위한 투명한 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5a32cfb47a5b06dd1bf4a62261d37857c920817f" translate="yes" xml:space="preserve">
          <source>The simplest way to retrieve a Hash value (instance method &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">해시 값을 검색하는 가장 간단한 방법 (인스턴스 메서드 &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt; ) :</target>
        </trans-unit>
        <trans-unit id="666695b9b968cc65b9640bd8df916d7a0bf7ac46" translate="yes" xml:space="preserve">
          <source>The simplest way to send output to the HTTP client is using the &lt;a href=&quot;cgi#method-i-out&quot;&gt;&lt;code&gt;out()&lt;/code&gt;&lt;/a&gt; method. This takes the HTTP headers as a hash parameter, and the body content via a block. The headers can be generated as a string using the &lt;a href=&quot;cgi#method-i-http_header&quot;&gt;&lt;code&gt;http_header()&lt;/code&gt;&lt;/a&gt; method. The output stream can be written directly to using the &lt;a href=&quot;cgi#method-i-print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">HTTP 클라이언트로 출력을 보내는 가장 간단한 방법은 &lt;a href=&quot;cgi#method-i-out&quot;&gt; &lt;code&gt;out()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하는 것 입니다. HTTP 헤더를 해시 매개 변수로 사용하고 본문 내용을 블록을 통해 가져옵니다. &lt;a href=&quot;cgi#method-i-http_header&quot;&gt; &lt;code&gt;http_header()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 헤더를 문자열로 생성 할 수 있습니다 . 출력 스트림은 &lt;a href=&quot;cgi#method-i-print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하여 직접 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18f3314ce772f28e9aa9b6663641a9b7b65e1bd9" translate="yes" xml:space="preserve">
          <source>The single argument to scanf is a format string, which generally includes one or more conversion specifiers. Conversion specifiers begin with the percent character ('%') and include information about what scanf should next scan for (string, decimal number, single character, etc.).</source>
          <target state="translated">scanf에 대한 단일 인수는 형식 문자열이며 일반적으로 하나 이상의 변환 지정자를 포함합니다. 변환 지정자는 퍼센트 문자 ( '%')로 시작하며 다음에 스캔 할 scanf (문자열, 10 진수, 단일 문자 등)에 대한 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="2234c6567f0ac304dff254da33e11e88ea47df50" translate="yes" xml:space="preserve">
          <source>The singleton class (also known as the metaclass or eigenclass) of an object is a class that holds methods for only that instance. You can access the singleton class of an object using &lt;code&gt;class &amp;lt;&amp;lt; object&lt;/code&gt; like this:</source>
          <target state="translated">객체의 싱글 톤 클래스 (메타 클래스 또는 고유 클래스라고도 함)는 해당 인스턴스에 대한 메소드 만 보유하는 클래스입니다. 다음 과 같이 &lt;code&gt;class &amp;lt;&amp;lt; object&lt;/code&gt; 사용하여 객체의 싱글 톤 클래스에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b4bd4ebcd1d274db7aa8eadcdb9a80563ce84c7f" translate="yes" xml:space="preserve">
          <source>The size and endian is dependent on the host.</source>
          <target state="translated">크기와 엔디안은 호스트에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="876de9487fe49c1b3ef6881f428600f6d2fde4b3" translate="yes" xml:space="preserve">
          <source>The size and endian is dependent on the platform.</source>
          <target state="translated">크기와 엔디안은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f3285feff6e41b13800549f689fa18fbef777b72" translate="yes" xml:space="preserve">
          <source>The size is dependent on the platform.</source>
          <target state="translated">크기는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d8f1d15cf63d435b66f85220dba136703d3c690c" translate="yes" xml:space="preserve">
          <source>The size of the tuple.</source>
          <target state="translated">튜플의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="130216d5131e9a81b8b260bc2c7dc94a095dbce7" translate="yes" xml:space="preserve">
          <source>The smallest negative exponent in a double-precision floating point where 10 raised to this power minus 1.</source>
          <target state="translated">배정 밀도 부동 소수점에서 가장 작은 음의 지수는 10을이 거듭 제곱에서 1로 뺀 값입니다.</target>
        </trans-unit>
        <trans-unit id="330d457655b182e51107b007431f264ede030660" translate="yes" xml:space="preserve">
          <source>The smallest positive normalized number in a double-precision floating point.</source>
          <target state="translated">배정 밀도 부동 소수점에서 가장 작은 양의 정규화 된 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="330f2891e2305b7d9a66a001a05e49ccd953540a" translate="yes" xml:space="preserve">
          <source>The smallest possible exponent value in a double-precision floating point.</source>
          <target state="translated">배정 밀도 부동 소수점에서 가능한 최소 지수 값입니다.</target>
        </trans-unit>
        <trans-unit id="05279057c3ed9e870bcb41005af27060fc9dcc0f" translate="yes" xml:space="preserve">
          <source>The sn (short names) and ln (long names) are defined in &amp;lt;openssl/object.h&amp;gt; and &amp;lt;openssl/obj_mac.h&amp;gt;. They are textual representations of ASN.1 OBJECT IDENTIFIERs. Each supported digest algorithm has an OBJECT IDENTIFIER associated to it and those again have short/long names assigned to them. E.g. the OBJECT IDENTIFIER for SHA-1 is 1.3.14.3.2.26 and its sn is &amp;ldquo;SHA1&amp;rdquo; and its ln is &amp;ldquo;sha1&amp;rdquo;.</source>
          <target state="translated">sn (짧은 이름) ​​및 ln (긴 이름)은 &amp;lt;openssl / object.h&amp;gt; 및 &amp;lt;openssl / obj_mac.h&amp;gt;에 정의되어 있습니다. ASN.1 개체 식별자의 텍스트 표현입니다. 지원되는 각 다이제스트 알고리즘에는 관련된 개체 식별자가 있으며 짧은 / 긴 이름이 다시 할당됩니다. 예를 들어 SHA-1의 개체 식별자는 1.3.14.3.2.26이고 sn은&amp;ldquo;SHA1&amp;rdquo;이고 ln은&amp;ldquo;sha1&amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="feb799a9bd535642e696d5a6eb3a94e68bd1faa6" translate="yes" xml:space="preserve">
          <source>The socket is &lt;strong&gt;not&lt;/strong&gt; closed when the block returns. So application should close it explicitly.</source>
          <target state="translated">블록이 반환 될 때 소켓이 닫히지 &lt;strong&gt;않습니다&lt;/strong&gt; . 따라서 응용 프로그램은 명시 적으로 닫아야합니다.</target>
        </trans-unit>
        <trans-unit id="4370c9d579182dc1c9e68e7288d2078b316c5e4d" translate="yes" xml:space="preserve">
          <source>The socket is &lt;strong&gt;not&lt;/strong&gt; closed when the block returns. So application should close it.</source>
          <target state="translated">블록이 반환 될 때 소켓이 닫히지 &lt;strong&gt;않습니다&lt;/strong&gt; . 따라서 응용 프로그램은 그것을 닫아야합니다.</target>
        </trans-unit>
        <trans-unit id="54be68a8ebdd9db090fe589898db76046a40c792" translate="yes" xml:space="preserve">
          <source>The source, as defined above, is &lt;code&gt;nil&lt;/code&gt; or the empty String &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">위에서 정의한 소스는 &lt;code&gt;nil&lt;/code&gt; 또는 빈 String &lt;code&gt;''&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="51b8a9ba8cfdddc1ccfc3b5feb0989f20d0cc2a8" translate="yes" xml:space="preserve">
          <source>The sources objects are constructed from Gemfile as well as from lockfile. To converge the sources, it is necessary that they match.</source>
          <target state="translated">소스 객체는 Gemfile과 lockfile로 구성됩니다. 소스를 수렴하려면 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf8c46341ab917027b6253dd8f0cc7f7d6769463" translate="yes" xml:space="preserve">
          <source>The special methods &lt;a href=&quot;array#method-i-first&quot;&gt;&lt;code&gt;first&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-last&quot;&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt; will return the first and last elements of an array, respectively.</source>
          <target state="translated">특수 메소드 인 &lt;a href=&quot;array#method-i-first&quot;&gt; &lt;code&gt;first&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;array#method-i-last&quot;&gt; &lt;code&gt;last&lt;/code&gt; &lt;/a&gt; 는 각각 배열의 첫 번째와 마지막 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b6348d6ce53e85e94ebcc1227c122c6c6b342cce" translate="yes" xml:space="preserve">
          <source>The specific value returned indicates the type and sign of the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, as follows:</source>
          <target state="translated">리턴 된 특정 값 은 다음과 같이 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 의 유형 및 부호를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f6396ac4dbd706364f88cd49323296611c687dcf" translate="yes" xml:space="preserve">
          <source>The spherical size of this &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; in meters using scientific notation as 2 integers of XeY</source>
          <target state="translated">과학적 표기법을 2 개의 정수 XeY로 사용 하여이 &lt;a href=&quot;loc&quot;&gt; &lt;code&gt;LOC&lt;/code&gt; &lt;/a&gt; 의 구형 크기 ( 미터)</target>
        </trans-unit>
        <trans-unit id="3671bc537180f1ac5770d7b60d75dbe75db54db0" translate="yes" xml:space="preserve">
          <source>The standard &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; environmental variables are available as read-only attributes of a &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; object. The following is a list of these variables:</source>
          <target state="translated">표준 &lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 환경 변수는 &lt;a href=&quot;cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; &lt;/a&gt; 객체 의 읽기 전용 속성으로 제공됩니다 . 다음은 이러한 변수의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5eb180d2dd46f01111aca4cba7475c4d529b908f" translate="yes" xml:space="preserve">
          <source>The standard error output. The default value for $stderr.</source>
          <target state="translated">표준 오류 출력. $ stderr의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="effa81bb87993995bbea045f6f79bbd98f9ac611" translate="yes" xml:space="preserve">
          <source>The standard input stream (stdin) can be specified by :in, 0 and STDIN.</source>
          <target state="translated">표준 입력 스트림 (stdin)은 : in, 0 및 STDIN으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c293c33272090074c2056e664c2d489eda6e43ea" translate="yes" xml:space="preserve">
          <source>The standard input. The default value for $stdin.</source>
          <target state="translated">표준 입력. $ stdin의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="2fc6fb76b71aaf80e31065cf203338b49fbe269e" translate="yes" xml:space="preserve">
          <source>The standard output. The default value for $stdout.</source>
          <target state="translated">표준 출력. $ stdout의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="9840b0b92be5cb4dd1a6c324cb6ed674c4657119" translate="yes" xml:space="preserve">
          <source>The standard shell always means &lt;code&gt;&quot;/bin/sh&quot;&lt;/code&gt; on Unix-like systems, same as &lt;code&gt;ENV[&quot;RUBYSHELL&quot;]&lt;/code&gt; (or &lt;code&gt;ENV[&quot;COMSPEC&quot;]&lt;/code&gt; on Windows NT series), and similar.</source>
          <target state="translated">표준 쉘은 항상 유닉스 계열 시스템에서 &lt;code&gt;&quot;/bin/sh&quot;&lt;/code&gt; 를 의미 하며 &lt;code&gt;ENV[&quot;RUBYSHELL&quot;]&lt;/code&gt; (또는 Windows NT 시리즈의 &lt;code&gt;ENV[&quot;COMSPEC&quot;]&lt;/code&gt; )와 유사하며 이와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="827b3c6aedff5a34efa4dbb4525b37cad6b16231" translate="yes" xml:space="preserve">
          <source>The standard syntax to define a method:</source>
          <target state="translated">메소드를 정의하기위한 표준 구문 :</target>
        </trans-unit>
        <trans-unit id="f1bf1362d2d61a93dc2b3a37d1fcf16dc02ce786" translate="yes" xml:space="preserve">
          <source>The start of an &lt;a href=&quot;html&quot;&gt;&lt;code&gt;HTML&lt;/code&gt;&lt;/a&gt; bold sequence.</source>
          <target state="translated">&lt;a href=&quot;html&quot;&gt; &lt;code&gt;HTML&lt;/code&gt; &lt;/a&gt; 굵은 체 시퀀스 의 시작 .</target>
        </trans-unit>
        <trans-unit id="413525700edb080755b2b432fe85ccd3f309cd63" translate="yes" xml:space="preserve">
          <source>The start of an ANSI bold sequence.</source>
          <target state="translated">ANSI 굵은 체 시퀀스의 시작.</target>
        </trans-unit>
        <trans-unit id="7ba3eedaec7adf62ba508594d1c856f21657f231" translate="yes" xml:space="preserve">
          <source>The starting column number it appears on in the file.</source>
          <target state="translated">파일에 표시되는 시작 열 번호입니다.</target>
        </trans-unit>
        <trans-unit id="17821f3496ca0553f1c0a0ba9ee3df3b39606227" translate="yes" xml:space="preserve">
          <source>The starting column number the method appears on in the file.</source>
          <target state="translated">메서드가 파일에 표시되는 시작 열 번호입니다.</target>
        </trans-unit>
        <trans-unit id="fe5ceba6fcf6ae666a8912e7343c94ea2e512a67" translate="yes" xml:space="preserve">
          <source>The starting line number it appears on in the file.</source>
          <target state="translated">파일에 나타나는 시작 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="565762b49e858e118c7e4d9cf1343f57bc979224" translate="yes" xml:space="preserve">
          <source>The starting line number the method appears on in the file.</source>
          <target state="translated">메서드가 파일에 표시되는 시작 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="4fec02344c6abdba1d26e17f1559a1f6a428df46" translate="yes" xml:space="preserve">
          <source>The status of the last executed child process (thread-local).</source>
          <target state="translated">마지막으로 실행 된 자식 프로세스의 상태 (스레드 로컬).</target>
        </trans-unit>
        <trans-unit id="9b4d500f0843e787b49631f86a7207bc115fceb2" translate="yes" xml:space="preserve">
          <source>The status of the last executed child process. This value is thread-local.</source>
          <target state="translated">마지막으로 실행 된 자식 프로세스의 상태입니다. 이 값은 스레드 로컬입니다.</target>
        </trans-unit>
        <trans-unit id="8f6af4330a1ee1394e21019ac81fdbe59ee43369" translate="yes" xml:space="preserve">
          <source>The storage structure for field converters is the Hash &lt;a href=&quot;csv#Converters&quot;&gt;&lt;code&gt;CSV::Converters&lt;/code&gt;&lt;/a&gt;. It has several built-in converter procs:</source>
          <target state="translated">필드 변환기의 저장 구조는 Hash &lt;a href=&quot;csv#Converters&quot;&gt; &lt;code&gt;CSV::Converters&lt;/code&gt; &lt;/a&gt; 입니다. 몇 가지 내장 변환기 프로세서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="04e9820fea87d7f3dbb511f3794463d8f3351a41" translate="yes" xml:space="preserve">
          <source>The storage structure for header converters is the Hash &lt;a href=&quot;csv#HeaderConverters&quot;&gt;&lt;code&gt;CSV::HeaderConverters&lt;/code&gt;&lt;/a&gt;, which works in the same way. It also has built-in converter procs:</source>
          <target state="translated">헤더 변환기의 저장 구조 는 동일한 방식으로 작동 하는 Hash &lt;a href=&quot;csv#HeaderConverters&quot;&gt; &lt;code&gt;CSV::HeaderConverters&lt;/code&gt; &lt;/a&gt; 입니다. 또한 내장 변환기 프로세서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd57b082f956b278c91ad4fc65da893142285dd2" translate="yes" xml:space="preserve">
          <source>The strategy is to first instantiate a &lt;a href=&quot;openssl/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; for encryption, and then to generate a random IV plus a key derived from the password using PBKDF2. PKCS #5 v2.0 recommends at least 8 bytes for the salt, the number of iterations largely depends on the hardware being used.</source>
          <target state="translated">이 전략은 먼저 &lt;a href=&quot;openssl/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 위해 암호 를 인스턴스화 한 다음 PBKDF2를 사용하여 암호에서 파생 된 임의 IV + 키를 생성하는 것입니다. PKCS # 5 v2.0은 솔트에 대해 최소 8 바이트를 권장하며 반복 횟수는 사용중인 하드웨어에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9ab6126d7147db387b60831cdcd8e13f11c4c05c" translate="yes" xml:space="preserve">
          <source>The stream is only available for output.</source>
          <target state="translated">스트림은 출력에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4baeda74dcefe3eb0a46c4a72071ee9cdf370431" translate="yes" xml:space="preserve">
          <source>The stream must be opened for writing. Each given object that isn't a string will be converted by calling its &lt;code&gt;to_s&lt;/code&gt; method. When called without arguments, prints the contents of &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="translated">쓰기 위해 스트림을 열어야합니다. 문자열이 아닌 주어진 각 객체는 &lt;code&gt;to_s&lt;/code&gt; 메소드 를 호출하여 변환됩니다 . 인수없이 호출하면 &lt;code&gt;$_&lt;/code&gt; 의 내용을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="44a5e4ce64b33dbfabbd5142620444bbbec5f601" translate="yes" xml:space="preserve">
          <source>The stream must be opened for writing. If called with an array argument, writes each element on a new line. Each given object that isn't a string or array will be converted by calling its &lt;code&gt;to_s&lt;/code&gt; method. If called without arguments, outputs a single newline.</source>
          <target state="translated">쓰기 위해 스트림을 열어야합니다. 배열 인수와 함께 호출되면 각 요소를 새 줄에 씁니다. 문자열이나 배열이 아닌 각 주어진 객체는 &lt;code&gt;to_s&lt;/code&gt; 메소드 를 호출하여 변환됩니다 . 인수없이 호출하면 단일 줄 바꿈이 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="8da5cbcc8c628b169cf20f6cc6f9f0c8cd971581" translate="yes" xml:space="preserve">
          <source>The string matched by the last successful match.</source>
          <target state="translated">마지막으로 성공한 일치와 일치하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3033ea20659a74d161afa7e8df5d3fb6d56ba03d" translate="yes" xml:space="preserve">
          <source>The string may be many lines long.</source>
          <target state="translated">문자열은 여러 줄 길이 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c51db9f909ba9ab830d343ba8e3948d1bfad4eb6" translate="yes" xml:space="preserve">
          <source>The string must be a valid cipher name like &amp;ldquo;AES-128-CBC&amp;rdquo; or &amp;ldquo;3DES&amp;rdquo;.</source>
          <target state="translated">문자열은&amp;ldquo;AES-128-CBC&amp;rdquo;또는&amp;ldquo;3DES&amp;rdquo;와 같은 유효한 암호 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="7a4317506555840fb9893a825033d66309f3fe1e" translate="yes" xml:space="preserve">
          <source>The string must contain a valid cipher name like &amp;ldquo;AES-256-CBC&amp;rdquo;.</source>
          <target state="translated">문자열에는&amp;ldquo;AES-256-CBC&amp;rdquo;와 같은 유효한 암호 이름이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5dd9ad425c4b4575a184338b0256f0b233cd2622" translate="yes" xml:space="preserve">
          <source>The string representation of &lt;code&gt;false&lt;/code&gt; is &amp;ldquo;false&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 의 문자열 표현 은 &quot;false&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="90ae09feb0b03688ed80e47f8b93ec97fde55724" translate="yes" xml:space="preserve">
          <source>The string representation of &lt;code&gt;true&lt;/code&gt; is &amp;ldquo;true&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 의 문자열 표현 은&amp;ldquo;true&amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="9b859d81ce494183dacbc7eb0dc63e6662c6c8dc" translate="yes" xml:space="preserve">
          <source>The string to the left of the last successful match.</source>
          <target state="translated">마지막으로 성공한 일치의 왼쪽에있는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9ca96e8bb755f611f6136c504bc7fb036fcc5866" translate="yes" xml:space="preserve">
          <source>The string to the right of the last successful match.</source>
          <target state="translated">마지막으로 성공한 일치의 오른쪽에있는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="5109f4a25e4ed2c940720c2c5c6706dc2a17b7ee" translate="yes" xml:space="preserve">
          <source>The string which represents the version of zlib.h</source>
          <target state="translated">zlib.h의 버전을 나타내는 문자열</target>
        </trans-unit>
        <trans-unit id="17295b1674b9b883da4d3efa19cf186eac20aba7" translate="yes" xml:space="preserve">
          <source>The string will be deduplicated as long as it does not have any instance variables set on it.</source>
          <target state="translated">문자열에 인스턴스 변수가 설정되어 있지 않으면 문자열이 중복 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="fb62f22a41ca05bba041026aff825a5e4c7ca061" translate="yes" xml:space="preserve">
          <source>The string will be deduplicated as long as it is not tainted, or has any instance variables set on it.</source>
          <target state="translated">문자열은 오염되지 않았거나 인스턴스 변수가 설정되어있는 한 중복 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="0ce3acd678afb49e780d3d1244b6469587b33cb1" translate="yes" xml:space="preserve">
          <source>The struct contains the following members:</source>
          <target state="translated">구조체에는 다음 멤버가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f011a683cb52beba055fdd8fef918405907412a4" translate="yes" xml:space="preserve">
          <source>The structure above has Hash objects and Array objects, both of which have instance method &lt;code&gt;dig&lt;/code&gt;.</source>
          <target state="translated">위의 구조에는 Hash 객체와 Array 객체가 있으며 둘 다 인스턴스 메소드 &lt;code&gt;dig&lt;/code&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3d1d374bde1c1a93019a017ff0823f9a2212bca" translate="yes" xml:space="preserve">
          <source>The style of programming using &lt;code&gt;$_&lt;/code&gt; as an implicit parameter is gradually losing favor in the Ruby community.</source>
          <target state="translated">암시 적 매개 변수로 &lt;code&gt;$_&lt;/code&gt; 를 사용하는 프로그래밍 스타일은 Ruby 커뮤니티에서 점차 선호를 잃고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec31d0b99ac183c2b9991f88cc4d6c1e5bf1bf17" translate="yes" xml:space="preserve">
          <source>The successor to a digit is another digit, &amp;ldquo;carrying&amp;rdquo; to the next-left character for a &amp;ldquo;rollover&amp;rdquo; from 9 to 0, and prepending another digit if necessary:</source>
          <target state="translated">숫자의 후속 숫자는 9에서 0으로 &quot;롤오버&quot;하기 위해 다음 왼쪽 문자로 &quot;이동&quot;하고 필요한 경우 다른 숫자 앞에 추가하는 또 다른 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="4e528095993a051b6194cc5e80022a395c2e34ef" translate="yes" xml:space="preserve">
          <source>The successor to a letter is another letter of the same case, carrying to the next-left character for a rollover, and prepending another same-case letter if necessary:</source>
          <target state="translated">문자의 후속 문자는 롤오버를 위해 다음 왼쪽 문자로 이동하고 필요한 경우 다른 문자 앞에 추가하는 동일한 케이스의 다른 문자입니다.</target>
        </trans-unit>
        <trans-unit id="b9f8f3546a93720adc498a59138caae1cdf3272a" translate="yes" xml:space="preserve">
          <source>The successor to a non-alphanumeric character is the next character in the underlying character set's collating sequence, carrying to the next-left character for a rollover, and prepending another character if necessary:</source>
          <target state="translated">영숫자가 아닌 문자의 후속 문자는 기본 문자 집합의 배열 순서에서 다음 문자로, 롤오버를 위해 다음 왼쪽 문자로 이동하고 필요한 경우 다른 문자 앞에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f08802f5ad6950ddb665cbe643a393498b84c3c1" translate="yes" xml:space="preserve">
          <source>The successor to an empty String is a new empty String:</source>
          <target state="translated">빈 문자열의 후속 작업은 새로운 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="17b008e5ccbc04f2194a389374b11be8e72ed07e" translate="yes" xml:space="preserve">
          <source>The suggested pattern is to implement the main event loop in the &lt;a href=&quot;schedulerinterface#method-i-close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">제안 된 패턴은 &lt;a href=&quot;schedulerinterface#method-i-close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 에서 메인 이벤트 루프를 구현하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e386e16fcecbb38a291cdfbc9b88e1da7bd4a11d" translate="yes" xml:space="preserve">
          <source>The superclass for all exceptions raised by Ruby/zlib.</source>
          <target state="translated">Ruby / zlib에 의해 제기 된 모든 예외에 대한 수퍼 클래스.</target>
        </trans-unit>
        <trans-unit id="f44aae61bc41b743bf3aa8dad6b6da94e26bc689" translate="yes" xml:space="preserve">
          <source>The supplied value must be a member of &lt;a href=&quot;getoptlong#ORDERINGS&quot;&gt;&lt;code&gt;GetoptLong::ORDERINGS&lt;/code&gt;&lt;/a&gt;. It alters the processing of options as follows:</source>
          <target state="translated">제공된 값은 &lt;a href=&quot;getoptlong#ORDERINGS&quot;&gt; &lt;code&gt;GetoptLong::ORDERINGS&lt;/code&gt; &lt;/a&gt; 의 멤버 여야합니다 . 다음과 같이 옵션 처리를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="7abd5db8aff4f9a9e733e7140122416e99f813e0" translate="yes" xml:space="preserve">
          <source>The supported constants depends on OS and version. Ruby provides following types of &lt;code&gt;clock_id&lt;/code&gt; if available.</source>
          <target state="translated">지원되는 상수는 OS 및 버전에 따라 다릅니다. Ruby는 가능한 경우 다음 유형의 &lt;code&gt;clock_id&lt;/code&gt; 를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5a921411df1df731eb4ef56d3631b29da652be55" translate="yes" xml:space="preserve">
          <source>The symbols defined by this library will be made available for symbol resolution of subsequently loaded libraries.</source>
          <target state="translated">이 라이브러리에서 정의한 기호는 이후에로드 된 라이브러리의 기호 분석에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05f343f03d736fa969033d2c488a629c24c1ce82" translate="yes" xml:space="preserve">
          <source>The synopsis comes next, and is a short description of what the method does and why you would want to use it. Ideally, this is a single sentence, but for more complex methods it may require an entire paragraph.</source>
          <target state="translated">그 다음에는이 방법이 수행하는 작업과 사용하려는 이유에 대한 간략한 설명이 요약되어 있습니다. 이상적으로 이것은 단일 문장이지만 더 복잡한 방법의 경우 전체 단락이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23cc36e7aef82509ef12811e5db215205c9ae9ca" translate="yes" xml:space="preserve">
          <source>The syntax for adding a method to an object is as follows:</source>
          <target state="translated">객체에 메소드를 추가하는 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="253d210c023eb6d912d2272874379a84d73a9e43" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; URIs is defined in RFC1738 section 3.3.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; URI 의 구문은 RFC1738 섹션 3.3에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d66b4e34eb9477b3bd495aca6535ea2956404d59" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;a href=&quot;ws&quot;&gt;&lt;code&gt;WS&lt;/code&gt;&lt;/a&gt; URIs is defined in RFC6455 section 3.</source>
          <target state="translated">&lt;a href=&quot;ws&quot;&gt; &lt;code&gt;WS&lt;/code&gt; &lt;/a&gt; URI 의 구문은 RFC6455 섹션 3에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f772ea158df6202e773c5f6bf324e96bb12d39e6" translate="yes" xml:space="preserve">
          <source>The syntax of a format sequence is as follows.</source>
          <target state="translated">형식 순서의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="32fe2c7060f1ba1bb12e04585f72669ae308cb97" translate="yes" xml:space="preserve">
          <source>The syslog package provides a Ruby interface to the POSIX system logging facility.</source>
          <target state="translated">syslog 패키지는 POSIX 시스템 로깅 기능에 Ruby 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="14991bba54408f10e821c6ec438fe88c68c81eb0" translate="yes" xml:space="preserve">
          <source>The syslog protocol is standardized in RFC 5424.</source>
          <target state="translated">syslog 프로토콜은 RFC 5424에서 표준화되었습니다.</target>
        </trans-unit>
        <trans-unit id="897c7894332d715493b61a91967de78c1cccd0ab" translate="yes" xml:space="preserve">
          <source>The system has symbolic link.</source>
          <target state="translated">시스템에는 심볼릭 링크가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1ad5069fd4ac71c3adaeeac31c5bf0f8dec58ec" translate="yes" xml:space="preserve">
          <source>The tag may only be retrieved after calling &lt;a href=&quot;cipher#method-i-final&quot;&gt;&lt;code&gt;Cipher#final&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cipher#method-i-final&quot;&gt; &lt;code&gt;Cipher#final&lt;/code&gt; &lt;/a&gt; 을 호출 한 후에 만 ​​태그를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91e8267fa871ecafc04c6f3cbf04459caffba408" translate="yes" xml:space="preserve">
          <source>The temporary file will be placed in the directory as specified by the &lt;code&gt;tmpdir&lt;/code&gt; parameter. By default, this is &lt;code&gt;Dir.tmpdir&lt;/code&gt;.</source>
          <target state="translated">임시 파일은 &lt;code&gt;tmpdir&lt;/code&gt; 매개 변수에 지정된대로 디렉토리에 배치됩니다 . 기본적으로 &lt;code&gt;Dir.tmpdir&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cc104c846382e3b427db172f8385defecdee3e42" translate="yes" xml:space="preserve">
          <source>The temporary file will be placed in the directory as specified by the &lt;code&gt;tmpdir&lt;/code&gt; parameter. By default, this is &lt;code&gt;Dir.tmpdir&lt;/code&gt;. When $SAFE &amp;gt; 0 and the given &lt;code&gt;tmpdir&lt;/code&gt; is tainted, it uses '/tmp' as the temporary directory. Please note that &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; values are tainted by default, and &lt;code&gt;Dir.tmpdir&lt;/code&gt;'s return value might come from environment variables (e.g. &lt;code&gt;$TMPDIR&lt;/code&gt;).</source>
          <target state="translated">임시 파일은 &lt;code&gt;tmpdir&lt;/code&gt; 매개 변수 로 지정된 디렉토리에 배치됩니다 . 기본적으로 이것은 &lt;code&gt;Dir.tmpdir&lt;/code&gt; 입니다. $ SAFE&amp;gt; 0이고 지정된 &lt;code&gt;tmpdir&lt;/code&gt; 이 오염되면 '/ tmp'를 임시 디렉토리로 사용합니다. 것을주십시오 참고 &lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; 의&lt;/a&gt; 값은 기본적으로 오염되고, &lt;code&gt;Dir.tmpdir&lt;/code&gt; 의 반환 값은 환경 변수 (예에서 올 수도 &lt;code&gt;$TMPDIR&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bea8a588f5152563351d4e75481a10a17fc8dd5b" translate="yes" xml:space="preserve">
          <source>The tests for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;elsif&lt;/code&gt; may have side-effects. The most common use of side-effect is to cache a value into a local variable:</source>
          <target state="translated">대한 시험 &lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;elsif&lt;/code&gt; 부작용을 가질 수있다. 부작용의 가장 일반적인 용도는 값을 로컬 변수에 캐시하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9369ef15ea5d6bf1d9a54483e1b7d6a275237dfc" translate="yes" xml:space="preserve">
          <source>The text &lt;code&gt;sep&lt;/code&gt; is inserted if a line is not broken at this point.</source>
          <target state="translated">이 시점에서 줄이 끊어지지 않으면 텍스트 &lt;code&gt;sep&lt;/code&gt; 가 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="08ab802cb543efc98bf34911c6d3ddedbea5ee4f" translate="yes" xml:space="preserve">
          <source>The text for parts of this document, especially the Description and Conversions sections, above, were adapted from the Linux Programmer's Manual manpage for scanf(3), dated 1995-11-01.</source>
          <target state="translated">이 문서의 일부, 특히 위의 설명 및 변환 섹션에 대한 텍스트는 1995-11-01의 scanf (3)에 대한 Linux 프로그래머 매뉴얼 맨 페이지에서 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="a74c4d1deef7ec9cf482dc25f63c01ecf8f6068a" translate="yes" xml:space="preserve">
          <source>The third value is the base used for arithmetic (currently always 10) as an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">세 번째 값은 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 로 산술 (현재는 항상 10)에 사용되는 기준 입니다.</target>
        </trans-unit>
        <trans-unit id="77058f783b7d51f81f2f968b299e9d209edd788d" translate="yes" xml:space="preserve">
          <source>The third visibility is &lt;code&gt;private&lt;/code&gt;. A private method may not be called with a receiver, not even &lt;code&gt;self&lt;/code&gt;. If a private method is called with a receiver a &lt;a href=&quot;../nomethoderror&quot;&gt;&lt;code&gt;NoMethodError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">세 번째 가시성은 &lt;code&gt;private&lt;/code&gt; 입니다. private 메소드는 수신자가 아닌 &lt;code&gt;self&lt;/code&gt; 로도 호출 할 수 없습니다 . 개인 메소드가 수신자와 함께 호출되면 &lt;a href=&quot;../nomethoderror&quot;&gt; &lt;code&gt;NoMethodError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="98b9ad9f39dc1ab3f3b8dc8ab97888bfb6fd72fb" translate="yes" xml:space="preserve">
          <source>The third visibility is &lt;code&gt;private&lt;/code&gt;. A private method may only be called from inside the owner class without a receiver, or with a literal &lt;code&gt;self&lt;/code&gt; as a receiver. If a private method is called with a receiver other than a literal &lt;code&gt;self&lt;/code&gt;, a &lt;a href=&quot;../nomethoderror&quot;&gt;&lt;code&gt;NoMethodError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">세 번째 가시성은 &lt;code&gt;private&lt;/code&gt; 입니다. private 메서드는 수신자없이 소유자 클래스 내부에서만 호출되거나 수신자로서의 리터럴 &lt;code&gt;self&lt;/code&gt; 를 사용하여 호출 될 수 있습니다 . private 메서드가 리터럴 &lt;code&gt;self&lt;/code&gt; 이외의 수신자와 함께 호출 되면 &lt;a href=&quot;../nomethoderror&quot;&gt; &lt;code&gt;NoMethodError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c3c7a845112bad4843909d643923c6174b83e45e" translate="yes" xml:space="preserve">
          <source>The thread calling fork is the only thread in the created child process. fork doesn't copy other threads.</source>
          <target state="translated">스레드 호출 포크는 작성된 하위 프로세스에서 유일한 스레드입니다. 포크는 다른 스레드를 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ffc1b9b311a372bc9a1269f61dbe23a6e1bf31cc" translate="yes" xml:space="preserve">
          <source>The thread to receive exceptions.</source>
          <target state="translated">예외를 수신 할 스레드입니다.</target>
        </trans-unit>
        <trans-unit id="740a6a4458d4dc6b7d435a28d2d0426e01f4aa33" translate="yes" xml:space="preserve">
          <source>The three digit reply code of the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; response</source>
          <target state="translated">&lt;a href=&quot;../smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 응답 의 세 자리 응답 코드</target>
        </trans-unit>
        <trans-unit id="ee7051bf4025955c3f90472b131a344273c2d243" translate="yes" xml:space="preserve">
          <source>The time on which the current content expires, as a &lt;code&gt;Time&lt;/code&gt; object, returned as the Expires header.</source>
          <target state="translated">현재 내용이 만료되는 &lt;code&gt;Time&lt;/code&gt; 객체로 Expires 헤더로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9cf5c05e488e63e543da7a97bfc37daa8066256d" translate="yes" xml:space="preserve">
          <source>The times for some benchmarks depend on the order in which items are run. These differences are due to the cost of memory allocation and garbage collection. To avoid these discrepancies, the &lt;a href=&quot;benchmark#method-i-bmbm&quot;&gt;&lt;code&gt;bmbm&lt;/code&gt;&lt;/a&gt; method is provided. For example, to compare ways to sort an array of floats:</source>
          <target state="translated">일부 벤치 마크 시간은 항목이 실행되는 순서에 따라 다릅니다. 이러한 차이점은 메모리 할당 및 가비지 수집 비용으로 인해 발생합니다. 이러한 불일치를 피하기 위해 &lt;a href=&quot;benchmark#method-i-bmbm&quot;&gt; &lt;code&gt;bmbm&lt;/code&gt; &lt;/a&gt; 방법이 제공됩니다. 예를 들어, float 배열을 정렬하는 방법을 비교하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7a8413cd3fb98b229ef04cfe3f55ca2e7c74afb2" translate="yes" xml:space="preserve">
          <source>The top-level class representing any ASN.1 object. When parsed by &lt;a href=&quot;../asn1#method-c-decode&quot;&gt;&lt;code&gt;ASN1.decode&lt;/code&gt;&lt;/a&gt;, tagged values are always represented by an instance of &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ASN.1 객체를 나타내는 최상위 클래스입니다. &lt;a href=&quot;../asn1#method-c-decode&quot;&gt; &lt;code&gt;ASN1.decode&lt;/code&gt; 로&lt;/a&gt; 구문 분석 할 때 태그가 지정된 값은 항상 &lt;a href=&quot;asn1data&quot;&gt; &lt;code&gt;ASN1Data&lt;/code&gt; &lt;/a&gt; 인스턴스로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="45fa8573dbf297439909ff9f5c4aab877f0f0d8c" translate="yes" xml:space="preserve">
          <source>The total size of the integer is five bytes. The following four bytes are a positive little-endian integer. For compatibility with 32 bit ruby, only Fixnums less than 1073741824 should be represented this way. For sizes of stream objects full precision may be used.</source>
          <target state="translated">정수의 총 크기는 5 바이트입니다. 다음 4 바이트는 양의 리틀 엔디안 정수입니다. 32 비트 루비와의 호환성을 위해 1073741824 미만의 Fixnum 만이 방식으로 표시해야합니다. 스트림 객체의 크기에는 완전 정밀도가 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb7023b5dd79c3012c72c9cc9b969681f383d9c2" translate="yes" xml:space="preserve">
          <source>The total size of the integer is four bytes. The following three bytes are a negative little-endian integer.</source>
          <target state="translated">정수의 총 크기는 4 바이트입니다. 다음 3 바이트는 음의 리틀 엔디안 정수입니다.</target>
        </trans-unit>
        <trans-unit id="1cc30864a397114e3c24081df7aaeaeda1046e61" translate="yes" xml:space="preserve">
          <source>The total size of the integer is four bytes. The following three bytes are a positive little-endian integer.</source>
          <target state="translated">정수의 총 크기는 4 바이트입니다. 다음 3 바이트는 양의 리틀 엔디안 정수입니다.</target>
        </trans-unit>
        <trans-unit id="a769bca98804728d8dcd90bf804dc75664efd584" translate="yes" xml:space="preserve">
          <source>The total size of the integer is three bytes. The following two bytes are a negative little-endian integer.</source>
          <target state="translated">정수의 총 크기는 3 바이트입니다. 다음 2 바이트는 음의 리틀 엔디안 정수입니다.</target>
        </trans-unit>
        <trans-unit id="f86816a71891216d6e721f15d7f53ebb0b1d67d5" translate="yes" xml:space="preserve">
          <source>The total size of the integer is three bytes. The following two bytes are a positive little-endian integer.</source>
          <target state="translated">정수의 총 크기는 3 바이트입니다. 다음 두 바이트는 양의 리틀 엔디안 정수입니다.</target>
        </trans-unit>
        <trans-unit id="074f0712a2f9cfa0705002e34f4ea410010f91f6" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following byte is a negative integer in the range of -1 through -256.</source>
          <target state="translated">정수의 총 크기는 2 바이트입니다. 다음 바이트는 -1에서 -256 사이의 음수입니다.</target>
        </trans-unit>
        <trans-unit id="7413fefb6e49d16bb5a29e4908e4af143efb911a" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following byte is a positive integer in the range of 0 through 255. Only values between 123 and 255 should be represented this way to save bytes.</source>
          <target state="translated">정수의 총 크기는 2 바이트입니다. 다음 바이트는 0에서 255 사이의 양의 정수입니다. 바이트를 저장하려면 123에서 255 사이의 값만이 방식으로 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="bed8dd9c24d82b61d19244a187e32e5d34d6c530" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following four bytes are a negative little-endian integer. For compatibility with 32 bit ruby, only Fixnums greater than -10737341824 should be represented this way. For sizes of stream objects full precision may be used.</source>
          <target state="translated">정수의 총 크기는 2 바이트입니다. 다음 4 바이트는 음의 리틀 엔디안 정수입니다. 32 비트 루비와의 호환성을 위해 -10737341824보다 큰 Fixnum 만이 방식으로 표시해야합니다. 스트림 객체의 크기에는 완전 정밀도가 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="affbdda7d3852be42a5874524221546aea703f3f" translate="yes" xml:space="preserve">
          <source>The total size of the integer is two bytes. The following three bytes are a negative little-endian integer.</source>
          <target state="translated">정수의 총 크기는 2 바이트입니다. 다음 3 바이트는 음의 리틀 엔디안 정수입니다.</target>
        </trans-unit>
        <trans-unit id="bbd7b58b03e8324d96b2d1678aaac8d65ac7b671" translate="yes" xml:space="preserve">
          <source>The total time used for garbage collection in seconds</source>
          <target state="translated">가비지 수집에 사용 된 총 시간 (초)</target>
        </trans-unit>
        <trans-unit id="e0629d60ed141772a8ed6a53aecf034356260de0" translate="yes" xml:space="preserve">
          <source>The transactional behavior ensures that any changes succeed or fail together. This can be used to ensure that the data store is not left in a transitory state, where some values were updated but others were not.</source>
          <target state="translated">트랜잭션 동작은 모든 변경 사항이 함께 성공하거나 실패하게합니다. 이를 통해 데이터 저장소가 일시적인 상태로 유지되지 않고 일부 값은 업데이트되었지만 다른 값은 업데이트되지 않았 음을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee59ca161dc5413142cf39239bc0466220750c41" translate="yes" xml:space="preserve">
          <source>The transport layer is responsible for opening client and server network connections and forwarding dRuby request across them. Normally, it uses &lt;a href=&quot;drb/drbmessage&quot;&gt;&lt;code&gt;DRb::DRbMessage&lt;/code&gt;&lt;/a&gt; internally to manage marshalling and unmarshalling. The transport layer is managed by &lt;a href=&quot;drb/drbprotocol&quot;&gt;&lt;code&gt;DRb::DRbProtocol&lt;/code&gt;&lt;/a&gt;. Multiple protocols can be installed in &lt;a href=&quot;drb/drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; at the one time; selection between them is determined by the scheme of a dRuby &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. The default transport protocol is selected by the scheme 'druby:', and implemented by &lt;a href=&quot;drb/drbtcpsocket&quot;&gt;&lt;code&gt;DRb::DRbTCPSocket&lt;/code&gt;&lt;/a&gt;. This uses plain TCP/IP sockets for communication. An alternative protocol, using UNIX domain sockets, is implemented by &lt;a href=&quot;drb/drbunixsocket&quot;&gt;&lt;code&gt;DRb::DRbUNIXSocket&lt;/code&gt;&lt;/a&gt; in the file drb/unix.rb, and selected by the scheme 'drbunix:'. A sample implementation over HTTP can be found in the samples accompanying the main dRuby distribution.</source>
          <target state="translated">전송 계층은 클라이언트 및 서버 네트워크 연결을 열고 dRuby 요청을 전달합니다. 일반적으로 내부적으로 &lt;a href=&quot;drb/drbmessage&quot;&gt; &lt;code&gt;DRb::DRbMessage&lt;/code&gt; &lt;/a&gt; 를 사용하여 마샬링 및 비 정렬 화를 관리합니다. 전송 계층은 &lt;a href=&quot;drb/drbprotocol&quot;&gt; &lt;code&gt;DRb::DRbProtocol&lt;/code&gt; &lt;/a&gt; 의해 관리됩니다 . &lt;a href=&quot;drb/drbprotocol&quot;&gt; &lt;code&gt;DRbProtocol&lt;/code&gt; &lt;/a&gt; 에 여러 프로토콜을 한 번에 설치할 수 있습니다 . 그들 사이의 선택은 dRuby &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 의 체계에 의해 결정됩니다 . 기본 전송 프로토콜은 'druby :'체계에 의해 선택되고 &lt;a href=&quot;drb/drbtcpsocket&quot;&gt; &lt;code&gt;DRb::DRbTCPSocket&lt;/code&gt; &lt;/a&gt; 의해 구현됩니다 . 통신에 일반 TCP / IP 소켓을 사용합니다. UNIX 도메인 소켓을 사용하는 대체 프로토콜은 &lt;a href=&quot;drb/drbunixsocket&quot;&gt; &lt;code&gt;DRb::DRbUNIXSocket&lt;/code&gt; &lt;/a&gt; 의해 구현됩니다.drb / unix.rb 파일에서 'drbunix :'체계에 의해 선택됩니다. HTTP를 통한 샘플 구현은 기본 dRuby 배포와 함께 제공되는 샘플에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85e02682f8cf8a4284decf99a7097ab0c8643e9c" translate="yes" xml:space="preserve">
          <source>The two recommended patterns are to either create the finaliser proc in a non-instance method where it can safely capture the needed state, or to use a custom callable object that stores the needed state explicitly as instance variables.</source>
          <target state="translated">권장되는 두 가지 패턴은 필요한 상태를 안전하게 캡처 할 수있는 비 인스턴스 메서드에서 finaliser proc을 생성하거나 필요한 상태를 명시 적으로 인스턴스 변수로 저장하는 사용자 정의 호출 가능 객체를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3f6a51a8e27f34208435b9eef27de59b8a037965" translate="yes" xml:space="preserve">
          <source>The two style of control passing to and from fiber (one is &lt;a href=&quot;fiber#method-i-resume&quot;&gt;&lt;code&gt;resume&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fiber#method-c-yield&quot;&gt;&lt;code&gt;Fiber::yield&lt;/code&gt;&lt;/a&gt;, another is &lt;a href=&quot;fiber#method-i-transfer&quot;&gt;&lt;code&gt;transfer&lt;/code&gt;&lt;/a&gt; to and from fiber) can't be freely mixed.</source>
          <target state="translated">광섬유로 전달되는 두 가지 제어 스타일 (하나는 &lt;a href=&quot;fiber#method-i-resume&quot;&gt; &lt;code&gt;resume&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;fiber#method-c-yield&quot;&gt; &lt;code&gt;Fiber::yield&lt;/code&gt; &lt;/a&gt; , 다른 하나는 광섬유 &lt;a href=&quot;fiber#method-i-transfer&quot;&gt; &lt;code&gt;transfer&lt;/code&gt; &lt;/a&gt; )은 자유롭게 혼합 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4c8b0f1745bd077a373d14f592ad68e3f4f37bf6" translate="yes" xml:space="preserve">
          <source>The type of the instruction sequence.</source>
          <target state="translated">명령 시퀀스의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b04915302311c169daad683d15b81d00f2a2d649" translate="yes" xml:space="preserve">
          <source>The typical true value.</source>
          <target state="translated">일반적인 실제 값입니다.</target>
        </trans-unit>
        <trans-unit id="37603fae549ff0d9478ec089f93b88917fa7bfc9" translate="yes" xml:space="preserve">
          <source>The typical true value. Deprecated.</source>
          <target state="translated">전형적인 참값. 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7bee9c939388e7391a039426b1b0f8c1b974bd0b" translate="yes" xml:space="preserve">
          <source>The unconverted field values are those found in the source data, prior to any conversions performed via option &lt;code&gt;converters&lt;/code&gt;.</source>
          <target state="translated">변환되지 않은 필드 값은 옵션 &lt;code&gt;converters&lt;/code&gt; 를 통해 수행 된 변환 이전에 소스 데이터에서 발견 된 값 입니다.</target>
        </trans-unit>
        <trans-unit id="2ab1a96e3bbff075925ee02721386ee284760c73" translate="yes" xml:space="preserve">
          <source>The underlying &lt;a href=&quot;../../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">기본 &lt;a href=&quot;../../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="959e2cb4e619c45c4b99287d5c0b6591309b7da4" translate="yes" xml:space="preserve">
          <source>The underlying function, &lt;a href=&quot;process#method-c-clock_gettime&quot;&gt;&lt;code&gt;clock_gettime&lt;/code&gt;&lt;/a&gt;(), returns a number of nanoseconds. &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; object (IEEE 754 double) is not enough to represent the return value for &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt;&lt;code&gt;CLOCK_REALTIME&lt;/code&gt;&lt;/a&gt;. If the exact nanoseconds value is required, use &lt;code&gt;:nanoseconds&lt;/code&gt; as the &lt;code&gt;unit&lt;/code&gt;.</source>
          <target state="translated">기본 함수 인 &lt;a href=&quot;process#method-c-clock_gettime&quot;&gt; &lt;code&gt;clock_gettime&lt;/code&gt; &lt;/a&gt; ()은 몇 나노초를 반환합니다. &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 객체 (IEEE 754 double) &lt;a href=&quot;process#CLOCK_REALTIME&quot;&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; &lt;/a&gt; 의 반환 값을 나타내기에 충분하지 않습니다 . 정확한 나노초 값이 필요한 경우, 사용 &lt;code&gt;:nanoseconds&lt;/code&gt; 는 AS &lt;code&gt;unit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92e3b0ab08811beec3bc5be7f7ff9b401ff68f1a" translate="yes" xml:space="preserve">
          <source>The unhandled condition in &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt; expressions. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions&lt;/a&gt;</source>
          <target state="translated">에서 처리되지 않은 상태 &lt;code&gt;case&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;unless&lt;/code&gt; 표현. 참조 &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;제어 식을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fce13e55b5c3094cfb37f575aa0e3afc025aed7" translate="yes" xml:space="preserve">
          <source>The update() method and the left-shift operator are overridden by each implementation subclass. (One should be an alias for the other)</source>
          <target state="translated">update () 메소드와 왼쪽 시프트 연산자는 각 구현 서브 클래스에 의해 대체됩니다. (하나는 다른 하나의 별칭이어야 함)</target>
        </trans-unit>
        <trans-unit id="d7f8a7eef3ff61cedaa7a2c3d118edd1dfc6fcac" translate="yes" xml:space="preserve">
          <source>The user does not have to directly deal with this object in normal use.</source>
          <target state="translated">사용자는 정상적인 사용에서이 객체를 직접 처리 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1e4abad7e7f90e82df6446bca3cf8a31b48e214b" translate="yes" xml:space="preserve">
          <source>The username of the proxy server, if one is configured.</source>
          <target state="translated">프록시 서버의 사용자 이름 (구성된 경우)</target>
        </trans-unit>
        <trans-unit id="7db50a096e509cc8c163a353ce436d391826f42a" translate="yes" xml:space="preserve">
          <source>The value &amp;ldquo;bar&amp;rdquo; is returned for the thread local, where nil is returned for the fiber local. The fiber is executed in the same thread, so the thread local values are available.</source>
          <target state="translated">스레드 로컬의 경우 &quot;bar&quot;값이 반환되며, 로컬 로컬의 경우 nil이 반환됩니다. 파이버는 동일한 스레드에서 실행되므로 스레드 로컬 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a7f400ad705841a84f351d00352031ff666302d" translate="yes" xml:space="preserve">
          <source>The value finally returned is the value returned by the last call to &lt;code&gt;dig&lt;/code&gt;.</source>
          <target state="translated">마지막으로 반환 된 값은 &lt;code&gt;dig&lt;/code&gt; 에 대한 마지막 호출에서 반환 된 값 입니다.</target>
        </trans-unit>
        <trans-unit id="456557da9be5d09ed60e2889de7f02a51e67bae5" translate="yes" xml:space="preserve">
          <source>The value from &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="c5e8a4f681e68c750022447a7726ea5672bb7b3f" translate="yes" xml:space="preserve">
          <source>The value may be a Proc custom converter (see &lt;a href=&quot;#class-CSV-label-Custom+Header+Converters&quot;&gt;Custom Header Converters&lt;/a&gt;):</source>
          <target state="translated">값은 Proc 사용자 정의 변환기 일 수 있습니다 ( &lt;a href=&quot;#class-CSV-label-Custom+Header+Converters&quot;&gt;사용자 정의 헤더 변환기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="36d3db56e2983e4c10c3019d41a4c556dc06fb5b" translate="yes" xml:space="preserve">
          <source>The value may be a Proc custom converter: (see &lt;a href=&quot;#class-CSV-label-Custom+Field+Converters&quot;&gt;Custom Field Converters&lt;/a&gt;):</source>
          <target state="translated">값은 Proc 사용자 정의 변환기 일 수 있습니다 ( &lt;a href=&quot;#class-CSV-label-Custom+Field+Converters&quot;&gt;사용자 정의 필드 변환기&lt;/a&gt; 참조 ) :</target>
        </trans-unit>
        <trans-unit id="f0ce326f1a88782fabbd1fb4d95c9bab07c96ca4" translate="yes" xml:space="preserve">
          <source>The value may be a converter list (see &lt;a href=&quot;#class-CSV-label-Converter+Lists&quot;&gt;Converter Lists&lt;/a&gt;):</source>
          <target state="translated">값은 변환기 목록 일 수 있습니다 ( &lt;a href=&quot;#class-CSV-label-Converter+Lists&quot;&gt;변환기 목록&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d279d226b0091976e6735783273fd3b0e45703c2" translate="yes" xml:space="preserve">
          <source>The value may be a field converter name (see &lt;a href=&quot;#class-CSV-label-Stored+Converters&quot;&gt;Stored Converters&lt;/a&gt;):</source>
          <target state="translated">값은 필드 변환기 이름 일 수 있습니다 ( &lt;a href=&quot;#class-CSV-label-Stored+Converters&quot;&gt;저장된 변환기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="fce1c4ca03f2422ef88f38ba3f90133ac207334c" translate="yes" xml:space="preserve">
          <source>The value may be a header converter name (see &lt;a href=&quot;#class-CSV-label-Stored+Converters&quot;&gt;Stored Converters&lt;/a&gt;):</source>
          <target state="translated">값은 헤더 변환기 이름 일 수 있습니다 ( &lt;a href=&quot;#class-CSV-label-Stored+Converters&quot;&gt;저장된 변환기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e3344c6da175ddf85078a57831a32642db6e863a" translate="yes" xml:space="preserve">
          <source>The value must be &lt;code&gt;:text&lt;/code&gt; or &lt;code&gt;:attr&lt;/code&gt;. If the value is &lt;code&gt;:text&lt;/code&gt;&lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; replaces undefined characters with their (upper-case hexadecimal) numeric character references. '&amp;amp;', '&amp;lt;', and '&amp;gt;' are converted to &amp;ldquo;&amp;amp;amp;&amp;rdquo;, &amp;ldquo;&amp;amp;lt;&amp;rdquo;, and &amp;ldquo;&amp;amp;gt;&amp;rdquo;, respectively. If the value is &lt;code&gt;:attr&lt;/code&gt;, &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; also quotes the replacement result (using '&amp;ldquo;'), and replaces '&amp;rdquo;' with &amp;ldquo;&amp;amp;quot;&amp;rdquo;.</source>
          <target state="translated">값은 &lt;code&gt;:text&lt;/code&gt; 또는 &lt;code&gt;:attr&lt;/code&gt; 이어야합니다 . 값이 &lt;code&gt;:text&lt;/code&gt; &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 인 경우 정의되지 않은 문자를 대문자 (16 진) 숫자 참조로 바꿉니다. '&amp;amp;', '&amp;lt;'및 '&amp;gt;'는 각각 &quot;&amp;amp; amp;&quot;, &quot;&amp;lt;&quot;및 &quot;&amp;amp; gt;&quot;로 변환됩니다. 값이 &lt;code&gt;:attr&lt;/code&gt; 인 경우 , &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 는 또한 대체 결과를 인용하고 ( '&amp;ldquo;'사용) '&amp;rdquo;'를&amp;ldquo;&amp;amp; quot;&amp;rdquo;로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="82838477088055a993972181bb7ad3fe5794ef43" translate="yes" xml:space="preserve">
          <source>The value of :nameserver should be an address string or an array of address strings.</source>
          <target state="translated">: nameserver의 값은 주소 문자열 또는 주소 문자열 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="05cca7f8d3fb8f4b781383a16cc67d5d36ed6675" translate="yes" xml:space="preserve">
          <source>The value of :nameserver_port should be an array of pair of nameserver address and port number.</source>
          <target state="translated">: nameserver_port 값은 이름 서버 주소와 포트 번호 쌍의 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8415a5696c58791177830d1e6fbd4a36d8bc2361" translate="yes" xml:space="preserve">
          <source>The value of the constant is returned if a definition is found, otherwise a &lt;code&gt;NameError&lt;/code&gt; is raised.</source>
          <target state="translated">정의가 발견되면 상수 값이 리턴되고, 그렇지 않으면 &lt;code&gt;NameError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="16f6e25155a9d698444c22a1a5d9280d40125d3a" translate="yes" xml:space="preserve">
          <source>The value of the integer is 0. No bytes follow.</source>
          <target state="translated">정수 값은 0입니다. 뒤에 바이트가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1f1710c584688467b43a83730f4d23f1bab7442c" translate="yes" xml:space="preserve">
          <source>The value of the lines coverage result is an array containing how many times each line was executed. Order in this array is important. For example, the first item in this array, at index 0, reports how many times line 1 of this file was executed while coverage was run (which, in this example, is one time).</source>
          <target state="translated">라인 커버리지 결과의 값은 각 라인이 실행 된 횟수를 포함하는 배열입니다. 이 배열의 순서가 중요합니다. 예를 들어, 인덱스 0에있는이 배열의 첫 번째 항목은 적용 범위가 실행되는 동안 (이 예에서는 한 번)이 파일의 라인 1이 실행 된 횟수를보고합니다.</target>
        </trans-unit>
        <trans-unit id="fbbdb393ff73c8ae891769b4e31737a5f315c83f" translate="yes" xml:space="preserve">
          <source>The value of the oneshot lines coverage result is an array containing the line numbers that were executed.</source>
          <target state="translated">원샷 라인 커버리지 결과의 값은 실행 된 라인 번호를 포함하는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="6188dada8030b84c6a9fea1945e004b2d9e82a1b" translate="yes" xml:space="preserve">
          <source>The value of the optional mode argument can be used to determine how rounding is performed; see &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적 모드 인수의 값을 사용하여 반올림 수행 방법을 결정할 수 있습니다. &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt; &lt;code&gt;BigDecimal.mode&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8dfbda475ef2697b155e36586a32bd89393161a" translate="yes" xml:space="preserve">
          <source>The value sent in the Keep-Alive header. Defaults to 30. Not needed for HTTP/1.1 servers.</source>
          <target state="translated">Keep-Alive 헤더에 전송 된 값입니다. HTTP / 1.1 서버에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f0ac0efc42a593b6199c4d6fe0598e070f0a026" translate="yes" xml:space="preserve">
          <source>The value that is appended to &lt;code&gt;output&lt;/code&gt; to add a new line.</source>
          <target state="translated">새 행을 추가 하기 위해 &lt;code&gt;output&lt;/code&gt; 에 추가되는 값입니다 .</target>
        </trans-unit>
        <trans-unit id="f8c001e58678fa8f84b6a2874f63856e07abe137" translate="yes" xml:space="preserve">
          <source>The values &lt;strong&gt;WRITER&lt;/strong&gt;, &lt;strong&gt;WRCREAT&lt;/strong&gt; and &lt;strong&gt;NEWDB&lt;/strong&gt; may be combined with the following values by bitwise or:</source>
          <target state="translated">값의 &lt;strong&gt;라이터&lt;/strong&gt; , &lt;strong&gt;WRCREAT&lt;/strong&gt; 및 &lt;strong&gt;한 newdb는&lt;/strong&gt; OR 연산에 의해 다음의 값과 결합 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="d09872076805c143f6b89222a72e0b7d4388098f" translate="yes" xml:space="preserve">
          <source>The verbose flag, which is set by the -w or -v switch. Setting this to a true value enables warnings as if -w or -v were given on the command line. Setting this to nil disables warnings, including from &lt;a href=&quot;kernel#method-i-warn&quot;&gt;&lt;code&gt;Kernel#warn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">verbose 플래그는 -w 또는 -v 스위치에 의해 설정됩니다. 이 값을 true로 설정하면 명령 줄에 -w 또는 -v가 지정된 것처럼 경고가 활성화됩니다. 이것을 nil로 설정하면 &lt;a href=&quot;kernel#method-i-warn&quot;&gt; &lt;code&gt;Kernel#warn&lt;/code&gt; 을&lt;/a&gt; 포함한 경고를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="e350f3e3aef5ec6ea7801e029b51e2bf8f7b5e68" translate="yes" xml:space="preserve">
          <source>The verbose flag, which is set by the &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;-v&lt;/code&gt; switch. Setting this to a true value enables warnings as if &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;-v&lt;/code&gt; were given on the command line. Setting this to &lt;code&gt;nil&lt;/code&gt; disables warnings, including from &lt;a href=&quot;kernel#method-i-warn&quot;&gt;&lt;code&gt;Kernel#warn&lt;/code&gt;&lt;/a&gt;. Aliased to $-v and $-w.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; 또는 &lt;code&gt;-v&lt;/code&gt; 스위치에 의해 설정되는 자세한 플래그 . 이 값을 true 값으로 설정 하면 명령 줄에 &lt;code&gt;-w&lt;/code&gt; 또는 &lt;code&gt;-v&lt;/code&gt; 가 제공된 것처럼 경고가 활성화 됩니다. 이것을 &lt;code&gt;nil&lt;/code&gt; 로 설정하면 &lt;a href=&quot;kernel#method-i-warn&quot;&gt; &lt;code&gt;Kernel#warn&lt;/code&gt; 을&lt;/a&gt; 포함하여 경고가 비활성화 됩니다. $ -v 및 $ -w로 별칭이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="cec2278e7c0485867b651d17d986da0f6203240c" translate="yes" xml:space="preserve">
          <source>The version 4 UUID is purely random (except the version). It doesn't contain meaningful information such as MAC addresses, timestamps, etc.</source>
          <target state="translated">버전 4 UUID는 완전히 임의적입니다 (버전 제외). MAC 주소, 타임 스탬프 등과 같은 의미있는 정보를 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5c9b6e37b205d5b0458e76696fc4f1e8b01ceef" translate="yes" xml:space="preserve">
          <source>The version number of the zone file.</source>
          <target state="translated">영역 파일의 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="19c2565236de854bf736b49fbb143aff0ae071a8" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Syslog::Logger&lt;/code&gt;&lt;/a&gt; you are using.</source>
          <target state="translated">사용중인 &lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Syslog::Logger&lt;/code&gt; &lt;/a&gt; 버전 .</target>
        </trans-unit>
        <trans-unit id="edbc239a030b2aee3c394b4f81655bcf0431afdd" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;molinillo&quot;&gt;&lt;code&gt;Bundler::Molinillo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;molinillo&quot;&gt; &lt;code&gt;Bundler::Molinillo&lt;/code&gt; &lt;/a&gt; 의 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="bba06e07ae1d74d488b4a02bc157e3fb6439db20" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; you are using</source>
          <target state="translated">버전 &lt;a href=&quot;persistent&quot;&gt; &lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt; &lt;/a&gt; 사용하는</target>
        </trans-unit>
        <trans-unit id="7eecb0367bcfa93d1714a1d355b71a5f929b56b0" translate="yes" xml:space="preserve">
          <source>The version of &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; you are using</source>
          <target state="translated">사용중인 &lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 버전</target>
        </trans-unit>
        <trans-unit id="387b6421aaf18a0e09beb9b8e2a1065221f66437" translate="yes" xml:space="preserve">
          <source>The version of bigdecimal library</source>
          <target state="translated">Bigdecimal 라이브러리의 버전</target>
        </trans-unit>
        <trans-unit id="c872a11f8217354916120fe8db3a5e5854a03003" translate="yes" xml:space="preserve">
          <source>The version of libyaml &lt;a href=&quot;psych&quot;&gt;&lt;code&gt;Psych&lt;/code&gt;&lt;/a&gt; is using</source>
          <target state="translated">libyaml &lt;a href=&quot;psych&quot;&gt; &lt;code&gt;Psych&lt;/code&gt; &lt;/a&gt; 의 버전 이 사용 중입니다</target>
        </trans-unit>
        <trans-unit id="85b5cda182ed847f71deb8236816f0c57a2705e9" translate="yes" xml:space="preserve">
          <source>The version of loaded GMP.</source>
          <target state="translated">로드 된 GMP의 버전입니다.</target>
        </trans-unit>
        <trans-unit id="d76286c1761e7108d11a75fe82e926ca5737abfe" translate="yes" xml:space="preserve">
          <source>The version of the Ruby implementation.</source>
          <target state="translated">Ruby 구현의 버전입니다.</target>
        </trans-unit>
        <trans-unit id="606a7cc6653d8151b8beb54afaf55c70fb75cd75" translate="yes" xml:space="preserve">
          <source>The version of the engine or interpreter this ruby uses.</source>
          <target state="translated">이 루비가 사용하는 엔진 또는 인터프리터 버전입니다.</target>
        </trans-unit>
        <trans-unit id="a1791e72093a8dbab3f5fe5c46bbde9676d8cae4" translate="yes" xml:space="preserve">
          <source>The version of the installed library.</source>
          <target state="translated">설치된 라이브러리의 버전입니다.</target>
        </trans-unit>
        <trans-unit id="5fd55f7b42d22afd7017e060f6c5db8bf51db697" translate="yes" xml:space="preserve">
          <source>The vertical bar metacharacter (&lt;code&gt;|&lt;/code&gt;) combines two expressions into a single one that matches either of the expressions. Each expression is an &lt;em&gt;alternative&lt;/em&gt;.</source>
          <target state="translated">세로 막대 메타 문자 ( &lt;code&gt;|&lt;/code&gt; )는 두 표현식을 하나의 표현식으로 결합하여 두 표현식 중 하나와 일치합니다. 각 표현은 &lt;em&gt;대안&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04ed7ade86d7427dca0f9a0cfb6b7ca30eb84ba6" translate="yes" xml:space="preserve">
          <source>The vertical precision using ssize type values in meters using scientific notation as 2 integers of XeY for precision use value/2 e.g. 2m = +/-1m</source>
          <target state="translated">정밀 사용 값 / 2를 위해 과학적 표기법을 XeY의 2 정수로 사용하여 미터 단위의 크기 크기 값을 사용하는 수직 정밀도 예 : 2m = +/- 1m</target>
        </trans-unit>
        <trans-unit id="564835bcdde8303d78731ac4df63e9dadcbc9091" translate="yes" xml:space="preserve">
          <source>The virtual concatenation file of the files given on command line (or from $stdin if no files were given).</source>
          <target state="translated">명령 행에 제공된 파일의 가상 연결 파일 (또는 파일이없는 경우 $ stdin에서)</target>
        </trans-unit>
        <trans-unit id="c1f9e9e8be3fa34d3216282870eb961db1e59462" translate="yes" xml:space="preserve">
          <source>The virtual concatenation of the files given on command line (or from $stdin if no files were given).</source>
          <target state="translated">명령 줄에 제공된 파일의 가상 연결 (또는 파일이없는 경우 $ stdin에서).</target>
        </trans-unit>
        <trans-unit id="a5a38aaa6fba229fc706d2b8450bdd0af5b4bd9e" translate="yes" xml:space="preserve">
          <source>The waiting thread has &lt;code&gt;pid&lt;/code&gt; method which returns the pid.</source>
          <target state="translated">대기중인 스레드에는 &lt;code&gt;pid&lt;/code&gt; 를 반환하는 pid 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1753daa72ba83931121f86700b6ffbf91eb4182d" translate="yes" xml:space="preserve">
          <source>The waiting thread has pid method which returns the pid.</source>
          <target state="translated">대기중인 스레드에는 pid를 반환하는 pid 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d518bb4d5e49094287c53e002e0f5e846834a34" translate="yes" xml:space="preserve">
          <source>The waiting thread returns the exit status of the detached process when it terminates, so you can use &lt;a href=&quot;thread#method-i-join&quot;&gt;&lt;code&gt;Thread#join&lt;/code&gt;&lt;/a&gt; to know the result. If specified &lt;em&gt;pid&lt;/em&gt; is not a valid child process ID, the thread returns &lt;code&gt;nil&lt;/code&gt; immediately.</source>
          <target state="translated">대기중인 스레드는 종료시 분리 된 프로세스의 종료 상태를 반환하므로 &lt;a href=&quot;thread#method-i-join&quot;&gt; &lt;code&gt;Thread#join&lt;/code&gt; &lt;/a&gt; 을 사용 하여 결과를 알 수 있습니다. 지정된 &lt;em&gt;pid&lt;/em&gt; 가 유효한 자식 프로세스 ID가 아니면 스레드는 즉시 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0c0789187545f1c4b98044ccd6cde5f1d309a384" translate="yes" xml:space="preserve">
          <source>The waiting thread returns the exit status of the detached process when it terminates, so you can use &lt;code&gt;Thread#join&lt;/code&gt; to know the result. If specified &lt;em&gt;pid&lt;/em&gt; is not a valid child process ID, the thread returns &lt;code&gt;nil&lt;/code&gt; immediately.</source>
          <target state="translated">대기중인 스레드는 종료 될 때 분리 된 프로세스의 종료 상태를 리턴하므로 &lt;code&gt;Thread#join&lt;/code&gt; 을 사용 하여 결과를 알 수 있습니다. 지정된 &lt;em&gt;pid&lt;/em&gt; 가 유효한 자식 프로세스 ID가 아닌 경우 스레드는 즉시 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="294380c40007182bd513ab7bf4a00b4936a82423" translate="yes" xml:space="preserve">
          <source>The week and the day of week should be a negative or a positive number (as a relative week/day from the end of year/week when negative). They should not be zero.</source>
          <target state="translated">주와 요일은 음수 또는 양수 여야합니다 (음수 일 경우 연도 / 주말에서 상대 주 / 일로). 0이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="ec1b1caa1ccb8d71ce5046a5d7ffab04dc7e9505" translate="yes" xml:space="preserve">
          <source>The week date is a date identified by calendar week and day numbers.</source>
          <target state="translated">요일은 달력 요일과 요일 번호로 식별되는 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="71c7d59b33da1f38a8ecd8392ae2fa0c33138ab4" translate="yes" xml:space="preserve">
          <source>The week-based year according to ISO-8601 (week 1 starts on Monday and includes January 4)</source>
          <target state="translated">ISO-8601에 따른 주 기반 연도 (1 주차는 월요일에 시작하여 1 월 4 일 포함)</target>
        </trans-unit>
        <trans-unit id="96d3dc45fc31d75059e67ecc2d1935fdfcea1958" translate="yes" xml:space="preserve">
          <source>The weight field specifies a relative weight for entries with the same priority. Larger weights SHOULD be given a proportionately higher probability of being selected. The range of this number is 0-65535. Domain administrators SHOULD use Weight 0 when there isn't any server selection to do, to make the RR easier to read for humans (less noisy). Note that it is not widely implemented and should be set to zero.</source>
          <target state="translated">가중치 필드는 우선 순위가 동일한 항목에 대한 상대 가중치를 지정합니다. 가중치가 클수록 선택 될 확률이 비례 적으로 높아야합니다. 이 숫자의 범위는 0-65535입니다. 도메인 관리자는 서버 선택이 없을 때 Weight 0을 사용하여 사람이 RR을 더 쉽게 읽을 수 있도록해야합니다. 널리 구현되지 않았으므로 0으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="db45d7794669588687460ebefa5263ce1fb53812" translate="yes" xml:space="preserve">
          <source>The word &amp;ldquo;coding&amp;rdquo; may be used instead of &amp;ldquo;encoding&amp;rdquo;.</source>
          <target state="translated">&quot;인코딩&quot;대신 &quot;코딩&quot;이라는 단어를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30a2b56eef75755959c42ec5745551c8bcdf1d6c" translate="yes" xml:space="preserve">
          <source>The wrapper &lt;code&gt;def2&lt;/code&gt; receives &lt;em&gt;body&lt;/em&gt; as a non-lambda proc, yet defines a method which has normal semantics.</source>
          <target state="translated">래퍼 &lt;code&gt;def2&lt;/code&gt; 는 &lt;em&gt;본문&lt;/em&gt; 을 람다가 아닌 proc로 수신 하지만 정상적인 의미를 갖는 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4f98c234c528efafd5468133240d612aa88b92fe" translate="yes" xml:space="preserve">
          <source>The wrapper &lt;em&gt;def2&lt;/em&gt; defines a method which has no tricks.</source>
          <target state="translated">랩퍼 &lt;em&gt;def2&lt;/em&gt; 는 트릭이없는 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bf6abe208992c06d9ce8372b5b95c707b9276850" translate="yes" xml:space="preserve">
          <source>The wrapper &lt;em&gt;def2&lt;/em&gt; receives &lt;code&gt;body&lt;/code&gt; as a non-lambda proc, yet defines a method which has normal semantics.</source>
          <target state="translated">랩퍼 &lt;em&gt;def2&lt;/em&gt; 는 &lt;code&gt;body&lt;/code&gt; 을 람다가 아닌 proc로 수신 하지만 정상적인 의미론을 갖는 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d5e1e277451968ea6c863f77ac41a815e6d60366" translate="yes" xml:space="preserve">
          <source>The writability notified by select(2) doesn't show how many bytes are writable. &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt; method blocks until given whole string is written. So, &lt;code&gt;IO#write(two or more bytes)&lt;/code&gt; can block after writability is notified by &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;io#method-i-write_nonblock&quot;&gt;&lt;code&gt;IO#write_nonblock&lt;/code&gt;&lt;/a&gt; is required to avoid the blocking.</source>
          <target state="translated">select (2)에 의해 통지 된 쓰기 가능성은 쓰기 가능한 바이트 수를 표시하지 않습니다. &lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;IO#write&lt;/code&gt; &lt;/a&gt; 메서드는 주어진 전체 문자열이 기록 될 때까지 차단됩니다. 따라서 &lt;code&gt;IO#write(two or more bytes)&lt;/code&gt; 는 쓰기 가능성 이 &lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; 에&lt;/a&gt; 의해 통지 된 후에 차단 될 수 있습니다 . 차단을 방지하려면 &lt;a href=&quot;io#method-i-write_nonblock&quot;&gt; &lt;code&gt;IO#write_nonblock&lt;/code&gt; &lt;/a&gt; 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="baff408f658a07b20a920dd9cf46f79a34388545" translate="yes" xml:space="preserve">
          <source>The writability notified by select(2) doesn't show how many bytes are writable. &lt;code&gt;IO#write&lt;/code&gt; method blocks until given whole string is written. So, &lt;code&gt;IO#write(two or more bytes)&lt;/code&gt; can block after writability is notified by &lt;code&gt;IO.select&lt;/code&gt;. &lt;code&gt;IO#write_nonblock&lt;/code&gt; is required to avoid the blocking.</source>
          <target state="translated">select (2)에 의해 통지 된 쓰기 가능성은 쓰기 가능한 바이트 수를 보여주지 않습니다. 주어진 전체 문자열이 쓰여질 때까지 &lt;code&gt;IO#write&lt;/code&gt; 메소드 블록. 따라서 &lt;code&gt;IO#write(two or more bytes)&lt;/code&gt; 는 &lt;code&gt;IO.select&lt;/code&gt; 에 의해 쓰기 가능성 이 통지 된 후에 차단 될 수 있습니다 . 차단을 피하려면 &lt;code&gt;IO#write_nonblock&lt;/code&gt; 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="35328a62169b75e224ebfcdd91db61ad6c7a5f5b" translate="yes" xml:space="preserve">
          <source>The writer adapter class</source>
          <target state="translated">라이터 어댑터 클래스</target>
        </trans-unit>
        <trans-unit id="1b6c60ed24f68dc452c0856340a2766416619d7f" translate="yes" xml:space="preserve">
          <source>The zero-based index of the field in its row.</source>
          <target state="translated">행에서 필드의 인덱스 (0부터 시작)입니다.</target>
        </trans-unit>
        <trans-unit id="1c14a5ea6aada286aa504acc5afd8d1cdbffb7df" translate="yes" xml:space="preserve">
          <source>The zlib compressed data format is described in RFC 1950, which is a wrapper around a deflate stream which is described in RFC 1951.</source>
          <target state="translated">zlib 압축 데이터 형식은 RFC 1950에 설명되어 있으며 RFC 1951에 설명 된 수축 스트림 주위의 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="069824624754a33c05661f1a9193353c0ed727ac" translate="yes" xml:space="preserve">
          <source>The zlib compression library provides in-memory compression and decompression functions, including integrity checks of the uncompressed data.</source>
          <target state="translated">zlib 압축 라이브러리는 압축되지 않은 데이터의 무결성 검사를 포함하여 메모리 내 압축 및 압축 해제 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="27799a8ce57d8d8f4eeb6afc93bc85dc19cc5674" translate="yes" xml:space="preserve">
          <source>The zlib format was designed to be compact and fast for use in memory and on communications channels. The gzip format was designed for single-file compression on file systems, has a larger header than zlib to maintain directory information, and uses a different, slower check method than zlib.</source>
          <target state="translated">zlib 형식은 메모리 및 통신 채널에서 사용하기 위해 작고 빠르도록 설계되었습니다. gzip 형식은 파일 시스템에서 단일 파일 압축을 위해 설계되었으며 디렉토리 정보를 유지하기 위해 zlib보다 큰 헤더를 가지며 zlib와 다른 느린 검사 방법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f6e39906fe7d15041450e2170388ae1441fbd328" translate="yes" xml:space="preserve">
          <source>The {IO} object that should be used to print output. `STDOUT`, by default.</source>
          <target state="translated">출력을 인쇄하는 데 사용해야하는 {IO} 오브젝트. 기본적으로`STDOUT`.</target>
        </trans-unit>
        <trans-unit id="b50802d0f4c64b1a2a37c177532b2c8fef9e1eb5" translate="yes" xml:space="preserve">
          <source>Then check the validity. A status issued in the future must be rejected.</source>
          <target state="translated">그런 다음 유효성을 확인하십시오. 나중에 발행 된 상태는 거부되어야합니다.</target>
        </trans-unit>
        <trans-unit id="691796e40bd5ff6fb01f09131a9114782c3d0d5d" translate="yes" xml:space="preserve">
          <source>Then create a request and add the certificate ID to it:</source>
          <target state="translated">그런 다음 요청을 작성하고 인증서 ID를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="1972f3f23a7016c8fd85fee0cd0d7ea0051cc703" translate="yes" xml:space="preserve">
          <source>Then create an SSLServer with a TCP server socket and the context. Use the SSLServer like an ordinary TCP server.</source>
          <target state="translated">그런 다음 TCP 서버 소켓과 컨텍스트를 사용하여 SSLServer를 작성하십시오. 일반 TCP 서버처럼 SSL 서버를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="61ce1d88c3fcb3c50fe5972bfd2a8c28a5858287" translate="yes" xml:space="preserve">
          <source>Then extract the status information for the certificate from the basic response.</source>
          <target state="translated">그런 다음 기본 응답에서 인증서의 상태 정보를 추출하십시오.</target>
        </trans-unit>
        <trans-unit id="c9865c13e21a4064f29ddc6817fffcadf0ba68d1" translate="yes" xml:space="preserve">
          <source>Then pass the data you want to decrypt through</source>
          <target state="translated">그런 다음 해독하려는 데이터를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="d93f079cd250b0f65cdcbcf9f7621e77be2655fa" translate="yes" xml:space="preserve">
          <source>Then pass the data you want to encrypt through</source>
          <target state="translated">그런 다음 암호화하려는 데이터를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="d86f6ca6b3a4f8558338b893e40a7ad149727239" translate="yes" xml:space="preserve">
          <source>Then the parsing method call can refer to the converter by its name, &lt;code&gt;:strip&lt;/code&gt;:</source>
          <target state="translated">그런 다음 구문 분석 메서드 호출은 이름 &lt;code&gt;:strip&lt;/code&gt; 으로 변환기를 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9039a6559dcca99fdba2b66f11a88078bc00d917" translate="yes" xml:space="preserve">
          <source>Then touch /var/log/my_program.log and signal syslogd with a HUP (killall -HUP syslogd, on FreeBSD).</source>
          <target state="translated">그런 다음 /var/log/my_program.log를 터치하고 HUP (FreeBSD의 killall -HUP syslogd)로 syslogd를 신호하십시오.</target>
        </trans-unit>
        <trans-unit id="c9be83a9761721a2663168744ac1b06672a47e98" translate="yes" xml:space="preserve">
          <source>Then we are able to pause the execution of the main thread and allow our new thread to finish, using &lt;a href=&quot;thread#method-i-join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">그런 다음 메인 스레드의 실행을 일시 중지하고 &lt;a href=&quot;thread#method-i-join&quot;&gt; &lt;code&gt;join&lt;/code&gt; 을&lt;/a&gt; 사용하여 새 스레드를 완료 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b9ac9ac3d233fb31039c1f6c7b313edbd4ce162" translate="yes" xml:space="preserve">
          <source>Then you can send messages.</source>
          <target state="translated">그런 다음 메시지를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c25847c20e88b95337e78bf8cb3b12501ed681fc" translate="yes" xml:space="preserve">
          <source>There are a few different types of keyword argument separation issues.</source>
          <target state="translated">키워드 인수 분리 문제에는 몇 가지 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f2015f9ce616e9f98b7e3f2a802304009f9fd0b" translate="yes" xml:space="preserve">
          <source>There are a number of strategies for matching whitespace:</source>
          <target state="translated">공백을 일치시키기위한 여러 가지 전략이 있습니다.</target>
        </trans-unit>
        <trans-unit id="801f84e42168638d566eb2b71b3f475bdc52714d" translate="yes" xml:space="preserve">
          <source>There are a variety of templating solutions available in various Ruby projects. For example, &lt;code&gt;RDoc&lt;/code&gt;, distributed with Ruby, uses its own template engine, which can be reused elsewhere.</source>
          <target state="translated">다양한 Ruby 프로젝트에서 사용할 수있는 다양한 템플릿 솔루션이 있습니다. 예를 들어 Ruby와 함께 배포되는 &lt;code&gt;RDoc&lt;/code&gt; 은 다른 곳에서 재사용 할 수있는 자체 템플릿 엔진을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="99be330c58316f5672f7aeb13aada4ff915c03bf" translate="yes" xml:space="preserve">
          <source>There are a variety of templating solutions available in various Ruby projects:</source>
          <target state="translated">다양한 Ruby 프로젝트에서 사용할 수있는 다양한 템플릿 솔루션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9291f1e7809f23b8c18a6174877cd2863fa22ea9" translate="yes" xml:space="preserve">
          <source>There are additional built-in converters, and custom converters are also supported.</source>
          <target state="translated">추가 내장 변환기가 있으며 사용자 정의 변환기도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b138dee82acdad0dc09344ce41bbc6a958540626" translate="yes" xml:space="preserve">
          <source>There are aliases to several of the methods.</source>
          <target state="translated">여러 가지 방법에 대한 별칭이 있습니다.</target>
        </trans-unit>
        <trans-unit id="03ddd45eb35ae329c3989465d760595e556d6c12" translate="yes" xml:space="preserve">
          <source>There are also &lt;code&gt;||=&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt;. The former makes an assignment if the value was &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; while the latter makes an assignment if the value was not &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">도 있습니다 &lt;code&gt;||=&lt;/code&gt; 및 &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; . 전자는 값이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 인 경우 할당을 수행하고 후자는 값이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 가 아닌 경우 할당을 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="14c83c1760c9bc5219a40ee10af3be9c347a36f4" translate="yes" xml:space="preserve">
          <source>There are also some additional HTML generation methods mixed in from the &lt;a href=&quot;cgi/htmlextension&quot;&gt;&lt;code&gt;CGI::HtmlExtension&lt;/code&gt;&lt;/a&gt; module. These include individual methods for the different types of form inputs, and methods for elements that commonly take particular attributes where the attributes can be directly specified as arguments, rather than via a hash.</source>
          <target state="translated">&lt;a href=&quot;cgi/htmlextension&quot;&gt; &lt;code&gt;CGI::HtmlExtension&lt;/code&gt; &lt;/a&gt; 모듈 과 혼합 된 추가 HTML 생성 방법도 있습니다 . 여기에는 다양한 유형의 양식 입력에 대한 개별 메소드 및 속성을 해시를 통하지 않고 인수로 직접 지정할 수있는 특정 속성을 일반적으로 취하는 요소에 대한 메소드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="44ed04ec500a2a6d6e9fe8ee4b05fce99dba0bee" translate="yes" xml:space="preserve">
          <source>There are many issues that are stale, with no updates in months or even years. For stale issues in Feedback state, where the feedback has not been received, you can change the status to Closed without adding a note. For stale issues in Assigned state, you can reach out to the assignee and see if they can update the issue. If the assignee is no longer an active committer, remove them as the assignee and change the status to Open.</source>
          <target state="translated">몇 달 또는 몇 년 동안 업데이트가없는 오래된 문제가 많이 있습니다. 피드백을받지 못한 피드백 상태의 오래된 문제의 경우 메모를 추가하지 않고 상태를 Closed로 변경할 수 있습니다. 할당 됨 상태의 오래된 문제의 경우 담당자에게 연락하여 문제를 업데이트 할 수 있는지 확인할 수 있습니다. 양수인이 더 이상 활성 커미터가 아닌 경우 양수인에서 제거하고 상태를 열기로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="ed4303976503b9df65c2876f172de46ee1e17029" translate="yes" xml:space="preserve">
          <source>There are multiple representations for many values. CRuby always outputs the shortest representation possible.</source>
          <target state="translated">많은 값에 대한 여러 표현이 있습니다. CRuby는 항상 가능한 가장 짧은 표현을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="503c0813e66475724749b140d619b89e3a003803" translate="yes" xml:space="preserve">
          <source>There are other methods besides the plain scanners. You can look ahead in the string without actually scanning. You can access the most recent match. You can modify the string being scanned, reset or terminate the scanner, find out or change the position of the scan pointer, skip ahead, and so on.</source>
          <target state="translated">일반 스캐너 외에 다른 방법이 있습니다. 실제로 스캔하지 않고도 문자열을 미리 볼 수 있습니다. 가장 최근 경기에 액세스 할 수 있습니다. 스캔중인 문자열을 수정하거나, 스캐너를 재설정 또는 종료하고, 스캔 포인터의 위치를 ​​찾거나 변경하고, 건너 뛰는 등의 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="659a39c16881acabdf2048fe624ce88739880643" translate="yes" xml:space="preserve">
          <source>There are several candidate uses:</source>
          <target state="translated">몇 가지 후보 용도가 있습니다.</target>
        </trans-unit>
        <trans-unit id="061a50d412de60f01628a39ccd2eb3581841894b" translate="yes" xml:space="preserve">
          <source>There are several interesting features that &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; provides, like auto-rolling of log files, setting the format of log messages, and specifying a program name in conjunction with the message. The next section shows you how to achieve these things.</source>
          <target state="translated">로그 파일 자동 롤링, 로그 메시지 형식 설정 및 메시지와 함께 프로그램 이름 지정과 같이 &lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; 가&lt;/a&gt; 제공 하는 몇 가지 흥미로운 기능이 있습니다. 다음 섹션에서는 이러한 것들을 달성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="02c0381f0de957c9282b83338106a54a77d17884" translate="yes" xml:space="preserve">
          <source>There are several methods to create a &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 을 만드는 몇 가지 방법이 있습니다</target>
        </trans-unit>
        <trans-unit id="9a3bdf8563031c69183effce3ae270622f92d763" translate="yes" xml:space="preserve">
          <source>There are several settings you can change when you use ERB:</source>
          <target state="translated">ERB를 사용할 때 변경할 수있는 몇 가지 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="56a7be5956778b831e900bd745039c3ebece7e89" translate="yes" xml:space="preserve">
          <source>There are several specialized class methods for one-statement reading or writing, described in the Specialized Methods section.</source>
          <target state="translated">특수화 된 방법 섹션에 설명 된 한 문장 읽기 또는 쓰기를위한 몇 가지 특수화 된 클래스 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="659e692070425ee09222f2ac1110117114520192" translate="yes" xml:space="preserve">
          <source>There are several ways to create a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; instance. Generally, a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; algorithm is categorized by its name, the key length in bits and the cipher mode to be used. The most generic way to create a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; is the following</source>
          <target state="translated">&lt;a href=&quot;cipher/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 인스턴스 를 작성하는 방법에는 여러 가지가 있습니다 . 일반적으로 &lt;a href=&quot;cipher/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 알고리즘은 이름, 비트의 키 길이 및 사용할 암호 모드로 분류됩니다. &lt;a href=&quot;cipher/cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt; 를 만드는 가장 일반적인 방법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f428b153085183269178fe6fe415bb23c8dc4545" translate="yes" xml:space="preserve">
          <source>There are some `low level' methods, which do not accept any option:</source>
          <target state="translated">옵션을 허용하지 않는 '저수준'메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="74be019c25425561a1cf6929c374a5663031a2ac" translate="yes" xml:space="preserve">
          <source>There are some `low level' methods, which do not accept keyword arguments:</source>
          <target state="translated">키워드 인수를 허용하지 않는 '저수준'메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b60cb22b78f80b14b21613700192c0150c343687" translate="yes" xml:space="preserve">
          <source>There are some utility tool defined in cgi/util.rb . And when include, you can use utility methods like a function.</source>
          <target state="translated">cgi / util.rb에 정의 된 일부 유틸리티 도구가 있습니다. 포함하면 함수와 같은 유틸리티 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7f3ab088ae07dfd1d685653e4f933582af071b5" translate="yes" xml:space="preserve">
          <source>There are three forms for specifying converters:</source>
          <target state="translated">변환기 지정에는 세 가지 형식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="93779d4411856d720e0436cd3e2de50640ed2a7c" translate="yes" xml:space="preserve">
          <source>There are three types of arguments when sending a message, the positional arguments, keyword (or named) arguments and the block argument. Each message sent may use one, two or all types of arguments, but the arguments must be supplied in this order.</source>
          <target state="translated">메시지를 보낼 때 세 가지 유형의 인수, 위치 인수, 키워드 (또는 명명 된) 인수 및 블록 인수가 있습니다. 전송 된 각 메시지는 하나, 둘 또는 모든 유형의 인수를 사용할 수 있지만 인수는이 순서대로 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5554f9f933035fd7fb467cb4844944626693fb0c" translate="yes" xml:space="preserve">
          <source>There are three ways to create a CSV object:</source>
          <target state="translated">CSV 개체를 만드는 방법에는 세 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="82fd050ad8d20aba5153f91a21dc58071ca52fd0" translate="yes" xml:space="preserve">
          <source>There are three ways to use field converters.</source>
          <target state="translated">필드 변환기를 사용하는 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3f7e0f63eb5f8f0c30f40b01041183c5d37480e" translate="yes" xml:space="preserve">
          <source>There are three ways to use header converters; these examples use built-in header converter &lt;code&gt;:dowhcase&lt;/code&gt;, which downcases each parsed header.</source>
          <target state="translated">헤더 변환기를 사용하는 세 가지 방법이 있습니다. 이 예제는 내장 헤더 변환기 &lt;code&gt;:dowhcase&lt;/code&gt; 를 사용합니다 .이 변환기는 구문 분석 된 각 헤더를 축소 합니다.</target>
        </trans-unit>
        <trans-unit id="3e1ef425ba64e5febe99d69784dfca8200d8f61d" translate="yes" xml:space="preserve">
          <source>There are two built-in converter lists:</source>
          <target state="translated">두 가지 기본 제공 변환기 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f78e7f6e4ae9f28baf9db5dab8e682204fdee93" translate="yes" xml:space="preserve">
          <source>There are two different types of &lt;code&gt;%&lt;/code&gt; strings &lt;code&gt;%q(...)&lt;/code&gt; behaves like a single-quote string (no interpolation or character escaping), while &lt;code&gt;%Q&lt;/code&gt; behaves as a double-quote string. See Percent Strings below for more discussion of the syntax of percent strings.</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; 문자열 에는 두 가지 유형이 있으며 &lt;code&gt;%q(...)&lt;/code&gt; 는 작은 따옴표 문자열 (보간 또는 문자 이스케이프 없음) 처럼 동작 하는 반면 &lt;code&gt;%Q&lt;/code&gt; 는 큰 따옴표 문자열로 동작합니다. 퍼센트 문자열의 구문에 대한 자세한 내용은 아래 퍼센트 문자열을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c13efd38df48e3d0c55a2a3a07a2bad11aadeeae" translate="yes" xml:space="preserve">
          <source>There are two methods of doing this, your object can define either marshal_dump and marshal_load or _dump and _load. marshal_dump will take precedence over _dump if both are defined. marshal_dump may result in smaller &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; strings.</source>
          <target state="translated">이를 수행하는 두 가지 방법이 있습니다. 객체는 marshal_dump와 marshal_load 또는 _dump와 _load를 정의 할 수 있습니다. marshal_dump는 둘 다 정의 된 경우 _dump보다 우선합니다. marshal_dump는 더 작은 &lt;a href=&quot;marshal&quot;&gt; &lt;code&gt;Marshal&lt;/code&gt; &lt;/a&gt; 문자열을 초래할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4dfcc0c25b362ba1672830df765dbb4e435404db" translate="yes" xml:space="preserve">
          <source>There are two pairs of methods for sending/receiving messages:</source>
          <target state="translated">메시지를 보내고받는 방법에는 두 쌍이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3aa47bd661c88e8d1322c2d0b665fde2466b7a3" translate="yes" xml:space="preserve">
          <source>There are two search modes:</source>
          <target state="translated">두 가지 검색 모드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9be3b0e244c753cb2df093344acd8a2903575c30" translate="yes" xml:space="preserve">
          <source>There can only ever be one instance of the integer &lt;code&gt;1&lt;/code&gt;, for example. Ruby ensures this by preventing instantiation. If duplication is attempted, the same instance is returned.</source>
          <target state="translated">예를 들어 정수 &lt;code&gt;1&lt;/code&gt; 의 인스턴스는 하나만있을 수 있습니다 . 루비는 인스턴스화를 방지하여이를 보장합니다. 복제가 시도되면 동일한 인스턴스가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c28a952d98d29d9893fe54928b2a02c98d6cdfc5" translate="yes" xml:space="preserve">
          <source>There exists also the possibility to add certificates (instances of &lt;a href=&quot;../x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt;) besides the timestamping certificate that will be included in the resulting timestamp token if &lt;a href=&quot;request#method-i-cert_requested-3F&quot;&gt;&lt;code&gt;Request#cert_requested?&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;. Ideally, one would also include any intermediate certificates (the root certificate can be left out - in order to trust it any verifying party will have to be in its possession anyway). This simplifies validation of the timestamp since these intermediate certificates are &amp;ldquo;already there&amp;rdquo; and need not be passed as external parameters to &lt;a href=&quot;response#method-i-verify&quot;&gt;&lt;code&gt;Response#verify&lt;/code&gt;&lt;/a&gt; anymore, thus minimizing external resources needed for verification.</source>
          <target state="translated">인증서 (인스턴스 추가 할 수있는 가능성도 존재 &lt;a href=&quot;../x509/certificate&quot;&gt; &lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt; &lt;/a&gt; 경우 토큰 생성 된 타임 스탬프에 포함됩니다 타임 스탬프 인증서 이외의) &lt;a href=&quot;request#method-i-cert_requested-3F&quot;&gt; &lt;code&gt;Request#cert_requested?&lt;/code&gt; &lt;/a&gt; 이다 &lt;code&gt;true&lt;/code&gt; . 이상적으로는 중간 인증서도 포함 할 수 있습니다 (루트 인증서는 생략 할 수 있습니다. 신뢰하려면 인증 당사자가 어쨌든 소유해야합니다). 이렇게하면 중간 인증서가 &quot;이미 존재&quot;하고 더 이상 &lt;a href=&quot;response#method-i-verify&quot;&gt; &lt;code&gt;Response#verify&lt;/code&gt; 에&lt;/a&gt; 외부 매개 변수로 전달할 필요가 없기 때문에 타임 스탬프의 유효성 검사가 단순화되므로 확인에 필요한 외부 리소스가 최소화됩니다.</target>
        </trans-unit>
        <trans-unit id="b2dae8f608f44ac3aef7efa856fcbd1066880f59" translate="yes" xml:space="preserve">
          <source>There is a constant defined for each universal tag:</source>
          <target state="translated">각 범용 태그에 대해 상수가 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3842f2c9eda02dafdae05a84d130024969c0c18" translate="yes" xml:space="preserve">
          <source>There is a special class &lt;a href=&quot;../basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; which is designed as a blank class and includes a minimum of built-in methods. You can use &lt;a href=&quot;../basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; to create an independent inheritance structure. See the &lt;a href=&quot;../basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; documentation for further details.</source>
          <target state="translated">빈 클래스로 설계되고 최소의 내장 메소드를 포함 하는 특수 클래스 &lt;a href=&quot;../basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 가 있습니다. &lt;a href=&quot;../basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 를 사용하여 독립 상속 구조를 작성할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;../basicobject&quot;&gt; &lt;code&gt;BasicObject&lt;/code&gt; &lt;/a&gt; 설명서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="8449fb6c6785ea6d0fa6221a959835cfde68d7a6" translate="yes" xml:space="preserve">
          <source>There is also &lt;a href=&quot;fiber#method-c-schedule&quot;&gt;&lt;code&gt;Fiber.schedule&lt;/code&gt;&lt;/a&gt; method, which is expected to immediately perform passed block in a non-blocking manner (but its actual implementation is up to the scheduler).</source>
          <target state="translated">또한 &lt;a href=&quot;fiber#method-c-schedule&quot;&gt; &lt;code&gt;Fiber.schedule&lt;/code&gt; &lt;/a&gt; 메서드 도 있는데 , 이는 통과 된 블록을 비 차단 방식으로 즉시 수행 할 것으로 예상됩니다 (그러나 실제 구현은 스케줄러에 달려 있습니다).</target>
        </trans-unit>
        <trans-unit id="63c6c06a370f93f8741f3cf342b07190a9871223" translate="yes" xml:space="preserve">
          <source>There is also &lt;a href=&quot;thread#method-i-thread_variables&quot;&gt;&lt;code&gt;thread_variables&lt;/code&gt;&lt;/a&gt; to list all thread-locals, and &lt;a href=&quot;thread#method-i-thread_variable-3F&quot;&gt;&lt;code&gt;thread_variable?&lt;/code&gt;&lt;/a&gt; to check if a given thread-local exists.</source>
          <target state="translated">또한이 &lt;a href=&quot;thread#method-i-thread_variables&quot;&gt; &lt;code&gt;thread_variables&lt;/code&gt; &lt;/a&gt; 모든 스레드 지역 주민을 나열하고, &lt;a href=&quot;thread#method-i-thread_variable-3F&quot;&gt; &lt;code&gt;thread_variable?&lt;/code&gt; &lt;/a&gt;주어진 thread-local이 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="627672ff4e96b7483abc42026bc3aa79e0196800" translate="yes" xml:space="preserve">
          <source>There is also a character literal notation to represent single character strings, which syntax is a question mark (&lt;code&gt;?&lt;/code&gt;) followed by a single character or escape sequence that corresponds to a single codepoint in the script encoding:</source>
          <target state="translated">단일 문자열을 나타내는 문자 리터럴 표기법도 있습니다.이 구문은 물음표 ( &lt;code&gt;?&lt;/code&gt; ) 다음에 스크립트 인코딩의 단일 코드 점에 해당하는 단일 문자 또는 이스케이프 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="ebe04b9af6aaba60f104d733c51090014934f4db" translate="yes" xml:space="preserve">
          <source>There is also a class level method to set this for all new threads, see &lt;a href=&quot;thread#method-c-report_on_exception-3D&quot;&gt;&lt;code&gt;::report_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 새 스레드에 대해이를 설정하는 클래스 레벨 메소드도 있습니다 ( &lt;a href=&quot;thread#method-c-report_on_exception-3D&quot;&gt; &lt;code&gt;::report_on_exception=&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="d97b70de54f42fd3e598882f40105db75e9f7ce6" translate="yes" xml:space="preserve">
          <source>There is also a class level method to set this for all threads, see &lt;a href=&quot;thread#method-c-abort_on_exception&quot;&gt;&lt;code&gt;::abort_on_exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 스레드에 대해이를 설정하는 클래스 레벨 메소드도 있습니다 ( &lt;a href=&quot;thread#method-c-abort_on_exception&quot;&gt; &lt;code&gt;::abort_on_exception&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="88cb3401a0241ea1eece8749e9dc98ea9be04fae" translate="yes" xml:space="preserve">
          <source>There is also a class level method to set this for all threads, see &lt;a href=&quot;thread#method-c-abort_on_exception-3D&quot;&gt;&lt;code&gt;::abort_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 스레드에 대해이를 설정하는 클래스 레벨 메소드도 있습니다 ( &lt;a href=&quot;thread#method-c-abort_on_exception-3D&quot;&gt; &lt;code&gt;::abort_on_exception=&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="217d1fee4e5010abc751b5d13ed23c8fe1225dfa" translate="yes" xml:space="preserve">
          <source>There is also a performance benefit to using yield over a calling a block parameter. When a block argument is assigned to a variable a &lt;a href=&quot;../proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object is created which holds the block. When using yield this &lt;a href=&quot;../proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object is not created.</source>
          <target state="translated">호출 블록 매개 변수보다 yield를 사용하면 성능 이점도 있습니다. 블록 인수가 변수에 할당되면 블록 을 보유 하는 &lt;a href=&quot;../proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 객체가 생성됩니다. yield를 사용할 때이 &lt;a href=&quot;../proc&quot;&gt; &lt;code&gt;Proc&lt;/code&gt; &lt;/a&gt; 객체는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="72f398cfe46be59e1ed0c588e20895ec75dee4b1" translate="yes" xml:space="preserve">
          <source>There is also a special form which matches character range (not full set of regular expression):</source>
          <target state="translated">문자 범위와 일치하는 특수 형식도 있습니다 (정규식 전체가 아님).</target>
        </trans-unit>
        <trans-unit id="124f9c42556f3b53d990d5c32d75eac825da5239" translate="yes" xml:space="preserve">
          <source>There is also a way to specify there should be no other keys in the matched hash except those explicitly specified by the pattern, with &lt;code&gt;**nil&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;**nil&lt;/code&gt; 을 사용하여 패턴에 의해 명시 적으로 지정된 키를 제외하고 일치하는 해시에 다른 키가 없어야 함을 지정하는 방법도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="99db24c1ffe620a9913fb27e9153233090454b5d" translate="yes" xml:space="preserve">
          <source>There is also an instance level method to set this for a specific thread, see &lt;a href=&quot;thread#method-i-abort_on_exception&quot;&gt;&lt;code&gt;abort_on_exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 스레드에 대해이를 설정하는 인스턴스 레벨 메소드도 있습니다 ( &lt;a href=&quot;thread#method-i-abort_on_exception&quot;&gt; &lt;code&gt;abort_on_exception&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="5289b29cb17a9f19f84b0bac6712c8f2f06c057f" translate="yes" xml:space="preserve">
          <source>There is also an instance level method to set this for a specific thread, see &lt;a href=&quot;thread#method-i-abort_on_exception-3D&quot;&gt;&lt;code&gt;abort_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 스레드에 대해이를 설정하는 인스턴스 레벨 메소드도 있습니다 ( &lt;a href=&quot;thread#method-i-abort_on_exception-3D&quot;&gt; &lt;code&gt;abort_on_exception=&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="2e60830181980fc845d3b6ef77a4dbb8eab65999" translate="yes" xml:space="preserve">
          <source>There is also an instance level method to set this for a specific thread, see &lt;a href=&quot;thread#method-i-report_on_exception-3D&quot;&gt;&lt;code&gt;report_on_exception=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 스레드에 대해이를 설정하는 인스턴스 레벨 메소드도 있습니다 ( &lt;a href=&quot;thread#method-i-report_on_exception-3D&quot;&gt; &lt;code&gt;report_on_exception=&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="a3a1203651b36b23fe78792663068c2b3200a687" translate="yes" xml:space="preserve">
          <source>There is also the Net::HTTPBadResponse exception which is raised when there is a protocol error.</source>
          <target state="translated">프로토콜 오류가있을 때 발생하는 Net :: HTTPBadResponse 예외도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d65f2b01041b7cc4b0a041e2bd2580f62e3b978" translate="yes" xml:space="preserve">
          <source>There is an accept filter</source>
          <target state="translated">수락 필터가 있습니다</target>
        </trans-unit>
        <trans-unit id="1db2e31c21e981f5c245e7592e3aaed4c46fb710" translate="yes" xml:space="preserve">
          <source>There is no route to that network.</source>
          <target state="translated">해당 네트워크에 대한 경로가 없습니다.</target>
        </trans-unit>
        <trans-unit id="40a66a73036544f02a302812c03cf28410733882" translate="yes" xml:space="preserve">
          <source>There is no such storage structure for write headers.</source>
          <target state="translated">쓰기 헤더에 대한 이러한 저장 구조는 없습니다.</target>
        </trans-unit>
        <trans-unit id="4bd56df439eb518ab8ac827ee0393eebb88f5db8" translate="yes" xml:space="preserve">
          <source>There may be an optional maximum field width, expressed as a decimal integer, between the % and the conversion. If no width is given, a default of `infinity' is used (with the exception of the %c specifier; see below). Otherwise, given a field width of &lt;em&gt;n&lt;/em&gt; for a given conversion, at most &lt;em&gt;n&lt;/em&gt; characters are scanned in processing that conversion. Before conversion begins, most conversions skip whitespace in the input string; this whitespace is not counted against the field width.</source>
          <target state="translated">%와 변환 사이에 선택적 최대 필드 너비가 10 진수 정수로 표시 될 수 있습니다. 너비를 지정하지 않으면 기본값 '무한대'가 사용됩니다 (% c 지정자를 제외하고 아래 참조). 그렇지 않으면, 주어진 변환에 대해 필드 너비가 &lt;em&gt;n 인&lt;/em&gt; 경우 해당 변환 을 처리 할 때 최대 &lt;em&gt;n 개의&lt;/em&gt; 문자가 스캔됩니다. 변환이 시작되기 전에 대부분의 변환은 입력 문자열에서 공백을 건너 뜁니다. 이 공백은 필드 너비에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1272e2b4b8311cc8de3a0daccf3a73634dfc2e2e" translate="yes" xml:space="preserve">
          <source>There options are passed when the source plugin is created from the lock file.</source>
          <target state="translated">잠금 파일에서 소스 플러그인을 작성할 때 옵션이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="9950f90039aa16c8486a4886e24e992e6f21fed5" translate="yes" xml:space="preserve">
          <source>Therefore, one should always call &lt;a href=&quot;tempfile#method-i-unlink&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; or close in an ensure block, like this:</source>
          <target state="translated">따라서 항상 다음과 같이 보장 블록에서 링크 &lt;a href=&quot;tempfile#method-i-unlink&quot;&gt; &lt;code&gt;unlink&lt;/code&gt; &lt;/a&gt; 또는 닫기를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5babe73d376233bc4e7feeebdf733e5ac81a9283" translate="yes" xml:space="preserve">
          <source>Therefore, the &lt;code&gt;case&lt;/code&gt; expression might be used for conditional matching and unpacking:</source>
          <target state="translated">따라서 &lt;code&gt;case&lt;/code&gt; 표현식은 조건부 일치 및 압축 해제에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8b7ee873dd09c3a2e23e93570ba3b0225852e3e" translate="yes" xml:space="preserve">
          <source>These are method names for the various Ruby operators. Each of these operators accepts only one argument. Following the operator is the typical use or name of the operator. Creating an alternate meaning for the operator may lead to confusion as the user expects plus to add things, minus to subtract things, etc. Additionally, you cannot alter the precedence of the operators.</source>
          <target state="translated">다양한 루비 연산자의 메소드 이름입니다. 이러한 각 연산자는 하나의 인수 만 허용합니다. 운영자의 일반적인 사용 또는 이름은 다음과 같습니다. 연산자에 대한 대체 의미를 생성하면 사용자가 더하기, 빼기 등을 더하기를 기대하면서 혼동을 일으킬 수 있습니다. 또한 연산자의 우선 순위를 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c60575c098246e4da08f77e4851b629eb8e6ce3d" translate="yes" xml:space="preserve">
          <source>These are the best bug reports. First, consider whether the bug reported is actually an issue or if it is expected Ruby behavior. If it is expected Ruby behavior, update the issue with why the behavior is expected, and set the status to Rejected.</source>
          <target state="translated">이들은 최고의 버그 보고서입니다. 먼저보고 된 버그가 실제로 문제인지 아니면 예상되는 Ruby 동작인지 고려하십시오. 예상되는 Ruby 동작 인 경우 동작이 예상되는 이유로 문제를 업데이트하고 상태를 Rejected로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2b928bdc4b0b953c5d5409a8f3ccf64683bd4072" translate="yes" xml:space="preserve">
          <source>These are the types of percent strings in ruby:</source>
          <target state="translated">다음은 루비에서 퍼센트 문자열 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b92aed489971c3eb0247e02e905e85960819374d" translate="yes" xml:space="preserve">
          <source>These binding objects can be passed as the second argument of the &lt;a href=&quot;kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt; method, establishing an environment for the evaluation.</source>
          <target state="translated">이러한 바인딩 개체는 &lt;a href=&quot;kernel#method-i-eval&quot;&gt; &lt;code&gt;Kernel#eval&lt;/code&gt; &lt;/a&gt; 메서드 의 두 번째 인수로 전달되어 평가를위한 환경을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49771a4ba0d25531c70a960d26f8cb8a1b49e3b9" translate="yes" xml:space="preserve">
          <source>These binding objects can be passed as the second argument of the &lt;code&gt;Kernel#eval&lt;/code&gt; method, establishing an environment for the evaluation.</source>
          <target state="translated">이 바인딩 오브젝트는 &lt;code&gt;Kernel#eval&lt;/code&gt; 메소드 의 두 번째 인수로 전달되어 평가 환경을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5d9e7b224139324560163e364f32bd3dd81e43d2" translate="yes" xml:space="preserve">
          <source>These characteristics make one-way functions also ideal companions for public key signature algorithms: instead of signing an entire document, first a hash of the document is produced with a considerably faster message digest algorithm and only the few bytes of its output need to be signed using the slower public key algorithm. To validate the integrity of a signed document, it suffices to re-compute the hash and verify that it is equal to that in the signature.</source>
          <target state="translated">이러한 특성으로 인해 단방향 기능은 공개 키 서명 알고리즘의 이상적인 동반자가됩니다. 전체 문서에 서명하는 대신 문서의 해시가 상당히 빠른 메시지 요약 알고리즘으로 생성되며 출력의 몇 바이트 만 서명하면됩니다. 느린 공개 키 알고리즘을 사용합니다. 서명 된 문서의 무결성을 확인하려면 해시를 다시 계산하고 서명과 동일한 지 확인하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4c4c60b1bc087f2bd767da137134148d43f7cc17" translate="yes" xml:space="preserve">
          <source>These cookies are in addition to the cookies held in the @output_cookies field.</source>
          <target state="translated">이 쿠키는 @output_cookies 필드에 보유 된 쿠키에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="63f8c940a371e80ca139205f04f0056982dedb66" translate="yes" xml:space="preserve">
          <source>These default options can be overwritten for a single run of the iseq compiler by passing any of the above values as the &lt;code&gt;options&lt;/code&gt; parameter to &lt;a href=&quot;instructionsequence#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;instructionsequence#method-c-compile&quot;&gt;&lt;code&gt;::compile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instructionsequence#method-c-compile_file&quot;&gt;&lt;code&gt;::compile_file&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위의 값 중 하나를 &lt;code&gt;options&lt;/code&gt; 매개 변수로 &lt;a href=&quot;instructionsequence#method-c-new&quot;&gt; &lt;code&gt;::new&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;instructionsequence#method-c-compile&quot;&gt; &lt;code&gt;::compile&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;instructionsequence#method-c-compile_file&quot;&gt; &lt;code&gt;::compile_file&lt;/code&gt; &lt;/a&gt; 에 전달하여 iseq 컴파일러의 단일 실행에 대해 이러한 기본 옵션을 겹쳐 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5f16642612444f7d2507cf28940dc3793edf29c" translate="yes" xml:space="preserve">
          <source>These examples assume prior execution of:</source>
          <target state="translated">이 예에서는 다음을 사전 실행했다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="5d5176d2d52b87b522e09230f1b9fa05e7582e60" translate="yes" xml:space="preserve">
          <source>These examples build atop each other. For example the key created in the next is used in throughout these examples.</source>
          <target state="translated">이 예제는 서로 위에 구축됩니다. 예를 들어, 다음에 생성 된 키는이 예제 전체에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a86e930f354c33dced4a926151231cd44c25e7b1" translate="yes" xml:space="preserve">
          <source>These flags are used to control combinations of algorithm methods.</source>
          <target state="translated">이 플래그는 알고리즘 방법의 조합을 제어하는 ​​데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="32f36675ebf25890b94cc5bee3408e8f2e6bb1b3" translate="yes" xml:space="preserve">
          <source>These global variables are thread-local and method-local variables.</source>
          <target state="translated">이 전역 변수는 스레드 로컬 및 메소드 로컬 변수입니다.</target>
        </trans-unit>
        <trans-unit id="0007a077c97cb0ab7b43ec9062855ce686a477ec" translate="yes" xml:space="preserve">
          <source>These keywords correspond to attributes of the cookie object.</source>
          <target state="translated">이 키워드는 쿠키 객체의 속성에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="d7f1a693c33cbb8a557529e777294f91e611f8dc" translate="yes" xml:space="preserve">
          <source>These make sense as blocks in find-any mode:</source>
          <target state="translated">이들은 모두 찾기 모드에서 블록으로 이해됩니다.</target>
        </trans-unit>
        <trans-unit id="6b84cdefbf84a0c70db37c08c5910150e10445ab" translate="yes" xml:space="preserve">
          <source>These make sense as blocks in find-minimum mode:</source>
          <target state="translated">최소 찾기 모드의 블록으로 이해됩니다.</target>
        </trans-unit>
        <trans-unit id="0c6af55f330b4958e4b30064f4898dc444359253" translate="yes" xml:space="preserve">
          <source>These methods are a facade for Dir:</source>
          <target state="translated">이 방법은 Dir의 외관입니다.</target>
        </trans-unit>
        <trans-unit id="161d8600118186d2d3a4341725c1ba9e1de8124f" translate="yes" xml:space="preserve">
          <source>These methods are a facade for File:</source>
          <target state="translated">이 메소드는 File의 외관입니다.</target>
        </trans-unit>
        <trans-unit id="fed7a0fef36c9af3d2ac1db6eeb44ba6b0e8a06e" translate="yes" xml:space="preserve">
          <source>These methods are a facade for FileTest:</source>
          <target state="translated">이 메소드는 FileTest의 외관입니다.</target>
        </trans-unit>
        <trans-unit id="912226d4587c97be8d41f6eca94aba7f6338fb68" translate="yes" xml:space="preserve">
          <source>These methods are a facade for IO:</source>
          <target state="translated">이러한 방법은 IO의 외관입니다.</target>
        </trans-unit>
        <trans-unit id="d33b3887eb7b2c1bd6257fc0c1aa03d6914b72a9" translate="yes" xml:space="preserve">
          <source>These methods are a mixture of &lt;a href=&quot;find&quot;&gt;&lt;code&gt;Find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileutils&quot;&gt;&lt;code&gt;FileUtils&lt;/code&gt;&lt;/a&gt;, and others:</source>
          <target state="translated">이러한 메소드는 &lt;a href=&quot;find&quot;&gt; &lt;code&gt;Find&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;fileutils&quot;&gt; &lt;code&gt;FileUtils&lt;/code&gt; &lt;/a&gt; 및 기타 의 혼합입니다 .</target>
        </trans-unit>
        <trans-unit id="a041d2cbabd128e4f1293cb1520967e8e5708f1a" translate="yes" xml:space="preserve">
          <source>These methods are effectively manipulating a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, because that's all a path is. None of these access the file system except for &lt;a href=&quot;pathname#method-i-mountpoint-3F&quot;&gt;&lt;code&gt;mountpoint?&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pathname#method-i-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pathname#method-i-each_child&quot;&gt;&lt;code&gt;each_child&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pathname#method-i-realdirpath&quot;&gt;&lt;code&gt;realdirpath&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pathname#method-i-realpath&quot;&gt;&lt;code&gt;realpath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 경로를 효과적으로 조작합니다 . 경로가 전부이기 때문입니다. 이들 중 어느 것도 &lt;a href=&quot;pathname#method-i-mountpoint-3F&quot;&gt; &lt;code&gt;mountpoint?&lt;/code&gt; &lt;/a&gt; 제외하고 파일 시스템에 액세스 합니까? , &lt;a href=&quot;pathname#method-i-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pathname#method-i-each_child&quot;&gt; &lt;code&gt;each_child&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pathname#method-i-realdirpath&quot;&gt; &lt;code&gt;realdirpath&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pathname#method-i-realpath&quot;&gt; &lt;code&gt;realpath&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cd950ff6a15541584fb7f3bf2dcd1f4b0970ed8c" translate="yes" xml:space="preserve">
          <source>These methods are not callable via dRuby.</source>
          <target state="translated">이러한 메소드는 dRuby를 통해 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fdb16e93275a64e3d17ad20f74c413872fe31d98" translate="yes" xml:space="preserve">
          <source>These methods are usable as class methods of &lt;a href=&quot;securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; such as `SecureRandom.hex`.</source>
          <target state="translated">이러한 메소드는 'SecureRandom.hex'와 같은 &lt;a href=&quot;securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; 의&lt;/a&gt; 클래스 메소드로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39da9fdd2f89056079539e8fe62b52a26b9b941b" translate="yes" xml:space="preserve">
          <source>These numbers have the same value, 1,234. The underscore may be used to enhance readability for humans. You may place an underscore anywhere in the number.</source>
          <target state="translated">이 숫자의 값은 1,234입니다. 밑줄은 인간의 가독성을 향상시키는 데 사용될 수 있습니다. 숫자의 어느 곳에 나 밑줄을 둘 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70af1172fbcd3b00c55a248eeeedd9734ce919b6" translate="yes" xml:space="preserve">
          <source>These numbers have the same value, 12.34. You may use underscores in floating point numbers as well.</source>
          <target state="translated">이 숫자의 값은 12.34입니다. 부동 소수점 숫자에도 밑줄을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5163f32b108120fb6273f0facdeb131d7b63b985" translate="yes" xml:space="preserve">
          <source>These objects are each one byte long. &amp;ldquo;T&amp;rdquo; is represents &lt;code&gt;true&lt;/code&gt;, &amp;ldquo;F&amp;rdquo; represents &lt;code&gt;false&lt;/code&gt; and &amp;ldquo;0&amp;rdquo; represents &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 객체들은 각각 1 바이트 길이입니다. &quot;T&quot;는 &lt;code&gt;true&lt;/code&gt; 를 나타내고 &quot;F&quot;는 &lt;code&gt;false&lt;/code&gt; 를 , &quot;0&quot;은 &lt;code&gt;nil&lt;/code&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="481a591f5bf5fdd91a35502f80aa2312e7c2b605" translate="yes" xml:space="preserve">
          <source>These plugins are optional and are not installed when there is conflict with any other plugin.</source>
          <target state="translated">이 플러그인은 선택 사항이며 다른 플러그인과 충돌 할 경우 설치되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f8e7e3636124a9a5dff410940e2ba57db1b36d0" translate="yes" xml:space="preserve">
          <source>These records identify the hostname and port that a service is available at.</source>
          <target state="translated">이 레코드는 서비스를 사용할 수있는 호스트 이름과 포트를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="f4d5ba27edb8e638e4a110376fecce65c9b8043d" translate="yes" xml:space="preserve">
          <source>These three error response are represented by the errors &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;imap/badresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::BadResponseError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;imap/byeresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::ByeResponseError&lt;/code&gt;&lt;/a&gt;, all of which are subclasses of &lt;a href=&quot;imap/responseerror&quot;&gt;&lt;code&gt;Net::IMAP::ResponseError&lt;/code&gt;&lt;/a&gt;. Essentially, all methods that involve sending a request to the server can generate one of these errors. Only the most pertinent instances have been documented below.</source>
          <target state="translated">이 세 가지 오류 응답은 &lt;a href=&quot;imap/noresponseerror&quot;&gt; &lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;imap/badresponseerror&quot;&gt; &lt;code&gt;Net::IMAP::BadResponseError&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;imap/byeresponseerror&quot;&gt; &lt;code&gt;Net::IMAP::ByeResponseError&lt;/code&gt; &lt;/a&gt; 되며 모두 &lt;a href=&quot;imap/responseerror&quot;&gt; &lt;code&gt;Net::IMAP::ResponseError&lt;/code&gt; &lt;/a&gt; 서브 클래스입니다 . 본질적으로 서버로 요청을 보내는 모든 방법은 이러한 오류 중 하나를 생성 할 수 있습니다. 가장 적절한 인스턴스 만 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e3eefe4f2f031cf6c2513c0870e7ef4d76bf8a9" translate="yes" xml:space="preserve">
          <source>These values can be added after the fact, like a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 값은 &lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 와 같이 사실 뒤에 추가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd77b720c915164113b02909773d194fc5f2a0dc" translate="yes" xml:space="preserve">
          <source>They treat quotes as special characters, so an unmatched quote will cause an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">따옴표를 특수 문자로 취급하므로 일치하지 않는 따옴표로 인해 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="3a626fe6fc3f53c86e2cc42e6889b6f19a86e0bc" translate="yes" xml:space="preserve">
          <source>Thirdly, &lt;a href=&quot;../bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; checks if there are any dependencies specified in the Gemfile. If there are no dependencies specified then &lt;a href=&quot;../bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; returns a warning message stating so and this method returns.</source>
          <target state="translated">셋째, &lt;a href=&quot;../bundler&quot;&gt; &lt;code&gt;Bundler&lt;/code&gt; 를의&lt;/a&gt; 검사는 Gemfile에 지정된 종속성이있는 경우. 지정된 종속성이 없으면 &lt;a href=&quot;../bundler&quot;&gt; &lt;code&gt;Bundler&lt;/code&gt; &lt;/a&gt; 는이를 알리는 경고 메시지를 리턴하고이 메소드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="022ae77a94b64a4aed2b393a05966e939ad6630b" translate="yes" xml:space="preserve">
          <source>This (somewhat contrived) example allows the inner loop to abandon processing early:</source>
          <target state="translated">이 (뭔가 고안된) 예제는 내부 루프가 처리를 일찍 포기할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="fceb2e1f21b3f7a6b549ca68a0c16374dbb89609" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../../../../../net/http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; subclass adds SSL session reuse and Server Name Indication (SNI) RFC 3546.</source>
          <target state="translated">이 &lt;a href=&quot;../../../../../net/http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 서브 클래스는 SSL 세션 재사용 및 SNI (Server Name Indication) RFC 3546을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ae79b63162619b30bf9667999d60dcb65c2a4f35" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;drbobjecttemplate&quot;&gt;&lt;code&gt;DRbObjectTemplate&lt;/code&gt;&lt;/a&gt; matches &lt;code&gt;ro&lt;/code&gt; if the remote object's drburi and drbref are the same. &lt;code&gt;nil&lt;/code&gt; is used as a wildcard.</source>
          <target state="translated">이 &lt;a href=&quot;drbobjecttemplate&quot;&gt; &lt;code&gt;DRbObjectTemplate&lt;/code&gt; &lt;/a&gt; 은 원격 오브젝트의 drburi와 drbref가 동일한 경우 &lt;code&gt;ro&lt;/code&gt; 와 일치 합니다. &lt;code&gt;nil&lt;/code&gt; 은 와일드 카드로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e46a2d5fdc3427057b571fd4f2c751887ee10b09" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; holds the built-in converters of &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; that can be accessed by name. You can select &lt;a href=&quot;csv#Converters&quot;&gt;&lt;code&gt;Converters&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;csv#method-i-convert&quot;&gt;&lt;code&gt;CSV.convert()&lt;/code&gt;&lt;/a&gt; or through the &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; passed to &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 는 이름으로 액세스 할 수있는 내장 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 변환기를 보유합니다 . &lt;a href=&quot;csv#method-i-convert&quot;&gt; &lt;code&gt;CSV.convert()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 전달 된 &lt;code&gt;options&lt;/code&gt; 통해 &lt;a href=&quot;csv#Converters&quot;&gt; &lt;code&gt;Converters&lt;/code&gt; &lt;/a&gt; 를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="56cdc8a9874a3d44d69a9d3ebfb855d822f41f23" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; holds the built-in header converters of &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; that can be accessed by name. You can select &lt;a href=&quot;csv#HeaderConverters&quot;&gt;&lt;code&gt;HeaderConverters&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;csv#method-i-header_convert&quot;&gt;&lt;code&gt;CSV.header_convert()&lt;/code&gt;&lt;/a&gt; or through the &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; passed to &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 는 이름으로 액세스 할 수있는 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 의 내장 헤더 변환기를 보유합니다 . &lt;a href=&quot;csv#method-i-header_convert&quot;&gt; &lt;code&gt;CSV.header_convert()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt; 전달 된 &lt;code&gt;options&lt;/code&gt; 통해 &lt;a href=&quot;csv#HeaderConverters&quot;&gt; &lt;code&gt;HeaderConverters&lt;/code&gt; &lt;/a&gt; 를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c4b59cc95b2a215cc18ede8d63f70d4801f4550" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; is intentionally left unfrozen and users should feel free to add values to it that can be accessed by all &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">이 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 는 의도적으로 고정되어 있지 않으므로 사용자는 모든 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 개체에서 액세스 할 수있는 값을 자유롭게 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b1a3c9d5332e81bb99d486cf6982d553e794ff77" translate="yes" xml:space="preserve">
          <source>This CA certificate was revoked due to a key compromise</source>
          <target state="translated">키 손상으로 인해이 CA 인증서가 해지되었습니다.</target>
        </trans-unit>
        <trans-unit id="6645c933df71c99d85a7a7045b98b2edfa1661b7" translate="yes" xml:space="preserve">
          <source>This CSV String, with row separator &lt;code&gt;&quot;\n&quot;&lt;/code&gt; and column separator &lt;code&gt;&quot;,&quot;&lt;/code&gt;, has three rows and two columns:</source>
          <target state="translated">행 구분 기호 &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 및 열 구분 기호 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 가있는 이 CSV 문자열 에는 3 개의 행과 2 개의 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6029b55ecd9550df06b5ad07431b9a0a6789069d" translate="yes" xml:space="preserve">
          <source>This Hash has keys that are Arrays:</source>
          <target state="translated">이 해시에는 배열 인 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc9d792f73bd6bd5c242582ada6a5cc3d7730a5c" translate="yes" xml:space="preserve">
          <source>This Hash is intentionally left unfrozen, and may be extended with custom field converters. See &lt;a href=&quot;#class-CSV-label-Custom+Field+Converters&quot;&gt;Custom Field Converters&lt;/a&gt;.</source>
          <target state="translated">이 해시는 의도적으로 고정되지 않은 상태로 유지되며 사용자 지정 필드 변환기로 확장 할 수 있습니다. &lt;a href=&quot;#class-CSV-label-Custom+Field+Converters&quot;&gt;사용자 정의 필드 변환기를&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="99d8338085bbb42782719b43016eca7c515b7d8d" translate="yes" xml:space="preserve">
          <source>This Hash is intentionally left unfrozen, and may be extended with custom field converters. See &lt;a href=&quot;#class-CSV-label-Custom+Header+Converters&quot;&gt;Custom Header Converters&lt;/a&gt;.</source>
          <target state="translated">이 해시는 의도적으로 고정되지 않은 상태로 유지되며 사용자 지정 필드 변환기로 확장 할 수 있습니다. &lt;a href=&quot;#class-CSV-label-Custom+Header+Converters&quot;&gt;사용자 정의 헤더 변환기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4dfd97dadc2ba26295fb938573ec92d95db25af" translate="yes" xml:space="preserve">
          <source>This above is achieved by:</source>
          <target state="translated">이것은 다음에 의해 달성됩니다.</target>
        </trans-unit>
        <trans-unit id="e59d57df21240ae91a18598b82a2831344c7617d" translate="yes" xml:space="preserve">
          <source>This abstract class provides a common interface to message digest implementation classes written in C.</source>
          <target state="translated">이 추상 클래스는 C로 작성된 메시지 요약 구현 클래스에 대한 공통 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="320d28dc156e8f5103d7266849a220ce52c8da7a" translate="yes" xml:space="preserve">
          <source>This adds &lt;code&gt;obj&lt;/code&gt; as a text of &lt;code&gt;width&lt;/code&gt; columns in width.</source>
          <target state="translated">이것은 &lt;code&gt;width&lt;/code&gt; 의 너비 열 텍스트로 &lt;code&gt;obj&lt;/code&gt; 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="bcc5e77ed07d06247b0fd98cb1310fdf8740e693" translate="yes" xml:space="preserve">
          <source>This adds a new &lt;a href=&quot;objectid&quot;&gt;&lt;code&gt;ObjectId&lt;/code&gt;&lt;/a&gt; to the internal tables. Where &lt;em&gt;object_id&lt;/em&gt; is the numerical form, &lt;em&gt;short_name&lt;/em&gt; is the short name, and &lt;em&gt;long_name&lt;/em&gt; is the long name.</source>
          <target state="translated">내부 테이블에 새 &lt;a href=&quot;objectid&quot;&gt; &lt;code&gt;ObjectId&lt;/code&gt; &lt;/a&gt; 가 추가 됩니다. 여기서 &lt;em&gt;object_id&lt;/em&gt; 는 숫자 형식이며, &lt;em&gt;short_name&lt;/em&gt; 은 짧은 이름이고 &lt;em&gt;long_name&lt;/em&gt; 은 긴 이름입니다.</target>
        </trans-unit>
        <trans-unit id="84196abf66405f716a9b11cb64580fbee61ed75e" translate="yes" xml:space="preserve">
          <source>This allows definition of methods and attributes on a class (or module) without needing to write &lt;code&gt;def self.my_method&lt;/code&gt;.</source>
          <target state="translated">이를 통해 &lt;code&gt;def self.my_method&lt;/code&gt; 를 작성할 필요없이 클래스 (또는 모듈)에서 메소드 및 속성을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffc4596161f71436ee06ac5a93f8ffd2265c3f78" translate="yes" xml:space="preserve">
          <source>This allows to easily chain methods which could return empty value. Note that &lt;code&gt;&amp;amp;.&lt;/code&gt; skips only one next call, so for a longer chain it is necessary to add operator on each level:</source>
          <target state="translated">이렇게하면 빈 값을 반환 할 수있는 메서드를 쉽게 연결할 수 있습니다. 참고 &lt;code&gt;&amp;amp;.&lt;/code&gt; 다음 호출을 하나만 건너 뛰므로 더 긴 체인의 경우 각 수준에서 연산자를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="c1c574e3e088c0eb978dc8ed9051e23a89e81700" translate="yes" xml:space="preserve">
          <source>This allows you to chain Enumerators together. For example, you can map a list's elements to strings containing the index and the element as a string via:</source>
          <target state="translated">이를 통해 열거자를 함께 연결할 수 있습니다. 예를 들어, 다음을 통해 목록의 요소를 색인과 요소를 포함하는 문자열에 맵핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4559d5004a22f5c89ec4f5b6d26cdbb139f52275" translate="yes" xml:space="preserve">
          <source>This also results in the following, possibly unexpected, behavior:</source>
          <target state="translated">또한 다음과 같은 예기치 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3668343c90f73b74f8d9fa7ad961a93793794b76" translate="yes" xml:space="preserve">
          <source>This array contains name of all ripper events.</source>
          <target state="translated">이 배열은 모든 리퍼 이벤트의 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0e04e90cf0a5395432b46310f11c7eaff14d60ae" translate="yes" xml:space="preserve">
          <source>This array contains name of parser events.</source>
          <target state="translated">이 배열은 파서 이벤트의 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="3725d8cf8c9b90edcc6977f88c18fb27fb68e4c8" translate="yes" xml:space="preserve">
          <source>This array contains name of scanner events.</source>
          <target state="translated">이 배열에는 스캐너 이벤트 이름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7e338cdb522ae3c8f3774fca5488d482776488ab" translate="yes" xml:space="preserve">
          <source>This assignment is implemented in the Ruby parser. The parser detects 'regexp-literal =~ expression' for the assignment. The regexp must be a literal without interpolation and placed at left hand side.</source>
          <target state="translated">이 할당은 Ruby 파서에서 구현됩니다. 파서는 할당에 대한 'regexp-literal = ~ expression'을 감지합니다. 정규 표현식은 보간법이없는 리터럴이어야하고 왼쪽에 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b424f2aa8fcd1dd43fa9a809abfd53d36d7d6bfa" translate="yes" xml:space="preserve">
          <source>This backport fixes the marshaling of @segments.</source>
          <target state="translated">이 백 포트는 @ 세그먼트의 마샬링을 수정합니다.</target>
        </trans-unit>
        <trans-unit id="511163358482f4bc3bbb0ffde4660db5298e58c7" translate="yes" xml:space="preserve">
          <source>This backports base_dir which replaces installation path RubyGems 1.8+</source>
          <target state="translated">설치 경로 RubyGems 1.8 이상을 대체하는이 백 포트 base_dir</target>
        </trans-unit>
        <trans-unit id="7a03b8ff0ff2231f8056521eced55295350dffff" translate="yes" xml:space="preserve">
          <source>This backports the correct segment generation code from RubyGems 1.4+ by monkeypatching it into the method in RubyGems 1.3.6 and 1.3.7.</source>
          <target state="translated">이는 RubyGems 1.4 이상에서 RubyGems 1.3.6 및 1.3.7의 메소드로 원숭이 패치되어 올바른 세그먼트 생성 코드를 백 포트합니다.</target>
        </trans-unit>
        <trans-unit id="acce3fa4213386882a510e6b56e9456511c9fc9c" translate="yes" xml:space="preserve">
          <source>This behavior is modified by the given &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters. See ::spawn for details.</source>
          <target state="translated">이 동작은 주어진 &lt;code&gt;env&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 매개 변수에 의해 수정됩니다 . 자세한 내용은 :: spawn을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e54bd6b81553620f9d5ed519f9eb2f67f893a391" translate="yes" xml:space="preserve">
          <source>This behavior is modified by the given &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters. See &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;::spawn&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이 동작은 주어진 &lt;code&gt;env&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 매개 변수에 의해 수정됩니다 . 자세한 내용은 &lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;::spawn&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e61d7054050c45e1699311b1cd4152a8658cf352" translate="yes" xml:space="preserve">
          <source>This behavior is preserved under inheritance and cloning.</source>
          <target state="translated">이 동작은 상속 및 복제시 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="1ee2dd62a070167c13a81cad9c59c0f9115d3472" translate="yes" xml:space="preserve">
          <source>This behavior is useful when chaining comparisons:</source>
          <target state="translated">이 동작은 비교를 연결할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="053972f7ce9da2e8ddca3b84d80660c30b859628" translate="yes" xml:space="preserve">
          <source>This behavior may be changed in the future.</source>
          <target state="translated">이 동작은 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d61593a70eaf7b2db604603584bff4703cb226c5" translate="yes" xml:space="preserve">
          <source>This builds upon the top-level &lt;a href=&quot;pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; class provided by the library file pstore.rb. &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; data is marshalled and stored in a file. &lt;a href=&quot;../../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; locking and transaction services are provided.</source>
          <target state="translated">라이브러리 파일 pstore.rb에서 제공하는 최상위 &lt;a href=&quot;pstore&quot;&gt; &lt;code&gt;PStore&lt;/code&gt; &lt;/a&gt; 클래스를 기반으로합니다 . &lt;a href=&quot;../session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt; 데이터는 마샬링되어 파일에 저장됩니다. &lt;a href=&quot;../../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 잠금 및 트랜잭션 서비스가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c42164d28a19e61ea09e1a6ad4c1229077d732bc" translate="yes" xml:space="preserve">
          <source>This cache is different from the internal caching that can be done at sub paths of `cache_path` (from &lt;a href=&quot;../api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt;). This can be though as caching by bundler.</source>
          <target state="translated">이 캐시는 'cache_path'의 하위 경로 ( &lt;a href=&quot;../api&quot;&gt; &lt;code&gt;API&lt;/code&gt; 에서&lt;/a&gt; ) 에서 수행 할 수있는 내부 캐싱과 다릅니다 . 이것은 번 들러에 의한 캐싱과 같을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb5913a474a814189ccd1f0fb506c78a7ffcf7f2" translate="yes" xml:space="preserve">
          <source>This can also be used to create symbols that cannot be represented using the &lt;code&gt;:xxx&lt;/code&gt; notation.</source>
          <target state="translated">&lt;code&gt;:xxx&lt;/code&gt; 표기법 으로 표현할 수없는 심볼을 만드는 데 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b9f48656cf9c44cdc270605da0859c9204a4880" translate="yes" xml:space="preserve">
          <source>This can be used in contexts like &lt;a href=&quot;x509/extensionfactory#attribute-i-config&quot;&gt;&lt;code&gt;OpenSSL::X509::ExtensionFactory.config=&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;x509/extensionfactory#attribute-i-config&quot;&gt; &lt;code&gt;OpenSSL::X509::ExtensionFactory.config=&lt;/code&gt; &lt;/a&gt; 와 같은 컨텍스트에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78030199903da8b2a2060f48baf32c363be83ab8" translate="yes" xml:space="preserve">
          <source>This can raise &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; exceptions based on the access, or availability of the file. A &lt;a href=&quot;configerror&quot;&gt;&lt;code&gt;ConfigError&lt;/code&gt;&lt;/a&gt; exception may be raised depending on the validity of the data being configured.</source>
          <target state="translated">파일의 액세스 또는 가용성에 따라 &lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 예외가 발생할 수 있습니다 . &lt;a href=&quot;configerror&quot;&gt; &lt;code&gt;ConfigError&lt;/code&gt; 의&lt;/a&gt; 예외는 데이터가 구성되고, 유효성에 따라 발생 될 수있다.</target>
        </trans-unit>
        <trans-unit id="43340b0816638b087f8be65216d72edd06f4a34e" translate="yes" xml:space="preserve">
          <source>This class allows idiomatic calculations on long or infinite sequences, as well as chaining of calculations without constructing intermediate arrays.</source>
          <target state="translated">이 클래스를 사용하면 길거나 무한한 시퀀스에 대한 관용적 계산은 물론 중간 배열을 구성하지 않고도 계산을 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="476c9ff6e7b64ac39680d06fb58f1eef262836ff" translate="yes" xml:space="preserve">
          <source>This class contains all of the logic for determining the next version of a Gem to update to based on the requested level (patch, minor, major). Primarily designed to work with &lt;a href=&quot;resolver&quot;&gt;&lt;code&gt;Resolver&lt;/code&gt;&lt;/a&gt; which will provide it the list of available dependency versions as found in its index, before returning it to to the resolution engine to select the best version.</source>
          <target state="translated">이 클래스에는 요청 된 레벨 (패치, 마이너, 메이저)을 기반으로 업데이트 할 다음 버전의 Gem을 결정하기위한 모든 논리가 포함됩니다. 기본적으로 &lt;a href=&quot;resolver&quot;&gt; &lt;code&gt;Resolver&lt;/code&gt; &lt;/a&gt; 와 함께 작동하도록 설계되어 최상의 버전을 선택하기 위해 해상도 엔진으로 반환하기 전에 색인에서 찾은 사용 가능한 종속성 버전 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e682aab8803ecaa6eec596aa4fa9e7f85a5655ab" translate="yes" xml:space="preserve">
          <source>This class encapsulates a dependency resolver. The resolver is responsible for determining which set of dependencies to activate, with feedback from the {#specification_provider}</source>
          <target state="translated">이 클래스는 종속성 해결자를 캡슐화합니다. 리졸버는 {#specification_provider}의 피드백을 통해 활성화 할 종속성 집합을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="810aa469b644c8b0a6b8572126245c96d196faaa" translate="yes" xml:space="preserve">
          <source>This class handles only scanner events, which are dispatched in the 'right' order (same with input).</source>
          <target state="translated">이 클래스는 스캐너 이벤트 만 처리합니다. 스캐너 이벤트는 '올바른'순서로 전달됩니다 (입력과 동일).</target>
        </trans-unit>
        <trans-unit id="005e91e2755cb7746b08c1fd6a1089edd3980f74" translate="yes" xml:space="preserve">
          <source>This class implements a pretty printing algorithm. It finds line breaks and nice indentations for grouped structure.</source>
          <target state="translated">이 클래스는 예쁜 인쇄 알고리즘을 구현합니다. 그룹화 된 구조에 대한 줄 바꿈과 멋진 들여 쓰기를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="23060fcb9f5ecdde96e2a6b49b6a2f1cc8794760" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; Transfer Protocol. If you have used a command-line &lt;a href=&quot;ftp&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; program, and are familiar with the commands, you will be able to use this class easily. Some extra features are included to take advantage of Ruby's style and strengths.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 전송 프로토콜을 구현합니다 . 명령 행 &lt;a href=&quot;ftp&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt; 프로그램 을 사용하고 명령 에 익숙한 경우이 클래스를 쉽게 사용할 수 있습니다. Ruby의 스타일과 장점을 활용하기 위해 몇 가지 추가 기능이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cde6976f21572a5eb7d1a00f0baca9638ddb1eb" translate="yes" xml:space="preserve">
          <source>This class is Array-convertible:</source>
          <target state="translated">이 클래스는 배열 변환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="43f87f1c09a22c6c5c82b2e22ba0b77352745d9a" translate="yes" xml:space="preserve">
          <source>This class is Hash-convertible:</source>
          <target state="translated">이 클래스는 해시 변환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="86ae373b71fb8b76fa14145a416eb0512354a120" translate="yes" xml:space="preserve">
          <source>This class is MRI specific as it exposes implementation details of the MRI abstract syntax tree.</source>
          <target state="translated">이 클래스는 MRI 추상 구문 트리의 구현 세부 정보를 노출하므로 MRI와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="874a1631445492aa654ac0fcf44ffa57d6adb06f" translate="yes" xml:space="preserve">
          <source>This class is MRI specific.</source>
          <target state="translated">이 수업은 MRI에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="1a6cdbe31a0c1439465e7b87eef5b67a5784b1e6" translate="yes" xml:space="preserve">
          <source>This class is String-convertible:</source>
          <target state="translated">이 클래스는 문자열 변환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="2b36a4d9a17975acd542cfa96af150ae92efd5e9" translate="yes" xml:space="preserve">
          <source>This class is an implementation detail and is subject to change or removal at any time.</source>
          <target state="translated">이 클래스는 구현 세부 사항이며 언제든지 변경 또는 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a635f3ebe3b3f15a2a9a18ebeeb6bf0b393b842d" translate="yes" xml:space="preserve">
          <source>This class is equivalent to &lt;a href=&quot;net/pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, except that it uses &lt;a href=&quot;net/apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;net/apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 인증을 사용한다는 점을 제외하고 &lt;a href=&quot;net/pop3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="94884866b5fe748b9a16f6470e55bcf5f859d2e6" translate="yes" xml:space="preserve">
          <source>This class is equivalent to &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, except that it uses &lt;a href=&quot;apop&quot;&gt;&lt;code&gt;APOP&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;apop&quot;&gt; &lt;code&gt;APOP&lt;/code&gt; &lt;/a&gt; 인증을 사용한다는 점을 제외하고 &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="36832628db8e135c3ac7c0199b48227ed8afc677" translate="yes" xml:space="preserve">
          <source>This class is experimental and its API is not stable, therefore it might change without notice. As examples, the order of children nodes is not guaranteed, the number of children nodes might change, there is no way to access children nodes by name, etc.</source>
          <target state="translated">이 클래스는 실험적이며 API가 안정적이지 않으므로 예고없이 변경 될 수 있습니다. 예를 들어, 자식 노드의 순서가 보장되지 않고 자식 노드 수가 변경 될 수 있으며 이름으로 자식 노드에 액세스 할 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="f9a41cf862e7cae7ccf5f2cfeb098e9385fbb40d" translate="yes" xml:space="preserve">
          <source>This class is mostly used internally by &lt;a href=&quot;../weakref&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt;, please use &lt;code&gt;lib/weakref.rb&lt;/code&gt; for the public interface.</source>
          <target state="translated">이 클래스는 주로 &lt;a href=&quot;../weakref&quot;&gt; &lt;code&gt;WeakRef&lt;/code&gt; &lt;/a&gt; 에 의해 내부적으로 사용 됩니다. 공용 인터페이스에는 &lt;code&gt;lib/weakref.rb&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad73cd5ebf795669641d71630b19f459761164c8" translate="yes" xml:space="preserve">
          <source>This class is not Array-convertible (method &lt;code&gt;to_ary&lt;/code&gt; returns non-Array):</source>
          <target state="translated">이 클래스는 배열 변환이 &lt;code&gt;to_ary&lt;/code&gt; 합니다 (방법 to_ary 는 배열이 아닌 값을 반환 함).</target>
        </trans-unit>
        <trans-unit id="5a0b9c0643e9cf83a045861d379305e4f854fd60" translate="yes" xml:space="preserve">
          <source>This class is not Array-convertible (method &lt;code&gt;to_ary&lt;/code&gt; takes arguments):</source>
          <target state="translated">이 클래스는 배열 변환이 불가능합니다 ( &lt;code&gt;to_ary&lt;/code&gt; 메소드 는 인수를 사용함 ).</target>
        </trans-unit>
        <trans-unit id="79f1c59bc7e243e9504bb4415dc17147c81bfc1a" translate="yes" xml:space="preserve">
          <source>This class is not Array-convertible (no &lt;code&gt;to_ary&lt;/code&gt; method):</source>
          <target state="translated">이 클래스는 배열 변환이 불가능합니다 ( &lt;code&gt;to_ary&lt;/code&gt; 메서드 없음 ).</target>
        </trans-unit>
        <trans-unit id="e895ef15876cab9ccf710a7205fb76faf357c291" translate="yes" xml:space="preserve">
          <source>This class is not Hash-convertible (method &lt;code&gt;to_hash&lt;/code&gt; returns non-Hash):</source>
          <target state="translated">이 클래스는 해시로 변환 할 수 없습니다 ( &lt;code&gt;to_hash&lt;/code&gt; 메서드 는 해시가 아닌 값을 반환 함).</target>
        </trans-unit>
        <trans-unit id="20d34215d3ac96152984da1a4dc46644ef619b1b" translate="yes" xml:space="preserve">
          <source>This class is not Hash-convertible (method &lt;code&gt;to_hash&lt;/code&gt; takes arguments):</source>
          <target state="translated">이 클래스는 해시로 변환 할 수 없습니다 ( &lt;code&gt;to_hash&lt;/code&gt; 메서드 는 인수를 사용함 ).</target>
        </trans-unit>
        <trans-unit id="f9de7b15591e6f006b8cd1e4dcf7f91c698369f8" translate="yes" xml:space="preserve">
          <source>This class is not Hash-convertible (no &lt;code&gt;to_hash&lt;/code&gt; method):</source>
          <target state="translated">이 클래스는 해시로 변환 할 수 없습니다 ( &lt;code&gt;to_hash&lt;/code&gt; 메서드 없음 ).</target>
        </trans-unit>
        <trans-unit id="7356be9340672bff7b953d2f723652923f21c26d" translate="yes" xml:space="preserve">
          <source>This class is not Integer-convertible (method &lt;code&gt;to_int&lt;/code&gt; returns non-Integer):</source>
          <target state="translated">이 클래스는 정수로 변환 할 수 없습니다 ( &lt;code&gt;to_int&lt;/code&gt; 메서드 는 정수가 아닌 값을 반환 함).</target>
        </trans-unit>
        <trans-unit id="983f20cf8a7fbb5e27119260ca343991225ab8bb" translate="yes" xml:space="preserve">
          <source>This class is not Integer-convertible (method &lt;code&gt;to_int&lt;/code&gt; takes arguments):</source>
          <target state="translated">이 클래스는 정수로 변환 할 수 없습니다 ( &lt;code&gt;to_int&lt;/code&gt; 메소드 는 인수를 사용함 ) :</target>
        </trans-unit>
        <trans-unit id="be6fbc7bce99813366891ac7eda3230195be37dc" translate="yes" xml:space="preserve">
          <source>This class is not String-convertible (method &lt;code&gt;to_str&lt;/code&gt; returns non-String):</source>
          <target state="translated">이 클래스는 문자열 변환이 불가능합니다 ( &lt;code&gt;to_str&lt;/code&gt; 메소드 는 문자열이 아닌 값을 반환 함).</target>
        </trans-unit>
        <trans-unit id="cca08e83a7fa833356778d7e510b1fd17b661435" translate="yes" xml:space="preserve">
          <source>This class is not String-convertible (method &lt;code&gt;to_str&lt;/code&gt; takes arguments):</source>
          <target state="translated">이 클래스는 문자열 변환이 불가능합니다 ( &lt;code&gt;to_str&lt;/code&gt; 메소드 는 인수를 사용함 ).</target>
        </trans-unit>
        <trans-unit id="329cf05b9beb2aacb335a828ad32412091f7c27a" translate="yes" xml:space="preserve">
          <source>This class is not String-convertible (no &lt;code&gt;to_str&lt;/code&gt; method):</source>
          <target state="translated">이 클래스는 문자열 변환이 불가능합니다 ( &lt;code&gt;to_str&lt;/code&gt; 메소드 없음 ).</target>
        </trans-unit>
        <trans-unit id="9676f7444db5c1e552eaca1e1f1474c9480ade7a" translate="yes" xml:space="preserve">
          <source>This class is obsolete. You may pass these same parameters directly to &lt;a href=&quot;http#method-c-new&quot;&gt;&lt;code&gt;Net::HTTP.new&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;http#method-c-new&quot;&gt;&lt;code&gt;Net::HTTP.new&lt;/code&gt;&lt;/a&gt; for details of the arguments.</source>
          <target state="translated">이 클래스는 더 이상 사용되지 않습니다. 동일한 매개 변수를 &lt;a href=&quot;http#method-c-new&quot;&gt; &lt;code&gt;Net::HTTP.new&lt;/code&gt; &lt;/a&gt; 직접 전달할 수 있습니다 . 인수에 대한 자세한 내용은 &lt;a href=&quot;http#method-c-new&quot;&gt; &lt;code&gt;Net::HTTP.new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54e1caa7f2254749696c7c50ae9fc67a8f171c11" translate="yes" xml:space="preserve">
          <source>This class is only provided for backwards compatibility. Use &lt;a href=&quot;../cipher&quot;&gt;&lt;code&gt;OpenSSL::Cipher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 이전 버전과의 호환성을 위해서만 제공됩니다. &lt;a href=&quot;../cipher&quot;&gt; &lt;code&gt;OpenSSL::Cipher&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="27b2d325f1da5d326b55cbc386f820eca864e7c5" translate="yes" xml:space="preserve">
          <source>This class is supposed to be wrapper over the existing gem installation infra but currently it itself handles everything as the Source's subclasses (e.g. Source::RubyGems) are heavily dependent on the Gemfile.</source>
          <target state="translated">이 클래스는 기존 gem 설치 인프라에 래퍼로되어 있지만 현재 소스의 서브 클래스 (예 : Source :: RubyGems)가 Gemfile에 크게 의존하므로 모든 것을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="3b9aede195d74c97bceb880687d4bf87b29558fa" translate="yes" xml:space="preserve">
          <source>This class is the access to openssl's ENGINE cryptographic module implementation.</source>
          <target state="translated">이 클래스는 openssl의 ENGINE 암호화 모듈 구현에 대한 액세스입니다.</target>
        </trans-unit>
        <trans-unit id="a475a20daa2ed7592cb7c7a82a041cb0ff9b6896" translate="yes" xml:space="preserve">
          <source>This class is used as a return value from &lt;a href=&quot;../objectspace#method-c-reachable_objects_from&quot;&gt;&lt;code&gt;ObjectSpace::reachable_objects_from&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../objectspace#method-c-reachable_objects_from&quot;&gt; &lt;code&gt;ObjectSpace::reachable_objects_from&lt;/code&gt; &lt;/a&gt; 의 반환 값으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0ef539acd6730fd5c2716f3ee271ee10fa6bc83f" translate="yes" xml:space="preserve">
          <source>This class is used internally by &lt;a href=&quot;drbobject&quot;&gt;&lt;code&gt;DRbObject&lt;/code&gt;&lt;/a&gt;. The user does not normally need to deal with it directly.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;drbobject&quot;&gt; &lt;code&gt;DRbObject&lt;/code&gt; 에&lt;/a&gt; 의해 내부적으로 사용됩니다 . 사용자는 일반적으로 직접 처리 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3a20ec9e17a310a84ec88346ec045eaca5bfdfcd" translate="yes" xml:space="preserve">
          <source>This class maintains a pool of connections, to reduce the overhead of starting and closing down connections for each method call.</source>
          <target state="translated">이 클래스는 연결 풀을 유지 관리하여 각 메소드 호출에 대한 연결 시작 및 종료의 오버 헤드를 줄입니다.</target>
        </trans-unit>
        <trans-unit id="450c577131c16c1ac49854621a2b101b86081946" translate="yes" xml:space="preserve">
          <source>This class provides a complete interface to &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; files and data. It offers tools to enable you to read and write to and from Strings or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects, as needed.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 파일 및 데이터에 대한 완전한 인터페이스를 제공합니다 . 필요에 따라 문자열 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체 에서 읽고 쓸 수있는 도구를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="50f4af4ecc840d0a1dd4589a601f64610600d0d5" translate="yes" xml:space="preserve">
          <source>This class provides the base to build source plugins All the method here are required to build a source plugin (except `uri_hash`, `gem_install_dir`; they are helpers).</source>
          <target state="translated">이 클래스는 소스 플러그인을 빌드하기위한 기반을 제공합니다. 여기에있는 모든 메소드는 소스 플러그인을 빌드하는 데 필요합니다 (`uri_hash`,`gem_install_dir` 제외; 도우미).</target>
        </trans-unit>
        <trans-unit id="b168e85f77a559ebce8a04edb6bf5f068670c771" translate="yes" xml:space="preserve">
          <source>This class represents a message which exists on the POP server. Instances of this class are created by the &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class; they should not be directly created by the user.</source>
          <target state="translated">이 클래스는 POP 서버에 존재하는 메시지를 나타냅니다. 이 클래스의 인스턴스는 &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 클래스에 의해 작성됩니다 . 사용자가 직접 작성해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a66ab4e78b5eb05645d2fe6421606492fc523898" translate="yes" xml:space="preserve">
          <source>This class represents a response received by the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server. Instances of this class are created by the &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class; they should not be directly created by the user. For more information on &lt;a href=&quot;../smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; responses, view &lt;a href=&quot;http://tools.ietf.org/html/rfc5321#section-4.2&quot;&gt;Section 4.2 of RFC 5321&lt;/a&gt;</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;../smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 서버가 수신 한 응답을 나타냅니다 . 이 클래스의 인스턴스는 &lt;a href=&quot;../smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 클래스에 의해 작성됩니다 . 사용자가 직접 작성해서는 안됩니다. &lt;a href=&quot;../smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 응답 에 대한 자세한 내용 &lt;a href=&quot;http://tools.ietf.org/html/rfc5321#section-4.2&quot;&gt;은 RFC 5321의 4.2 단원을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3317385fd2f20eb77ebb8938b3003f4033ff2375" translate="yes" xml:space="preserve">
          <source>This class represents queues of specified size capacity. The push operation may be blocked if the capacity is full.</source>
          <target state="translated">이 클래스는 지정된 크기 용량의 큐를 나타냅니다. 용량이 가득 찬 경우 푸시 작업이 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7ccb47c1fe305a11c039a17bef83f6064901d86" translate="yes" xml:space="preserve">
          <source>This class watches for termination of multiple threads. Basic functionality (wait until specified threads have terminated) can be accessed through the class method &lt;a href=&quot;threadswait#method-c-all_waits&quot;&gt;&lt;code&gt;ThreadsWait::all_waits&lt;/code&gt;&lt;/a&gt;. Finer control can be gained using instance methods.</source>
          <target state="translated">이 클래스는 여러 스레드의 종료를 감시합니다. 클래스 기능 &lt;a href=&quot;threadswait#method-c-all_waits&quot;&gt; &lt;code&gt;ThreadsWait::all_waits&lt;/code&gt; &lt;/a&gt; 통해 기본 기능 (지정된 스레드가 종료 될 때까지 대기)에 액세스 할 수 있습니다 . 인스턴스 메소드를 사용하면보다 세밀한 제어가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="b9cf278cb590d5c1b83d71d6ef6bc98f6e845be4" translate="yes" xml:space="preserve">
          <source>This class will be redesigned because of difference of implementations; the structure of its path. draft-hoffman-ftp-uri-04 is a draft but it is a good summary about the de facto spec. &lt;a href=&quot;http://tools.ietf.org/html/draft-hoffman-ftp-uri-04&quot;&gt;tools.ietf.org/html/draft-hoffman-ftp-uri-04&lt;/a&gt;</source>
          <target state="translated">이 클래스는 구현 차이로 인해 다시 디자인됩니다. 경로의 구조. draft-hoffman-ftp-uri-04는 초안이지만 사실상의 사양에 대한 좋은 요약입니다. &lt;a href=&quot;http://tools.ietf.org/html/draft-hoffman-ftp-uri-04&quot;&gt;tools.ietf.org/html/draft-hoffman-ftp-uri-04&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="559c9a7ead635211b1a18cddd0c561bab1b27348" translate="yes" xml:space="preserve">
          <source>This class wraps together the response header and the response body (the entity requested).</source>
          <target state="translated">이 클래스는 응답 헤더와 응답 본문 (요청 된 엔티티)을 함께 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="6fcd33437e37578b72cc54ebb6c4521878cba296" translate="yes" xml:space="preserve">
          <source>This client's &lt;a href=&quot;../../../../openssl/x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 클라이언트의 &lt;a href=&quot;../../../../openssl/x509/certificate&quot;&gt; &lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa1877f6085be949daf7bfc8e829f5faf34d226f" translate="yes" xml:space="preserve">
          <source>This client's SSL private key</source>
          <target state="translated">이 클라이언트의 SSL 개인 키</target>
        </trans-unit>
        <trans-unit id="79523caa500181939d8ffc0d58395d3d95462b44" translate="yes" xml:space="preserve">
          <source>This client's certificate</source>
          <target state="translated">이 고객의 인증서</target>
        </trans-unit>
        <trans-unit id="978d616765db94b6d6ca5309e2cef1be73036723" translate="yes" xml:space="preserve">
          <source>This code was copied from Rake, available under MIT-LICENSE Copyright &amp;copy; 2003, 2004 Jim Weirich</source>
          <target state="translated">이 코드는 MIT-LICENSE에 따라 Rake에서 복사되었습니다. Copyright &amp;copy; 2003, 2004 Jim Weirich</target>
        </trans-unit>
        <trans-unit id="34814d96c8f5e3c71fa7bca0ba4ddf5d80849204" translate="yes" xml:space="preserve">
          <source>This coercion mechanism is used by Ruby to handle mixed-type numeric operations: it is intended to find a compatible common type between the two operands of the operator.</source>
          <target state="translated">이 강제 메커니즘은 Ruby에서 혼합 유형 숫자 연산을 처리하는 데 사용됩니다. 이는 연산자의 두 피연산자간에 호환 가능한 공통 유형을 찾기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="134b217ee1b0ddd4d2cb94f06c7afd20aa66966b" translate="yes" xml:space="preserve">
          <source>This constructor is used internally by &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt;. The user does not generally need to call it directly.</source>
          <target state="translated">이 생성자는 &lt;a href=&quot;../session&quot;&gt; &lt;code&gt;CGI::Session&lt;/code&gt; &lt;/a&gt; 내부에서 사용됩니다 . 사용자는 일반적으로 직접 호출 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e225bfec949a2c5b64601c05229d552fff3b97bc" translate="yes" xml:space="preserve">
          <source>This constructor will wrap either a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object passed in &lt;code&gt;data&lt;/code&gt; for reading and/or writing. In addition to the &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; instance methods, several &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; methods are delegated. (See &lt;a href=&quot;csv#method-c-open&quot;&gt;&lt;code&gt;CSV::open()&lt;/code&gt;&lt;/a&gt; for a complete list.) If you pass a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;data&lt;/code&gt;, you can later retrieve it (after writing to it, for example) with CSV.string().</source>
          <target state="translated">이 생성자는 읽기 및 / 또는 쓰기를 위해 &lt;code&gt;data&lt;/code&gt; 에 전달 된 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체를 래핑합니다 . &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 인스턴스 메소드 외에도 여러 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 메소드가 위임됩니다. ( 전체 목록 은 &lt;a href=&quot;csv#method-c-open&quot;&gt; &lt;code&gt;CSV::open()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .) &lt;code&gt;data&lt;/code&gt; for &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 전달하면 나중에 CSV.string ()을 사용 하여 문자열 을 검색 한 후 (예 : 쓴 후) 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b042f402affa2c629af0f76e40a094b859fc9a9c" translate="yes" xml:space="preserve">
          <source>This converter proc, &lt;code&gt;strip_converter&lt;/code&gt;, accepts a value &lt;code&gt;field&lt;/code&gt; and returns &lt;code&gt;field.strip&lt;/code&gt;:</source>
          <target state="translated">이 변환기 proc 인 &lt;code&gt;strip_converter&lt;/code&gt; 는 값 &lt;code&gt;field&lt;/code&gt; 받아들이고 &lt;code&gt;field.strip&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="03a7d65384e08cf2fa212cdc2e34e739996aaacc" translate="yes" xml:space="preserve">
          <source>This creates a &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; that outputs to the standard output stream, with a level of &lt;code&gt;WARN&lt;/code&gt;:</source>
          <target state="translated">이렇게하면 &lt;code&gt;WARN&lt;/code&gt; 레벨로 표준 출력 스트림으로 출력 되는 &lt;a href=&quot;logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; 가 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="d91d00aa8d13aea3a268bb60ad250f67e24bdf0f" translate="yes" xml:space="preserve">
          <source>This decodes + to SP.</source>
          <target state="translated">+를 SP로 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="5efb152ca1e40b50522b5524dd855cf2e377131e" translate="yes" xml:space="preserve">
          <source>This decodes application/x-www-form-urlencoded data and returns an array of key-value arrays.</source>
          <target state="translated">이것은 application / x-www-form-urlencoded 데이터를 해독하고 키-값 배열의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="31b3538ea8670d61489da00a4e025b6023710f8f" translate="yes" xml:space="preserve">
          <source>This default value is returned for &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hash#method-i-values_at&quot;&gt;&lt;code&gt;values_at&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;hash#method-i-dig&quot;&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/a&gt; when a key is not found:</source>
          <target state="translated">이 기본값은 키를 찾을 수 없을 때 &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;hash#method-i-values_at&quot;&gt; &lt;code&gt;values_at&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;hash#method-i-dig&quot;&gt; &lt;code&gt;dig&lt;/code&gt; 에&lt;/a&gt; 대해 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="7216492025fcbb29fcff3f3eb0b9129d10f9dc43" translate="yes" xml:space="preserve">
          <source>This defaults to &amp;ldquo;n&amp;rdquo;, and should be &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본값은 &quot;n&quot;이며 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="923ff3e5bc778b056a076d3e00d41879eda96792" translate="yes" xml:space="preserve">
          <source>This defaults to '', and should accept the &amp;lt;&amp;lt; method</source>
          <target state="translated">기본값은 ''이며 &amp;lt;&amp;lt; 메소드를 허용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fa36e1861a88c9dbbfb2c51daab242ad7a3a0472" translate="yes" xml:space="preserve">
          <source>This defaults to 79, and should be a Fixnum</source>
          <target state="translated">기본값은 79이며 Fixnum이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e4233acbca604356e9f12c570a1e350c05381671" translate="yes" xml:space="preserve">
          <source>This defaults to 79, and should be an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본값은 79이며 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a88782bf52227f9c84c1b860c36ad58466a19855" translate="yes" xml:space="preserve">
          <source>This directive can be used multiple times in the same file:</source>
          <target state="translated">이 지시문은 동일한 파일에서 여러 번 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a08d90254863b64dfc4c781e3798ce0671631e2" translate="yes" xml:space="preserve">
          <source>This directive can turn on detection of bad indentation for statements that follow it:</source>
          <target state="translated">이 지시문은 뒤에 오는 명령문에 대해 잘못된 들여 쓰기 감지를 켤 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5d113d692ef56f6c81542f751d44b0d28346d13" translate="yes" xml:space="preserve">
          <source>This document aims to discuss many of these pitfalls and provide more secure alternatives where applicable.</source>
          <target state="translated">이 문서는 이러한 많은 함정에 대해 논의하고 해당되는 경우보다 안전한 대안을 제공하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="7fedfba0e7f4c116aa04e7f3a5222640136104ce" translate="yes" xml:space="preserve">
          <source>This document calls a serialized set of objects a stream. The Ruby implementation can load a set of objects from a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; or an object that implements a &lt;code&gt;getc&lt;/code&gt; method.</source>
          <target state="translated">이 문서는 직렬화 된 객체 집합을 스트림이라고합니다. Ruby 구현은 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;getc&lt;/code&gt; 메소드 를 구현하는 오브젝트에서 오브젝트 세트를로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="787fccc3acadc84ed59c55bd848e5749bc1c7de7" translate="yes" xml:space="preserve">
          <source>This document will omit the optional &lt;code&gt;then&lt;/code&gt; for all expressions as that is the most common usage of &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">이 문서는 &lt;code&gt;if&lt;/code&gt; 의 가장 일반적인 사용법이므로 모든 표현식에 대해 선택 사항 &lt;code&gt;then&lt;/code&gt; 생략합니다 .</target>
        </trans-unit>
        <trans-unit id="8de39576ade91d56c09b2529a8b80d5be4bc6f52" translate="yes" xml:space="preserve">
          <source>This ensures that only one instance of Klass can be created.</source>
          <target state="translated">이를 통해 하나의 Klass 인스턴스 만 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c1a8521e07c22321688dab6fb035472fbe64c9f" translate="yes" xml:space="preserve">
          <source>This error is raised if HTTP authentication is provided, but incorrect.</source>
          <target state="translated">HTTP 인증이 제공되었지만 올바르지 않은 경우이 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bbca9b2fbd2123f49b6f3c9f7801902268031fcf" translate="yes" xml:space="preserve">
          <source>This error is raised if HTTP authentication is required, but not provided.</source>
          <target state="translated">HTTP 인증이 필요하지만 제공되지 않은 경우이 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c384065451e45d5e31fe798d6d6e8cf678277de" translate="yes" xml:space="preserve">
          <source>This error is raised if the API returns a 413 (only printed in verbose)</source>
          <target state="translated">이 오류는 API가 413 (자세한 내용 만 인쇄)을 반환하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cfa279fb646a0bbb76d5166d22cd47c09129c022" translate="yes" xml:space="preserve">
          <source>This error is raised if we should rate limit our requests to the API</source>
          <target state="translated">이 오류는 API에 대한 요청을 등급 제한해야하는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8d3a0d1c50bf19561a078848d5ad1d58d7668c0c" translate="yes" xml:space="preserve">
          <source>This error is raised when it looks like the network is down</source>
          <target state="translated">네트워크가 다운 된 것처럼 보일 때이 오류가 발생합니다</target>
        </trans-unit>
        <trans-unit id="c84ba9168a037e22379d5b25e0b2ef8c51f89a54" translate="yes" xml:space="preserve">
          <source>This example can also be written as the following, which you should use to avoid asynchronous interrupts.</source>
          <target state="translated">이 예제는 다음과 같이 작성할 수 있으며 비동기 인터럽트를 피하기 위해 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b425bb97ba8b434dae6be67319cc1560ecc40a3" translate="yes" xml:space="preserve">
          <source>This example chains methods &lt;a href=&quot;../array#method-i-append&quot;&gt;&lt;code&gt;Array#append&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../array#method-i-compact&quot;&gt;&lt;code&gt;Array#compact&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../array#method-i-append&quot;&gt; &lt;code&gt;Array#append&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../array#method-i-compact&quot;&gt; &lt;code&gt;Array#compact&lt;/code&gt; &lt;/a&gt; 메소드를 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="8f520017ef5142121514a9f469ff377a992941e9" translate="yes" xml:space="preserve">
          <source>This example creates a 2048 bit RSA keypair and writes it to the current directory.</source>
          <target state="translated">이 예에서는 2048 비트 RSA 키 쌍을 만들어 현재 디렉토리에 씁니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
