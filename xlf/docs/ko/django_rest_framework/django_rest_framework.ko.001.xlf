<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="django_rest_framework">
    <body>
      <group id="django_rest_framework">
        <trans-unit id="5c4159b1674c9d9eee90edebbbd69a30bf4a40af" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;That's why I always prefer extensions. Neither choice has anything to do with REST.&amp;rdquo; &amp;mdash; Roy Fielding, &lt;a href=&quot;https://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/14844&quot;&gt;REST discuss mailing list&lt;/a&gt;</source>
          <target state="translated">&amp;ldquo;그래서 항상 확장 프로그램을 선호합니다. 두 가지 선택 모두 REST와 관련이 없습니다.&amp;rdquo; &amp;mdash; Roy Fielding, &lt;a href=&quot;https://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/14844&quot;&gt;REST 메일 링리스트 토론&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0766e480338b30f50f24e44c6047a3fca95b3434" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;http://users.ece.utexas.edu/~adnan/pike.html&quot;&gt;Rob Pike&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;http://users.ece.utexas.edu/~adnan/pike.html&quot;&gt;롭 파이크&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c49e7d2524ebef3573e965373a388e2b5ea019a" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;http://www.boredomandlaziness.org/2012/05/djangos-cbvs-are-not-mistake-but.html&quot;&gt;Nick Coghlan&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;http://www.boredomandlaziness.org/2012/05/djangos-cbvs-are-not-mistake-but.html&quot;&gt;닉 코 글란&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7828ca229c3ddbaa7e1724020e02d505841bac60" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/security/Conceptual/AuthenticationAndAuthorizationGuide/Authorization/Authorization.html&quot;&gt;Apple Developer Documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://developer.apple.com/library/mac/#documentation/security/Conceptual/AuthenticationAndAuthorizationGuide/Authorization/Authorization.html&quot;&gt;Apple 개발자 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9adaafd8f5b8c04ade4e7d78b60d807b83462693" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/class-based-views/#base-vs-generic-views&quot;&gt;Django Documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/class-based-views/#base-vs-generic-views&quot;&gt;장고 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f56afb99039d8f8c6ed4c152d17fbc8eb1a5fc6b" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/forms/api/#django.forms.Form.cleaned_data&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/forms/api/#django.forms.Form.cleaned_data&quot;&gt;장고 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eaabab638cc756bb4bf30fe54f05e8e2dd399f54" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/validators/&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/ref/validators/&quot;&gt;장고 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7caa04c71f575c7371e336a200047ed4c0a95957" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/&quot;&gt;장고 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3951f059e209bceb060cff2b84367882061bdc46" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/#the-rendering-process&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/stable/template-response/#the-rendering-process&quot;&gt;장고 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78287f966b48c48df0ce1c41c917d1b33b8ae867" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/db/queries/#retrieving-specific-objects-with-filters&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/db/queries/#retrieving-specific-objects-with-filters&quot;&gt;장고 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae51f4d68a475e7137866891a35557f82335be56" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/pagination/&quot;&gt;Django documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/pagination/&quot;&gt;장고 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d96c92ae7a9587ed26a5eaa9e51387672a4ac30" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://guides.rubyonrails.org/routing.html&quot;&gt;Ruby on Rails Documentation&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://guides.rubyonrails.org/routing.html&quot;&gt;Ruby on Rails 문서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a835eb6dd385c816c3305585782cef79e04350f3" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://jacobian.org/writing/django-apps-with-buildout/#s-create-a-test-wrapper&quot;&gt;Jacob Kaplan-Moss&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://jacobian.org/writing/django-apps-with-buildout/#s-create-a-test-wrapper&quot;&gt;야곱 카플란-모스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="532a8d31af40866fdd22405cbdb27d6c8e87571e" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://reinout.vanrees.org/weblog/2011/08/24/class-based-views-usage.html&quot;&gt;Reinout van Rees&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://reinout.vanrees.org/weblog/2011/08/24/class-based-views-usage.html&quot;&gt;Reinout van Rees&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80171fca69d894ac423e778460c660d47dd1ef91" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.7&quot;&gt;RFC7231, Section 4.3.7.&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.7&quot;&gt;RFC7231, 섹션 4.3.7.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f33e7936addb1c1ce2336f44c50a4fd9820e935" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.ietf.org/rfc/rfc2324.txt&quot;&gt;RFC 2324&lt;/a&gt;, Hyper Text Coffee Pot Control Protocol</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.ietf.org/rfc/rfc2324.txt&quot;&gt;RFC 2324&lt;/a&gt; , 하이퍼 텍스트 커피 포트 제어 프로토콜</target>
        </trans-unit>
        <trans-unit id="89f30ccf065875bee8b864a2ddf8b96703a08794" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.python.org/dev/peps/pep-0020/&quot;&gt;The Zen of Python&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.python.org/dev/peps/pep-0020/&quot;&gt;파이썬의 선&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4ce7a26bf7830d5af5bd2b90c4b0c938899947a" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.slideshare.net/evolve_conference/201308-fielding-evolve/31&quot;&gt;Roy Fielding&lt;/a&gt;.</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.slideshare.net/evolve_conference/201308-fielding-evolve/31&quot;&gt;Roy Fielding&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30ca59dd5587158182745f957f9e385c289465f6" translate="yes" xml:space="preserve">
          <source>&amp;mdash; &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec12.html&quot;&gt;RFC 2616&lt;/a&gt;, Fielding et al.</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec12.html&quot;&gt;RFC 2616&lt;/a&gt; , Fielding et al.</target>
        </trans-unit>
        <trans-unit id="85543eb6a8a9ccf2a1761cf90f6594c0eace9f95" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Doug Hellmann, &lt;a href=&quot;https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/&quot;&gt;Python Exception Handling Techniques&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Doug Hellmann, &lt;a href=&quot;https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/&quot;&gt;Python 예외 처리 기술&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e678bc067abe4f213b1dc030841e907d8cc383bc" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Heroku, [JSON Schema for the Heroku Platform API][cite]</source>
          <target state="translated">&amp;mdash; Heroku, [Heroku 플랫폼 API를위한 JSON 스키마] [cite]</target>
        </trans-unit>
        <trans-unit id="fd18e50cf45c35d817540ce9a716e2774eddeaae" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Jacob Kaplan-Moss, &lt;a href=&quot;https://jacobian.org/writing/rest-worst-practices/&quot;&gt;&quot;REST worst practices&quot;&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Jacob Kaplan-Moss, &lt;a href=&quot;https://jacobian.org/writing/rest-worst-practices/&quot;&gt;&quot;REST 최악의 사례&quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9323441f5b6c06290b5a195c01e098d760b1a965" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Malcom Tredinnick, &lt;a href=&quot;https://groups.google.com/d/topic/django-developers/dxI4qVzrBY4/discussion&quot;&gt;Django developers group&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://groups.google.com/d/topic/django-developers/dxI4qVzrBY4/discussion&quot;&gt;Django 개발자 그룹&lt;/a&gt; Malcom Tredinnick</target>
        </trans-unit>
        <trans-unit id="5e2aa6f1438da2a3f2b0ae42767928f8fe87e181" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Roy Fielding, &lt;a href=&quot;http://tech.groups.yahoo.com/group/rest-discuss/message/5857&quot;&gt;REST discuss mailing list&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Roy Fielding, &lt;a href=&quot;http://tech.groups.yahoo.com/group/rest-discuss/message/5857&quot;&gt;REST 메일 링리스트 토론&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c939794625666f347c6c428ff7a465985edfa01f" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Roy Fielding, &lt;a href=&quot;https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_5&quot;&gt;Architectural Styles and the Design of Network-based Software Architectures&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; Roy Fielding, &lt;a href=&quot;https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_5&quot;&gt;건축 스타일 및 네트워크 기반 소프트웨어 아키텍처 설계&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d16bf918edf807929f5c60ce8c53a35264a62c0b" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Russell Keith-Magee, &lt;a href=&quot;https://groups.google.com/d/topic/django-users/sVFaOfQi4wY/discussion&quot;&gt;Django users group&lt;/a&gt;</source>
          <target state="translated">&amp;mdash; &lt;a href=&quot;https://groups.google.com/d/topic/django-users/sVFaOfQi4wY/discussion&quot;&gt;Django 사용자 그룹 인&lt;/a&gt; Russell Keith-Magee</target>
        </trans-unit>
        <trans-unit id="5aeff29b13faff5bc4a50504976a0d8720d5dbab" translate="yes" xml:space="preserve">
          <source>'$' Regex search.</source>
          <target state="translated">'$'정규식 검색.</target>
        </trans-unit>
        <trans-unit id="7ea81e97253331cab11ac0916c92415e36be303a" translate="yes" xml:space="preserve">
          <source>'=' Exact matches.</source>
          <target state="translated">'='정확히 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d266cf597492d21ca69553ae8293f172ebc44ebf" translate="yes" xml:space="preserve">
          <source>'@' Full-text search. (Currently only supported Django's MySQL backend.)</source>
          <target state="translated">'@'전체 텍스트 검색. (현재 Django의 MySQL 백엔드 만 지원했습니다.)</target>
        </trans-unit>
        <trans-unit id="cb7efbbf3a1848278adda45f032d9f9dfbb406d6" translate="yes" xml:space="preserve">
          <source>'^' Starts-with search.</source>
          <target state="translated">'^'검색으로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="14776d849d667ec5802f8cf3b91d240618957785" translate="yes" xml:space="preserve">
          <source>...and start up Django's development server.</source>
          <target state="translated">... 그리고 Django의 개발 서버를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="4d37ce9a652cc2f3e659d41f2c9c396cced65f35" translate="yes" xml:space="preserve">
          <source>...and the following settings.</source>
          <target state="translated">... 및 다음 설정.</target>
        </trans-unit>
        <trans-unit id="8ede7e3f6dd7dbf4ee9098dbca44ccd781fc5a3b" translate="yes" xml:space="preserve">
          <source>...or clone the project from github.</source>
          <target state="translated">... 또는 github에서 프로젝트를 복제하십시오.</target>
        </trans-unit>
        <trans-unit id="8048213b6dfc176e0c291ac80e3b7ed3af721d3b" translate="yes" xml:space="preserve">
          <source>...then we restore those native datatypes into a dictionary of validated data.</source>
          <target state="translated">... 그러면 원시 데이터 유형을 검증 된 데이터 사전으로 복원합니다.</target>
        </trans-unit>
        <trans-unit id="4375591ea9c5069125bd6bd5b9215a617402065a" translate="yes" xml:space="preserve">
          <source>...then we restore those native datatypes into a fully populated object instance.</source>
          <target state="translated">... 그러면 원시 데이터 유형을 완전히 채워진 객체 인스턴스로 복원합니다.</target>
        </trans-unit>
        <trans-unit id="1c37a49b0e1fd9af7d086b8b357c06a99cb9f599" translate="yes" xml:space="preserve">
          <source>.accepted_media_type</source>
          <target state="translated">.accepted_media_type</target>
        </trans-unit>
        <trans-unit id="97fe9c243f69f65d68cafed9d4f135f7bbe7b461" translate="yes" xml:space="preserve">
          <source>.accepted_renderer</source>
          <target state="translated">.accepted_renderer</target>
        </trans-unit>
        <trans-unit id="3a3567f073e974408aa44b573c85e30a0160d315" translate="yes" xml:space="preserve">
          <source>.auth</source>
          <target state="translated">.auth</target>
        </trans-unit>
        <trans-unit id="128aeaaf37f880d6d7f78586c230f5ae2d17d9ce" translate="yes" xml:space="preserve">
          <source>.authentication_classes</source>
          <target state="translated">.authentication_classes</target>
        </trans-unit>
        <trans-unit id="f5db330eed7ec20487392ef478cc87bf48014772" translate="yes" xml:space="preserve">
          <source>.authenticators</source>
          <target state="translated">.authenticators</target>
        </trans-unit>
        <trans-unit id="abf90cda96d455adeddb630e6d262680dc55ee32" translate="yes" xml:space="preserve">
          <source>.build_nested_field(self, field_name, relation_info, nested_depth)</source>
          <target state="translated">.build_nested_field (자체, field_name, relation_info, nested_depth)</target>
        </trans-unit>
        <trans-unit id="d2d09a41d7dc443654d8fd173df43501280aeb2d" translate="yes" xml:space="preserve">
          <source>.build_property_field(self, field_name, model_class)</source>
          <target state="translated">.build_property_field (자체, field_name, model_class)</target>
        </trans-unit>
        <trans-unit id="df857b1e77e76ebc168dd068d3475750e033c0d4" translate="yes" xml:space="preserve">
          <source>.build_relational_field(self, field_name, relation_info)</source>
          <target state="translated">.build_relational_field (자체, field_name, relation_info)</target>
        </trans-unit>
        <trans-unit id="d8b45ab35ef80f73a971c19b7de46c3815aa8144" translate="yes" xml:space="preserve">
          <source>.build_standard_field(self, field_name, model_field)</source>
          <target state="translated">.build_standard_field (자체, field_name, model_field)</target>
        </trans-unit>
        <trans-unit id="1b7e80248f4f75b2c8b58c7aea8cd60cc726b11c" translate="yes" xml:space="preserve">
          <source>.build_unknown_field(self, field_name, model_class)</source>
          <target state="translated">.build_unknown_field (자체, field_name, model_class)</target>
        </trans-unit>
        <trans-unit id="d31e7b8bc09fb5b6102e81725511f2e9bedba0c0" translate="yes" xml:space="preserve">
          <source>.build_url_field(self, field_name, model_class)</source>
          <target state="translated">.build_url_field (자체, field_name, model_class)</target>
        </trans-unit>
        <trans-unit id="aa69604f864c0dcf2eaf76444b2538d64275aaeb" translate="yes" xml:space="preserve">
          <source>.check_permissions(self, request)</source>
          <target state="translated">.check_permissions (자체, 요청)</target>
        </trans-unit>
        <trans-unit id="036e6719e99369fa4d19a04a37a05acf53466e00" translate="yes" xml:space="preserve">
          <source>.check_throttles(self, request)</source>
          <target state="translated">.check_throttles (자체, 요청)</target>
        </trans-unit>
        <trans-unit id="42004dde1b5b3c487ffeb93d5a0cdfa6dce73208" translate="yes" xml:space="preserve">
          <source>.content</source>
          <target state="translated">.content</target>
        </trans-unit>
        <trans-unit id="0d599c2f32e131186e373e3cfd21335a6570ce8d" translate="yes" xml:space="preserve">
          <source>.content_negotiation_class</source>
          <target state="translated">.content_negotiation_class</target>
        </trans-unit>
        <trans-unit id="0d327fc7d5731f04b454bf4d5e968fafd3652d33" translate="yes" xml:space="preserve">
          <source>.content_type</source>
          <target state="translated">.content_type</target>
        </trans-unit>
        <trans-unit id="d7deaa4f8f1ac6cf7f78cd6f0762b9e3b8d48d51" translate="yes" xml:space="preserve">
          <source>.credentials(**kwargs)</source>
          <target state="translated">.credentials(**kwargs)</target>
        </trans-unit>
        <trans-unit id="3d995a49285741de520c4a7112a75e61c9f5ea2d" translate="yes" xml:space="preserve">
          <source>.data</source>
          <target state="translated">.data</target>
        </trans-unit>
        <trans-unit id="1faa6c3cac355e69e5afcfda094beb8b050cc37b" translate="yes" xml:space="preserve">
          <source>.finalize_response(self, request, response, *args, **kwargs)</source>
          <target state="translated">.finalize_response (자체, 요청, 응답, * args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="39225c2eb37409cb1b1723f6a7f6c438f439062f" translate="yes" xml:space="preserve">
          <source>.force_authenticate(user=None, token=None)</source>
          <target state="translated">.force_authenticate (사용자 = 없음, 토큰 = 없음)</target>
        </trans-unit>
        <trans-unit id="179b6f4e853baf85d558b73659f9e39b136509f7" translate="yes" xml:space="preserve">
          <source>.get_authenticators(self)</source>
          <target state="translated">.get_authenticators(self)</target>
        </trans-unit>
        <trans-unit id="9d691643ef984b9f0fc892084a4af20f87987fc7" translate="yes" xml:space="preserve">
          <source>.get_content_negotiator(self)</source>
          <target state="translated">.get_content_negotiator(self)</target>
        </trans-unit>
        <trans-unit id="7ebaacd67b1a4ea838eb73eeb2a6eb80c545d15a" translate="yes" xml:space="preserve">
          <source>.get_exception_handler(self)</source>
          <target state="translated">.get_exception_handler(self)</target>
        </trans-unit>
        <trans-unit id="565146c2d37e1e181a85375d3bb88b0c88546fc9" translate="yes" xml:space="preserve">
          <source>.get_parsers(self)</source>
          <target state="translated">.get_parsers(self)</target>
        </trans-unit>
        <trans-unit id="5109039216348cafd3edbeb71496c5fa26f4466d" translate="yes" xml:space="preserve">
          <source>.get_permissions(self)</source>
          <target state="translated">.get_permissions(self)</target>
        </trans-unit>
        <trans-unit id="eddf1adaf8fdd7d979dc7fed39bcdd576aa63b50" translate="yes" xml:space="preserve">
          <source>.get_renderers(self)</source>
          <target state="translated">.get_renderers(self)</target>
        </trans-unit>
        <trans-unit id="62e497b6b7f8fe938b9662ad20a58ac7a41b2ceb" translate="yes" xml:space="preserve">
          <source>.get_throttles(self)</source>
          <target state="translated">.get_throttles(self)</target>
        </trans-unit>
        <trans-unit id="93557e386a0e65568cde092c042b0fbeedd38c9c" translate="yes" xml:space="preserve">
          <source>.handle_exception(self, exc)</source>
          <target state="translated">.handle_exception (자체, exc)</target>
        </trans-unit>
        <trans-unit id="807ea0f08b64b04eca968457f7b0100c75887545" translate="yes" xml:space="preserve">
          <source>.initial(self, request, *args, **kwargs)</source>
          <target state="translated">.initial (자체, 요청, * args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="4392c6108af4c2c8eb7d18167e966072b42bd6eb" translate="yes" xml:space="preserve">
          <source>.initialize_request(self, request, *args, **kwargs)</source>
          <target state="translated">.initialize_request (자체, 요청, * args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="8d97ce046bf8d12c75260e985ea4ba7c6367cfd4" translate="yes" xml:space="preserve">
          <source>.login(**kwargs)</source>
          <target state="translated">.login(**kwargs)</target>
        </trans-unit>
        <trans-unit id="d85dd2521fce5e46b7da78b1f81e437215dcdd29" translate="yes" xml:space="preserve">
          <source>.method</source>
          <target state="translated">.method</target>
        </trans-unit>
        <trans-unit id="3d8146a23ef40a8b19eb8e6639d635e4680d27df" translate="yes" xml:space="preserve">
          <source>.parser_classes</source>
          <target state="translated">.parser_classes</target>
        </trans-unit>
        <trans-unit id="2fd0657b6591ef75af9885a91ac2e795c141c7e6" translate="yes" xml:space="preserve">
          <source>.parsers</source>
          <target state="translated">.parsers</target>
        </trans-unit>
        <trans-unit id="9de26d44a1c729d682dc4aacbd33f2b3bb0cf392" translate="yes" xml:space="preserve">
          <source>.perform_content_negotiation(self, request, force=False)</source>
          <target state="translated">.perform_content_negotiation (자체, 요청, 힘 = 거짓)</target>
        </trans-unit>
        <trans-unit id="e24ca76d9baa5c86c2dba09116d801f60e875d37" translate="yes" xml:space="preserve">
          <source>.permission_classes</source>
          <target state="translated">.permission_classes</target>
        </trans-unit>
        <trans-unit id="cdb75ebca4b959a4a4dd30a6c2ff629d23feb4f3" translate="yes" xml:space="preserve">
          <source>.query_params</source>
          <target state="translated">.query_params</target>
        </trans-unit>
        <trans-unit id="1a388604a7dd5ecab37a223d2c0246def5b8740b" translate="yes" xml:space="preserve">
          <source>.render()</source>
          <target state="translated">.render()</target>
        </trans-unit>
        <trans-unit id="344237570f883a6deede21508320d6698ca8c698" translate="yes" xml:space="preserve">
          <source>.renderer_classes</source>
          <target state="translated">.renderer_classes</target>
        </trans-unit>
        <trans-unit id="57c75b389f684c1803ed6da84532bef61ff74aef" translate="yes" xml:space="preserve">
          <source>.renderer_context</source>
          <target state="translated">.renderer_context</target>
        </trans-unit>
        <trans-unit id="48cd05ef1c00d8f2b8cb6ef9a9e77a846f7ef5bc" translate="yes" xml:space="preserve">
          <source>.serializer_field_mapping</source>
          <target state="translated">.serializer_field_mapping</target>
        </trans-unit>
        <trans-unit id="65f342bd7f8d857080829a6a6329d60ff7efe9e1" translate="yes" xml:space="preserve">
          <source>.serializer_related_field</source>
          <target state="translated">.serializer_related_field</target>
        </trans-unit>
        <trans-unit id="beccb38161393ff1634d1b5b583c21e810873b04" translate="yes" xml:space="preserve">
          <source>.status_code</source>
          <target state="translated">.status_code</target>
        </trans-unit>
        <trans-unit id="78e5faf5b7d709206f06e8f3760ae2c054b0f777" translate="yes" xml:space="preserve">
          <source>.stream</source>
          <target state="translated">.stream</target>
        </trans-unit>
        <trans-unit id="32565a72888bef7457ae1cfb36b92675b9148f76" translate="yes" xml:space="preserve">
          <source>.template_name</source>
          <target state="translated">.template_name</target>
        </trans-unit>
        <trans-unit id="9859e7926bc401ee79fc37d905e533ad368e976e" translate="yes" xml:space="preserve">
          <source>.throttle_classes</source>
          <target state="translated">.throttle_classes</target>
        </trans-unit>
        <trans-unit id="a54ad78c954a807a0683caabad8b1faf035d940e" translate="yes" xml:space="preserve">
          <source>.to_internal_value(self, data)</source>
          <target state="translated">.to_internal_value (자체, 데이터)</target>
        </trans-unit>
        <trans-unit id="8e78e13b92ba39c5949a0d8aa75c31f9d3280e7b" translate="yes" xml:space="preserve">
          <source>.to_representation(self, obj)</source>
          <target state="translated">.to_representation (자체, obj)</target>
        </trans-unit>
        <trans-unit id="9e4b0760820632accdb63d7eb0a1d5a43f4fba44" translate="yes" xml:space="preserve">
          <source>.user</source>
          <target state="translated">.user</target>
        </trans-unit>
        <trans-unit id="e6ef7307a2fd72eff84c626a8699010841f0e61d" translate="yes" xml:space="preserve">
          <source>/users</source>
          <target state="translated">/users</target>
        </trans-unit>
        <trans-unit id="87c40db479b83fd05e0c6d9b98d2dfff4a48831d" translate="yes" xml:space="preserve">
          <source>/users/{username}</source>
          <target state="translated">/users/{username}</target>
        </trans-unit>
        <trans-unit id="2c7237f4fb5e8441c9f520de1c24e38c58995337" translate="yes" xml:space="preserve">
          <source>/users/{username}/group_names</source>
          <target state="translated">/users/{username}/group_names</target>
        </trans-unit>
        <trans-unit id="5c7cc6fc88622a2ab848bef9fe4d2e336ee951c2" translate="yes" xml:space="preserve">
          <source>0: Quickstart</source>
          <target state="translated">0 : 빠른 시작</target>
        </trans-unit>
        <trans-unit id="6e5b7bd4ce5aec6d7611141dc197c2ba895823a6" translate="yes" xml:space="preserve">
          <source>1: Serialization</source>
          <target state="translated">1 : 직렬화</target>
        </trans-unit>
        <trans-unit id="42505e0ff7c309432bda44dba798bc984ad1c64b" translate="yes" xml:space="preserve">
          <source>2: Requests and Responses</source>
          <target state="translated">2 : 요청 및 응답</target>
        </trans-unit>
        <trans-unit id="62e1a1b35fbd2ac420c5c4afdbd4366730078336" translate="yes" xml:space="preserve">
          <source>3: Class-based Views</source>
          <target state="translated">3 : 클래스 기반 뷰</target>
        </trans-unit>
        <trans-unit id="a8a90138953004e7b448456550359453116b0d6d" translate="yes" xml:space="preserve">
          <source>418 I'm a teapot - Any attempt to brew coffee with a teapot should result in the error code &quot;418 I'm a teapot&quot;. The resulting entity body MAY be short and stout.</source>
          <target state="translated">418 나는 주전자입니다-주전자로 커피를 추출하려고하면 &quot;418 나는 주전자입니다&quot;라는 오류 코드가 나타납니다. 결과 엔터티 본문은 짧고 튼튼 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d72cbfdf2bd851d320c164e98d1a710831c26024" translate="yes" xml:space="preserve">
          <source>4: Authentication &amp;amp; Permissions</source>
          <target state="translated">4 : 인증 및 권한</target>
        </trans-unit>
        <trans-unit id="f0832710e1c2b91fa595dc41b1fb6731544139d3" translate="yes" xml:space="preserve">
          <source>5: Relationships &amp;amp; Hyperlinked APIs</source>
          <target state="translated">5 : 관계 및 하이퍼 링크 API</target>
        </trans-unit>
        <trans-unit id="2ea6bea66432da4d40925cda2e551700bcf0bd43" translate="yes" xml:space="preserve">
          <source>6: ViewSets &amp;amp; Routers</source>
          <target state="translated">6 : ViewSets 및 라우터</target>
        </trans-unit>
        <trans-unit id="6b94faca717232b946ccdf4d5b22c749255df620" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api-guide/authentication/index&quot;&gt;Authentication policies&lt;/a&gt; including packages for &lt;a href=&quot;api-guide/authentication/index#django-rest-framework-oauth&quot;&gt;OAuth1a&lt;/a&gt; and &lt;a href=&quot;api-guide/authentication/index#django-oauth-toolkit&quot;&gt;OAuth2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;api-guide/authentication/index&quot;&gt;인증 정책&lt;/a&gt; 에 대한 패키지를 포함 &lt;a href=&quot;api-guide/authentication/index#django-rest-framework-oauth&quot;&gt;OAuth1a&lt;/a&gt; 및 &lt;a href=&quot;api-guide/authentication/index#django-oauth-toolkit&quot;&gt;OAuth2를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="255e2e716b341f5916eddf565ca8d83be2bb87ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api-guide/serializers/index&quot;&gt;Serialization&lt;/a&gt; that supports both &lt;a href=&quot;api-guide/serializers#modelserializer&quot;&gt;ORM&lt;/a&gt; and &lt;a href=&quot;api-guide/serializers#serializers&quot;&gt;non-ORM&lt;/a&gt; data sources.</source>
          <target state="translated">&lt;a href=&quot;api-guide/serializers/index&quot;&gt;&lt;/a&gt;&lt;a href=&quot;api-guide/serializers#modelserializer&quot;&gt;ORM&lt;/a&gt; 및 &lt;a href=&quot;api-guide/serializers#serializers&quot;&gt;비 ORM&lt;/a&gt; 데이터 소스를 모두 지원하는 직렬화</target>
        </trans-unit>
        <trans-unit id="b2c1ac4d52fa1805375e066e7f7ba98a99d87882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://bitbucket.org/levit_scs/drf_base64&quot;&gt;DRF-Base64&lt;/a&gt; provides a set of field and model serializers that handles the upload of base64-encoded files.</source>
          <target state="translated">&lt;a href=&quot;https://bitbucket.org/levit_scs/drf_base64&quot;&gt;DRF-Base64&lt;/a&gt; 는 base64로 인코딩 된 파일의 업로드를 처리하는 일련의 필드 및 모델 시리얼 라이저를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e71cee55c58843704ed4d47922a14d16f9a70f08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://djangorestframework-queryfields.readthedocs.io/&quot;&gt;djangorestframework-queryfields&lt;/a&gt; allows API clients to specify which fields will be sent in the response via inclusion/exclusion query parameters.</source>
          <target state="translated">&lt;a href=&quot;https://djangorestframework-queryfields.readthedocs.io/&quot;&gt;djangorestframework-queryfields를&lt;/a&gt; 사용하면 API 클라이언트가 포함 / 제외 쿼리 매개 변수를 통해 응답에 전송 될 필드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b2bb46b873fe6a88591abc60c2ad9deddb64ff4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/James1345/django-rest-knox&quot;&gt;Django-rest-knox&lt;/a&gt; library provides models and views to handle token based authentication in a more secure and extensible way than the built-in TokenAuthentication scheme - with Single Page Applications and Mobile clients in mind. It provides per-client tokens, and views to generate them when provided some other authentication (usually basic authentication), to delete the token (providing a server enforced logout) and to delete all tokens (logs out all clients that a user is logged into).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/James1345/django-rest-knox&quot;&gt;Django-rest-knox&lt;/a&gt; 라이브러리는 단일 페이지 응용 프로그램 및 모바일 클라이언트를 염두에두고 토큰 기반 인증을 기본 제공 토큰 인증 체계보다 더 안전하고 확장 가능한 방식으로 처리 할 수있는 모델과 뷰를 제공합니다. 클라이언트 별 토큰 및 다른 인증 (보통 기본 인증)이 제공 될 때 생성하고 토큰을 삭제 (서버 강제 로그 아웃 제공)하고 모든 토큰을 삭제 (사용자가 로그인 한 모든 클라이언트를 로그 아웃하는보기)를 제공합니다. ).</target>
        </trans-unit>
        <trans-unit id="17f2d3ea1a71cf73c5d1bde79a6b2a9b4a7deb35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MattBroach/DjangoRestMultipleModels&quot;&gt;Django Rest Multiple Models&lt;/a&gt; provides a generic view (and mixin) for sending multiple serialized models and/or querysets via a single API request.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/MattBroach/DjangoRestMultipleModels&quot;&gt;Django Rest Multiple Models&lt;/a&gt; 는 단일 API 요청을 통해 여러 직렬화 된 모델 및 / 또는 쿼리 세트를 전송하기위한 일반보기 (및 믹스 인)를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ec866defd7ed7d43315e054bd5ec0541f9726443" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/PhilipGarnero/django-rest-framework-social-oauth2&quot;&gt;Django-rest-framework-social-oauth2&lt;/a&gt; library provides an easy way to integrate social plugins (facebook, twitter, google, etc.) to your authentication system and an easy oauth2 setup. With this library, you will be able to authenticate users based on external tokens (e.g. facebook access token), convert these tokens to &quot;in-house&quot; oauth2 tokens and use and generate oauth2 tokens to authenticate your users.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/PhilipGarnero/django-rest-framework-social-oauth2&quot;&gt;Django-rest-framework-social-oauth2&lt;/a&gt; 라이브러리는 소셜 플러그인 (페이스 북, 트위터, 구글 등)을 인증 시스템에 쉽게 통합하고 간편한 oauth2 설정을 제공합니다. 이 라이브러리를 사용하면 외부 토큰 (예 : 페이스 북 액세스 토큰)을 기반으로 사용자를 인증하고이 토큰을 &quot;사내&quot;oauth2 토큰으로 변환하고 oauth2 토큰을 사용 및 생성하여 사용자를 인증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94fc318324b033b0063e6b2005c2c8ef85183778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Tivix/django-rest-auth&quot;&gt;Django-rest-auth&lt;/a&gt; library provides a set of REST API endpoints for registration, authentication (including social media authentication), password reset, retrieve and update user details, etc. By having these API endpoints, your client apps such as AngularJS, iOS, Android, and others can communicate to your Django backend site independently via REST APIs for user management.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Tivix/django-rest-auth&quot;&gt;Django-rest-auth&lt;/a&gt; 라이브러리는 등록, 인증 (소셜 미디어 인증 포함), 비밀번호 재설정, 사용자 세부 정보 검색 및 업데이트 등을위한 REST API 엔드 포인트 세트를 제공합니다. 이러한 API 엔드 포인트를 사용하면 AngularJS, iOS, Android 등은 사용자 관리를 위해 REST API를 통해 Django 백엔드 사이트와 독립적으로 통신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72f66de6eb96d5bf80f665fb4ea13f00b4d89107" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/aaronn/django-rest-framework-passwordless&quot;&gt;drfpasswordless&lt;/a&gt; adds (Medium, Square Cash inspired) passwordless support to Django REST Framework's own TokenAuthentication scheme. Users log in and sign up with a token sent to a contact point like an email address or a mobile number.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/aaronn/django-rest-framework-passwordless&quot;&gt;drfpasswordless&lt;/a&gt; 는 Django REST Framework의 자체 토큰 인증 체계에 (중형, 제곱 현금 기반) 비밀번호없는 지원을 추가합니다. 사용자는 이메일 주소 또는 휴대폰 번호와 같은 연락처로 전송 된 토큰으로 로그인하고 가입합니다.</target>
        </trans-unit>
        <trans-unit id="6b485a77dbde5d11c1eb61960a376dba9e4766d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/django-guardian/django-guardian&quot;&gt;django-guardian&lt;/a&gt; (1.1.1+) - Object level permissions support.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/django-guardian/django-guardian&quot;&gt;django-guardian&lt;/a&gt; (1.1.1+)-객체 수준 권한 지원.</target>
        </trans-unit>
        <trans-unit id="27a74d87a00eed4c64280de6b9e8cd851b5e3e7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/drf-forms/drf-schema-adapter&quot;&gt;drf-schema-adapter&lt;/a&gt; is a set of tools that makes it easier to provide schema information to frontend frameworks and libraries. It provides a metadata mixin as well as 2 metadata classes and several adapters suitable to generate &lt;a href=&quot;https://json-schema.org/&quot;&gt;json-schema&lt;/a&gt; as well as schema information readable by various libraries.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/drf-forms/drf-schema-adapter&quot;&gt;drf-schema-adapter&lt;/a&gt; 는 프론트 엔드 프레임 워크 및 라이브러리에 스키마 정보를보다 쉽게 ​​제공 할 수있는 도구 세트입니다. 메타 데이터 믹스 인과 2 개의 메타 데이터 클래스 및 &lt;a href=&quot;https://json-schema.org/&quot;&gt;json-schema&lt;/a&gt; 및 다양한 라이브러리에서 읽을 수있는 스키마 정보 를 생성하는 데 적합한 여러 어댑터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="149e510f87b0f74179b37a0d5f1710a5f5161fdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/decorators.py&quot;&gt;decorators.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/views.py&quot;&gt;views.py&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/decorators.py&quot;&gt;decorators.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/views.py&quot;&gt;views.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b340a27e380821a4ef3a1f0b2c104386dd8e0879" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/mixins.py&quot;&gt;mixins.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/generics.py&quot;&gt;generics.py&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/mixins.py&quot;&gt;mixins.py&lt;/a&gt;&lt;a href=&quot;https://github.com/encode/django-rest-framework/tree/master/rest_framework/generics.py&quot;&gt;generics.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7e99618648dc1d79251325734ad5b391a6ee2e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/esnme/ultrajson&quot;&gt;UltraJSON&lt;/a&gt; is an optimized C JSON encoder which can give significantly faster JSON rendering. &lt;a href=&quot;https://github.com/hzy&quot;&gt;Jacob Haslehurst&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/gizmag/drf-ujson-renderer&quot;&gt;drf-ujson-renderer&lt;/a&gt; package which implements JSON rendering using the UJSON package.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/esnme/ultrajson&quot;&gt;UltraJSON&lt;/a&gt; 은 훨씬 빠른 JSON 렌더링을 제공 할 수있는 최적화 된 C JSON 인코더입니다. &lt;a href=&quot;https://github.com/hzy&quot;&gt;Jacob Haslehurst&lt;/a&gt; 는 UJSON 패키지를 사용하여 JSON 렌더링을 구현 하는 &lt;a href=&quot;https://github.com/gizmag/drf-ujson-renderer&quot;&gt;drf-ujson-renderer&lt;/a&gt; 패키지를 유지 관리합니다 .</target>
        </trans-unit>
        <trans-unit id="b07ca95ecb352612e86a9dc7a486dde8eea41de9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;MessagePack&lt;/a&gt; is a fast, efficient binary serialization format. &lt;a href=&quot;https://github.com/juanriaza&quot;&gt;Juan Riaza&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;djangorestframework-msgpack&lt;/a&gt; package which provides MessagePack renderer and parser support for REST framework.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;MessagePack&lt;/a&gt; 은 빠르고 효율적인 이진 직렬화 형식입니다. &lt;a href=&quot;https://github.com/juanriaza&quot;&gt;Juan Riaza&lt;/a&gt; 는 MessagePack 렌더러 및 REST 프레임 워크에 대한 구문 분석기 지원을 제공 하는 &lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;djangorestframework-msgpack&lt;/a&gt; 패키지를 유지 보수합니다 .</target>
        </trans-unit>
        <trans-unit id="317a373df33764aad5b93c6f892391900038b5f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/manjitkumar/drf-url-filters&quot;&gt;drf-url-filter&lt;/a&gt; is a simple Django app to apply filters on drf &lt;code&gt;ModelViewSet&lt;/code&gt;'s &lt;code&gt;Queryset&lt;/code&gt; in a clean, simple and configurable way. It also supports validations on incoming query params and their values. A beautiful python package &lt;code&gt;Voluptuous&lt;/code&gt; is being used for validations on the incoming query parameters. The best part about voluptuous is you can define your own validations as per your query params requirements.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/manjitkumar/drf-url-filters&quot;&gt;drf-url-filter&lt;/a&gt; 는 drf &lt;code&gt;ModelViewSet&lt;/code&gt; 의 &lt;code&gt;Queryset&lt;/code&gt; 에 필터를 깨끗하고 간단하며 구성 가능한 방식 으로 적용하는 간단한 Django 앱 입니다. 또한 들어오는 쿼리 매개 변수 및 해당 값에 대한 유효성 검사도 지원합니다. 들어오는 쿼리 매개 변수의 유효성 검사에 아름다운 Python 패키지 &lt;code&gt;Voluptuous&lt;/code&gt; 가 사용되고 있습니다. 융통성있는 가장 좋은 부분은 쿼리 매개 변수 요구 사항에 따라 고유 한 유효성 검사를 정의 할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c68cb521c6a40bfb2daa251e10d3bb7ffbf6e440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/miki725/django-url-filter&quot;&gt;django-url-filter&lt;/a&gt; provides a safe way to filter data via human-friendly URLs. It works very similar to DRF serializers and fields in a sense that they can be nested except they are called filtersets and filters. That provides easy way to filter related data. Also this library is generic-purpose so it can be used to filter other sources of data and not only Django &lt;code&gt;QuerySet&lt;/code&gt;s.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/miki725/django-url-filter&quot;&gt;django-url-filter&lt;/a&gt; 는 인간 친화적 인 URL을 통해 데이터를 안전하게 필터링 하는 방법을 제공합니다. 필터 세트 및 필터라고하는 것을 제외하고는 중첩 될 수 있다는 점에서 DRF 직렬 변환기 및 필드와 매우 유사하게 작동합니다. 이를 통해 관련 데이터를 쉽게 필터링 할 수 있습니다. 또한이 라이브러리는 범용이므로 Django &lt;code&gt;QuerySet&lt;/code&gt; 뿐만 아니라 다른 데이터 소스를 필터링하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3aac2aacdebc467d4f504908aff865b79ce189d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mypebble/rest-framework-latex&quot;&gt;Rest Framework Latex&lt;/a&gt; provides a renderer that outputs PDFs using Laulatex. It is maintained by &lt;a href=&quot;https://github.com/mypebble&quot;&gt;Pebble (S/F Software)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mypebble/rest-framework-latex&quot;&gt;Rest Framework Latex&lt;/a&gt; 는 Laulatex를 사용하여 PDF를 출력하는 렌더러를 제공합니다. 그것은 의해 유지된다 &lt;a href=&quot;https://github.com/mypebble&quot;&gt;페블 (S / F 소프트웨어)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3352a0c66f2b4ddbe2ccc2c1f88c162d8257aea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sunscrapers/djoser&quot;&gt;Djoser&lt;/a&gt; library provides a set of views to handle basic actions such as registration, login, logout, password reset and account activation. The package works with a custom user model and it uses token based authentication. This is a ready to use REST implementation of Django authentication system.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sunscrapers/djoser&quot;&gt;Djoser&lt;/a&gt; 라이브러리는 등록, 로그인, 로그 아웃, 비밀번호 재설정 및 계정 활성화와 같은 기본 조치를 처리하기위한보기 세트를 제공합니다. 패키지는 사용자 정의 사용자 모델과 함께 작동하며 토큰 기반 인증을 사용합니다. Django 인증 시스템의 REST 구현을 사용할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="71103d99be9b5a4b671770d8a6791d192994112f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vbabiy/djangorestframework-camel-case&quot;&gt;djangorestframework-camel-case&lt;/a&gt; provides camel case JSON renderers and parsers for REST framework. This allows serializers to use Python-style underscored field names, but be exposed in the API as Javascript-style camel case field names. It is maintained by &lt;a href=&quot;https://github.com/vbabiy&quot;&gt;Vitaly Babiy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vbabiy/djangorestframework-camel-case&quot;&gt;djangorestframework-camel-case&lt;/a&gt; 는 REST 프레임 워크를위한 낙타 케이스 JSON 렌더러 및 파서를 제공합니다. 이를 통해 직렬 변환기는 Python 스타일 밑줄 필드 이름을 사용할 수 있지만 API에는 Javascript 스타일 낙타 케이스 필드 이름으로 노출됩니다. &lt;a href=&quot;https://github.com/vbabiy&quot;&gt;Vitaly Babiy&lt;/a&gt; 가 관리합니다 .</target>
        </trans-unit>
        <trans-unit id="868be62aef0b1074f9e6d19ef584b172bae14234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/wq/django-rest-pandas&quot;&gt;Django REST Pandas&lt;/a&gt; provides a serializer and renderers that support additional data processing and output via the &lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt; DataFrame API. Django REST Pandas includes renderers for Pandas-style CSV files, Excel workbooks (both &lt;code&gt;.xls&lt;/code&gt; and &lt;code&gt;.xlsx&lt;/code&gt;), and a number of &lt;a href=&quot;https://github.com/wq/django-rest-pandas#supported-formats&quot;&gt;other formats&lt;/a&gt;. It is maintained by &lt;a href=&quot;https://github.com/sheppard&quot;&gt;S. Andrew Sheppard&lt;/a&gt; as part of the &lt;a href=&quot;https://github.com/wq&quot;&gt;wq Project&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/wq/django-rest-pandas&quot;&gt;Django REST Pandas&lt;/a&gt; 는 &lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt; DataFrame API 를 통한 추가 데이터 처리 및 출력을 지원하는 직렬 변환기 및 렌더러를 제공 합니다. Django REST Pandas에는 Pandas 스타일 CSV 파일 용 렌더러, Excel 통합 문서 ( &lt;code&gt;.xls&lt;/code&gt; 및 &lt;code&gt;.xlsx&lt;/code&gt; ) 및 &lt;a href=&quot;https://github.com/wq/django-rest-pandas#supported-formats&quot;&gt;기타 여러 형식이 포함되어 있습니다&lt;/a&gt; . 그것은 &lt;a href=&quot;https://github.com/wq&quot;&gt;wq 프로젝트의&lt;/a&gt; 일부로 &lt;a href=&quot;https://github.com/sheppard&quot;&gt;S. Andrew Sheppard에&lt;/a&gt; 의해 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a91f7062260404645ae3314d0bc409912b8ff53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-jsonp/&quot;&gt;REST framework JSONP&lt;/a&gt; provides JSONP rendering support. It was previously included directly in the REST framework package, and is now instead supported as a third-party package.</source>
          <target state="translated">&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-jsonp/&quot;&gt;REST 프레임 워크 JSONP&lt;/a&gt; 는 JSONP 렌더링 지원을 제공합니다. 이전에는 REST 프레임 워크 패키지에 직접 포함되었으며 이제 타사 패키지로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="de3181048a840108b8c123bdb179aee31f316a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-xml/&quot;&gt;REST Framework XML&lt;/a&gt; provides a simple informal XML format. It was previously included directly in the REST framework package, and is now instead supported as a third-party package.</source>
          <target state="translated">&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-xml/&quot;&gt;REST Framework XML&lt;/a&gt; 은 간단한 비공식 XML 형식을 제공합니다. 이전에는 REST 프레임 워크 패키지에 직접 포함되었으며 이제 타사 패키지로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="180f02d4e0eed5fb8d1d45a644e4d5c18387667e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-yaml/&quot;&gt;REST framework YAML&lt;/a&gt; provides &lt;a href=&quot;http://www.yaml.org/&quot;&gt;YAML&lt;/a&gt; parsing and rendering support. It was previously included directly in the REST framework package, and is now instead supported as a third-party package.</source>
          <target state="translated">&lt;a href=&quot;https://jpadilla.github.io/django-rest-framework-yaml/&quot;&gt;REST 프레임 워크 YAML&lt;/a&gt; 은 &lt;a href=&quot;http://www.yaml.org/&quot;&gt;YAML&lt;/a&gt; 구문 분석 및 렌더링 지원을 제공합니다 . 이전에는 REST 프레임 워크 패키지에 직접 포함되었으며 이제 타사 패키지로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c0ec1f2d3f433e88eb24223e27d4e58480c24fbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt; is a fast, efficient binary serialization format. &lt;a href=&quot;https://github.com/juanriaza&quot;&gt;Juan Riaza&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;djangorestframework-msgpack&lt;/a&gt; package which provides MessagePack renderer and parser support for REST framework.</source>
          <target state="translated">&lt;a href=&quot;https://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt; 은 빠르고 효율적인 이진 직렬화 형식입니다. &lt;a href=&quot;https://github.com/juanriaza&quot;&gt;Juan Riaza&lt;/a&gt; 는 MessagePack 렌더러 및 REST 프레임 워크에 대한 구문 분석기 지원을 제공 하는 &lt;a href=&quot;https://github.com/juanriaza/django-rest-framework-msgpack&quot;&gt;djangorestframework-msgpack&lt;/a&gt; 패키지를 유지 보수합니다 .</target>
        </trans-unit>
        <trans-unit id="27a8d7c987059528b10c39ea501496d448332efa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/Markdown/&quot;&gt;Markdown&lt;/a&gt; (3.0.0+) - Markdown support for the browsable API.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/Markdown/&quot;&gt;Markdown&lt;/a&gt; (3.0.0+)-탐색 가능한 API에 대한 Markdown 지원.</target>
        </trans-unit>
        <trans-unit id="1eed537987fd7651fbd2a040b4d669698d4255ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/Pygments/&quot;&gt;Pygments&lt;/a&gt; (2.4.0+) - Add syntax highlighting to Markdown processing.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/Pygments/&quot;&gt;피그먼트&lt;/a&gt; (2.4.0+)-마크 다운 처리에 구문 강조 표시를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3fd3b399443d065e00c4761f061824c8415e7974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/coreapi/&quot;&gt;coreapi&lt;/a&gt; (1.32.0+) - Schema generation support.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/coreapi/&quot;&gt;coreapi&lt;/a&gt; (1.32.0+)-스키마 생성 지원.</target>
        </trans-unit>
        <trans-unit id="b1ad19e58c832aa2dc1cc5a1aa0ccbb9e515956d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/django-filter/&quot;&gt;django-filter&lt;/a&gt; (1.0.1+) - Filtering support.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/django-filter/&quot;&gt;django-filter&lt;/a&gt; (1.0.1+)-필터링 지원.</target>
        </trans-unit>
        <trans-unit id="e5f2fb343a4527b18b508a6e40391c9cd1e93e19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.django-rest-framework.org/&quot;&gt;Extensive documentation&lt;/a&gt;, and &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/django-rest-framework&quot;&gt;great community support&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.django-rest-framework.org/&quot;&gt;광범위한 문서&lt;/a&gt; 및 &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/django-rest-framework&quot;&gt;훌륭한 커뮤니티 지원&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74b082e3ea168c488f396620e53f00187cf4be83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hex'&lt;/code&gt; - The compact hex representation of the UUID, not including hyphens: &lt;code&gt;&quot;5ce0e9a55ffa654bcee01238041fb31a&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'hex'&lt;/code&gt; &lt;code&gt;&quot;5ce0e9a55ffa654bcee01238041fb31a&quot;&lt;/code&gt; 하이픈을 포함하지 않은 UUID의 소형 16 진 표현 : &quot;5ce0e9a55ffa654bcee01238041fb31a&quot;</target>
        </trans-unit>
        <trans-unit id="629285abe94c1386672db9e3c510194f5af019df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hex_verbose'&lt;/code&gt; - The canonical hex representation, including hyphens: &lt;code&gt;&quot;5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'hex_verbose'&lt;/code&gt; - 하이픈을 포함한 표준 16 진 표현 : &lt;code&gt;&quot;5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bebdd279c0d51a6e21207a30ac7cb87fe4b50d54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'int'&lt;/code&gt; - A 128 bit integer representation of the UUID: &lt;code&gt;&quot;123456789012312313134124512351145145114&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'int'&lt;/code&gt; -UUID의 128 비트 정수 표현 : &lt;code&gt;&quot;123456789012312313134124512351145145114&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23f86b0c5441da7ba1f3eec24143d3e4cafe86ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'urn'&lt;/code&gt; - RFC 4122 URN representation of the UUID: &lt;code&gt;&quot;urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt; Changing the &lt;code&gt;format&lt;/code&gt; parameters only affects representation values. All formats are accepted by &lt;code&gt;to_internal_value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'urn'&lt;/code&gt; &lt;code&gt;&quot;urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot;&lt;/code&gt; UUID의 RFC 4122 URN 표현 : &quot;urn : uuid : 5ce0e9a5-5ffa-654b-cee0-1238041fb31a&quot; &lt;code&gt;format&lt;/code&gt; 매개 변수를 변경하면 표현 값에만 영향을줍니다. 모든 형식은 &lt;code&gt;to_internal_value&lt;/code&gt; 에 의해 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa9f1c854d330f7a69b54f7edd4da6e7d6a7f004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.create()&lt;/code&gt; and &lt;code&gt;.update()&lt;/code&gt; - Override either or both of these to support saving instances.</source>
          <target state="translated">&lt;code&gt;.create()&lt;/code&gt; 및 &lt;code&gt;.update()&lt;/code&gt; -인스턴스 저장을 지원하기 위해 이들 중 하나 또는 둘 다를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="0e4ed8ad79e4007f1efa2eb781afe6517abee088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.data&lt;/code&gt; - Returns the outgoing primitive representation.</source>
          <target state="translated">&lt;code&gt;.data&lt;/code&gt; - 발신 기본 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33fac13c0d52030d5ac6cfe10ef9ea1935697f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.detail&lt;/code&gt; - Return the textual description of the error.</source>
          <target state="translated">&lt;code&gt;.detail&lt;/code&gt; - 오류에 대한 텍스트 설명을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="02c8e5e760e07ca420619217d3b70f1438c46360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.errors&lt;/code&gt; - Returns any errors during validation.</source>
          <target state="translated">&lt;code&gt;.errors&lt;/code&gt; - 유효성 검사 중 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1c0b62c90cea710d8f358bc4f99d7e0d1971846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.get_codes()&lt;/code&gt; - Return the code identifier of the error.</source>
          <target state="translated">&lt;code&gt;.get_codes()&lt;/code&gt; -오류의 코드 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f0953cfe5696cf0e0b5a2e96cb8cc75f47ec628d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.get_full_details()&lt;/code&gt; - Return both the textual description and the code identifier.</source>
          <target state="translated">&lt;code&gt;.get_full_details()&lt;/code&gt; -텍스트 설명과 코드 식별자를 모두 반환합니다.</target>
        </trans-unit>
        <trans-unit id="85c8d4be7eeb3cc6565e01830980b6e6e43db646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.is_valid()&lt;/code&gt; - Deserializes and validates incoming data.</source>
          <target state="translated">&lt;code&gt;.is_valid()&lt;/code&gt; -들어오는 데이터를 직렬화 해제하고 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="21d78c71413151b51a1e867bc8a982e7267734db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.save()&lt;/code&gt; - Persists the validated data into an object instance.</source>
          <target state="translated">&lt;code&gt;.save()&lt;/code&gt; -유효성 검사 된 데이터를 객체 인스턴스에 유지합니다.</target>
        </trans-unit>
        <trans-unit id="72ca4f05c6bdd33ded979e26d64778242791dba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.to_internal_value()&lt;/code&gt; - Override this to support deserialization, for write operations.</source>
          <target state="translated">&lt;code&gt;.to_internal_value()&lt;/code&gt; -쓰기 작업을 위해 역 직렬화를 지원하도록이를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="4d0b758f000823fcf589aef610b562a046ed969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.to_representation()&lt;/code&gt; - Override this to support serialization, for read operations.</source>
          <target state="translated">&lt;code&gt;.to_representation()&lt;/code&gt; -읽기 조작을 위해 직렬화를 지원하도록이를 겹쳐 씁니다 .</target>
        </trans-unit>
        <trans-unit id="1031b13b7c893ea4e7be3d7397d0ea1da8ed109e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.validated_data&lt;/code&gt; - Returns the validated incoming data.</source>
          <target state="translated">&lt;code&gt;.validated_data&lt;/code&gt; - 확인 된 수신 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="69066d5107a5c7caaa5b523b843e6cb9fa568efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALLOWED_VERSIONS&lt;/code&gt;. If set, this value will restrict the set of versions that may be returned by the versioning scheme, and will raise an error if the provided version is not in this set. Note that the value used for the &lt;code&gt;DEFAULT_VERSION&lt;/code&gt; setting is always considered to be part of the &lt;code&gt;ALLOWED_VERSIONS&lt;/code&gt; set (unless it is &lt;code&gt;None&lt;/code&gt;). Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ALLOWED_VERSIONS&lt;/code&gt; . 설정된 경우이 값은 버전 관리 체계에서 리턴 할 수있는 버전 세트를 제한하며 제공된 버전이이 세트에 없으면 오류가 발생합니다. &lt;code&gt;DEFAULT_VERSION&lt;/code&gt; 설정에 사용 된 값 은 &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 항상 &lt;code&gt;ALLOWED_VERSIONS&lt;/code&gt; 세트의 일부로 간주됩니다 . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="07683160e13fe0836c1e6a831cfe1da3b9e756e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;APIView&lt;/code&gt; classes are different from regular &lt;code&gt;View&lt;/code&gt; classes in the following ways:</source>
          <target state="translated">&lt;code&gt;APIView&lt;/code&gt; 클래스는 다음과 같은 방식으로 일반 &lt;code&gt;View&lt;/code&gt; 클래스와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="732c5ee5360db49edb76348506d4a322d648bee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnonRateThrottle&lt;/code&gt; is suitable if you want to restrict the rate of requests from unknown sources.</source>
          <target state="translated">&lt;code&gt;AnonRateThrottle&lt;/code&gt; 알 수없는 소스의 요청 비율을 제한하려는 경우 AnonRateThrottle 이 적합합니다.</target>
        </trans-unit>
        <trans-unit id="952f4d7602206ed65b2a7f109695015e66ab735e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseSerializer&lt;/code&gt; class that can be used to easily support alternative serialization and deserialization styles.</source>
          <target state="translated">&lt;code&gt;BaseSerializer&lt;/code&gt; 대체 직렬화 및 역 직렬화 스타일을 쉽게 지원하는 데 사용할 수있는 BaseSerializer 클래스</target>
        </trans-unit>
        <trans-unit id="c9198770c9649ec9f9a37c3370c9a6ed2e43ba74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULT_VERSION&lt;/code&gt;. The value that should be used for &lt;code&gt;request.version&lt;/code&gt; when no versioning information is present. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DEFAULT_VERSION&lt;/code&gt; . 버전 정보가없는 경우 &lt;code&gt;request.version&lt;/code&gt; 에 사용해야하는 값입니다 . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ebcdeabac272e5c0e46a58f966f1ec2a2973a1c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE&lt;/code&gt; requests require the user to have the &lt;code&gt;delete&lt;/code&gt; permission on the model instance.</source>
          <target state="translated">&lt;code&gt;DELETE&lt;/code&gt; 요청은 사용자에게 모델 인스턴스에 대한 &lt;code&gt;delete&lt;/code&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="659e1e4476aaa44856b6854eff002861e885afca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE&lt;/code&gt; requests require the user to have the &lt;code&gt;delete&lt;/code&gt; permission on the model.</source>
          <target state="translated">&lt;code&gt;DELETE&lt;/code&gt; 요청은 사용자에게 모델에 대한 &lt;code&gt;delete&lt;/code&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="465ede37d09003a5188756add202c731969e22b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileUploadParser&lt;/code&gt; respects Django's standard &lt;code&gt;FILE_UPLOAD_HANDLERS&lt;/code&gt; setting, and the &lt;code&gt;request.upload_handlers&lt;/code&gt; attribute. See the &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/http/file-uploads/#upload-handlers&quot;&gt;Django documentation&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;FileUploadParser&lt;/code&gt; 는 Django의 표준 &lt;code&gt;FILE_UPLOAD_HANDLERS&lt;/code&gt; 설정과 &lt;code&gt;request.upload_handlers&lt;/code&gt; 속성을 존중 합니다. 자세한 내용은 &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/http/file-uploads/#upload-handlers&quot;&gt;Django 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e494c9e9c1a7c14c07b2b9496cc8b66030fd6798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HyperlinkedRelatedField&lt;/code&gt; may be used to represent the target of the relationship using a hyperlink.</source>
          <target state="translated">&lt;code&gt;HyperlinkedRelatedField&lt;/code&gt; 관련 필드는 하이퍼 링크를 사용하여 관계의 대상을 나타내는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bf827c38e4995290f2a2f23201f67eccab60dfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; requests require the user to have the &lt;code&gt;add&lt;/code&gt; permission on the model instance.</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 요청에는 사용자에게 모델 인스턴스에 대한 &lt;code&gt;add&lt;/code&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6d4980fd6493d9cca7fa271a8d8dfd5857ce6001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; requests require the user to have the &lt;code&gt;add&lt;/code&gt; permission on the model.</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 요청에는 사용자에게 모델에 대한 &lt;code&gt;add&lt;/code&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="feab58807683cc94dbecafc4693d34aae187cd57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;PATCH&lt;/code&gt; requests require the user to have the &lt;code&gt;change&lt;/code&gt; permission on the model instance.</source>
          <target state="translated">&lt;code&gt;PUT&lt;/code&gt; 및 &lt;code&gt;PATCH&lt;/code&gt; 요청은 사용자에게 모델 인스턴스에 대한 &lt;code&gt;change&lt;/code&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="33527826f55e615d31db1f2ae6b15257f4e74aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;PATCH&lt;/code&gt; requests require the user to have the &lt;code&gt;change&lt;/code&gt; permission on the model.</source>
          <target state="translated">&lt;code&gt;PUT&lt;/code&gt; 및 &lt;code&gt;PATCH&lt;/code&gt; 요청은 사용자에게 모델에 대한 &lt;code&gt;change&lt;/code&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="0117506ff626ac57770a4d5b4ef2e516282f1edd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt; may be used to represent the target of the relationship using its primary key.</source>
          <target state="translated">&lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt; 는 기본 키를 사용하여 관계의 대상을 나타내는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5cb7b43bbcadb16f703c34cef47bfcbd7db9c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SlugRelatedField&lt;/code&gt; may be used to represent the target of the relationship using a field on the target.</source>
          <target state="translated">&lt;code&gt;SlugRelatedField&lt;/code&gt; 는 대상의 필드를 사용하여 관계의 대상을 나타내는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a0fe93102388e969390a2ad817010af1668a530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringRelatedField&lt;/code&gt; may be used to represent the target of the relationship using its &lt;code&gt;__str__&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;StringRelatedField&lt;/code&gt; 는 &lt;code&gt;__str__&lt;/code&gt; 메소드를 사용하여 관계의 대상을 나타내는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23d64e5f08e863b4b6c197a81d3725d6f2f2fe0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserRateThrottle&lt;/code&gt; is suitable if you want simple global rate restrictions per-user.</source>
          <target state="translated">&lt;code&gt;UserRateThrottle&lt;/code&gt; 은 사용자 당 간단한 전체 요금 제한을 원하는 경우에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="989ef7e65f95c2e7f3449acdf1e9fb4324246f83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION_PARAM&lt;/code&gt;. The string that should be used for any versioning parameters, such as in the media type or URL query parameters. Defaults to &lt;code&gt;'version'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VERSION_PARAM&lt;/code&gt; . 미디어 유형 또는 URL 쿼리 매개 변수와 같은 버전 관리 매개 변수에 사용해야하는 문자열입니다. 기본값은 &lt;code&gt;'version'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2c376c03897453cd91b1afd5a5fa3791d01f026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewSet&lt;/code&gt; classes are almost the same thing as &lt;code&gt;View&lt;/code&gt; classes, except that they provide operations such as &lt;code&gt;read&lt;/code&gt;, or &lt;code&gt;update&lt;/code&gt;, and not method handlers such as &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;put&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ViewSet&lt;/code&gt; 클래스는 &lt;code&gt;get&lt;/code&gt; 또는 &lt;code&gt;put&lt;/code&gt; 과 같은 메소드 핸들러가 아니라 &lt;code&gt;read&lt;/code&gt; 또는 &lt;code&gt;update&lt;/code&gt; 와 같은 오퍼레이션을 제공한다는 점을 제외하고는 &lt;code&gt;View&lt;/code&gt; 클래스 와 거의 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="b15c21c058573925930f5906cd62daeee9246369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - the name of the current action (e.g., &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - 현재 조치의 이름 (예 : &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;create&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e207977185d333a2d77554395e17ab3abe03dd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_blank&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then the empty string should be considered a valid value. If set to &lt;code&gt;False&lt;/code&gt; then the empty string is considered invalid and will raise a validation error. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allow_blank&lt;/code&gt; - &lt;code&gt;True&lt;/code&gt; 로 설정 하면 빈 문자열이 유효한 값으로 간주됩니다. &lt;code&gt;False&lt;/code&gt; 로 설정 하면 빈 문자열이 유효하지 않은 것으로 간주되어 유효성 검사 오류가 발생합니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3d0b0994b2e8a5044906d661da9c5ecf92c0c2a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_empty&lt;/code&gt; - Designates if empty dictionaries are allowed.</source>
          <target state="translated">&lt;code&gt;allow_empty&lt;/code&gt; - 빈 사전이 허용되는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f970b9ab35396b63efb9e02a2991e0df3d15cc29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_empty&lt;/code&gt; - Designates if empty lists are allowed.</source>
          <target state="translated">&lt;code&gt;allow_empty&lt;/code&gt; - 빈 목록이 허용되는지 지정합니다.</target>
        </trans-unit>
        <trans-unit id="99d7406bb259816f0a01feab7a795a4f5465a06a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_empty_file&lt;/code&gt; - Designates if empty files are allowed.</source>
          <target state="translated">&lt;code&gt;allow_empty_file&lt;/code&gt; - 빈 파일이 허용되는지 지정합니다.</target>
        </trans-unit>
        <trans-unit id="55e9b58aca6015762c474317563c2e8e38d2977e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_files&lt;/code&gt; - Specifies whether files in the specified location should be included. Default is &lt;code&gt;True&lt;/code&gt;. Either this or &lt;code&gt;allow_folders&lt;/code&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allow_files&lt;/code&gt; - 지정된 위치의 파일을 포함할지 여부를 지정합니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다. this 또는 &lt;code&gt;allow_folders&lt;/code&gt; 는 &lt;code&gt;True&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="078daa6e9d8edfe46d8bd26e919d61a52650ed9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_folders&lt;/code&gt; - Specifies whether folders in the specified location should be included. Default is &lt;code&gt;False&lt;/code&gt;. Either this or &lt;code&gt;allow_files&lt;/code&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allow_folders&lt;/code&gt; - 지정된 위치의 폴더를 포함할지 여부를 지정합니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. this 또는 &lt;code&gt;allow_files&lt;/code&gt; 는 &lt;code&gt;True&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="bc1a17d07abcd1db04d3d58c0e701c4dd6edd8b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_null&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt;, the field will accept values of &lt;code&gt;None&lt;/code&gt; or the empty string for nullable relationships. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allow_null&lt;/code&gt; - &lt;code&gt;True&lt;/code&gt; 로 설정 되면 필드는 &lt;code&gt;None&lt;/code&gt; 값 또는 널 입력 가능 관계에 대한 빈 문자열을 승인합니다 . 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8c09136da0694bbba1edaf41a2e380b0c8b0ce9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/json&lt;/code&gt;, &lt;code&gt;application/yaml&lt;/code&gt; and &lt;code&gt;text/html&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;application/json&lt;/code&gt; , &lt;code&gt;application/yaml&lt;/code&gt; 및 &lt;code&gt;text/html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c58ad34ac5d6eafba0c5ceb636e8f632f56298dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;authentication_classes&lt;/code&gt;: May be used to specify the list of authentication classes that will apply to the schema endpoint. Defaults to &lt;code&gt;settings.DEFAULT_AUTHENTICATION_CLASSES&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;authentication_classes&lt;/code&gt; : 스키마 엔드 포인트에 적용될 인증 클래스 목록을 지정하는 데 사용될 수 있습니다. 기본값은 &lt;code&gt;settings.DEFAULT_AUTHENTICATION_CLASSES&lt;/code&gt; .DEFAULT_AUTHENTICATION_CLASSES</target>
        </trans-unit>
        <trans-unit id="c374e2348c5ab98f134070f777ba85f1c474dc1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basename&lt;/code&gt; - The base to use for the URL names that are created. If unset the basename will be automatically generated based on the &lt;code&gt;queryset&lt;/code&gt; attribute of the viewset, if it has one. Note that if the viewset does not include a &lt;code&gt;queryset&lt;/code&gt; attribute then you must set &lt;code&gt;basename&lt;/code&gt; when registering the viewset.</source>
          <target state="translated">&lt;code&gt;basename&lt;/code&gt; - 작성된 URL 이름에 사용할 기본입니다. 설정하지 않으면 기본 이름이있는 경우 &lt;code&gt;queryset&lt;/code&gt; 의 queryset 속성을 기반으로 자동으로 생성됩니다 . 뷰셋에 &lt;code&gt;queryset&lt;/code&gt; 속성이 포함되어 있지 않으면 뷰셋을 등록 할 때 &lt;code&gt;basename&lt;/code&gt; 을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="865e1ebc399ba0fd9679b6f438cae5eecd12bed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;basename&lt;/code&gt; - the base to use for the URL names that are created.</source>
          <target state="translated">&lt;code&gt;basename&lt;/code&gt; - 작성된 URL 이름에 사용할 기준입니다.</target>
        </trans-unit>
        <trans-unit id="bef22515c4bd44b7593f91fe7329c5fdfa91c062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then the field will output and validate a JSON encoded string, rather than a primitive data structure. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary&lt;/code&gt; - &lt;code&gt;True&lt;/code&gt; 로 설정 하면 필드는 기본 데이터 구조가 아닌 JSON 인코딩 문자열을 출력하고 유효성을 검사합니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="77c4b3f397eccc9e3d10f98c7f28d9230170d257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child&lt;/code&gt; - A field instance that is used for validating the values in the dictionary. The default child field accepts both empty strings and null values.</source>
          <target state="translated">&lt;code&gt;child&lt;/code&gt; - 사전의 값을 검증하는 데 사용되는 필드 인스턴스입니다. 기본 자식 필드는 빈 문자열과 null 값을 모두 허용합니다.</target>
        </trans-unit>
        <trans-unit id="1107519d6377b20735b8c155edbea2f916ade8a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child&lt;/code&gt; - A field instance that should be used for validating the objects in the list. If this argument is not provided then objects in the list will not be validated.</source>
          <target state="translated">&lt;code&gt;child&lt;/code&gt; - 목록의 객체를 검증하는 데 사용해야하는 필드 인스턴스입니다. 이 인수가 제공되지 않으면 목록의 오브젝트가 유효성 검증되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c24f7a5b57bfb59065e6a43a56618cc5d16d3de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child&lt;/code&gt; - A field instance that should be used for validating the values in the dictionary. If this argument is not provided then values in the mapping will not be validated.</source>
          <target state="translated">&lt;code&gt;child&lt;/code&gt; - 사전의 값을 검증하는 데 사용해야하는 필드 인스턴스입니다. 이 인수가 제공되지 않으면 맵핑의 값이 유효성 검증되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1315321f0fdd53d937c9ec63e9d9222ea8d2d2e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;choices&lt;/code&gt; - A list of valid values, or a list of &lt;code&gt;(key, display_name)&lt;/code&gt; tuples.</source>
          <target state="translated">&lt;code&gt;choices&lt;/code&gt; - 유효한 값 목록 또는 &lt;code&gt;(key, display_name)&lt;/code&gt; 튜플 목록 .</target>
        </trans-unit>
        <trans-unit id="e747fec11d261aaa0da62fc92ee531f70f9eeb3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;coerce_to_string&lt;/code&gt; Set to &lt;code&gt;True&lt;/code&gt; if string values should be returned for the representation, or &lt;code&gt;False&lt;/code&gt; if &lt;code&gt;Decimal&lt;/code&gt; objects should be returned. Defaults to the same value as the &lt;code&gt;COERCE_DECIMAL_TO_STRING&lt;/code&gt; settings key, which will be &lt;code&gt;True&lt;/code&gt; unless overridden. If &lt;code&gt;Decimal&lt;/code&gt; objects are returned by the serializer, then the final output format will be determined by the renderer. Note that setting &lt;code&gt;localize&lt;/code&gt; will force the value to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;coerce_to_string&lt;/code&gt; 표현에 문자열 값을 리턴해야하는 경우 &lt;code&gt;True&lt;/code&gt; 로 설정하고 &lt;code&gt;Decimal&lt;/code&gt; 오브젝트를 리턴해야하는 경우 &lt;code&gt;False&lt;/code&gt; 로 설정하십시오. 기본값은 &lt;code&gt;COERCE_DECIMAL_TO_STRING&lt;/code&gt; 설정 키 와 동일한 값 이며, 재정의하지 않으면 &lt;code&gt;True&lt;/code&gt; 입니다. 경우 &lt;code&gt;Decimal&lt;/code&gt; 오브젝트가 직렬로 리턴하고 최종 출력 포맷 렌더러에 의해 결정된다. &lt;code&gt;localize&lt;/code&gt; 를 설정 하면 값이 &lt;code&gt;True&lt;/code&gt; 로 설정 됩니다 .</target>
        </trans-unit>
        <trans-unit id="0fa943a3b0156295f38375afff35ec2fac02cb79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content_type&lt;/code&gt;: The content type of the response. Typically, this will be set automatically by the renderer as determined by content negotiation, but there may be some cases where you need to specify the content type explicitly.</source>
          <target state="translated">&lt;code&gt;content_type&lt;/code&gt; : 응답의 컨텐츠 유형입니다. 일반적으로 이는 컨텐츠 협상에 따라 렌더러에서 자동으로 설정되지만 컨텐츠 유형을 명시 적으로 지정해야하는 경우도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dd1790d3920da6d1294bc80f7cbd6d8d05bdf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cursor_query_param&lt;/code&gt; = A string value indicating the name of the &quot;cursor&quot; query parameter. Defaults to &lt;code&gt;'cursor'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cursor_query_param&lt;/code&gt; = &quot;커서&quot;쿼리 매개 변수의 이름을 나타내는 문자열 값입니다. 기본값은 &lt;code&gt;'cursor'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="08b40060b1a0c8c45a5871542bd646e753e886a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;: The serialized data for the response.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; : 응답에 대한 직렬화 된 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="861f1b9bf79ba2720e5731a960206c4241c6e427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_field&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - A field name which will be used to determine date range for the uniqueness constrain. This must exist as a field on the serializer class.</source>
          <target state="translated">&lt;code&gt;date_field&lt;/code&gt; &lt;em&gt;required-&lt;/em&gt; 고유성 제한의 날짜 범위를 결정하는 데 사용되는 필드 이름입니다. 이것은 serializer 클래스에 필드로 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="36d2c5f97a91bd4ee0abfe9ce77a63ec8a252d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal_places&lt;/code&gt; The number of decimal places to store with the number.</source>
          <target state="translated">&lt;code&gt;decimal_places&lt;/code&gt; 숫자와 함께 저장할 소수 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="bdb5c0430b04f55a60a0b2925b39f0597aaa3101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_limit&lt;/code&gt; - A numeric value indicating the limit to use if one is not provided by the client in a query parameter. Defaults to the same value as the &lt;code&gt;PAGE_SIZE&lt;/code&gt; settings key.</source>
          <target state="translated">&lt;code&gt;default_limit&lt;/code&gt; - 클라이언트가 조회 매개 변수에 제공하지 않은 경우 사용할 한계를 나타내는 숫자 값. 기본값은 &lt;code&gt;PAGE_SIZE&lt;/code&gt; 설정 키 와 동일한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="a0261e4dc8cbe6ddaf0915c37b14a7aaa00d4185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_timezone&lt;/code&gt; - A &lt;code&gt;pytz.timezone&lt;/code&gt; representing the timezone. If not specified and the &lt;code&gt;USE_TZ&lt;/code&gt; setting is enabled, this defaults to the &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/i18n/timezones/#default-time-zone-and-current-time-zone&quot;&gt;current timezone&lt;/a&gt;. If &lt;code&gt;USE_TZ&lt;/code&gt; is disabled, then datetime objects will be naive.</source>
          <target state="translated">&lt;code&gt;default_timezone&lt;/code&gt; - &lt;code&gt;pytz.timezone&lt;/code&gt; 시간대를 나타내는. 지정하지 않고 &lt;code&gt;USE_TZ&lt;/code&gt; 설정이 활성화되면 기본값은 &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/i18n/timezones/#default-time-zone-and-current-time-zone&quot;&gt;현재 시간대&lt;/a&gt; 입니다. 경우 &lt;code&gt;USE_TZ&lt;/code&gt; 가 비활성화되어, 다음 날짜 객체는 순진 할 것이다.</target>
        </trans-unit>
        <trans-unit id="de547ec49c6d8c9649853452f23a2566c562e674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt; - the display description for the individual view of a viewset.</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; - 뷰 세트의 개별 뷰에 대한 표시 설명입니다.</target>
        </trans-unit>
        <trans-unit id="9d06a8cade6875729a4c4d4727c0ab146c260bf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt;: A description explicitly provided to the view in the viewset. Typically, this is set by extra viewset &lt;code&gt;action&lt;/code&gt;s, and should be used as-is.</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; : 뷰 세트에서 뷰에 명시 적으로 제공된 설명입니다. 일반적으로 이는 추가 viewset &lt;code&gt;action&lt;/code&gt; 의해 설정되며 그대로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="97af22bf9ed3eb2cbc253fa245a5c15f3c8323d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt;: Longer descriptive text.</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; : 더 긴 설명 텍스트.</target>
        </trans-unit>
        <trans-unit id="818414fb0f1492b82a473ccd9d63ce9482047c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detail&lt;/code&gt; - boolean indicating if the current action is configured for a list or detail view.</source>
          <target state="translated">&lt;code&gt;detail&lt;/code&gt; - 현재 조치가 목록 또는 세부 사항보기에 대해 구성되어 있는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="0894dec9ddb65aa3cdc6541bc39950b9897fa5e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detail&lt;/code&gt;: Boolean that differentiates an individual view in a viewset as either being a 'list' or 'detail' view.</source>
          <target state="translated">&lt;code&gt;detail&lt;/code&gt; : 뷰 세트의 개별 뷰를 '목록'또는 '세부'뷰로 구분하는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="230c5616e59009cc80b3a475c491e7a2d780eb56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;django_paginator_class&lt;/code&gt; - The Django Paginator class to use. Default is &lt;code&gt;django.core.paginator.Paginator&lt;/code&gt;, which should be fine for most use cases.</source>
          <target state="translated">&lt;code&gt;django_paginator_class&lt;/code&gt; - 사용할 Django Paginator 클래스 기본값은 &lt;code&gt;django.core.paginator.Paginator&lt;/code&gt; 이며 대부분의 경우에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="2c05a28280615fe4951dde0fc949f85cbbde101f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoder&lt;/code&gt; - Use this JSON encoder to serialize input object. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;encoder&lt;/code&gt; -이 JSON 인코더를 사용하여 입력 오브젝트를 직렬화하십시오. 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="57585d40256740c566bc80ffcd59e2805166fe18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exc&lt;/code&gt;: The exception.</source>
          <target state="translated">&lt;code&gt;exc&lt;/code&gt; : 예외입니다.</target>
        </trans-unit>
        <trans-unit id="014dc42ba49c84a32283a9718db6eb9b9eeee177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - A field name against which uniqueness in the given date range will be validated. This must exist as a field on the serializer class.</source>
          <target state="translated">&lt;code&gt;field&lt;/code&gt; &lt;em&gt;required-&lt;/em&gt; 지정된 날짜 범위에서 고유성이 검증 될 필드 이름입니다. 이것은 serializer 클래스에 필드로 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="5b9ec4508c083b65c8efc99cbea1191b3ae9a6ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fields&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - A list or tuple of field names which should make a unique set. These must exist as fields on the serializer class.</source>
          <target state="translated">&lt;code&gt;fields&lt;/code&gt; &lt;em&gt;required-&lt;/em&gt; 고유 한 세트를 만들어야하는 필드 이름의 목록 또는 튜플. 이들은 serializer 클래스에서 필드로 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="324ab14f1b451460cd53976d2342c1e95a6a9544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter_backends&lt;/code&gt; - A list of filter backend classes that should be used for filtering the queryset. Defaults to the same value as the &lt;code&gt;DEFAULT_FILTER_BACKENDS&lt;/code&gt; setting.</source>
          <target state="translated">&lt;code&gt;filter_backends&lt;/code&gt; -쿼리 세트 를 필터링하는 데 사용해야하는 필터 백엔드 클래스 목록입니다. 기본값은 &lt;code&gt;DEFAULT_FILTER_BACKENDS&lt;/code&gt; 설정 과 동일한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="22350df4c859b9654762586c22b17ac6ff667955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter_queryset(self, queryset)&lt;/code&gt; - Given a queryset, filter it with whichever filter backends are in use, returning a new queryset.</source>
          <target state="translated">&lt;code&gt;filter_queryset(self, queryset)&lt;/code&gt; - 쿼리 세트가 주어지면 사용중인 필터 백엔드로 필터링하여 새 쿼리 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="da2176248be8df2cb308fdcdf66f1982fe0dec51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - A string representing the output format. If not specified, this defaults to the same value as the &lt;code&gt;DATETIME_FORMAT&lt;/code&gt; settings key, which will be &lt;code&gt;'iso-8601'&lt;/code&gt; unless set. Setting to a format string indicates that &lt;code&gt;to_representation&lt;/code&gt; return values should be coerced to string output. Format strings are described below. Setting this value to &lt;code&gt;None&lt;/code&gt; indicates that Python &lt;code&gt;datetime&lt;/code&gt; objects should be returned by &lt;code&gt;to_representation&lt;/code&gt;. In this case the datetime encoding will be determined by the renderer.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; - 출력 형식을 나타내는 문자열 지정하지 않은 경우, 기본값은 &lt;code&gt;DATETIME_FORMAT&lt;/code&gt; 설정 키 와 동일한 값으로 설정 되며, 설정 하지 않으면 &lt;code&gt;'iso-8601'&lt;/code&gt; 입니다. 형식 문자열로 설정하면 &lt;code&gt;to_representation&lt;/code&gt; 반환 값이 문자열 출력으로 강제 변환되어야합니다. 형식 문자열은 아래에 설명되어 있습니다. 이 값을 &lt;code&gt;None&lt;/code&gt; 으로 설정하면 &lt;code&gt;to_representation&lt;/code&gt; 에서 Python &lt;code&gt;datetime&lt;/code&gt; 객체를 반환해야합니다 . 이 경우 날짜 시간 인코딩은 렌더러에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="20fb8a565839588d69bad45f578baf2fd344addb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - A string representing the output format. If not specified, this defaults to the same value as the &lt;code&gt;DATE_FORMAT&lt;/code&gt; settings key, which will be &lt;code&gt;'iso-8601'&lt;/code&gt; unless set. Setting to a format string indicates that &lt;code&gt;to_representation&lt;/code&gt; return values should be coerced to string output. Format strings are described below. Setting this value to &lt;code&gt;None&lt;/code&gt; indicates that Python &lt;code&gt;date&lt;/code&gt; objects should be returned by &lt;code&gt;to_representation&lt;/code&gt;. In this case the date encoding will be determined by the renderer.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; - 출력 형식을 나타내는 문자열 지정하지 않은 경우, 기본값은 &lt;code&gt;DATE_FORMAT&lt;/code&gt; 설정 키 와 동일한 값으로 설정 되며, 설정 하지 않으면 &lt;code&gt;'iso-8601'&lt;/code&gt; 입니다. 형식 문자열로 설정하면 &lt;code&gt;to_representation&lt;/code&gt; 반환 값이 문자열 출력으로 강제 변환되어야합니다. 형식 문자열은 아래에 설명되어 있습니다. 이 값을 &lt;code&gt;None&lt;/code&gt; 으로 설정하면 &lt;code&gt;to_representation&lt;/code&gt; 에서 Python &lt;code&gt;date&lt;/code&gt; 객체를 반환해야합니다 . 이 경우 날짜 인코딩은 렌더러에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="8a5f7c8402dcdf963fe7b26b318dd6bb708068d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - A string representing the output format. If not specified, this defaults to the same value as the &lt;code&gt;TIME_FORMAT&lt;/code&gt; settings key, which will be &lt;code&gt;'iso-8601'&lt;/code&gt; unless set. Setting to a format string indicates that &lt;code&gt;to_representation&lt;/code&gt; return values should be coerced to string output. Format strings are described below. Setting this value to &lt;code&gt;None&lt;/code&gt; indicates that Python &lt;code&gt;time&lt;/code&gt; objects should be returned by &lt;code&gt;to_representation&lt;/code&gt;. In this case the time encoding will be determined by the renderer.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; - 출력 형식을 나타내는 문자열 지정하지 않은 경우, 기본값은 &lt;code&gt;TIME_FORMAT&lt;/code&gt; 설정 키 와 동일한 값으로 설정 되며, 설정 하지 않으면 &lt;code&gt;'iso-8601'&lt;/code&gt; 입니다. 형식 문자열로 설정하면 &lt;code&gt;to_representation&lt;/code&gt; 반환 값이 문자열 출력으로 강제 변환되어야합니다. 형식 문자열은 아래에 설명되어 있습니다. 이 값을 &lt;code&gt;None&lt;/code&gt; 으로 설정하면 &lt;code&gt;to_representation&lt;/code&gt; 에서 Python &lt;code&gt;time&lt;/code&gt; 객체를 반환해야합니다 . 이 경우 시간 인코딩은 렌더러에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="96e5ad1113f938a7587700465209ca977024b7ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - If using format suffixes, hyperlinked fields will use the same format suffix for the target unless overridden by using the &lt;code&gt;format&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; - 사용하여 덮어 쓰지 않는 형식 접미사를 사용하는 경우, 하이퍼 링크 필드는 대상에 대해 동일한 형식 접미사를 사용하는 &lt;code&gt;format&lt;/code&gt; 인수를.</target>
        </trans-unit>
        <trans-unit id="15c803216b1f9427d27fc2d912d0d1d9c371ce3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt;: Determines the representation format of the uuid value</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; : UUID 값의 표현 형식을 결정합니다</target>
        </trans-unit>
        <trans-unit id="009b924db98f7be765d6800914df35ecdb752de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generator_class&lt;/code&gt;: May be used to specify a &lt;code&gt;SchemaGenerator&lt;/code&gt; subclass to be passed to the &lt;code&gt;SchemaView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;generator_class&lt;/code&gt; : &lt;code&gt;SchemaView&lt;/code&gt; 에 전달할 &lt;code&gt;SchemaGenerator&lt;/code&gt; 서브 클래스를 지정하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="70fffb956b1a337bd6a6ed8a7a74dbbf241d5c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_paginated_response(self, data)&lt;/code&gt; - Returns a paginated style &lt;code&gt;Response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;get_paginated_response(self, data)&lt;/code&gt; -페이지 매김 스타일 &lt;code&gt;Response&lt;/code&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1449fe0c65ab6608de22123ae5b8ceab14cc630d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_serializer(self, instance=None, data=None, many=False, partial=False)&lt;/code&gt; - Returns a serializer instance.</source>
          <target state="translated">&lt;code&gt;get_serializer(self, instance=None, data=None, many=False, partial=False)&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f32ab046ddff60d13781520d451b3d79a8941e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_serializer_context(self)&lt;/code&gt; - Returns a dictionary containing any extra context that should be supplied to the serializer. Defaults to including &lt;code&gt;'request'&lt;/code&gt;, &lt;code&gt;'view'&lt;/code&gt; and &lt;code&gt;'format'&lt;/code&gt; keys.</source>
          <target state="translated">&lt;code&gt;get_serializer_context(self)&lt;/code&gt; 제공해야하는 추가 컨텍스트가 포함 된 사전을 반환합니다. 기본적으로 &lt;code&gt;'request'&lt;/code&gt; , &lt;code&gt;'view'&lt;/code&gt; 및 &lt;code&gt;'format'&lt;/code&gt; 키를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="06fa747c001148f65be5bef43a1af03273c57a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt;: A dictionary of HTTP headers to use in the response.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; : 응답에 사용할 HTTP 헤더 사전입니다.</target>
        </trans-unit>
        <trans-unit id="48fde6289bceed60eedddbba630b41c12594864f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt;: A boolean indicating if HTML output is required. &lt;code&gt;True&lt;/code&gt; when used in the browsable API, and &lt;code&gt;False&lt;/code&gt; when used in generating &lt;code&gt;OPTIONS&lt;/code&gt; responses.</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; : HTML 출력이 필요한지 여부를 나타내는 부울입니다. 찾아보기 가능한 API에서 사용될 때는 &lt;code&gt;True&lt;/code&gt; 이고 &lt;code&gt;OPTIONS&lt;/code&gt; 응답 을 생성 할 때 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4f573d52f16e4cd51e148f6dcc236f05704e7f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_cutoff&lt;/code&gt; - If set this will be the maximum number of choices that will be displayed by a HTML select drop down. Can be used to ensure that automatically generated ChoiceFields with very large possible selections do not prevent a template from rendering. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;html_cutoff&lt;/code&gt; - 설정되면 HTML 선택 드롭 다운에 표시되는 최대 선택 수입니다. 선택 범위가 매우 큰 자동으로 생성 된 ChoiceFields가 템플릿 렌더링을 방해하지 않도록하는 데 사용할 수 있습니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="32b8ab74cfb5c3c447c37637f3ed192d66695cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_cutoff&lt;/code&gt; - If set this will be the maximum number of choices that will be displayed by a HTML select drop down. Set to &lt;code&gt;None&lt;/code&gt; to disable any limiting. Defaults to &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;html_cutoff&lt;/code&gt; - 설정되면 HTML 선택 드롭 다운에 표시되는 최대 선택 수입니다. 제한을 비활성화 하려면 &lt;code&gt;None&lt;/code&gt; 으로 설정하십시오. 기본값은 &lt;code&gt;1000&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="34f664b8ce3360997f445c1088c886917a623354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_cutoff_text&lt;/code&gt; - If set this will display a textual indicator if the maximum number of items have been cutoff in an HTML select drop down. Defaults to &lt;code&gt;&quot;More than {count} items&amp;hellip;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;html_cutoff_text&lt;/code&gt; - 설정하면 HTML 선택 드롭 다운에서 최대 항목 수가 잘린 경우 텍스트 표시기가 표시됩니다. 기본적으로 &lt;code&gt;&quot;More than {count} items&amp;hellip;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a08ec4336dd27f86f308c8f2fc05331385d3616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_formats&lt;/code&gt; - A list of strings representing the input formats which may be used to parse the date. If not specified, the &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; setting will be used, which defaults to &lt;code&gt;['iso-8601']&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input_formats&lt;/code&gt; - 날짜를 구문 분석하는 데 사용할 수있는 입력 형식을 나타내는 문자열 목록입니다. 지정하지 않으면 &lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt; 설정이 사용되며 기본값은 &lt;code&gt;['iso-8601']&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0ce34704451a3832811b7abfdf3def8b18106415" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_formats&lt;/code&gt; - A list of strings representing the input formats which may be used to parse the date. If not specified, the &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; setting will be used, which defaults to &lt;code&gt;['iso-8601']&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input_formats&lt;/code&gt; - 날짜를 구문 분석하는 데 사용할 수있는 입력 형식을 나타내는 문자열 목록입니다. 지정하지 않으면 &lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt; 설정이 사용되며 기본값은 &lt;code&gt;['iso-8601']&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="13f20604ad53d39ad02f0c07ba8f7d4120a9a727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_formats&lt;/code&gt; - A list of strings representing the input formats which may be used to parse the date. If not specified, the &lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt; setting will be used, which defaults to &lt;code&gt;['iso-8601']&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input_formats&lt;/code&gt; - 날짜를 구문 분석하는 데 사용할 수있는 입력 형식을 나타내는 문자열 목록입니다. 지정하지 않으면 &lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt; 설정이 사용되며 기본값은 &lt;code&gt;['iso-8601']&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a95977c448b733f3a38b6e1dd0d75ebabb961261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;last_page_strings&lt;/code&gt; - A list or tuple of string values indicating values that may be used with the &lt;code&gt;page_query_param&lt;/code&gt; to request the final page in the set. Defaults to &lt;code&gt;('last',)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;last_page_strings&lt;/code&gt; - 세트의 최종 페이지를 요청하기 위해 &lt;code&gt;page_query_param&lt;/code&gt; 과 함께 사용될 수있는 값을 나타내는 문자열 값의 목록 또는 튜플 . 기본값은 &lt;code&gt;('last',)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6308442c23f1498c706702b708cfcb5b9e4daa41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit_query_param&lt;/code&gt; - A string value indicating the name of the &quot;limit&quot; query parameter. Defaults to &lt;code&gt;'limit'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;limit_query_param&lt;/code&gt; - &quot;limit&quot;쿼리 매개 변수의 이름을 나타내는 문자열 값. 기본값은 &lt;code&gt;'limit'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8c4d339039052799ff56ff09a25adee880e18464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;localize&lt;/code&gt; Set to &lt;code&gt;True&lt;/code&gt; to enable localization of input and output based on the current locale. This will also force &lt;code&gt;coerce_to_string&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Note that data formatting is enabled if you have set &lt;code&gt;USE_L10N=True&lt;/code&gt; in your settings file.</source>
          <target state="translated">&lt;code&gt;localize&lt;/code&gt; 현재 로케일을 기반으로 입력 및 출력을 현지화 하려면 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 . 또한 &lt;code&gt;coerce_to_string&lt;/code&gt; 을 &lt;code&gt;True&lt;/code&gt; 로 강제 합니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. 설정 파일에서 &lt;code&gt;USE_L10N=True&lt;/code&gt; 를 설정하면 데이터 형식이 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b9ed8159d5fd2143a053b208d32f348c95a8863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup&lt;/code&gt; - The lookup used to find an existing instance with the value being validated. Defaults to &lt;code&gt;'exact'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lookup&lt;/code&gt; - 값이 검증되는 기존 인스턴스를 찾는 데 사용되는 검색입니다. 기본값은 &lt;code&gt;'exact'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="115f3e0b862d27bb2a7201b31f8dac4003b2dbdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_field&lt;/code&gt; - The field on the target that should be used for the lookup. Should correspond to a URL keyword argument on the referenced view. Default is &lt;code&gt;'pk'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lookup_field&lt;/code&gt; - 룩업에 사용해야하는 대상의 필드입니다. 참조 된보기의 URL 키워드 인수와 일치해야합니다. 기본값은 &lt;code&gt;'pk'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="98205e8f590d7e75d2de40ce3f2dc09e18da50f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_field&lt;/code&gt; - The model field that should be used to for performing object lookup of individual model instances. Defaults to &lt;code&gt;'pk'&lt;/code&gt;. Note that when using hyperlinked APIs you'll need to ensure that &lt;em&gt;both&lt;/em&gt; the API views &lt;em&gt;and&lt;/em&gt; the serializer classes set the lookup fields if you need to use a custom value.</source>
          <target state="translated">&lt;code&gt;lookup_field&lt;/code&gt; - 개별 모델 인스턴스의 객체 조회를 수행하는 데 사용해야하는 모델 필드입니다. 기본값은 &lt;code&gt;'pk'&lt;/code&gt; 입니다. 하이퍼 링크 된 API 를 사용하는 경우 사용자 지정 값을 사용해야하는 경우 API 뷰 &lt;em&gt;와&lt;/em&gt; 시리얼 라이저 클래스 가 &lt;em&gt;모두&lt;/em&gt; 조회 필드를 설정해야합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cceeea004100aac80a50bfda95eeebcbfdaab9f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_url_kwarg&lt;/code&gt; - The URL keyword argument that should be used for object lookup. The URL conf should include a keyword argument corresponding to this value. If unset this defaults to using the same value as &lt;code&gt;lookup_field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lookup_url_kwarg&lt;/code&gt; - 객체 조회에 사용해야하는 URL 키워드 인수입니다. URL conf에는이 값에 해당하는 키워드 인수가 포함되어야합니다. 설정하지 않으면 기본적으로 &lt;code&gt;lookup_field&lt;/code&gt; 와 동일한 값을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b7ee5e88b0b7ab7b3545f54b8684d7921fa73bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_url_kwarg&lt;/code&gt; - The name of the keyword argument defined in the URL conf that corresponds to the lookup field. Defaults to using the same value as &lt;code&gt;lookup_field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lookup_url_kwarg&lt;/code&gt; - 조회 필드에 해당하는 URL conf에 정의 된 키워드 인수의 이름입니다. 기본적으로 &lt;code&gt;lookup_field&lt;/code&gt; 와 동일한 값을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="4cb33d63fc5fa0c34928416c1cbd920ec6f06c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;many&lt;/code&gt; - If applied to a to-many relationship, you should set this argument to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;many&lt;/code&gt; - 대다 관계에 적용되는 경우이 인수를 &lt;code&gt;True&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f0df6ca7159932970368c33dd86f9d67bfe17ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; - A regular expression, as a string, that FilePathField will use to filter filenames.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; -FilePathField가 파일 이름을 필터링하는 데 사용할 정규 표현식 (문자열)입니다.</target>
        </trans-unit>
        <trans-unit id="7bd104dbef8cb5f82c21ac9036cd51288f7da5e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_digits&lt;/code&gt; The maximum number of digits allowed in the number. It must be either &lt;code&gt;None&lt;/code&gt; or an integer greater than or equal to &lt;code&gt;decimal_places&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_digits&lt;/code&gt; 숫자에 허용되는 최대 자릿수입니다. &lt;code&gt;None&lt;/code&gt; 또는 &lt;code&gt;decimal_places&lt;/code&gt; 이상의 정수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="ebc4ae8be71ab7eb45e88cdfe24c31c91c60dbcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_length&lt;/code&gt; - Designates the maximum length for the file name.</source>
          <target state="translated">&lt;code&gt;max_length&lt;/code&gt; - 파일 이름의 최대 길이를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c59424a40b4f098e7ded199b1171c8a24a6857e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_length&lt;/code&gt; - Validates that the input contains no more than this number of characters.</source>
          <target state="translated">&lt;code&gt;max_length&lt;/code&gt; - 입력에이 문자 수를 초과하지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="53de53c060fd03d07b3fc76727cc3494d8088ef0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_length&lt;/code&gt; - Validates that the list contains no more than this number of elements.</source>
          <target state="translated">&lt;code&gt;max_length&lt;/code&gt; - 목록에이 개수보다 많은 요소가 포함되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8c16bfc760bab5913343437c089c9119fe59e760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_limit&lt;/code&gt; - If set this is a numeric value indicating the maximum allowable limit that may be requested by the client. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_limit&lt;/code&gt; - 설정되면 클라이언트가 요청할 수있는 최대 허용 한계를 나타내는 숫자 값입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca3e231bf461fbb613c4318acc9380b37a8e9197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_page_size&lt;/code&gt; - If set, this is a numeric value indicating the maximum allowable requested page size. This attribute is only valid if &lt;code&gt;page_size_query_param&lt;/code&gt; is also set.</source>
          <target state="translated">&lt;code&gt;max_page_size&lt;/code&gt; - 설정된 경우 허용되는 최대 요청 페이지 크기를 나타내는 숫자 값입니다. 이 속성은 &lt;code&gt;page_size_query_param&lt;/code&gt; 도 설정 한 경우에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="3bd4fd6abc70c8e81e9a332e1b3c5ff35c2ba0c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_value&lt;/code&gt; Validate that the duration provided is no greater than this value.</source>
          <target state="translated">&lt;code&gt;max_value&lt;/code&gt; 제공된 지속 기간이이 값보다 크지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="651f67256b969f63daa5f20d210a0b9b742b9e7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_value&lt;/code&gt; Validate that the number provided is no greater than this value.</source>
          <target state="translated">&lt;code&gt;max_value&lt;/code&gt; 제공된 수가이 값보다 크지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="08684c40131b2cf82c300cb0d36559c23e3e7b4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - The error message that should be used when validation fails.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; - 검증이 실패했을 경우 사용되어야 오류 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="99d23b6774d781783023a978ef45ee88499cb8ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method_name&lt;/code&gt; - The name of the method on the serializer to be called. If not included this defaults to &lt;code&gt;get_&amp;lt;field_name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;method_name&lt;/code&gt; - 호출 할 시리얼 라이저의 메소드 이름. 포함되지 않은 경우 기본값은 &lt;code&gt;get_&amp;lt;field_name&amp;gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9c7928f016bc7c90299dbe79c69e856792760373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_length&lt;/code&gt; - Validates that the input contains no fewer than this number of characters.</source>
          <target state="translated">&lt;code&gt;min_length&lt;/code&gt; - 입력에이 문자 수 이상이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="04f67b1cacdeeecf9741815419a346cb72e49b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_length&lt;/code&gt; - Validates that the list contains no fewer than this number of elements.</source>
          <target state="translated">&lt;code&gt;min_length&lt;/code&gt; - 목록에이 개수 이상의 요소가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b5e48ffc748b33b1b05c9023a73b2fe52dc7d9c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_value&lt;/code&gt; Validate that the duration provided is no less than this value.</source>
          <target state="translated">&lt;code&gt;min_value&lt;/code&gt; 제공된 지속 기간이이 값 이상인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="89d7cd7013bd43dc8be586f4fabf814f55b10eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_value&lt;/code&gt; Validate that the number provided is no less than this value.</source>
          <target state="translated">&lt;code&gt;min_value&lt;/code&gt; 제공된 숫자가이 값 이상인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1c56d0f83cd2288eccd823b35995caf06471ca87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the display name for the viewset. This argument is mutually exclusive to &lt;code&gt;suffix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - 뷰셋의 표시 이름을. 이 인수는 &lt;code&gt;suffix&lt;/code&gt; 상호 배타적 입니다.</target>
        </trans-unit>
        <trans-unit id="d6ab589b7cfc8d6a665cda15d6de1e1ca3a973f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: A name explicitly provided to a view in the viewset. Typically, this value should be used as-is when provided.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : 뷰 세트의 뷰에 명시 적으로 제공된 이름입니다. 일반적으로이 값은 제공 될 때 그대로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="951c6d1c5d7234bcffbea8bcc27888c819062343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset_query_param&lt;/code&gt; - A string value indicating the name of the &quot;offset&quot; query parameter. Defaults to &lt;code&gt;'offset'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;offset_query_param&lt;/code&gt; - &quot;offset&quot;쿼리 매개 변수의 이름을 나타내는 문자열 값. 기본값은 &lt;code&gt;'offset'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5be8835e8aab7814c2a0c7233ccf884836c5a17b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ordering&lt;/code&gt; = This should be a string, or list of strings, indicating the field against which the cursor based pagination will be applied. For example: &lt;code&gt;ordering = 'slug'&lt;/code&gt;. Defaults to &lt;code&gt;-created&lt;/code&gt;. This value may also be overridden by using &lt;code&gt;OrderingFilter&lt;/code&gt; on the view.</source>
          <target state="translated">&lt;code&gt;ordering&lt;/code&gt; = 커서 기반 페이지 매김을 적용 할 필드를 나타내는 문자열 또는 문자열 목록이어야합니다. 예를 들어, &lt;code&gt;ordering = 'slug'&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;-created&lt;/code&gt; 입니다. 보기에서 &lt;code&gt;OrderingFilter&lt;/code&gt; 를 사용 하여이 값을 대체 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3a41df2847fa2aac2279e53b0db5ca78f02b0e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_query_param&lt;/code&gt; - A string value indicating the name of the query parameter to use for the pagination control.</source>
          <target state="translated">&lt;code&gt;page_query_param&lt;/code&gt; - 페이지 매김 컨트롤에 사용할 쿼리 매개 변수의 이름을 나타내는 문자열 값입니다.</target>
        </trans-unit>
        <trans-unit id="de1fad9126d13979401fe2e498dc94f07c5909fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_size&lt;/code&gt; - A numeric value indicating the page size. If set, this overrides the &lt;code&gt;PAGE_SIZE&lt;/code&gt; setting. Defaults to the same value as the &lt;code&gt;PAGE_SIZE&lt;/code&gt; settings key.</source>
          <target state="translated">&lt;code&gt;page_size&lt;/code&gt; - 페이지 크기를 나타내는 숫자 값입니다. 설정하면 &lt;code&gt;PAGE_SIZE&lt;/code&gt; 설정 보다 우선합니다 . 기본값은 &lt;code&gt;PAGE_SIZE&lt;/code&gt; 설정 키 와 동일한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="102df1e8ff347361046048ae9e5d176b70fd650d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_size&lt;/code&gt; = A numeric value indicating the page size. If set, this overrides the &lt;code&gt;PAGE_SIZE&lt;/code&gt; setting. Defaults to the same value as the &lt;code&gt;PAGE_SIZE&lt;/code&gt; settings key.</source>
          <target state="translated">&lt;code&gt;page_size&lt;/code&gt; = 페이지 크기를 나타내는 숫자 값. 설정하면 &lt;code&gt;PAGE_SIZE&lt;/code&gt; 설정 보다 우선합니다 . 기본값은 &lt;code&gt;PAGE_SIZE&lt;/code&gt; 설정 키 와 동일한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="f7fafed2a919ab145ac261c3beb6c3d5f2262208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page_size_query_param&lt;/code&gt; - If set, this is a string value indicating the name of a query parameter that allows the client to set the page size on a per-request basis. Defaults to &lt;code&gt;None&lt;/code&gt;, indicating that the client may not control the requested page size.</source>
          <target state="translated">&lt;code&gt;page_size_query_param&lt;/code&gt; - 설정된 경우, 클라이언트가 요청별로 페이지 크기를 설정할 수 있도록하는 조회 매개 변수의 이름을 나타내는 문자열 값입니다. 클라이언트가 요청한 페이지 크기를 제어하지 않을 수 있음을 나타내는 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="50a870dac33dd3abe39fc570f342bc31e36591e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paginate_queryset(self, queryset)&lt;/code&gt; - Paginate a queryset if required, either returning a page object, or &lt;code&gt;None&lt;/code&gt; if pagination is not configured for this view.</source>
          <target state="translated">&lt;code&gt;paginate_queryset(self, queryset)&lt;/code&gt; -필요한 경우 페이지 세트를 리턴하거나 페이지 보기를 위해 페이지 매김이 구성되지 않은 경우 &lt;code&gt;None&lt;/code&gt; 설정합니다.</target>
        </trans-unit>
        <trans-unit id="55b521e21baa15f3a6bdf4f8a679df2a7246b5bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pagination_class&lt;/code&gt; - The pagination class that should be used when paginating list results. Defaults to the same value as the &lt;code&gt;DEFAULT_PAGINATION_CLASS&lt;/code&gt; setting, which is &lt;code&gt;'rest_framework.pagination.PageNumberPagination'&lt;/code&gt;. Setting &lt;code&gt;pagination_class=None&lt;/code&gt; will disable pagination on this view.</source>
          <target state="translated">&lt;code&gt;pagination_class&lt;/code&gt; - 목록 결과를 페이지 매김 할 때 사용해야하는 페이지 매김 클래스. 기본값은 &lt;code&gt;DEFAULT_PAGINATION_CLASS&lt;/code&gt; 설정 과 동일한 값 ( &lt;code&gt;'rest_framework.pagination.PageNumberPagination'&lt;/code&gt; ) 입니다. 설정 &lt;code&gt;pagination_class=None&lt;/code&gt; 이보기에 페이지 매김을 사용하지 않을 것이다.</target>
        </trans-unit>
        <trans-unit id="42d61b986ce18deb207fd7b5b131005d40355128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; - The absolute filesystem path to a directory from which this FilePathField should get its choice.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; -이 FilePathField는 선택을 받아야있는 디렉토리에 대한 절대 파일 시스템 경로.</target>
        </trans-unit>
        <trans-unit id="205b29c5a4fcccd525a17ab261de4b322bbc865e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patterns&lt;/code&gt;: A list of URLs to inspect when generating the schema. Defaults to the project's URL conf.</source>
          <target state="translated">&lt;code&gt;patterns&lt;/code&gt; : 스키마를 생성 할 때 검사 할 URL 목록입니다. 프로젝트의 URL conf가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="e4033dfce5b1e239d5acf684b9bbe898729a791b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patterns&lt;/code&gt;: List of url patterns to limit the schema introspection to. If you only want the &lt;code&gt;myproject.api&lt;/code&gt; urls to be exposed in the schema:</source>
          <target state="translated">&lt;code&gt;patterns&lt;/code&gt; : 스키마 내부 검사를 제한 할 URL 패턴 목록입니다. &lt;code&gt;myproject.api&lt;/code&gt; URL 만 스키마에 노출 시키 려면 다음 을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6dded643f0eec891139752b9820d1e96e2ac3f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perform_create(self, serializer)&lt;/code&gt; - Called by &lt;code&gt;CreateModelMixin&lt;/code&gt; when saving a new object instance.</source>
          <target state="translated">&lt;code&gt;perform_create(self, serializer)&lt;/code&gt; - 새 객체 인스턴스를 저장할 때 &lt;code&gt;CreateModelMixin&lt;/code&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2b819db81642170e468c3173250a21d1bf3e466b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perform_destroy(self, instance)&lt;/code&gt; - Called by &lt;code&gt;DestroyModelMixin&lt;/code&gt; when deleting an object instance.</source>
          <target state="translated">&lt;code&gt;perform_destroy(self, instance)&lt;/code&gt; - 객체 인스턴스를 삭제할 때 &lt;code&gt;DestroyModelMixin&lt;/code&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ac896a2eebfa06640d50e1c81f6bea44ac7f5b44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perform_update(self, serializer)&lt;/code&gt; - Called by &lt;code&gt;UpdateModelMixin&lt;/code&gt; when saving an existing object instance.</source>
          <target state="translated">&lt;code&gt;perform_update(self, serializer)&lt;/code&gt; - 기존 객체 인스턴스를 저장할 때 &lt;code&gt;UpdateModelMixin&lt;/code&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="9f4050004ad76c60f29d8d674829d56582da5709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permission_classes&lt;/code&gt;: May be used to specify the list of permission classes that will apply to the schema endpoint. Defaults to &lt;code&gt;settings.DEFAULT_PERMISSION_CLASSES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;permission_classes&lt;/code&gt; : 스키마 엔드 포인트에 적용될 권한 클래스 목록을 지정하는 데 사용될 수 있습니다. 기본값은 &lt;code&gt;settings.DEFAULT_PERMISSION_CLASSES&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d112f7e18b6f29e042c9a85ae95c9bdcb50c03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pk_field&lt;/code&gt; - Set to a field to control serialization/deserialization of the primary key's value. For example, &lt;code&gt;pk_field=UUIDField(format='hex')&lt;/code&gt; would serialize a UUID primary key into its compact hex representation.</source>
          <target state="translated">&lt;code&gt;pk_field&lt;/code&gt; - 기본 키 값의 직렬화 / 직렬화를 제어하는 ​​필드로 설정합니다. 예를 들어, &lt;code&gt;pk_field=UUIDField(format='hex')&lt;/code&gt; 는 UUID 기본 키를 컴팩트 한 16 진수 표현으로 직렬화합니다.</target>
        </trans-unit>
        <trans-unit id="344aec8e3b0a65c0615e99e6848754ee2082c702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt; - The URL prefix to use for this set of routes.</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; - 이 경로 집합에 사용할 URL 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="63c8bce3406048749996139443873f1f98284269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protocol&lt;/code&gt; Limits valid inputs to the specified protocol. Accepted values are 'both' (default), 'IPv4' or 'IPv6'. Matching is case insensitive.</source>
          <target state="translated">&lt;code&gt;protocol&lt;/code&gt; 유효한 입력을 지정된 프로토콜로 제한합니다. 허용되는 값은 'both'(기본값), 'IPv4'또는 'IPv6'입니다. 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8cf7e02884433b639707510bd6f5d87ba803347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryset&lt;/code&gt; - The queryset that should be used for returning objects from this view. Typically, you must either set this attribute, or override the &lt;code&gt;get_queryset()&lt;/code&gt; method. If you are overriding a view method, it is important that you call &lt;code&gt;get_queryset()&lt;/code&gt; instead of accessing this property directly, as &lt;code&gt;queryset&lt;/code&gt; will get evaluated once, and those results will be cached for all subsequent requests.</source>
          <target state="translated">&lt;code&gt;queryset&lt;/code&gt; - 이 뷰에서 객체를 반환하는 데 사용해야하는 쿼리 세트입니다. 일반적으로이 속성을 설정하거나 &lt;code&gt;get_queryset()&lt;/code&gt; 메소드를 대체해야합니다 . view 메소드를 대체하는 경우 &lt;code&gt;queryset&lt;/code&gt; 이 한 번 평가되고 결과가 모든 후속 요청에 대해 캐시 되므로이 특성에 직접 액세스하는 대신 &lt;code&gt;get_queryset()&lt;/code&gt; 을 호출하는 것이 중요 합니다.</target>
        </trans-unit>
        <trans-unit id="e8b95d4ed3f23eb30651f65cbfa018deeace9585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryset&lt;/code&gt; - The queryset used for model instance lookups when validating the field input. Relationships must either set a queryset explicitly, or set &lt;code&gt;read_only=True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;queryset&lt;/code&gt; - 필드 입력의 유효성을 검사 할 때 모델 인스턴스 조회에 사용되는 쿼리 집합입니다. 관계는 명시 적으로 쿼리 세트를 설정하거나 &lt;code&gt;read_only=True&lt;/code&gt; 를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="61527124553c82637b071074c4bad237d2dbb9fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryset&lt;/code&gt;&lt;em&gt;required&lt;/em&gt; - This is the queryset against which uniqueness should be enforced.</source>
          <target state="translated">&lt;code&gt;queryset&lt;/code&gt; &lt;em&gt;required-&lt;/em&gt; 고유성을 적용 할 쿼리 세트입니다.</target>
        </trans-unit>
        <trans-unit id="e8db030ac8e716295455abb2d2f3b21f190aa8d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recursive&lt;/code&gt; - Specifies whether all subdirectories of path should be included. Default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;recursive&lt;/code&gt; -경로의 모든 하위 디렉토리를 포함할지 여부를 지정합니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b7b9dbe32c54dce69baa5c2a1e1f942a36610461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;renderer_classes&lt;/code&gt;: May be used to pass the set of renderer classes that can be used to render the API root endpoint.</source>
          <target state="translated">&lt;code&gt;renderer_classes&lt;/code&gt; : API 루트 엔드 포인트를 렌더링하는 데 사용할 수있는 렌더러 클래스 세트를 전달하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e313a879948dfbbf0c7772e4749525b90724bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.auth&lt;/code&gt; returns any additional authentication context. The exact behavior of &lt;code&gt;request.auth&lt;/code&gt; depends on the authentication policy being used, but it may typically be an instance of the token that the request was authenticated against.</source>
          <target state="translated">&lt;code&gt;request.auth&lt;/code&gt; 는 추가 인증 컨텍스트를 반환합니다. &lt;code&gt;request.auth&lt;/code&gt; 의 정확한 동작은 사용중인 인증 정책에 따라 다르지만 일반적으로 요청이 인증 된 토큰의 인스턴스 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="021d18407b1d5b2cef8a9d1e2827c2726a41ea41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.auth&lt;/code&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;request.auth&lt;/code&gt; 는 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="74bbcba28ffeb6d29e8d5a887cadaaed626be97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.auth&lt;/code&gt; will be a &lt;code&gt;rest_framework.authtoken.models.Token&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;request.auth&lt;/code&gt; 는 &lt;code&gt;rest_framework.authtoken.models.Token&lt;/code&gt; 인스턴스가됩니다.</target>
        </trans-unit>
        <trans-unit id="0dd9e388c8890887444d9a4351f5164dcc876e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.content_type&lt;/code&gt;, returns a string object representing the media type of the HTTP request's body, or an empty string if no media type was provided.</source>
          <target state="translated">&lt;code&gt;request.content_type&lt;/code&gt; 은 HTTP 요청 본문의 미디어 유형을 나타내는 문자열 객체 또는 미디어 유형이 제공되지 않은 경우 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e2b9bf7a3b1beb0f0c6d1980d56060d4aa36e0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.data&lt;/code&gt; returns the parsed content of the request body. This is similar to the standard &lt;code&gt;request.POST&lt;/code&gt; and &lt;code&gt;request.FILES&lt;/code&gt; attributes except that:</source>
          <target state="translated">&lt;code&gt;request.data&lt;/code&gt; 는 요청 본문의 구문 분석 된 컨텐츠를 리턴합니다. 이것은 다음을 제외하고 표준 &lt;code&gt;request.POST&lt;/code&gt; 및 &lt;code&gt;request.FILES&lt;/code&gt; 속성 과 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="b0388793a5d3e219b53e98b647ce6bddda1ee072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.method&lt;/code&gt; returns the &lt;strong&gt;uppercased&lt;/strong&gt; string representation of the request's HTTP method.</source>
          <target state="translated">&lt;code&gt;request.method&lt;/code&gt; 는 요청의 HTTP 메소드의 &lt;strong&gt;대문자&lt;/strong&gt; 문자열 표현을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2978b71adca57233c0f9f03297dec9829da0691c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.query_params&lt;/code&gt; is a more correctly named synonym for &lt;code&gt;request.GET&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;request.query_params&lt;/code&gt; 을 위한보다 올바른 이름의 동의어입니다 &lt;code&gt;request.GET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cadc93e1dc02100dbc3bcacae08f80a8e52f1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.stream&lt;/code&gt; returns a stream representing the content of the request body.</source>
          <target state="translated">&lt;code&gt;request.stream&lt;/code&gt; 은 요청 본문의 내용을 나타내는 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0b9c407dedd19c2bb4bb37cdac42f96f8b77816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.user&lt;/code&gt; typically returns an instance of &lt;code&gt;django.contrib.auth.models.User&lt;/code&gt;, although the behavior depends on the authentication policy being used.</source>
          <target state="translated">&lt;code&gt;request.user&lt;/code&gt; 는 일반적으로 &lt;code&gt;django.contrib.auth.models.User&lt;/code&gt; 인스턴스를 리턴 하지만 동작은 사용중인 인증 정책에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7ee5a3a7352cf8459bac22389b2480ab3e384b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request.user&lt;/code&gt; will be a Django &lt;code&gt;User&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;request.user&lt;/code&gt; 는 Django &lt;code&gt;User&lt;/code&gt; 인스턴스가됩니다.</target>
        </trans-unit>
        <trans-unit id="97ca173d2dc5e54c974e64e79c21efe590b18bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rounding&lt;/code&gt; Sets the rounding mode used when quantising to the configured precision. Valid values are &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#rounding-modes&quot;&gt;&lt;code&gt;decimal&lt;/code&gt; module rounding modes&lt;/a&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rounding&lt;/code&gt; 구성된 정밀도로 양자화 할 때 사용되는 반올림 모드를 설정합니다. 유효한 값은 &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#rounding-modes&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; 모듈 반올림 모드&lt;/a&gt; 입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c019988f1f8f73492cbb534cb9fcbb3139d2acb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;: The view instance. Typically the description function would inspect the docstring of the class when generating a description, by accessing &lt;code&gt;self.__class__.__doc__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; : 뷰 인스턴스. 일반적으로 description 함수는 &lt;code&gt;self.__class__.__doc__&lt;/code&gt; 에 액세스하여 설명을 생성 할 때 클래스의 docstring을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="18cfedbcec5e7780c16abe9ccba468a007c98524" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;: The view instance. Typically the name function would inspect the name of the class when generating a descriptive name, by accessing &lt;code&gt;self.__class__.__name__&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; : 뷰 인스턴스. 일반적으로 name 함수는 &lt;code&gt;self.__class__.__name__&lt;/code&gt; 에 액세스하여 설명적인 이름을 생성 할 때 클래스 이름을 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="4f9330adee080848312d2f1ba89e25bb66416e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serializer_class&lt;/code&gt; - The serializer class that should be used for validating and deserializing input, and for serializing output. Typically, you must either set this attribute, or override the &lt;code&gt;get_serializer_class()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;serializer_class&lt;/code&gt; - 입력의 유효성을 검사하고 역 직렬화하고 출력을 직렬화하는 데 사용해야하는 직렬화 기 클래스입니다. 일반적으로이 속성을 설정하거나 &lt;code&gt;get_serializer_class()&lt;/code&gt; 메소드를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="27769483427b7931e938554f00f6508ad68d8032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slug_field&lt;/code&gt; - The field on the target that should be used to represent it. This should be a field that uniquely identifies any given instance. For example, &lt;code&gt;username&lt;/code&gt;. &lt;strong&gt;required&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;slug_field&lt;/code&gt; - 대상을 나타내는 데 사용해야하는 필드입니다. 주어진 인스턴스를 고유하게 식별하는 필드 여야합니다. 예를 들어 &lt;code&gt;username&lt;/code&gt; 입니다. &lt;strong&gt;필수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f91d9c3d8f973703cc6cc67e81cd63aa8f67fe32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt;: A status code for the response. Defaults to 200. See also &lt;a href=&quot;../status-codes/index&quot;&gt;status codes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; : 응답의 상태 코드입니다. 기본값은 200 입니다. &lt;a href=&quot;../status-codes/index&quot;&gt;상태 코드&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd6d5de81e197be6162f35d0a5522ea3ab97f795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suffix&lt;/code&gt; - the display suffix for the viewset type - mirrors the &lt;code&gt;detail&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;suffix&lt;/code&gt; - 뷰셋 유형의 디스플레이 접미사 - 거울 &lt;code&gt;detail&lt;/code&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="5fb3dd17fde1a0048dcc7aa013094f74f84e7194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suffix&lt;/code&gt;: Text used when differentiating individual views in a viewset. This argument is mutually exclusive to &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;suffix&lt;/code&gt; : 접미사 에서 개별 뷰를 차별화 할 때 사용되는 텍스트입니다. 이 인수는 &lt;code&gt;name&lt;/code&gt; 에 상호 배타적 입니다.</target>
        </trans-unit>
        <trans-unit id="86de5298600817119dc6253b3326c8d6c8db9c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; - The name of a template to use when rendering pagination controls in the browsable API. May be overridden to modify the rendering style, or set to &lt;code&gt;None&lt;/code&gt; to disable HTML pagination controls completely. Defaults to &lt;code&gt;&quot;rest_framework/pagination/numbers.html&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; - 브라우징 가능한 API에서 페이지 매김 컨트롤을 렌더링 할 때 사용할 템플릿 이름입니다. 렌더링 스타일을 수정하도록 재정의하거나 HTML 페이지 매김 컨트롤을 완전히 비활성화 하려면 &lt;code&gt;None&lt;/code&gt; 으로 설정해야합니다. 기본값은 &lt;code&gt;&quot;rest_framework/pagination/numbers.html&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="246c86c5d0304f5637350b66cb2fed1425e45e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; = The name of a template to use when rendering pagination controls in the browsable API. May be overridden to modify the rendering style, or set to &lt;code&gt;None&lt;/code&gt; to disable HTML pagination controls completely. Defaults to &lt;code&gt;&quot;rest_framework/pagination/previous_and_next.html&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; = 브라우징 가능한 API에서 페이지 매김 컨트롤을 렌더링 할 때 사용할 템플릿 이름입니다. 렌더링 스타일을 수정하도록 재정의하거나 HTML 페이지 매김 컨트롤을 완전히 비활성화 하려면 &lt;code&gt;None&lt;/code&gt; 으로 설정해야합니다. 기본값은 &lt;code&gt;&quot;rest_framework/pagination/previous_and_next.html&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e43a667f3bfd3e20c23a63b2d459e94e12bcf1c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template_name&lt;/code&gt;: A template name to use if &lt;code&gt;HTMLRenderer&lt;/code&gt; is selected.</source>
          <target state="translated">&lt;code&gt;template_name&lt;/code&gt; : &lt;code&gt;HTMLRenderer&lt;/code&gt; 를 선택한 경우 사용할 템플릿 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="5379f33a86d82011c34651d7e5a7c1ab8a822030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt;: May be used to provide a descriptive title for the schema definition.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; : 스키마 정의를 설명하는 제목을 제공하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31bebf935a61e8bade8896bdcec585a223a3c561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt;&lt;strong&gt;required&lt;/strong&gt;: The name of the API.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; &lt;strong&gt;required&lt;/strong&gt; : API의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f33b067ff2c5d51b1e5f63514d15719f78548e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_representation&lt;/code&gt; is passed the entire &lt;code&gt;DataPoint&lt;/code&gt; object and must map from that to the desired output.</source>
          <target state="translated">&lt;code&gt;to_representation&lt;/code&gt; 은 전체 &lt;code&gt;DataPoint&lt;/code&gt; 개체에 전달 되며이 개체에서 원하는 출력으로 매핑되어야합니다.</target>
        </trans-unit>
        <trans-unit id="599cbf05e785e497fb4e8193442ce9bdf85a5125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trim_whitespace&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then leading and trailing whitespace is trimmed. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;trim_whitespace&lt;/code&gt; - &lt;code&gt;True&lt;/code&gt; 로 설정하면 선행 및 후행 공백이 잘립니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb09d18744b386215bc782a8b91797ebbb181c69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unpack_ipv4&lt;/code&gt; Unpacks IPv4 mapped addresses like ::ffff:192.0.2.1. If this option is enabled that address would be unpacked to 192.0.2.1. Default is disabled. Can only be used when protocol is set to 'both'.</source>
          <target state="translated">&lt;code&gt;unpack_ipv4&lt;/code&gt; :: ffff : 192.0.2.1과 같은 IPv4 매핑 주소의 압축을 풉니 다 . 이 옵션을 사용하면 해당 주소가 192.0.2.1로 압축 해제됩니다. 기본값은 비활성화입니다. 프로토콜이 '둘 다'로 설정된 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39ea496c09e13b3854228b9218d257904709d902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: May be used to pass a canonical base URL for the schema.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; : 스키마에 대한 표준 기본 URL을 전달하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77916efb40c2e6d30e6b4b83399754bf8684f6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: The root URL of the API schema. This option is not required unless the schema is included under path prefix.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; : API 스키마의 루트 URL입니다. 경로 접두사 아래에 스키마가 포함되어 있지 않으면이 옵션이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f74de2657284a07f49e9482cf79b5f637382b35d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urlconf&lt;/code&gt;: A URL conf module name to use when generating the schema. Defaults to &lt;code&gt;settings.ROOT_URLCONF&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;urlconf&lt;/code&gt; : 스키마 생성시 사용할 URL conf 모듈 이름입니다. 기본값은 &lt;code&gt;settings.ROOT_URLCONF&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a02dcc2ed40b8dd09a6baeb68499a713e7c103cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urlconf&lt;/code&gt;: A string representing the import path to the URL conf that you want to generate an API schema for. This defaults to the value of Django's &lt;code&gt;ROOT_URLCONF&lt;/code&gt; setting.</source>
          <target state="translated">&lt;code&gt;urlconf&lt;/code&gt; : API 스키마를 생성하려는 URL conf의 가져 오기 경로를 나타내는 문자열입니다. Django의 &lt;code&gt;ROOT_URLCONF&lt;/code&gt; 설정 값이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="a08a9953c592db91a79be52f34e524d3ea582225" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urls.py&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;urls.py&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="91c1c859b514082aa4fb17aa2df188f51cfa1768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_url&lt;/code&gt; - If set to &lt;code&gt;True&lt;/code&gt; then URL string values will be used for the output representation. If set to &lt;code&gt;False&lt;/code&gt; then filename string values will be used for the output representation. Defaults to the value of the &lt;code&gt;UPLOADED_FILES_USE_URL&lt;/code&gt; settings key, which is &lt;code&gt;True&lt;/code&gt; unless set otherwise.</source>
          <target state="translated">&lt;code&gt;use_url&lt;/code&gt; - &lt;code&gt;True&lt;/code&gt; 로 설정 하면 출력 표현에 URL 문자열 값이 사용됩니다. &lt;code&gt;False&lt;/code&gt; 로 설정하면 파일 이름 문자열 값이 출력 표현에 사용됩니다. 기본값은 &lt;code&gt;UPLOADED_FILES_USE_URL&lt;/code&gt; 설정 키 의 값으로 설정되며, 달리 설정하지 않으면 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3a881a47dcd3a77aa261b503087ac35a95634460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;view_name&lt;/code&gt; - The view name that should be used as the target of the relationship. If you're using &lt;a href=&quot;../routers#defaultrouter&quot;&gt;the standard router classes&lt;/a&gt; this will be a string with the format &lt;code&gt;&amp;lt;model_name&amp;gt;-detail&lt;/code&gt;. &lt;strong&gt;required&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;view_name&lt;/code&gt; - 관계의 대상으로 사용해야하는 뷰 이름입니다. &lt;a href=&quot;../routers#defaultrouter&quot;&gt;표준 라우터 클래스를&lt;/a&gt; 사용 하는 경우 &lt;code&gt;&amp;lt;model_name&amp;gt;-detail&lt;/code&gt; 형식의 문자열이됩니다 . &lt;strong&gt;필수&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bd9e3c20178ff22d9f3b5edd63d6bfaa83b4802d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;view_name&lt;/code&gt; - The view name that should be used as the target of the relationship. If you're using &lt;a href=&quot;../routers#defaultrouter&quot;&gt;the standard router classes&lt;/a&gt; this will be a string with the format &lt;code&gt;&amp;lt;modelname&amp;gt;-detail&lt;/code&gt;. &lt;strong&gt;required&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;view_name&lt;/code&gt; - 관계의 대상으로 사용해야하는 뷰 이름입니다. &lt;a href=&quot;../routers#defaultrouter&quot;&gt;표준 라우터 클래스를&lt;/a&gt; 사용 하는 경우 &lt;code&gt;&amp;lt;modelname&amp;gt;-detail&lt;/code&gt; 형식의 문자열이됩니다 . &lt;strong&gt;필수&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5efb26242b98819667a1286564a8f8cbefc67dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;views.py&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;views.py&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="586ee2ea0ed1985e360bb0b7258d533ce3f344d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewset&lt;/code&gt; - The viewset class.</source>
          <target state="translated">&lt;code&gt;viewset&lt;/code&gt; - 뷰셋 클래스</target>
        </trans-unit>
        <trans-unit id="1e4dd020d61cf25e24876e6b8806824fc4c34032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;your_app/admin.py&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;your_app/admin.py&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="b66477c3de98cbf66286f421d6fb87dcc1ed45c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{basename}&lt;/code&gt; - The base to use for the URL names that are created.</source>
          <target state="translated">&lt;code&gt;{basename}&lt;/code&gt; -작성된 URL 이름에 사용할 기본입니다.</target>
        </trans-unit>
        <trans-unit id="5137cac284266f46f156778fc1d3fb6b33944d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{lookup}&lt;/code&gt; - The lookup field used to match against a single instance.</source>
          <target state="translated">&lt;code&gt;{lookup}&lt;/code&gt; -단일 인스턴스와 일치시키는 데 사용되는 조회 필드입니다.</target>
        </trans-unit>
        <trans-unit id="bfa7bd943d1b68f07a2747f42dcd9d91d26de008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{prefix}&lt;/code&gt; - The URL prefix to use for this set of routes.</source>
          <target state="translated">&lt;code&gt;{prefix}&lt;/code&gt; -이 라우트 세트에 사용할 URL 접 두부입니다.</target>
        </trans-unit>
        <trans-unit id="a2364b5a64b2c6d8a46c0cd8b9e581abd3e2b2ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{trailing_slash}&lt;/code&gt; - Either a '/' or an empty string, depending on the &lt;code&gt;trailing_slash&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;{trailing_slash}&lt;/code&gt; &lt;code&gt;trailing_slash&lt;/code&gt; 인수 에 따라 '/'또는 빈 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="aaa692a4527fed84f1072e6b2467db8c2a0aa00c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{url_name}&lt;/code&gt; - The &lt;code&gt;url_name&lt;/code&gt; provided to the &lt;code&gt;@action&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{url_name}&lt;/code&gt; - &lt;code&gt;url_name&lt;/code&gt; 받는 제공 &lt;code&gt;@action&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="965fb568be56c0974c3a1ce6ea3f5825ba428f7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A custom pagination style, using the 'Link' header'&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;'링크'헤더를 사용하는 맞춤 페이지 매김 스타일&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfc909cda8038ed71a65d5623f645f2edae6602f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Every single sign-up helps us make REST framework long-term financially sustainable.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;모든 단일 가입은 REST 프레임 워크를 장기적으로 재정적으로 지속 가능하도록 도와줍니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="174e5b7261f566b5a52e7595209b9f6e6817155f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Many thanks to all our &lt;a href=&quot;https://fund.django-rest-framework.org/topics/funding/#our-sponsors&quot;&gt;wonderful sponsors&lt;/a&gt;, and in particular to our premium backers, &lt;a href=&quot;https://getsentry.com/welcome/&quot;&gt;Sentry&lt;/a&gt;, &lt;a href=&quot;https://getstream.io/?utm_source=drf&amp;amp;utm_medium=banner&amp;amp;utm_campaign=drf&quot;&gt;Stream&lt;/a&gt;, &lt;a href=&quot;https://software.esg-usa.com/&quot;&gt;ESG&lt;/a&gt;, &lt;a href=&quot;https://rollbar.com/?utm_source=django&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=freetrial&quot;&gt;Rollbar&lt;/a&gt;, &lt;a href=&quot;https://cadre.com&quot;&gt;Cadre&lt;/a&gt;, &lt;a href=&quot;https://hubs.ly/H0f30Lf0&quot;&gt;Kloudless&lt;/a&gt;, and &lt;a href=&quot;https://lightsonsoftware.com&quot;&gt;Lights On Software&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;모든 &lt;a href=&quot;https://fund.django-rest-framework.org/topics/funding/#our-sponsors&quot;&gt;훌륭한 후원자&lt;/a&gt; , 특히 프리미엄 후원자, &lt;a href=&quot;https://getsentry.com/welcome/&quot;&gt;Sentry&lt;/a&gt; , &lt;a href=&quot;https://getstream.io/?utm_source=drf&amp;amp;utm_medium=banner&amp;amp;utm_campaign=drf&quot;&gt;Stream&lt;/a&gt; , &lt;a href=&quot;https://software.esg-usa.com/&quot;&gt;ESG&lt;/a&gt; , &lt;a href=&quot;https://rollbar.com/?utm_source=django&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=freetrial&quot;&gt;Rollbar&lt;/a&gt; , &lt;a href=&quot;https://cadre.com&quot;&gt;Cadre&lt;/a&gt; , &lt;a href=&quot;https://hubs.ly/H0f30Lf0&quot;&gt;Kloudless&lt;/a&gt; 및 &lt;a href=&quot;https://lightsonsoftware.com&quot;&gt;Lights On Software에 &lt;/a&gt;감사드립니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="733036293b9f941d1619131e9491138c3290a890" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings are used to control how date and time representations may be parsed and rendered.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;다음 설정은 날짜 및 시간 표현을 구문 분석하고 렌더링하는 방법을 제어하는 ​​데 사용됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="572623a1d1a642a3f4c91d2c63a74eba157329a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the basic API policies, and are applied to every &lt;code&gt;APIView&lt;/code&gt; class-based view, or &lt;code&gt;@api_view&lt;/code&gt; function based view.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;다음 설정은 기본 API 정책을 제어하며 모든 &lt;code&gt;APIView&lt;/code&gt; 클래스 기반보기 또는 &lt;code&gt;@api_view&lt;/code&gt; 함수 기반보기에 적용됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91ae40af963c0edd79a3338297094ed9dccd7e10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the behavior of APIRequestFactory and APIClient&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;다음 설정은 APIRequestFactory 및 APIClient의 동작을 제어합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0bcb7ca0414718caea996fbb14394168f4ee517" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the behavior of the generic class-based views.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;다음 설정은 일반 클래스 기반보기의 동작을 제어합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92109b25caff72dadf20ba29dc80550f7305d267" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The following settings control the behavior of unauthenticated requests.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;다음 설정은 인증되지 않은 요청의 동작을 제어합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17f1b8481b4c6151a734675f21688ea50630bd0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.charset&lt;/strong&gt;: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.charset&lt;/strong&gt; : &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17c17ecd5cd337cf73df20d1409c3d1e8fbef122" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.charset&lt;/strong&gt;: &lt;code&gt;utf-8&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.charset&lt;/strong&gt; : &lt;code&gt;utf-8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afda7493a31e4df89dd71e5be36cf9dedf822ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'admin'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt; : &lt;code&gt;'admin'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5856eed2f006c22f7ae509ee06b32136e65dec76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'api'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt; : &lt;code&gt;'api'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b81bc076734e39d6fd03791c75c9e87b9515612" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'form'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt; : &lt;code&gt;'form'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60116e3f28a9008c4e8a0b85a1470f0bf6bbf8eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt; : &lt;code&gt;'html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="596dde28e359b4a09df5029dc6db9f5e9ae89b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'json'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt; : &lt;code&gt;'json'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="458de4e391126ed5eb76ea79af3fee97de3fb889" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.format&lt;/strong&gt;: &lt;code&gt;'multipart'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.format&lt;/strong&gt; : &lt;code&gt;'multipart'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ba4ac44884e74e71785e8d5cdbca08e5c8e254a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;*/*&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt; : &lt;code&gt;*/*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10787fb9b41b13726ea9e2225ea2df79c2761a1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;application/json&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt; : &lt;code&gt;application/json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d10a8e1806f8293f87972a098436650698e284ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt; : &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07d0329ffcc4fd31deac843ed7a0337d9b8e1bdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;multipart/form-data; boundary=BoUnDaRyStRiNg&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt; : &lt;code&gt;multipart/form-data; boundary=BoUnDaRyStRiNg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84dd75d042cfa53879c3a076727a395ac3eb4f01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;multipart/form-data&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt; : &lt;code&gt;multipart/form-data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="868cc724cc5e680f8ba1257d90986968ddaa2508" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.media_type&lt;/strong&gt;: &lt;code&gt;text/html&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.media_type&lt;/strong&gt; : &lt;code&gt;text/html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93acb68e002621b2ad9f5f96f9b27254e227cb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/admin.html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.template&lt;/strong&gt; : &lt;code&gt;'rest_framework/admin.html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aeca56fef67c1f9616df0b97e25b7909d312f3ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/api.html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.template&lt;/strong&gt; : &lt;code&gt;'rest_framework/api.html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ab854b35931f7e64a5c448a003cf88983c1afea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.template&lt;/strong&gt;: &lt;code&gt;'rest_framework/horizontal/form.html'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;.template&lt;/strong&gt; : &lt;code&gt;'rest_framework/horizontal/form.html'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0a205d2b3de2c4f756a0f007ab11b2eb18591c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arguments&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Arguments&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="d8f0ab47bda0619b92186595c8e1c70b2e98477b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Base methods&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;기본 방법&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="fe7f4e8546d0b334be1aacc6674c3aed4b6f4bbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Basic settings&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;기본 설정&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="f060cfc8b19362f545fb0a6933c40944a7c93b6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Filtering&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Filtering&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="63bc4ef70839dccd2d01f224b1876e56e3f73643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache&quot;&gt;&lt;code&gt;cache_page&lt;/code&gt;&lt;/a&gt; decorator only caches the &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; responses with status 200.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache&quot;&gt; &lt;code&gt;cache_page&lt;/code&gt; 의&lt;/a&gt; 장식 만 캐시 &lt;code&gt;GET&lt;/code&gt; 및 &lt;code&gt;HEAD&lt;/code&gt; 상태 (200)로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="d38f9736e1a2fdfb8ff87c806788a7e75f3472e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Don't forget that &lt;strong&gt;authentication by itself won't allow or disallow an incoming request&lt;/strong&gt;, it simply identifies the credentials that the request was made with.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 음주 것을 잊지 &lt;strong&gt;허용하거나 들어오는 요청을 허용하지 않습니다 자체 인증을&lt;/strong&gt; , 단순히 요청으로 만들어 졌다고 자격 증명을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="91723a1bdbc899542833af21fd1571e5180ba148" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If a client sends malformed content, then accessing &lt;code&gt;request.data&lt;/code&gt; may raise a &lt;code&gt;ParseError&lt;/code&gt;. By default REST framework's &lt;code&gt;APIView&lt;/code&gt; class or &lt;code&gt;@api_view&lt;/code&gt; decorator will catch the error and return a &lt;code&gt;400 Bad Request&lt;/code&gt; response.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 클라이언트가 잘못된 형식의 콘텐츠를 보내면 &lt;code&gt;request.data&lt;/code&gt; 에 액세스 하면 &lt;code&gt;ParseError&lt;/code&gt; 가 발생할 수 있습니다 . 기본적으로 REST 프레임 워크의 &lt;code&gt;APIView&lt;/code&gt; 클래스 또는 &lt;code&gt;@api_view&lt;/code&gt; 데코레이터는 오류를 포착하고 &lt;code&gt;400 Bad Request&lt;/code&gt; 응답을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="03ebf90a33067debf6ea2b800027583eb9c836c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you use &lt;code&gt;BasicAuthentication&lt;/code&gt; in production you must ensure that your API is only available over &lt;code&gt;https&lt;/code&gt;. You should also ensure that your API clients will always re-request the username and password at login, and will never store those details to persistent storage.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 프로덕션에서 &lt;code&gt;BasicAuthentication&lt;/code&gt; 을 사용하는 경우 API가 &lt;code&gt;https&lt;/code&gt; 를 통해서만 사용 가능해야합니다 . 또한 API 클라이언트가 로그인시 항상 사용자 이름과 비밀번호를 다시 요청하고 해당 세부 정보를 영구 저장소에 저장하지 않도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="80305cfd923a97bd1f2c416c52a5794bcc8cc04c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you use &lt;code&gt;TokenAuthentication&lt;/code&gt; in production you must ensure that your API is only available over &lt;code&gt;https&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 프로덕션에서 &lt;code&gt;TokenAuthentication&lt;/code&gt; 을 사용하는 경우 API가 &lt;code&gt;https&lt;/code&gt; 를 통해서만 사용 가능해야합니다 .</target>
        </trans-unit>
        <trans-unit id="21472781acf1d47b41b6918f73421e4a8f0deac1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you want to use a different keyword in the header, such as &lt;code&gt;Bearer&lt;/code&gt;, simply subclass &lt;code&gt;TokenAuthentication&lt;/code&gt; and set the &lt;code&gt;keyword&lt;/code&gt; class variable.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;Bearer&lt;/code&gt; 와 같이 헤더에 다른 키워드를 사용하려면 &lt;code&gt;TokenAuthentication&lt;/code&gt; 을 서브 클래스 화 하고 &lt;code&gt;keyword&lt;/code&gt; 클래스 변수를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="bcaa62e49062f1e1ce3c27d2a5895fd4a519798b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If your &lt;code&gt;&amp;lt;field_name&amp;gt;&lt;/code&gt; is declared on your serializer with the parameter &lt;code&gt;required=False&lt;/code&gt; then this validation step will not take place if the field is not included.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 귀하의 경우 &lt;code&gt;&amp;lt;field_name&amp;gt;&lt;/code&gt; 매개 변수를 사용하여 시리얼 라이저에 선언 &lt;code&gt;required=False&lt;/code&gt; 필드가 포함되어 있지 않은 경우 다음이 검증 단계가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ae37962915721839f8344c3b213d739ecf3134f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Make sure to run &lt;code&gt;manage.py migrate&lt;/code&gt; after changing your settings. The &lt;code&gt;rest_framework.authtoken&lt;/code&gt; app provides Django database migrations.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 설정을 변경 한 후 &lt;code&gt;manage.py migrate&lt;/code&gt; 를 실행하십시오 . &lt;code&gt;rest_framework.authtoken&lt;/code&gt; 응용 프로그램은 장고 데이터베이스 마이그레이션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="26877f649edbf86ffb771aff1c14a8f2a74f75cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The relational fields are declared in &lt;code&gt;relations.py&lt;/code&gt;, but by convention you should import them from the &lt;code&gt;serializers&lt;/code&gt; module, using &lt;code&gt;from rest_framework import serializers&lt;/code&gt; and refer to fields as &lt;code&gt;serializers.&amp;lt;FieldName&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 관계형 필드에 선언되어있다 &lt;code&gt;relations.py&lt;/code&gt; 하지만 규칙에 의해 당신이 그들을 가져와야 &lt;code&gt;serializers&lt;/code&gt; 사용, 모듈 &lt;code&gt;from rest_framework import serializers&lt;/code&gt; 와 같이 필드를 참조하십시오 &lt;code&gt;serializers.&amp;lt;FieldName&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc2378250e0134633c06d25c9bc661f11e181a2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The serializer fields are declared in &lt;code&gt;fields.py&lt;/code&gt;, but by convention you should import them using &lt;code&gt;from rest_framework import serializers&lt;/code&gt; and refer to fields as &lt;code&gt;serializers.&amp;lt;FieldName&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; serializer 필드는 &lt;code&gt;fields.py&lt;/code&gt; 에 선언되어 있지만 일반적 &lt;code&gt;from rest_framework import serializers&lt;/code&gt; 에서 필드를 가져 와서 &lt;code&gt;serializers.&amp;lt;FieldName&amp;gt;&lt;/code&gt; 으로 참조해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8fff364fc9724aee430c5d78bacce354e573d76c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; To exit the virtual environment at any time, just type &lt;code&gt;deactivate&lt;/code&gt;. For more information see the &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 언제든지 가상 환경을 종료하려면 &lt;code&gt;deactivate&lt;/code&gt; 를 입력하십시오 . 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="01078865f56074d6db2e97f40eb58441da6f22c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When your custom authenticator is invoked by the request object's &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; properties, you may see an &lt;code&gt;AttributeError&lt;/code&gt; re-raised as a &lt;code&gt;WrappedAttributeError&lt;/code&gt;. This is necessary to prevent the original exception from being suppressed by the outer property access. Python will not recognize that the &lt;code&gt;AttributeError&lt;/code&gt; originates from your custom authenticator and will instead assume that the request object does not have a &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; property. These errors should be fixed or otherwise handled by your authenticator.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 요청 오브젝트의 &lt;code&gt;.user&lt;/code&gt; 또는 &lt;code&gt;.auth&lt;/code&gt; 특성에 의해 사용자 정의 인증자가 호출 되면 &lt;code&gt;AttributeError&lt;/code&gt; 가 &lt;code&gt;WrappedAttributeError&lt;/code&gt; 로 재확인 될 수 있습니다 . 외부 속성 액세스로 인해 원래 예외가 억제되지 않도록하는 데 필요합니다. Python은 &lt;code&gt;AttributeError&lt;/code&gt; 가 사용자 정의 인증 자에서 발생 한다는 것을 인식 하지 못하고 대신 요청 오브젝트에 &lt;code&gt;.user&lt;/code&gt; 또는 &lt;code&gt;.auth&lt;/code&gt; 특성 이 없다고 가정합니다 . 이 오류는 인증자가 수정하거나 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="d0c9b6e097494ae189da2f45d4c4445e53e877cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You may see a &lt;code&gt;WrappedAttributeError&lt;/code&gt; raised when calling the &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; properties. These errors originate from an authenticator as a standard &lt;code&gt;AttributeError&lt;/code&gt;, however it's necessary that they be re-raised as a different exception type in order to prevent them from being suppressed by the outer property access. Python will not recognize that the &lt;code&gt;AttributeError&lt;/code&gt; originates from the authenticator and will instead assume that the request object does not have a &lt;code&gt;.user&lt;/code&gt; or &lt;code&gt;.auth&lt;/code&gt; property. The authenticator will need to be fixed.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;.user&lt;/code&gt; 또는 &lt;code&gt;.auth&lt;/code&gt; 속성을 호출 할 때 &lt;code&gt;WrappedAttributeError&lt;/code&gt; 가 발생할 수 있습니다 . 이러한 오류는 인증 자에서 표준 &lt;code&gt;AttributeError&lt;/code&gt; 로 발생하지만 외부 속성 액세스로 인해 오류가 억제되지 않도록 다른 예외 유형으로 다시 발생해야합니다. 파이썬은 &lt;code&gt;AttributeError&lt;/code&gt; 가 인증 자에서 발생 한다는 것을 인식하지 못하고 대신 요청 객체에 &lt;code&gt;.user&lt;/code&gt; 또는 &lt;code&gt;.auth&lt;/code&gt; 속성 이 없다고 가정합니다 . 인증자는 수정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dbb4b82d0263c2c519ac5a3eec94cc3631a2a1b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; it supports &amp;amp; (and), | (or) and ~ (not).</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; &amp;amp; (및), | (또는) 및 ~ (아님).</target>
        </trans-unit>
        <trans-unit id="b4623f08f297bab1143d09b22aad5c41ad73bdcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; when you set new permission classes through class attribute or decorators you're telling the view to ignore the default list set over the &lt;strong&gt;settings.py&lt;/strong&gt; file.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 클래스 속성 또는 데코레이터를 통해 새 권한 클래스를 설정하면 &lt;strong&gt;settings.py&lt;/strong&gt; 파일에 설정된 기본 목록을 무시하도록 뷰에 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="103fb76e957e5bf6916c1003c79d077093a39beb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &quot;q&quot; values are not taken into account by REST framework when determining preference. The use of &quot;q&quot; values negatively impacts caching, and in the author's opinion they are an unnecessary and overcomplicated approach to content negotiation.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &quot;q&quot;값은 환경 설정을 결정할 때 REST 프레임 워크에서 고려되지 않습니다. &quot;q&quot;값의 사용은 캐싱에 부정적인 영향을 미치며 저자의 견해로는 내용 협상에 대한 불필요하고 지나치게 복잡한 접근 방식입니다.</target>
        </trans-unit>
        <trans-unit id="dc14c4af899b6dcde5f3c8af35fdabd35d99745c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;force_authenticate&lt;/code&gt; directly sets &lt;code&gt;request.user&lt;/code&gt; to the in-memory &lt;code&gt;user&lt;/code&gt; instance. If you are re-using the same &lt;code&gt;user&lt;/code&gt; instance across multiple tests that update the saved &lt;code&gt;user&lt;/code&gt; state, you may need to call &lt;a href=&quot;https://docs.djangoproject.com/en/1.11/ref/models/instances/#django.db.models.Model.refresh_from_db&quot;&gt;&lt;code&gt;refresh_from_db()&lt;/code&gt;&lt;/a&gt; between tests.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;force_authenticate&lt;/code&gt; 는 &lt;code&gt;request.user&lt;/code&gt; 를 인 메모리 &lt;code&gt;user&lt;/code&gt; 인스턴스로 직접 설정 합니다. 저장된 &lt;code&gt;user&lt;/code&gt; 상태 를 업데이트하는 여러 테스트 에서 동일한 &lt;code&gt;user&lt;/code&gt; 인스턴스를 재사용하는 경우 테스트 간에 &lt;a href=&quot;https://docs.djangoproject.com/en/1.11/ref/models/instances/#django.db.models.Model.refresh_from_db&quot;&gt; &lt;code&gt;refresh_from_db()&lt;/code&gt; &lt;/a&gt; 를 호출해야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e14b1084a827da2c95d807ceb1ed1d377e597335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For basic &lt;code&gt;APIView&lt;/code&gt; subclasses, default introspection is essentially limited to the URL kwarg path parameters. For &lt;code&gt;GenericAPIView&lt;/code&gt; subclasses, which includes all the provided class based views, &lt;code&gt;AutoSchema&lt;/code&gt; will attempt to introspect serialiser, pagination and filter fields, as well as provide richer path field descriptions. (The key hooks here are the relevant &lt;code&gt;GenericAPIView&lt;/code&gt; attributes and methods: &lt;code&gt;get_serializer&lt;/code&gt;, &lt;code&gt;pagination_class&lt;/code&gt;, &lt;code&gt;filter_backends&lt;/code&gt; and so on.)</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 기본 &lt;code&gt;APIView&lt;/code&gt; 서브 클래스의 경우 기본 내부 검사는 기본적으로 URL kwarg 경로 매개 변수로 제한됩니다. 들면 &lt;code&gt;GenericAPIView&lt;/code&gt; 에 제공된 모든 클래스 기반의 뷰를 포함하는 서브 클래스, &lt;code&gt;AutoSchema&lt;/code&gt; 가 아니라 풍부한 경로 필드 설명을 제공하기 때문에, 인트로 시리얼 라이저, 페이징 및 필터 분야를 시도 할 것이다. 여기서 주요 후크는 &lt;code&gt;get_serializer&lt;/code&gt; , &lt;code&gt;pagination_class&lt;/code&gt; , &lt;code&gt;filter_backends&lt;/code&gt; 등 의 관련 &lt;code&gt;GenericAPIView&lt;/code&gt; 속성 및 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="8b27d4431744882d14bd52eaf81c6150342c81e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If &lt;code&gt;DEBUG=True&lt;/code&gt;, Django's standard traceback error page will be displayed instead of rendering the HTTP status code and text.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;DEBUG=True&lt;/code&gt; 이면 HTTP 상태 코드와 텍스트를 렌더링하는 대신 Django의 표준 역 추적 오류 페이지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="15bec20fd3f19a0b202fe8d9591164e522abb0fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If using namespacing with hyperlinked serializers you'll also need to ensure that any &lt;code&gt;view_name&lt;/code&gt; parameters on the serializers correctly reflect the namespace. In the examples above you'd need to include a parameter such as &lt;code&gt;view_name='app_name:user-detail'&lt;/code&gt; for serializer fields hyperlinked to the user detail view.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 하이퍼 링크 된 직렬 변환기와 함께 네임 스페이스를 사용하는 경우 직렬 변환기의 &lt;code&gt;view_name&lt;/code&gt; 매개 변수가 네임 스페이스를 올바르게 반영 하는지 확인해야 합니다. 위의 예에서는 사용자 세부 사항보기에 하이퍼 링크 된 직렬 변환기 필드에 대해 &lt;code&gt;view_name='app_name:user-detail'&lt;/code&gt; 과 같은 매개 변수를 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="93a5e71c06ca3c7f6443329871646fcb267d8ebf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If you need object level &lt;code&gt;view&lt;/code&gt; permissions for &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;OPTIONS&lt;/code&gt; requests and are using django-guardian for your object-level permissions backend, you'll want to consider using the &lt;code&gt;DjangoObjectPermissionsFilter&lt;/code&gt; class provided by the &lt;a href=&quot;https://github.com/rpkilby/django-rest-framework-guardian&quot;&gt;&lt;code&gt;djangorestframework-guardian&lt;/code&gt; package&lt;/a&gt;. It ensures that list endpoints only return results including objects for which the user has appropriate view permissions.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;HEAD&lt;/code&gt; 및 &lt;code&gt;OPTIONS&lt;/code&gt; 요청에 대한 오브젝트 레벨 &lt;code&gt;view&lt;/code&gt; 권한 이 필요하고 오브젝트 레벨 권한 백엔드에 django-guardian을 사용하는 경우 &lt;a href=&quot;https://github.com/rpkilby/django-rest-framework-guardian&quot;&gt; &lt;code&gt;djangorestframework-guardian&lt;/code&gt; &lt;/a&gt; 패키지 에서 제공 하는 &lt;code&gt;DjangoObjectPermissionsFilter&lt;/code&gt; 클래스를 사용하는 것이 좋습니다 . 리스트 엔드 포인트가 사용자에게 적절한보기 권한이있는 오브젝트를 포함하여 결과 만 리턴하도록합니다.</target>
        </trans-unit>
        <trans-unit id="dff567660951833def2d4b69004497081cc4cd8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: It's worth noting that Django's standard &lt;code&gt;RequestFactory&lt;/code&gt; doesn't need to include this option, because when using regular Django the CSRF validation takes place in middleware, which is not run when testing views directly. When using REST framework, CSRF validation takes place inside the view, so the request factory needs to disable view-level CSRF checks.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Django의 표준 &lt;code&gt;RequestFactory&lt;/code&gt; 는이 옵션을 포함 할 필요가 없습니다. 정기적 인 Django를 사용할 때 CSRF 유효성 검사는 미들웨어에서 발생하기 때문에 뷰를 직접 테스트 할 때 실행되지 않습니다. REST 프레임 워크를 사용할 때 CSRF 유효성 검증이보기 내에서 발생하므로 요청 팩토리는보기 레벨 CSRF 검사를 사용 안함으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bbeac0c886d413bf090b2a85e6568dcc6371a891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Make sure you also add &lt;code&gt;'owner',&lt;/code&gt; to the list of fields in the inner &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 내부 &lt;code&gt;Meta&lt;/code&gt; 클래스 의 필드 목록에 &lt;code&gt;'owner',&lt;/code&gt; 도 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="833d09d89e082c75fd00592909d699d9066e4bfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;AdminRenderer&lt;/code&gt; is only able to include links to detail pages when a properly configured &lt;code&gt;URL_FIELD_NAME&lt;/code&gt; (&lt;code&gt;url&lt;/code&gt; by default) attribute is present in the data. For &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; this will be the case, but for &lt;code&gt;ModelSerializer&lt;/code&gt; or plain &lt;code&gt;Serializer&lt;/code&gt; classes you'll need to make sure to include the field explicitly. For example here we use models &lt;code&gt;get_absolute_url&lt;/code&gt; method:</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;AdminRenderer&lt;/code&gt; 는 올바르게 구성된 &lt;code&gt;URL_FIELD_NAME&lt;/code&gt; ( 기본적으로 &lt;code&gt;url&lt;/code&gt; ) 속성이 데이터에 존재 하는 경우 세부 사항 페이지에 대한 링크를 포함 할 수 있습니다 . 들어 &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; 이 경우 수 있지만에 대한 &lt;code&gt;ModelSerializer&lt;/code&gt; 또는 일반 &lt;code&gt;Serializer&lt;/code&gt; 클래스를 명시 적으로 필드를 포함 할 수 있는지 확인해야합니다. 예를 들어 여기서는 &lt;code&gt;get_absolute_url&lt;/code&gt; 메소드 모델을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="eefdf0e2bdec1f22ba0c6e2f0d01bc590d2ea368" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;UniqueFor&amp;lt;Range&amp;gt;Validator&lt;/code&gt; classes impose an implicit constraint that the fields they are applied to are always treated as required. Fields with &lt;code&gt;default&lt;/code&gt; values are an exception to this as they always supply a value even when omitted from user input.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;UniqueFor&amp;lt;Range&amp;gt;Validator&lt;/code&gt; 클래스는 적용되는 필드가 항상 필요에 따라 처리된다는 암시 적 제약 조건을 적용합니다. &lt;code&gt;default&lt;/code&gt; 이있는 필드 는 사용자 입력에서 생략 된 경우에도 항상 값을 제공하므로 예외입니다.</target>
        </trans-unit>
        <trans-unit id="3afb9a3ff000ffd6294a999de4cf9800911bc7c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;UniqueTogetherValidator&lt;/code&gt; class always imposes an implicit constraint that all the fields it applies to are always treated as required. Fields with &lt;code&gt;default&lt;/code&gt; values are an exception to this as they always supply a value even when omitted from user input.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;UniqueTogetherValidator&lt;/code&gt; 클래스는 항상 적용되는 모든 필드가 항상 필요에 따라 처리되도록 암시 적 제약 조건을 부과합니다. &lt;code&gt;default&lt;/code&gt; 이있는 필드 는 사용자 입력에서 생략 된 경우에도 항상 값을 제공하므로 예외입니다.</target>
        </trans-unit>
        <trans-unit id="c8962de2ae647f035bd085e382cb1bb9d448f30d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;basename&lt;/code&gt; argument is used to specify the initial part of the view name pattern. In the example above, that's the &lt;code&gt;user&lt;/code&gt; or &lt;code&gt;account&lt;/code&gt; part.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;basename&lt;/code&gt; 인수는보기 이름 패턴의 초기 부분을 지정하는 데 사용됩니다. 위의 예에서 이는 &lt;code&gt;user&lt;/code&gt; 또는 &lt;code&gt;account&lt;/code&gt; 부분입니다.</target>
        </trans-unit>
        <trans-unit id="3afcc950983c6c1be340bbf0fc16d656b9d0384e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The code for this tutorial is available in the &lt;a href=&quot;https://github.com/encode/rest-framework-tutorial&quot;&gt;encode/rest-framework-tutorial&lt;/a&gt; repository on GitHub. The completed implementation is also online as a sandbox version for testing, &lt;a href=&quot;https://restframework.herokuapp.com/&quot;&gt;available here&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 튜토리얼의 코드는 GitHub 의 &lt;a href=&quot;https://github.com/encode/rest-framework-tutorial&quot;&gt;encode / rest-framework-tutorial&lt;/a&gt; 저장소에서 사용할 수 있습니다. 완성 된 구현은 테스트를위한 샌드 박스 버전으로 온라인으로 &lt;a href=&quot;https://restframework.herokuapp.com/&quot;&gt;제공됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d2d732a965eadf0c3c6b2dedb8d9383dfdba839" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The full methods, attributes on, and relations between Django REST Framework's &lt;code&gt;APIView&lt;/code&gt;, &lt;code&gt;GenericAPIView&lt;/code&gt;, various &lt;code&gt;Mixins&lt;/code&gt;, and &lt;code&gt;Viewsets&lt;/code&gt; can be initially complex. In addition to the documentation here, the &lt;a href=&quot;http://www.cdrf.co&quot;&gt;Classy Django REST Framework&lt;/a&gt; resource provides a browsable reference, with full methods and attributes, for each of Django REST Framework's class-based views.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Django REST Framework의 &lt;code&gt;APIView&lt;/code&gt; , &lt;code&gt;GenericAPIView&lt;/code&gt; , 다양한 &lt;code&gt;Mixins&lt;/code&gt; 및 &lt;code&gt;Viewsets&lt;/code&gt; 간의 전체 메소드, 속성 및 관계는 처음에는 복잡 할 수 있습니다. 여기의 문서 외에도 &lt;a href=&quot;http://www.cdrf.co&quot;&gt;Classy Django REST Framework&lt;/a&gt; 리소스는 각 장고 REST 프레임 워크의 클래스 기반 뷰에 대한 전체 메소드 및 속성을 찾아 볼 수있는 참조를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0eda49a5a6590fa751f3331053f48408fbfce45a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The instance-level &lt;code&gt;has_object_permission&lt;/code&gt; method will only be called if the view-level &lt;code&gt;has_permission&lt;/code&gt; checks have already passed. Also note that in order for the instance-level checks to run, the view code should explicitly call &lt;code&gt;.check_object_permissions(request, obj)&lt;/code&gt;. If you are using the generic views then this will be handled for you by default. (Function-based views will need to check object permissions explicitly, raising &lt;code&gt;PermissionDenied&lt;/code&gt; on failure.)</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 인스턴스 수준 &lt;code&gt;has_object_permission&lt;/code&gt; 메서드는 뷰 수준 &lt;code&gt;has_permission&lt;/code&gt; 검사가 이미 통과 된 경우에만 호출됩니다 . 또한 인스턴스 레벨 검사를 실행하려면 뷰 코드가 명시 적으로 &lt;code&gt;.check_object_permissions(request, obj)&lt;/code&gt; 호출해야합니다 . 일반 뷰를 사용하는 경우 기본적으로이 뷰가 처리됩니다. (기능 기반보기는 오브젝트 권한을 명시 적으로 확인 하여 실패시 &lt;code&gt;PermissionDenied&lt;/code&gt; 를 발생 시켜야합니다 .)</target>
        </trans-unit>
        <trans-unit id="8d390b1b575157e1078387d52a0d5b915ff16fd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is a special-case where a read-only field is part of a &lt;code&gt;unique_together&lt;/code&gt; constraint at the model level. In this case the field is required by the serializer class in order to validate the constraint, but should also not be editable by the user.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 읽기 전용 필드가 모델 수준에서 &lt;code&gt;unique_together&lt;/code&gt; 제약 조건의 일부인 특수한 경우가 있습니다. 이 경우 제약 조건을 확인하기 위해 serializer 클래스에 필드가 필요하지만 사용자가 편집 할 수 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="ff1530926597c142e16bd6a8ce8e4c8f2f2f7c2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: These methods replace the old-style version 2.x &lt;code&gt;pre_save&lt;/code&gt;, &lt;code&gt;post_save&lt;/code&gt;, &lt;code&gt;pre_delete&lt;/code&gt; and &lt;code&gt;post_delete&lt;/code&gt; methods, which are no longer available.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 메소드 는 더 이상 사용할 수없는 이전 스타일 버전 2.x &lt;code&gt;pre_save&lt;/code&gt; , &lt;code&gt;post_save&lt;/code&gt; , &lt;code&gt;pre_delete&lt;/code&gt; 및 &lt;code&gt;post_delete&lt;/code&gt; 메소드를 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="0ed17ddeae23dfaa709c76bca14ca3cc5e43829f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This field is designed for objects that map to a URL that accepts a single URL keyword argument, as set using the &lt;code&gt;lookup_field&lt;/code&gt; and &lt;code&gt;lookup_url_kwarg&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 필드는 &lt;code&gt;lookup_field&lt;/code&gt; 및 &lt;code&gt;lookup_url_kwarg&lt;/code&gt; 인수를 사용하여 설정 한대로 단일 URL 키워드 인수를 허용하는 URL에 매핑되는 객체를 위해 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5d630001d335773a65142a5fa59d8dfff858a7eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When developing client applications always remember to make sure you're setting the &lt;code&gt;Content-Type&lt;/code&gt; header when sending data in an HTTP request.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 클라이언트 응용 프로그램을 개발할 때는 항상 HTTP 요청으로 데이터를 보낼 때 &lt;code&gt;Content-Type&lt;/code&gt; 헤더를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="602d67bca00f03e6291abedf5c504cf7c3e8a8c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When using &lt;code&gt;APIRequestFactory&lt;/code&gt;, the object that is returned is Django's standard &lt;code&gt;HttpRequest&lt;/code&gt;, and not REST framework's &lt;code&gt;Request&lt;/code&gt; object, which is only generated once the view is called.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;APIRequestFactory&lt;/code&gt; 를 사용할 때 반환되는 객체는 Django의 표준 &lt;code&gt;HttpRequest&lt;/code&gt; 이며 REST 프레임 워크의 &lt;code&gt;Request&lt;/code&gt; 객체는 아니며 뷰가 호출 된 후에 만 ​​생성됩니다.</target>
        </trans-unit>
        <trans-unit id="251bca831a27d1594fb2805112bd4cd6484fc26f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: With the exception of &lt;code&gt;DjangoObjectPermissions&lt;/code&gt;, the provided permission classes in &lt;code&gt;rest_framework.permissions&lt;/code&gt;&lt;strong&gt;do not&lt;/strong&gt; implement the methods necessary to check object permissions.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 제외 &lt;code&gt;DjangoObjectPermissions&lt;/code&gt; 에서 제공된 권한 클래스 &lt;code&gt;rest_framework.permissions&lt;/code&gt; 가&lt;strong&gt;되지 않는&lt;/strong&gt; 개체 사용 권한을 확인하는 데 필요한 방법을 구현한다.</target>
        </trans-unit>
        <trans-unit id="a924623a71ee13433bcfd1fb9d31366386377570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other methods&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;다른 방법&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="9e0912a72d8c368d94e6315b22b2cd83999f194d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pagination&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Pagination&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="f4da174bcb126ec9f594065e7ee6a6fc5900979e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Request&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Request&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="840d79ed30ab86347aa15088b8588c646ad92b31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Response&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Response&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="9bcaf04c838e03b724fe7716ae3a6ce3262e8422" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Save and deletion hooks&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;후크 저장 및 삭제&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="4e7e4a9ab1fed10f0b7b917d435ba9402021d67f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;.render()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;.render()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad0363c489efcc54f0e87908a53f653a5b7377af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;@api_view(http_method_names=['GET'])&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;@api_view(http_method_names=['GET'])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06b850ce5ad14406285d4979096dac50bda1a362" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;APIException()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;APIException()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3527d596250809b5dc9e81d3e5d774189c5078b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;AuthenticationFailed(detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;AuthenticationFailed(detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05b99eaf1c0f3f8f2318e04c792dabecd93f93f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;BooleanField()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;BooleanField()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24115d61c25524a5d1d941880887b299249ef841" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;CharField(max_length=None, min_length=None, allow_blank=False, trim_whitespace=True)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;CharField(max_length=None, min_length=None, allow_blank=False, trim_whitespace=True)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4dde148085f78daa3fcac4e51170069af339441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ChoiceField(choices)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ChoiceField(choices)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7b0f582c189191a0ca3f37a6dc39f906b058f88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;DateField(format=api_settings.DATE_FORMAT, input_formats=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;DateField(format=api_settings.DATE_FORMAT, input_formats=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3840d357933ef5a6a00350305da6a70042772580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;DateTimeField(format=api_settings.DATETIME_FORMAT, input_formats=None, default_timezone=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;DateTimeField(format=api_settings.DATETIME_FORMAT, input_formats=None, default_timezone=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="166794a4fafde0a245bee61efa9842eae1bd98d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;DurationField(max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;DurationField(max_value=None, min_value=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7d307f154b71ca1a52163fddca31acf3df98dd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;EmailField(max_length=None, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;EmailField(max_length=None, min_length=None, allow_blank=False)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f168a3a67035eea9bb61e8df2350bca13f2f4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;FileField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;FileField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f4dc082b13d247b7163e9e4f80c94b8bb867e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=None, **kwargs)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=None, **kwargs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c61c16609710d1e77ee99cd162979fd5b9010449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ImageField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;ImageField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58e3e1b8e1ba392a5467ffacf5027e6d2ce5a9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;MethodNotAllowed(method, detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;MethodNotAllowed(method, detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e57c435c4cbe504efa27a102820521d00f98e411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ModelField(model_field=&amp;lt;Django ModelField instance&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;ModelField(model_field=&amp;lt;Django ModelField instance&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d70e447e4ded6aed1e2e9603fb00f286a617bef1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;MultipleChoiceField(choices)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;MultipleChoiceField(choices)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a35107bfc1b3882c992475073fdd83906294d178" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NotAcceptable(detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;NotAcceptable(detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e433ebce391ab5be282e10463af41f1d41e5b2b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NotAuthenticated(detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;NotAuthenticated(detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8983fea4c11cbaa29eb426c79e005ba8db22546" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NotFound(detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;NotFound(detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faa71d617840a05b0f03c42c9059a773f14b75db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NullBooleanField()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;NullBooleanField()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44c9dee61d2a1cf26be3a5d3f3f3f61ff02436f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ParseError(detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;ParseError(detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3772d0bdb3f0be7d4430cbdb1ab0d13d2391f364" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;PermissionDenied(detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;PermissionDenied(detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7eda1f990c8a35a6180b5d0aa016f84138762e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;RegexField(regex, max_length=None, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;RegexField(regex, max_length=None, min_length=None, allow_blank=False)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1d572276c000f804a49a62b48d102b9f906be86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;Response(data, status=None, template_name=None, headers=None, content_type=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;Response(data, status=None, template_name=None, headers=None, content_type=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0925c1819f8ed79c2cf02ee5925d12d4026fd74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;SlugField(max_length=50, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;SlugField(max_length=50, min_length=None, allow_blank=False)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa421ad8d150991128f41ed597e653b1455ab695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;Throttled(wait=None, detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;Throttled(wait=None, detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fb5e2213bec048f6bcb5116122b95b3d60fd7f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;TimeField(format=api_settings.TIME_FORMAT, input_formats=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;TimeField(format=api_settings.TIME_FORMAT, input_formats=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39352a61fe317f5d2af34359511d40f5b5d2b656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;URLField(max_length=200, min_length=None, allow_blank=False)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;URLField(max_length=200, min_length=None, allow_blank=False)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42ff5d3920b67b6a4b22d8dea8a2beac45ab5d85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;UUIDField(format='hex_verbose')&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;UUIDField(format='hex_verbose')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbf9b01d763cb2b945a0528c57fb402d01162969" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;UnsupportedMediaType(media_type, detail=None, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;UnsupportedMediaType(media_type, detail=None, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aee5590ef734e82c5a561fff9c179ca21559117e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;ValidationError(detail, code=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;ValidationError(detail, code=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb3fbf04d39cb24b74030687cc96070bd33ea91c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;reverse(viewname, *args, **kwargs)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;reverse(viewname, *args, **kwargs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="310c2ae0d5405880ce9ced89feaac3b045ba269e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature:&lt;/strong&gt;&lt;code&gt;reverse_lazy(viewname, *args, **kwargs)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명 : &lt;/strong&gt; &lt;code&gt;reverse_lazy(viewname, *args, **kwargs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e27467c27bed299f6ea5fa5b83417e46f030eee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;DecimalField(max_digits, decimal_places, coerce_to_string=None, max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;DecimalField(max_digits, decimal_places, coerce_to_string=None, max_value=None, min_value=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82175a6a37f10e42eb81b41c777c59a3fba7cd49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;DictField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;DictField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf8847cef19d572674220dfc65aeb59e293fd90b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;FloatField(max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;FloatField(max_value=None, min_value=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff1b29c71d5fd55e24efcb929fd2b61dcbb10f02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;HStoreField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;HStoreField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea87d4845db17ab339700f6fa455935e78043448" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;HiddenField()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;HiddenField()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d770c017f867ab622673905f1783a3c4ae78e077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;IPAddressField(protocol='both', unpack_ipv4=False, **options)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;IPAddressField(protocol='both', unpack_ipv4=False, **options)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d07c2fb0e88adf148087da7fe061991d06a2899" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;IntegerField(max_value=None, min_value=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;IntegerField(max_value=None, min_value=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b40141796fb5a7150d932cbbb180748fe6e0341" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;JSONField(binary, encoder)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;JSONField(binary, encoder)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="462184317b5a8aeb29a95a599f1d24d19ad6d4ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;ListField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True, min_length=None, max_length=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;ListField(child=&amp;lt;A_FIELD_INSTANCE&amp;gt;, allow_empty=True, min_length=None, max_length=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe35fd106274bef1a095e9cea0c0003f34b90bb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;ReadOnlyField()&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;ReadOnlyField()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31ff4849bf79b9220a298e28781d625724762791" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: &lt;code&gt;SerializerMethodField(method_name=None)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : &lt;code&gt;SerializerMethodField(method_name=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07b3327f07563eda2b3e6de9352d98393c5c9fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Signature&lt;/strong&gt;: format_suffix_patterns(urlpatterns, suffix_required=False, allowed=None)</source>
          <target state="translated">&lt;strong&gt;서명&lt;/strong&gt; : format_suffix_patterns (urlpatterns, suffix_required = False, allowed = None)</target>
        </trans-unit>
        <trans-unit id="0d0d11a4125a8f9226225a3321ae6c230da0cb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;ModelSerializer&lt;/code&gt; class is the same as a regular &lt;code&gt;Serializer&lt;/code&gt; class, except that&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ModelSerializer&lt;/code&gt; 의 클래스는 일반과 동일 &lt;code&gt;Serializer&lt;/code&gt; 것을 제외하고, 클래스&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="d15db84739dd2b1fdd753a729d9855519491a68a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following settings are used to generate the view names and descriptions, as used in responses to &lt;code&gt;OPTIONS&lt;/code&gt; requests, and as used in the browsable API.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다음 설정은 &lt;code&gt;OPTIONS&lt;/code&gt; 요청 에 대한 응답 및 찾아보기 가능한 API에서 사용되는 보기 이름 및 설명을 생성하는 데 사용됩니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31eb10f22c896fac17b957df55cb462a7858bd54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;: Properly matching together hyperlinked representations and your URL conf can sometimes be a bit fiddly. Printing the &lt;code&gt;repr&lt;/code&gt; of a &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; instance is a particularly useful way to inspect exactly which view names and lookup fields the relationships are expected to map too.</source>
          <target state="translated">&lt;strong&gt;팁&lt;/strong&gt; : 하이퍼 링크 된 표현과 URL conf를 올바르게 일치시키는 것은 때때로 약간 어색 할 수 있습니다. &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; 인스턴스 의 &lt;code&gt;repr&lt;/code&gt; 을 인쇄하면 관계가 매핑 될 것으로 예상되는 뷰 이름과 조회 필드를 정확하게 검사하는 데 특히 유용한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="df72b814ddb962154e2b2a04e11e9a5369fdb2c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Always use Django's standard login view when creating login pages. This will ensure your login views are properly protected.</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : 로그인 페이지를 만들 때는 항상 Django의 표준 로그인보기를 사용하십시오. 그러면 로그인보기가 올바르게 보호됩니다.</target>
        </trans-unit>
        <trans-unit id="233afa537d310ffc48ddfd9e7d2eabd4995bc731" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: If you require cross-domain AJAX requests, you should generally be using the more modern approach of &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;CORS&lt;/a&gt; as an alternative to &lt;code&gt;JSONP&lt;/code&gt;. See the &lt;a href=&quot;https://www.django-rest-framework.org/topics/ajax-csrf-cors/&quot;&gt;CORS documentation&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : 도메인 간 AJAX 요청이 필요한 경우 일반적으로 &lt;code&gt;JSONP&lt;/code&gt; 대신 현대적인 &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;CORS&lt;/a&gt; 접근 방식을 사용해야합니다 . 자세한 내용은 &lt;a href=&quot;https://www.django-rest-framework.org/topics/ajax-csrf-cors/&quot;&gt;CORS 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="990e526833e096ce3f1dcce1785a3bffa2df70eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allowed&lt;/strong&gt;: Optional. A list or tuple of valid format suffixes. If not provided, a wildcard format suffix pattern will be used.</source>
          <target state="translated">&lt;strong&gt;허용&lt;/strong&gt; : 선택 사항. 유효한 형식 접미사의 목록 또는 튜플. 제공되지 않으면 와일드 카드 형식 접미사 패턴이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="37a1a2b987fca2f819c27c895228967bbe85c5d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_object(self, view_name, view_args, view_kwargs)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;get_object (자체, view_name, view_args, view_kwargs)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfdf10f704d25fa5b064b8fbe09c89bca7f00deb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_url(self, obj, view_name, request, format)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;get_url (자체, obj, view_name, 요청, 형식)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90273f0dcf3faa2bc85ca69ec899d9b3fcf5be45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;initkwargs&lt;/strong&gt;: A dictionary of any additional arguments that should be passed when instantiating the view.</source>
          <target state="translated">&lt;strong&gt;initkwargs&lt;/strong&gt; : 뷰를 인스턴스화 할 때 전달해야하는 추가 인수의 사전입니다.</target>
        </trans-unit>
        <trans-unit id="9196f6780a26053223f5c3f551bce4093a6464e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;initkwargs&lt;/strong&gt;: A dictionary of any additional arguments that should be passed when instantiating the view. Note that the &lt;code&gt;detail&lt;/code&gt;, &lt;code&gt;basename&lt;/code&gt;, and &lt;code&gt;suffix&lt;/code&gt; arguments are reserved for viewset introspection and are also used by the browsable API to generate the view name and breadcrumb links.</source>
          <target state="translated">&lt;strong&gt;initkwargs&lt;/strong&gt; : 뷰를 인스턴스화 할 때 전달해야하는 추가 인수의 사전입니다. 점을 유의 &lt;code&gt;detail&lt;/code&gt; , &lt;code&gt;basename&lt;/code&gt; 및 &lt;code&gt;suffix&lt;/code&gt; 인수 뷰셋 자기 반성을 위해 예약되어 있으며 또한 뷰 이름과 이동 경로 링크를 생성하는 검색 가능한 API에 의해 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="869e22854ad0f61ceb92938ce7aecf3420337554" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mapping&lt;/strong&gt;: A mapping of HTTP method names to the view methods</source>
          <target state="translated">&lt;strong&gt;mapping&lt;/strong&gt; : HTTP 메소드 이름을 뷰 메소드에 맵핑</target>
        </trans-unit>
        <trans-unit id="09bf2e9d8ddd6c7d0bea76a56d94b438a64723c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;: The name of the URL as used in &lt;code&gt;reverse&lt;/code&gt; calls. May include the following format string:</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; : &lt;code&gt;reverse&lt;/code&gt; 호출에 사용되는 URL의 이름입니다 . 다음 형식 문자열을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a7f3696d3b6b61a8e76242732250198cf928753" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;: The name of the URL as used in &lt;code&gt;reverse&lt;/code&gt; calls. May include the following format strings:</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; : &lt;code&gt;reverse&lt;/code&gt; 호출에 사용되는 URL의 이름입니다 . 다음 형식 문자열을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85cc3dc9c6fdd9988d6699ae8c79b4f151df166f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suffix_required&lt;/strong&gt;: Optional. A boolean indicating if suffixes in the URLs should be optional or mandatory. Defaults to &lt;code&gt;False&lt;/code&gt;, meaning that suffixes are optional by default.</source>
          <target state="translated">&lt;strong&gt;suffix_required&lt;/strong&gt; : 선택 사항. URL의 접미사가 선택적인지 필수인지를 나타내는 부울입니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 이며 접미사는 기본적으로 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="bbf23e3cc010c7d3feb3e10512527b54de30db0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt;: A string representing the URL to be routed. May include the following format strings:</source>
          <target state="translated">&lt;strong&gt;url&lt;/strong&gt; : 라우팅 할 URL을 나타내는 문자열입니다. 다음 형식 문자열을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b82217013c8ebf9d845fef636600d1a0234bef9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt;: A string representing the URL to be routed. May include the same format strings as &lt;code&gt;Route&lt;/code&gt;, and additionally accepts the &lt;code&gt;{url_path}&lt;/code&gt; format string.</source>
          <target state="translated">&lt;strong&gt;url&lt;/strong&gt; : 라우팅 할 URL을 나타내는 문자열입니다. &lt;code&gt;Route&lt;/code&gt; 와 동일한 형식 문자열을 포함 할 수 있으며 추가로 &lt;code&gt;{url_path}&lt;/code&gt; 형식 문자열을 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="89adc3b3d26e54332a773e99cd8478b6c03f780b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urlpatterns&lt;/strong&gt;: Required. A URL pattern list.</source>
          <target state="translated">&lt;strong&gt;urlpatterns&lt;/strong&gt; : 필수입니다. URL 패턴 목록.</target>
        </trans-unit>
        <trans-unit id="2190c4584f780f23a25319e185707eca15dd6e4e" translate="yes" xml:space="preserve">
          <source>@api_view()</source>
          <target state="translated">@api_view()</target>
        </trans-unit>
        <trans-unit id="a8ea27ee278e3e79add3e49fd646f9f2dbfc9561" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RegexField&lt;/code&gt; that validates the input against a URL matching pattern. Expects fully qualified URLs of the form &lt;code&gt;http://&amp;lt;host&amp;gt;/&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">URL 일치 패턴에 대해 입력의 유효성을 검사 하는 &lt;code&gt;RegexField&lt;/code&gt; 입니다. &lt;code&gt;http://&amp;lt;host&amp;gt;/&amp;lt;path&amp;gt;&lt;/code&gt; 형식의 정규화 된 URL이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="ad6899f4286cc62fb9119f5d1371ccfc2d4e8aeb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RegexField&lt;/code&gt; that validates the input against the pattern &lt;code&gt;[a-zA-Z0-9_-]+&lt;/code&gt;.</source>
          <target state="translated">패턴 &lt;code&gt;[a-zA-Z0-9_-]+&lt;/code&gt; 에 대해 입력을 확인 하는 &lt;code&gt;RegexField&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="fe1d1d87b2db3300f11cb792e8899acee6713b64" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ViewSet&lt;/code&gt; class is only bound to a set of method handlers at the last moment, when it is instantiated into a set of views, typically by using a &lt;code&gt;Router&lt;/code&gt; class which handles the complexities of defining the URL conf for you.</source>
          <target state="translated">&lt;code&gt;ViewSet&lt;/code&gt; 가 일반적으로 사용하여, 뷰의 집합으로 인스턴스화 될 때 클래스는 단지 마지막 순간에 방법 핸들러의 집합에 바인딩 &lt;code&gt;Router&lt;/code&gt; 당신을위한 URL conf의 정의의 복잡성을 처리하는 클래스.</target>
        </trans-unit>
        <trans-unit id="75083b3f86171651859327d77a0976d77d5ccb3c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ViewSet&lt;/code&gt; class is simply &lt;strong&gt;a type of class-based View, that does not provide any method handlers&lt;/strong&gt; such as &lt;code&gt;.get()&lt;/code&gt; or &lt;code&gt;.post()&lt;/code&gt;, and instead provides actions such as &lt;code&gt;.list()&lt;/code&gt; and &lt;code&gt;.create()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ViewSet&lt;/code&gt; 클래스는 단순히 &lt;strong&gt;어떤 방법 핸들러를 제공하지 않습니다 클래스 기반 뷰의 유형&lt;/strong&gt; 과 같은 &lt;code&gt;.get()&lt;/code&gt; 또는 &lt;code&gt;.post()&lt;/code&gt; , 대신 다음과 같은 조치를 제공 &lt;code&gt;.list()&lt;/code&gt; 및 &lt;code&gt;.create()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d360ddbaf7ea111858ae12e7da16613f5ece4e21" translate="yes" xml:space="preserve">
          <source>A Basic Custom Field</source>
          <target state="translated">기본 사용자 정의 필드</target>
        </trans-unit>
        <trans-unit id="58cd79f293977a38bfc8e7a5d67f991452ae096a" translate="yes" xml:space="preserve">
          <source>A Duration representation. Corresponds to &lt;code&gt;django.db.models.fields.DurationField&lt;/code&gt;</source>
          <target state="translated">기간 표현. &lt;code&gt;django.db.models.fields.DurationField&lt;/code&gt; 에 해당</target>
        </trans-unit>
        <trans-unit id="fb807b07814b97c30fee88f1a7fcc56157659e64" translate="yes" xml:space="preserve">
          <source>A boolean representation that also accepts &lt;code&gt;None&lt;/code&gt; as a valid value.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 을 유효한 값으로 받아들이는 부울 표현 .</target>
        </trans-unit>
        <trans-unit id="d66a5618734fa42c114367ef5f1fc6fcf7f8b8ed" translate="yes" xml:space="preserve">
          <source>A boolean representation.</source>
          <target state="translated">부울 표현입니다.</target>
        </trans-unit>
        <trans-unit id="9b7f055e2e9b4f8cf5ebec865a41c60faa39559d" translate="yes" xml:space="preserve">
          <source>A certain woman had a very sharp consciousness but almost no memory ... She remembered enough to work, and she worked hard. - Lydia Davis</source>
          <target state="translated">어떤 여성은 매우 예리한 의식을 가지고 있었지만 기억이 거의 없었습니다. 그녀는 일할만큼 충분히 기억하고 열심히 일했습니다. -리디아 데이비스</target>
        </trans-unit>
        <trans-unit id="d8d6e7b2ab64733928504d837edfe4b90933644b" translate="yes" xml:space="preserve">
          <source>A class that walks a list of routed URL patterns, requests the schema for each view and collates the resulting OpenAPI schema.</source>
          <target state="translated">라우트 된 URL 패턴 목록을 걷는 클래스는 각보기에 대한 스키마를 요청하고 결과 OpenAPI 스키마를 대조합니다.</target>
        </trans-unit>
        <trans-unit id="abef8f72963a0d556a49b69a3c9c8145b95f2668" translate="yes" xml:space="preserve">
          <source>A common pattern for Web APIs is to use filename extensions on URLs to provide an endpoint for a given media type. For example, 'http://example.com/api/users.json' to serve a JSON representation.</source>
          <target state="translated">웹 API의 일반적인 패턴은 URL에서 파일 이름 확장자를 사용하여 지정된 매체 유형에 대한 엔드 포인트를 제공하는 것입니다. 예를 들어 'http://example.com/api/users.json'은 JSON 표현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9f7817dbd2fb5ecb59535c60eae00e939fcfdf34" translate="yes" xml:space="preserve">
          <source>A content negotiation class, that determines how a renderer is selected for the response, given an incoming request.</source>
          <target state="translated">들어오는 요청에 따라 응답에 렌더러가 선택되는 방식을 결정하는 컨텐츠 협상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="37450830edfdcc0d41d160bbbb7a977818a78137" translate="yes" xml:space="preserve">
          <source>A date and time representation.</source>
          <target state="translated">날짜 및 시간 표현</target>
        </trans-unit>
        <trans-unit id="70729bde944c80eea16de2f822f75e74a1bf7061" translate="yes" xml:space="preserve">
          <source>A date representation.</source>
          <target state="translated">날짜 표현.</target>
        </trans-unit>
        <trans-unit id="93b4967feec32cc3ba5c19b96d4b61336d1dd4bd" translate="yes" xml:space="preserve">
          <source>A decimal representation, represented in Python by a &lt;code&gt;Decimal&lt;/code&gt; instance.</source>
          <target state="translated">Python에서 &lt;code&gt;Decimal&lt;/code&gt; 인스턴스로 표시되는 10 진수 표현 입니다.</target>
        </trans-unit>
        <trans-unit id="cbd75a641cb60891957286d6e0eac4ee3d86474f" translate="yes" xml:space="preserve">
          <source>A default class that can be used to &lt;em&gt;only set a default argument during create operations&lt;/em&gt;. During updates the field is omitted.</source>
          <target state="translated">&lt;em&gt;작성 조작 중 기본 인수 만 설정하는&lt;/em&gt; 데 사용할 수있는 기본 클래스입니다 . 업데이트 중에는 필드가 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="1b0b0b6f52a06aff2bdcf5d693138352b6b30d9c" translate="yes" xml:space="preserve">
          <source>A default class that can be used to represent the current user. In order to use this, the 'request' must have been provided as part of the context dictionary when instantiating the serializer.</source>
          <target state="translated">현재 사용자를 나타내는 데 사용할 수있는 기본 클래스입니다. 이를 사용하려면 직렬화기를 인스턴스화 할 때 '요청'이 컨텍스트 사전의 일부로 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fa32178288700e9b193b9b6275a4c801fd5832cb" translate="yes" xml:space="preserve">
          <source>A dictionary of additional context information that will be passed to the renderer's &lt;code&gt;.render()&lt;/code&gt; method.</source>
          <target state="translated">렌더러의 &lt;code&gt;.render()&lt;/code&gt; 메서드에 전달 될 추가 컨텍스트 정보 사전입니다 .</target>
        </trans-unit>
        <trans-unit id="9e6b719aff99f3d4f67637ddd95314201251a87e" translate="yes" xml:space="preserve">
          <source>A dictionary of error codes to error messages.</source>
          <target state="translated">오류 메시지에 대한 오류 코드 사전.</target>
        </trans-unit>
        <trans-unit id="d2312af2f54793f792c323538306dcbc41febcad" translate="yes" xml:space="preserve">
          <source>A dictionary of key-value pairs that can be used to control how renderers should render the field.</source>
          <target state="translated">렌더러가 필드를 렌더링하는 방법을 제어하는 ​​데 사용할 수있는 키-값 쌍 사전입니다.</target>
        </trans-unit>
        <trans-unit id="280734e4373bb7d58a46b43421723ed6471371cd" translate="yes" xml:space="preserve">
          <source>A field class that does not take a value based on user input, but instead takes its value from a default value or callable.</source>
          <target state="translated">사용자 입력에 따라 값을받지 않고 대신 기본값 또는 호출 가능 값에서 값을 가져 오는 필드 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="216db60ebd1c01c6c11ba85ba1e7d4c61be1ac3b" translate="yes" xml:space="preserve">
          <source>A field class that simply returns the value of the field without modification.</source>
          <target state="translated">수정없이 필드 값을 반환하는 필드 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c51be49600ac6f1c4972a5f437b1864a62609bfd" translate="yes" xml:space="preserve">
          <source>A field class that validates a dictionary of objects. The keys in &lt;code&gt;DictField&lt;/code&gt; are always assumed to be string values.</source>
          <target state="translated">객체 사전을 검증하는 필드 클래스입니다. &lt;code&gt;DictField&lt;/code&gt; 의 키 는 항상 문자열 값으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e8fbcd06f32b2a45119b1f642e0c800adb59ff94" translate="yes" xml:space="preserve">
          <source>A field class that validates a list of objects.</source>
          <target state="translated">객체 목록의 유효성을 검사하는 필드 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="425f470623390a04eceaf38043007daeeec89980" translate="yes" xml:space="preserve">
          <source>A field class that validates that the incoming data structure consists of valid JSON primitives. In its alternate binary mode, it will represent and validate JSON-encoded binary strings.</source>
          <target state="translated">수신 데이터 구조가 유효한 JSON 기본 요소로 구성되어 있는지 검증하는 필드 클래스입니다. 대체 이진 모드에서는 JSON 인코딩 이진 문자열을 나타내고 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="efa55eb24562b2af860a31305113acb2b024a144" translate="yes" xml:space="preserve">
          <source>A field that can accept a set of zero, one or many values, chosen from a limited set of choices. Takes a single mandatory argument. &lt;code&gt;to_internal_value&lt;/code&gt; returns a &lt;code&gt;set&lt;/code&gt; containing the selected values.</source>
          <target state="translated">제한된 선택 세트에서 선택한 0 세트, 하나 이상의 값을 수용 할 수있는 필드입니다. 단일 필수 인수를받습니다. &lt;code&gt;to_internal_value&lt;/code&gt; 는 선택한 값이 포함 된 &lt;code&gt;set&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="84cc2096091def775b6223f3a67d7132ccc959b5" translate="yes" xml:space="preserve">
          <source>A field that can accept a value out of a limited set of choices.</source>
          <target state="translated">제한된 선택 세트에서 값을 승인 할 수있는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="68339641b264616dc5dd6bf7beb8e46e08f77644" translate="yes" xml:space="preserve">
          <source>A field that ensures the input is a valid IPv4 or IPv6 string.</source>
          <target state="translated">입력이 유효한 IPv4 또는 IPv6 문자열인지 확인하는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="baab67bca0965620dee5c03b3bf04b691c5bee1f" translate="yes" xml:space="preserve">
          <source>A field that ensures the input is a valid UUID string. The &lt;code&gt;to_internal_value&lt;/code&gt; method will return a &lt;code&gt;uuid.UUID&lt;/code&gt; instance. On output the field will return a string in the canonical hyphenated format, for example:</source>
          <target state="translated">입력이 유효한 UUID 문자열인지 확인하는 필드입니다. &lt;code&gt;to_internal_value&lt;/code&gt; 의 방법은 반환 &lt;code&gt;uuid.UUID&lt;/code&gt; 의 인스턴스를. 출력시 필드는 다음과 같이 표준 하이픈 형식으로 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="38a2076c13e69e4aec87cd664c2d6ca046f2d69e" translate="yes" xml:space="preserve">
          <source>A field whose choices are limited to the filenames in a certain directory on the filesystem</source>
          <target state="translated">파일 시스템의 특정 디렉토리에있는 파일 이름으로 제한되는 필드</target>
        </trans-unit>
        <trans-unit id="8cc14e6f3a49bdd6bf9b3f65ef4b0a73a4cf56a1" translate="yes" xml:space="preserve">
          <source>A file representation. Performs Django's standard FileField validation.</source>
          <target state="translated">파일 표현. Django의 표준 FileField 유효성 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3e22ac67c2619cf3ab25833a884912ee3b698c35" translate="yes" xml:space="preserve">
          <source>A final example of filtering the initial queryset would be to determine the initial queryset based on query parameters in the url.</source>
          <target state="translated">초기 쿼리 세트를 필터링하는 마지막 예는 URL의 쿼리 매개 변수를 기반으로 초기 쿼리 세트를 결정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d156c4f2709d6002738fa1607908e36ed230e614" translate="yes" xml:space="preserve">
          <source>A floating point representation.</source>
          <target state="translated">부동 소수점 표현</target>
        </trans-unit>
        <trans-unit id="7cb93b53a7299ef6cf754656560e1fb56c7c4189" translate="yes" xml:space="preserve">
          <source>A format string that should be used by default for rendering the output of &lt;code&gt;DateField&lt;/code&gt; serializer fields. If &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;DateField&lt;/code&gt; serializer fields will return Python &lt;code&gt;date&lt;/code&gt; objects, and the date encoding will be determined by the renderer.</source>
          <target state="translated">&lt;code&gt;DateField&lt;/code&gt; serializer 필드 의 출력을 렌더링하기 위해 기본적으로 사용해야하는 형식 문자열입니다 . 경우 &lt;code&gt;None&lt;/code&gt; , 후 &lt;code&gt;DateField&lt;/code&gt; 시리얼 필드는 파이썬 반환 &lt;code&gt;date&lt;/code&gt; 개체를하고 날짜 인코딩은 렌더러에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="88c3881981d0febb3babb03243853ce8f39ccbf5" translate="yes" xml:space="preserve">
          <source>A format string that should be used by default for rendering the output of &lt;code&gt;DateTimeField&lt;/code&gt; serializer fields. If &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;DateTimeField&lt;/code&gt; serializer fields will return Python &lt;code&gt;datetime&lt;/code&gt; objects, and the datetime encoding will be determined by the renderer.</source>
          <target state="translated">&lt;code&gt;DateTimeField&lt;/code&gt; 직렬화 기 필드 의 출력을 렌더링하기 위해 기본적으로 사용해야하는 형식 문자열입니다 . 경우 &lt;code&gt;None&lt;/code&gt; , 다음 &lt;code&gt;DateTimeField&lt;/code&gt; 의 시리얼 필드는 파이썬 반환하지 않습니다 &lt;code&gt;datetime&lt;/code&gt; 오브젝트 및 날짜 부호화 렌더러에 의해 결정된다.</target>
        </trans-unit>
        <trans-unit id="8bcfef92cf02d537149218138bbb9479c15b9eee" translate="yes" xml:space="preserve">
          <source>A format string that should be used by default for rendering the output of &lt;code&gt;TimeField&lt;/code&gt; serializer fields. If &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;TimeField&lt;/code&gt; serializer fields will return Python &lt;code&gt;time&lt;/code&gt; objects, and the time encoding will be determined by the renderer.</source>
          <target state="translated">&lt;code&gt;TimeField&lt;/code&gt; serializer 필드 의 출력을 렌더링하기 위해 기본적으로 사용해야하는 형식 문자열입니다 . 경우 &lt;code&gt;None&lt;/code&gt; 다음 &lt;code&gt;TimeField&lt;/code&gt; 시리얼 필드 파이썬 반환 &lt;code&gt;time&lt;/code&gt; 객체, 시간 인코딩, 렌더링에 의해 결정된다.</target>
        </trans-unit>
        <trans-unit id="95f1cdccef3e5fda6bbe6646920f0910e60e125b" translate="yes" xml:space="preserve">
          <source>A generic field that can be tied to any arbitrary model field. The &lt;code&gt;ModelField&lt;/code&gt; class delegates the task of serialization/deserialization to its associated model field. This field can be used to create serializer fields for custom model fields, without having to create a new custom serializer field.</source>
          <target state="translated">임의의 모델 필드에 연결할 수있는 일반 필드입니다. &lt;code&gt;ModelField&lt;/code&gt; 클래스 대표 관련 모델 필드 직렬화 / 역 직렬화하는 작업. 이 필드는 새로운 사용자 정의 시리얼 라이저 필드를 생성하지 않고도 사용자 정의 모델 필드에 대한 시리얼 라이저 필드를 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e4f6f26389ce544e19d2e7878ccbff517742719" translate="yes" xml:space="preserve">
          <source>A list of filter backend classes that should be used for generic filtering. If set to &lt;code&gt;None&lt;/code&gt; then generic filtering is disabled.</source>
          <target state="translated">일반 필터링에 사용해야하는 필터 백엔드 클래스 목록입니다. &lt;code&gt;None&lt;/code&gt; 설정하면 일반 필터링이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="f08e298fdbc60a815852721dd0ce81ef3d0d1263" translate="yes" xml:space="preserve">
          <source>A list of format strings that should be used by default for parsing inputs to &lt;code&gt;DateField&lt;/code&gt; serializer fields.</source>
          <target state="translated">입력을 &lt;code&gt;DateField&lt;/code&gt; 직렬 변환기 필드로 구문 분석하는 데 기본적으로 사용해야하는 형식 문자열 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="fa7d42dcccc5f7d69c5b0fe3a0caa6ad13839cb8" translate="yes" xml:space="preserve">
          <source>A list of format strings that should be used by default for parsing inputs to &lt;code&gt;DateTimeField&lt;/code&gt; serializer fields.</source>
          <target state="translated">입력을 &lt;code&gt;DateTimeField&lt;/code&gt; 직렬 변환기 필드로 구문 분석하기 위해 기본적으로 사용해야하는 형식 문자열 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="15cb67d3d390abae88e47af4da5026d8e3149705" translate="yes" xml:space="preserve">
          <source>A list of format strings that should be used by default for parsing inputs to &lt;code&gt;TimeField&lt;/code&gt; serializer fields.</source>
          <target state="translated">입력을 &lt;code&gt;TimeField&lt;/code&gt; 로 구문 분석 할 때 기본적으로 사용해야하는 형식 문자열 목록 serializer 필드로 .</target>
        </trans-unit>
        <trans-unit id="19996471a205e471118c5bec5b85fe7fccea340f" translate="yes" xml:space="preserve">
          <source>A list of validator functions which should be applied to the incoming field input, and which either raise a validation error or simply return. Validator functions should typically raise &lt;code&gt;serializers.ValidationError&lt;/code&gt;, but Django's built-in &lt;code&gt;ValidationError&lt;/code&gt; is also supported for compatibility with validators defined in the Django codebase or third party Django packages.</source>
          <target state="translated">들어오는 필드 입력에 적용되어야하고 유효성 검증 오류를 발생 시키거나 단순히 리턴하는 유효성 검증기 함수 목록. Validator 함수는 일반적으로 &lt;code&gt;serializers.ValidationError&lt;/code&gt; 를 발생 시켜야 하지만 Django의 내장 &lt;code&gt;ValidationError&lt;/code&gt; 는 Django 코드베이스 또는 타사 Django 패키지에 정의 된 유효성 검사기와의 호환성을 위해 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="97e4c34d022f60e2a503b177c66dddbd1b460cfc" translate="yes" xml:space="preserve">
          <source>A list or tuple of authentication classes, that determines the default set of authenticators used when accessing the &lt;code&gt;request.user&lt;/code&gt; or &lt;code&gt;request.auth&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;request.user&lt;/code&gt; 또는 &lt;code&gt;request.auth&lt;/code&gt; 특성에 액세스 할 때 사용되는 기본 인증 자 세트를 결정하는 인증 클래스 목록 또는 튜플 .</target>
        </trans-unit>
        <trans-unit id="89fa284dec3ef301473360d70addb0c90e366466" translate="yes" xml:space="preserve">
          <source>A list or tuple of parser classes, that determines the default set of parsers used when accessing the &lt;code&gt;request.data&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;request.data&lt;/code&gt; 속성에 액세스 할 때 사용되는 기본 파서 집합을 결정하는 파서 클래스 목록 또는 튜플입니다 .</target>
        </trans-unit>
        <trans-unit id="f777c4c9afeb248e68ce70edeac968f50eb08166" translate="yes" xml:space="preserve">
          <source>A list or tuple of permission classes, that determines the default set of permissions checked at the start of a view. Permission must be granted by every class in the list.</source>
          <target state="translated">보기 시작시 확인 된 기본 권한 세트를 결정하는 권한 클래스 목록 또는 튜플. 목록의 모든 클래스에서 권한을 부여해야합니다.</target>
        </trans-unit>
        <trans-unit id="b3c7632a532c72caea39585207dff0806e23fe4b" translate="yes" xml:space="preserve">
          <source>A list or tuple of renderer classes, that determines the default set of renderers that may be used when returning a &lt;code&gt;Response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Response&lt;/code&gt; 객체를 반환 할 때 사용할 수있는 기본 렌더러 세트를 결정하는 렌더러 클래스 목록 또는 튜플입니다 .</target>
        </trans-unit>
        <trans-unit id="e9f8b01cced30db3b116bdb8bfd07a07531ba3e9" translate="yes" xml:space="preserve">
          <source>A list or tuple of throttle classes, that determines the default set of throttles checked at the start of a view.</source>
          <target state="translated">뷰 시작시 확인 된 기본 스로틀 세트를 결정하는 스로틀 클래스 목록 또는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="29b180124ede3d3c1f9fc098ac9db7e1dc02f22c" translate="yes" xml:space="preserve">
          <source>A machine-readable [schema] describes what resources are available via the API, what their URLs are, how they are represented and what operations they support.</source>
          <target state="translated">기계가 읽을 수있는 [스키마]는 API를 통해 사용 가능한 리소스, URL, 표현 방법 및 지원되는 작업을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="507c94091a5a1f23bf7b7c533785a40f580adc62" translate="yes" xml:space="preserve">
          <source>A mapping of Django model classes to REST framework serializer classes. You can override this mapping to alter the default serializer classes that should be used for each model class.</source>
          <target state="translated">Django 모델 클래스를 REST 프레임 워크 직렬 변환기 클래스에 맵핑 이 매핑을 재정 의하여 각 모델 클래스에 사용해야하는 기본 직렬 변환기 클래스를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e923a2f3bb4ecc77b63a48328f35610b4c09c9f" translate="yes" xml:space="preserve">
          <source>A more complete example of extra actions:</source>
          <target state="translated">추가 조치의보다 완전한 예 :</target>
        </trans-unit>
        <trans-unit id="4315b7a9a9a5c1f99eae15f869438cdf58ca4980" translate="yes" xml:space="preserve">
          <source>A preconfigured &lt;code&gt;DictField&lt;/code&gt; that is compatible with Django's postgres &lt;code&gt;HStoreField&lt;/code&gt;.</source>
          <target state="translated">Django의 postgres &lt;code&gt;HStoreField&lt;/code&gt; 와 호환되는 사전 구성된 &lt;code&gt;DictField&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6f75a8f0c031405af45a7bdb6f7e86b3a2a7d0d1" translate="yes" xml:space="preserve">
          <source>A serializer class is very similar to a Django &lt;code&gt;Form&lt;/code&gt; class, and includes similar validation flags on the various fields, such as &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;max_length&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">serializer 클래스는 Django &lt;code&gt;Form&lt;/code&gt; 클래스 와 매우 유사 하며 &lt;code&gt;required&lt;/code&gt; , &lt;code&gt;max_length&lt;/code&gt; 및 &lt;code&gt;default&lt;/code&gt; 와 같은 다양한 필드에 유사한 유효성 검사 플래그를 포함 합니다 .</target>
        </trans-unit>
        <trans-unit id="7919f757c6591c5d9578ed6348a1ea6d197b4e5f" translate="yes" xml:space="preserve">
          <source>A short text string that may be used as the name of the field in HTML form fields or other descriptive elements.</source>
          <target state="translated">HTML 양식 필드 또는 기타 설명 요소에서 필드 이름으로 사용될 수있는 짧은 텍스트 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="66818c8a2603973977796c72fde93903b5a86c6f" translate="yes" xml:space="preserve">
          <source>A simple renderer that simply returns pre-rendered HTML. Unlike other renderers, the data passed to the response object should be a string representing the content to be returned.</source>
          <target state="translated">미리 렌더링 된 HTML을 반환하는 간단한 렌더러입니다. 다른 렌더러와 달리 응답 객체에 전달 된 데이터는 반환 할 내용을 나타내는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="db1f6bc7072b134adb052d0de5b818e3aeb7ed20" translate="yes" xml:space="preserve">
          <source>A slightly less strict style of permission would be to allow full access to authenticated users, but allow read-only access to unauthenticated users. This corresponds to the &lt;code&gt;IsAuthenticatedOrReadOnly&lt;/code&gt; class in REST framework.</source>
          <target state="translated">약간 덜 엄격한 권한 스타일은 인증 된 사용자에게 전체 액세스를 허용하지만 인증되지 않은 사용자에게는 읽기 전용 액세스를 허용하는 것입니다. 이것은 REST 프레임 워크 의 &lt;code&gt;IsAuthenticatedOrReadOnly&lt;/code&gt; 클래스에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="b810a4f297df4816455fb15ff60e82e6e703ee0d" translate="yes" xml:space="preserve">
          <source>A stream-like object representing the body of the request.</source>
          <target state="translated">요청 본문을 나타내는 스트림과 같은 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c05792298dd30f4e0d67b784dbc71072488e5a16" translate="yes" xml:space="preserve">
          <source>A string representing a global setting for &lt;code&gt;html_cutoff_text&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;html_cutoff_text&lt;/code&gt; 의 전역 설정을 나타내는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="fb97af577b21640a6e51dd2c239c1fbee1ea418a" translate="yes" xml:space="preserve">
          <source>A string representing the function that should be used when generating view descriptions.</source>
          <target state="translated">뷰 설명을 생성 할 때 사용해야하는 함수를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="dff44148c25e4cd48cbb3bb7374bc5a56046f5f1" translate="yes" xml:space="preserve">
          <source>A string representing the function that should be used when generating view names.</source>
          <target state="translated">뷰 이름을 생성 할 때 사용해야하는 함수를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e9aaa7474f17600eabf4aa5c56a2a14fc0f7af60" translate="yes" xml:space="preserve">
          <source>A string representing the function that should be used when returning a response for any given exception. If the function returns &lt;code&gt;None&lt;/code&gt;, a 500 error will be raised.</source>
          <target state="translated">주어진 예외에 대한 응답을 반환 할 때 사용해야하는 함수를 나타내는 문자열입니다. 함수가 &lt;code&gt;None&lt;/code&gt; 을 반환하면 하면 500 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9157b60850af399b39f745ee6dd8505454b6361e" translate="yes" xml:space="preserve">
          <source>A string representing the key that should be used for serializer errors that do not refer to a specific field, but are instead general errors.</source>
          <target state="translated">특정 필드를 참조하지 않고 일반 오류 인 직렬 변환기 오류에 사용해야하는 키를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="1ad23af71cffa356d038917afec289b44a8e1ea7" translate="yes" xml:space="preserve">
          <source>A string representing the key that should be used for the URL fields generated by &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; 가 생성 한 URL 필드에 사용해야하는 키를 나타내는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="f957b8833e8046b4ebbed65f2a904cafd97da85d" translate="yes" xml:space="preserve">
          <source>A string representing the media type that was accepted by the content negotiation stage.</source>
          <target state="translated">내용 협상 단계에서 승인 한 미디어 유형을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b4322b1070d0565022059fa837c8924e3fcfdb17" translate="yes" xml:space="preserve">
          <source>A text representation, that validates the given value matches against a certain regular expression.</source>
          <target state="translated">주어진 값이 특정 정규식과 일치하는지 확인하는 텍스트 표현입니다.</target>
        </trans-unit>
        <trans-unit id="dd5ecb4767c294bd173f7fb80362df6d61bf1852" translate="yes" xml:space="preserve">
          <source>A text representation, validates the text to be a valid e-mail address.</source>
          <target state="translated">텍스트 표현은 텍스트가 유효한 전자 우편 주소인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d1046e964e4640cf636fcf5ee58eea31fb79b6f8" translate="yes" xml:space="preserve">
          <source>A text representation. Optionally validates the text to be shorter than &lt;code&gt;max_length&lt;/code&gt; and longer than &lt;code&gt;min_length&lt;/code&gt;.</source>
          <target state="translated">텍스트 표현. 선택적으로 텍스트가 &lt;code&gt;max_length&lt;/code&gt; 보다 &lt;code&gt;min_length&lt;/code&gt; 보다 길 도록 유효성을 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="f74f4482dbe29b9594331e7d41e3b72aac28c253" translate="yes" xml:space="preserve">
          <source>A text string that may be used as a description of the field in HTML form fields or other descriptive elements.</source>
          <target state="translated">HTML 양식 필드 또는 기타 설명 요소의 필드 설명으로 사용될 수있는 텍스트 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fed0a75a1ad3bdabd61a28d3a4c15793af4a0288" translate="yes" xml:space="preserve">
          <source>A time representation.</source>
          <target state="translated">시간 표현.</target>
        </trans-unit>
        <trans-unit id="61863a64d4839d048a589dfa1acefd9baf1e0e67" translate="yes" xml:space="preserve">
          <source>A validator may be any callable that raises a &lt;code&gt;serializers.ValidationError&lt;/code&gt; on failure.</source>
          <target state="translated">유효성 검사기는 &lt;code&gt;serializers.ValidationError&lt;/code&gt; 를 발생 시키는 호출 가능 장치 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6cb64e3cae61b0b074967beba97e6e7b2a1e3b3" translate="yes" xml:space="preserve">
          <source>A value that should be used for pre-populating the value of HTML form fields. You may pass a callable to it, just as you may do with any regular Django &lt;code&gt;Field&lt;/code&gt;:</source>
          <target state="translated">HTML 양식 필드의 값을 미리 채우는 데 사용해야하는 값입니다. 일반 Django &lt;code&gt;Field&lt;/code&gt; 와 마찬가지로 callable을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31678772aac93a0dba06bf47f07b1eaf1a91f5d9" translate="yes" xml:space="preserve">
          <source>A view inspector class that will be used for schema generation.</source>
          <target state="translated">스키마 생성에 사용될 뷰 인스펙터 클래스.</target>
        </trans-unit>
        <trans-unit id="35aa15253a340d655ef1184e4fde52e347209882" translate="yes" xml:space="preserve">
          <source>A viewset may &lt;a href=&quot;../viewsets/index#marking-extra-actions-for-routing&quot;&gt;mark extra actions for routing&lt;/a&gt; by decorating a method with the &lt;code&gt;@action&lt;/code&gt; decorator. These extra actions will be included in the generated routes. For example, given the &lt;code&gt;set_password&lt;/code&gt; method on the &lt;code&gt;UserViewSet&lt;/code&gt; class:</source>
          <target state="translated">뷰 세트는 &lt;code&gt;@action&lt;/code&gt; 데코레이터 로 메소드를 장식하여 &lt;a href=&quot;../viewsets/index#marking-extra-actions-for-routing&quot;&gt;라우팅&lt;/a&gt; 을 위한 추가 조치를 표시 할 수 있습니다 . 이러한 추가 작업은 생성 된 경로에 포함됩니다. 예를 들어 &lt;code&gt;UserViewSet&lt;/code&gt; 클래스 의 &lt;code&gt;set_password&lt;/code&gt; 메소드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="700f85be354bd46ac142a877edde3acce4ea55fa" translate="yes" xml:space="preserve">
          <source>ALLOWED_VERSIONS</source>
          <target state="translated">ALLOWED_VERSIONS</target>
        </trans-unit>
        <trans-unit id="95bf0e870e2f1145571690754754b56cb523c59b" translate="yes" xml:space="preserve">
          <source>API Guide</source>
          <target state="translated">API 안내서</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="translated">API 참조</target>
        </trans-unit>
        <trans-unit id="e6ab60e163f50576b56eaa9cf1ed01cbacd6a373" translate="yes" xml:space="preserve">
          <source>API Test cases</source>
          <target state="translated">API 테스트 사례</target>
        </trans-unit>
        <trans-unit id="9c08be4451eae3b581564ed0dbeffee7268381a9" translate="yes" xml:space="preserve">
          <source>API policy attributes</source>
          <target state="translated">API 정책 속성</target>
        </trans-unit>
        <trans-unit id="17b599358995bd743e4d3802671c154b5e237a07" translate="yes" xml:space="preserve">
          <source>API policy decorators</source>
          <target state="translated">API 정책 데코레이터</target>
        </trans-unit>
        <trans-unit id="c0db662a8f590905db662108ed1454c9dc117b27" translate="yes" xml:space="preserve">
          <source>API policy implementation methods</source>
          <target state="translated">API 정책 구현 방법</target>
        </trans-unit>
        <trans-unit id="8df6349951e95bdcb8635812f4a9db0aecbb9249" translate="yes" xml:space="preserve">
          <source>API policy instantiation methods</source>
          <target state="translated">API 정책 인스턴스화 방법</target>
        </trans-unit>
        <trans-unit id="484781e3fe5aa2a3c4660352db7cc1a2f2e26352" translate="yes" xml:space="preserve">
          <source>API policy settings</source>
          <target state="translated">API 정책 설정</target>
        </trans-unit>
        <trans-unit id="4887ee9de17551ebdc7934c9620c2775d22c5db0" translate="yes" xml:space="preserve">
          <source>API responses for list endpoints will now include a &lt;code&gt;Link&lt;/code&gt; header, instead of including the pagination links as part of the body of the response, for example:</source>
          <target state="translated">목록 끝점에 대한 API 응답은 이제 응답 본문의 일부로 페이지 매김 링크를 포함하는 대신 &lt;code&gt;Link&lt;/code&gt; 헤더를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b6cc8eac11c2378ffb6f413fd1df4944237c03c4" translate="yes" xml:space="preserve">
          <source>API schemas are a useful tool that allow for a range of use cases, including generating reference documentation, or driving dynamic client libraries that can interact with your API.</source>
          <target state="translated">API 스키마는 참조 문서 생성 또는 API와 상호 작용할 수있는 동적 클라이언트 라이브러리 구동을 비롯하여 다양한 사용 사례를 허용하는 유용한 도구입니다.</target>
        </trans-unit>
        <trans-unit id="0b91ace0cf4162153fd95404ac94439dbe6cf95e" translate="yes" xml:space="preserve">
          <source>API versioning allows you to alter behavior between different clients. REST framework provides for a number of different versioning schemes.</source>
          <target state="translated">API 버전 관리를 통해 다른 클라이언트 간의 동작을 변경할 수 있습니다. REST 프레임 워크는 다양한 버전 관리 체계를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="405728e6be28d950652dcd39007fda27b1bebfb9" translate="yes" xml:space="preserve">
          <source>APIClient</source>
          <target state="translated">APIClient</target>
        </trans-unit>
        <trans-unit id="cc08c58b5748d22ce6d321439d4e7daa185a352d" translate="yes" xml:space="preserve">
          <source>APIException</source>
          <target state="translated">APIException</target>
        </trans-unit>
        <trans-unit id="8b71643b3275d27da08f1db5b9d0e8ff819c295a" translate="yes" xml:space="preserve">
          <source>APIRequestFactory</source>
          <target state="translated">APIRequestFactory</target>
        </trans-unit>
        <trans-unit id="ab245b349e96dc5edcaaf4f8569344541e42c20f" translate="yes" xml:space="preserve">
          <source>Absolute and relative URLs</source>
          <target state="translated">절대 및 상대 URL</target>
        </trans-unit>
        <trans-unit id="dd07e2480f97727f9fbfb2889abfa63f0bcfc343" translate="yes" xml:space="preserve">
          <source>Accept headers vs. format suffixes</source>
          <target state="translated">헤더와 형식 접미사 허용</target>
        </trans-unit>
        <trans-unit id="386039b196c9d17c2bbd49fbbd76151eec498789" translate="yes" xml:space="preserve">
          <source>AcceptHeaderVersioning</source>
          <target state="translated">AcceptHeaderVersioning</target>
        </trans-unit>
        <trans-unit id="cf1805d8ff46d8c49cff35d050b513a00a450d98" translate="yes" xml:space="preserve">
          <source>Accessing settings</source>
          <target state="translated">설정에 액세스</target>
        </trans-unit>
        <trans-unit id="70d8be1dcea4d14b4ffd3fd6d1ee35fd498894f9" translate="yes" xml:space="preserve">
          <source>Accessing the initial data and instance</source>
          <target state="translated">초기 데이터 및 인스턴스에 액세스</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="a475fa3eee6f21778ed319422aa2c2554c6a0fe1" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'rest_framework'&lt;/code&gt; to &lt;code&gt;INSTALLED_APPS&lt;/code&gt;. The settings module will be in &lt;code&gt;tutorial/settings.py&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INSTALLED_APPS&lt;/code&gt; 에 &lt;code&gt;'rest_framework'&lt;/code&gt; 을 추가하십시오 . 설정 모듈은 &lt;code&gt;tutorial/settings.py&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0bb3a052a2744179e4e00a68b76dc297ba17733" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'rest_framework'&lt;/code&gt; to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt; setting.</source>
          <target state="translated">&lt;code&gt;INSTALLED_APPS&lt;/code&gt; 설정에 &lt;code&gt;'rest_framework'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="7857cf7794ff4b860991b60510f21277a3d93f18" translate="yes" xml:space="preserve">
          <source>Add the following import at the top of the file:</source>
          <target state="translated">파일 맨 위에 다음 가져 오기를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="005931c0256bc7a0f92c4c693f4fbad062dbbc6e" translate="yes" xml:space="preserve">
          <source>Add the following two fields to the &lt;code&gt;Snippet&lt;/code&gt; model in &lt;code&gt;models.py&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;models.py&lt;/code&gt; 의 스 &lt;code&gt;Snippet&lt;/code&gt; 모델에 다음 두 필드를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ea0b2d327c102dbbfb858aaf9687c213134dc65" translate="yes" xml:space="preserve">
          <source>Add the package to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt; and modify your REST framework settings.</source>
          <target state="translated">&lt;code&gt;INSTALLED_APPS&lt;/code&gt; 에 패키지를 추가하고 REST 프레임 워크 설정을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="15f42a50c9a526a1eee4375e65f3338f06974082" translate="yes" xml:space="preserve">
          <source>Adding endpoints for our User models</source>
          <target state="translated">사용자 모델에 대한 엔드 포인트 추가</target>
        </trans-unit>
        <trans-unit id="cde27e44640f15e0de91fc8e2f4a90d0dce8d7f8" translate="yes" xml:space="preserve">
          <source>Adding format-suffix patterns to each individual entry in the URLconf for your API is error-prone and non-DRY, so REST framework provides a shortcut to adding these patterns to your URLConf.</source>
          <target state="translated">API의 URLconf에서 각 개별 항목에 형식 접미사 패턴을 추가하면 오류가 발생하기 쉽고 건조하지 않으므로 REST 프레임 워크는 이러한 패턴을 URLConf에 추가하는 바로 가기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="272c4fcd2810dae47ace6f1121eca8c60d872ae8" translate="yes" xml:space="preserve">
          <source>Adding information to our model</source>
          <target state="translated">모델에 정보 추가</target>
        </trans-unit>
        <trans-unit id="6d79a1d8f8b430b8475aeb8cbcda3bd931b1ddf2" translate="yes" xml:space="preserve">
          <source>Adding login to the Browsable API</source>
          <target state="translated">찾아보기 가능한 API에 로그인 추가</target>
        </trans-unit>
        <trans-unit id="7db5bd5eede66fa224fc04788c6b56bcc39122ed" translate="yes" xml:space="preserve">
          <source>Adding new behavior for new serializer base classes.</source>
          <target state="translated">새로운 serializer 기본 클래스에 대한 새로운 동작 추가</target>
        </trans-unit>
        <trans-unit id="06cd03e02c40943315c30f8928cb4714fefbcd20" translate="yes" xml:space="preserve">
          <source>Adding optional format suffixes to our URLs</source>
          <target state="translated">URL에 선택적 형식 접미사 추가</target>
        </trans-unit>
        <trans-unit id="fd0b5b348027ab06657bacedad688d2454b6cfdd" translate="yes" xml:space="preserve">
          <source>Adding pagination</source>
          <target state="translated">페이지 매김 추가</target>
        </trans-unit>
        <trans-unit id="82d195e39171c9daed2c98f537255f6cd88b8da4" translate="yes" xml:space="preserve">
          <source>Adding required permissions to views</source>
          <target state="translated">뷰에 필요한 권한 추가</target>
        </trans-unit>
        <trans-unit id="01b34254993ec2e6ca344ad3e7d1605a37ae4fe0" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments</source>
          <target state="translated">추가 키워드 인수</target>
        </trans-unit>
        <trans-unit id="85fe530884e52e534d6ef110e1b8437436e8e4af" translate="yes" xml:space="preserve">
          <source>Additionally, the following caveats apply to serializer inheritance:</source>
          <target state="translated">또한 다음주의 사항이 serializer 상속에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2b9f6e3a6788254daf3ea4930d4bed67e2e264d" translate="yes" xml:space="preserve">
          <source>AdminRenderer</source>
          <target state="translated">AdminRenderer</target>
        </trans-unit>
        <trans-unit id="24d87c8f45b081246c7e851229bad533c32fb1e9" translate="yes" xml:space="preserve">
          <source>Advanced custom routers</source>
          <target state="translated">고급 맞춤형 라우터</target>
        </trans-unit>
        <trans-unit id="2cede2fdfa247136a88e6b8d7a47fff18e2cf500" translate="yes" xml:space="preserve">
          <source>Advanced field defaults</source>
          <target state="translated">고급 필드 기본값</target>
        </trans-unit>
        <trans-unit id="c3f537c326789799d1f985a50818cd510fe52b49" translate="yes" xml:space="preserve">
          <source>Advanced renderer usage</source>
          <target state="translated">고급 렌더러 사용법</target>
        </trans-unit>
        <trans-unit id="ea5b7f1a827bc9255b5b021d7d534cae2f6d3950" translate="yes" xml:space="preserve">
          <source>Advanced serializer usage</source>
          <target state="translated">고급 시리얼 라이저 사용법</target>
        </trans-unit>
        <trans-unit id="710b8941cffc4db9b5dfc277c53fa9ca258e9d20" translate="yes" xml:space="preserve">
          <source>After adding all those names into our URLconf, our final &lt;code&gt;snippets/urls.py&lt;/code&gt; file should look like this:</source>
          <target state="translated">모든 이름을 URLconf에 추가 한 후 최종 &lt;code&gt;snippets/urls.py&lt;/code&gt; 파일은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="1e64a0dda5fce98d247c764460db3bb48409d811" translate="yes" xml:space="preserve">
          <source>After routing has determined which controller to use for a request, your controller is responsible for making sense of the request and producing the appropriate output.</source>
          <target state="translated">라우팅에서 요청에 사용할 컨트롤러를 결정한 후 컨트롤러는 요청을 이해하고 적절한 출력을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="afcaff642f755af168a40afb8adec78ad999a651" translate="yes" xml:space="preserve">
          <source>Again, as with &lt;code&gt;ModelViewSet&lt;/code&gt;, you can use any of the standard attributes and method overrides available to &lt;code&gt;GenericAPIView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ModelViewSet&lt;/code&gt; 과 마찬가지로 &lt;code&gt;GenericAPIView&lt;/code&gt; 에 사용 가능한 표준 속성 및 메소드 대체를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8aea5dc8e309adc73aa6ed507c9a5db543bd1064" translate="yes" xml:space="preserve">
          <source>Again, if we need more control over the API URLs we can simply drop down to using regular class-based views, and writing the URL conf explicitly.</source>
          <target state="translated">다시 API URL에 대한 더 많은 제어가 필요한 경우 일반 클래스 기반보기를 사용하고 URL conf를 명시 적으로 작성하면됩니다.</target>
        </trans-unit>
        <trans-unit id="bf3950d132e3a94b612b9f2b6d25894c0068c253" translate="yes" xml:space="preserve">
          <source>Again, you'll probably want to explicitly remove the validator from the serializer class, and write the code the for the validation constraint explicitly, in a &lt;code&gt;.validate()&lt;/code&gt; method, or in the view.</source>
          <target state="translated">다시 말하지만, serializer 클래스에서 유효성 검사기를 명시 적으로 제거하고 유효성 검사 제약 조건의 코드를 명시 적으로, &lt;code&gt;.validate()&lt;/code&gt; 메서드 또는 뷰에 작성하려고 할 것입니다 .</target>
        </trans-unit>
        <trans-unit id="03f4ce8807911729657287bbbc5d531a2a0ab184" translate="yes" xml:space="preserve">
          <source>AllowAny</source>
          <target state="translated">AllowAny</target>
        </trans-unit>
        <trans-unit id="10d370951942e8d488fef2f7ea4065c06bc3983d" translate="yes" xml:space="preserve">
          <source>Allowing &lt;code&gt;PUT&lt;/code&gt; as create operations is problematic, as it necessarily exposes information about the existence or non-existence of objects. It's also not obvious that transparently allowing re-creating of previously deleted instances is necessarily a better default behavior than simply returning &lt;code&gt;404&lt;/code&gt; responses.</source>
          <target state="translated">&lt;code&gt;PUT&lt;/code&gt; 을 작성 조작으로 허용 하는 것은 오브젝트의 존재 유무에 대한 정보를 반드시 노출 시키므로 문제가됩니다. 또한 이전에 삭제 된 인스턴스를 투명하게 다시 생성하는 것이 단순히 &lt;code&gt;404&lt;/code&gt; 응답을 반환하는 것보다 더 나은 기본 동작이라는 것이 분명하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="931b88ea385ffde3fa07bb1a0f29b1df1af101c6" translate="yes" xml:space="preserve">
          <source>Also keep in mind that with complex cases it can often be better to explicitly define your serializer classes, rather than relying on the default &lt;code&gt;ModelSerializer&lt;/code&gt; behavior. This involves a little more code, but ensures that the resulting behavior is more transparent.</source>
          <target state="translated">복잡한 경우에는 기본 &lt;code&gt;ModelSerializer&lt;/code&gt; 동작 에 의존하는 것보다 직렬 변환기 클래스를 명시 적으로 정의하는 것이 더 나은 경우가 많습니다 . 여기에는 약간의 코드가 필요하지만 결과 동작이 더 투명 해집니다.</target>
        </trans-unit>
        <trans-unit id="4f62d152058664a8b6d980aa51786055cd05ac63" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;format_suffix_patterns&lt;/code&gt; does not support descending into &lt;code&gt;include&lt;/code&gt; URL patterns.</source>
          <target state="translated">또한 &lt;code&gt;format_suffix_patterns&lt;/code&gt; 는 &lt;code&gt;include&lt;/code&gt; URL 패턴 으로 내림차순을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a1b82bf49e54fc695cc9a37b2a9bbdaa6ae587d3" translate="yes" xml:space="preserve">
          <source>Also note that although this class provides the complete set of create/list/retrieve/update/destroy actions by default, you can restrict the available operations by using the standard permission classes.</source>
          <target state="translated">또한이 클래스는 기본적으로 완전한 작성 / 목록 / 검색 / 업데이트 / 파괴 조치 세트를 제공하지만 표준 권한 클래스를 사용하여 사용 가능한 조작을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54550cc78bba107dd564a9edf60675798401d580" translate="yes" xml:space="preserve">
          <source>Also note that the generic views will only check the object-level permissions for views that retrieve a single model instance. If you require object-level filtering of list views, you'll need to filter the queryset separately. See the &lt;a href=&quot;../filtering/index&quot;&gt;filtering documentation&lt;/a&gt; for more details.</source>
          <target state="translated">또한 일반 뷰는 단일 모델 인스턴스를 검색하는 뷰에 대한 객체 수준 권한 만 확인합니다. 목록보기의 개체 수준 필터링이 필요한 경우 쿼리 집합을 별도로 필터링해야합니다. 자세한 내용은 &lt;a href=&quot;../filtering/index&quot;&gt;필터링 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="417ac66375724eefe3aa5c0cd70a23aa4061e58e" translate="yes" xml:space="preserve">
          <source>Also provides a &lt;code&gt;.partial_update(request, *args, **kwargs)&lt;/code&gt; method, which is similar to the &lt;code&gt;update&lt;/code&gt; method, except that all fields for the update will be optional. This allows support for HTTP &lt;code&gt;PATCH&lt;/code&gt; requests.</source>
          <target state="translated">또한 &lt;code&gt;.partial_update(request, *args, **kwargs)&lt;/code&gt; 메소드를 제공합니다. 이는 &lt;code&gt;update&lt;/code&gt; 모든 필드가 선택적이라는 점을 제외하고 는 업데이트 메소드 와 유사합니다 . 이를 통해 HTTP &lt;code&gt;PATCH&lt;/code&gt; 요청을 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2747351646955bad6de90a8a19c1d84e865ade20" translate="yes" xml:space="preserve">
          <source>Alternative representations include serializing using hyperlinks, serializing complete nested representations, or serializing with a custom representation.</source>
          <target state="translated">대체 표현에는 하이퍼 링크를 사용한 직렬화, 전체 중첩 표현을 직렬화 또는 사용자 정의 표현을 사용한 직렬화가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="643337242b53c976382d9c62b1c3109bb1826b14" translate="yes" xml:space="preserve">
          <source>Alternatively names in the &lt;code&gt;fields&lt;/code&gt; options can map to properties or methods which take no arguments that exist on the model class.</source>
          <target state="translated">또는 &lt;code&gt;fields&lt;/code&gt; 옵션의 이름 은 모델 클래스에 존재하는 인수를 사용하지 않는 속성 또는 메서드에 매핑 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f03a223ac4d42c392a2491d184d9c48fb691a1e" translate="yes" xml:space="preserve">
          <source>Alternatively you can disable HTML pagination controls completely by subclassing on of the existing classes, setting &lt;code&gt;template = None&lt;/code&gt; as an attribute on the class. You'll then need to configure your &lt;code&gt;DEFAULT_PAGINATION_CLASS&lt;/code&gt; settings key to use your custom class as the default pagination style.</source>
          <target state="translated">또는 기존 클래스를 서브 클래 싱하여 &lt;code&gt;template = None&lt;/code&gt; 을 클래스의 속성으로 설정하여 HTML 페이지 매김 컨트롤을 완전히 비활성화 할 수 있습니다 . 그런 다음 사용자 정의 클래스를 기본 페이지 매김 스타일로 사용 하도록 &lt;code&gt;DEFAULT_PAGINATION_CLASS&lt;/code&gt; 설정 키 를 구성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7d6076ce3457b944563f1466e7dc3c684dd1f0ac" translate="yes" xml:space="preserve">
          <source>Alternatively you can set the fields on the serializer explicitly. For example:</source>
          <target state="translated">또는 직렬 변환기의 필드를 명시 적으로 설정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3528da0134499e6e64147580baf2d282bf381b89" translate="yes" xml:space="preserve">
          <source>Alternatively you can use Django's &lt;code&gt;include&lt;/code&gt; function, like so...</source>
          <target state="translated">또는 Django의 &lt;code&gt;include&lt;/code&gt; 함수를 사용할 수 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="e1e69f370f9be443618967eb92eeae6a446c4fcb" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;code&gt;url_name&lt;/code&gt; attribute set by the &lt;code&gt;@action&lt;/code&gt; decorator.</source>
          <target state="translated">또는 &lt;code&gt;@action&lt;/code&gt; decorator에서 설정 한 &lt;code&gt;url_name&lt;/code&gt; 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13b05af3df283f2f3262c7b593c2c354166f274c" translate="yes" xml:space="preserve">
          <source>An API may have multiple &lt;code&gt;UserRateThrottles&lt;/code&gt; in place at the same time. To do so, override &lt;code&gt;UserRateThrottle&lt;/code&gt; and set a unique &quot;scope&quot; for each class.</source>
          <target state="translated">API에는 여러 &lt;code&gt;UserRateThrottles&lt;/code&gt; 이 동시에있을 수 있습니다 . 이렇게하려면 &lt;code&gt;UserRateThrottle&lt;/code&gt; 을 재정의 하고 각 클래스에 대해 고유 한 &quot;범위&quot;를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c43aaca11208c7770758ea597268b84a99bbd201" translate="yes" xml:space="preserve">
          <source>An alternative to saving multiple related instances in the serializer is to write custom model manager classes that handle creating the correct instances.</source>
          <target state="translated">직렬 변환기에 여러 관련 인스턴스를 저장하는 대신 올바른 인스턴스 작성을 처리하는 사용자 정의 모델 관리자 클래스를 작성하는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbf7b978a856d1fbba7defdda836703244e98b41" translate="yes" xml:space="preserve">
          <source>An alternative to the format suffixes is to include the requested format in a query parameter. REST framework provides this option by default, and it is used in the browsable API to switch between differing available representations.</source>
          <target state="translated">형식 접미사에 대한 대안은 요청 된 형식을 쿼리 매개 변수에 포함시키는 것입니다. REST 프레임 워크는 기본적으로이 옵션을 제공하며 찾아보기 가능한 API에서 사용 가능한 다른 표현 간을 전환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0967f4ea70852bc3f9f8f186c297d820fd78a658" translate="yes" xml:space="preserve">
          <source>An automatically determined set of fields.</source>
          <target state="translated">자동으로 결정된 필드 세트.</target>
        </trans-unit>
        <trans-unit id="b16cf4fbce027d77a139782f5c4e0e43e8f31eaf" translate="yes" xml:space="preserve">
          <source>An example of a view that uses &lt;code&gt;StaticHTMLRenderer&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;StaticHTMLRenderer&lt;/code&gt; 를 사용하는 뷰의 예 :</target>
        </trans-unit>
        <trans-unit id="27b349dac92343be50141482340d7ecf90837b03" translate="yes" xml:space="preserve">
          <source>An example of a view that uses &lt;code&gt;TemplateHTMLRenderer&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TemplateHTMLRenderer&lt;/code&gt; 를 사용하는보기의 예 :</target>
        </trans-unit>
        <trans-unit id="6397c4e030fd6e971bc2cd72c82e644be6f140e9" translate="yes" xml:space="preserve">
          <source>An explicit &lt;code&gt;.template_name&lt;/code&gt; attribute set on this class.</source>
          <target state="translated">이 클래스에 명시적인 &lt;code&gt;.template_name&lt;/code&gt; 속성이 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="2eece6e7748f616432ea939d382a4f4ce3a81aab" translate="yes" xml:space="preserve">
          <source>An explicit &lt;code&gt;template_name&lt;/code&gt; argument passed to the response.</source>
          <target state="translated">명시 적 &lt;code&gt;template_name&lt;/code&gt; 인수가 응답에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="e9a484e895640bda87e8fc422a1bcf15608a5dd7" translate="yes" xml:space="preserve">
          <source>An image representation. Validates the uploaded file content as matching a known image format.</source>
          <target state="translated">이미지 표현. 업로드 된 파일 내용을 알려진 이미지 형식과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9382ea9a98e317d03ba6204209b414e589476710" translate="yes" xml:space="preserve">
          <source>An integer of 0 or more, that may be used to specify the number of application proxies that the API runs behind. This allows throttling to more accurately identify client IP addresses. If set to &lt;code&gt;None&lt;/code&gt; then less strict IP matching will be used by the throttle classes.</source>
          <target state="translated">API가 실행되는 애플리케이션 프록시 수를 지정하는 데 사용될 수있는 0 이상의 정수입니다. 이를 통해 제한을 통해 클라이언트 IP 주소를보다 정확하게 식별 할 수 있습니다. &lt;code&gt;None&lt;/code&gt; 설정 하면 스로틀 클래스에서 덜 엄격한 IP 일치가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ccc142577244ee31b00d19d5b777b37ee20137fa" translate="yes" xml:space="preserve">
          <source>An integer representation.</source>
          <target state="translated">정수 표현.</target>
        </trans-unit>
        <trans-unit id="1d01fe241f53058476f3c279f504b31f45fe944f" translate="yes" xml:space="preserve">
          <source>And in your &lt;code&gt;urls.py&lt;/code&gt;:</source>
          <target state="translated">그리고 &lt;code&gt;urls.py&lt;/code&gt; 에서 :</target>
        </trans-unit>
        <trans-unit id="14f7cbd299e8e7fdb98f06bcda7a46dc72044a75" translate="yes" xml:space="preserve">
          <source>And now we can add a &lt;code&gt;.save()&lt;/code&gt; method to our model class:</source>
          <target state="translated">이제 모델 클래스에 &lt;code&gt;.save()&lt;/code&gt; 메소드를 추가 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5a688136a7fda817d10ac5848b8f23e47407fd87" translate="yes" xml:space="preserve">
          <source>And the following two models, which may have associated tags:</source>
          <target state="translated">관련 태그가있을 수있는 다음 두 가지 모델 :</target>
        </trans-unit>
        <trans-unit id="91240ceae67458cba85a4879684ebc85a134ab6b" translate="yes" xml:space="preserve">
          <source>And then add a url pattern for the snippet highlights:</source>
          <target state="translated">그런 다음 스 니펫 하이라이트에 대한 URL 패턴을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ae057b5d890ed0c7e38d90f542d3f52236b048ba" translate="yes" xml:space="preserve">
          <source>And to validate numbers up to anything less than one billion with a resolution of 10 decimal places:</source>
          <target state="translated">소수점 이하 10 자리의 분해능으로 10 억 미만의 숫자를 검증하려면 :</target>
        </trans-unit>
        <trans-unit id="54812275003c8d03c16b6f67a43df539bb092432" translate="yes" xml:space="preserve">
          <source>And, at the end of the file, add a pattern to include the login and logout views for the browsable API.</source>
          <target state="translated">또한 파일 끝에 탐색 가능한 API에 대한 로그인 및 로그 아웃보기를 포함 할 패턴을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9b34a50b774804b4d2557305cb0a399206521e91" translate="yes" xml:space="preserve">
          <source>AnonRateThrottle</source>
          <target state="translated">AnonRateThrottle</target>
        </trans-unit>
        <trans-unit id="052d41d82be1969ee17e8802aeeb435ada93cde8" translate="yes" xml:space="preserve">
          <source>Another scenario where you might want to use multiple throttles would be if you need to impose different constraints on different parts of the API, due to some services being particularly resource-intensive.</source>
          <target state="translated">여러 스로틀을 사용하려는 또 다른 시나리오는 일부 서비스가 특히 리소스를 많이 사용하기 때문에 API의 다른 부분에 서로 다른 제약 조건을 적용해야하는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="99cbc2d356dbf76758d52521a341a28d672d0bf2" translate="yes" xml:space="preserve">
          <source>Another style of filtering might involve restricting the queryset based on some part of the URL.</source>
          <target state="translated">다른 필터링 스타일은 URL의 일부를 기반으로 쿼리 세트를 제한하는 것을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8af66ea0e3a8b91fd732b2b612ac153a5a506850" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;APIException&lt;/code&gt; exceptions will be caught and mediated into appropriate responses.</source>
          <target state="translated">모든 &lt;code&gt;APIException&lt;/code&gt; 예외가 포착되어 적절한 응답으로 중재됩니다.</target>
        </trans-unit>
        <trans-unit id="86e87cd29be59a23fb419b267c36f222aaec5f7d" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments will be included in the &lt;code&gt;validated_data&lt;/code&gt; argument when &lt;code&gt;.create()&lt;/code&gt; or &lt;code&gt;.update()&lt;/code&gt; are called.</source>
          <target state="translated">&lt;code&gt;.create()&lt;/code&gt; 또는 &lt;code&gt;.update()&lt;/code&gt; 가 호출 될 때 추가 키워드 인수가 &lt;code&gt;validated_data&lt;/code&gt; 인수에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3dd97d19dd786bf20aa8c11eb1698afcde86753" translate="yes" xml:space="preserve">
          <source>Any example validation error might look like this:</source>
          <target state="translated">모든 유효성 검사 오류 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="15817563e39898ac2e2909b4b1ef6d4e02597fa8" translate="yes" xml:space="preserve">
          <source>Any exception thrown by the handler method will be passed to this method, which either returns a &lt;code&gt;Response&lt;/code&gt; instance, or re-raises the exception.</source>
          <target state="translated">핸들러 메소드에 의해 발생 된 예외는이 메소드로 전달되어 &lt;code&gt;Response&lt;/code&gt; 인스턴스 를 리턴 하거나 예외를 다시 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="fd1258b8274b2c889136800f5a54a6c5e0f72505" translate="yes" xml:space="preserve">
          <source>Any global settings for a REST framework API are kept in a single configuration dictionary named &lt;code&gt;REST_FRAMEWORK&lt;/code&gt;. Start off by adding the following to your &lt;code&gt;settings.py&lt;/code&gt; module:</source>
          <target state="translated">REST 프레임 워크 API에 대한 모든 글로벌 설정은 &lt;code&gt;REST_FRAMEWORK&lt;/code&gt; 라는 단일 구성 사전에 유지됩니다 . &lt;code&gt;settings.py&lt;/code&gt; 모듈에 다음을 추가하여 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="64d6592eed7cc4301c56efb2de7e4f789aea6293" translate="yes" xml:space="preserve">
          <source>Any relationships such as foreign keys on the model will be mapped to &lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt;. Reverse relationships are not included by default unless explicitly included as specified in the &lt;a href=&quot;../relations/index&quot;&gt;serializer relations&lt;/a&gt; documentation.</source>
          <target state="translated">모델의 외래 키와 같은 모든 관계는 &lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt; 에 매핑됩니다 . &lt;a href=&quot;../relations/index&quot;&gt;직렬화 기 관계&lt;/a&gt; 문서에 지정된대로 명시 적으로 포함되지 않는 한 기본적으로 역관계는 포함되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="76b4138ca92e13aa1fc9c526f19412ce158982af" translate="yes" xml:space="preserve">
          <source>Apache Authentication How-To</source>
          <target state="translated">아파치 인증 사용법</target>
        </trans-unit>
        <trans-unit id="fa887992a77cdf177f4aa3b79860e213b11a087b" translate="yes" xml:space="preserve">
          <source>Apache mod_wsgi specific configuration</source>
          <target state="translated">Apache mod_wsgi 특정 구성</target>
        </trans-unit>
        <trans-unit id="a0478ca5f4c068ca3ac12f9474f6a15865ce9053" translate="yes" xml:space="preserve">
          <source>Arguments:</source>
          <target state="translated">Arguments:</target>
        </trans-unit>
        <trans-unit id="ab31f6e6fd333d0e1f29fe5ed1e1ddd8f3435b70" translate="yes" xml:space="preserve">
          <source>As REST framework's &lt;code&gt;Request&lt;/code&gt; extends Django's &lt;code&gt;HttpRequest&lt;/code&gt;, all the other standard attributes and methods are also available. For example the &lt;code&gt;request.META&lt;/code&gt; and &lt;code&gt;request.session&lt;/code&gt; dictionaries are available as normal.</source>
          <target state="translated">REST 프레임 워크의 &lt;code&gt;Request&lt;/code&gt; Django의 &lt;code&gt;HttpRequest&lt;/code&gt; 를 확장 함에 따라 다른 모든 표준 속성 및 메소드도 사용할 수 있습니다. 예를 들어 &lt;code&gt;request.META&lt;/code&gt; 및 &lt;code&gt;request.session&lt;/code&gt; 사전을 정상적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1857d60d1a09ae95374b744b72e8a17fdc37aae6" translate="yes" xml:space="preserve">
          <source>As a rule, it's probably better practice to return absolute URIs from your Web APIs, such as &lt;code&gt;http://example.com/foobar&lt;/code&gt;, rather than returning relative URIs, such as &lt;code&gt;/foobar&lt;/code&gt;.</source>
          <target state="translated">일반적 으로 &lt;code&gt;/foobar&lt;/code&gt; 와 같은 상대 URI를 반환하는 대신 &lt;code&gt;http://example.com/foobar&lt;/code&gt; 와 같은 웹 API에서 절대 URI를 반환 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4ceb9fd46750a2dd170bd1f02af9583d49307365" translate="yes" xml:space="preserve">
          <source>As an example of how REST framework uses explicit validation, we'll take a simple model class that has a field with a uniqueness constraint.</source>
          <target state="translated">REST 프레임 워크가 명시 적 유효성 검증을 사용하는 방법의 예로, 고유 제한 조건이있는 필드가있는 간단한 모델 클래스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="548b597f43be3d7f2bef7fe320675dc787cba6fb" translate="yes" xml:space="preserve">
          <source>As an example, if you are sending &lt;code&gt;json&lt;/code&gt; encoded data using jQuery with the &lt;a href=&quot;https://api.jquery.com/jQuery.ajax/&quot;&gt;.ajax() method&lt;/a&gt;, you should make sure to include the &lt;code&gt;contentType: 'application/json'&lt;/code&gt; setting.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;https://api.jquery.com/jQuery.ajax/&quot;&gt;.ajax () 메소드&lt;/a&gt; 와 함께 jQuery를 사용하여 &lt;code&gt;json&lt;/code&gt; 인코딩 데이터를 전송 하는 경우 &lt;code&gt;contentType: 'application/json'&lt;/code&gt; 설정 을 포함시켜야 합니다.</target>
        </trans-unit>
        <trans-unit id="b9b3e20135008fb9f139f67c9400ba2d0d95cded" translate="yes" xml:space="preserve">
          <source>As an example, let's create a field that can be used to represent the class name of the object being serialized:</source>
          <target state="translated">예를 들어 직렬화되는 객체의 클래스 이름을 나타내는 데 사용할 수있는 필드를 만들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="e2806075cd60db46c2f93bb201dbb4c4e8d4a24f" translate="yes" xml:space="preserve">
          <source>As usual CSRF validation will only apply to any session authenticated views. This means CSRF validation will only occur if the client has been logged in by calling &lt;code&gt;login()&lt;/code&gt;.</source>
          <target state="translated">평소와 같이 CSRF 유효성 검사는 모든 세션 인증보기에만 적용됩니다. 이는 &lt;code&gt;login()&lt;/code&gt; 을 호출하여 클라이언트가 로그인 한 경우에만 CSRF 유효성 검사가 수행됨을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="a254c23ef143531b0b3b1accbfbfbb5f6111c8b5" translate="yes" xml:space="preserve">
          <source>As usual we need to add the new views that we've created in to our URLconf. We'll add a url pattern for our new API root in &lt;code&gt;snippets/urls.py&lt;/code&gt;:</source>
          <target state="translated">평소와 같이 URLconf에 만든 새 뷰를 추가해야합니다. &lt;code&gt;snippets/urls.py&lt;/code&gt; 에 새 API 루트에 대한 URL 패턴을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="feb438aebb83abedf2681f6247af6a8f1e1ad0a2" translate="yes" xml:space="preserve">
          <source>As well as allowing clients to perform searches and filtering, generic filter backends can be useful for restricting which objects should be visible to any given request or user.</source>
          <target state="translated">클라이언트가 검색 및 필터링을 수행 할 수있을뿐만 아니라 일반 필터 백엔드는 특정 요청 또는 사용자에게 표시 할 오브젝트를 제한하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd672ce4380530b59c02a6d4bc5ed969170ecfd6" translate="yes" xml:space="preserve">
          <source>As well as being able to override the default queryset, REST framework also includes support for generic filtering backends that allow you to easily construct complex searches and filters.</source>
          <target state="translated">기본 쿼리 세트를 무시할 수있을뿐만 아니라 REST 프레임 워크에는 복잡한 검색 및 필터를 쉽게 구성 할 수있는 일반 필터링 백엔드 지원도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a34f164cfc9f53bc51873d82a3087f8e1ff63bae" translate="yes" xml:space="preserve">
          <source>As well as global permissions, that are run against all incoming requests, you can also create object-level permissions, that are only run against operations that affect a particular object instance. For example:</source>
          <target state="translated">들어오는 모든 요청에 ​​대해 실행되는 전역 권한뿐만 아니라 특정 개체 인스턴스에 영향을 미치는 작업에 대해서만 실행되는 개체 수준 권한을 만들 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="14a757247f6a87cc009055c73c6066fc617ed90e" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ChoiceField&lt;/code&gt;, both the &lt;code&gt;allow_blank&lt;/code&gt; and &lt;code&gt;allow_null&lt;/code&gt; options are valid, although it is highly recommended that you only use one and not both. &lt;code&gt;allow_blank&lt;/code&gt; should be preferred for textual choices, and &lt;code&gt;allow_null&lt;/code&gt; should be preferred for numeric or other non-textual choices.</source>
          <target state="translated">와 마찬가지로 &lt;code&gt;ChoiceField&lt;/code&gt; 는 모두 &lt;code&gt;allow_blank&lt;/code&gt; 및 &lt;code&gt;allow_null&lt;/code&gt; 매우 당신이 하나가 아니라 둘 다 사용하는 것이 좋습니다 있지만 옵션은 유효합니다. &lt;code&gt;allow_blank&lt;/code&gt; 는 텍스트 선택을 선호해야하며, &lt;code&gt;allow_null&lt;/code&gt; 은 숫자 또는 다른 비 텍스트 선택을 선호한다.</target>
        </trans-unit>
        <trans-unit id="0c6d63184b4cd25ef4cd200f30eb93b3c7f2b43f" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;DjangoModelPermissions&lt;/code&gt; you can use custom model permissions by overriding &lt;code&gt;DjangoObjectPermissions&lt;/code&gt; and setting the &lt;code&gt;.perms_map&lt;/code&gt; property. Refer to the source code for details.</source>
          <target state="translated">와 마찬가지로 &lt;code&gt;DjangoModelPermissions&lt;/code&gt; 당신이 재정 의하여 사용자 정의 모델 권한을 사용할 수 있습니다 &lt;code&gt;DjangoObjectPermissions&lt;/code&gt; 을 하고 설정 &lt;code&gt;.perms_map&lt;/code&gt; 속성을. 자세한 내용은 소스 코드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8c8b10ae86f828b3515e3d8df41a8a831fe7788e" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;DjangoModelPermissions&lt;/code&gt;, this permission must only be applied to views that have a &lt;code&gt;.queryset&lt;/code&gt; property or &lt;code&gt;.get_queryset()&lt;/code&gt; method. Authorization will only be granted if the user &lt;em&gt;is authenticated&lt;/em&gt; and has the &lt;em&gt;relevant per-object permissions&lt;/em&gt; and &lt;em&gt;relevant model permissions&lt;/em&gt; assigned.</source>
          <target state="translated">&lt;code&gt;DjangoModelPermissions&lt;/code&gt; 와 마찬가지로이 권한은 &lt;code&gt;.queryset&lt;/code&gt; 속성 또는 &lt;code&gt;.get_queryset()&lt;/code&gt; 메서드 가있는 뷰에만 적용해야합니다 . 인증은 사용자 &lt;em&gt;가 인증&lt;/em&gt; 되고 &lt;em&gt;관련 개체 별 권한&lt;/em&gt; 및 &lt;em&gt;관련 모델 권한이&lt;/em&gt; 할당 된 경우에만 부여 됩니다.</target>
        </trans-unit>
        <trans-unit id="00daa11b54779266636bfd22587c60b47b4b5b7a" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ModelViewSet&lt;/code&gt;, you'll normally need to provide at least the &lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;serializer_class&lt;/code&gt; attributes. For example:</source>
          <target state="translated">&lt;code&gt;ModelViewSet&lt;/code&gt; 과 마찬가지로 일반적으로 최소한 &lt;code&gt;queryset&lt;/code&gt; 및 &lt;code&gt;serializer_class&lt;/code&gt; 속성 을 제공해야 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1bf71a8ccb7870141aebd662e08fef7d0cf36e67" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;SimpleRouter&lt;/code&gt; the trailing slashes on the URL routes can be removed by setting the &lt;code&gt;trailing_slash&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt; when instantiating the router.</source>
          <target state="translated">&lt;code&gt;SimpleRouter&lt;/code&gt; 와 마찬가지로 라우터를 인스턴스화 할 때 &lt;code&gt;trailing_slash&lt;/code&gt; 인수를 &lt;code&gt;False&lt;/code&gt; 로 설정하여 URL 경로의 후행 슬래시를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1895db66e711dcc1958471199606e361316fffe7" translate="yes" xml:space="preserve">
          <source>As with any other &lt;code&gt;TemplateResponse&lt;/code&gt;, this method is called to render the serialized data of the response into the final response content. When &lt;code&gt;.render()&lt;/code&gt; is called, the response content will be set to the result of calling the &lt;code&gt;.render(data, accepted_media_type, renderer_context)&lt;/code&gt; method on the &lt;code&gt;accepted_renderer&lt;/code&gt; instance.</source>
          <target state="translated">다른 &lt;code&gt;TemplateResponse&lt;/code&gt; 와 마찬가지로이 메소드는 응답의 직렬화 된 데이터를 최종 응답 컨텐츠로 렌더링하기 위해 호출됩니다. 경우 &lt;code&gt;.render()&lt;/code&gt; 호출하고, 상기 응답 콘텐츠는 호출의 결과로 설정된다 &lt;code&gt;.render(data, accepted_media_type, renderer_context)&lt;/code&gt; 상의 메소드 &lt;code&gt;accepted_renderer&lt;/code&gt; 의 인스턴스.</target>
        </trans-unit>
        <trans-unit id="f1b4546aede8d117773cba3f0e45270a90157ed7" translate="yes" xml:space="preserve">
          <source>As with permissions and authentication, throttling in REST framework is always defined as a list of classes.</source>
          <target state="translated">권한 및 인증과 마찬가지로 REST 프레임 워크에서의 조절은 항상 클래스 목록으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="f8790e19f3925fea33b554fc2b02293caaf00c8e" translate="yes" xml:space="preserve">
          <source>As with permissions, multiple throttles may be used. Your API might have a restrictive throttle for unauthenticated requests, and a less restrictive throttle for authenticated requests.</source>
          <target state="translated">권한과 마찬가지로 여러 스로틀을 사용할 수 있습니다. API에는 인증되지 않은 요청에 대한 제한 스로틀이 있고 인증 된 요청에 대한 덜 제한적인 스로틀이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d402b0f3c34bdf009d52174e78cdb2bdf1825211" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;reverse&lt;/code&gt; function, you should &lt;strong&gt;include the request as a keyword argument&lt;/strong&gt; to the function, for example:</source>
          <target state="translated">와 마찬가지로 &lt;code&gt;reverse&lt;/code&gt; 기능을 수행해야 &lt;strong&gt;키워드 인수로 요청을 포함&lt;/strong&gt; 예를 들어, 함수를 :</target>
        </trans-unit>
        <trans-unit id="277efe000f04c4854d4ae142161556be653643b4" translate="yes" xml:space="preserve">
          <source>Associating Snippets with Users</source>
          <target state="translated">스 니펫을 사용자와 연관</target>
        </trans-unit>
        <trans-unit id="262cd7b3d6fabfa86cf8643b167658c0bf6a5412" translate="yes" xml:space="preserve">
          <source>At the moment relationships within our API are represented by using primary keys. In this part of the tutorial we'll improve the cohesion and discoverability of our API, by instead using hyperlinking for relationships.</source>
          <target state="translated">현재 API 내 관계는 기본 키를 사용하여 표현됩니다. 튜토리얼의이 부분에서는 관계에 하이퍼 링크를 사용하여 API의 응집력과 검색 가능성을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="b61033a343444ebed799d4383f6705ea6c27c07a" translate="yes" xml:space="preserve">
          <source>At this point we've translated the model instance into Python native datatypes. To finalise the serialization process we render the data into &lt;code&gt;json&lt;/code&gt;.</source>
          <target state="translated">이 시점에서 모델 인스턴스를 Python 기본 데이터 유형으로 변환했습니다. 직렬화 프로세스를 마무리하기 위해 데이터를 &lt;code&gt;json&lt;/code&gt; 으로 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="af5f6af3a9cd23351f88cabaf3be81acb89b6d0e" translate="yes" xml:space="preserve">
          <source>At this point we've translated the model instance into Python native datatypes. To finalize the serialization process we render the data into &lt;code&gt;json&lt;/code&gt;.</source>
          <target state="translated">이 시점에서 모델 인스턴스를 Python 기본 데이터 유형으로 변환했습니다. 직렬화 프로세스를 마무리하기 위해 데이터를 &lt;code&gt;json&lt;/code&gt; 으로 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="dea6f63c23218f19af20fc16842c1931bbdade40" translate="yes" xml:space="preserve">
          <source>Auth needs to be pluggable.</source>
          <target state="translated">인증은 플러그 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="409174a70b4c668b2da825c8e34e494647dea904" translate="yes" xml:space="preserve">
          <source>Authenticating</source>
          <target state="translated">Authenticating</target>
        </trans-unit>
        <trans-unit id="d1a133717ed2e3d83b37838a83588f384fff7c07" translate="yes" xml:space="preserve">
          <source>Authenticating with the API</source>
          <target state="translated">API로 인증</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="49e0c1aa528d028fb9a5af042d782a7e3d6c4275" translate="yes" xml:space="preserve">
          <source>Authentication is always run at the very start of the view, before the permission and throttling checks occur, and before any other code is allowed to proceed.</source>
          <target state="translated">인증은 항상보기 시작시, 권한 및 제한 검사가 수행되기 전에 그리고 다른 코드가 진행되기 전에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="49f5fe9e3e67af38f5a0bdd5a683a5117cadb951" translate="yes" xml:space="preserve">
          <source>Authentication is the mechanism of associating an incoming request with a set of identifying credentials, such as the user the request came from, or the token that it was signed with. The &lt;a href=&quot;../permissions/index&quot;&gt;permission&lt;/a&gt; and &lt;a href=&quot;../throttling/index&quot;&gt;throttling&lt;/a&gt; policies can then use those credentials to determine if the request should be permitted.</source>
          <target state="translated">인증은 들어오는 요청을 요청의 사용자 또는 서명 된 토큰과 같은 식별 자격 증명 세트와 연결하는 메커니즘입니다. 그런 다음 &lt;a href=&quot;../permissions/index&quot;&gt;권한&lt;/a&gt; 및 &lt;a href=&quot;../throttling/index&quot;&gt;제한&lt;/a&gt; 정책은 해당 자격 증명을 사용하여 요청을 허용해야하는지 여부를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22a9d6ae546047f9d203830e4943cb3e3f10b7b9" translate="yes" xml:space="preserve">
          <source>Authentication or identification by itself is not usually sufficient to gain access to information or code. For that, the entity requesting access must have authorization.</source>
          <target state="translated">인증이나 식별 그 자체만으로는 정보 나 코드에 액세스하기에 충분하지 않습니다. 이를 위해서는 액세스를 요청하는 엔터티에 권한이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="34aed4c0d9d20a37d0e40a3973026365f75f4b2e" translate="yes" xml:space="preserve">
          <source>Authentication settings</source>
          <target state="translated">인증 설정</target>
        </trans-unit>
        <trans-unit id="13eac5286cda5d3e17c0b951ff68b3225ca93cce" translate="yes" xml:space="preserve">
          <source>AuthenticationFailed</source>
          <target state="translated">AuthenticationFailed</target>
        </trans-unit>
        <trans-unit id="72fe6a59896fe12fa437e7912008cd3baf314da0" translate="yes" xml:space="preserve">
          <source>BaseSerializer</source>
          <target state="translated">BaseSerializer</target>
        </trans-unit>
        <trans-unit id="30a9f8a0441549550539e36ec0f9f9002255cfd0" translate="yes" xml:space="preserve">
          <source>Basic usage example:</source>
          <target state="translated">기본 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="cda87634942b254bbf33e86d16895c10036e5d5d" translate="yes" xml:space="preserve">
          <source>BasicAuthentication</source>
          <target state="translated">BasicAuthentication</target>
        </trans-unit>
        <trans-unit id="925289f0e426fca48b9a503578f41e37805924f2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;'snippets'&lt;/code&gt; is a &lt;em&gt;reverse&lt;/em&gt; relationship on the User model, it will not be included by default when using the &lt;code&gt;ModelSerializer&lt;/code&gt; class, so we needed to add an explicit field for it.</source>
          <target state="translated">때문에 &lt;code&gt;'snippets'&lt;/code&gt; A는 &lt;em&gt;역&lt;/em&gt; 사용자 모델에 관계가 사용하는 경우, 그것은 기본적으로 포함되지 않습니다 &lt;code&gt;ModelSerializer&lt;/code&gt; 의 우리가 그것을 명시 적으로 필드를 추가하는 데 필요한, 그래서 클래스를.</target>
        </trans-unit>
        <trans-unit id="cbba9d7db234dd7a5745d0778b84ce4294871be0" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;ModelViewSet&lt;/code&gt; extends &lt;code&gt;GenericAPIView&lt;/code&gt;, you'll normally need to provide at least the &lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;serializer_class&lt;/code&gt; attributes. For example:</source>
          <target state="translated">때문에 &lt;code&gt;ModelViewSet&lt;/code&gt; 가 확장 &lt;code&gt;GenericAPIView&lt;/code&gt; 을 , 당신은 일반적으로 적어도 제공해야합니다 &lt;code&gt;queryset&lt;/code&gt; 와 &lt;code&gt;serializer_class&lt;/code&gt; 특성을. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75be96fe56d31d3cf3bb933182c8924a760b8d49" translate="yes" xml:space="preserve">
          <source>Because of this more explicit style REST framework includes a few validator classes that are not available in core Django. These classes are detailed below.</source>
          <target state="translated">이보다 명시적인 스타일의 REST 프레임 워크에는 Django 코어에서 사용할 수없는 몇 가지 유효성 검사기 클래스가 포함되어 있습니다. 이러한 클래스는 아래에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="99e954b72ee25546ab1f855398bd40c142098c18" translate="yes" xml:space="preserve">
          <source>Because the API chooses the content type of the response based on the client request, it will, by default, return an HTML-formatted representation of the resource when that resource is requested by a web browser. This allows for the API to return a fully web-browsable HTML representation.</source>
          <target state="translated">API는 클라이언트 요청에 따라 응답의 컨텐츠 유형을 선택하므로 기본적으로 웹 브라우저가 해당 자원을 요청할 때 HTML 형식의 자원 표시를 리턴합니다. 이를 통해 API는 완전히 웹 브라우징 가능한 HTML 표현을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4486f3ca9358d9522b3925ebe7a3199b901726bb" translate="yes" xml:space="preserve">
          <source>Because the behavior of nested creates and updates can be ambiguous, and may require complex dependencies between related models, REST framework 3 requires you to always write these methods explicitly. The default &lt;code&gt;ModelSerializer&lt;/code&gt;&lt;code&gt;.create()&lt;/code&gt; and &lt;code&gt;.update()&lt;/code&gt; methods do not include support for writable nested representations.</source>
          <target state="translated">중첩 된 작성 및 업데이트 동작이 모호 할 수 있고 관련 모델간에 복잡한 종속성이 필요할 수 있으므로 REST 프레임 워크 3에서는 항상 이러한 메소드를 명시 적으로 작성해야합니다. 기본 &lt;code&gt;ModelSerializer&lt;/code&gt; &lt;code&gt;.create()&lt;/code&gt; 및 &lt;code&gt;.update()&lt;/code&gt; 메소드에는 쓰기 가능한 중첩 표현에 대한 지원이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="03c838cd4bf404838425986a4f0e65deaa558e75" translate="yes" xml:space="preserve">
          <source>Because the serializers have been fundamentally redesigned with 3.0 this API no longer exists. You can still modify the fields that get created but you'll need to refer to the source code, and be aware that if the changes you make are against private bits of API then they may be subject to change.</source>
          <target state="translated">시리얼 라이저는 기본적으로 3.0으로 재 설계되었으므로이 API는 더 이상 존재하지 않습니다. 생성 된 필드를 계속 수정할 수 있지만 소스 코드를 참조해야하며 변경 사항이 API의 개인 비트에 대해 변경되는 경우 변경 될 수 있음을 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a3c04d3a2e7dd46b0961b8656bff5af966a8e8a6" translate="yes" xml:space="preserve">
          <source>Because this class provides the same interface as the &lt;code&gt;Serializer&lt;/code&gt; class, you can use it with the existing generic class-based views exactly as you would for a regular &lt;code&gt;Serializer&lt;/code&gt; or &lt;code&gt;ModelSerializer&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;Serializer&lt;/code&gt; 클래스 와 동일한 인터페이스를 제공하므로 일반 &lt;code&gt;Serializer&lt;/code&gt; 또는 &lt;code&gt;ModelSerializer&lt;/code&gt; 와 동일한 방식으로 기존 일반 클래스 기반 뷰와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34cd93d3b41dde5d7aec419e39c01da1626bd1f5" translate="yes" xml:space="preserve">
          <source>Because we now have a set of permissions on the API, we need to authenticate our requests to it if we want to edit any snippets. We haven't set up any &lt;a href=&quot;../../api-guide/authentication/index&quot;&gt;authentication classes&lt;/a&gt;, so the defaults are currently applied, which are &lt;code&gt;SessionAuthentication&lt;/code&gt; and &lt;code&gt;BasicAuthentication&lt;/code&gt;.</source>
          <target state="translated">이제 API에 대한 권한 세트가 있으므로 스 니펫을 수정하려면 요청을 인증해야합니다. &lt;a href=&quot;../../api-guide/authentication/index&quot;&gt;인증 클래스를&lt;/a&gt; 설정하지 않았 으므로 현재 &lt;code&gt;SessionAuthentication&lt;/code&gt; 기본값 ( &lt;code&gt;BasicAuthentication&lt;/code&gt; 및 BasicAuthentication) 이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="111239a25ddb27b5a84faa50069acffd0a885ccc" translate="yes" xml:space="preserve">
          <source>Because we're using &lt;code&gt;ViewSet&lt;/code&gt; classes rather than &lt;code&gt;View&lt;/code&gt; classes, we actually don't need to design the URL conf ourselves. The conventions for wiring up resources into views and urls can be handled automatically, using a &lt;code&gt;Router&lt;/code&gt; class. All we need to do is register the appropriate view sets with a router, and let it do the rest.</source>
          <target state="translated">우리는 &lt;code&gt;View&lt;/code&gt; 클래스 대신 &lt;code&gt;ViewSet&lt;/code&gt; 클래스를 사용하기 때문에 실제로 URL conf를 직접 디자인 할 필요는 없습니다. 리소스를 뷰와 URL에 연결하는 규칙은 &lt;code&gt;Router&lt;/code&gt; 클래스를 사용하여 자동으로 처리 할 수 ​​있습니다 . 라우터에 적절한 뷰 세트를 등록하고 나머지는 모두 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d5e48450e57bb1f3f7548605ebcf2c61d72d274" translate="yes" xml:space="preserve">
          <source>Because we're using viewsets instead of views, we can automatically generate the URL conf for our API, by simply registering the viewsets with a router class.</source>
          <target state="translated">뷰 대신 뷰 세트를 사용하므로 라우터 클래스에 뷰 세트를 등록하여 API에 대한 URL conf를 자동으로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec0030ace90803234901b1972aa82435659c294f" translate="yes" xml:space="preserve">
          <source>Because we've included format suffixed URLs such as &lt;code&gt;'.json'&lt;/code&gt;, we also need to indicate on the &lt;code&gt;highlight&lt;/code&gt; field that any format suffixed hyperlinks it returns should use the &lt;code&gt;'.html'&lt;/code&gt; suffix.</source>
          <target state="translated">&lt;code&gt;'.json'&lt;/code&gt; 과 같은 형식 접미사 URL을 포함 했으므로 &lt;code&gt;highlight&lt;/code&gt; 필드에 반환되는 모든 형식 접미사 하이퍼 링크는 &lt;code&gt;'.html'&lt;/code&gt; 접미사를 사용해야 함을 강조 표시 필드 에 표시 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ebf65f4713147a6adf7ebfc27a79022acd6ca97c" translate="yes" xml:space="preserve">
          <source>Before a TemplateResponse instance can be returned to the client, it must be rendered. The rendering process takes the intermediate representation of template and context, and turns it into the final byte stream that can be served to the client.</source>
          <target state="translated">TemplateResponse 인스턴스를 클라이언트에 반환하려면 먼저 렌더링해야합니다. 렌더링 프로세스는 템플릿과 컨텍스트의 중간 표현을 가져 와서 클라이언트에 제공 할 수있는 최종 바이트 스트림으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="bbfb9d015dd42106f2ebfa4c0f9c938ce5879236" translate="yes" xml:space="preserve">
          <source>Before running the main body of the view each permission in the list is checked. If any permission check fails an &lt;code&gt;exceptions.PermissionDenied&lt;/code&gt; or &lt;code&gt;exceptions.NotAuthenticated&lt;/code&gt; exception will be raised, and the main body of the view will not run.</source>
          <target state="translated">보기의 본문을 실행하기 전에 목록의 각 권한이 확인됩니다. 권한 검사에 실패하면 &lt;code&gt;exceptions.PermissionDenied&lt;/code&gt; 가 발생합니다 .PermissionDenied 또는 &lt;code&gt;exceptions.NotAuthenticated&lt;/code&gt; 예외가 발생하고보기의 본문이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d56cf6bfd48198ea7479ab88de3d6d7d9ea5ba23" translate="yes" xml:space="preserve">
          <source>Before running the main body of the view each throttle in the list is checked. If any throttle check fails an &lt;code&gt;exceptions.Throttled&lt;/code&gt; exception will be raised, and the main body of the view will not run.</source>
          <target state="translated">뷰의 본체를 실행하기 전에 목록의 각 스로틀이 점검됩니다. 스로틀 검사에 실패하면 &lt;code&gt;exceptions.Throttled&lt;/code&gt; 가 발생합니다. 스로틀 된 예외가 발생하고 뷰의 본문이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85b777325def458a3c67eca5f104fcf7f424d292" translate="yes" xml:space="preserve">
          <source>Before we do anything else we'll create a new virtual environment, using &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv&lt;/a&gt;. This will make sure our package configuration is kept nicely isolated from any other projects we're working on.</source>
          <target state="translated">다른 작업을하기 전에 &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv를&lt;/a&gt; 사용하여 새로운 가상 환경을 만듭니다 . 이를 통해 패키지 구성이 현재 진행중인 다른 프로젝트와 잘 격리되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c5055ad0db7b7bb1f8efc342195f67f3f54ec29" translate="yes" xml:space="preserve">
          <source>Before we go any further we'll familiarize ourselves with using our new Serializer class. Let's drop into the Django shell.</source>
          <target state="translated">더 나아 가기 전에 새로운 Serializer 클래스 사용에 익숙해 질 것입니다. Django shell에 들어가 보자.</target>
        </trans-unit>
        <trans-unit id="3ad9fb75fb33347503267e992f96af98b0cc28ff" translate="yes" xml:space="preserve">
          <source>Binding ViewSets to URLs explicitly</source>
          <target state="translated">ViewSet을 URL에 명시 적으로 바인딩</target>
        </trans-unit>
        <trans-unit id="aafa078aec21edbd3a9df037cf91c28f8fd7cba9" translate="yes" xml:space="preserve">
          <source>Boolean fields</source>
          <target state="translated">부울 필드</target>
        </trans-unit>
        <trans-unit id="e661326b86b56c73e2281ceb60444cc34611bb1f" translate="yes" xml:space="preserve">
          <source>BooleanField</source>
          <target state="translated">BooleanField</target>
        </trans-unit>
        <trans-unit id="6d847b95828dd0fabfffc6b331108e2dd5180b78" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;URLPathVersioning&lt;/code&gt; and &lt;code&gt;NamespaceVersioning&lt;/code&gt; are reasonable if you just need a simple versioning scheme. The &lt;code&gt;URLPathVersioning&lt;/code&gt; approach might be better suitable for small ad-hoc projects, and the &lt;code&gt;NamespaceVersioning&lt;/code&gt; is probably easier to manage for larger projects.</source>
          <target state="translated">두 &lt;code&gt;URLPathVersioning&lt;/code&gt; 및 &lt;code&gt;NamespaceVersioning&lt;/code&gt; 은 그냥 체계를 버전 간단한 필요하면 적당하다. &lt;code&gt;URLPathVersioning&lt;/code&gt; 의 접근 방식은 작은 임시 프로젝트에 더 적합 할 수도, 그리고 &lt;code&gt;NamespaceVersioning&lt;/code&gt; 은 아마 더 큰 프로젝트를 쉽게 관리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2771637855f759c542a27be1ce37a21c2c55281" translate="yes" xml:space="preserve">
          <source>Both of these come with a trade-off. Using regular views and URL confs is more explicit and gives you more control. ViewSets are helpful if you want to get up and running quickly, or when you have a large API and you want to enforce a consistent URL configuration throughout.</source>
          <target state="translated">둘 다 트레이드 오프와 함께 제공됩니다. 정기적 인보기와 URL conf를 사용하는 것이보다 명확하고 더 제어 할 수 있습니다. ViewSets는 빠르게 시작하고 실행하거나 큰 API가 있고 전체적으로 일관된 URL 구성을 시행하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="85144a4cb39a8cbb8310c72ccba0d3b28ddb0078" translate="yes" xml:space="preserve">
          <source>Both styles &quot;&lt;code&gt;PUT&lt;/code&gt; as 404&quot; and &quot;&lt;code&gt;PUT&lt;/code&gt; as create&quot; can be valid in different circumstances, but from version 3.0 onwards we now use 404 behavior as the default, due to it being simpler and more obvious.</source>
          <target state="translated">&quot; &lt;code&gt;PUT&lt;/code&gt; as 404&quot;및 &quot; &lt;code&gt;PUT&lt;/code&gt; as create&quot; 스타일 은 서로 다른 상황에서 유효 할 수 있지만 버전 3.0부터는 더 간단하고 명확 해 졌으므로 이제 404 동작을 기본값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="eb25287f6c7de167910844a66437bfce35aff899" translate="yes" xml:space="preserve">
          <source>Both styles conform to &lt;a href=&quot;https://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt;, and are syntactically valid JSON. The unicode style is preferred as being more user-friendly when inspecting API responses.</source>
          <target state="translated">두 스타일 모두 &lt;a href=&quot;https://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627을&lt;/a&gt; 준수하며 구문 상 유효한 JSON입니다. 유니 코드 스타일은 API 응답을 검사 할 때보다 사용자 친화적 인 것으로 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="b08fde39e2490d07787f932f095d4fc45d7ee7a8" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;.create()&lt;/code&gt; and &lt;code&gt;.update()&lt;/code&gt; methods are optional. You can implement either neither, one, or both of them, depending on the use-case for your serializer class.</source>
          <target state="translated">양 &lt;code&gt;.create()&lt;/code&gt; 및 &lt;code&gt;.update()&lt;/code&gt; 메소드는 선택 사항입니다. 직렬 변환기 클래스의 유스 케이스에 따라 둘 중 하나 또는 둘 다를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cc519d00cc04f0c1fc28520b5eb9d7994204812" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;allow_blank&lt;/code&gt; and &lt;code&gt;allow_null&lt;/code&gt; are valid options on &lt;code&gt;ChoiceField&lt;/code&gt;, although it is highly recommended that you only use one and not both. &lt;code&gt;allow_blank&lt;/code&gt; should be preferred for textual choices, and &lt;code&gt;allow_null&lt;/code&gt; should be preferred for numeric or other non-textual choices.</source>
          <target state="translated">양쪽 &lt;code&gt;allow_blank&lt;/code&gt; 및 &lt;code&gt;allow_null&lt;/code&gt; 은 유효 옵션입니다 &lt;code&gt;ChoiceField&lt;/code&gt; 매우 당신이 하나가 아니라 둘 다 사용하는 것이 좋습니다 있지만. &lt;code&gt;allow_blank&lt;/code&gt; 는 텍스트 선택을 선호해야하며, &lt;code&gt;allow_null&lt;/code&gt; 은 숫자 또는 다른 비 텍스트 선택을 선호한다.</target>
        </trans-unit>
        <trans-unit id="c0e1fd65c922058ff3ae891c17daf82189a44bd8" translate="yes" xml:space="preserve">
          <source>Browsability</source>
          <target state="translated">Browsability</target>
        </trans-unit>
        <trans-unit id="ff8d2fd6da0acc0dfdb6c3544d865bf0bb373741" translate="yes" xml:space="preserve">
          <source>BrowsableAPIRenderer</source>
          <target state="translated">BrowsableAPIRenderer</target>
        </trans-unit>
        <trans-unit id="704c13d624aeec5b311490871e8ad1d178b03c10" translate="yes" xml:space="preserve">
          <source>Browser enhancements</source>
          <target state="translated">브라우저 향상</target>
        </trans-unit>
        <trans-unit id="2297b6823277d59ae5717234a21a689f0141bbf2" translate="yes" xml:space="preserve">
          <source>Browser-based &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; forms are transparently supported.</source>
          <target state="translated">브라우저 기반 &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;PATCH&lt;/code&gt; 및 &lt;code&gt;DELETE&lt;/code&gt; 양식이 투명하게 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="a41acb5b056590caa62370a6912c43a73124ee6d" translate="yes" xml:space="preserve">
          <source>Browsing the API</source>
          <target state="translated">API 찾아보기</target>
        </trans-unit>
        <trans-unit id="b6070344b699c38b399143d4c16680a60ea3e065" translate="yes" xml:space="preserve">
          <source>But we also get the built-in validation for free:</source>
          <target state="translated">그러나 우리는 또한 내장 된 검증을 무료로받습니다 :</target>
        </trans-unit>
        <trans-unit id="6d6cac0053857ac99a3e2f70a4f13726bdc6e05c" translate="yes" xml:space="preserve">
          <source>By convention you should import the serializers module and use a fully qualified &lt;code&gt;ValidationError&lt;/code&gt; style, in order to differentiate it from Django's built-in validation error. For example. &lt;code&gt;raise serializers.ValidationError('This field must be an integer value.')&lt;/code&gt;</source>
          <target state="translated">일반적 으로 Django의 내장 유효성 검사 오류와 구별하기 위해 serializers 모듈을 가져와 정규화 된 &lt;code&gt;ValidationError&lt;/code&gt; 스타일을 사용해야합니다 . 예를 들어. &lt;code&gt;raise serializers.ValidationError('This field must be an integer value.')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2da1e11d1b267eb26866a99ab18f0a13cd6c82f0" translate="yes" xml:space="preserve">
          <source>By creating your own base &lt;code&gt;ViewSet&lt;/code&gt; classes, you can provide common behavior that can be reused in multiple viewsets across your API.</source>
          <target state="translated">고유 한 기본 &lt;code&gt;ViewSet&lt;/code&gt; 클래스 를 생성 하면 API의 여러 뷰 세트에서 재사용 할 수있는 일반적인 동작을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6fe913d03527b807f577ed58e877dbc7294c83f" translate="yes" xml:space="preserve">
          <source>By default &quot;unique together&quot; validation enforces that all fields be &lt;code&gt;required=True&lt;/code&gt;. In some cases, you might want to explicit apply &lt;code&gt;required=False&lt;/code&gt; to one of the fields, in which case the desired behaviour of the validation is ambiguous.</source>
          <target state="translated">기본적으로 &quot;unique together&quot;검증은 모든 필드가 &lt;code&gt;required=True&lt;/code&gt; 되도록 강제합니다 . 어떤 경우 에는 필드 중 하나에 &lt;code&gt;required=False&lt;/code&gt; 를 명시 적으로 적용 할 수 있습니다 .이 경우 원하는 유효성 검사 동작이 모호합니다.</target>
        </trans-unit>
        <trans-unit id="e32831b36507291e794291281ac70095e2aec1e9" translate="yes" xml:space="preserve">
          <source>By default CSRF validation is not applied when using &lt;code&gt;APIClient&lt;/code&gt;. If you need to explicitly enable CSRF validation, you can do so by setting the &lt;code&gt;enforce_csrf_checks&lt;/code&gt; flag when instantiating the client.</source>
          <target state="translated">&lt;code&gt;APIClient&lt;/code&gt; 를 사용할 때는 기본적으로 CSRF 유효성 검사가 적용되지 않습니다 . CSRF 유효성 검사를 명시 적으로 활성화해야하는 경우 클라이언트를 인스턴스화 할 때 &lt;code&gt;enforce_csrf_checks&lt;/code&gt; 플래그 를 설정 하면됩니다.</target>
        </trans-unit>
        <trans-unit id="6ccd698719a70d0577ce4661f6d7b0eb8efc58dc" translate="yes" xml:space="preserve">
          <source>By default field values are treated as mapping to an attribute on the object. If you need to customize how the field value is accessed and set you need to override &lt;code&gt;.get_attribute()&lt;/code&gt; and/or &lt;code&gt;.get_value()&lt;/code&gt;.</source>
          <target state="translated">기본적으로 필드 값은 객체의 속성에 대한 매핑으로 처리됩니다. 필드 값에 액세스하고 설정하는 방법을 사용자 정의해야하는 경우 &lt;code&gt;.get_attribute()&lt;/code&gt; 및 / 또는 &lt;code&gt;.get_value()&lt;/code&gt; 를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0f3a0ddbb3ec855c5b89ac5cf71c5c17ea123dca" translate="yes" xml:space="preserve">
          <source>By default hyperlinks are expected to correspond to a view name that matches the style &lt;code&gt;'{model_name}-detail'&lt;/code&gt;, and looks up the instance by a &lt;code&gt;pk&lt;/code&gt; keyword argument.</source>
          <target state="translated">기본적으로 하이퍼 링크는 &lt;code&gt;'{model_name}-detail'&lt;/code&gt; 스타일과 일치하는보기 이름에 해당 하며 &lt;code&gt;pk&lt;/code&gt; 키워드 인수로 인스턴스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="71ca3c04ed6e7e2ff6f0f93e2539834bc2173ecd" translate="yes" xml:space="preserve">
          <source>By default nested serializers are read-only. If you want to support write-operations to a nested serializer field you'll need to create &lt;code&gt;create()&lt;/code&gt; and/or &lt;code&gt;update()&lt;/code&gt; methods in order to explicitly specify how the child relationships should be saved.</source>
          <target state="translated">기본적으로 중첩 된 직렬 변환기는 읽기 전용입니다. 중첩 된 직렬 변환기 필드에 대한 쓰기 조작을 지원 하려면 하위 관계를 저장하는 방법을 명시 적으로 지정하기 위해 &lt;code&gt;create()&lt;/code&gt; 및 / 또는 &lt;code&gt;update()&lt;/code&gt; 메소드를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2977f1a0ed5e8e6a808b13168856d3ab2355bb9" translate="yes" xml:space="preserve">
          <source>By default only &lt;code&gt;GET&lt;/code&gt; methods will be accepted. Other methods will respond with &quot;405 Method Not Allowed&quot;. To alter this behaviour, specify which methods the view allows, like so:</source>
          <target state="translated">기본적으로 &lt;code&gt;GET&lt;/code&gt; 메소드 만 허용됩니다. 다른 방법은 &quot;405 Method Not Allowed&quot;로 응답합니다. 이 동작을 변경하려면 다음과 같이보기가 허용하는 메소드를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="a1b10931dab70741ed333c3eef6dcdfb566bcf5f" translate="yes" xml:space="preserve">
          <source>By default renderer classes are assumed to be using the &lt;code&gt;UTF-8&lt;/code&gt; encoding. To use a different encoding, set the &lt;code&gt;charset&lt;/code&gt; attribute on the renderer.</source>
          <target state="translated">기본적으로 렌더러 클래스는 &lt;code&gt;UTF-8&lt;/code&gt; 인코딩을 사용하는 것으로 가정합니다 . 다른 인코딩을 사용하려면 렌더러 에서 &lt;code&gt;charset&lt;/code&gt; 속성을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7d84b35cd6a0c82387c454cdcaa2535493c6705" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;ListSerializer&lt;/code&gt; class does not support multiple updates. This is because the behavior that should be expected for insertions and deletions is ambiguous.</source>
          <target state="translated">기본적으로 &lt;code&gt;ListSerializer&lt;/code&gt; 클래스는 여러 업데이트를 지원하지 않습니다. 삽입 및 삭제에 필요한 동작이 모호하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="422fe234aee64d405a54695e47d908df0d343b72" translate="yes" xml:space="preserve">
          <source>By default the URLs created by &lt;code&gt;SimpleRouter&lt;/code&gt; are appended with a trailing slash. This behavior can be modified by setting the &lt;code&gt;trailing_slash&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt; when instantiating the router. For example:</source>
          <target state="translated">기본적으로 &lt;code&gt;SimpleRouter&lt;/code&gt; 에 의해 작성된 URL 에는 슬래시가 추가됩니다. 라우터를 인스턴스화 할 때 &lt;code&gt;trailing_slash&lt;/code&gt; 인수를 &lt;code&gt;False&lt;/code&gt; 로 설정 하여이 동작을 수정할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="428bd0833c9d8a1e605e61568c31b464e2d6de65" translate="yes" xml:space="preserve">
          <source>By default the available formats are &lt;code&gt;'multipart'&lt;/code&gt; and &lt;code&gt;'json'&lt;/code&gt;. For compatibility with Django's existing &lt;code&gt;RequestFactory&lt;/code&gt; the default format is &lt;code&gt;'multipart'&lt;/code&gt;.</source>
          <target state="translated">기본적으로 사용 가능한 형식은 &lt;code&gt;'multipart'&lt;/code&gt; 및 &lt;code&gt;'json'&lt;/code&gt; 입니다. Django의 기존 &lt;code&gt;RequestFactory&lt;/code&gt; 와의 호환성을 위해 기본 형식은 &lt;code&gt;'multipart'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69c1bc115bad7eaf3727600a57d85c802776227c" translate="yes" xml:space="preserve">
          <source>By default the response content will be rendered with the highest priority renderer apart from &lt;code&gt;BrowsableAPIRenderer&lt;/code&gt;. If you need to customize this behavior, for example to use HTML as the default return format, but use JSON in the browsable API, you can do so by overriding the &lt;code&gt;get_default_renderer()&lt;/code&gt; method. For example:</source>
          <target state="translated">기본적으로 응답 내용은 &lt;code&gt;BrowsableAPIRenderer&lt;/code&gt; 외에 우선 순위가 가장 높은 렌더러로 렌더링됩니다 . 예를 들어 HTML을 기본 반환 형식으로 사용하고 찾아보기 가능한 API에서 JSON을 사용하도록이 동작을 사용자 정의해야하는 경우 &lt;code&gt;get_default_renderer()&lt;/code&gt; 메소드를 대체하여 이를 수행 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5577313017e9493388560f18d0f3c07bda33dc6b" translate="yes" xml:space="preserve">
          <source>By default the serializer will include a &lt;code&gt;url&lt;/code&gt; field instead of a primary key field.</source>
          <target state="translated">기본적으로 시리얼 라이저는 기본 키 필드 대신 &lt;code&gt;url&lt;/code&gt; 필드를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="96ae53098f0abc1686b2c10040d348b526eb56fe" translate="yes" xml:space="preserve">
          <source>By default there are no permissions or throttling applied to the &lt;code&gt;obtain_auth_token&lt;/code&gt; view. If you do wish to apply throttling you'll need to override the view class, and include them using the &lt;code&gt;throttle_classes&lt;/code&gt; attribute.</source>
          <target state="translated">기본적으로 &lt;code&gt;obtain_auth_token&lt;/code&gt; 보기에 적용된 권한 또는 제한은 없습니다 . 조절을 적용하려면 뷰 클래스를 재정의하고 &lt;code&gt;throttle_classes&lt;/code&gt; 속성을 사용하여 뷰 클래스를 포함시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="d5e5b6a0a08e9b57a60944a9c913fc31a537366f" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;400 Bad Request&quot;.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;400 Bad Request&quot;로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="f9906d679eae99b3c9d4cbf1a024903fd3fbb2a9" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;401 Unauthenticated&quot;, but it may also result in a &quot;403 Forbidden&quot; response, depending on the authentication scheme in use. See the &lt;a href=&quot;../authentication/index&quot;&gt;authentication documentation&lt;/a&gt; for more details.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;401 Unauthenticated&quot;로 응답하지만 사용중인 인증 체계에 따라 &quot;403 Forbidden&quot;응답이 발생할 수도 있습니다. 자세한 내용은 &lt;a href=&quot;../authentication/index&quot;&gt;인증 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e00aa4245e69b8c2c9db61a61441a0a16d6c366b" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;403 Forbidden&quot;.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;403 Forbidden&quot;으로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="c3c9b11d7c9da258f4beb412db76e73840a5f5ac" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;404 Not Found&quot;.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;404를 찾을 수 없음&quot;으로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="dba66c1e27aa44b1f68d16215667de914dba6662" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;405 Method Not Allowed&quot;.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;405 Method Not Allowed&quot;로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="d887baa7aa460b4b8a81c73c65e85acc4577bad3" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;406 Not Acceptable&quot;.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;406 Not Acceptable&quot;로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="25b74174a046c45625b7afda8a0d9ec133d8d0c3" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;415 Unsupported Media Type&quot;.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;415 Unsupported Media Type&quot;으로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="9e994427ca30dff63778934518718734cb4860a8" translate="yes" xml:space="preserve">
          <source>By default this exception results in a response with the HTTP status code &quot;429 Too Many Requests&quot;.</source>
          <target state="translated">기본적으로이 예외는 HTTP 상태 코드 &quot;429 Too Many Requests&quot;로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="262f7b008609d6c6cdf297aed10147cbb8be7212" translate="yes" xml:space="preserve">
          <source>By default this field is read-write, although you can change this behavior using the &lt;code&gt;read_only&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;read_only&lt;/code&gt; 플래그를 사용하여이 동작을 변경할 수 있지만 기본적으로이 필드는 읽기 / 쓰기 입니다.</target>
        </trans-unit>
        <trans-unit id="f2267923fa4eb8dabad064e76d0d8cd78d402680" translate="yes" xml:space="preserve">
          <source>By default this implementation expects the hostname to match this simple regular expression:</source>
          <target state="translated">기본적으로이 구현에서는 호스트 이름이이 간단한 정규식과 일치 할 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="a7031b3d7874ab52801301e93f7ad8ae316ba6a3" translate="yes" xml:space="preserve">
          <source>By default this will include the following keys: &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;kwargs&lt;/code&gt;.</source>
          <target state="translated">기본적으로 여기에는 &lt;code&gt;view&lt;/code&gt; , &lt;code&gt;request&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , &lt;code&gt;kwargs&lt;/code&gt; 키가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="8351aae53c308384ff507a5a6d2e08cb2f046943" translate="yes" xml:space="preserve">
          <source>By default this will include the following keys: &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;response&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;kwargs&lt;/code&gt;.</source>
          <target state="translated">기본적으로 여기에는 &lt;code&gt;view&lt;/code&gt; , &lt;code&gt;request&lt;/code&gt; , &lt;code&gt;response&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , &lt;code&gt;kwargs&lt;/code&gt; 키가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="df7c83b8f70ef037e2352eb5a903a2d2aa2b6e71" translate="yes" xml:space="preserve">
          <source>By default using the pagination classes will cause HTML pagination controls to be displayed in the browsable API. There are two built-in display styles. The &lt;code&gt;PageNumberPagination&lt;/code&gt; and &lt;code&gt;LimitOffsetPagination&lt;/code&gt; classes display a list of page numbers with previous and next controls. The &lt;code&gt;CursorPagination&lt;/code&gt; class displays a simpler style that only displays a previous and next control.</source>
          <target state="translated">페이지 매김 클래스를 사용하면 기본적으로 HTML 페이지 매김 컨트롤이 찾아보기 가능한 API에 표시됩니다. 내장 디스플레이 스타일에는 두 가지가 있습니다. &lt;code&gt;PageNumberPagination&lt;/code&gt; 및 &lt;code&gt;LimitOffsetPagination&lt;/code&gt; 클래스는 이전 및 다음 컨트롤을 페이지 번호의 목록을 표시합니다. &lt;code&gt;CursorPagination&lt;/code&gt; 의 클래스 만 표시 이전 및 다음 컨트롤을 표시하는 간단한 스타일.</target>
        </trans-unit>
        <trans-unit id="3420a49eb47a93d90cbffca87d64d9eb61d19b31" translate="yes" xml:space="preserve">
          <source>By default, all the model fields on the class will be mapped to a corresponding serializer fields.</source>
          <target state="translated">기본적으로 클래스의 모든 모델 필드는 해당하는 serializer 필드에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="054e2533d55a78f3900ddc622e047c9195deaeca" translate="yes" xml:space="preserve">
          <source>By default, relational fields that target a &lt;code&gt;ManyToManyField&lt;/code&gt; with a &lt;code&gt;through&lt;/code&gt; model specified are set to read-only.</source>
          <target state="translated">기본적 으로 &lt;code&gt;through&lt;/code&gt; 모델이 지정된 &lt;code&gt;ManyToManyField&lt;/code&gt; 를 대상으로하는 관계형 필드는 읽기 전용으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="09f3faa142677f480747c9b827d58417ea80de87" translate="yes" xml:space="preserve">
          <source>By default, requests created with &lt;code&gt;APIRequestFactory&lt;/code&gt; will not have CSRF validation applied when passed to a REST framework view. If you need to explicitly turn CSRF validation on, you can do so by setting the &lt;code&gt;enforce_csrf_checks&lt;/code&gt; flag when instantiating the factory.</source>
          <target state="translated">기본적으로 &lt;code&gt;APIRequestFactory&lt;/code&gt; 로 작성된 요청 에는 REST 프레임 워크보기로 전달 될 때 CSRF 유효성 검증이 적용되지 않습니다. CSRF 유효성 검증을 명시 적으로 켜야 하는 경우 팩토리를 인스턴스화 할 때 &lt;code&gt;enforce_csrf_checks&lt;/code&gt; 플래그 를 설정하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="69db42e63c3a80e6aed954e2a62d5be8facb833d" translate="yes" xml:space="preserve">
          <source>By default, searches will use case-insensitive partial matches. The search parameter may contain multiple search terms, which should be whitespace and/or comma separated. If multiple search terms are used then objects will be returned in the list only if all the provided terms are matched.</source>
          <target state="translated">기본적으로 검색은 대소 문자를 구분하지 않는 부분 일치를 사용합니다. 검색 매개 변수에는 공백 및 / 또는 쉼표로 구분 된 여러 검색어가 포함될 수 있습니다. 여러 검색어를 사용하는 경우 제공된 모든 용어가 일치하는 경우에만 목록에 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bedda41ff570585eadeb08064c10fdd4177e5a23" translate="yes" xml:space="preserve">
          <source>By default, serializers must be passed values for all required fields or they will raise validation errors. You can use the &lt;code&gt;partial&lt;/code&gt; argument in order to allow partial updates.</source>
          <target state="translated">기본적으로 serializer는 모든 필수 필드에 대해 값을 전달해야합니다. 그렇지 않으면 유효성 검사 오류가 발생합니다. 부분 업데이트를 허용하기 위해 &lt;code&gt;partial&lt;/code&gt; 인수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="945e8544adc6b221fdeab1f921abcff4f8087a96" translate="yes" xml:space="preserve">
          <source>By default, the URL pattern is based on the method name, and the URL name is the combination of the &lt;code&gt;ViewSet.basename&lt;/code&gt; and the hyphenated method name. If you don't want to use the defaults for either of these values, you can instead provide the &lt;code&gt;url_path&lt;/code&gt; and &lt;code&gt;url_name&lt;/code&gt; arguments to the &lt;code&gt;@action&lt;/code&gt; decorator.</source>
          <target state="translated">기본적으로 URL 패턴은 메소드 이름을 기반으로하며 URL 이름은 &lt;code&gt;ViewSet.basename&lt;/code&gt; 과 하이픈이있는 메소드 이름 의 조합입니다 . 이 값 중 하나에 기본값을 사용하지 않으려면 대신 &lt;code&gt;@action&lt;/code&gt; decorator에 &lt;code&gt;url_path&lt;/code&gt; 및 &lt;code&gt;url_name&lt;/code&gt; 인수를 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ac2aa344841e03a5ce50139a10f00af2df10052" translate="yes" xml:space="preserve">
          <source>By default, the query parameter is named &lt;code&gt;'ordering'&lt;/code&gt;, but this may by overridden with the &lt;code&gt;ORDERING_PARAM&lt;/code&gt; setting.</source>
          <target state="translated">기본적으로 쿼리 매개 변수의 이름은 &lt;code&gt;'ordering'&lt;/code&gt; 이지만 &lt;code&gt;ORDERING_PARAM&lt;/code&gt; 설정 으로 대체 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a98436bb092768a173ffe892c7e9cc9ee55a03c3" translate="yes" xml:space="preserve">
          <source>By default, the search parameter is named &lt;code&gt;'search'&lt;/code&gt;, but this may be overridden with the &lt;code&gt;SEARCH_PARAM&lt;/code&gt; setting.</source>
          <target state="translated">기본적으로 검색 매개 변수의 이름은 &lt;code&gt;'search'&lt;/code&gt; 이지만 &lt;code&gt;SEARCH_PARAM&lt;/code&gt; 설정 으로 대체 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab9c7662faf95ae927cd04822f9e70f25620e354" translate="yes" xml:space="preserve">
          <source>By default, versioning is not enabled, and &lt;code&gt;request.version&lt;/code&gt; will always return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">기본적으로 버전 관리는 활성화되어 있지 않으며 &lt;code&gt;request.version&lt;/code&gt; 은 항상 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d0593d20f1b8df0dde1732d11ee6d5dc18143738" translate="yes" xml:space="preserve">
          <source>By default, view introspection is performed by an &lt;code&gt;AutoSchema&lt;/code&gt; instance accessible via the &lt;code&gt;schema&lt;/code&gt; attribute on &lt;code&gt;APIView&lt;/code&gt;. This provides the appropriate &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operationObject&quot;&gt;Open API operation object&lt;/a&gt; for the view, request method and path:</source>
          <target state="translated">기본적으로보기 반성은에 의해 수행된다 &lt;code&gt;AutoSchema&lt;/code&gt; 의 를 통해 액세스 할 경우 &lt;code&gt;schema&lt;/code&gt; 에 속성 &lt;code&gt;APIView&lt;/code&gt; . 이는 뷰, 요청 메소드 및 경로에 적합한 &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operationObject&quot;&gt;Open API 조작 오브젝트&lt;/a&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="45a917f3d61aefddc8ec6cf79b0a6b4607ff50b0" translate="yes" xml:space="preserve">
          <source>By exposing an api endpoint</source>
          <target state="translated">API 엔드 포인트를 노출함으로써</target>
        </trans-unit>
        <trans-unit id="140d4c5c6509f65a82cd90ec22bc5f88a5c5e988" translate="yes" xml:space="preserve">
          <source>By using routers, we no longer need to deal with wiring up the URL conf ourselves.</source>
          <target state="translated">라우터를 사용하면 더 이상 URL conf를 직접 배선 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c9427874c561ee5a822fe423813ce64486abd97f" translate="yes" xml:space="preserve">
          <source>By using signals</source>
          <target state="translated">신호를 사용하여</target>
        </trans-unit>
        <trans-unit id="e3d878a98505710c36df1fe7705152dea7db0a4f" translate="yes" xml:space="preserve">
          <source>COERCE_DECIMAL_TO_STRING</source>
          <target state="translated">COERCE_DECIMAL_TO_STRING</target>
        </trans-unit>
        <trans-unit id="b24f639be98c3c98e22015a99626669532dea2fb" translate="yes" xml:space="preserve">
          <source>COMPACT_JSON</source>
          <target state="translated">COMPACT_JSON</target>
        </trans-unit>
        <trans-unit id="efdcba0fe786b2be5708383d9452f98b6311b80a" translate="yes" xml:space="preserve">
          <source>CSRF</source>
          <target state="translated">CSRF</target>
        </trans-unit>
        <trans-unit id="343fb5d0659da08132da35cba41ebd5a4f1b625a" translate="yes" xml:space="preserve">
          <source>CSRF validation</source>
          <target state="translated">CSRF 검증</target>
        </trans-unit>
        <trans-unit id="3ea9227e9470556fb2423a61ff6a9a0815e98ed8" translate="yes" xml:space="preserve">
          <source>CSRF validation in REST framework works slightly differently to standard Django due to the need to support both session and non-session based authentication to the same views. This means that only authenticated requests require CSRF tokens, and anonymous requests may be sent without CSRF tokens. This behaviour is not suitable for login views, which should always have CSRF validation applied.</source>
          <target state="translated">REST 프레임 워크의 CSRF 유효성 검증은 동일한 뷰에 세션 및 비 세션 기반 인증을 모두 지원해야하기 때문에 표준 장고와 약간 다르게 작동합니다. 이는 인증 된 요청에만 CSRF 토큰이 필요하고 익명 요청은 CSRF 토큰없이 전송 될 수 있음을 의미합니다. 이 동작은 항상 CSRF 유효성 검사를 적용해야하는 로그인보기에는 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="788255dde90b6eb3efaff8c73d21bb3448175b4f" translate="yes" xml:space="preserve">
          <source>Caching in REST Framework works well with the cache utilities provided in Django.</source>
          <target state="translated">REST Framework의 캐싱은 Django에서 제공하는 캐시 유틸리티와 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2586a9e4e3ba9092547e3eac14e105c5ffbda37b" translate="yes" xml:space="preserve">
          <source>Cadre</source>
          <target state="translated">Cadre</target>
        </trans-unit>
        <trans-unit id="107d4468335bf891f9faeee3d18053952d77218d" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field for the serializer's own &lt;code&gt;url&lt;/code&gt; field. The default implementation returns a &lt;code&gt;HyperlinkedIdentityField&lt;/code&gt; class.</source>
          <target state="translated">직렬 변환기 자체의 &lt;code&gt;url&lt;/code&gt; 필드 에 대한 직렬 변환기 필드를 생성하기 위해 호출됩니다 . 기본 구현은 &lt;code&gt;HyperlinkedIdentityField&lt;/code&gt; 클래스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="af39f2d8837dd8d46bf3493fd13ce29237e9c609" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a property or zero-argument method on the model class.</source>
          <target state="translated">모델 클래스의 특성 또는 인수가없는 메소드에 맵핑되는 직렬 변환기 필드를 생성하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bcbe89ef09ad7ef8822fbca44feed3aab8034cd9" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a relational model field, when the &lt;code&gt;depth&lt;/code&gt; option has been set.</source>
          <target state="translated">&lt;code&gt;depth&lt;/code&gt; 옵션이 설정된 경우 관계형 모델 필드에 매핑되는 직렬 변환기 필드를 생성하기 위해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="13bfe960557481df1786a706f0b4c90eea9da3d9" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a relational model field.</source>
          <target state="translated">관계형 모델 필드에 매핑되는 직렬 변환기 필드를 생성하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a49d82ca2e86a52f2f4010a9188ec3e798e06986" translate="yes" xml:space="preserve">
          <source>Called to generate a serializer field that maps to a standard model field.</source>
          <target state="translated">표준 모델 필드에 매핑되는 직렬 변환기 필드를 생성하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f831acc6b71103966be887ce768cc6d744024767" translate="yes" xml:space="preserve">
          <source>Called when the field name did not map to any model field or model property. The default implementation raises an error, although subclasses may customize this behavior.</source>
          <target state="translated">필드 이름이 모델 필드 또는 모델 속성에 매핑되지 않은 경우 호출됩니다. 서브 클래스가이 동작을 사용자 정의 할 수 있지만 기본 구현에서는 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9e4d1788659ab0df8f21f2f6552ed5cc34cd980d" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;.save()&lt;/code&gt; will either create a new instance, or update an existing instance, depending on if an existing instance was passed when instantiating the serializer class:</source>
          <target state="translated">&lt;code&gt;.save()&lt;/code&gt; 호출 하면 serializer 클래스를 인스턴스화 할 때 기존 인스턴스가 전달되었는지 여부에 따라 새 인스턴스를 만들거나 기존 인스턴스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="9c93cc6cc9e049066b90d27870946a4376bb0f60" translate="yes" xml:space="preserve">
          <source>CamelCase JSON</source>
          <target state="translated">CamelCase JSON</target>
        </trans-unit>
        <trans-unit id="233d4b443209f18da118e113d04dec9905a2abc4" translate="yes" xml:space="preserve">
          <source>Can't wait to get started? The &lt;a href=&quot;tutorial/quickstart/index&quot;&gt;quickstart guide&lt;/a&gt; is the fastest way to get up and running, and building APIs with REST framework.</source>
          <target state="translated">기다릴 수 없습니까? &lt;a href=&quot;tutorial/quickstart/index&quot;&gt;빠른 시작 가이드&lt;/a&gt; 및 실행, 그리고 REST 프레임 워크와 API를 구축 얻을 수있는 가장 빠른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="59522bcf90b57fb18b3f9fc956016970eb7a5aa3" translate="yes" xml:space="preserve">
          <source>Changing the URL field name</source>
          <target state="translated">URL 필드 이름 변경</target>
        </trans-unit>
        <trans-unit id="3867f011be69d215d29bce2965e2daa03f4ebf8f" translate="yes" xml:space="preserve">
          <source>CharField</source>
          <target state="translated">CharField</target>
        </trans-unit>
        <trans-unit id="09db451be16ac6c8f4525600cd5a7d022956f044" translate="yes" xml:space="preserve">
          <source>Checking the response data</source>
          <target state="translated">응답 데이터 확인</target>
        </trans-unit>
        <trans-unit id="56ab83a60c1d19a608173852e84f2332cfedfb3a" translate="yes" xml:space="preserve">
          <source>Choice selection fields</source>
          <target state="translated">선택 선택 필드</target>
        </trans-unit>
        <trans-unit id="35bbb2b068053dfe0061c5d1e103e08687b3b718" translate="yes" xml:space="preserve">
          <source>ChoiceField</source>
          <target state="translated">ChoiceField</target>
        </trans-unit>
        <trans-unit id="fc6a90731120b2333b1676ed519fa1dad348f940" translate="yes" xml:space="preserve">
          <source>Class-based</source>
          <target state="translated">Class-based</target>
        </trans-unit>
        <trans-unit id="b78d8a2b5a3807690bcee7438a97617effbcb0d3" translate="yes" xml:space="preserve">
          <source>Class-based Views</source>
          <target state="translated">클래스 기반 뷰</target>
        </trans-unit>
        <trans-unit id="6e73a3f7c80791c5e0529bed897df43b80ffa059" translate="yes" xml:space="preserve">
          <source>Client Error - 4xx</source>
          <target state="translated">클라이언트 오류-4xx</target>
        </trans-unit>
        <trans-unit id="983babb29cf4f6b20a671e5d80156a1a40ecb391" translate="yes" xml:space="preserve">
          <source>Code snippets are always associated with a creator.</source>
          <target state="translated">코드 스 니펫은 항상 제작자와 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca0d607a9d010ee2a9a1aed58cd8279f6420072b" translate="yes" xml:space="preserve">
          <source>Code without tests is broken as designed.</source>
          <target state="translated">테스트없는 코드는 설계된대로 끊어집니다.</target>
        </trans-unit>
        <trans-unit id="8d9d18d75961e9c7b19644cf57f71d183e2b756f" translate="yes" xml:space="preserve">
          <source>Comma-separated values are a plain-text tabular data format, that can be easily imported into spreadsheet applications. &lt;a href=&quot;https://github.com/mjumbewu&quot;&gt;Mjumbe Poe&lt;/a&gt; maintains the &lt;a href=&quot;https://github.com/mjumbewu/django-rest-framework-csv&quot;&gt;djangorestframework-csv&lt;/a&gt; package which provides CSV renderer support for REST framework.</source>
          <target state="translated">쉼표로 구분 된 값은 일반 텍스트 표 형식의 데이터 형식으로 스프레드 시트 응용 프로그램으로 쉽게 가져올 수 있습니다. &lt;a href=&quot;https://github.com/mjumbewu&quot;&gt;Mjumbe Poe&lt;/a&gt; 는 REST 프레임 워크에 대한 CSV 렌더러 지원을 제공 하는 &lt;a href=&quot;https://github.com/mjumbewu/django-rest-framework-csv&quot;&gt;djangorestframework-csv&lt;/a&gt; 패키지를 유지 보수합니다 .</target>
        </trans-unit>
        <trans-unit id="65bb79c1d34846e9fe55e7c1396f134145bacd06" translate="yes" xml:space="preserve">
          <source>Composed Permissions</source>
          <target state="translated">구성된 권한</target>
        </trans-unit>
        <trans-unit id="5a1c81b269a5d555c93c97a6ea39c518ad50f1b5" translate="yes" xml:space="preserve">
          <source>Composite fields</source>
          <target state="translated">복합 분야</target>
        </trans-unit>
        <trans-unit id="57b8fddaa862fea66cc9a74eb801d8f4ff8531f4" translate="yes" xml:space="preserve">
          <source>Concrete View Classes</source>
          <target state="translated">콘크리트 뷰 클래스</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="c80d4dc472df4edefab6138841a61774028bb676" translate="yes" xml:space="preserve">
          <source>Configuration for REST framework is all namespaced inside a single Django setting, named &lt;code&gt;REST_FRAMEWORK&lt;/code&gt;.</source>
          <target state="translated">REST 프레임 워크 구성은 이름이 &lt;code&gt;REST_FRAMEWORK&lt;/code&gt; 인 단일 Django 설정 내에 모두 네임 스페이스로 지정 됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6d0f209e424e2ac559c403dd16975a00b6416a1" translate="yes" xml:space="preserve">
          <source>Configuring the versioning scheme</source>
          <target state="translated">버전 관리 체계 구성</target>
        </trans-unit>
        <trans-unit id="893f1c3ab053ed8cdb51bb027bcc5a9aafc0de2f" translate="yes" xml:space="preserve">
          <source>Consult your web server's documentation for information about configuring an authentication method, e.g.:</source>
          <target state="translated">인증 방법 구성에 대한 정보는 웹 서버 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b9a5b02fc5865df6d33b3a0dd8b7b5896602250e" translate="yes" xml:space="preserve">
          <source>Content negotiation</source>
          <target state="translated">콘텐츠 협상</target>
        </trans-unit>
        <trans-unit id="25893afed7cf66cc447350b4a187e1eb8230a37c" translate="yes" xml:space="preserve">
          <source>Content negotiation is the process of selecting one of multiple possible representations to return to a client, based on client or server preferences.</source>
          <target state="translated">컨텐츠 협상은 클라이언트 또는 서버 환경 설정을 기반으로 클라이언트에게 리턴 할 여러 가능한 표현 중 하나를 선택하는 프로세스입니다.</target>
        </trans-unit>
        <trans-unit id="46d323d4a602fe0c94a742497bffdc2610cdb9ba" translate="yes" xml:space="preserve">
          <source>Content type controls</source>
          <target state="translated">컨텐츠 유형 컨트롤</target>
        </trans-unit>
        <trans-unit id="a8ee595ab66fd6c7e896c59da1b8f772d5e32b70" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2011&amp;ndash;present Encode OSS Ltd.</source>
          <target state="translated">저작권 &amp;copy; 2011&amp;ndash; 현재 Encode OSS Ltd.</target>
        </trans-unit>
        <trans-unit id="43441b36d0708cafe5ff9986485c53cd9a017faa" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2011-present, &lt;a href=&quot;https://www.encode.io/&quot;&gt;Encode OSS Ltd&lt;/a&gt;. All rights reserved.</source>
          <target state="translated">저작권 &amp;copy; 2011 - 현재, &lt;a href=&quot;https://www.encode.io/&quot;&gt;인코딩 OSS 회사&lt;/a&gt; . 판권 소유.</target>
        </trans-unit>
        <trans-unit id="d77a38148fa274cafe129706f2ddf21cb576bcfe" translate="yes" xml:space="preserve">
          <source>Core arguments</source>
          <target state="translated">핵심 논증</target>
        </trans-unit>
        <trans-unit id="dc0c0f6e00888f11d8b1d625db68dc22f18d0447" translate="yes" xml:space="preserve">
          <source>CoreAPIClient</source>
          <target state="translated">CoreAPIClient</target>
        </trans-unit>
        <trans-unit id="16f1a08f10b2d379974b982175b1c770eb56163c" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.BooleanField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.BooleanField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="49d4f09703cbd0906dc1c70a76bd46f3f1311c44" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.CharField&lt;/code&gt; or &lt;code&gt;django.db.models.fields.TextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.CharField&lt;/code&gt; 또는 &lt;code&gt;django.db.models.fields.TextField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="986f859ced898736aa0da8f5913c7f9c646595ae" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.DateField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.DateField&lt;/code&gt; 에 해당</target>
        </trans-unit>
        <trans-unit id="14fd85db2a2555ec06cf5db6493170dd499bc470" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.DateTimeField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.DateTimeField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="663b340707f5dd7bf6c0d2066c75694eb276ce50" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.DecimalField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.DecimalField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="df458c63e88da9c0042cb9a3d7d55076ccc775df" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.EmailField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.EmailField&lt;/code&gt; 에 해당</target>
        </trans-unit>
        <trans-unit id="e2663c87ce9757861bcd6075be38c62503551d81" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.FloatField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.FloatField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="2ac975ab1297cae6bfc9184a3a7afffe982fc2a4" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.IntegerField&lt;/code&gt;, &lt;code&gt;django.db.models.fields.SmallIntegerField&lt;/code&gt;, &lt;code&gt;django.db.models.fields.PositiveIntegerField&lt;/code&gt; and &lt;code&gt;django.db.models.fields.PositiveSmallIntegerField&lt;/code&gt;.</source>
          <target state="translated">에 해당 &lt;code&gt;django.db.models.fields.IntegerField&lt;/code&gt; , &lt;code&gt;django.db.models.fields.SmallIntegerField&lt;/code&gt; , &lt;code&gt;django.db.models.fields.PositiveIntegerField&lt;/code&gt; 및 &lt;code&gt;django.db.models.fields.PositiveSmallIntegerField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e98122b65f7b743dd650ed86c0225a4950c4544" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.NullBooleanField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.NullBooleanField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="c8304ecc40d693a7a60c559c8c9ee4955ffe9358" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.SlugField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.SlugField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="0f791bdd8aae816b4927b623d02824b47003b6db" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.TimeField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.TimeField&lt;/code&gt; 에 해당</target>
        </trans-unit>
        <trans-unit id="0d47d94e6ecb94841e11dad781ec655252ac03bb" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.db.models.fields.URLField&lt;/code&gt;. Uses Django's &lt;code&gt;django.core.validators.URLValidator&lt;/code&gt; for validation.</source>
          <target state="translated">&lt;code&gt;django.db.models.fields.URLField&lt;/code&gt; 에 해당합니다 . 확인을 위해 Django의 &lt;code&gt;django.core.validators.URLValidator&lt;/code&gt; 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d8016babc00573f72f18fa3326beb5e900cb9f32" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.FileField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.forms.fields.FileField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="23e40b6eedc4c74adc0ddef659375f41b05ec77b" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.FilePathField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.forms.fields.FilePathField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="e57e5e501f4ffe1f90eeb2e36336acd427364f91" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.IPAddressField&lt;/code&gt; and &lt;code&gt;django.forms.fields.GenericIPAddressField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.forms.fields.IPAddressField&lt;/code&gt; 및 &lt;code&gt;django.forms.fields.GenericIPAddressField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="57600969d01ce49b5a9a2aeb5d0afc205bd04081" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.ImageField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.forms.fields.ImageField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="8eac665df3eb8df460e9f262a371339f5850b42d" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;code&gt;django.forms.fields.RegexField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django.forms.fields.RegexField&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="4d38ed88ab47fac9001ea5cb27390c6a930e9679" translate="yes" xml:space="preserve">
          <source>Create a new Django project named &lt;code&gt;tutorial&lt;/code&gt;, then start a new app called &lt;code&gt;quickstart&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tutorial&lt;/code&gt; 이라는 새로운 Django 프로젝트 를 만든 다음 &lt;code&gt;quickstart&lt;/code&gt; 라는 새로운 앱을 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="c66074e1c2da370e426bea769cf2b4a1dacbc173" translate="yes" xml:space="preserve">
          <source>CreateAPIView</source>
          <target state="translated">CreateAPIView</target>
        </trans-unit>
        <trans-unit id="6d3b732e19052031ab023951b18df2d6f6da527d" translate="yes" xml:space="preserve">
          <source>CreateModelMixin</source>
          <target state="translated">CreateModelMixin</target>
        </trans-unit>
        <trans-unit id="38e6ac1d4c559f2bfff28b670222f6282642ae42" translate="yes" xml:space="preserve">
          <source>CreateOnlyDefault</source>
          <target state="translated">CreateOnlyDefault</target>
        </trans-unit>
        <trans-unit id="42aa6f2f196f462332cfe04a56991a6b3fd6929f" translate="yes" xml:space="preserve">
          <source>Creating a Serializer class</source>
          <target state="translated">시리얼 라이저 클래스 만들기</target>
        </trans-unit>
        <trans-unit id="fc954c868910c3e6f10db9c834644df85b537b1b" translate="yes" xml:space="preserve">
          <source>Creating a model to work with</source>
          <target state="translated">작업 할 모델 작성</target>
        </trans-unit>
        <trans-unit id="87717206a3306e6933a28aba290ae418e328d3f5" translate="yes" xml:space="preserve">
          <source>Creating an endpoint for the highlighted snippets</source>
          <target state="translated">강조 표시된 스 니펫에 대한 엔드 포인트 작성</target>
        </trans-unit>
        <trans-unit id="b2d444b7d4f26cca5e9a7c40883875586bb8c7e6" translate="yes" xml:space="preserve">
          <source>Creating an endpoint for the root of our API</source>
          <target state="translated">API 루트에 대한 엔드 포인트 작성</target>
        </trans-unit>
        <trans-unit id="d7df9c17e3c7446423379ca5c4aa42d9d3716527" translate="yes" xml:space="preserve">
          <source>Creating custom base classes</source>
          <target state="translated">사용자 정의 기본 클래스 작성</target>
        </trans-unit>
        <trans-unit id="bc07edc8eeb0a1b97184ce297c6d4e524046dd6e" translate="yes" xml:space="preserve">
          <source>Creating custom mixins</source>
          <target state="translated">커스텀 믹스 인 만들기</target>
        </trans-unit>
        <trans-unit id="08ee3699c39261517354eabf93e9410456e44a49" translate="yes" xml:space="preserve">
          <source>Creating new base classes</source>
          <target state="translated">새로운 기본 클래스 만들기</target>
        </trans-unit>
        <trans-unit id="2e3d73f81dff5b6e2fbde3ee77f302d1aff9cc76" translate="yes" xml:space="preserve">
          <source>Creating responses</source>
          <target state="translated">응답 만들기</target>
        </trans-unit>
        <trans-unit id="f90f4d4664ab58b29a831f6fed1d6241e66b3492" translate="yes" xml:space="preserve">
          <source>Creating schema endpoints</source>
          <target state="translated">스키마 엔드 포인트 생성</target>
        </trans-unit>
        <trans-unit id="bff192399aad9d751c6c81882ce86dfd6f24390d" translate="yes" xml:space="preserve">
          <source>Creating test requests</source>
          <target state="translated">테스트 요청 작성</target>
        </trans-unit>
        <trans-unit id="7edc409607c6d95ac387b265b14527f8daed7e4a" translate="yes" xml:space="preserve">
          <source>CurrentUserDefault</source>
          <target state="translated">CurrentUserDefault</target>
        </trans-unit>
        <trans-unit id="654b92dced9e6317d81d6f17d9ac4a34fbea5b92" translate="yes" xml:space="preserve">
          <source>Currently our API doesn't have any restrictions on who can edit or delete code snippets. We'd like to have some more advanced behavior in order to make sure that:</source>
          <target state="translated">현재 API에는 코드 스 니펫을 편집하거나 삭제할 수있는 사람에 대한 제한이 없습니다. 우리는 다음을 확인하기 위해 좀 더 고급 행동을 원합니다.</target>
        </trans-unit>
        <trans-unit id="fdb56a4e5630324c41b0bf4f5ff5022f4b4f38c5" translate="yes" xml:space="preserve">
          <source>Cursor based pagination is more complex than other schemes. It also requires that the result set presents a fixed ordering, and does not allow the client to arbitrarily index into the result set. However it does provide the following benefits:</source>
          <target state="translated">커서 기반 페이지 매김은 다른 방식보다 복잡합니다. 또한 결과 집합이 고정 된 순서를 제시해야하며 클라이언트가 결과 집합에 임의로 색인을 생성 할 수 없습니다. 그러나 다음과 같은 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a45828243fbec6c251b7a981dfb1d3f3f6427ba1" translate="yes" xml:space="preserve">
          <source>Cursor based pagination requires that there is a unique, unchanging ordering of items in the result set. This ordering might typically be a creation timestamp on the records, as this presents a consistent ordering to paginate against.</source>
          <target state="translated">커서 기반 페이지 매김을 수행하려면 결과 집합에 고유 한 변경되지 않은 항목 순서가 있어야합니다. 이 순서는 일반적으로 레코드의 생성 타임 스탬프 일 수 있습니다. 이는 순서를 매기는 일관된 순서를 나타 내기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="cb13266289a033469da54ce6d4976c7434e1ae35" translate="yes" xml:space="preserve">
          <source>CursorPagination</source>
          <target state="translated">CursorPagination</target>
        </trans-unit>
        <trans-unit id="7d4e4042402db652eb9245c2378f0292ebd1cee9" translate="yes" xml:space="preserve">
          <source>Custom Routers</source>
          <target state="translated">커스텀 라우터</target>
        </trans-unit>
        <trans-unit id="a4bb877ba85d5d1ff392a7029f21841909dbfe58" translate="yes" xml:space="preserve">
          <source>Custom ViewSet base classes</source>
          <target state="translated">사용자 정의 ViewSet 기본 클래스</target>
        </trans-unit>
        <trans-unit id="af8e5a8850c6aad38be4e2ef13d877780ac9f21e" translate="yes" xml:space="preserve">
          <source>Custom actions which use the &lt;code&gt;@action&lt;/code&gt; decorator will respond to &lt;code&gt;GET&lt;/code&gt; requests by default. We can use the &lt;code&gt;methods&lt;/code&gt; argument if we wanted an action that responded to &lt;code&gt;POST&lt;/code&gt; requests.</source>
          <target state="translated">&lt;code&gt;@action&lt;/code&gt; 데코레이터 를 사용하는 사용자 지정 작업 은 기본적 으로 &lt;code&gt;GET&lt;/code&gt; 요청에 응답합니다 . &lt;code&gt;POST&lt;/code&gt; 에 응답 한 액션을 원한다면 &lt;code&gt;methods&lt;/code&gt; 인수를 사용할 수 있습니다 요청에 .</target>
        </trans-unit>
        <trans-unit id="64b50487892f03ddf6db3b4e145a03b7bf0c92fc" translate="yes" xml:space="preserve">
          <source>Custom authentication</source>
          <target state="translated">맞춤형 인증</target>
        </trans-unit>
        <trans-unit id="179628bd33f8cebac22206cc93d91dfa0b38b842" translate="yes" xml:space="preserve">
          <source>Custom content negotiation</source>
          <target state="translated">맞춤 콘텐츠 협상</target>
        </trans-unit>
        <trans-unit id="114a2c7a23b8613c909c2966e5d1f8776ceb8aa6" translate="yes" xml:space="preserve">
          <source>Custom exception handling</source>
          <target state="translated">사용자 정의 예외 처리</target>
        </trans-unit>
        <trans-unit id="d1f86d5227e987ad9feec36387a01f71ac50987e" translate="yes" xml:space="preserve">
          <source>Custom fields</source>
          <target state="translated">맞춤 입력란</target>
        </trans-unit>
        <trans-unit id="314eb2fd8e880e115ac73bff5e65ce63165b2c66" translate="yes" xml:space="preserve">
          <source>Custom generic filtering</source>
          <target state="translated">맞춤 일반 필터링</target>
        </trans-unit>
        <trans-unit id="6fa4b782d13bf92ffc16e0ea732a217c135836ee" translate="yes" xml:space="preserve">
          <source>Custom headers and authentication credentials can be provided in the same way as &lt;a href=&quot;http://docs.python-requests.org/en/master/user/advanced/#session-objects&quot;&gt;when using a standard &lt;code&gt;requests.Session&lt;/code&gt; instance&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 헤더 및 인증 자격 증명은 &lt;a href=&quot;http://docs.python-requests.org/en/master/user/advanced/#session-objects&quot;&gt;표준 &lt;code&gt;requests.Session&lt;/code&gt; 인스턴스를 사용할 때&lt;/a&gt; 와 같은 방식으로 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a6933b0773aea474742217fdd32ce9fb866409b" translate="yes" xml:space="preserve">
          <source>Custom headers and authentication may be used with &lt;code&gt;CoreAPIClient&lt;/code&gt; in a similar way as with &lt;code&gt;RequestsClient&lt;/code&gt;.</source>
          <target state="translated">커스텀 헤더와 인증은 &lt;code&gt;RequestsClient&lt;/code&gt; 와 비슷한 방식으로 &lt;code&gt;CoreAPIClient&lt;/code&gt; 와 함께 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="918b6a2c19d2a8f7f57b00f35fabd3f0c1a9bd6f" translate="yes" xml:space="preserve">
          <source>Custom hyperlinked fields</source>
          <target state="translated">사용자 하이퍼 링크 필드</target>
        </trans-unit>
        <trans-unit id="67acda0daebe678eee3d16e2a81316bbcfbcaca6" translate="yes" xml:space="preserve">
          <source>Custom metadata classes</source>
          <target state="translated">맞춤 메타 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="456ec865e6093f33303547c98a849c74d08d61d1" translate="yes" xml:space="preserve">
          <source>Custom pagination styles</source>
          <target state="translated">맞춤 페이지 매김 스타일</target>
        </trans-unit>
        <trans-unit id="9e3d495e32da9c04ad26c7c747b0a2bd7b66a815" translate="yes" xml:space="preserve">
          <source>Custom parsers</source>
          <target state="translated">커스텀 파서</target>
        </trans-unit>
        <trans-unit id="0ac0aaaaa8bf55e8fcc051ed1bc33ea819de9179" translate="yes" xml:space="preserve">
          <source>Custom permissions</source>
          <target state="translated">맞춤 권한</target>
        </trans-unit>
        <trans-unit id="1f7fbe8fccfea29e56500ecb22b32e55e6010b76" translate="yes" xml:space="preserve">
          <source>Custom permissions will raise a &lt;code&gt;PermissionDenied&lt;/code&gt; exception if the test fails. To change the error message associated with the exception, implement a &lt;code&gt;message&lt;/code&gt; attribute directly on your custom permission. Otherwise the &lt;code&gt;default_detail&lt;/code&gt; attribute from &lt;code&gt;PermissionDenied&lt;/code&gt; will be used.</source>
          <target state="translated">테스트에 실패하면 사용자 지정 권한에서 &lt;code&gt;PermissionDenied&lt;/code&gt; 예외가 발생합니다. 예외와 관련된 오류 메시지를 변경하려면 사용자 정의 권한에 직접 &lt;code&gt;message&lt;/code&gt; 속성을 구현 하십시오. 그렇지 않으면 &lt;code&gt;PermissionDenied&lt;/code&gt; 의 &lt;code&gt;default_detail&lt;/code&gt; 속성 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f8dcd3c4fbe0440b087a44ad0ac9785e8d426dd7" translate="yes" xml:space="preserve">
          <source>Custom relational fields</source>
          <target state="translated">사용자 정의 관계형 필드</target>
        </trans-unit>
        <trans-unit id="0fa29bcc5d72075e2914f8d647b10835288a247f" translate="yes" xml:space="preserve">
          <source>Custom renderers</source>
          <target state="translated">커스텀 렌더러</target>
        </trans-unit>
        <trans-unit id="108e2325ce05d7269106b549ddd095241604d9d6" translate="yes" xml:space="preserve">
          <source>Custom throttles</source>
          <target state="translated">맞춤 스로틀</target>
        </trans-unit>
        <trans-unit id="03bf91557a40b583febdf741d4a41cf601998a52" translate="yes" xml:space="preserve">
          <source>Custom versioning schemes</source>
          <target state="translated">맞춤형 버전 관리 체계</target>
        </trans-unit>
        <trans-unit id="81fa0d10db5c6b52d2f9b992c126f171c873b647" translate="yes" xml:space="preserve">
          <source>Customizable all the way down - just use &lt;a href=&quot;api-guide/views#function-based-views&quot;&gt;regular function-based views&lt;/a&gt; if you don't need the &lt;a href=&quot;api-guide/generic-views/index&quot;&gt;more&lt;/a&gt;&lt;a href=&quot;api-guide/viewsets/index&quot;&gt;powerful&lt;/a&gt;&lt;a href=&quot;api-guide/routers/index&quot;&gt;features&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;api-guide/generic-views/index&quot;&gt;더 &lt;/a&gt;&lt;a href=&quot;api-guide/viewsets/index&quot;&gt;강력한 &lt;/a&gt;&lt;a href=&quot;api-guide/routers/index&quot;&gt;기능이&lt;/a&gt; 필요하지 않은 경우 &lt;a href=&quot;api-guide/views#function-based-views&quot;&gt;일반 기능 기반보기&lt;/a&gt; 만 사용하여 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b4c9b141107d07307784903144ff6216215d802" translate="yes" xml:space="preserve">
          <source>Customizing BrowsableAPIRenderer</source>
          <target state="translated">찾아 볼 수있는 사용자 정의</target>
        </trans-unit>
        <trans-unit id="bc76b6181b81dd5962b0957e6a67d1e7496c43f3" translate="yes" xml:space="preserve">
          <source>Customizing ListSerializer behavior</source>
          <target state="translated">ListSerializer 동작 사용자 정의</target>
        </trans-unit>
        <trans-unit id="58e61eebc8787faee6462027d2d274378f5d6588" translate="yes" xml:space="preserve">
          <source>Customizing ListSerializer initialization</source>
          <target state="translated">ListSerializer 초기화 사용자 정의</target>
        </trans-unit>
        <trans-unit id="f1f0b97fcf4b54e9e2b15f97201400a3b7640845" translate="yes" xml:space="preserve">
          <source>Customizing Schema Generation</source>
          <target state="translated">스키마 생성 사용자 정의</target>
        </trans-unit>
        <trans-unit id="e1b8b10ead3a32ade21895dd22bf0f4ba38a8931" translate="yes" xml:space="preserve">
          <source>Customizing dynamic routes</source>
          <target state="translated">동적 경로 사용자 정의</target>
        </trans-unit>
        <trans-unit id="69ff75bee1cae6b62910a8e686d6e7dafda2281c" translate="yes" xml:space="preserve">
          <source>Customizing field mappings</source>
          <target state="translated">필드 매핑 사용자 정의</target>
        </trans-unit>
        <trans-unit id="396a35b2d7548a8b76e8798f24395c99be8a15d5" translate="yes" xml:space="preserve">
          <source>Customizing multiple create</source>
          <target state="translated">다중 작성 사용자 정의</target>
        </trans-unit>
        <trans-unit id="60f9791b10bde0213cb5850767b46abaa5e092be" translate="yes" xml:space="preserve">
          <source>Customizing multiple update</source>
          <target state="translated">여러 업데이트 사용자 정의</target>
        </trans-unit>
        <trans-unit id="5bca0f10ac0f0e46dc848849686aa5b46c421b25" translate="yes" xml:space="preserve">
          <source>Customizing the HTML display</source>
          <target state="translated">HTML 디스플레이 사용자 정의</target>
        </trans-unit>
        <trans-unit id="e8c1d62e07899886f9378c4e8dff0045fc97d80f" translate="yes" xml:space="preserve">
          <source>Customizing the controls</source>
          <target state="translated">컨트롤 사용자 정의</target>
        </trans-unit>
        <trans-unit id="e9502b39a59fe54dc1b5a8c8323ba42c380712ec" translate="yes" xml:space="preserve">
          <source>Customizing the default fields</source>
          <target state="translated">기본 필드 사용자 정의</target>
        </trans-unit>
        <trans-unit id="0f4b717b6bb210cc473f1a4d36b6bad9fe9989ee" translate="yes" xml:space="preserve">
          <source>Customizing the generic views</source>
          <target state="translated">일반 뷰 사용자 정의</target>
        </trans-unit>
        <trans-unit id="303a919695f360b43e6437a1c00dcbe908fdd5f5" translate="yes" xml:space="preserve">
          <source>Customizing the interface</source>
          <target state="translated">인터페이스 사용자 정의</target>
        </trans-unit>
        <trans-unit id="c5c3042859c18a1ca3f21d618e7d01cefb664805" translate="yes" xml:space="preserve">
          <source>DATETIME_FORMAT</source>
          <target state="translated">DATETIME_FORMAT</target>
        </trans-unit>
        <trans-unit id="21059f4afcb403f577508f77e6b841799e7de00e" translate="yes" xml:space="preserve">
          <source>DATETIME_INPUT_FORMATS</source>
          <target state="translated">DATETIME_INPUT_FORMATS</target>
        </trans-unit>
        <trans-unit id="35afffbfe97473f23d31d6e449cd8a9a0af5eb64" translate="yes" xml:space="preserve">
          <source>DATE_FORMAT</source>
          <target state="translated">DATE_FORMAT</target>
        </trans-unit>
        <trans-unit id="28a546dafec26a6bd9ed9d7d006211611038b0f4" translate="yes" xml:space="preserve">
          <source>DATE_INPUT_FORMATS</source>
          <target state="translated">DATE_INPUT_FORMATS</target>
        </trans-unit>
        <trans-unit id="4ef0f9567a1913a34269aa90a3efc076a57f5370" translate="yes" xml:space="preserve">
          <source>DEFAULT_AUTHENTICATION_CLASSES</source>
          <target state="translated">DEFAULT_AUTHENTICATION_CLASSES</target>
        </trans-unit>
        <trans-unit id="63ddff9d63f9b2cacc83b93a6998399961ff6ca8" translate="yes" xml:space="preserve">
          <source>DEFAULT_CONTENT_NEGOTIATION_CLASS</source>
          <target state="translated">DEFAULT_CONTENT_NEGOTIATION_CLASS</target>
        </trans-unit>
        <trans-unit id="eb57d48c0c6925a6320dedccd7ad96db43621035" translate="yes" xml:space="preserve">
          <source>DEFAULT_FILTER_BACKENDS</source>
          <target state="translated">DEFAULT_FILTER_BACKENDS</target>
        </trans-unit>
        <trans-unit id="0e89c770e5b790faff4310d0b3397f880da92181" translate="yes" xml:space="preserve">
          <source>DEFAULT_PAGINATION_CLASS</source>
          <target state="translated">DEFAULT_PAGINATION_CLASS</target>
        </trans-unit>
        <trans-unit id="63998194da3c67b872c93d9e8f9ebf0f0f799a69" translate="yes" xml:space="preserve">
          <source>DEFAULT_PARSER_CLASSES</source>
          <target state="translated">DEFAULT_PARSER_CLASSES</target>
        </trans-unit>
        <trans-unit id="b0a0bf5c1061674954c158ea0f0b6224128908c8" translate="yes" xml:space="preserve">
          <source>DEFAULT_PERMISSION_CLASSES</source>
          <target state="translated">DEFAULT_PERMISSION_CLASSES</target>
        </trans-unit>
        <trans-unit id="20f7b4931557b57337769e7bfd32e8ff37eba7f2" translate="yes" xml:space="preserve">
          <source>DEFAULT_RENDERER_CLASSES</source>
          <target state="translated">DEFAULT_RENDERER_CLASSES</target>
        </trans-unit>
        <trans-unit id="aeda38b5b0ee0b0fc4f8d9a7f9b4ac1e471387b7" translate="yes" xml:space="preserve">
          <source>DEFAULT_SCHEMA_CLASS</source>
          <target state="translated">DEFAULT_SCHEMA_CLASS</target>
        </trans-unit>
        <trans-unit id="122e42d0540691b90c564cc0f63e8e36e7f5ef56" translate="yes" xml:space="preserve">
          <source>DEFAULT_THROTTLE_CLASSES</source>
          <target state="translated">DEFAULT_THROTTLE_CLASSES</target>
        </trans-unit>
        <trans-unit id="0cd0dd3d1869b02d70767afdf9a0c8eee24924a2" translate="yes" xml:space="preserve">
          <source>DEFAULT_VERSION</source>
          <target state="translated">DEFAULT_VERSION</target>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="7139f05bf3942ef1bd4ba479220f0365d1e18225" translate="yes" xml:space="preserve">
          <source>DRF - Access Policy</source>
          <target state="translated">DRF-액세스 정책</target>
        </trans-unit>
        <trans-unit id="6ba5776c126811e5a62da0146e1d95102d3d9ac3" translate="yes" xml:space="preserve">
          <source>DRF Compound Fields</source>
          <target state="translated">DRF 복합 필드</target>
        </trans-unit>
        <trans-unit id="0da5f19d4d0027f6380047a53d96b7bac371702d" translate="yes" xml:space="preserve">
          <source>DRF Extra Fields</source>
          <target state="translated">DRF 추가 필드</target>
        </trans-unit>
        <trans-unit id="c6ee82dcccd12ccc2d2f393440c649f6a58b90b7" translate="yes" xml:space="preserve">
          <source>DRF FlexFields</source>
          <target state="translated">DRF FlexFields</target>
        </trans-unit>
        <trans-unit id="cf95da8f735fdde863b4f042bfc71b5a6bdc25bd" translate="yes" xml:space="preserve">
          <source>DRF Nested Routers</source>
          <target state="translated">DRF 중첩 라우터</target>
        </trans-unit>
        <trans-unit id="3857a7108c0d88fbed132280379e05884b7893b2" translate="yes" xml:space="preserve">
          <source>DRF Writable Nested</source>
          <target state="translated">DRF 쓰기 가능 중첩</target>
        </trans-unit>
        <trans-unit id="457a3201c3490c32fdc2ec04936bc61bc13039d5" translate="yes" xml:space="preserve">
          <source>DRF-Base64</source>
          <target state="translated">DRF-Base64</target>
        </trans-unit>
        <trans-unit id="ecbe365faeb9961ec5b0bb5f0cbb4aaff5553fcb" translate="yes" xml:space="preserve">
          <source>DRF-extensions</source>
          <target state="translated">DRF-extensions</target>
        </trans-unit>
        <trans-unit id="48582ac3bf61b0496d55fec1484562752af10b39" translate="yes" xml:space="preserve">
          <source>DRF-schema-adapter</source>
          <target state="translated">DRF-schema-adapter</target>
        </trans-unit>
        <trans-unit id="1606826c28c68b72b3e91a11cb5f226e06b346f9" translate="yes" xml:space="preserve">
          <source>DRY Rest Permissions</source>
          <target state="translated">휴식 휴식 권한</target>
        </trans-unit>
        <trans-unit id="842e4cbc91141f8af241b62f2cd2117cedd31cd3" translate="yes" xml:space="preserve">
          <source>Data structures, not algorithms, are central to programming.</source>
          <target state="translated">알고리즘이 아닌 데이터 구조는 프로그래밍의 핵심입니다.</target>
        </trans-unit>
        <trans-unit id="6c9da1c44029d7c7e762adc8ae81a82ecaf9bff4" translate="yes" xml:space="preserve">
          <source>Date and time fields</source>
          <target state="translated">날짜 및 시간 필드</target>
        </trans-unit>
        <trans-unit id="8daa6ae4a628ab1c6f403ecfd6677e3e81fa1a6c" translate="yes" xml:space="preserve">
          <source>Date and time formatting</source>
          <target state="translated">날짜 및 시간 형식</target>
        </trans-unit>
        <trans-unit id="39285aa5d1cf5a1fca924401b3659da7b60e1960" translate="yes" xml:space="preserve">
          <source>DateField</source>
          <target state="translated">DateField</target>
        </trans-unit>
        <trans-unit id="b7234c3c04adf27a199747ce86d75aad0a944ae6" translate="yes" xml:space="preserve">
          <source>DateField format strings</source>
          <target state="translated">DateField 형식 문자열</target>
        </trans-unit>
        <trans-unit id="c1f53a7866e0d1cd0fcd822e7416f62051b2b596" translate="yes" xml:space="preserve">
          <source>DateTimeField</source>
          <target state="translated">DateTimeField</target>
        </trans-unit>
        <trans-unit id="79298ed3fc357a79209f42ed52972b2e14749aec" translate="yes" xml:space="preserve">
          <source>DateTimeField format strings.</source>
          <target state="translated">DateTimeField 형식 문자열</target>
        </trans-unit>
        <trans-unit id="be521ff5cce3e345e5697b61779aae5412bfd58f" translate="yes" xml:space="preserve">
          <source>Dealing with multiple objects</source>
          <target state="translated">여러 객체 다루기</target>
        </trans-unit>
        <trans-unit id="9b3f2d7b6f3770373fd618026bcee42b004fb7cb" translate="yes" xml:space="preserve">
          <source>Dealing with nested objects</source>
          <target state="translated">중첩 된 객체 다루기</target>
        </trans-unit>
        <trans-unit id="6bdf75c752c12f8f0574410ccb46c2c86388e568" translate="yes" xml:space="preserve">
          <source>Dealing with relationships between entities is one of the more challenging aspects of Web API design. There are a number of different ways that we might choose to represent a relationship:</source>
          <target state="translated">엔터티 간의 관계를 다루는 것은 웹 API 디자인에서 가장 어려운 측면 중 하나입니다. 관계를 나타 내기 위해 선택할 수있는 여러 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="54d223b08894bb091b9543c6e86622187a78fe17" translate="yes" xml:space="preserve">
          <source>Debugging complex cases</source>
          <target state="translated">복잡한 사례 디버깅</target>
        </trans-unit>
        <trans-unit id="bae9e6d08648981451e31d69171cf362e0a1e0fd" translate="yes" xml:space="preserve">
          <source>DecimalField</source>
          <target state="translated">DecimalField</target>
        </trans-unit>
        <trans-unit id="1323e56f4ee628f7d08380a29004b1e74f370fbf" translate="yes" xml:space="preserve">
          <source>Declaring Serializers</source>
          <target state="translated">시리얼 라이저 선언</target>
        </trans-unit>
        <trans-unit id="642675f49d73e335723a0a5eb6b8103effda8773" translate="yes" xml:space="preserve">
          <source>Declaring a &lt;code&gt;ModelSerializer&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;ModelSerializer&lt;/code&gt; 선언은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2bc374162e52457b10eb5dd2637af9ec7ab0b67e" translate="yes" xml:space="preserve">
          <source>Declaring a serializer looks very similar to declaring a form:</source>
          <target state="translated">시리얼 라이저 선언은 폼 선언과 매우 유사합니다 :</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="a75337aa8e9e7d9de1d51649f390cfc4c2036b71" translate="yes" xml:space="preserve">
          <source>Default: 1000</source>
          <target state="translated">기본값 : 1000</target>
        </trans-unit>
        <trans-unit id="3a8a2da95ecee77e08c6887656a1f7e306396669" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;&quot;More than {count} items...&quot;&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;&quot;More than {count} items...&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29b43dc94240f0eac3ff99296e94b68d846a85d7" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'format'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'format'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82a7459af044aed7385ae74fca00ebe99823a324" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'iso-8601'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'iso-8601'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73481dcfb189774b2044998682e3c0798d143fc8" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'multipart'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'multipart'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f396fb0021adc6ab25ed022a184fc3fa911c5680" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'non_field_errors'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'non_field_errors'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ef6f2f0ecffb7e6e6dfb0ddbd1aa078a121f679" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.negotiation.DefaultContentNegotiation'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'rest_framework.negotiation.DefaultContentNegotiation'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e20ea103965a3929dc9055b7ae4c86275f7ebf7c" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.schemas.AutoSchema'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'rest_framework.schemas.AutoSchema'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97750df22ae08b037a2668a93af65ef9f5be2ee0" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.views.exception_handler'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'rest_framework.views.exception_handler'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e06e7cf2910c035a200edb0757d7d85e0734c82c" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.views.get_view_description'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'rest_framework.views.get_view_description'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fe593653a60197320013ee02734221498c67d28" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'rest_framework.views.get_view_name'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'rest_framework.views.get_view_name'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="989edb988bdb8e20d8cb6fc4b7630e075ba64f94" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'url'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'url'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0862d00c642f600905a513d149dd41a60b478fac" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'version'&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;'version'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e4f64360906e7f1452e75f1085dc507b2bff801" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c8ca82e4a52fce1712b0adec6141e66b586eb41" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0781b5adccd6d0f6f2b1285100f13f614e26b62" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;['iso-8601']&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;['iso-8601']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ffa1281e650e63433a7c2437e7f3068376e6c83" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81676f6a57f3dc94d298ad0f87853b7adfa3791d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;django.contrib.auth.models.AnonymousUser&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;django.contrib.auth.models.AnonymousUser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07630cda93e600807a0e7fde2c134d865ad92ee0" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;ordering&lt;/code&gt;</source>
          <target state="translated">기본 : &lt;code&gt;ordering&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44edcd736cfd7e19e5c05ac400b9259e6e5d2b51" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;search&lt;/code&gt;</source>
          <target state="translated">기본 : &lt;code&gt;search&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="900d28234e539c94715d7f4e74c2047260441d56" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{'retrieve': 'read', 'destroy': 'delete'}&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;{'retrieve': 'read', 'destroy': 'delete'}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="684d0cdc1ebdfd17dc0658c2be41f090f61da56d" translate="yes" xml:space="preserve">
          <source>DefaultRouter</source>
          <target state="translated">DefaultRouter</target>
        </trans-unit>
        <trans-unit id="588f811977e78e2306235dd703556ced59dedf17" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;False&lt;/code&gt; 입니다</target>
        </trans-unit>
        <trans-unit id="bff337cc61a33d1de8550e8b38d516a56b2c6f76" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ae7a711d44932d0696f926eddee55ca5c4ea625f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;serializers.ChoiceField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;serializers.ChoiceField&lt;/code&gt; 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="a2eeb5b4db43923d58ac592d457914ef3e03ffbd" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;serializers.HyperlinkedIdentityField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;serializers.HyperlinkedIdentityField&lt;/code&gt; 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="e528b5a5b6f80e21687c62fdaf2010800f00e46e" translate="yes" xml:space="preserve">
          <source>Defaults to the name of the field.</source>
          <target state="translated">필드 이름이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="4fd1a2d76f220c8115b2721f195d52e376329aaf" translate="yes" xml:space="preserve">
          <source>Delete the associated instance.</source>
          <target state="translated">연관된 인스턴스를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="30714db6fe6329f7085bf73f779b59d3d779974c" translate="yes" xml:space="preserve">
          <source>Depending on the client's &lt;code&gt;Accept:&lt;/code&gt; header, this may be more specific than the renderer's &lt;code&gt;media_type&lt;/code&gt; attribute, and may include media type parameters. For example &lt;code&gt;&quot;application/json; nested=true&quot;&lt;/code&gt;.</source>
          <target state="translated">클라이언트의 &lt;code&gt;Accept:&lt;/code&gt; 헤더에 따라 렌더러의 &lt;code&gt;media_type&lt;/code&gt; 속성 보다 더 구체적 일 수 있으며 미디어 유형 매개 변수를 포함 할 수 있습니다. 예를 들어 &lt;code&gt;&quot;application/json; nested=true&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7a7a6e85e88a5a6fa909688b480188188fd3793d" translate="yes" xml:space="preserve">
          <source>Depending on the request's &lt;code&gt;Content-Type:&lt;/code&gt; header, this may be more specific than the renderer's &lt;code&gt;media_type&lt;/code&gt; attribute, and may include media type parameters. For example &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt;.</source>
          <target state="translated">요청의 &lt;code&gt;Content-Type:&lt;/code&gt; 헤더에 따라 렌더러의 &lt;code&gt;media_type&lt;/code&gt; 속성 보다 더 구체적 일 수 있으며 미디어 유형 매개 변수를 포함 할 수 있습니다. 예를 들어 &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="faa93dfb1b8e7a4ef20cf07c512da27ea204ec87" translate="yes" xml:space="preserve">
          <source>Deserialising:</source>
          <target state="translated">Deserialising:</target>
        </trans-unit>
        <trans-unit id="eebb6cd8621ad551debba81fe2a635169d63bdcf" translate="yes" xml:space="preserve">
          <source>Deserialization is similar. First we parse a stream into Python native datatypes...</source>
          <target state="translated">역 직렬화는 비슷합니다. 먼저 스트림을 Python 기본 데이터 유형으로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="11351f44fcc8bba476c855bbb73d00cc5b797bad" translate="yes" xml:space="preserve">
          <source>Deserializing multiple objects</source>
          <target state="translated">여러 객체의 역 직렬화</target>
        </trans-unit>
        <trans-unit id="18781ad0f4929a85d5fb4ef9ac32b53395e22ed2" translate="yes" xml:space="preserve">
          <source>Deserializing objects</source>
          <target state="translated">객체 역 직렬화</target>
        </trans-unit>
        <trans-unit id="ec588ebb50851865a863d6f3d5ff4fc7f705e2c1" translate="yes" xml:space="preserve">
          <source>Designing your media types</source>
          <target state="translated">미디어 타입 디자인</target>
        </trans-unit>
        <trans-unit id="61dc06df305d330dfbc455546e986dcdb1262d0d" translate="yes" xml:space="preserve">
          <source>DestroyAPIView</source>
          <target state="translated">DestroyAPIView</target>
        </trans-unit>
        <trans-unit id="c9c987f3ddb2cb6850ed5834e051183fd2244b31" translate="yes" xml:space="preserve">
          <source>DestroyModelMixin</source>
          <target state="translated">DestroyModelMixin</target>
        </trans-unit>
        <trans-unit id="908c4b6b16371ce7e7485daa13ff9f7646cc66cc" translate="yes" xml:space="preserve">
          <source>Details and limitations</source>
          <target state="translated">세부 사항 및 제한 사항</target>
        </trans-unit>
        <trans-unit id="ac0a8508ce8161b653474c2ab4b8a8b404c343f7" translate="yes" xml:space="preserve">
          <source>Determining the accepted renderer</source>
          <target state="translated">허용되는 렌더러 결정</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="3c91c8aa60a2a5708ad474bd3a53d74c13c1e2ee" translate="yes" xml:space="preserve">
          <source>DictField</source>
          <target state="translated">DictField</target>
        </trans-unit>
        <trans-unit id="3d5360c6ea0d8e99ac86cd3a4d21742fa0637c3e" translate="yes" xml:space="preserve">
          <source>Dispatch methods</source>
          <target state="translated">디스패치 메소드</target>
        </trans-unit>
        <trans-unit id="147cf3560b49f5ebdda69b2ae446a79451542669" translate="yes" xml:space="preserve">
          <source>Django (1.11, 2.0, 2.1, 2.2)</source>
          <target state="translated">장고 (1.11, 2.0, 2.1, 2.2)</target>
        </trans-unit>
        <trans-unit id="14c7830a7947e8b0dbccef8acb7311b5868cb3ef" translate="yes" xml:space="preserve">
          <source>Django OAuth Toolkit</source>
          <target state="translated">장고 OAuth 툴킷</target>
        </trans-unit>
        <trans-unit id="fd0b57648ddc6e50ced7c1b74282bcb2ae26ec9e" translate="yes" xml:space="preserve">
          <source>Django REST Framework</source>
          <target state="translated">장고 REST 프레임 워크</target>
        </trans-unit>
        <trans-unit id="d5c79be21773f9b35fb641761c8b8e70d13caf91" translate="yes" xml:space="preserve">
          <source>Django REST Framework API Key</source>
          <target state="translated">장고 REST 프레임 워크 API 키</target>
        </trans-unit>
        <trans-unit id="9f2a7990763fe979b07a0e3af963e1df801f4f8b" translate="yes" xml:space="preserve">
          <source>Django REST Framework bulk</source>
          <target state="translated">장고 REST 프레임 워크 벌크</target>
        </trans-unit>
        <trans-unit id="ba222e6825cd91c2b199f30da37787081fc0cb34" translate="yes" xml:space="preserve">
          <source>Django REST Framework provides support for automatic generation of &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification&quot;&gt;OpenAPI&lt;/a&gt; schemas.</source>
          <target state="translated">Django REST Framework는 &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification&quot;&gt;OpenAPI&lt;/a&gt; 스키마 자동 생성을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="3e46c03cf17beef6a39b5a2fe25e2b47079db48f" translate="yes" xml:space="preserve">
          <source>Django REST Framework provides two error views suitable for providing generic JSON &lt;code&gt;500&lt;/code&gt; Server Error and &lt;code&gt;400&lt;/code&gt; Bad Request responses. (Django's default error views provide HTML responses, which may not be appropriate for an API-only application.)</source>
          <target state="translated">Django REST Framework는 일반적인 JSON &lt;code&gt;500&lt;/code&gt; 서버 오류 및 &lt;code&gt;400&lt;/code&gt; 잘못된 요청 응답 을 제공하는 데 적합한 두 가지 오류보기를 제공 합니다. (Django의 기본 오류보기는 HTML 응답을 제공하므로 API 전용 응용 프로그램에는 적합하지 않을 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="8b3181485aa102d988402709d46b4eeeebcf6ad7" translate="yes" xml:space="preserve">
          <source>Django REST framework OAuth</source>
          <target state="translated">Django REST 프레임 워크 OAuth</target>
        </trans-unit>
        <trans-unit id="307ee732172ebb5aaea34f3cfbb650ad7b82ad32" translate="yes" xml:space="preserve">
          <source>Django REST framework allows you to combine the logic for a set of related views in a single class, called a &lt;code&gt;ViewSet&lt;/code&gt;. In other frameworks you may also find conceptually similar implementations named something like 'Resources' or 'Controllers'.</source>
          <target state="translated">Django REST 프레임 워크를 사용하면 &lt;code&gt;ViewSet&lt;/code&gt; 이라는 단일 클래스의 관련 뷰 세트에 대한 논리를 결합 할 수 있습니다 . 다른 프레임 워크에서는 'Resources'또는 'Controllers'와 같은 개념적으로 유사한 구현도 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acedd647deee3407ff0e2d0c2be662cb741c80d5" translate="yes" xml:space="preserve">
          <source>Django REST framework filters package</source>
          <target state="translated">Django REST 프레임 워크 필터 패키지</target>
        </trans-unit>
        <trans-unit id="6af76ddc1d540a142a6985cdee0c6c86e60bdff4" translate="yes" xml:space="preserve">
          <source>Django REST framework full word search filter</source>
          <target state="translated">Django REST Framework 전체 단어 검색 필터</target>
        </trans-unit>
        <trans-unit id="c520473dc86627a72fd5ebd7661a49e0a46544fb" translate="yes" xml:space="preserve">
          <source>Django REST framework is a powerful and flexible toolkit for building Web APIs.</source>
          <target state="translated">Django REST 프레임 워크는 웹 API 구축을위한 강력하고 유연한 툴킷입니다.</target>
        </trans-unit>
        <trans-unit id="5de50fa24a71584d334a8b4b258328be52d27bdf" translate="yes" xml:space="preserve">
          <source>Django REST marshmallow</source>
          <target state="translated">장고 REST 마시멜로</target>
        </trans-unit>
        <trans-unit id="61ee946ac32c2f53817b2c01c73cd17fb318a0da" translate="yes" xml:space="preserve">
          <source>Django Rest Framework Role Filters</source>
          <target state="translated">Django Rest 프레임 워크 역할 필터</target>
        </trans-unit>
        <trans-unit id="0113a606630d27f7f05d458f49fd6c3dcab9bbb5" translate="yes" xml:space="preserve">
          <source>Django Rest Framework Roles</source>
          <target state="translated">장고 레스트 프레임 워크 역할</target>
        </trans-unit>
        <trans-unit id="77d78a7e51fcafd62d26f583ecedaff1a1d561f2" translate="yes" xml:space="preserve">
          <source>Django Rest Multiple Models</source>
          <target state="translated">장고 레스트 다중 모델</target>
        </trans-unit>
        <trans-unit id="b6d5b89d123e5e9954f061cd98c4a93621ee3bc7" translate="yes" xml:space="preserve">
          <source>Django URL Filter</source>
          <target state="translated">장고 URL 필터</target>
        </trans-unit>
        <trans-unit id="d1325d58cde10dc164a8ffe02cdd5e7f4fd0625c" translate="yes" xml:space="preserve">
          <source>Django provides a &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/class-based-views/intro/#decorating-the-class&quot;&gt;&lt;code&gt;method_decorator&lt;/code&gt;&lt;/a&gt; to use decorators with class based views. This can be used with other cache decorators such as &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache&quot;&gt;&lt;code&gt;cache_page&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/http/decorators/#django.views.decorators.vary.vary_on_cookie&quot;&gt;&lt;code&gt;vary_on_cookie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Django는 클래스 기반 뷰와 함께 데코레이터를 사용 하는 &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/class-based-views/intro/#decorating-the-class&quot;&gt; &lt;code&gt;method_decorator&lt;/code&gt; &lt;/a&gt; 를 제공합니다 . 이것은 &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache&quot;&gt; &lt;code&gt;cache_page&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/http/decorators/#django.views.decorators.vary.vary_on_cookie&quot;&gt; &lt;code&gt;vary_on_cookie&lt;/code&gt; &lt;/a&gt; 와 같은 다른 캐시 데코레이터와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="391f8d414834e0208cf822b441b0f979baf37eaa" translate="yes" xml:space="preserve">
          <source>Django provides a few classes that help you manage paginated data &amp;ndash; that is, data that&amp;rsquo;s split across several pages, with &amp;ldquo;Previous/Next&amp;rdquo; links.</source>
          <target state="translated">Django는 페이지가 매겨진 데이터, 즉&amp;ldquo;이전 / 다음&amp;rdquo;링크를 통해 여러 페이지에 걸쳐 분할 된 데이터를 관리하는 데 도움이되는 몇 가지 클래스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="055ea5b1bded671c351efa90a3fbe2c258360c49" translate="yes" xml:space="preserve">
          <source>Django&amp;rsquo;s generic views... were developed as a shortcut for common usage patterns... They take certain common idioms and patterns found in view development and abstract them so that you can quickly write common views of data without having to repeat yourself.</source>
          <target state="translated">Django의 일반적인 뷰는 일반적인 사용 패턴에 대한 바로 가기로 개발되었습니다 ... 뷰 개발에서 발견 된 특정 일반적인 관용구와 패턴을 가져와 추상화하여 반복하지 않고도 일반적인 데이터 뷰를 빠르게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddba5767f7b44b2c223c9e6d9da072e31d577491" translate="yes" xml:space="preserve">
          <source>Django's &lt;code&gt;Http404&lt;/code&gt; exception.</source>
          <target state="translated">장고의 &lt;code&gt;Http404&lt;/code&gt; 예외.</target>
        </trans-unit>
        <trans-unit id="164b9e1971dc2b35a3ae53b9355459becc2f829c" translate="yes" xml:space="preserve">
          <source>Django's &lt;code&gt;PermissionDenied&lt;/code&gt; exception.</source>
          <target state="translated">Django의 &lt;code&gt;PermissionDenied&lt;/code&gt; 예외입니다.</target>
        </trans-unit>
        <trans-unit id="38104aaa8df9c81242fe8d7d7bf3dece8d098f94" translate="yes" xml:space="preserve">
          <source>Django's class-based views are a welcome departure from the old-style views.</source>
          <target state="translated">Django의 클래스 기반 뷰는 구식 뷰에서 벗어나는 것을 환영합니다.</target>
        </trans-unit>
        <trans-unit id="6dfb9370078d949cf91659f05fef105911f2b31a" translate="yes" xml:space="preserve">
          <source>DjangoFilterBackend</source>
          <target state="translated">DjangoFilterBackend</target>
        </trans-unit>
        <trans-unit id="6ebcd0718f15348a8c86e0a586ae97bf018d0085" translate="yes" xml:space="preserve">
          <source>DjangoModelPermissions</source>
          <target state="translated">DjangoModelPermissions</target>
        </trans-unit>
        <trans-unit id="0538ec5d367edb7b0f6937d172df4ca314016406" translate="yes" xml:space="preserve">
          <source>DjangoModelPermissionsOrAnonReadOnly</source>
          <target state="translated">DjangoModelPermissionsOrAnonReadOnly</target>
        </trans-unit>
        <trans-unit id="dbf7679c73583a638075b4b48b21d78d346cab0c" translate="yes" xml:space="preserve">
          <source>DjangoObjectPermissions</source>
          <target state="translated">DjangoObjectPermissions</target>
        </trans-unit>
        <trans-unit id="40f08011d7ecc140f52bf6b191b3fc5ef808816f" translate="yes" xml:space="preserve">
          <source>Djoser</source>
          <target state="translated">Djoser</target>
        </trans-unit>
        <trans-unit id="dfec20ebf559498feeb0aece73d0bca0f7d4c0a1" translate="yes" xml:space="preserve">
          <source>Doing so reduces the amount of hidden 'magic' that &lt;code&gt;ModelSerializer&lt;/code&gt; provides, makes the behavior of the field more clear, and ensures that it is trivial to move between using the &lt;code&gt;ModelSerializer&lt;/code&gt; shortcut, or using fully explicit &lt;code&gt;Serializer&lt;/code&gt; classes.</source>
          <target state="translated">그렇게하면 &lt;code&gt;ModelSerializer&lt;/code&gt; 가 제공 하는 숨겨진 '매직'의 양이 줄어들고 필드의 동작이보다 명확 &lt;code&gt;ModelSerializer&lt;/code&gt; 며 ModelSerializer 바로 가기를 사용하거나 완전히 명시적인 &lt;code&gt;Serializer&lt;/code&gt; 클래스 를 사용하는 것이 쉽지 않습니다.</target>
        </trans-unit>
        <trans-unit id="167e17833d7ae304e668b1b4ef08c429e31b35c3" translate="yes" xml:space="preserve">
          <source>Doing so will allow any returned URLs to include the appropriate versioning.</source>
          <target state="translated">그렇게하면 반환 된 URL에 적절한 버전이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="966ab16265b1103efeb1496d4e6d878eb747fd71" translate="yes" xml:space="preserve">
          <source>Doing so will ensure that the hyperlinks can include an appropriate hostname, so that the resulting representation uses fully qualified URLs, such as:</source>
          <target state="translated">그렇게하면 하이퍼 링크에 적절한 호스트 이름이 포함될 수 있으므로 결과 표현은 다음과 같은 정규화 된 URL을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0662081748162b8640341d50d732ff2b64584419" translate="yes" xml:space="preserve">
          <source>Don't forget to make sure you've also added &lt;code&gt;rest_framework&lt;/code&gt; to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt;.</source>
          <target state="translated">당신이 또한 추가 한 것을 잊지 마십시오 &lt;code&gt;rest_framework&lt;/code&gt; 을 당신에 &lt;code&gt;INSTALLED_APPS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="350b31e9ef9c845b0e9feb3c8a0b0fc2fa56313f" translate="yes" xml:space="preserve">
          <source>DurationField</source>
          <target state="translated">DurationField</target>
        </trans-unit>
        <trans-unit id="1745158ed670935e9dbbd97e13535e4c646e3726" translate="yes" xml:space="preserve">
          <source>During dispatch, the following attributes are available on the &lt;code&gt;ViewSet&lt;/code&gt;.</source>
          <target state="translated">디스패치하는 동안 &lt;code&gt;ViewSet&lt;/code&gt; 에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c904bcfac1297f417c516c6b59f9b093b65cfd94" translate="yes" xml:space="preserve">
          <source>Dynamic Fields Mixin</source>
          <target state="translated">다이나믹 필드 믹스 인</target>
        </trans-unit>
        <trans-unit id="1a5302b0d17a97913173ab7e3e09c594d1e1cd1a" translate="yes" xml:space="preserve">
          <source>Dynamic REST</source>
          <target state="translated">동적 REST</target>
        </trans-unit>
        <trans-unit id="08add85a720f38076f72b1a8dc378d76334ea207" translate="yes" xml:space="preserve">
          <source>Dynamically modifying fields</source>
          <target state="translated">필드를 동적으로 수정</target>
        </trans-unit>
        <trans-unit id="7704ff80ba96a58ce836f412358d3a8f0fe7bbf6" translate="yes" xml:space="preserve">
          <source>ESG</source>
          <target state="translated">ESG</target>
        </trans-unit>
        <trans-unit id="df76764a5c1ee99072ffeaa450945d48b3d77172" translate="yes" xml:space="preserve">
          <source>EXCEPTION_HANDLER</source>
          <target state="translated">EXCEPTION_HANDLER</target>
        </trans-unit>
        <trans-unit id="476d94b557483460c30e5cf92c0f2ead46226551" translate="yes" xml:space="preserve">
          <source>Each field in a Form class is responsible not only for validating data, but also for &quot;cleaning&quot; it &amp;mdash; normalizing it to a consistent format.</source>
          <target state="translated">Form 클래스의 각 필드는 데이터의 유효성을 검사 할뿐만 아니라 데이터를 &quot;정리&quot;하여 일관된 형식으로 정규화합니다.</target>
        </trans-unit>
        <trans-unit id="b6d7be99738f1f94ba9a180c81ff834f413f722e" translate="yes" xml:space="preserve">
          <source>Each key in the dictionary will be the field name, and the values will be lists of strings of any error messages corresponding to that field. The &lt;code&gt;non_field_errors&lt;/code&gt; key may also be present, and will list any general validation errors. The name of the &lt;code&gt;non_field_errors&lt;/code&gt; key may be customized using the &lt;code&gt;NON_FIELD_ERRORS_KEY&lt;/code&gt; REST framework setting.</source>
          <target state="translated">사전의 각 키는 필드 이름이되고 값은 해당 필드에 해당하는 오류 메시지의 문자열 목록이됩니다. &lt;code&gt;non_field_errors&lt;/code&gt; 의 키는 존재할 수, 및 일반 유효성 검사 오류를 나열합니다. &lt;code&gt;non_field_errors&lt;/code&gt; 키 의 이름은 &lt;code&gt;NON_FIELD_ERRORS_KEY&lt;/code&gt; REST 프레임 워크 설정을 사용하여 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="117b784fa66913cc15c884d29c1d3b069085dc44" translate="yes" xml:space="preserve">
          <source>Each of the concrete generic views provided is built by combining &lt;code&gt;GenericAPIView&lt;/code&gt;, with one or more mixin classes.</source>
          <target state="translated">제공된 각 구체적인 제네릭 뷰는 &lt;code&gt;GenericAPIView&lt;/code&gt; 를 하나 이상의 믹스 인 클래스와 결합하여 빌드됩니다 .</target>
        </trans-unit>
        <trans-unit id="412c2c79e41051f20a171b8b67ad937fb619c74c" translate="yes" xml:space="preserve">
          <source>Each of these decorators takes a single argument which must be a list or tuple of classes.</source>
          <target state="translated">이 데코레이터 각각은 하나의 인수를 취하는데 이는 클래스의리스트 또는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="f45619e5e5e859f22e542ddb326684a8f7db496f" translate="yes" xml:space="preserve">
          <source>Each serializer field class constructor takes at least these arguments. Some Field classes take additional, field-specific arguments, but the following should always be accepted:</source>
          <target state="translated">각 serializer 필드 클래스 생성자는 최소한 이러한 인수를 사용합니다. 일부 필드 클래스는 추가 필드 특정 인수를 사용하지만 다음을 항상 승인해야합니다.</target>
        </trans-unit>
        <trans-unit id="633355623fcc95dfef5d0ad7a3c26b72e2ee92f6" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;snippets/views.py&lt;/code&gt; file, and add the following.</source>
          <target state="translated">&lt;code&gt;snippets/views.py&lt;/code&gt; 파일을 편집하고 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a55611e4377c447cc996610b48ec236a6d5d43c5" translate="yes" xml:space="preserve">
          <source>EmailField</source>
          <target state="translated">EmailField</target>
        </trans-unit>
        <trans-unit id="91e7aa89332b6cee8751327a9d69e3cd920f8ea8" translate="yes" xml:space="preserve">
          <source>Encodings</source>
          <target state="translated">Encodings</target>
        </trans-unit>
        <trans-unit id="53414d1f238286311e1cb3715f611d1041fb82dc" translate="yes" xml:space="preserve">
          <source>Ensures that any &lt;code&gt;Response&lt;/code&gt; object returned from the handler method will be rendered into the correct content type, as determined by the content negotiation.</source>
          <target state="translated">어떤 보장 &lt;code&gt;Response&lt;/code&gt; 내용 협상에 의해 결정되는 핸들러 메소드로부터 리턴 된 객체는 정확한 콘텐츠 유형으로 렌더링 될 것이다.</target>
        </trans-unit>
        <trans-unit id="f3c3690ab796c08c6311d5a3bfcf04c0263122bd" translate="yes" xml:space="preserve">
          <source>Ensures that the request object that is passed to the handler method is an instance of &lt;code&gt;Request&lt;/code&gt;, rather than the usual Django &lt;code&gt;HttpRequest&lt;/code&gt;.</source>
          <target state="translated">핸들러 메소드에 전달 된 요청 오브젝트가 일반적인 Django &lt;code&gt;HttpRequest&lt;/code&gt; 가 아닌 &lt;code&gt;Request&lt;/code&gt; 인스턴스인지 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="861245b8779c3c0a240081e66f72046983ca7d16" translate="yes" xml:space="preserve">
          <source>Example usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="aa7dbf5e15153d64b7b645803acc5731b04bf7f6" translate="yes" xml:space="preserve">
          <source>Exception handling in REST framework views</source>
          <target state="translated">REST 프레임 워크보기에서 예외 처리</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="955722d3270c6e250cdbce9d8f4d3991cd40f8b5" translate="yes" xml:space="preserve">
          <source>Exceptions raised and handled by an HTML renderer will attempt to render using one of the following methods, by order of precedence.</source>
          <target state="translated">HTML 렌더러가 발생시키고 처리하는 예외는 우선 순위에 따라 다음 방법 중 하나를 사용하여 렌더링을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="20dcd7693cac83e296f186865162822cf0c3bfa6" translate="yes" xml:space="preserve">
          <source>Exceptions&amp;hellip; allow error handling to be organized cleanly in a central or high-level place within the program structure.</source>
          <target state="translated">예외&amp;hellip; 프로그램 구조 내에서 중앙 또는 상위 위치에 오류 처리를 깔끔하게 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d97f5c1f363e4a80555252372cc363acff8e679" translate="yes" xml:space="preserve">
          <source>Expanding the usefulness of the serializers is something that we would like to address. However, it's not a trivial problem, and it will take some serious design work.</source>
          <target state="translated">시리얼 라이저의 유용성을 확장하는 것은 우리가 해결하고자하는 것입니다. 그러나 사소한 문제는 아니며 심각한 디자인 작업이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0cef9ccf02d007bea41c3ba8180064b1bd846a0d" translate="yes" xml:space="preserve">
          <source>Explicitly encoding the request body</source>
          <target state="translated">요청 본문을 명시 적으로 인코딩</target>
        </trans-unit>
        <trans-unit id="d950e7d5b988b053fbdbd3ab11020426230d8a5b" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/testing/advanced/#django.test.client.RequestFactory&quot;&gt;Django's existing &lt;code&gt;RequestFactory&lt;/code&gt; class&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/testing/advanced/#django.test.client.RequestFactory&quot;&gt;Django의 기존 &lt;code&gt;RequestFactory&lt;/code&gt; 클래스를&lt;/a&gt; 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="a7ff3d65dbf393e4c2008c3b48586dfc2fb0766b" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/testing/tools/#the-test-client&quot;&gt;Django's existing &lt;code&gt;Client&lt;/code&gt; class&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/testing/tools/#the-test-client&quot;&gt;Django의 기존 &lt;code&gt;Client&lt;/code&gt; 클래스를&lt;/a&gt; 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="68e5b4704165f69072e77051cd13ee4643c2d67e" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#createmodelmixin&quot;&gt;CreateModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#createmodelmixin&quot;&gt;CreateModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8066ccd6670b80df11621b61e9770ace1238d871" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="481e3e3177f623da5ca19ab173d2954af4fce276" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#listmodelmixin&quot;&gt;ListModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#listmodelmixin&quot;&gt;ListModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adb403f2c2fb0acf301833712523100797d3c269" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#listmodelmixin&quot;&gt;ListModelMixin&lt;/a&gt;, &lt;a href=&quot;#createmodelmixin&quot;&gt;CreateModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#listmodelmixin&quot;&gt;ListModelMixin&lt;/a&gt; , &lt;a href=&quot;#createmodelmixin&quot;&gt;CreateModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e1d97e677a8abd57773b8a062cf0b589321fcba" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ee67930c09309615e4e157400b014ce579a4410" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;, &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt; , &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="538b830b16537064b07095a8888f88675ef18e60" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;, &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt; , &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fea4836c3ef14fb4fefc9bb8e214153b4443456d" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt;, &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;, &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#retrievemodelmixin&quot;&gt;RetrieveModelMixin&lt;/a&gt; , &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt; , &lt;a href=&quot;#destroymodelmixin&quot;&gt;DestroyModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fe9fea6d13b8a93dd2de8017da8ab74056600fa" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt;, &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;#genericapiview&quot;&gt;GenericAPIView&lt;/a&gt; , &lt;a href=&quot;#updatemodelmixin&quot;&gt;UpdateModelMixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ef76653b306988783092dcf3e7eb20a3386d076" translate="yes" xml:space="preserve">
          <source>Extra actions can map additional HTTP methods to separate &lt;code&gt;ViewSet&lt;/code&gt; methods. For example, the above password set/unset methods could be consolidated into a single route. Note that additional mappings do not accept arguments.</source>
          <target state="translated">추가 작업은 추가 HTTP 메서드를 별도의 &lt;code&gt;ViewSet&lt;/code&gt; 메서드에 매핑 할 수 있습니다 . 예를 들어, 위의 암호 설정 / 설정 해제 방법을 단일 경로로 통합 할 수 있습니다. 추가 매핑에는 인수가 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b41e7e2f99feed1067c1321b5df66c9108d72b8" translate="yes" xml:space="preserve">
          <source>Extra fields can correspond to any property or callable on the model.</source>
          <target state="translated">추가 필드는 모든 속성에 해당하거나 모델에서 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d0cf5eef948b6f301867a79ac2c03c9db727e59" translate="yes" xml:space="preserve">
          <source>FORMAT_SUFFIX_KWARG</source>
          <target state="translated">FORMAT_SUFFIX_KWARG</target>
        </trans-unit>
        <trans-unit id="45e91ce3ef250a150e4bc5a89326563f549c8536" translate="yes" xml:space="preserve">
          <source>Field-level validation</source>
          <target state="translated">필드 레벨 검증</target>
        </trans-unit>
        <trans-unit id="4105342b89e9a2d233fd737ad8c34867bdb3ea3b" translate="yes" xml:space="preserve">
          <source>File upload fields</source>
          <target state="translated">파일 업로드 필드</target>
        </trans-unit>
        <trans-unit id="eaab7368147ce3b8e9cd4bae206ba854e90a8d1b" translate="yes" xml:space="preserve">
          <source>FileField</source>
          <target state="translated">FileField</target>
        </trans-unit>
        <trans-unit id="269358c08be1f44a0f790c5bce56066dceebadc6" translate="yes" xml:space="preserve">
          <source>FilePathField</source>
          <target state="translated">FilePathField</target>
        </trans-unit>
        <trans-unit id="c3071ec2a35112139620d6d71a09fa699496e391" translate="yes" xml:space="preserve">
          <source>FileUploadParser</source>
          <target state="translated">FileUploadParser</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="6db47f21e5e53d36832ede7f8dea48c1b155d3bb" translate="yes" xml:space="preserve">
          <source>Filtering against query parameters</source>
          <target state="translated">쿼리 매개 변수에 대한 필터링</target>
        </trans-unit>
        <trans-unit id="0307ddcee6f5701606960307b7c55c09bdd00f87" translate="yes" xml:space="preserve">
          <source>Filtering against the URL</source>
          <target state="translated">URL을 기준으로 필터링</target>
        </trans-unit>
        <trans-unit id="4241ea529a908bd9c09c459c4b716326b407eaef" translate="yes" xml:space="preserve">
          <source>Filtering against the current user</source>
          <target state="translated">현재 사용자에 대한 필터링</target>
        </trans-unit>
        <trans-unit id="cadb25b54f458bae227100228ba3a3bcd8b1cb72" translate="yes" xml:space="preserve">
          <source>Filtering and object lookups</source>
          <target state="translated">필터링 및 객체 조회</target>
        </trans-unit>
        <trans-unit id="2f2c423efdb6db2bf5d38ddbddb43ac18ace5460" translate="yes" xml:space="preserve">
          <source>Finally we need to add those views into the API, by referencing them from the URL conf. Add the following to the patterns in &lt;code&gt;snippets/urls.py&lt;/code&gt;.</source>
          <target state="translated">마지막으로 URL conf에서 참조하여 해당 뷰를 API에 추가해야합니다. &lt;code&gt;snippets/urls.py&lt;/code&gt; 의 패턴에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae610a86fbfe5ea8ee12713a6d22c9764177ce4b" translate="yes" xml:space="preserve">
          <source>Finally we need to wire these views up. Create the &lt;code&gt;snippets/urls.py&lt;/code&gt; file:</source>
          <target state="translated">마지막으로 이러한 뷰를 연결해야합니다. &lt;code&gt;snippets/urls.py&lt;/code&gt; 파일을 작성 하십시오.</target>
        </trans-unit>
        <trans-unit id="85fdc2148677f7d82e0da0ba0101d5a1b8a91eb0" translate="yes" xml:space="preserve">
          <source>Finally, we can get a list of all of the snippets:</source>
          <target state="translated">마지막으로 모든 스 니펫 목록을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="657692ac300e7753528cea510dc14e82bbf1dc51" translate="yes" xml:space="preserve">
          <source>Finally, we're including default login and logout views for use with the browsable API. That's optional, but useful if your API requires authentication and you want to use the browsable API.</source>
          <target state="translated">마지막으로, 브라우징 가능한 API와 함께 사용하기위한 기본 로그인 및 로그 아웃보기가 포함됩니다. 선택 사항이지만 API에 인증이 필요하고 탐색 가능한 API를 사용하려는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2a4e717474869391f4dbd0e9c12eecc7a840d962" translate="yes" xml:space="preserve">
          <source>First add the following import in the views module</source>
          <target state="translated">먼저 views 모듈에 다음 import를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="24aea0064932b4921d12304cf483f082236df127" translate="yes" xml:space="preserve">
          <source>First of all let's refactor our &lt;code&gt;UserList&lt;/code&gt; and &lt;code&gt;UserDetail&lt;/code&gt; views into a single &lt;code&gt;UserViewSet&lt;/code&gt;. We can remove the two views, and replace them with a single class:</source>
          <target state="translated">우선 &lt;code&gt;UserList&lt;/code&gt; 및 &lt;code&gt;UserDetail&lt;/code&gt; 뷰를 단일 &lt;code&gt;UserViewSet&lt;/code&gt; 로 리팩토링합니다 . 두 개의 뷰를 제거하고 단일 클래스로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="412937927a08c2dd71924c57e25e26f76315a756" translate="yes" xml:space="preserve">
          <source>First up we're going to define some serializers. Let's create a new module named &lt;code&gt;tutorial/quickstart/serializers.py&lt;/code&gt; that we'll use for our data representations.</source>
          <target state="translated">먼저 시리얼 라이저를 정의하겠습니다. 데이터 표현에 사용할 &lt;code&gt;tutorial/quickstart/serializers.py&lt;/code&gt; 라는 새 모듈을 만들어 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="4cdc1208676b23ea32d59df3dcc23e4161aa6a26" translate="yes" xml:space="preserve">
          <source>FloatField</source>
          <target state="translated">FloatField</target>
        </trans-unit>
        <trans-unit id="947a79bce117dbf5b7048cdde9ac9c8a8d8489cb" translate="yes" xml:space="preserve">
          <source>Follow @_tomchristie</source>
          <target state="translated">@_tomchristie 팔로우</target>
        </trans-unit>
        <trans-unit id="0cab832dd77f1ae814847058f01d05d1c983f035" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; this defaults to &lt;code&gt;serializers.HyperlinkedRelatedField&lt;/code&gt;.</source>
          <target state="translated">대한 &lt;code&gt;HyperlinkedModelSerializer&lt;/code&gt; 이 기본값 &lt;code&gt;serializers.HyperlinkedRelatedField&lt;/code&gt; 은 .</target>
        </trans-unit>
        <trans-unit id="87b7973e53936506126f83cdae1674a63901071b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;ModelSerializer&lt;/code&gt; this defaults to &lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt;.</source>
          <target state="translated">대한 &lt;code&gt;ModelSerializer&lt;/code&gt; 이 기본값 &lt;code&gt;PrimaryKeyRelatedField&lt;/code&gt; 은 .</target>
        </trans-unit>
        <trans-unit id="65b0e8d8f87df69f511232d96727a3c81e11bbc8" translate="yes" xml:space="preserve">
          <source>For another example of setting the &lt;code&gt;.routes&lt;/code&gt; attribute, see the source code for the &lt;code&gt;SimpleRouter&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;.routes&lt;/code&gt; 속성 을 설정하는 또 다른 예 는 &lt;code&gt;SimpleRouter&lt;/code&gt; 클래스 의 소스 코드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="77c1918f8018982cbfea0f084bbbe04d3d2be7b6" translate="yes" xml:space="preserve">
          <source>For clarity inside your code, we recommend using &lt;code&gt;request.query_params&lt;/code&gt; instead of the Django's standard &lt;code&gt;request.GET&lt;/code&gt;. Doing so will help keep your codebase more correct and obvious - any HTTP method type may include query parameters, not just &lt;code&gt;GET&lt;/code&gt; requests.</source>
          <target state="translated">코드 내부의 명확성 을 위해 Django의 표준 &lt;code&gt;request.GET&lt;/code&gt; 대신 &lt;code&gt;request.query_params&lt;/code&gt; 를 사용하는 것이 좋습니다 . 그렇게하면 코드베이스를보다 정확하고 명확하게 유지할 수 있습니다. 모든 HTTP 메소드 유형에는 &lt;code&gt;GET&lt;/code&gt; 요청 뿐만 아니라 쿼리 매개 변수가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffce9db3c92fab56b6e9d17af08db657418628e8" translate="yes" xml:space="preserve">
          <source>For clients to authenticate, the token key should be included in the &lt;code&gt;Authorization&lt;/code&gt; HTTP header. The key should be prefixed by the string literal &quot;Token&quot;, with whitespace separating the two strings. For example:</source>
          <target state="translated">클라이언트가 인증하려면 토큰 키가 &lt;code&gt;Authorization&lt;/code&gt; HTTP 헤더에 포함되어야합니다 . 키 앞에는 문자열 리터럴 &quot;Token&quot;이 붙어야하며 공백은 두 문자열을 구분합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1c84efcff8720671370e548208d35045435e037b" translate="yes" xml:space="preserve">
          <source>For completeness lets do the same thing again but with the nested serialiser approach suggested above:</source>
          <target state="translated">완전성을 위해 동일한 작업을 다시 수행하지만 위에서 제안한 중첩 직렬 변환기 방식을 사용하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
