<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="712b79c56c2b28dac1c45ef46aa0e534b7b25153" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">트리거에 바인딩 된식이 변경 될 때 평가할 &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 항목 목록을 포함하는 명명 된 애니메이션 트리거를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="411673ac1b73f98373de35f525ceaa2303a5bf06" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">트리거에 바인딩 된 표현식이 변경 될 때 평가할 &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 항목 목록이 포함 된 명명 된 애니메이션 트리거를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1902b86e4d0caf9e34d2481afd331b3a65ca56ee" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">트리거에 바인딩 된식이 변경 될 때 평가할 &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 항목 목록을 포함하는 명명 된 애니메이션 트리거를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7d9417e5b45d0789e51adb54752a793fce271faf" translate="yes" xml:space="preserve">
          <source>Creates a named set of CSS styles that should be applied on successful transition to a given state. The state can then be referenced by name within other animation functions.</source>
          <target state="translated">주어진 상태로 성공적으로 전환 할 때 적용 할 명명 된 CSS 스타일 세트를 만듭니다. 그런 다음 다른 애니메이션 함수 내에서 이름으로 상태를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="198dc08c4d8d1323300a4a6314f67f468b5e290d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">새로운 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 인스턴스를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="36efdd5c1e89e4e8486865cfcc0c4b03c4ef9807" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">새로운 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="513102355274ffbdb1d07ac37091bb21593c9c07" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">새 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 인스턴스를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="620859ab54ea93c6e79f9cce56c1578e49659d14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Array&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; containing a subset (slice) of the elements.</source>
          <target state="translated">요소의 하위 집합 (슬라이스)을 포함 하는 새 &lt;code&gt;Array&lt;/code&gt; 또는 &lt;code&gt;String&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="65f86dc1f9780df941519cd1825f2191b9809ccb" translate="yes" xml:space="preserve">
          <source>Creates a new component.</source>
          <target state="translated">새로운 컴포넌트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="70706f2ce6e47532c5017273998404c708cf089b" translate="yes" xml:space="preserve">
          <source>Creates a new generic NgModule definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새로운 일반 NgModule 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="62e059ae3355a021d82deb57042a27f7a22f2488" translate="yes" xml:space="preserve">
          <source>Creates a new generic class definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새 일반 클래스 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="270f66a0fff8aec92d1637e16671375a0130bfc5" translate="yes" xml:space="preserve">
          <source>Creates a new generic component definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새 일반 구성 요소 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7e4fbaedc160c88240b887c836f9ce4389155aa8" translate="yes" xml:space="preserve">
          <source>Creates a new generic directive definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새로운 일반 지시문 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="c090794369bff4b38077b04ac3105611a43813f9" translate="yes" xml:space="preserve">
          <source>Creates a new generic interface definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새로운 일반 인터페이스 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="c261bc76e1d49e6a376b5b0e9970a8a6e07c39c7" translate="yes" xml:space="preserve">
          <source>Creates a new generic library project in the current workspace.</source>
          <target state="translated">현재 작업 공간에 새 일반 라이브러리 프로젝트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f1165df6f1761dae40a299c78803074c1c8ff81e" translate="yes" xml:space="preserve">
          <source>Creates a new generic pipe definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새 일반 파이프 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="687a19289fa64892e6372f943a0a5962cc751bb9" translate="yes" xml:space="preserve">
          <source>Creates a new generic web worker definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새로운 일반 웹 워커 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="4b0b3666b69dc3cde5cdbcd719fa9954c4463ffa" translate="yes" xml:space="preserve">
          <source>Creates a new instance to be used for an NgElement.</source>
          <target state="translated">NgElement에 사용할 새 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1674518b44797b3525bd3df00fe3390305b3a762" translate="yes" xml:space="preserve">
          <source>Creates a new workspace and an initial Angular app.</source>
          <target state="translated">새로운 작업 공간과 초기 Angular 앱을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ee1db38a1130820b596a25d59cab7c179c65932c" translate="yes" xml:space="preserve">
          <source>Creates a new workspace and an initial Angular application.</source>
          <target state="translated">새 작업 공간과 초기 Angular 응용 프로그램을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8d4f251edecf3d78fb8e1e4466df848dee482283" translate="yes" xml:space="preserve">
          <source>Creates a new, generic interceptor definition in the given or default project.</source>
          <target state="translated">주어진 프로젝트 또는 기본 프로젝트에서 새로운 일반 인터셉터 정의를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4493cf2530477a8d9f2b3b99bb6d434e7a752446" translate="yes" xml:space="preserve">
          <source>Creates a new, generic service definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새로운 일반 서비스 정의를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="78c88e36bcbb813904eea93e54bc229477870576" translate="yes" xml:space="preserve">
          <source>Creates a platform. Platforms have to be eagerly created via this function.</source>
          <target state="translated">플랫폼을 만듭니다. 이 기능을 통해 플랫폼을 열심히 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="54360d9658969a0ec573eba6a9918017f5dd87a1" translate="yes" xml:space="preserve">
          <source>Creates a platform. Platforms must be created on launch using this function.</source>
          <target state="translated">플랫폼을 만듭니다. 이 기능을 사용하여 시작시 플랫폼을 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="2e110ec18dd00af8cd8c8b81aa579638616fd5bd" translate="yes" xml:space="preserve">
          <source>Creates a token that can be used in a DI Provider.</source>
          <target state="translated">DI 제공자에서 사용할 수있는 토큰을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0b1cb9f9b7d7a285afa951e0d3b69ae30cb6d1d3" translate="yes" xml:space="preserve">
          <source>Creates a top-level &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance and binds it to a form to track aggregate form value and validation status.</source>
          <target state="translated">최상위 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 인스턴스를 만들고이를 폼에 바인딩하여 집계 폼 값 및 유효성 검사 상태를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="f85546e51ba807f1eec5d5543507cfa7164240c3" translate="yes" xml:space="preserve">
          <source>Creates a top-level &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance and binds it to a form to track aggregate form value and validation status.</source>
          <target state="translated">최상위 &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 인스턴스를 만들고이를 폼에 바인딩하여 집계 폼 값 및 유효성 검사 상태를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="1255a201b85cbe7e5e7a9b06511c881f3d5a6859" translate="yes" xml:space="preserve">
          <source>Creates a view that is rendered when no &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; expressions match the &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; expression. This statement should be the final case in an &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 표현식이 NgSwitch 표현식과 일치 하지 않을 때 렌더링되는 뷰를 &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 합니다. 이 진술은 &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 의 마지막 사례입니다 .</target>
        </trans-unit>
        <trans-unit id="dab35173cc85b7c0674c27b38510f7f958357ce4" translate="yes" xml:space="preserve">
          <source>Creates a view that is rendered when no &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; expressions match the &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; expression. This statement should be the final case in an &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 표현식이 NgSwitch 표현식과 일치 하지 않을 때 렌더링되는 뷰를 &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 합니다. 이 진술은 &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 의 마지막 사례입니다 .</target>
        </trans-unit>
        <trans-unit id="c18eee2a93e4477b6c57c10963771d662097ca69" translate="yes" xml:space="preserve">
          <source>Creates a view that will be added/removed from the parent &lt;a href=&quot;common/ngplural&quot;&gt;&lt;code&gt;NgPlural&lt;/code&gt;&lt;/a&gt; when the given expression matches the plural expression according to CLDR rules.</source>
          <target state="translated">주어진 표현식이 CLDR 규칙에 따라 복수 표현식과 일치 할 때 상위 &lt;a href=&quot;common/ngplural&quot;&gt; &lt;code&gt;NgPlural&lt;/code&gt; &lt;/a&gt; 에서 추가 / 제거 될보기를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="90e5aa9022d0dee8df0b0b02bc152f53c9816158" translate="yes" xml:space="preserve">
          <source>Creates a view that will be added/removed from the parent &lt;a href=&quot;ngplural&quot;&gt;&lt;code&gt;NgPlural&lt;/code&gt;&lt;/a&gt; when the given expression matches the plural expression according to CLDR rules.</source>
          <target state="translated">주어진 표현식이 CLDR 규칙에 따라 복수 표현식과 일치 할 때 상위 &lt;a href=&quot;ngplural&quot;&gt; &lt;code&gt;NgPlural&lt;/code&gt; &lt;/a&gt; 에서 추가 / 제거 될보기를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f09aa4f7ba9507300a34ba8100e68ed2ede59102" translate="yes" xml:space="preserve">
          <source>Creates a workspace with stricter type checking and stricter bundle budgets settings. This setting helps improve maintainability and catch bugs ahead of time. For more information, see &lt;a href=&quot;https://angular.io/strict&quot;&gt;https://angular.io/strict&lt;/a&gt;</source>
          <target state="translated">더 엄격한 유형 검사 및 더 엄격한 번들 예산 설정으로 작업 공간을 생성합니다. 이 설정은 유지 관리 가능성을 개선하고 미리 버그를 잡는 데 도움이됩니다. 자세한 내용은 &lt;a href=&quot;https://angular.io/strict&quot;&gt;https://angular.io/strict를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="3e46c132859b91b6355f645651049663e1181ea1" translate="yes" xml:space="preserve">
          <source>Creates a wrapped value.</source>
          <target state="translated">랩핑 된 값을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bc6c9ac0cfe99a12b62a32c54a59aa29028d9d13" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; from a user-specified configuration.</source>
          <target state="translated">사용자 지정 구성에서 &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="15338d7983963dcad284f0d0d3fa9bab224ad9a6" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; instance for the reusable animation defined by the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method that created this factory. Attaches the new player a DOM element.</source>
          <target state="translated">작성 &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; 에 의해 정의 된 재사용 애니메이션 인스턴스 &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 를 . 이 팩토리를 생성 한 &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 메소드 새 플레이어에 DOM 요소를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="b6cc009b79d6019dac1f6a5ffa066142f688a8db" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; instance for the reusable animation defined by the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;build()&lt;/code&gt; method that created this factory. Attaches the new player a DOM element.</source>
          <target state="translated">작성 &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; 에 의해 정의 된 재사용 애니메이션 인스턴스 &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 를 . 이 팩토리를 생성 한 &lt;code&gt;build()&lt;/code&gt; 메서드. 새 플레이어에 DOM 요소를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="ef233eee832b956acc0fde12db7e7f805a7b5025" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; from a user-specified configuration.</source>
          <target state="translated">사용자 지정 구성에서 &lt;code&gt;&lt;a href=&quot;forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="baf7c8a9d9a0cee928e2a1ef83a187cbf2f7bfbf" translate="yes" xml:space="preserve">
          <source>Creates an application with stricter bundle budgets settings.</source>
          <target state="translated">더 엄격한 번들 예산 설정으로 애플리케이션을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2acaa5a30d6eeaec1c7ee23cf865f129cdaea395" translate="yes" xml:space="preserve">
          <source>Creates an initializer that sets up &lt;code&gt;ngRoute&lt;/code&gt; integration along with setting up the Angular router.</source>
          <target state="translated">Angular 라우터 설정과 함께 &lt;code&gt;ngRoute&lt;/code&gt; 통합 을 설정하는 이니셜 라이저를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="7518ebe8d61d9da60cef10cb3c8780f14a62ff35" translate="yes" xml:space="preserve">
          <source>Creates an injector from previously resolved providers.</source>
          <target state="translated">이전에 확인 된 공급자로부터 인젝터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="41ec21a51c9e34599ae4575b55ae5b4599a696af" translate="yes" xml:space="preserve">
          <source>Creates an instance of an &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; for a given platform using the given runtime compiler.</source>
          <target state="translated">주어진 런타임 컴파일러를 사용하여 주어진 플랫폼 에 대한 &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 의 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="090b8dbc9d029131a07b9444bab5148373f0f7ff" translate="yes" xml:space="preserve">
          <source>Creates an instance of an &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; for the given platform for offline compilation.</source>
          <target state="translated">오프라인 컴파일을 위해 지정된 플랫폼에 대해 &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 의 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b980f5409603a22ecf3676266dcc84080b7b4f00" translate="yes" xml:space="preserve">
          <source>Creates an instance of this class that can deliver events synchronously or asynchronously.</source>
          <target state="translated">이벤트를 동 기적으로 또는 비동기 적으로 전달할 수있는이 클래스의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a6216dd2c4fe1c3c1a551822d229462456b73c31" translate="yes" xml:space="preserve">
          <source>Creates and binds a &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 인스턴스를 만들어 DOM 요소에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="e23397f8aca5a31a9be2eee05077daf1df88fe48" translate="yes" xml:space="preserve">
          <source>Creates and binds a &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 인스턴스를 만들어 DOM 요소에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="35f589fc2c6d459da93a0cf721088c19ee1ffd35" translate="yes" xml:space="preserve">
          <source>Creates and configures a module with all the router providers and directives. Optionally sets up an application listener to perform an initial navigation.</source>
          <target state="translated">모든 라우터 공급자 및 지시문을 사용하여 모듈을 만들고 구성합니다. 선택적으로 초기 탐색을 수행하도록 애플리케이션 리스너를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f7c871bdae0434bd52b442db612e31edc75afc82" translate="yes" xml:space="preserve">
          <source>Creates and initializes a custom renderer for a host DOM element.</source>
          <target state="translated">호스트 DOM 요소에 대한 사용자 정의 렌더러를 작성하고 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="c9e739492e303a6dc2b215156c6338f21bd2ea8d" translate="yes" xml:space="preserve">
          <source>Creates and initializes a custom renderer that implements the &lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; base class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; 기본 클래스 를 구현하는 사용자 정의 렌더러를 작성하고 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="140841381add619cdb8d3e4d4e5da42607ff0b91" translate="yes" xml:space="preserve">
          <source>Creates and initializes a custom renderer that implements the &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; base class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; 기본 클래스 를 구현하는 사용자 정의 렌더러를 작성하고 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="653f46ba9805561598374edfae9550c119bf3d02" translate="yes" xml:space="preserve">
          <source>Creates and initializes a new Angular app that is the default project for a new workspace.</source>
          <target state="translated">새 작업 공간의 기본 프로젝트 인 새 Angular 앱을 작성하고 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="b32cef9acfccdcd71b41cdec8483335b1d814a52" translate="yes" xml:space="preserve">
          <source>Creates and initializes a new Angular application that is the default project for a new workspace.</source>
          <target state="translated">새 작업 공간의 기본 프로젝트 인 새 Angular 애플리케이션을 만들고 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="ba561ab2c4f07e4c2409fcd26324dc01f653d3f5" translate="yes" xml:space="preserve">
          <source>Creates the router service.</source>
          <target state="translated">라우터 서비스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5dcfaea570f4e205f054a7227e74c586a508d9e3" translate="yes" xml:space="preserve">
          <source>Creates the service worker configuration file called &lt;a href=&quot;service-worker-config&quot;&gt;&lt;code&gt;ngsw-config.json&lt;/code&gt;&lt;/a&gt;, which specifies the caching behaviors and other settings.</source>
          <target state="translated">캐싱 동작 및 기타 설정을 지정하는 &lt;a href=&quot;service-worker-config&quot;&gt; &lt;code&gt;ngsw-config.json&lt;/code&gt; &lt;/a&gt; 이라는 서비스 워커 구성 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="93f3c73d71b76e9015e6075bb21802e36920b4f3" translate="yes" xml:space="preserve">
          <source>Creating Libraries</source>
          <target state="translated">라이브러리 생성</target>
        </trans-unit>
        <trans-unit id="4561116d51d14b2cb8eb4093169010893927207d" translate="yes" xml:space="preserve">
          <source>Creating a PWA with Angular CLI</source>
          <target state="translated">Angular CLI를 사용하여 PWA 생성</target>
        </trans-unit>
        <trans-unit id="932747dc8773a5a7c360d70edad53a1d6419196c" translate="yes" xml:space="preserve">
          <source>Creating a builder</source>
          <target state="translated">빌더 작성</target>
        </trans-unit>
        <trans-unit id="565548b72f2d4dbf2aa8bb9383516f26f568cb72" translate="yes" xml:space="preserve">
          <source>Creating a class for the data</source>
          <target state="translated">데이터 클래스 만들기</target>
        </trans-unit>
        <trans-unit id="3ae4ff4efba3675af3bf77fb3d2999f28cb4ad34" translate="yes" xml:space="preserve">
          <source>Creating a component</source>
          <target state="translated">컴포넌트 생성</target>
        </trans-unit>
        <trans-unit id="cca8f2e745273a94e5451c7bdc661b86216a948a" translate="yes" xml:space="preserve">
          <source>Creating a component manually</source>
          <target state="translated">수동으로 구성 요소 만들기</target>
        </trans-unit>
        <trans-unit id="4e108e76fcfa68b2c5b2958a55205d3a570d71ce" translate="yes" xml:space="preserve">
          <source>Creating a component using the Angular CLI</source>
          <target state="translated">Angular CLI를 사용하여 구성 요소 만들기</target>
        </trans-unit>
        <trans-unit id="b91c40eee2e65613c2e4c3f65111f4ebde138624" translate="yes" xml:space="preserve">
          <source>Creating a directive is similar to creating a component.</source>
          <target state="translated">지시문 작성은 구성 요소 작성과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="d2b6b7f18d181ef2637b7dc14ddeca81e37c5f6b" translate="yes" xml:space="preserve">
          <source>Creating a schematics collection</source>
          <target state="translated">회로도 컬렉션 만들기</target>
        </trans-unit>
        <trans-unit id="e1b1cea6ef59ed28322703cf4942224cd1a7c698" translate="yes" xml:space="preserve">
          <source>Creating asynchronous validators</source>
          <target state="translated">비동기 유효성 검사기 만들기</target>
        </trans-unit>
        <trans-unit id="8b53c98623b6f94e3f49cec9e5196ad665b6a098" translate="yes" xml:space="preserve">
          <source>Creating dynamic forms</source>
          <target state="translated">동적 양식 만들기</target>
        </trans-unit>
        <trans-unit id="677d95c3cbc2b8152f7dd55e45923a7267ba4303" translate="yes" xml:space="preserve">
          <source>Creating form control instances manually can become repetitive when dealing with multiple forms. The &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service provides convenient methods for generating controls.</source>
          <target state="translated">여러 양식을 처리 할 때 양식 제어 인스턴스를 수동으로 작성하면 반복 될 수 있습니다. &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; 의 서비스는 컨트롤을 생성하는 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="490dddbf7619317089d285620a37e7072b4340df" translate="yes" xml:space="preserve">
          <source>Creating libraries</source>
          <target state="translated">라이브러리 만들기</target>
        </trans-unit>
        <trans-unit id="db741cba2f274a4f1cbf4c6cb0ef3b78d1d8ac09" translate="yes" xml:space="preserve">
          <source>Creating multiple language versions of your app.</source>
          <target state="translated">여러 언어 버전의 앱 만들기</target>
        </trans-unit>
        <trans-unit id="40fb5424318bad5377653fe3039ce09e1e86600f" translate="yes" xml:space="preserve">
          <source>Creating nested form groups</source>
          <target state="translated">중첩 양식 그룹 만들기</target>
        </trans-unit>
        <trans-unit id="841d9f0c9f2649a35f996b8772fef3210b7ca451" translate="yes" xml:space="preserve">
          <source>Creating observables</source>
          <target state="translated">옵저버 블 생성</target>
        </trans-unit>
        <trans-unit id="3216ede11bb29396337f248921dc9397b0bd8f47" translate="yes" xml:space="preserve">
          <source>Creating pipes for custom data transformations</source>
          <target state="translated">사용자 지정 데이터 변환을위한 파이프 생성</target>
        </trans-unit>
        <trans-unit id="abbf7bb727236a3929eb0179330931778fbb36a5" translate="yes" xml:space="preserve">
          <source>Creating reusable animations</source>
          <target state="translated">재사용 가능한 애니메이션 만들기</target>
        </trans-unit>
        <trans-unit id="e7d007397faaabddd2cd03bea65e3c36bff70353" translate="yes" xml:space="preserve">
          <source>Creating shared modules allows you to organize and streamline your code. You can put commonly used directives, pipes, and components into one module and then import just that module wherever you need it in other parts of your app.</source>
          <target state="translated">공유 모듈을 만들면 코드를 구성하고 간소화 할 수 있습니다. 일반적으로 사용되는 지시문, 파이프 및 구성 요소를 하나의 모듈에 넣은 다음 앱의 다른 부분에서 필요할 때마다 해당 모듈 만 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d44a291073418ab2cbe02afbe51c1a63c022cd0f" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;AppModule&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="8d512d2cd082ede0e253017cddc5f329df65818c" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;TestHostComponent&lt;/code&gt; has the side-effect of creating a &lt;code&gt;DashboardHeroComponent&lt;/code&gt; because the latter appears within the template of the former. The query for the hero element (&lt;code&gt;heroEl&lt;/code&gt;) still finds it in the test DOM, albeit at greater depth in the element tree than before.</source>
          <target state="translated">만들기] &lt;code&gt;TestHostComponent&lt;/code&gt; 것은 만드는 부작용이 &lt;code&gt;DashboardHeroComponent&lt;/code&gt; 전자의 템플릿 내에서 후자가 나타납니다 때문입니다. hero 요소 ( &lt;code&gt;heroEl&lt;/code&gt; )에 대한 쿼리는 여전히 요소 트리에서 이전보다 더 깊이 있지만 테스트 DOM에서 여전히 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f1ecaa9e34716f3dd9747a34a65d8ee87cc2dbcd" translate="yes" xml:space="preserve">
          <source>Creating tree-shakable providers</source>
          <target state="translated">나무를 흔드는 제공자 작성</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="34348d8cce4ac0baa516ee80df859140d319afcc" translate="yes" xml:space="preserve">
          <source>Creation &amp;amp; cancellation</source>
          <target state="translated">작성 및 취소</target>
        </trans-unit>
        <trans-unit id="f30c0fc771771dfd33b2021ddcd6bd3d87471b38" translate="yes" xml:space="preserve">
          <source>Creation and subscription</source>
          <target state="translated">작성 및 구독</target>
        </trans-unit>
        <trans-unit id="67500d2a6e793e214a0cd4e1e0df35431ac81e4d" translate="yes" xml:space="preserve">
          <source>Creation of an Angular directive that wraps and exposes an AngularJS component so that it can be used in an Angular template. See &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular 템플릿에서 사용할 수 있도록 AngularJS 컴포넌트를 랩핑하고 노출하는 Angular 지시문 작성 &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d7af9d9b0dcb49613daac413f4d5e07d0db47b5" translate="yes" xml:space="preserve">
          <source>Creation of an Angular root injector provider that wraps and exposes an AngularJS service so that it can be injected into an Angular context. See &lt;a href=&quot;upgrademodule#upgrading-an-angular-1-service&quot;&gt;Upgrading an AngularJS service&lt;/a&gt; below.</source>
          <target state="translated">AngularJS 서비스를 랩하고 노출하여 Angular 컨텍스트에 주입 할 수있는 Angular 루트 인젝터 제공자 작성 아래 &lt;a href=&quot;upgrademodule#upgrading-an-angular-1-service&quot;&gt;의 AngularJS 서비스 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="30022562cf3aa58562e0f91c6669dd67bcbe50e0" translate="yes" xml:space="preserve">
          <source>Creation of an AngularJS directive that wraps and exposes an Angular component so that it can be used in an AngularJS template. See &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">AngularJS 템플릿에서 사용할 수 있도록 Angular 컴포넌트를 랩핑하고 노출하는 AngularJS 지시문 작성 &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6caf540e7d0dece81d99619f671f99deba1c1dc" translate="yes" xml:space="preserve">
          <source>Creation of an AngularJS service that wraps and exposes an Angular injectable so that it can be injected into an AngularJS context. See &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">AngularJS 컨텍스트에 주입 될 수 있도록 Angular 인젝터 블을 랩핑하고 노출시키는 AngularJS 서비스 작성. &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="965bd2d1ae3af9196cbb57387e0b08e1b5ae7b16" translate="yes" xml:space="preserve">
          <source>Critical runtime parts of the framework that are needed by every application. Includes all metadata decorators, &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, dependency injection, and the component lifecycle hooks.</source>
          <target state="translated">모든 응용 프로그램에 필요한 프레임 워크의 중요한 런타임 부분. 모든 메타 데이터 데코레이터, &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; , 종속성 주입 및 구성 요소 수명주기 후크를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="aad515d4bcaf8e4561615026166d203743fcb329" translate="yes" xml:space="preserve">
          <source>Cross field validation</source>
          <target state="translated">교차 필드 검증</target>
        </trans-unit>
        <trans-unit id="8949e67be6daae6abfc7300032bfed762cd44205" translate="yes" xml:space="preserve">
          <source>Cross-field validation</source>
          <target state="translated">교차 필드 검증</target>
        </trans-unit>
        <trans-unit id="9f699a272acbf0ee5228697bde033ed84c6bc8ec" translate="yes" xml:space="preserve">
          <source>Cross-site request forgery</source>
          <target state="translated">사이트 간 요청 위조</target>
        </trans-unit>
        <trans-unit id="58cd6a44bde0b5557b7ee1be6171e19c7b1cf41a" translate="yes" xml:space="preserve">
          <source>Cross-site script inclusion (XSSI)</source>
          <target state="translated">사이트 간 스크립트 포함 (XSSI)</target>
        </trans-unit>
        <trans-unit id="9599a8d86f93531a87bed7500ddb51c3a1759842" translate="yes" xml:space="preserve">
          <source>Cross-site script inclusion, also known as JSON vulnerability, can allow an attacker's website to read data from a JSON API. The attack works on older browsers by overriding native JavaScript object constructors, and then including an API URL using a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">JSON 취약점이라고도하는 사이트 간 스크립트 포함을 통해 공격자의 웹 사이트에서 JSON API의 데이터를 읽을 수 있습니다. 이 공격은 기본 JavaScript 객체 생성자를 재정의 한 다음 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그를 사용하여 API URL을 포함하여 이전 브라우저에서 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="90c3233734c863797885ddae5b2434bc49094fce" translate="yes" xml:space="preserve">
          <source>CurrencyPipe</source>
          <target state="translated">CurrencyPipe</target>
        </trans-unit>
        <trans-unit id="c8cdbe8af0f2d035eeafa0a86020e3dfc42012d5" translate="yes" xml:space="preserve">
          <source>Current index of the item in &lt;code&gt;Iterable&lt;/code&gt; or null if removed.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; 항목의 현재 색인 이거나 제거 된 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="040896c6a7b6a938ef18df5e030e5f6c531497ca" translate="yes" xml:space="preserve">
          <source>Current key in the Map.</source>
          <target state="translated">지도의 현재 키</target>
        </trans-unit>
        <trans-unit id="4f623428491a00250f9cc3b6f826771ec45769cc" translate="yes" xml:space="preserve">
          <source>Current value for the key or &lt;code&gt;null&lt;/code&gt; if removed.</source>
          <target state="translated">키의 현재 값 . 제거 된 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d111a7c81ec43cd07010bc5176f26f471a1fd12" translate="yes" xml:space="preserve">
          <source>Currently every route within the &lt;em&gt;Crisis Center&lt;/em&gt; is open to everyone. The new &lt;em&gt;admin&lt;/em&gt; feature should be accessible only to authenticated users.</source>
          <target state="translated">현재 &lt;em&gt;위기 센터&lt;/em&gt; 내의 모든 경로 는 모든 사람에게 열려 있습니다. 새로운 &lt;em&gt;관리자&lt;/em&gt; 기능은 인증 된 사용자 만 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7dc2a59fbb94224120c7fedff472f15e58fd71b8" translate="yes" xml:space="preserve">
          <source>Currently the highlight color is hard-coded &lt;em&gt;within&lt;/em&gt; the directive. That's inflexible. In this section, you give the developer the power to set the highlight color while applying the directive.</source>
          <target state="translated">현재 하이라이트 색상은 지시문 &lt;em&gt;내에&lt;/em&gt; 하드 코딩 &lt;em&gt;되어&lt;/em&gt; 있습니다. 융통성이 없습니다. 이 섹션에서는 개발자에게 지시문을 적용하는 동안 강조 색상을 설정할 수있는 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="980bc6bb8d334793aeecaded2d1ba80e27ea7147" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;appHighlight&lt;/code&gt; simply sets an element color. The directive could be more dynamic. It could detect when the user mouses into or out of the element and respond by setting or clearing the highlight color.</source>
          <target state="translated">현재 &lt;code&gt;appHighlight&lt;/code&gt; 는 단순히 요소 색상을 설정합니다. 지시문이 더 동적 일 수 있습니다. 사용자가 마우스를 요소에 넣거나 꺼낼 때를 감지하고 강조 색상을 설정하거나 지워서 반응 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cc2f1929d1be5dcde15f8c035f2d748065871c2" translate="yes" xml:space="preserve">
          <source>Currently, every route within the Crisis Center is open to everyone. The new admin feature should be accessible only to authenticated users.</source>
          <target state="translated">현재 위기 센터 내의 모든 경로는 모든 사람에게 열려 있습니다. 새 관리 기능은 인증 된 사용자 만 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0a69d158209ffed11416b2f2213e9f100ae1f0a1" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;AdminModule&lt;/code&gt; does not preload because &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; is blocking it.</source>
          <target state="translated">현재 &lt;code&gt;AdminModule&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; 가 차단하고 있기 때문에 미리로드하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4bb8ceb038011f14ae64b3990d5d31166f802179" translate="yes" xml:space="preserve">
          <source>Currently, the empty path route redirects to &lt;code&gt;/heroes&lt;/code&gt;, which redirects to &lt;code&gt;/superheroes&lt;/code&gt;. This won't work because the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; handles redirects once at each level of routing configuration. This prevents chaining of redirects, which can lead to endless redirect loops.</source>
          <target state="translated">현재 빈 경로 경로는 &lt;code&gt;/heroes&lt;/code&gt; 로 리디렉션되고 &lt;code&gt;/superheroes&lt;/code&gt; 로 리디렉션됩니다 . &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 가 라우팅 구성의 각 수준에서 한 번만 리디렉션을 처리 하기 때문에 이것은 작동하지 않습니다 . 이렇게하면 무한 리디렉션 루프로 이어질 수있는 리디렉션 체인이 방지됩니다.</target>
        </trans-unit>
        <trans-unit id="f8dd226d2053a8d92cfdc2d0bb11b5673cc40983" translate="yes" xml:space="preserve">
          <source>Currently, the example app has three components:</source>
          <target state="translated">현재 예제 앱에는 세 가지 구성 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4d2520a734e72a55fc240a11feb85a5158026de" translate="yes" xml:space="preserve">
          <source>Currently, the product list displays the name and description of each product. The product list component also defines a &lt;code&gt;products&lt;/code&gt; property that contains imported data for each product from the &lt;code&gt;products&lt;/code&gt; array in &lt;code&gt;products.ts&lt;/code&gt;.</source>
          <target state="translated">현재 제품 목록에는 각 제품의 이름과 설명이 표시됩니다. 제품 목록 구성 요소는 또한 정의 &lt;code&gt;products&lt;/code&gt; 로부터 각 제품에 대한 수입 데이터를 포함하고 재산 &lt;code&gt;products&lt;/code&gt; 의 배열 &lt;code&gt;products.ts&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="3cb33c66e798683bba0aa43e42df78485ac28c18" translate="yes" xml:space="preserve">
          <source>Currently, you have a list in the component template. To click on a hero on the list and reveal details about that hero, you need a section for the details to render in the template. Add the following to &lt;code&gt;heroes.component.html&lt;/code&gt; beneath the list section:</source>
          <target state="translated">현재 구성 요소 템플릿에 목록이 있습니다. 목록에서 영웅을 클릭하고 해당 영웅에 대한 세부 사항을 표시하려면 템플리트에서 세부 사항을 렌더링하기위한 섹션이 필요합니다. 목록 섹션 아래에서 &lt;code&gt;heroes.component.html&lt;/code&gt; 에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="41f1412a582cbfadb73e1c521109c4acf06ec3fa" translate="yes" xml:space="preserve">
          <source>Currently, your application supports two routes. However, the only way to use those routes is for the user to manually type the path in the browser's address bar. In this section, you'll add two links that users can click to navigate between the &lt;code&gt;heroes-list&lt;/code&gt; and &lt;code&gt;crisis-list&lt;/code&gt; components. You'll also add some CSS styles. While these styles are not required, they make it easier to identify the link for the currently-displayed component. You'll add that functionality in the next section.</source>
          <target state="translated">현재 애플리케이션은 두 가지 경로를 지원합니다. 그러나 이러한 경로를 사용하는 유일한 방법은 사용자가 브라우저의 주소 표시 줄에 경로를 수동으로 입력하는 것입니다. 이 섹션에서는 사용자가 &lt;code&gt;heroes-list&lt;/code&gt; 및 &lt;code&gt;crisis-list&lt;/code&gt; 구성 요소 사이를 탐색하기 위해 클릭 할 수있는 두 개의 링크를 추가 합니다. CSS 스타일도 추가합니다. 이러한 스타일은 필수는 아니지만 현재 표시된 구성 요소에 대한 링크를 쉽게 식별 할 수 있습니다. 다음 섹션에서 해당 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="98e58e551f42abbc9350cbd4eeb67b3b8e230a9e" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; like directives</source>
          <target state="translated">사용자 지정 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; like 지시문</target>
        </trans-unit>
        <trans-unit id="43ad3f3ccecb1834e96f03ea6336377a42fc2d0f" translate="yes" xml:space="preserve">
          <source>Custom CSS classes that provide visual feedback to users about invalid controls.</source>
          <target state="translated">잘못된 컨트롤에 대한 시각적 피드백을 사용자에게 제공하는 사용자 정의 CSS 클래스</target>
        </trans-unit>
        <trans-unit id="a27b89680d5547c404b628f384b487362b72e24f" translate="yes" xml:space="preserve">
          <source>Custom Element Support</source>
          <target state="translated">커스텀 엘리먼트 지원</target>
        </trans-unit>
        <trans-unit id="6c2d7934134bd64cca0c496d6f273c06c5f9cf2d" translate="yes" xml:space="preserve">
          <source>Custom Preloading Strategy</source>
          <target state="translated">맞춤 사전로드 전략</target>
        </trans-unit>
        <trans-unit id="4925e78411919d28a64fbef614750df564eeeb31" translate="yes" xml:space="preserve">
          <source>Custom async validators are similar to sync validators, but they must instead return a Promise or Observable that later emits null or a validation error object. In the case of an Observable, the Observable must complete, at which point the form uses the last value emitted for validation.</source>
          <target state="translated">사용자 지정 비동기 유효성 검사기는 동기화 유효성 검사기와 유사하지만 대신 null 또는 유효성 검사 오류 개체를 생성하는 약속 또는 관찰 가능 개체를 대신 반환해야합니다. Observable의 경우 Observable이 완료되어야하며, 이때 양식은 유효성 검사를 위해 마지막으로 방출 된 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fb9f2204c54a5c01241d51e60fbefbfd4c78833f" translate="yes" xml:space="preserve">
          <source>Custom async validators are similar to sync validators, but they must instead return a Promise or observable that later emits null or a validation error object. In the case of an observable, the observable must complete, at which point the form uses the last value emitted for validation.</source>
          <target state="translated">사용자 지정 비동기 유효성 검사기는 동기화 유효성 검사기와 유사하지만 나중에 null 또는 유효성 검사 오류 개체를 내보내는 Promise 또는 Observable을 대신 반환해야합니다. Observable의 경우 Observable이 완료되어야하며, 이때 양식은 유효성 검사를 위해 내 보낸 마지막 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a07d2ad69feb471ec3e608dbbb3bbdef03faf935" translate="yes" xml:space="preserve">
          <source>Custom elements bootstrap themselves - they start automatically when they are added to the DOM, and are automatically destroyed when removed from the DOM. Once a custom element is added to the DOM for any page, it looks and behaves like any other HTML element, and does not require any special knowledge of Angular terms or usage conventions.</source>
          <target state="translated">사용자 정의 요소 부트 스트랩 자체-DOM에 추가되면 자동으로 시작되고 DOM에서 제거되면 자동으로 삭제됩니다. 사용자 정의 요소가 페이지의 DOM에 추가되면 다른 HTML 요소처럼 보이고 작동하며 Angular 용어 또는 사용 규칙에 대한 특별한 지식이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="36127018e280d4e568b6b50f5066539d9a8cb054" translate="yes" xml:space="preserve">
          <source>Custom elements created with Angular extend &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; (which in turn extends &lt;code&gt;HTMLElement&lt;/code&gt;). Additionally, these custom elements will have a property for each input of the corresponding component. For example, our &lt;code&gt;popup-element&lt;/code&gt; will have a &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; property of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Angular extend &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; 로 작성된 사용자 정의 요소 ( &lt;code&gt;HTMLElement&lt;/code&gt; 확장 ) 또한 이러한 사용자 지정 요소에는 해당 구성 요소의 각 입력에 대한 속성이 있습니다. 예를 들어, &lt;code&gt;popup-element&lt;/code&gt; 는 &lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; 속성을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="d731c542d3e2484e1c04d151d752fb64a9c50cad" translate="yes" xml:space="preserve">
          <source>Custom elements created with Angular extend &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; (which in turn extends &lt;code&gt;HTMLElement&lt;/code&gt;). Additionally, these custom elements will have a property for each input of the corresponding component. For example, our &lt;code&gt;popup-element&lt;/code&gt; will have a &lt;code&gt;message&lt;/code&gt; property of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Angular로 만든 사용자 정의 요소는 &lt;code&gt;&lt;a href=&quot;../api/elements/ngelement&quot;&gt;NgElement&lt;/a&gt;&lt;/code&gt; 를 확장 합니다 (이는 &lt;code&gt;HTMLElement&lt;/code&gt; 를 확장 함 ). 또한 이러한 사용자 지정 요소에는 해당 구성 요소의 각 입력에 대한 속성이 있습니다. 예를 들어 &lt;code&gt;popup-element&lt;/code&gt; 에는 &lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;message&lt;/code&gt; 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e25196231f2ca6d3a38c2024a26e038af8d47e9" translate="yes" xml:space="preserve">
          <source>Custom events with &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 를 사용한 사용자 정의 이벤트</target>
        </trans-unit>
        <trans-unit id="33ad348dcac39a32a6a5638a3873a439c5f5bb48" translate="yes" xml:space="preserve">
          <source>Custom format options</source>
          <target state="translated">맞춤 형식 옵션</target>
        </trans-unit>
        <trans-unit id="a99e79089d5ca26db3d9e79c453e6fccb307304f" translate="yes" xml:space="preserve">
          <source>Custom label and tooltip</source>
          <target state="translated">맞춤 라벨 및 툴팁</target>
        </trans-unit>
        <trans-unit id="8841c28e5e05a4f2d9a63656ff35a449a9e517b3" translate="yes" xml:space="preserve">
          <source>Custom pipes</source>
          <target state="translated">맞춤형 파이프</target>
        </trans-unit>
        <trans-unit id="9753d61a00b71a9de4d313849d6f03fec44dcfc6" translate="yes" xml:space="preserve">
          <source>Custom request expectations</source>
          <target state="translated">맞춤 요청 기대</target>
        </trans-unit>
        <trans-unit id="1e9a26c0379f888d5dd3bc76c8b05fdca69be77a" translate="yes" xml:space="preserve">
          <source>Custom validators</source>
          <target state="translated">맞춤 검사기</target>
        </trans-unit>
        <trans-unit id="2dbb45e0847c56bb6165a138a2a34e6ae7548974" translate="yes" xml:space="preserve">
          <source>Customized injector/content</source>
          <target state="translated">맞춤형 인젝터 / 콘텐츠</target>
        </trans-unit>
        <trans-unit id="5e7558cff59aa1d2fb0e734c8c70a3466ecc817b" translate="yes" xml:space="preserve">
          <source>Customized ngModuleFactory</source>
          <target state="translated">맞춤형 ngModuleFactory</target>
        </trans-unit>
        <trans-unit id="c52729454cd00750a4b461768779981a441da771" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;BUILD.bazel&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;BUILD.bazel&lt;/code&gt; 파일 사용자 화</target>
        </trans-unit>
        <trans-unit id="9d237b6d6ebfb9c121d73b028643a81c53f9434c" translate="yes" xml:space="preserve">
          <source>Customizing option selection</source>
          <target state="translated">옵션 선택 사용자 정의</target>
        </trans-unit>
        <trans-unit id="094978cd66bc5d8725b9fdce0785fb623f56940d" translate="yes" xml:space="preserve">
          <source>Cut the HTML for the hero detail from the bottom of the &lt;code&gt;HeroesComponent&lt;/code&gt; template and paste it over the generated boilerplate in the &lt;code&gt;HeroDetailComponent&lt;/code&gt; template.</source>
          <target state="translated">의 바닥에서 영웅의 세부 사항에 대한 HTML을 잘라 &lt;code&gt;HeroesComponent&lt;/code&gt; 의 템플릿과에서 생성 된 상용구를 통해 붙여 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 의 템플릿입니다.</target>
        </trans-unit>
        <trans-unit id="a7e6e4829fbd69a876c1288d354d1c365c2c8721" translate="yes" xml:space="preserve">
          <source>DEFAULT_CURRENCY_CODE</source>
          <target state="translated">DEFAULT_CURRENCY_CODE</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="f10de7b822efc6f19f529f58479795f52f902679" translate="yes" xml:space="preserve">
          <source>DI is wired into the Angular framework and used everywhere to provide new components with the services or other things they need. Components consume services; that is, you can &lt;em&gt;inject&lt;/em&gt; a service into a component, giving the component access to that service class.</source>
          <target state="translated">DI는 Angular 프레임 워크에 연결되어 있으며, 새로운 컴포넌트에 필요한 서비스 나 다른 것들을 제공하는 데 사용됩니다. 컴포넌트는 서비스를 소비합니다. 즉, 서비스에 컴포넌트를 &lt;em&gt;삽입&lt;/em&gt; 하여 해당 컴포넌트에 해당 서비스 클래스에 대한 액세스 권한을 부여 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74759e7095bb98c889444c3ae3740b1870451363" translate="yes" xml:space="preserve">
          <source>DI token</source>
          <target state="translated">DI 토큰</target>
        </trans-unit>
        <trans-unit id="2b2f0524fe19d0b4fd5fd7ef57f39d3449c9cf53" translate="yes" xml:space="preserve">
          <source>DI token for providing &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS&lt;/a&gt; support to Angular.</source>
          <target state="translated">Angular에 &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS&lt;/a&gt; 지원을 제공하기위한 DI 토큰 .</target>
        </trans-unit>
        <trans-unit id="9c1f4bd61f4ce75caa0fc715524cef0eda7ccea7" translate="yes" xml:space="preserve">
          <source>DI token for providing &lt;a href=&quot;https://hammerjs.github.io/&quot;&gt;HammerJS&lt;/a&gt; support to Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a812d80dec5127459b8bbbfdf1e22f80bb56765" translate="yes" xml:space="preserve">
          <source>DOCUMENT</source>
          <target state="translated">DOCUMENT</target>
        </trans-unit>
        <trans-unit id="4c661b3d55aaff2669ab1690c0ebd291bc96643a" translate="yes" xml:space="preserve">
          <source>DOM element for which to get the directives.</source>
          <target state="translated">지시문을 가져올 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="27b15815f1de042cdac283f7f1e3bf89dd75ee62" translate="yes" xml:space="preserve">
          <source>DOM element from which the component should be retrieved.</source>
          <target state="translated">컴포넌트를 검색해야하는 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="f5bfe5db2d1d4c59c574ad19d81e70dbd74fd291" translate="yes" xml:space="preserve">
          <source>DOM element, component or directive instance for which to retrieve the injector.</source>
          <target state="translated">인젝터를 검색 할 DOM 요소, 구성 요소 또는 지시어 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="64071ef39b981e4fe17ca65655f6099c4c223326" translate="yes" xml:space="preserve">
          <source>DOM element, component or directive instance for which to retrieve the root components.</source>
          <target state="translated">루트 구성 요소를 검색 할 DOM 요소, 구성 요소 또는 지시문 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="61c3feb8fa129e3517d7f4e33e0f321b871c65ad" translate="yes" xml:space="preserve">
          <source>DOM events carry a payload of information that may be useful to the component. This section shows how to bind to the &lt;code&gt;keyup&lt;/code&gt; event of an input box to get the user's input after each keystroke.</source>
          <target state="translated">DOM 이벤트에는 구성 요소에 유용한 정보가 포함되어 있습니다. 이 섹션에서는 각 키 입력 후 사용자의 입력을 얻기 위해 입력 상자 의 &lt;code&gt;keyup&lt;/code&gt; 이벤트에 바인딩하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="1e16684c1ce279006d9578074b0720bf46a86d49" translate="yes" xml:space="preserve">
          <source>Data Services</source>
          <target state="translated">데이터 서비스</target>
        </trans-unit>
        <trans-unit id="d8c7495fb4f75bec8a9dc62511d677ae31c74cad" translate="yes" xml:space="preserve">
          <source>Data Value</source>
          <target state="translated">데이터 가치</target>
        </trans-unit>
        <trans-unit id="d38cca5da9c7df446a12182ab09218cd420e4017" translate="yes" xml:space="preserve">
          <source>Data binding</source>
          <target state="translated">데이터 바인딩</target>
        </trans-unit>
        <trans-unit id="1897722a3a069b2a0505b9bdd9dd28837d6d1b7b" translate="yes" xml:space="preserve">
          <source>Data binding plays an important role in communication between a template and its component, and is also important for communication between parent and child components.</source>
          <target state="translated">데이터 바인딩은 템플릿과 해당 구성 요소 간의 통신에서 중요한 역할을하며 부모 및 자식 구성 요소 간의 통신에도 중요합니다.</target>
        </trans-unit>
        <trans-unit id="80cba10ee7651acd77417bf01e46c8d27f5d70e7" translate="yes" xml:space="preserve">
          <source>Data bound properties must also be public.</source>
          <target state="translated">데이터 바인딩 된 속성도 공개되어야합니다.</target>
        </trans-unit>
        <trans-unit id="751873768a508a89953ce185eccc8e38d8483976" translate="yes" xml:space="preserve">
          <source>Data flow in forms</source>
          <target state="translated">양식의 데이터 흐름</target>
        </trans-unit>
        <trans-unit id="4fc3d60f53202cd02a2955630e8818fd52876d30" translate="yes" xml:space="preserve">
          <source>Data flow in reactive forms</source>
          <target state="translated">반응 형 데이터 흐름</target>
        </trans-unit>
        <trans-unit id="d39f2164fca1d60e85028e0ffd46bbe82f0bc11c" translate="yes" xml:space="preserve">
          <source>Data flow in template-driven forms</source>
          <target state="translated">템플릿 기반 양식의 데이터 흐름</target>
        </trans-unit>
        <trans-unit id="2e1b89e8881cafb6b085aada57b60616b9ac3406" translate="yes" xml:space="preserve">
          <source>Data for a transition from one animation state to another. See &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">한 애니메이션 상태에서 다른 애니메이션 상태로 전환하기위한 데이터입니다. &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; () 참조</target>
        </trans-unit>
        <trans-unit id="9393a235ba23b990b99ee169026ad57440db380f" translate="yes" xml:space="preserve">
          <source>Data gathered in this way can be viewed on the Google Analytics site, but is not automatically visible on your own organization's Analytics site. As an administrator for an Angular development group, you can configure your instance of Angular CLI to be able to see analytics data for your own team's usage of the Angular CLI. This configuration option is separate from and in addition to other usage analytics that your users may be sharing with Google.</source>
          <target state="translated">이러한 방식으로 수집 된 데이터는 Google 웹 로그 분석 사이트에서 볼 수 있지만 조직의 웹 로그 분석 사이트에서는 자동으로 표시되지 않습니다. Angular 개발 그룹의 관리자는 자신의 팀이 Angular CLI를 사용하는 데 대한 분석 데이터를 볼 수 있도록 Angular CLI 인스턴스를 구성 할 수 있습니다. 이 구성 옵션은 사용자가 Google과 공유 할 수있는 다른 사용 분석과 별도로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e9ccce7c84ff910c0458db8a1eb20d2bf55321dc" translate="yes" xml:space="preserve">
          <source>Data groups follow this Typescript interface:</source>
          <target state="translated">데이터 그룹은이 Typescript 인터페이스를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="7c825ea984ebfeb20bfb18c3c089c4b5d7fc910e" translate="yes" xml:space="preserve">
          <source>Data model</source>
          <target state="translated">데이터 모델</target>
        </trans-unit>
        <trans-unit id="e55db42edf09b3bc94ad8e03463d13a646465d6a" translate="yes" xml:space="preserve">
          <source>Data returned from servers often takes the form of a stream. Streams are useful because they make it easy to transform the data that is returned, and to make modifications to the way data is requested. The Angular HTTP client (&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;) is a built-in way to fetch data from external APIs and provide them to your application as a stream.</source>
          <target state="translated">서버에서 반환 된 데이터는 종종 스트림 형식을 취합니다. 스트림은 반환 된 데이터를 쉽게 변환하고 데이터 요청 방식을 수정하기 때문에 유용합니다. Angular HTTP 클라이언트 ( &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; )는 외부 API에서 데이터를 가져 와서 애플리케이션으로 스트림으로 제공하는 기본 제공 방법입니다.</target>
        </trans-unit>
        <trans-unit id="ac351ed3feb203e6748574b5a4117ca069a6c697" translate="yes" xml:space="preserve">
          <source>Data services that make HTTP calls to remote servers typically inject and delegate to the Angular &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; service for XHR calls.</source>
          <target state="translated">원격 서버에 대한 HTTP 호출을 수행하는 데이터 서비스는 일반적으로 XHR 호출을 위해 Angular &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HttpClient&lt;/code&gt; &lt;/a&gt; 서비스를 주입하고 위임 합니다.</target>
        </trans-unit>
        <trans-unit id="e09683543199a512ce5b35c096ebcad1cf9eede7" translate="yes" xml:space="preserve">
          <source>Data services, such as &lt;code&gt;PackageSearchService&lt;/code&gt;, are unaware that some of their &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; requests actually return cached responses.</source>
          <target state="translated">&lt;code&gt;PackageSearchService&lt;/code&gt; 와 같은 데이터 서비스 는 일부 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 요청이 실제로 캐시 된 응답을 반환 한다는 것을 인식하지 못합니다 .</target>
        </trans-unit>
        <trans-unit id="b830720955a4965a704188d3b5459c245e7001e7" translate="yes" xml:space="preserve">
          <source>Data-binding and HTML</source>
          <target state="translated">데이터 바인딩 및 HTML</target>
        </trans-unit>
        <trans-unit id="4beeca7e037b29ba76543e1366bfac09d0df5875" translate="yes" xml:space="preserve">
          <source>Data-binding is a mechanism for coordinating what users see, specifically with application data values. While you could push values to and pull values from HTML, the application is easier to write, read, and maintain if you turn these tasks over to a binding framework. You simply declare bindings between binding sources, target HTML elements, and let the framework do the rest.</source>
          <target state="translated">데이터 바인딩은 사용자가 보는 내용, 특히 응용 프로그램 데이터 값을 조정하는 메커니즘입니다. HTML로 값을 푸시하거나 HTML에서 값을 가져올 수 있지만 이러한 작업을 바인딩 프레임 워크로 넘기면 응용 프로그램을보다 쉽게 ​​쓰고 읽고 유지 관리 할 수 ​​있습니다. 바인딩 소스간에 바인딩을 선언하고 HTML 요소를 대상으로하며 프레임 워크에서 나머지를 수행하게합니다.</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="433a96bef0650364ce46802839a116fc7b8931f3" translate="yes" xml:space="preserve">
          <source>DatePipe</source>
          <target state="translated">DatePipe</target>
        </trans-unit>
        <trans-unit id="f5dbae0bbee5f646b166a48092a587cbe25ba8d8" translate="yes" xml:space="preserve">
          <source>Day of month</source>
          <target state="translated">달의 날</target>
        </trans-unit>
        <trans-unit id="1a99c8bddb4b164e11b358bfc48c1fb30dc65858" translate="yes" xml:space="preserve">
          <source>Dead code elimination: removes unreferenced modules and much unused code.</source>
          <target state="translated">데드 코드 제거 : 참조되지 않은 모듈과 많이 사용되지 않는 코드를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5cc8e10702fbb1809836dbd83c85b35804f3cf01" translate="yes" xml:space="preserve">
          <source>Debounce (so as not to send off API requests for every keystroke, but instead wait for a break in keystrokes).</source>
          <target state="translated">디 바운스 (모든 키 스트로크에 대한 API 요청을 보내지 말고 키 스트로크가 중단 될 때까지 기다리십시오).</target>
        </trans-unit>
        <trans-unit id="68b920be9b7ebb5d211f0821d92f09df03b3b7c0" translate="yes" xml:space="preserve">
          <source>Debouncing requests</source>
          <target state="translated">요청 거부</target>
        </trans-unit>
        <trans-unit id="2867cf87b59dd752e50e1c3c1104db84a9b3a42a" translate="yes" xml:space="preserve">
          <source>Debug log</source>
          <target state="translated">디버그 로그</target>
        </trans-unit>
        <trans-unit id="4ae2cd74b027750bd99aa71b58bab54f52e8dea3" translate="yes" xml:space="preserve">
          <source>Debug specs in the browser in the same way that you debug an application.</source>
          <target state="translated">애플리케이션을 디버깅하는 것과 동일한 방식으로 브라우저에서 스펙을 디버그하십시오.</target>
        </trans-unit>
        <trans-unit id="d5e78f156c09dbbcd57c99c2364d5456c6ebebd2" translate="yes" xml:space="preserve">
          <source>DebugElement</source>
          <target state="translated">DebugElement</target>
        </trans-unit>
        <trans-unit id="7403074afccc06c065bd5e33470da88622229db8" translate="yes" xml:space="preserve">
          <source>DebugEventListener</source>
          <target state="translated">DebugEventListener</target>
        </trans-unit>
        <trans-unit id="c5e0558a3ae0736dbe4d5bbe74289a0f4ac5fbf1" translate="yes" xml:space="preserve">
          <source>DebugNode</source>
          <target state="translated">DebugNode</target>
        </trans-unit>
        <trans-unit id="359646351172857a2209695ce7e529c3651364e7" translate="yes" xml:space="preserve">
          <source>Debugging tests</source>
          <target state="translated">디버깅 테스트</target>
        </trans-unit>
        <trans-unit id="4ae9636032d66cefae467fbfc1dcd56b64c42991" translate="yes" xml:space="preserve">
          <source>Debugging the Angular service worker</source>
          <target state="translated">Angular 서비스 워커 디버깅</target>
        </trans-unit>
        <trans-unit id="e8c443d52e0e5c0eb2f0949b6c00eaeca1e247a0" translate="yes" xml:space="preserve">
          <source>Debugging with the json pipe</source>
          <target state="translated">JSON 파이프로 디버깅</target>
        </trans-unit>
        <trans-unit id="02fd268bb2258c45a6fdc997692ba9c703b38276" translate="yes" xml:space="preserve">
          <source>Dec 24, 2020</source>
          <target state="translated">2020 년 12 월 24 일</target>
        </trans-unit>
        <trans-unit id="081d99514f47a3097a606f4fb03a8b60bd642e75" translate="yes" xml:space="preserve">
          <source>Dec 24, 2021</source>
          <target state="translated">2021 년 12 월 24 일</target>
        </trans-unit>
        <trans-unit id="c6226af647a580483e6f4753ea5100ed11e11ba5" translate="yes" xml:space="preserve">
          <source>Decimal representation options, specified by a string in the following format: &lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt; 형식의 문자열로 지정된 10 진수 표시 옵션 입니다.</target>
        </trans-unit>
        <trans-unit id="3a388f7beea5533c9477db7c66a25bb88f3fef66" translate="yes" xml:space="preserve">
          <source>Decimal separator for currency values (fallback to &lt;code&gt;Decimal&lt;/code&gt;). Example: $2,345.67</source>
          <target state="translated">통화 값의 10 진수 구분 기호 ( &lt;code&gt;Decimal&lt;/code&gt; 대체 ) 예 : $ 2,345.67</target>
        </trans-unit>
        <trans-unit id="aaf046d343b16ae8e5b81bcc1a797af0de42c117" translate="yes" xml:space="preserve">
          <source>Decimal separator. For &lt;code&gt;en-US&lt;/code&gt;, the dot character. Example : 2,345&lt;code&gt;.&lt;/code&gt;67</source>
          <target state="translated">소수 구분 기호. 들어 &lt;code&gt;en-US&lt;/code&gt; 도트 문자. 예 : 2,345 &lt;code&gt;.&lt;/code&gt; 67</target>
        </trans-unit>
        <trans-unit id="d96b842fbc4d2f97ccd04c22c633dff737fb5c69" translate="yes" xml:space="preserve">
          <source>DecimalPipe</source>
          <target state="translated">DecimalPipe</target>
        </trans-unit>
        <trans-unit id="48dd231e7a1f5127a27a08c66ee2e654ce7ff23e" translate="yes" xml:space="preserve">
          <source>Declarables are the class types&amp;mdash;components, directives, and pipes&amp;mdash;that you can add to a module's &lt;code&gt;declarations&lt;/code&gt; list. They're the only classes that you can add to &lt;code&gt;declarations&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; 은 모듈의 선언 목록에 추가 할 수있는 클래스 유형 (구성 요소, 지시문 및 파이프) 입니다. &lt;code&gt;declarations&lt;/code&gt; 추가 할 수있는 유일한 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="30528912ac642bcf1a44cd8aeaff1cb07299ae4c" translate="yes" xml:space="preserve">
          <source>Declarables must belong to exactly one module. The compiler emits an error if you try to declare the same class in more than one module. Be careful not to declare a class that is imported from another module.</source>
          <target state="translated">선언은 정확히 하나의 모듈에 속해야합니다. 둘 이상의 모듈에서 동일한 클래스를 선언하려고하면 컴파일러에서 오류가 발생합니다. 다른 모듈에서 가져온 클래스를 선언하지 않도록주의하십시오.</target>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="d30797025f2d97627b1af8c3ba19e48a02a93ed9" translate="yes" xml:space="preserve">
          <source>Declarations are private by default. If this ModuleA does not export UserComponent, then only the components within this ModuleA can use UserComponent.</source>
          <target state="translated">선언은 기본적으로 비공개입니다. 이 ModuleA가 UserComponent를 내 보내지 않으면이 ModuleA 내의 컴포넌트 만 UserComponent를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2de8e7132c9f5917203ec203eeb390d1650341ac" translate="yes" xml:space="preserve">
          <source>Declarations are private by default. If this module does &lt;em&gt;not&lt;/em&gt; export &lt;code&gt;UserComponent&lt;/code&gt;, then only the components within &lt;em&gt;this&lt;/em&gt; module can use &lt;code&gt;UserComponent&lt;/code&gt;.</source>
          <target state="translated">선언은 기본적으로 비공개입니다. 이 모듈 않으면 &lt;em&gt;되지&lt;/em&gt; 수출 &lt;code&gt;UserComponent&lt;/code&gt; 를 다음에서 구성 요소 만 &lt;em&gt;이&lt;/em&gt; 모듈은 사용할 수 &lt;code&gt;UserComponent&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="fe55ec59a266c375da0d2bfd529cfee6e622c263" translate="yes" xml:space="preserve">
          <source>Declarations such as components and pipes should be designed as stateless, meaning they don&amp;rsquo;t rely on or alter external variables. If you do rely on state, you need to evaluate every case and decide whether it is application state or state that the library would manage.</source>
          <target state="translated">구성 요소 및 파이프와 같은 선언은 상태 비 저장으로 설계되어야합니다. 즉, 외부 변수에 의존하거나 변경하지 않습니다. 상태에 의존하는 경우 모든 사례를 평가하고 해당 사례가 애플리케이션 상태인지 또는 라이브러리가 관리 할 상태인지 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a4e5bd1339a5cba236acf14265d289ce17e13f23" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 선언</target>
        </trans-unit>
        <trans-unit id="fa7eb4a7dc74680cebe692d0ed2c9e3f7cf0769a" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;root&lt;/code&gt; for the value of the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 속성 의 값에 대한 &lt;code&gt;root&lt;/code&gt; 를 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="97d6bcb1a03694a1ed4b9cc698d896ce00118be8" translate="yes" xml:space="preserve">
          <source>Declare as one of the following:</source>
          <target state="translated">다음 중 하나로 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="a5c81d026ef2e0ad8115bf5f7d46127baa96d7fb" translate="yes" xml:space="preserve">
          <source>Declare it in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="translated">에 선언 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;declarations&lt;/code&gt; 배열입니다.</target>
        </trans-unit>
        <trans-unit id="3bfe1825457a6a1a0de9928c3c875aefd5a89af6" translate="yes" xml:space="preserve">
          <source>Declare the &lt;code&gt;itemImageUrl&lt;/code&gt; property in the class, in this case &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">클래스에서 &lt;code&gt;itemImageUrl&lt;/code&gt; 속성을 선언합니다 ( 이 경우 &lt;code&gt;AppComponent&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="baedeef851b5b2af0cf49fe7fffcbfdb94d4df9d" translate="yes" xml:space="preserve">
          <source>Declare the target of &lt;code&gt;childItem&lt;/code&gt; in its component class, in this case &lt;code&gt;ItemDetailComponent&lt;/code&gt;.</source>
          <target state="translated">대상 선언 &lt;code&gt;childItem&lt;/code&gt; 이 경우에, 그 구성 요소 클래스에 &lt;code&gt;ItemDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85d7e2e25229337e3d1969d606f65c86088c3193" translate="yes" xml:space="preserve">
          <source>Declare these classes in &lt;em&gt;exactly one&lt;/em&gt; module of the application. Declare them in a module if they belong to that particular module.</source>
          <target state="translated">이 클래스를 응용 프로그램의 &lt;em&gt;정확히 하나의&lt;/em&gt; 모듈에 선언 하십시오. 특정 모듈에 속하는 모듈에서 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="0a6ecca2653ab90510b34d3ba1a1d6dfe3d2a6ee" translate="yes" xml:space="preserve">
          <source>Declared in Constructor</source>
          <target state="translated">생성자에서 선언</target>
        </trans-unit>
        <trans-unit id="bc46a3015b9cb9363d1317014191d8bcb727bff2" translate="yes" xml:space="preserve">
          <source>Declares a constructor parameter and its type.</source>
          <target state="translated">생성자 매개 변수 및 유형을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="4fab86145971544f26ac5cda662e1c1aca216c73" translate="yes" xml:space="preserve">
          <source>Declares a key/value object containing CSS properties/styles that can then be used for an animation &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, within an animation &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt;, or as styling data for calls to &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">CSS 속성 / 스타일을 포함하는 키 / 값 객체를 선언 한 다음 애니메이션 &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , 애니메이션 &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt; 내 에서 또는 &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 호출을위한 스타일링 데이터로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a07b09ad4e1128559c64bbf7737f414f58aa2c2" translate="yes" xml:space="preserve">
          <source>Declares a key/value object containing CSS properties/styles that can then be used for an animation &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, within an animation &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt;, or as styling data for calls to &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">CSS 속성 / 스타일을 포함하는 키 / 값 객체를 선언 한 다음 애니메이션 &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , 애니메이션 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt; 내 에서 또는 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 호출을위한 스타일링 데이터로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fc2cadbfe8ba889b264343b494f4074bf47bd77" translate="yes" xml:space="preserve">
          <source>Declares a public property of the same name.</source>
          <target state="translated">같은 이름의 공용 속성을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="d5516185e9663e1f80423a2f986cf3db80b7e8e6" translate="yes" xml:space="preserve">
          <source>Declares an animation state within a trigger attached to an element.</source>
          <target state="translated">요소에 연결된 트리거 내에서 애니메이션 상태를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="7184d12b506f1288482c49e1a4d72845528ce457" translate="yes" xml:space="preserve">
          <source>Declares an animation transition as a sequence of animation steps to run when a given condition is satisfied. The condition is a Boolean expression or function that compares the previous and current animation states, and returns true if this transition should occur. When the state criteria of a defined transition are met, the associated animation is triggered.</source>
          <target state="translated">주어진 조건이 충족 될 때 실행할 애니메이션 단계 시퀀스로 애니메이션 전환을 선언합니다. 조건은 이전 및 현재 애니메이션 상태를 비교하고이 전환이 발생하면 true를 반환하는 부울 식 또는 함수입니다. 정의 된 전환의 상태 기준이 충족되면 관련 애니메이션이 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="0e3330a9e192dfa745e59494e0a69489aadac700" translate="yes" xml:space="preserve">
          <source>Declares an input property that you can update via property binding (example: &lt;code&gt;&amp;lt;my-cmp [myProperty]=&quot;someExpression&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">속성 바인딩을 통해 업데이트 할 수있는 입력 속성을 선언합니다 (예 : &lt;code&gt;&amp;lt;my-cmp [myProperty]=&quot;someExpression&quot;&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e17bfc2e25cdc8965acfa692aced372c29604fd" translate="yes" xml:space="preserve">
          <source>Declares an output property that fires events that you can subscribe to with an event binding (example: &lt;code&gt;&amp;lt;my-cmp (myEvent)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">이벤트 바인딩으로 구독 할 수있는 이벤트를 발생시키는 출력 특성을 선언합니다 (예 : &lt;code&gt;&amp;lt;my-cmp (myEvent)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef2b4e0567c46eae59ac8cb8e249a4a90843a03f" translate="yes" xml:space="preserve">
          <source>Declares that a class can be provided and injected by other classes. Without this decorator, the compiler won't generate enough metadata to allow the class to be created properly when it's injected somewhere.</source>
          <target state="translated">다른 클래스에서 클래스를 제공하고 주입 할 수 있음을 선언합니다. 이 데코레이터가 없으면 컴파일러는 어딘가에 주입 될 때 클래스를 올바르게 작성할 수 있도록 충분한 메타 데이터를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="58da8aac234219772bbd32f21aa968dfec3d10e8" translate="yes" xml:space="preserve">
          <source>Declares that a class is a component and provides metadata about the component.</source>
          <target state="translated">클래스가 컴포넌트임을 선언하고 컴포넌트에 대한 메타 데이터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3e996a4210d7d9c25820ba56979e37b06bc36c6b" translate="yes" xml:space="preserve">
          <source>Declares that a class is a directive and provides metadata about the directive.</source>
          <target state="translated">클래스가 지시문임을 선언하고 지시문에 대한 메타 데이터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2f856a0e464d7245018d5f267844e98ded5035c2" translate="yes" xml:space="preserve">
          <source>Declares that a class is a pipe and provides metadata about the pipe.</source>
          <target state="translated">클래스가 파이프임을 선언하고 파이프에 대한 메타 데이터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="124350f26ea93c4bafefb256bde5e5aff1ca579d" translate="yes" xml:space="preserve">
          <source>Declares which components, directives, and pipes belong to the module.</source>
          <target state="translated">모듈에 속하는 구성 요소, 지시문 및 파이프를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="710658a9ab87b415b2ff5cfce106cc0c87d2078a" translate="yes" xml:space="preserve">
          <source>Declaring a component's styles</source>
          <target state="translated">구성 요소의 스타일 선언</target>
        </trans-unit>
        <trans-unit id="ac650fccd8ead68e2d8c45cd5891eb0840e3f4a2" translate="yes" xml:space="preserve">
          <source>Declaring directives</source>
          <target state="translated">지시문 선언</target>
        </trans-unit>
        <trans-unit id="2bc45504ae00fbf29fe8388adb2891f26d16a064" translate="yes" xml:space="preserve">
          <source>Decodes an encoded URL parameter or query-string key.</source>
          <target state="translated">인코딩 된 URL 매개 변수 또는 쿼리 문자열 키를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="8aee91813b451b3778fab17f3e6d531cd57b5197" translate="yes" xml:space="preserve">
          <source>Decodes an encoded URL parameter or query-string value.</source>
          <target state="translated">인코딩 된 URL 매개 변수 또는 쿼리 문자열 값을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="2038623fc71103952b2ba258516c5f3d7840ecde" translate="yes" xml:space="preserve">
          <source>Decodes the hash from the provided string</source>
          <target state="translated">제공된 문자열에서 해시를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="7a932704d6c6ef1ef267af7766d9f2e2ad68535b" translate="yes" xml:space="preserve">
          <source>Decodes the path from the provided string</source>
          <target state="translated">제공된 문자열에서 경로를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="dd7d5e9ea24bd4ef7c1fe30602bb817b06e46326" translate="yes" xml:space="preserve">
          <source>Decodes the search objects from the provided string</source>
          <target state="translated">제공된 문자열에서 검색 개체를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="062e159b6481b23409f9d9fb73b36ad762dc5f1f" translate="yes" xml:space="preserve">
          <source>Decorate &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; properties</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 및 &lt;code&gt;output&lt;/code&gt; 속성 장식</target>
        </trans-unit>
        <trans-unit id="efae1157004840ce53744bf4910848b2a54d6036" translate="yes" xml:space="preserve">
          <source>Decorated and data-bound class members must be public.</source>
          <target state="translated">꾸며진 데이터 바인딩 클래스 멤버는 공개되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8d20855dde10821727be4973f1a1b332029694d1" translate="yes" xml:space="preserve">
          <source>Decorated component class members must be public. You cannot make an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property private or protected.</source>
          <target state="translated">장식 된 컴포넌트 클래스 멤버는 공개되어야합니다. &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 속성을 private 또는 protected로 만들 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="75585dc43ebb9a44de9edabbf4fcb972f67e5b5a" translate="yes" xml:space="preserve">
          <source>Decorator that declares a DOM event to listen for, and provides a handler method to run when that event occurs.</source>
          <target state="translated">수신 할 DOM 이벤트를 선언하고 해당 이벤트가 발생할 때 실행할 핸들러 메소드를 제공하는 데코레이터.</target>
        </trans-unit>
        <trans-unit id="06f314686cda74dbcdc6072d3d30b7b552f3828a" translate="yes" xml:space="preserve">
          <source>Decorator that marks a DOM property as a host-binding property and supplies configuration metadata. Angular automatically checks host property bindings during change detection, and if a binding changes it updates the host element of the directive.</source>
          <target state="translated">DOM 속성을 호스트 바인딩 속성으로 표시하고 구성 메타 데이터를 제공하는 데코레이터. Angular는 변경 감지 중에 호스트 속성 바인딩을 자동으로 확인하고 바인딩이 변경되면 지시문의 호스트 요소를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="542fac39a0c25257bafa494b67a691039e7fe190" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an Angular component and provides configuration metadata that determines how the component should be processed, instantiated, and used at runtime.</source>
          <target state="translated">클래스를 Angular 구성 요소로 표시하고 런타임에 구성 요소를 처리, 인스턴스화 및 사용하는 방법을 결정하는 구성 메타 데이터를 제공하는 데코레이터.</target>
        </trans-unit>
        <trans-unit id="54fadbc3c296510749dca2013335bb14188c6861" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an Angular directive. You can define your own directives to attach custom behavior to elements in the DOM.</source>
          <target state="translated">클래스를 Angular 지시자로 표시하는 데코레이터. DOM의 요소에 사용자 정의 동작을 첨부하기위한 고유 한 지시문을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="147b75641348b8313862ccda39948337f00188dd" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an NgModule and supplies configuration metadata.</source>
          <target state="translated">클래스를 NgModule로 표시하고 구성 메타 데이터를 제공하는 데코레이터.</target>
        </trans-unit>
        <trans-unit id="2c2429c1549c508d15ecd2b546db50f3c94e5597" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as available to be provided and injected as a dependency.</source>
          <target state="translated">클래스를 제공하고 종속성으로 주입 할 수있는 것으로 표시하는 데코레이터.</target>
        </trans-unit>
        <trans-unit id="39326538b31e6f6885bca1ca78653f5efcdec9dd" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as pipe and supplies configuration metadata.</source>
          <target state="translated">클래스를 파이프로 표시하고 구성 메타 데이터를 제공하는 데코레이터.</target>
        </trans-unit>
        <trans-unit id="b2032e24d27125e464324d9b7df0505927afa011" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class field as an input property and supplies configuration metadata. The input property is bound to a DOM property in the template. During change detection, Angular automatically updates the data property with the DOM property's value.</source>
          <target state="translated">클래스 필드를 입력 속성으로 표시하고 구성 메타 데이터를 제공하는 데코레이터. 입력 속성은 템플릿의 DOM 속성에 바인딩됩니다. 변경 감지 중에 Angular는 데이터 특성을 DOM 특성 값으로 자동 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="da683e3ad3ee83805b1fd0e2479630efc8c206e2" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class field as an output property and supplies configuration metadata. The DOM property bound to the output property is automatically updated during change detection.</source>
          <target state="translated">클래스 필드를 출력 속성으로 표시하고 구성 메타 데이터를 제공하는 데코레이터. 출력 특성에 바인드 된 DOM 특성은 변경 감지 중에 자동으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="a2e23b650a15e5c693ca1445133d5ee60d9d20b4" translate="yes" xml:space="preserve">
          <source>Decorators</source>
          <target state="translated">Decorators</target>
        </trans-unit>
        <trans-unit id="da3808ca96b01e8fd16e2a06a7564a7822eb3e4b" translate="yes" xml:space="preserve">
          <source>Decorators are functions that modify JavaScript classes. Angular defines a number of decorators that attach specific kinds of metadata to classes, so that the system knows what those classes mean and how they should work.</source>
          <target state="translated">데코레이터는 JavaScript 클래스를 수정하는 함수입니다. Angular는 클래스에 특정 종류의 메타 데이터를 첨부하여 시스템이 해당 클래스의 의미와 작동 방식을 알 수 있도록 여러 데코레이터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="046771e00752578919124510d90fd88750570b5d" translate="yes" xml:space="preserve">
          <source>Decreases the number of pending request</source>
          <target state="translated">보류중인 요청 수 감소</target>
        </trans-unit>
        <trans-unit id="08b0acb88b65a7c7a047365717b6a16f6993ebf7" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration for projects in the workspace.</source>
          <target state="translated">작업 공간의 프로젝트에 대한 기본 &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; 구성.</target>
        </trans-unit>
        <trans-unit id="e30eaec489000b4a7a0ca6c7d0d4a10f2c02171f" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for projects in the workspace.</source>
          <target state="translated">작업 공간의 프로젝트에 대한 기본 &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; 구성.</target>
        </trans-unit>
        <trans-unit id="113972ed85a44c2d6f2d83e8313a8702055ff3c6" translate="yes" xml:space="preserve">
          <source>Default Architect builders and targets</source>
          <target state="translated">기본 아키텍트 빌더 및 대상</target>
        </trans-unit>
        <trans-unit id="63f359affa8c9e1087e61e45f3bfcc30f98d18a8" translate="yes" xml:space="preserve">
          <source>Default architect configuration</source>
          <target state="translated">기본 아키텍트 구성</target>
        </trans-unit>
        <trans-unit id="9aa63cef2302cefa4f2a34a236f447c362a8477f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;, but when you use the CLI command &lt;code&gt;ng new&lt;/code&gt;, it is set to &lt;code&gt;true&lt;/code&gt; by default in the generated project's configuration.</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 이지만 CLI 명령 &lt;code&gt;ng new&lt;/code&gt; 를 사용 하면 생성 된 프로젝트의 구성에서 기본적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="a242d3cf5b2a9c6afb60ed18be622df851cb377b" translate="yes" xml:space="preserve">
          <source>Default is currently false.</source>
          <target state="translated">기본값은 현재 false입니다.</target>
        </trans-unit>
        <trans-unit id="e8ac2fc6220ae2ee87143ccb049cecea94c63ada" translate="yes" xml:space="preserve">
          <source>Default size-budget type and threshholds for all or parts of your app. You can configure the builder to report a warning or an error when the output reaches or exceeds a threshold size. See &lt;a href=&quot;build#configure-size-budgets&quot;&gt;Configure size budgets&lt;/a&gt;. (Not available in &lt;code&gt;test&lt;/code&gt; section.)</source>
          <target state="translated">앱의 전체 또는 일부에 대한 기본 크기 예산 유형 및 임계 값. 출력이 임계 값 크기에 도달하거나 초과 할 때 경고 또는 오류를보고하도록 빌더를 구성 할 수 있습니다. &lt;a href=&quot;build#configure-size-budgets&quot;&gt;크기 예산 구성을&lt;/a&gt; 참조하십시오 . ( &lt;code&gt;test&lt;/code&gt; 섹션에서는 사용할 수 없습니다 .)</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="61f2d4a71bf558e84e2c3f6097b5299bb8527a31" translate="yes" xml:space="preserve">
          <source>Default: 'registerWhenStable'</source>
          <target state="translated">기본값 : 'registerWhenStable'</target>
        </trans-unit>
        <trans-unit id="703424a32071c4327b810576d1d5fb6560c3b2a1" translate="yes" xml:space="preserve">
          <source>Default: 'registerWhenStable:30000'</source>
          <target state="translated">기본값 : 'registerWhenStable : 30000'</target>
        </trans-unit>
        <trans-unit id="a1c65a6502d6516e813657ded5fa271c01c936f3" translate="yes" xml:space="preserve">
          <source>Default: true</source>
          <target state="translated">기본값 : true</target>
        </trans-unit>
        <trans-unit id="a7d92a6c0d0700d1f5d27cc93561cb698235d75e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;4200&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;4200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e534b9bc59cc35ed596e3d52a27c112d3b447fd2" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;AppServerModule&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;AppServerModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62d8ddde592aace33cdedc9f7ff5db8124377a35" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Child&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Child&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1440cac9a5ec797ecdcbb67806593db4d7747aa1" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Component&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Component&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="362a94e8934df56158b8fcf406fef69b1b8b937f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Default&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31dd447d1e197208263232a14e4b09c98c8c67c1" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;app.server.module.ts&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;app.server.module.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b81035c7cfe4f1f16f706195740b1d641c47660" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;app&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;app&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e9b7f553bf37a6fa503e7ff8fedc3d3ad53296c" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;build&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;build&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef1398e571684d0ff9b89d114b6ad6b76012bcae" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;css&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccce1f425ace5df3413f25f2764b65c22b6d468e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;dist-server&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;dist-server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1206b7148f935e93d741657612cd60f8df41560e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a39fc988eabf3af75b55b1c0742c1862b77a46b" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;index.html&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;index.html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e55a308f669d966d6652e9a98f710ce1efb4890f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;lib&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="150921537b0205c20cf347f2551372c662cf2eeb" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;localhost&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;localhost&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90996341071c4d663d5773812f29490934b18209" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;main.server.ts&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;main.server.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b886c4fd6b47554356549df40239ed36762fb458" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;none&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;none&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6f12228db7c8844c52da6e16ae4f84912260863" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;production&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;production&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d28195afb50d3af379592d37e9b11e95268a1bc7" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;projects&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;projects&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ef5f637a575ac24ee799eb1f46529522c6a7b3a" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;prose&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;prose&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d88359db7189adad0dd209dc1e36e2a5a44b389" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;public-api&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;public-api&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc4cdc4a0620bc85c35cc0985ab1171b55ba0a4f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;serverApp&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;serverApp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="533d1a7b8646f62917b3ab7819ff29878dd1d08e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;shell&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;shell&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="686319b13675c66420027bd730510aec8bad6955" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;src&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;src&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfc35966b27ac2ef4b8be218e4c18ec4e5b6db88" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;stylish&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;stylish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94d281a4a89b897b769dc942f7fde6d38df484f7" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52042906c683969c26d75239988b89501df5717e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;tsconfig.server&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;tsconfig.server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1de78ccd96cdac76c54716e4bed0bd3eaa38fd4f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;tsconfig.spec&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;tsconfig.spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b59c3c7f6a0f25578287cfcf63a9f0dec368d30" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;warning&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;warning&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019b2c4418deec7387a57c6cd629ac8ccb162060" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;xlf&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;xlf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3263c670a9cc238df307d5b499b4b1a389bab6b6" translate="yes" xml:space="preserve">
          <source>DefaultIterableDiffer</source>
          <target state="translated">DefaultIterableDiffer</target>
        </trans-unit>
        <trans-unit id="7b208a18b43c24b5e2e51af667317c6e8445d465" translate="yes" xml:space="preserve">
          <source>DefaultUrlSerializer</source>
          <target state="translated">DefaultUrlSerializer</target>
        </trans-unit>
        <trans-unit id="8fbd4101ec587a6f2d184f0b05bf2bd4fff464cf" translate="yes" xml:space="preserve">
          <source>DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to specify route specific parameters.</source>
          <target state="translated">DefaultUrlSerializer는 괄호를 사용하여 보조 세그먼트 (예 : popup : compose)를 직렬화하고, 콜론 구문을 사용하여 콘센트를 지정하고 '; parameter = value'구문 (예 : open = true)을 지정하여 경로 별 매개 변수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="abfe751e30348995f94251569b887d3adaf69de4" translate="yes" xml:space="preserve">
          <source>DefaultValueAccessor</source>
          <target state="translated">DefaultValueAccessor</target>
        </trans-unit>
        <trans-unit id="5de13986d9c48ec6ea5c80e7b8bf59649abc3508" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;prefetch&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prefetch&lt;/code&gt; 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="ce4f933914034630118d09fa2b33f58770d4ad3d" translate="yes" xml:space="preserve">
          <source>Defaults to the value &lt;code&gt;installMode&lt;/code&gt; is set to.</source>
          <target state="translated">&lt;code&gt;installMode&lt;/code&gt; 가 기본값으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="328c354b1f04708298579626e25553ebaa49002c" translate="yes" xml:space="preserve">
          <source>Define &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; methods in the module.</source>
          <target state="translated">모듈에서 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; 메소드를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa0dede466437df9fc8e31fd6ca81ed5a1864e1c" translate="yes" xml:space="preserve">
          <source>Define &lt;code&gt;forRoot()&lt;/code&gt; and &lt;code&gt;forChild()&lt;/code&gt; methods in the module.</source>
          <target state="translated">모듈에서 &lt;code&gt;forRoot()&lt;/code&gt; 및 &lt;code&gt;forChild()&lt;/code&gt; 메서드를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="22a59702bf9ab24e07bb851d8b2e03067d7ac299" translate="yes" xml:space="preserve">
          <source>Define Routes</source>
          <target state="translated">경로 정의</target>
        </trans-unit>
        <trans-unit id="95fd531abc23d0e4add477252e925d00e565d0aa" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; control.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 컨트롤을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="874a27f286ff33b0061e026eb76ec7da6f71749d" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;shippingCosts&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;shippingCosts&lt;/code&gt; 특성을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3a8f77f9c6f003f8e6a837e9afd3742508ba160" translate="yes" xml:space="preserve">
          <source>Define a Wildcard route</source>
          <target state="translated">와일드 카드 경로 정의</target>
        </trans-unit>
        <trans-unit id="78881e03729d2c91e39e562aa59d679ec0700be8" translate="yes" xml:space="preserve">
          <source>Define a cart service</source>
          <target state="translated">카트 서비스 정의</target>
        </trans-unit>
        <trans-unit id="e73d69ecb7fe5bb15e2b8912d9c0513d7ed8e0d6" translate="yes" xml:space="preserve">
          <source>Define a container element for the directive, and specify the switch expression to match against as an attribute:</source>
          <target state="translated">지시문의 컨테이너 요소를 정의하고 속성으로 일치시킬 스위치 표현식을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="4855c08ec794427f283e9484dcf713459345e550" translate="yes" xml:space="preserve">
          <source>Define a generation rule</source>
          <target state="translated">생성 규칙 정의</target>
        </trans-unit>
        <trans-unit id="628e7d0326beb26578cac423777c9da1cbb5163f" translate="yes" xml:space="preserve">
          <source>Define a link using the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive. The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; defines how the user navigates to the route (or URL) declaratively in the component template.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 링크를 정의하십시오 . &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 는 선언적 구성 요소 템플릿의 경로 (또는 URL)에 어떻게 사용자를 탐색을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="37563558345558ee13d439fb5b7c35348e7a2635" translate="yes" xml:space="preserve">
          <source>Define a method to dynamically insert an alias control into the alias's form array. The &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#push&quot;&gt;FormArray.push()&lt;/a&gt;&lt;/code&gt; method inserts the control as a new item in the array.</source>
          <target state="translated">별칭 컨트롤을 별칭의 폼 배열에 동적으로 삽입하는 방법을 정의하십시오. &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#push&quot;&gt;FormArray.push()&lt;/a&gt;&lt;/code&gt; 메소드는 어레이의 새로운 아이템으로서 제어를 삽입한다.</target>
        </trans-unit>
        <trans-unit id="f55478ee37b12cf326102ac2f1e11c16d2520e01" translate="yes" xml:space="preserve">
          <source>Define a sample data model.</source>
          <target state="translated">샘플 데이터 모델을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d4ebbadc64ccb33e53ae57852dd662c43d818940" translate="yes" xml:space="preserve">
          <source>Define a template reference variable on the (enhanced) form element.</source>
          <target state="translated">(확장 된) 양식 요소에 템플리트 참조 변수를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="3829ba367338047948d269696cd6dcc93bb234e3" translate="yes" xml:space="preserve">
          <source>Define a variable only once in the template so the runtime value remains predictable.</source>
          <target state="translated">런타임 값이 예측 가능한 상태로 유지되도록 템플릿에서 변수를 한 번만 정의합니다.</target>
        </trans-unit>
        <trans-unit id="cbf1b1ad1692c932aaef851bd68f8cffbe64e05e" translate="yes" xml:space="preserve">
          <source>Define an animation trigger in the &lt;code&gt;animations&lt;/code&gt; section of &lt;code&gt;@&lt;a href=&quot;../core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata. In the template, reference the trigger by name and bind it to a trigger expression that evaluates to a defined animation state, using the following format:</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../core/component&quot;&gt;Component&lt;/a&gt; 메타 데이터 의 &lt;code&gt;animations&lt;/code&gt; 섹션 에서 애니메이션 트리거를 정의하십시오 . 템플릿에서 이름으로 트리거를 참조하고 다음 형식을 사용하여 정의 된 애니메이션 상태로 평가되는 트리거 식에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="4d53180880090d0468ceae9ece0d0eeab097af77" translate="yes" xml:space="preserve">
          <source>Define application-wide providers by specifying &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; on its &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator (in the case of services) or at &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; construction (in the case where tokens are provided). Providers that are created this way automatically are made available to the entire application and don't need to be listed in any module.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 데코레이터 (서비스의 경우) 또는 &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 구성 (토큰이 제공되는 경우 ) 에 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; 를 지정하여 응용 프로그램 전체의 공급자를 정의하십시오 . 이 방법으로 자동 생성 된 공급자는 전체 응용 프로그램에서 사용할 수 있으며 모듈에 나열 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3e132cbf9a16b3ce4ffd17b94f8f1923bc33d193" translate="yes" xml:space="preserve">
          <source>Define application-wide providers by specifying &lt;code&gt;providedIn: 'root'&lt;/code&gt; on its &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator (in the case of services) or at &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; construction (in the case where tokens are provided). Providers that are created this way automatically are made available to the entire application and don't need to be listed in any module.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 데코레이터 (서비스의 경우) 또는 &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 구성 (토큰이 제공되는 경우 ) 에 &lt;code&gt;providedIn: 'root'&lt;/code&gt; 를 지정하여 애플리케이션 전체 제공자를 정의하십시오 . 이러한 방식으로 생성 된 공급자는 전체 애플리케이션에서 자동으로 사용할 수 있으며 어떤 모듈에도 나열 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a769ff17906c0ad5026f3fec98e35d4ded08b427" translate="yes" xml:space="preserve">
          <source>Define control classes</source>
          <target state="translated">제어 클래스 정의</target>
        </trans-unit>
        <trans-unit id="1b6769f88d713bd91aa055cef61c2d4ca6810df8" translate="yes" xml:space="preserve">
          <source>Define dependencies with providers</source>
          <target state="translated">공급자와의 종속성 정의</target>
        </trans-unit>
        <trans-unit id="96430e03943be4690c001b60629d50daf48008ef" translate="yes" xml:space="preserve">
          <source>Define dependency type</source>
          <target state="translated">종속성 유형 정의</target>
        </trans-unit>
        <trans-unit id="69d29cfd03c800a4791e03f792d609dc7d097c45" translate="yes" xml:space="preserve">
          <source>Define how to navigate to a component.</source>
          <target state="translated">구성 요소로 이동하는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="24e43dfe7cf6b635065c5f30b4ce5f044d07fb7f" translate="yes" xml:space="preserve">
          <source>Define locales in the build configuration</source>
          <target state="translated">빌드 구성에서 로케일 정의</target>
        </trans-unit>
        <trans-unit id="e49b053cb66815bfa59357251dbbd29728069e8f" translate="yes" xml:space="preserve">
          <source>Define methods to add items to the cart, return cart items, and clear the cart items:</source>
          <target state="translated">장바구니에 품목을 추가하고 장바구니 품목을 반품하고 장바구니 품목을 지우는 방법을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="f7e6eb736443a3b5ce164c025b8709ebaab9092f" translate="yes" xml:space="preserve">
          <source>Define routes.</source>
          <target state="translated">경로를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="789974b04cf864fa3f4628b731773113b8537356" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;addToCart()&lt;/code&gt; method, which adds the current product to the cart.</source>
          <target state="translated">현재 제품을 장바구니에 추가 하는 &lt;code&gt;addToCart()&lt;/code&gt; 메소드를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="136be921cd31463064de390e0ddce16e69780251" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;get()&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;get()&lt;/code&gt; 메서드 정의</target>
        </trans-unit>
        <trans-unit id="4f877d2d9160c3bb01f894cd4762139f76c9d495" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;heroesUrl&lt;/code&gt; of the form &lt;code&gt;:base/:collectionName&lt;/code&gt; with the address of the heroes resource on the server. Here &lt;code&gt;base&lt;/code&gt; is the resource to which requests are made, and &lt;code&gt;collectionName&lt;/code&gt; is the heroes data object in the &lt;code&gt;in-memory-data-service.ts&lt;/code&gt;.</source>
          <target state="translated">서버에서 heroes 자원의 주소를 사용하여 &lt;code&gt;:base/:collectionName&lt;/code&gt; 형식 의 &lt;code&gt;heroesUrl&lt;/code&gt; 을 정의하십시오 . 여기 &lt;code&gt;base&lt;/code&gt; 는 요청이 이루어지는 리소스이고 &lt;code&gt;collectionName&lt;/code&gt; 은 &lt;code&gt;in-memory-data-service.ts&lt;/code&gt; 의 heroes 데이터 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="c70d53eb9728a1aae2934e79d7baa2495c32ea14" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;items&lt;/code&gt; property to store the products in the cart.</source>
          <target state="translated">장바구니에 제품을 저장할 &lt;code&gt;items&lt;/code&gt; 특성을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="374a9dbdc71e4ccd5f53cbca049d36af0a0bf65c" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;product&lt;/code&gt; property and inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; into the constructor by adding it as an argument within the constructor's parentheses.</source>
          <target state="translated">&lt;code&gt;product&lt;/code&gt; 속성을 정의하고 생성자의 괄호 안에 인수로 추가 하여 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 를 생성자에 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="a0c9b4fb153a9b2aa2a0ffe27f9efbfc6352b817" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;product&lt;/code&gt; property and inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; into the constructor.</source>
          <target state="translated">&lt;code&gt;product&lt;/code&gt; 속성을 정의하고 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 를 생성자에 삽입하십시오 .</target>
        </trans-unit>
        <trans-unit id="94224f8c31cafe12001097a9847c68f0ab7b5fcd" translate="yes" xml:space="preserve">
          <source>Define the HTML template that the component uses to display information. In most cases, this template is a separate HTML file.</source>
          <target state="translated">구성 요소가 정보를 표시하는 데 사용하는 HTML 템플릿을 정의합니다. 대부분의 경우이 템플릿은 별도의 HTML 파일입니다.</target>
        </trans-unit>
        <trans-unit id="84c2fad3ae9b0db6143be8233d1a024b9e41b52a" translate="yes" xml:space="preserve">
          <source>Define the animation.</source>
          <target state="translated">애니메이션을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="bfed9ed5eab89d68e83fa18efeef2704682d344b" translate="yes" xml:space="preserve">
          <source>Define the checkout form model</source>
          <target state="translated">결제 양식 모델 정의</target>
        </trans-unit>
        <trans-unit id="0b4f1b51993e2e4768aecff95bb66bbdff6b1431" translate="yes" xml:space="preserve">
          <source>Define the crossorigin attribute setting of elements that provide CORS support.</source>
          <target state="translated">CORS 지원을 제공하는 요소의 crossorigin 속성 설정을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="5f1b50fbd57b7d09235c9899095f8ed6a396e6be" translate="yes" xml:space="preserve">
          <source>Define the get() method</source>
          <target state="translated">get () 메소드 정의</target>
        </trans-unit>
        <trans-unit id="a32aad78bf0eb55c21cb33bbcd2d97c7fd1aefdd" translate="yes" xml:space="preserve">
          <source>Define the output filename cache-busting hashing mode.</source>
          <target state="translated">출력 파일 이름 캐시 버스 팅 해싱 모드를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="282b2fcaad5a7ff17131438da0fb0640f8f56733" translate="yes" xml:space="preserve">
          <source>Define the rule</source>
          <target state="translated">규칙 정의</target>
        </trans-unit>
        <trans-unit id="ba464e5934066d9c3251321190d03a7331d806dd" translate="yes" xml:space="preserve">
          <source>Define the shipping page</source>
          <target state="translated">운송 페이지 정의</target>
        </trans-unit>
        <trans-unit id="2c952c9026c09bb42bb8b153e8d1c8f9fcd5689f" translate="yes" xml:space="preserve">
          <source>Define the shipping view</source>
          <target state="translated">배송보기 정의</target>
        </trans-unit>
        <trans-unit id="a58c78e105f9508e937f25cab3eae72383adc767" translate="yes" xml:space="preserve">
          <source>Define the view for the new product alert component.</source>
          <target state="translated">새 제품 경고 구성 요소에 대한보기를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="d5fa219b4ed8671f5dcb627e7ef48de3c65fa697" translate="yes" xml:space="preserve">
          <source>Define unique custom IDs</source>
          <target state="translated">고유 한 사용자 지정 ID 정의</target>
        </trans-unit>
        <trans-unit id="7b13873dc1274f371484bc50805a0dac3df464cf" translate="yes" xml:space="preserve">
          <source>Define unique custom ids</source>
          <target state="translated">고유 한 맞춤 ID 정의</target>
        </trans-unit>
        <trans-unit id="8395204fc3456bdd76cd3188ff9156211b00ced8" translate="yes" xml:space="preserve">
          <source>Define what the router should do if it receives a navigation request to the current URL. Default is &lt;code&gt;ignore&lt;/code&gt;, which causes the router ignores the navigation. This can disable features such as a &quot;refresh&quot; button. Use this option to configure the behavior when navigating to the current URL. Default is 'ignore'.</source>
          <target state="translated">라우터가 현재 URL에 대한 탐색 요청을받는 경우 수행 할 작업을 정의하십시오. 기본값은 &lt;code&gt;ignore&lt;/code&gt; 입니다. 라우터가 탐색을 무시합니다. &quot;새로 고침&quot;버튼과 같은 기능을 비활성화 할 수 있습니다. 현재 URL을 탐색 할 때 동작을 구성하려면이 옵션을 사용하십시오. 기본값은 '무시'입니다.</target>
        </trans-unit>
        <trans-unit id="3e1f727c0465a7ae07d745de5260956ec8183f12" translate="yes" xml:space="preserve">
          <source>Define your routes</source>
          <target state="translated">경로 정의</target>
        </trans-unit>
        <trans-unit id="0de62b3c8c1ed10875e2ed7474ecc64f36ed53aa" translate="yes" xml:space="preserve">
          <source>Define your routes in your &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 배열 에서 경로를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="6126fbb1cff6a19c4cc8613ea100f32e878c1a6a" translate="yes" xml:space="preserve">
          <source>Define your size boundaries in the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;, in a &lt;code&gt;budgets&lt;/code&gt; section for each &lt;a href=&quot;build#app-environments&quot;&gt;configured environment&lt;/a&gt;.</source>
          <target state="translated">구성된 각 &lt;a href=&quot;build#app-environments&quot;&gt;환경&lt;/a&gt; 에 대한 &lt;code&gt;budgets&lt;/code&gt; 섹션 에서 CLI 구성 파일 &lt;code&gt;angular.json&lt;/code&gt; 에 크기 경계를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="76be9e6329351c7763ca316248531b72685df7cf" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;AppModule&lt;/code&gt;, the &lt;a href=&quot;bootstrapping&quot;&gt;root module&lt;/a&gt; that tells Angular how to assemble the application. When initially created, it declares only the &lt;code&gt;AppComponent&lt;/code&gt;. Over time, you add more components to declare.</source>
          <target state="translated">Angular에게 응용 프로그램을 어셈블하는 방법을 알려주 는 &lt;a href=&quot;bootstrapping&quot;&gt;루트 모듈 인 &lt;/a&gt; &lt;code&gt;AppModule&lt;/code&gt; 을 정의합니다 . 처음 생성 될 때 &lt;code&gt;AppComponent&lt;/code&gt; 만 선언합니다 . 시간이 지남에 따라 선언 할 구성 요소를 더 추가합니다.</target>
        </trans-unit>
        <trans-unit id="55682d31e3a07ef230dec4ddcde2f669f7002896" translate="yes" xml:space="preserve">
          <source>Defines CSS styles to be stored on a renderer instance.</source>
          <target state="translated">렌더러 인스턴스에 저장 될 CSS 스타일을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8a33a6051ae78e0871fbf63c733d95d7ea910681" translate="yes" xml:space="preserve">
          <source>Defines a list of animation steps to be run in parallel.</source>
          <target state="translated">병렬로 실행할 애니메이션 단계 목록을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="78c95f0e8ccd965b40bcb8fd23f9f9092e2a9686" translate="yes" xml:space="preserve">
          <source>Defines a list of animation steps to be run sequentially, one by one.</source>
          <target state="translated">하나씩 순차적으로 실행할 애니메이션 단계 목록을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0db16c22a542cb88e353373266c96467ed0d4252" translate="yes" xml:space="preserve">
          <source>Defines a matcher for requests based on URL, method, or both.</source>
          <target state="translated">URL, 메소드 또는 둘 모두를 기반으로 요청에 대한 매처를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c2ce9d76ca8e2ee509dcc072576dcae0c851ee71" translate="yes" xml:space="preserve">
          <source>Defines a module that contains components, directives, pipes, and providers.</source>
          <target state="translated">구성 요소, 지시문, 파이프 및 제공자를 포함하는 모듈을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bbcc9025aacb1ee76b9dc1c0b716a4a9597fe43b" translate="yes" xml:space="preserve">
          <source>Defines a schema that allows an NgModule to contain the following:</source>
          <target state="translated">NgModule이 다음을 포함 할 수 있도록하는 스키마를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5e53cda92b070b9dfacf9234345296fdb80a7883" translate="yes" xml:space="preserve">
          <source>Defines a schema that allows any property on any element.</source>
          <target state="translated">모든 요소의 속성을 허용하는 스키마를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="007992afce80ecb791885d624444069de38590c5" translate="yes" xml:space="preserve">
          <source>Defines a scroll position manager. Implemented by &lt;code&gt;BrowserViewportScroller&lt;/code&gt;.</source>
          <target state="translated">스크롤 위치 관리자를 정의합니다. &lt;code&gt;BrowserViewportScroller&lt;/code&gt; 에 의해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="7b88e7c5fc78efd9fa6ef4124a65b304796dbf1d" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;&lt;a href=&quot;animations/animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">각 스타일을 선택적 &lt;code&gt;&lt;a href=&quot;animations/animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 값 과 연결하여 애니메이션 스타일 세트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="09a3e8c545236f497d55055e0050b3a1d47f83e0" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">각 스타일을 선택적 &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 값 과 연결하여 애니메이션 스타일 세트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="3cc741218672f842b7e16fac4a250981c474d954" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;offset&lt;/code&gt; value.</source>
          <target state="translated">각 스타일을 선택적 &lt;code&gt;offset&lt;/code&gt; 값 과 연결하여 애니메이션 스타일 세트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="b279dfffcca1a99dcdfe04a5a70d6b73e5880db0" translate="yes" xml:space="preserve">
          <source>Defines a unit test for the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">루트 &lt;code&gt;AppComponent&lt;/code&gt; 에 대한 단위 테스트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="e24e54b93247b75499ac7d517abe7411430368a2" translate="yes" xml:space="preserve">
          <source>Defines an animation step that combines styling information with timing information.</source>
          <target state="translated">스타일 정보와 타이밍 정보를 결합하는 애니메이션 단계를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c68cc7c5707eabd8219f8b7a1ab574caf776b9b1" translate="yes" xml:space="preserve">
          <source>Defines an array of Routes, each mapping a URL path to a component.</source>
          <target state="translated">각 URL 경로를 구성 요소에 매핑하는 경로 배열을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a01435af040e2619f2e81406c09be7423669e558" translate="yes" xml:space="preserve">
          <source>Defines an interface that acts as a bridge between the Angular forms API and a native element in the DOM.</source>
          <target state="translated">Angular 양식 API와 DOM의 기본 요소 사이의 브릿지 역할을하는 인터페이스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ccc6a0a5239bfcb1e5069449a5b227d5b6d9c709" translate="yes" xml:space="preserve">
          <source>Defines arbitrary developer-defined data to be stored on a renderer instance. This is useful for renderers that delegate to other renderers.</source>
          <target state="translated">렌더러 인스턴스에 저장 될 임의의 개발자 정의 데이터를 정의합니다. 다른 렌더러에게 위임하는 렌더러에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="21ae664afe89dbb8f43c4e8858a599ffb280b1ca" translate="yes" xml:space="preserve">
          <source>Defines how the router merges parameters, data, and resolved data from parent to child routes. By default ('emptyOnly'), inherits parent parameters only for path-less or component-less routes. Set to 'always' to enable unconditional inheritance of parent parameters.</source>
          <target state="translated">라우터가 매개 변수, 데이터 및 확인 된 데이터를 부모에서 자식 경로로 병합하는 방법을 정의합니다. 기본적으로 ( 'emptyOnly') 경로없는 경로 나 구성 요소없는 경로에 대해서만 부모 매개 변수를 상속합니다. 상위 매개 변수의 무조건 상속을 사용하려면 '항상'으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9dae0aa20ef644eeabd8e272a8434eb94f2bbc5b" translate="yes" xml:space="preserve">
          <source>Defines how the router should navigate to a component based on a URL pattern. Most routes consist of a path and a component type.</source>
          <target state="translated">라우터가 URL 패턴을 기반으로 구성 요소를 탐색하는 방법을 정의합니다. 대부분의 경로는 경로와 구성 요소 유형으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="4464084bf36b2c3f096f20ffccc12a8bf0270c6d" translate="yes" xml:space="preserve">
          <source>Defines infrastructure for dependency injection (DI), internationalization (i18n), and various testing and debugging facilities.</source>
          <target state="translated">종속성 주입 (DI), 국제화 (i18n) 및 다양한 테스트 및 디버깅 기능을위한 인프라를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8bfbd8d863007bdc3c17344259758b2b8851eca7" translate="yes" xml:space="preserve">
          <source>Defines one &lt;em&gt;transition&lt;/em&gt; when switching back and forth from the &lt;code&gt;heroes&lt;/code&gt; and &lt;code&gt;hero&lt;/code&gt; routes to ease the component in from the left of the screen as it enters the application view (&lt;code&gt;:enter&lt;/code&gt;), the other to animate the component to the right as it leaves the application view (&lt;code&gt;:leave&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;heroes&lt;/code&gt; 및 &lt;code&gt;hero&lt;/code&gt; 경로 에서 앞뒤로 &lt;em&gt;전환&lt;/em&gt; 할 때 화면 왼쪽에서 구성 요소를 응용 프로그램보기 ( &lt;code&gt;:enter&lt;/code&gt; )에 입력 할 때 구성 요소를 쉽게 전환 하기 위해 전환 하나를 정의하고, 다른 &lt;em&gt;전환&lt;/em&gt; 은 응용 프로그램 을 떠날 때 구성 요소를 오른쪽으로 애니메이션 처리합니다. 보기 ( &lt;code&gt;:leave&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d7a191110568ab5d83c750a60f697e422a9245d" translate="yes" xml:space="preserve">
          <source>Defines one or more CSS styles to use in animations. Controls the visual appearance of HTML elements during animations. Uses object syntax.</source>
          <target state="translated">애니메이션에 사용할 하나 이상의 CSS 스타일을 정의합니다. 애니메이션 중 HTML 요소의 시각적 모양을 제어합니다. 객체 구문을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8e238cabbb30a8c4c232359ef7a25ab5c5a772bf" translate="yes" xml:space="preserve">
          <source>Defines one transition when switching back and forth from the &lt;code&gt;heroes&lt;/code&gt; and &lt;code&gt;hero&lt;/code&gt; routes to ease the component in from the left of the screen as it enters the application view (&lt;code&gt;:enter&lt;/code&gt;), the other to animate the component to the right as it leaves the application view (&lt;code&gt;:leave&lt;/code&gt;).</source>
          <target state="translated">정의 한 전이로부터 앞뒤로 스위칭시 &lt;code&gt;heroes&lt;/code&gt; 과 &lt;code&gt;hero&lt;/code&gt; 는 어플리케이션 장면 들어갈 때 화면의 왼쪽에서 구성 요소를 용이하게하기 위해 경로 ( &lt;code&gt;:enter&lt;/code&gt; )는 응용 프로그램을 떠날 때, 다른 하나는 오른쪽에있는 컴포넌트를 애니메이트 보기 ( &lt;code&gt;:leave&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="47ba811ee66fe36d02c8356b68d28d19b3ee3fb4" translate="yes" xml:space="preserve">
          <source>Defines routes.</source>
          <target state="translated">경로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="20fb4df445edc22891b0b3ae3c0ac48dd6564af3" translate="yes" xml:space="preserve">
          <source>Defines template and style encapsulation options available for Component's &lt;a href=&quot;component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Component 's &lt;a href=&quot;component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; 에&lt;/a&gt; 사용 가능한 템플릿 및 스타일 캡슐화 옵션을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="3c565d04a28681d37c04fd197dc43af222f944d1" translate="yes" xml:space="preserve">
          <source>Defines template and style encapsulation options available for Component's &lt;a href=&quot;core/component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Component 's &lt;a href=&quot;core/component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; 에&lt;/a&gt; 사용 가능한 템플릿 및 스타일 캡슐화 옵션을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="bbfc1ff79e2f3d0bdd95b1a8d5f1085d34f7a56a" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; object that maps a URL path to a component, and the &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; directive that you use to place a routed view in a template, as well as a complete API for configuring, querying, and controlling the router state.</source>
          <target state="translated">정의 &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 구성 요소에 URL 경로를 매핑 개체 및 &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 의 템플릿에 라우팅 된 뷰를 배치하는 데 사용하는 지시어뿐만 아니라, 구성, 쿼리 및 라우터 상태를 제어하기위한 완전한 API.</target>
        </trans-unit>
        <trans-unit id="534e303ed39dff58ed66f8ac03005dc125d30753" translate="yes" xml:space="preserve">
          <source>Defines the HTML template associated with the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">루트 &lt;code&gt;AppComponent&lt;/code&gt; 와 관련된 HTML 템플릿을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="9ad7da76a97f578fd82c2902d762141ba818d760" translate="yes" xml:space="preserve">
          <source>Defines the ServiceWorker registration strategy, which determines when it will be registered with the browser.</source>
          <target state="translated">브라우저에 등록 할시기를 결정하는 ServiceWorker 등록 전략을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c0766546ca9b3da0b517bead9277a27997c0cb96" translate="yes" xml:space="preserve">
          <source>Defines the animation sequence between two named states. Uses array syntax.</source>
          <target state="translated">명명 된 두 상태 사이의 애니메이션 시퀀스를 정의합니다. 배열 구문을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="97e2e28dd3ded239399b0d95c3ed8d572fb3455e" translate="yes" xml:space="preserve">
          <source>Defines the base CSS stylesheet for the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">루트 &lt;code&gt;AppComponent&lt;/code&gt; 의 기본 CSS 스타일 시트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="01c55cf117981d6ba3a6e5a3d0bedf7d4e343f64" translate="yes" xml:space="preserve">
          <source>Defines the build environment.</source>
          <target state="translated">빌드 환경을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1a958cd561ced232dff4bac1558637eff15ac576" translate="yes" xml:space="preserve">
          <source>Defines the class infrastructure for components, view hierarchies, change detection, rendering, and event handling.</source>
          <target state="translated">구성 요소, 계층보기, 변경 감지, 렌더링 및 이벤트 처리를위한 클래스 인프라를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2f86f744259188a92762d99407d2a67061407cbd" translate="yes" xml:space="preserve">
          <source>Defines the decorators that supply metadata and context for Angular constructs.</source>
          <target state="translated">각도 구성에 메타 데이터 및 컨텍스트를 제공하는 데코레이터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ba0f716db5d7d13c6a1369efdafac26719ccd1ba" translate="yes" xml:space="preserve">
          <source>Defines the logic for the app's root component, named &lt;code&gt;AppComponent&lt;/code&gt;. The view associated with this root component becomes the root of the &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;view hierarchy&lt;/a&gt; as you add components and services to your application.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 라는 앱의 루트 구성 요소에 대한 논리를 정의합니다 . 이 루트 컴포넌트와 연관된보기는 애플리케이션에 컴포넌트 및 서비스를 추가 할 때 &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;보기 계층&lt;/a&gt; 의 루트가 됩니다.</target>
        </trans-unit>
        <trans-unit id="de3280c456691c50e69c2238d5588611dcf64274" translate="yes" xml:space="preserve">
          <source>Defines the map of errors returned from failed validation checks.</source>
          <target state="translated">실패한 유효성 검사에서 반환 된 오류 맵을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="28c7e2d2a801a8a0fb6945a0de3e43db3a6f14ba" translate="yes" xml:space="preserve">
          <source>Defines the name that can be used in the template to assign this directive to a variable.</source>
          <target state="translated">이 지시문을 변수에 할당하기 위해 템플릿에서 사용할 수있는 이름을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b6b4c7a96425d13d450553ded2847dcd126f0ea3" translate="yes" xml:space="preserve">
          <source>Defines the root module, named &lt;code&gt;AppModule&lt;/code&gt;, that tells Angular how to assemble the application. Initially declares only the &lt;code&gt;AppComponent&lt;/code&gt;. As you add more components to the app, they must be declared here.</source>
          <target state="translated">Angular에게 응용 프로그램을 어셈블하는 방법을 알려주는 &lt;code&gt;AppModule&lt;/code&gt; 이라는 루트 모듈을 정의합니다 . 처음에는 &lt;code&gt;AppComponent&lt;/code&gt; 만 선언합니다 . 앱에 더 많은 구성 요소를 추가 할 때 여기에 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="560b6286688d2764d7435cbfd0ce5f6ab9cefa86" translate="yes" xml:space="preserve">
          <source>Defines the same &lt;code&gt;AppComponent&lt;/code&gt; as the one in the QuickStart playground. It is the &lt;strong&gt;root&lt;/strong&gt; component of what will become a tree of nested components as the application evolves.</source>
          <target state="translated">빠른 시작 놀이터에서 와 동일한 &lt;code&gt;AppComponent&lt;/code&gt; 를 정의합니다 . 그것은이다 &lt;strong&gt;루트&lt;/strong&gt; 응용 프로그램의 진화와 같은 중첩 된 구성 요소의 나무가 될 것이다 무엇의 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="b65d0b9369faf5bd23746f4543dbee8997bf6546" translate="yes" xml:space="preserve">
          <source>Defines the set of injectable objects that are visible to its view DOM children. See &lt;a href=&quot;component#injecting-a-class-with-a-view-provider&quot;&gt;example&lt;/a&gt;.</source>
          <target state="translated">뷰 DOM 하위에 표시 될 수있는 주입 가능한 오브젝트 세트를 정의합니다. &lt;a href=&quot;component#injecting-a-class-with-a-view-provider&quot;&gt;예를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c57680796f5c05c65ea70fadda123a533fb1af6a" translate="yes" xml:space="preserve">
          <source>Defines two transitions. A single trigger can define multiple states and transitions.</source>
          <target state="translated">두 가지 전환을 정의합니다. 단일 트리거는 여러 상태 및 전환을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e5146bd0be6e84fa59cd48a926fafef0d1cbcea" translate="yes" xml:space="preserve">
          <source>Defines when guards and resolvers will be run. One of</source>
          <target state="translated">가드 및 리졸버가 실행될시기를 정의합니다. 중 하나</target>
        </trans-unit>
        <trans-unit id="fb32691368f716dd067e04f7a8ee40b1b9ebb143" translate="yes" xml:space="preserve">
          <source>Defines when the router updates the browser URL. By default ('deferred'), update after successful navigation. Set to 'eager' if prefer to update the URL at the beginning of navigation. Updating the URL early allows you to handle a failure of navigation by showing an error message with the URL that failed.</source>
          <target state="translated">라우터가 브라우저 URL을 업데이트하는시기를 정의합니다. 기본적으로 ( '지연됨') 탐색에 성공한 후 업데이트하십시오. 탐색 시작시 URL을 업데이트하려면 '열심히'로 설정하십시오. URL을 조기에 업데이트하면 실패한 URL과 함께 오류 메시지를 표시하여 탐색 실패를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="00107de0ffef95a1fc10db981b0ae2fcaebf1d84" translate="yes" xml:space="preserve">
          <source>Defining a basic route</source>
          <target state="translated">기본 경로 정의</target>
        </trans-unit>
        <trans-unit id="b89a94b73a3403c93476a9654b580d95523e24ea" translate="yes" xml:space="preserve">
          <source>Defining a component's template</source>
          <target state="translated">구성 요소 템플릿 정의</target>
        </trans-unit>
        <trans-unit id="8d2f4eea5d5cde290a7eeb369d6476029c3af8e3" translate="yes" xml:space="preserve">
          <source>Defining animations and attaching them to the HTML template</source>
          <target state="translated">애니메이션 정의 및 HTML 템플릿에 첨부</target>
        </trans-unit>
        <trans-unit id="88213a4f1c8d610b9bf72169cf47be8062e57fa1" translate="yes" xml:space="preserve">
          <source>Defining custom change detection</source>
          <target state="translated">사용자 지정 변경 감지 정의</target>
        </trans-unit>
        <trans-unit id="1e6f180c6f4763e163fd371622ec888088be4240" translate="yes" xml:space="preserve">
          <source>Defining custom validators</source>
          <target state="translated">사용자 지정 유효성 검사기 정의</target>
        </trans-unit>
        <trans-unit id="a94775a237bcaa68bfb274edde5b9619d97f65f9" translate="yes" xml:space="preserve">
          <source>Defining input options with a schema and interfaces</source>
          <target state="translated">스키마 및 인터페이스를 사용하여 입력 옵션 정의</target>
        </trans-unit>
        <trans-unit id="5d7bcd8a5d6216d911c4f1a97926e54e4b4a64ed" translate="yes" xml:space="preserve">
          <source>Defining observers</source>
          <target state="translated">관찰자 정의</target>
        </trans-unit>
        <trans-unit id="1a54afee3d635be24613550363d5fa3f2b0d1521" translate="yes" xml:space="preserve">
          <source>Defining offsets for keyframes is optional. If you omit them, evenly spaced offsets are automatically assigned. For example, three keyframes without predefined offsets receive offsets of 0, 0.5, and 1. Specifying an offset of 0.8 for the middle transition in the above example might look like this.</source>
          <target state="translated">키 프레임에 대한 오프셋 정의는 선택 사항입니다. 이를 생략하면 간격이 균일 한 간격 띄우기가 자동으로 할당됩니다. 예를 들어, 사전 정의 된 오프셋이없는 3 개의 키 프레임에는 0, 0.5 및 1의 오프셋이 수신됩니다. 위 예에서 중간 전환에 대해 오프셋 0.8을 지정하면 다음과 같이 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb29f7869dd96ef9bc914331c5f7a54bfc6ceafd" translate="yes" xml:space="preserve">
          <source>Defining providers</source>
          <target state="translated">공급자 정의</target>
        </trans-unit>
        <trans-unit id="2707786a4667e5d5c0add38788eacf634d0b58ab" translate="yes" xml:space="preserve">
          <source>Defining rules and actions</source>
          <target state="translated">규칙 및 조치 정의</target>
        </trans-unit>
        <trans-unit id="7734b8e4b1060a1574142e1bfdff622419f5f5f2" translate="yes" xml:space="preserve">
          <source>Defining typings for runtime-global libraries</source>
          <target state="translated">런타임 글로벌 라이브러리의 입력 정의</target>
        </trans-unit>
        <trans-unit id="f98e5b51e41064e26b1b00bf43b51b2cd9536aa7" translate="yes" xml:space="preserve">
          <source>Definition of builder input options.</source>
          <target state="translated">빌더 입력 옵션의 정의</target>
        </trans-unit>
        <trans-unit id="8614b0b8c6edd0a2c9692acd8211609430e927c5" translate="yes" xml:space="preserve">
          <source>Delayed change detection is intentional and useful. It gives the tester an opportunity to inspect and change the state of the component &lt;em&gt;before Angular initiates data binding and calls &lt;a href=&quot;lifecycle-hooks&quot;&gt;lifecycle hooks&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">지연된 변경 감지는 의도적이며 유용합니다. 테스터는 &lt;em&gt;Angular가 데이터 바인딩을 시작하고 &lt;a href=&quot;lifecycle-hooks&quot;&gt;수명주기 후크를&lt;/a&gt;&lt;/em&gt;&lt;em&gt; 호출하기 전에&lt;/em&gt; 구성 요소의 상태를 검사하고 변경할 수있는 기회를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="df4169e217c104ef8e5feee245891162c13a9a79" translate="yes" xml:space="preserve">
          <source>Delegate complex component logic to services</source>
          <target state="translated">복잡한 컴포넌트 로직을 서비스에 위임</target>
        </trans-unit>
        <trans-unit id="05e33de9a1c31d4b643efd4d36d5ef6fbd4fd627" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;hero details&lt;/code&gt; from &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 에서 &lt;code&gt;hero details&lt;/code&gt; 삭제</target>
        </trans-unit>
        <trans-unit id="78b0b276fca4c17945fe88cd786ec59e0c15d70c" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;non-essential&lt;/code&gt; files (optional)</source>
          <target state="translated">&lt;code&gt;non-essential&lt;/code&gt; 파일 삭제 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="1373669c850d20d42e2554e0658530285be5660e" translate="yes" xml:space="preserve">
          <source>Delete a hero</source>
          <target state="translated">영웅 삭제</target>
        </trans-unit>
        <trans-unit id="0994cccfea58fe0bb5c9ac2ef33680eb47a61d93" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; component at the bottom of the template.</source>
          <target state="translated">템플릿 하단에서 &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; 구성 요소를 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="a973efbbe0ce0a3e5b79eca622331ec4d925820a" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;HEROES&lt;/code&gt; import, because you won't need that anymore. Import the &lt;code&gt;HeroService&lt;/code&gt; instead.</source>
          <target state="translated">더 이상 필요하지 않으므로 &lt;code&gt;HEROES&lt;/code&gt; 가져 오기를 삭제하십시오 . 대신 &lt;code&gt;HeroService&lt;/code&gt; 를 가져 오십시오 .</target>
        </trans-unit>
        <trans-unit id="e7d8f3866a3c069435d5667635832c642bf9b44c" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;app.component.html&lt;/code&gt; file. It is not needed for this example.</source>
          <target state="translated">&lt;code&gt;app.component.html&lt;/code&gt; 파일을 삭제 하십시오. 이 예에서는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="56b71f3f5e9d86dee5d6cb999aad03a3ca99a7c9" translate="yes" xml:space="preserve">
          <source>Delete the &lt;strong&gt;Name&lt;/strong&gt; value. This violates the &quot;required&quot; rule, so it displays the error message&amp;mdash;and notice that it also disables the &lt;strong&gt;Submit&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;이름&lt;/strong&gt; 값을 삭제하십시오 . 이것은 &quot;필수&quot;규칙을 위반하므로 오류 메시지를 표시하고 &lt;strong&gt;제출&lt;/strong&gt; 버튼 도 비활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="6bd232072ed1800a592791a909247f573506a20a" translate="yes" xml:space="preserve">
          <source>Delete the following lines.</source>
          <target state="translated">다음 줄을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="ca994d07660cd1da305a6ba89ed4e8687ce0e9d3" translate="yes" xml:space="preserve">
          <source>Delete the output path before building.</source>
          <target state="translated">빌드하기 전에 출력 경로를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="afdb5e7e343531bb63beff413f5040dd3b12f4cb" translate="yes" xml:space="preserve">
          <source>Deletes values for a given header in a clone of the original instance.</source>
          <target state="translated">원본 인스턴스의 복제본에서 지정된 헤더의 값을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="d41b75d84a6d9a041bf104564c1d9c5136764c75" translate="yes" xml:space="preserve">
          <source>Deleting an item updates the model, and depending on your code, triggers other changes including queries and saving to a remote server. These changes propagate through the system and ultimately display in this and other views.</source>
          <target state="translated">항목을 삭제하면 모델이 업데이트되고 코드에 따라 쿼리 및 원격 서버에 저장을 포함한 다른 변경 사항이 트리거됩니다. 이러한 변경 사항은 시스템을 통해 전파되며 궁극적으로이 뷰와 다른 뷰에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6fead872c57884d832bc66b6ac23b585acb9b62b" translate="yes" xml:space="preserve">
          <source>Deliver an arbitrary &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; (such as a progress event) on the response stream for this request.</source>
          <target state="translated">이 요청에 대한 응답 스트림 에서 임의의 &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; (예 : 진행 이벤트)를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="3cc6ad048409305a7b9ba7c0d88a71587f05ad1e" translate="yes" xml:space="preserve">
          <source>Demonstrates &lt;code&gt;&amp;lt;ngcontainer&amp;gt;&lt;/code&gt;. For more information, see the &lt;a href=&quot;structural-directives#ngcontainer&quot;&gt;ngtemplate section&lt;/a&gt; of &lt;a href=&quot;structural-directives&quot;&gt;Structural directives&lt;/a&gt; .</source>
          <target state="translated">&lt;code&gt;&amp;lt;ngcontainer&amp;gt;&lt;/code&gt; 시연 . 자세한 내용 은 &lt;a href=&quot;structural-directives&quot;&gt;구조 지시문&lt;/a&gt; 의 &lt;a href=&quot;structural-directives#ngcontainer&quot;&gt;ngtemplate 섹션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fa778f2715f9e53a7a46f2e3fefcb66eabe0832" translate="yes" xml:space="preserve">
          <source>Demonstrates &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; in components and directives. For more information, see &lt;a href=&quot;inputs-outputs&quot;&gt;&lt;code&gt;@Input()&lt;/code&gt; and &lt;code&gt;@Output()&lt;/code&gt; properties&lt;/a&gt;.</source>
          <target state="translated">구성 요소 및 지시문에서 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 을 보여줍니다 . 자세한 내용은 &lt;a href=&quot;inputs-outputs&quot;&gt; &lt;code&gt;@Input()&lt;/code&gt; 및 &lt;code&gt;@Output()&lt;/code&gt; 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5b631f044bd7f6323c0c6a76b8f5ea77a0afed8" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular attribute directives. For more information, see &lt;a href=&quot;attribute-directives&quot;&gt;Attribute directives&lt;/a&gt;.</source>
          <target state="translated">Angular 속성 지시문을 보여줍니다. 자세한 내용은 &lt;a href=&quot;attribute-directives&quot;&gt;속성 지시문을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c9fe6a397dd05861973a5f35a9401e50ba022f1" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular attribute, class, and style bindings. For more information, see &lt;a href=&quot;attribute-binding&quot;&gt;Attribute, class, and style bindings&lt;/a&gt;.</source>
          <target state="translated">Angular 속성, 클래스 및 스타일 바인딩을 보여줍니다. 자세한 내용은 &lt;a href=&quot;attribute-binding&quot;&gt;속성, 클래스 및 스타일 바인딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ba555b58c87c8d115d6c5e9f6a14db40f27d9bb" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular built-in directives. For more information, see &lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt;.</source>
          <target state="translated">Angular 기본 제공 지시문을 보여줍니다. 자세한 내용 &lt;a href=&quot;built-in-directives&quot;&gt;은 기본 제공 지시문을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b52ceac8eb716b06023f0481d7cb935b844c5c8" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular built-in template functions. For more information, see the &lt;a href=&quot;template-expression-operators#the-any-type-cast-function&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; type cast function section&lt;/a&gt; of &lt;a href=&quot;template-expression-operators&quot;&gt;Template expression operators&lt;/a&gt;.</source>
          <target state="translated">Angular 기본 제공 템플릿 기능을 보여줍니다. 자세한 내용 은 &lt;a href=&quot;template-expression-operators&quot;&gt;템플릿 표현식 연산자&lt;/a&gt; 의 &lt;a href=&quot;template-expression-operators#the-any-type-cast-function&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; 유형 캐스트 ​​함수 섹션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4cfc8f108cd653053dfd23dda3440f8020228c5" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular documentation style guidelines. For more information, see &lt;a href=&quot;docs-style-guide&quot;&gt;Angular documentation style guide&lt;/a&gt;.</source>
          <target state="translated">Angular 문서 스타일 지침을 보여줍니다. 자세한 내용은 &lt;a href=&quot;docs-style-guide&quot;&gt;Angular 문서 스타일 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="451234fc99706f0798ef83eedff123a103ccde91" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular for those with an AngularJS background. For more information, see &lt;a href=&quot;ajs-quick-reference&quot;&gt;AngularJS to Angular concepts: Quick reference&lt;/a&gt;.</source>
          <target state="translated">AngularJS 배경을 가진 사람들을 위해 Angular를 보여줍니다. 자세한 내용은 &lt;a href=&quot;ajs-quick-reference&quot;&gt;AngularJS to Angular 개념 : 빠른 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8a6297d2b8940258b803b4191bd1e1aac42573d" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular injector trees and resolution modifiers. For more information, see &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical injectors&lt;/a&gt;.</source>
          <target state="translated">Angular 인젝터 트리 및 해상도 수정자를 보여줍니다. 자세한 내용은 &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;계층 적 주입기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="359accdf9da3a15ff84b77112c62101abb3b21f8" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular interpolation. For more information, see &lt;a href=&quot;interpolation&quot;&gt;Interpolation and template expressions&lt;/a&gt;.</source>
          <target state="translated">각도 보간을 보여줍니다. 자세한 내용은 &lt;a href=&quot;interpolation&quot;&gt;보간 및 템플릿 표현식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6a0261ec2943a07e63dc846450228926dce2ac4" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular lifecycle hooks such as &lt;code&gt;ngOnInit()&lt;/code&gt; and &lt;code&gt;ngOnChanges()&lt;/code&gt;. For more information, see &lt;a href=&quot;lifecycle-hooks&quot;&gt;Hooking into the component lifecycle&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngOnInit()&lt;/code&gt; 및 &lt;code&gt;ngOnChanges()&lt;/code&gt; 와 같은 Angular 라이프 사이클 후크를 보여줍니다 . 자세한 내용 &lt;a href=&quot;lifecycle-hooks&quot;&gt;은 구성 요소 수명주기에 연결을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60a47303df9f469b4612ae44ba1b4e8ea1b1aa09" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular pipes. For more information, see &lt;a href=&quot;pipes&quot;&gt;Transforming Data Using Pipes&lt;/a&gt;.</source>
          <target state="translated">앵귤러 파이프를 보여줍니다. 자세한 내용은 &lt;a href=&quot;pipes&quot;&gt;파이프를 사용하여 데이터 변환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a63d4544ab25f375575ef28615775915f25a1113" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular structural directives. For more information, see &lt;a href=&quot;structural-directives&quot;&gt;Structural directives&lt;/a&gt;.</source>
          <target state="translated">Angular 구조 지시문을 보여줍니다. 자세한 내용은 &lt;a href=&quot;structural-directives&quot;&gt;구조 지시문을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="838c553ec1aaad561bbd711c51088342e255fcc2" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular template-driven forms. For more information, see &lt;a href=&quot;forms&quot;&gt;Building a template-driven form&lt;/a&gt;.</source>
          <target state="translated">Angular 템플릿 기반 양식을 보여줍니다. 자세한 내용 &lt;a href=&quot;forms&quot;&gt;은 템플릿 기반 양식 작성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8b6ac5a4058fc84c12511ad28c7208c1a1b1e99" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's animation features. For more information, see &lt;a href=&quot;animations&quot;&gt;Introduction to Angular animations&lt;/a&gt;.</source>
          <target state="translated">Angular의 애니메이션 기능을 보여줍니다. 자세한 내용은 &lt;a href=&quot;animations&quot;&gt;각도 애니메이션 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab4d2a5454e7c6474ee16fe549e99045a4657ee3" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's binding syntax. For more information, see &lt;a href=&quot;binding-syntax&quot;&gt;Binding syntax: an overview&lt;/a&gt;.</source>
          <target state="translated">Angular의 바인딩 구문을 보여줍니다. 자세한 내용은 &lt;a href=&quot;binding-syntax&quot;&gt;바인딩 구문 : 개요를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="680579ce9f23e2a1a8eda1d5f32efa18c98b866d" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's fundamental routing techniques. For more information, see &lt;a href=&quot;router-tutorial&quot;&gt;Using Angular routes in a single-page application&lt;/a&gt;.</source>
          <target state="translated">Angular의 기본 라우팅 기술을 보여줍니다. 자세한 내용 &lt;a href=&quot;router-tutorial&quot;&gt;은 단일 페이지 애플리케이션에서 Angular 경로 사용을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="b3296f7f80ef25c2111f7dbec2ffe28f283b1d7b" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's reactive forms. For more information, see &lt;a href=&quot;reactive-forms&quot;&gt;Reactive forms&lt;/a&gt;.</source>
          <target state="translated">Angular의 반응 형을 보여줍니다. 자세한 내용은 &lt;a href=&quot;reactive-forms&quot;&gt;반응 양식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb3dbff7e48a2032dc9fc4bb8b9a7dc69088fc5d" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's resolution modifiers, such as &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt;. For more information, see the &lt;a href=&quot;hierarchical-dependency-injection#modifying-service-visibility&quot;&gt;Modifying service visibility&lt;/a&gt; section of &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical injectors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 와 같은 Angular의 해상도 수정자를 보여줍니다 . 자세한 정보 는 &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;계층 적 주입기&lt;/a&gt; 의 &lt;a href=&quot;hierarchical-dependency-injection#modifying-service-visibility&quot;&gt;서비스 가시성 수정&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4c2e22092c0b0bd92ce1c9110ac23c2e9b486fd" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's routing features. For more information, see &lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;.</source>
          <target state="translated">Angular의 라우팅 기능을 보여줍니다. 자세한 내용은 &lt;a href=&quot;router&quot;&gt;라우터를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38dc85f0fd22d05095e3f0bbc4e8b98071488d02" translate="yes" xml:space="preserve">
          <source>Demonstrates Angular's template reference variables. For more information, see &lt;a href=&quot;template-reference-variables&quot;&gt;Template reference variables&lt;/a&gt;.</source>
          <target state="translated">Angular의 템플릿 참조 변수를 보여줍니다. 자세한 내용은 &lt;a href=&quot;template-reference-variables&quot;&gt;템플릿 참조 변수를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="423875924fd8466b1dbe99d7be0f04a2683d9a9a" translate="yes" xml:space="preserve">
          <source>Demonstrates a combination of a component and a directive each with its own hooks.</source>
          <target state="translated">구성 요소와 각각 고유 한 후크가있는 지시문의 조합을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="24ce890301f31f7a624abfbcf56ca9bb728034de" translate="yes" xml:space="preserve">
          <source>Demonstrates a combination of a component and a directive, each with its own hooks.</source>
          <target state="translated">각각 고유 한 후크가있는 구성 요소와 지시문의 조합을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e0af0338408409510dcbdda32ff2646bc73428a6" translate="yes" xml:space="preserve">
          <source>Demonstrates binding to events in Angular. For more information, see &lt;a href=&quot;event-binding&quot;&gt;Event binding&lt;/a&gt;.</source>
          <target state="translated">Angular의 이벤트에 대한 바인딩을 보여줍니다. 자세한 내용은 &lt;a href=&quot;event-binding&quot;&gt;이벤트 바인딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d21097bd63ca535a4348bbe04dcb29a430d97ef" translate="yes" xml:space="preserve">
          <source>Demonstrates building Angular applications in a more accessible way. For more information, see &lt;a href=&quot;accessibility&quot;&gt;Accessibility&lt;/a&gt;.</source>
          <target state="translated">보다 접근하기 쉬운 방법으로 Angular 애플리케이션을 구축하는 방법을 보여줍니다. 자세한 내용은 &lt;a href=&quot;accessibility&quot;&gt;접근성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2491aa14a7ce14ba20756bec5febf06ca41d0880" translate="yes" xml:space="preserve">
          <source>Demonstrates creating dynamic forms. For more information, see &lt;a href=&quot;dynamic-form&quot;&gt;Building dynamic forms&lt;/a&gt;.</source>
          <target state="translated">동적 양식 작성을 보여줍니다. 자세한 내용은 &lt;a href=&quot;dynamic-form&quot;&gt;동적 양식 작성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e31627234d3a479b49bde46c259a11b50852177a" translate="yes" xml:space="preserve">
          <source>Demonstrates customizing the document title in the browser. For more information, see &lt;a href=&quot;set-document-title&quot;&gt;Set the document title&lt;/a&gt;.</source>
          <target state="translated">브라우저에서 문서 제목을 사용자 정의하는 방법을 보여줍니다. 자세한 내용 &lt;a href=&quot;set-document-title&quot;&gt;은 문서 제목 설정을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="47d82501ff1326e82e567dc777dda0e696f6a6b6" translate="yes" xml:space="preserve">
          <source>Demonstrates every lifecycle hook. Each hook method writes to the on-screen log.</source>
          <target state="translated">모든 수명주기 후크를 보여줍니다. 각 후크 방법은 화면 로그에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="ffb0bd7333c14cda072690bd9c288037c6cc8b2e" translate="yes" xml:space="preserve">
          <source>Demonstrates expression operators in Angular templates. For more information, see &lt;a href=&quot;template-expression-operators&quot;&gt;Template expression operators&lt;/a&gt;.</source>
          <target state="translated">Angular 템플릿의 표현식 연산자를 보여줍니다. 자세한 내용은 &lt;a href=&quot;template-expression-operators&quot;&gt;템플릿 표현식 연산자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b999d284c43fc652888e4e78f14bf13de10164a" translate="yes" xml:space="preserve">
          <source>Demonstrates foundational concepts of Angular forms. For more information, see &lt;a href=&quot;forms-overview&quot;&gt;Introduction to forms in Angular&lt;/a&gt;.</source>
          <target state="translated">Angular 양식의 기본 개념을 보여줍니다. 자세한 내용 &lt;a href=&quot;forms-overview&quot;&gt;은 Angular의 양식 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9efe664d9835a7dc80d0db2778c58e39018d521b" translate="yes" xml:space="preserve">
          <source>Demonstrates fundamentals of Angular dependency injection. For more information, see &lt;a href=&quot;dependency-injection&quot;&gt;Dependency injection&lt;/a&gt;.</source>
          <target state="translated">Angular 의존성 주입의 기초를 보여줍니다. 자세한 내용은 &lt;a href=&quot;dependency-injection&quot;&gt;종속성 주입을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18c3668610836a72013778048bd504889f2cb05f" translate="yes" xml:space="preserve">
          <source>Demonstrates fundamentals of NgModules. For more information, see &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">NgModules의 기본 사항을 보여줍니다. 자세한 내용은 &lt;a href=&quot;ngmodules&quot;&gt;NgModules를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a1adf1dad51a12915f747b8bdf813b01b050931" translate="yes" xml:space="preserve">
          <source>Demonstrates how &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewproviders&lt;/code&gt; affect dependency injection. For more information, see the &lt;a href=&quot;hierarchical-dependency-injection#providing-services-in-component&quot;&gt;Providing services in &lt;code&gt;@Component()&lt;/code&gt;&lt;/a&gt; section of &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical injectors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; 및 &lt;code&gt;viewproviders&lt;/code&gt; 공급자가 종속성 주입에 미치는 영향을 보여줍니다 . 자세한 내용 은 &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;계층 적 인젝터&lt;/a&gt; 의 &lt;a href=&quot;hierarchical-dependency-injection#providing-services-in-component&quot;&gt; &lt;code&gt;@Component()&lt;/code&gt; &lt;/a&gt; 에서 서비스 제공 섹션을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="9da903bfeae3cf383caf3ab0e84af92fcca596e5" translate="yes" xml:space="preserve">
          <source>Demonstrates how Angular calls the &lt;code&gt;ngOnChanges()&lt;/code&gt; hook every time one of the component input properties changes, and shows how to interpret the &lt;code&gt;changes&lt;/code&gt; object passed to the hook method.</source>
          <target state="translated">구성 요소 입력 속성 중 하나가 변경 될 때마다 Angular가 &lt;code&gt;ngOnChanges()&lt;/code&gt; 후크를 호출하는 방법을 보여주고 후크 메서드에 전달 된 &lt;code&gt;changes&lt;/code&gt; 객체 를 해석하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9ec2c894a6f65fea50d471dc3291a87593f97595" translate="yes" xml:space="preserve">
          <source>Demonstrates how Angular shares data between components. For more information, see &lt;a href=&quot;component-interaction&quot;&gt;Component interaction&lt;/a&gt;.</source>
          <target state="translated">Angular가 구성 요소간에 데이터를 공유하는 방법을 보여줍니다. 자세한 내용은 &lt;a href=&quot;component-interaction&quot;&gt;구성 요소 상호 작용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f558d922fb137f690855f2f02ca4ebdd649f2921" translate="yes" xml:space="preserve">
          <source>Demonstrates how to dynamically load components. For more information, see &lt;a href=&quot;dynamic-component-loader&quot;&gt;Dynamic component loader&lt;/a&gt;.</source>
          <target state="translated">구성 요소를 동적으로로드하는 방법을 보여줍니다. 자세한 내용은 &lt;a href=&quot;dynamic-component-loader&quot;&gt;동적 구성 요소 로더를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="184fb8288b67ee18a45d5cf971fc75b2d1741fae" translate="yes" xml:space="preserve">
          <source>Demonstrates lazy loading NgModules. For more information, see &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy-loading feature modules&lt;/a&gt;.</source>
          <target state="translated">지연 로딩 NgModules를 보여줍니다. 자세한 내용은 &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;지연 로딩 기능 모듈을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="a4146feadf647e90339b87c367e191e3e82d10cc" translate="yes" xml:space="preserve">
          <source>Demonstrates many of the features of Angular dependency injection. For more information, see &lt;a href=&quot;dependency-injection&quot;&gt;Dependency injection in action&lt;/a&gt;.</source>
          <target state="translated">Angular 의존성 주입의 많은 기능을 보여줍니다. 자세한 내용 &lt;a href=&quot;dependency-injection&quot;&gt;은 작동중인 종속성 주입을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="983db2988f152f811a7c5a6d1b04d0264bd00064" translate="yes" xml:space="preserve">
          <source>Demonstrates property binding in Angular. For more information, see &lt;a href=&quot;property-binding&quot;&gt;Property binding&lt;/a&gt;.</source>
          <target state="translated">Angular의 속성 바인딩을 보여줍니다. 자세한 내용은 &lt;a href=&quot;property-binding&quot;&gt;속성 바인딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a23adb2b903c9c02a3ce1cc919dd6ba5436c264d" translate="yes" xml:space="preserve">
          <source>Demonstrates providing services in NgModules. For more information, see &lt;a href=&quot;providers&quot;&gt;Providing dependencies in modules&lt;/a&gt;.</source>
          <target state="translated">NgModules에서 서비스 제공을 시연합니다. 자세한 정보 &lt;a href=&quot;providers&quot;&gt;는 모듈에서 종속성 제공을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="209b3ba549e6a46d68e4d134b75f073fc46c7110" translate="yes" xml:space="preserve">
          <source>Demonstrates responding to user actions. For more information, see &lt;a href=&quot;user-input&quot;&gt;User input&lt;/a&gt;.</source>
          <target state="translated">사용자 작업에 대한 응답을 보여줍니다. 자세한 정보는 &lt;a href=&quot;user-input&quot;&gt;사용자 입력을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d686618629db6f41991ad99b93178a152dd686e" translate="yes" xml:space="preserve">
          <source>Demonstrates security concepts in Angular applications. For more information, see &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt;.</source>
          <target state="translated">Angular 애플리케이션의 보안 개념을 보여줍니다. 자세한 내용은 &lt;a href=&quot;security&quot;&gt;보안을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa658c573f5100c3d36b6d2cd0f83a725afeb81d" translate="yes" xml:space="preserve">
          <source>Demonstrates server interaction using HTTP. For more information, see &lt;a href=&quot;http&quot;&gt;Communicating with backend services using HTTP&lt;/a&gt;.</source>
          <target state="translated">HTTP를 사용한 서버 상호 작용을 보여줍니다. 자세한 내용은 &lt;a href=&quot;http&quot;&gt;HTTP를 사용하여 백엔드 서비스와 통신을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="e276b7bfe969e253fde6083b106ae62281d4b7cb" translate="yes" xml:space="preserve">
          <source>Demonstrates styling in Angular apps. For more information, see &lt;a href=&quot;component-styles&quot;&gt;Component styles&lt;/a&gt;.</source>
          <target state="translated">Angular 앱의 스타일을 보여줍니다. 자세한 내용은 &lt;a href=&quot;component-styles&quot;&gt;구성 요소 스타일을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f7a1ff3ec083835009a7f317298be82faa7fff7" translate="yes" xml:space="preserve">
          <source>Demonstrates techniques for testing Angular. For more information, see &lt;a href=&quot;testing&quot;&gt;Testing&lt;/a&gt;.</source>
          <target state="translated">Angular를 테스트하기위한 기술을 보여줍니다. 자세한 내용은 &lt;a href=&quot;testing&quot;&gt;테스트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="706fd34d2c6050263f5019f42c74b476813a3dbb" translate="yes" xml:space="preserve">
          <source>Demonstrates the Angular bootstrapping process. For more information, see &lt;a href=&quot;bootstrapping&quot;&gt;Launching your app with a root module&lt;/a&gt;.</source>
          <target state="translated">Angular 부트 스트래핑 프로세스를 보여줍니다. 자세한 정보 &lt;a href=&quot;bootstrapping&quot;&gt;는 루트 모듈로 앱 시작을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="be26c5afa6b2128e8a69fcbd0af85934fd6c46e5" translate="yes" xml:space="preserve">
          <source>Demonstrates the fundamental architecture of Angular applications. For more information, see &lt;a href=&quot;architecture&quot;&gt;Introduction to Angular concepts&lt;/a&gt;.</source>
          <target state="translated">Angular 애플리케이션의 기본 아키텍처를 보여줍니다. 자세한 내용은 &lt;a href=&quot;architecture&quot;&gt;Angular 개념 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7321e41f0e80d51c18193588e1e3047563d2a38e" translate="yes" xml:space="preserve">
          <source>Demonstrates two-way data binding in Angular applications. For more information, see &lt;a href=&quot;two-way-binding&quot;&gt;Two-way binding&lt;/a&gt;.</source>
          <target state="translated">Angular 애플리케이션에서 양방향 데이터 바인딩을 보여줍니다. 자세한 내용은 &lt;a href=&quot;two-way-binding&quot;&gt;양방향 바인딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f4a8da6646e33d2ba75055b8aad483b78c2cb41" translate="yes" xml:space="preserve">
          <source>Demonstrates using Angular custom elements. For more information, see &lt;a href=&quot;elements&quot;&gt;Angular elements overview&lt;/a&gt;.</source>
          <target state="translated">Angular 사용자 지정 요소 사용을 보여줍니다. 자세한 내용은 &lt;a href=&quot;elements&quot;&gt;Angular 요소 개요를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0763c4e8c6c67a2220f20c2d293facde2335f95" translate="yes" xml:space="preserve">
          <source>Demonstrates using feature modules in Angular. For more information, see &lt;a href=&quot;feature-modules&quot;&gt;Feature modules&lt;/a&gt;.</source>
          <target state="translated">Angular에서 기능 모듈을 사용하는 방법을 보여줍니다. 자세한 내용은 &lt;a href=&quot;feature-modules&quot;&gt;기능 모듈을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4551f465e2265c8b027dbb76e3efba8c17943a7a" translate="yes" xml:space="preserve">
          <source>Demonstrates validating forms in Angular. For more information, see &lt;a href=&quot;form-validation&quot;&gt;Validating form input&lt;/a&gt;.</source>
          <target state="translated">Angular에서 양식 유효성 검사를 보여줍니다. 자세한 내용은 &lt;a href=&quot;form-validation&quot;&gt;양식 입력 유효성 검사를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="3969438fe2188ea70569a9eba890f3a3be171dfd" translate="yes" xml:space="preserve">
          <source>Dependencies are services or objects that a class needs to perform its function. DI is a coding pattern in which a class asks for dependencies from external sources rather than creating them itself.</source>
          <target state="translated">종속성은 클래스가 기능을 수행하는 데 필요한 서비스 또는 객체입니다. DI는 클래스가 외부 소스의 종속성을 작성하지 않고 외부 소스의 종속성을 요구하는 코딩 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="9c3a60862c8e32bceb7a5b6cd07121beec7c64c3" translate="yes" xml:space="preserve">
          <source>Dependencies can also be marked as optional:</source>
          <target state="translated">종속성은 옵션으로 표시 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bfedadd6cca6690cbe5a22a3b89eb2c20d39fc3" translate="yes" xml:space="preserve">
          <source>Dependencies can be registered at any level in the component hierarchy. When a component requests a dependency, Angular starts with that component's injector and walks up the injector tree until it finds the first suitable provider. Angular throws an error if it can't find the dependency during that walk.</source>
          <target state="translated">구성 요소 계층의 모든 수준에서 종속성을 등록 할 수 있습니다. 구성 요소가 종속성을 요청하면 Angular는 해당 구성 요소의 인젝터로 시작하여 적합한 첫 번째 공급자를 찾을 때까지 인젝터 트리를 올라갑니다. 해당 도보 동안 종속성을 찾을 수 없으면 Angular에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="268069fc500d695525729fb4728b0f714e4272a3" translate="yes" xml:space="preserve">
          <source>Dependencies provided by the root injector can be injected into &lt;em&gt;any&lt;/em&gt; component &lt;em&gt;anywhere&lt;/em&gt; in the application. In some cases, you might want to restrict service availability to a particular region of the application. For instance, you might want to let users explicitly opt in to use a service, rather than letting the root injector provide it automatically.</source>
          <target state="translated">루트 인젝터가 제공하는 종속성에 주입 할 수 &lt;em&gt;있는&lt;/em&gt; 구성 요소 &lt;em&gt;어디서나&lt;/em&gt; 응용 프로그램입니다. 경우에 따라 서비스 가용성을 응용 프로그램의 특정 영역으로 제한 할 수 있습니다. 예를 들어, 루트 인젝터가 자동으로 서비스를 제공하지 않고 사용자가 서비스를 사용하도록 명시 적으로 선택하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e40e6745211c8a0d091b67c457129398aa29f2f" translate="yes" xml:space="preserve">
          <source>Dependencies whose providers are listed here become available for injection into any component, directive, pipe or service that is a child of this injector. The NgModule used for bootstrapping uses the root injector, and can provide dependencies to any part of the app.</source>
          <target state="translated">여기에 제공자가 나열된 종속성은이 인젝터의 하위 구성 요소, 지시문, 파이프 또는 서비스에 주입 할 수있게됩니다. 부트 스트랩에 사용되는 NgModule은 루트 인젝터를 사용하며 앱의 모든 부분에 종속성을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39b445f9280a6bde59a9884f1dfcf8f05fcf2ac8" translate="yes" xml:space="preserve">
          <source>Dependencies. See &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;https://docs.npmjs.com/files/package.json&lt;/a&gt;.</source>
          <target state="translated">의존성. &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;https://docs.npmjs.com/files/package.json을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">의존성 주입</target>
        </trans-unit>
        <trans-unit id="5587fb39e018b9a0f84498d0af8a56b11662b24b" translate="yes" xml:space="preserve">
          <source>Dependency Injection Guide</source>
          <target state="translated">의존성 주입 가이드</target>
        </trans-unit>
        <trans-unit id="67d83ab175192923dcef5418334db7940ccd1d3d" translate="yes" xml:space="preserve">
          <source>Dependency Injection in Action</source>
          <target state="translated">의존성 주입 작동</target>
        </trans-unit>
        <trans-unit id="590a5a128f3f7f29bda608d586e731e6794c72b2" translate="yes" xml:space="preserve">
          <source>Dependency Injection in Angular</source>
          <target state="translated">각도 의존성 주입</target>
        </trans-unit>
        <trans-unit id="94fce4aaf94c5274c2455399844edec7040e85d6" translate="yes" xml:space="preserve">
          <source>Dependency Providers</source>
          <target state="translated">의존성 제공자</target>
        </trans-unit>
        <trans-unit id="abe361ec5ac92ab2b51436412eccfc4c617ee10a" translate="yes" xml:space="preserve">
          <source>Dependency injection</source>
          <target state="translated">의존성 주입</target>
        </trans-unit>
        <trans-unit id="dcbdd3cb88ccf5020d3734dbba5005a8f3e6c83d" translate="yes" xml:space="preserve">
          <source>Dependency injection (DI)</source>
          <target state="translated">의존성 주입 (DI)</target>
        </trans-unit>
        <trans-unit id="38764a3306fa96e3b5ce418928df3310a66e2397" translate="yes" xml:space="preserve">
          <source>Dependency injection (DI), is an important application design pattern. Angular has its own DI framework, which is typically used in the design of Angular applications to increase their efficiency and modularity.</source>
          <target state="translated">의존성 주입 (DI)은 중요한 응용 프로그램 디자인 패턴입니다. Angular에는 자체 DI 프레임 워크가 있으며, 일반적으로 효율성과 모듈성을 높이기 위해 Angular 응용 프로그램 설계에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac6fed4cfd6415d9a0dddf57401d8893e0a3ccdc" translate="yes" xml:space="preserve">
          <source>Dependency injection configuration</source>
          <target state="translated">의존성 주입 구성</target>
        </trans-unit>
        <trans-unit id="5d157fcdb9de2529597d8724844ab259c4616c75" translate="yes" xml:space="preserve">
          <source>Dependency injection features</source>
          <target state="translated">의존성 주입 기능</target>
        </trans-unit>
        <trans-unit id="eb231045a6147a48bad67c40c8081fd843375948" translate="yes" xml:space="preserve">
          <source>Dependency injection fundamentals</source>
          <target state="translated">의존성 주입 기초</target>
        </trans-unit>
        <trans-unit id="a0ee85e722c55bed29ede1e96a9a580963be3da6" translate="yes" xml:space="preserve">
          <source>Dependency injection in Angular</source>
          <target state="translated">Angular의 의존성 주입</target>
        </trans-unit>
        <trans-unit id="7759d5d12903968fa8d1f0a65bce4f7bba100f65" translate="yes" xml:space="preserve">
          <source>Dependency injection in action</source>
          <target state="translated">작동중인 종속성 주입</target>
        </trans-unit>
        <trans-unit id="e0967671af96737e00c4bc3ee3f86c99ee81217c" translate="yes" xml:space="preserve">
          <source>Dependency injection is front and center in both AngularJS and Angular, but there are some key differences between the two frameworks in how it actually works.</source>
          <target state="translated">의존성 주입은 AngularJS와 Angular 모두에서 중심이되지만 실제로 작동하는 방식에있어 두 프레임 워크 사이에는 몇 가지 주요 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d567259d67cf4d25a3c86741b6f053a3877b2330" translate="yes" xml:space="preserve">
          <source>Dependency injection tokens</source>
          <target state="translated">의존성 주입 토큰</target>
        </trans-unit>
        <trans-unit id="8721847e3c2cf1f636675fe5ac81839a4deb4ed6" translate="yes" xml:space="preserve">
          <source>Dependency injection tokens are always strings</source>
          <target state="translated">의존성 주입 토큰은 항상 문자열입니다</target>
        </trans-unit>
        <trans-unit id="e828713a25d9268cea5dcca4b96f2c8be3849f38" translate="yes" xml:space="preserve">
          <source>Dependency injection with &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; 및 &lt;code&gt;viewProviders&lt;/code&gt; 를 사용한 종속성 주입</target>
        </trans-unit>
        <trans-unit id="a5f4548f589dff9719972f474e3b66d02efcff5b" translate="yes" xml:space="preserve">
          <source>Dependency objects can be simple values like dates, numbers and strings, or shapeless objects like arrays and functions.</source>
          <target state="translated">종속성 개체는 날짜, 숫자 및 문자열과 같은 간단한 값이거나 배열 및 함수와 같은 모양없는 개체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c536f43fe0086c7768f33a4642a2989f949a129b" translate="yes" xml:space="preserve">
          <source>Dependency on a reflect-metadata polyfill in JIT mode</source>
          <target state="translated">JIT 모드에서 반사 메타 데이터 폴리 필에 대한 종속성</target>
        </trans-unit>
        <trans-unit id="b7c45dabbea49e158a871834dc91298080f55bc9" translate="yes" xml:space="preserve">
          <source>Dependency providers</source>
          <target state="translated">종속성 공급자</target>
        </trans-unit>
        <trans-unit id="79565b54bff7bbc8a04b329b75bcbe2a792c5429" translate="yes" xml:space="preserve">
          <source>Dependent values should not change during a single turn of the event loop. If an idempotent expression returns a string or a number, it returns the same string or number when called twice in a row. If the expression returns an object, including an &lt;code&gt;array&lt;/code&gt;, it returns the same object &lt;em&gt;reference&lt;/em&gt; when called twice in a row.</source>
          <target state="translated">이벤트 루프를 한 번 돌리는 동안 종속 값이 변경되지 않아야합니다. dem 등식이 문자열이나 숫자를 반환하면 행에서 두 번 호출 될 때 동일한 문자열이나 숫자를 반환합니다. 식이 &lt;code&gt;array&lt;/code&gt; 를 포함하여 객체를 반환하면 행에서 두 번 호출 될 때 동일한 객체 &lt;em&gt;참조를&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf371c381900a6fd3d60e6ae500e85424e8b9edd" translate="yes" xml:space="preserve">
          <source>Depending on the &lt;code&gt;&lt;a href=&quot;locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; used, &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; persists to the URL's path or the URL's hash segment.</source>
          <target state="translated">에 따라 &lt;code&gt;&lt;a href=&quot;locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; 은 , 사용하는 &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 의 URL의 경로 또는 URL의 해시 세그먼트에이 지속합니다.</target>
        </trans-unit>
        <trans-unit id="11417adb2bedfcd43f2faa546d8cc11f6a59ad59" translate="yes" xml:space="preserve">
          <source>Deploy multiple locales</source>
          <target state="translated">여러 로케일 배포</target>
        </trans-unit>
        <trans-unit id="21832731ace57bad20a7e0620e71a706b969afbf" translate="yes" xml:space="preserve">
          <source>Deploy to GitHub pages</source>
          <target state="translated">GitHub 페이지에 배포</target>
        </trans-unit>
        <trans-unit id="e7db5b15c43d8e69848e15e994c11935e988b38a" translate="yes" xml:space="preserve">
          <source>Deploy your application with &lt;code&gt;firebase deploy&lt;/code&gt;, because the command &lt;code&gt;firebase init&lt;/code&gt; has created a &lt;code&gt;firebase.json&lt;/code&gt; file that tells Firebase how to serve your app.</source>
          <target state="translated">&lt;code&gt;firebase init&lt;/code&gt; 명령으로 Firebase에 앱을 제공하는 방법을 알려주 는 &lt;code&gt;firebase.json&lt;/code&gt; 파일 이 생성 되었으므로 &lt;code&gt;firebase deploy&lt;/code&gt; 로 애플리케이션을 배포하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cad02703898cbc62af19c6400b3de80210a2657" translate="yes" xml:space="preserve">
          <source>Deploy your application with &lt;code&gt;ng deploy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ng deploy&lt;/code&gt; 를 사용 하여 애플리케이션을 배포 합니다.</target>
        </trans-unit>
        <trans-unit id="93a4280cf365a78e58ec01757c35bd77e70bc7b1" translate="yes" xml:space="preserve">
          <source>Deploying an application</source>
          <target state="translated">애플리케이션 배포</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="d2196ee26d9923cc05a880fb1a76a08b79b7cc48" translate="yes" xml:space="preserve">
          <source>Deployment to</source>
          <target state="translated">배포</target>
        </trans-unit>
        <trans-unit id="600c4c32abbd0e6044d374f8d9f63e6c5b81d165" translate="yes" xml:space="preserve">
          <source>Deprecated APIs</source>
          <target state="translated">더 이상 사용되지 않는 API</target>
        </trans-unit>
        <trans-unit id="1f787212bb6689c1d785407d5b1bdf211afadeac" translate="yes" xml:space="preserve">
          <source>Deprecated APIs and Features</source>
          <target state="translated">더 이상 사용되지 않는 API 및 기능</target>
        </trans-unit>
        <trans-unit id="15cea9cab07c3d7deb0aed65cb5e28e22b53b411" translate="yes" xml:space="preserve">
          <source>Deprecated APIs and features</source>
          <target state="translated">더 이상 사용되지 않는 API 및 기능</target>
        </trans-unit>
        <trans-unit id="add8011fa2865962ca5feec9cc4f7924abc168c6" translate="yes" xml:space="preserve">
          <source>Deprecated CLI APIs and Options</source>
          <target state="translated">더 이상 사용되지 않는 CLI API 및 옵션</target>
        </trans-unit>
        <trans-unit id="7218426c098e3c7567c8d1124afcedb820536afb" translate="yes" xml:space="preserve">
          <source>Deprecated as part of TSLint deprecation.</source>
          <target state="translated">TSLint 지원 중단의 일부로 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="35ee1fa50278c527aa6abc0d9e07608c509c3bdd" translate="yes" xml:space="preserve">
          <source>Deprecated features</source>
          <target state="translated">더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="b1c818a3ca95c7aa9b5971979e9cc0dc5c2370da" translate="yes" xml:space="preserve">
          <source>Deprecated:</source>
          <target state="translated">Deprecated:</target>
        </trans-unit>
        <trans-unit id="46e54bf33a4ff01d1ec588f4b0775ec8c766db47" translate="yes" xml:space="preserve">
          <source>DeprecatedCurrencyPipe</source>
          <target state="translated">DeprecatedCurrencyPipe</target>
        </trans-unit>
        <trans-unit id="881e558149c3d7461f7105dcd218606fba5255d4" translate="yes" xml:space="preserve">
          <source>DeprecatedDatePipe</source>
          <target state="translated">DeprecatedDatePipe</target>
        </trans-unit>
        <trans-unit id="a80b002b3b2b9739312dfeff0cd916fcd023473b" translate="yes" xml:space="preserve">
          <source>DeprecatedDecimalPipe</source>
          <target state="translated">DeprecatedDecimalPipe</target>
        </trans-unit>
        <trans-unit id="6ad89b35c430aa53c5d3428e1bd57a5b2e322ecb" translate="yes" xml:space="preserve">
          <source>DeprecatedI18NPipesModule</source>
          <target state="translated">DeprecatedI18NPipesModule</target>
        </trans-unit>
        <trans-unit id="478a6233375e237e3c63a4313edb2aa2efd29eff" translate="yes" xml:space="preserve">
          <source>DeprecatedLoadChildren</source>
          <target state="translated">DeprecatedLoadChildren</target>
        </trans-unit>
        <trans-unit id="fa7601a3ccc28c9e4c84755f153eaaf8ee9582b9" translate="yes" xml:space="preserve">
          <source>DeprecatedPercentPipe</source>
          <target state="translated">DeprecatedPercentPipe</target>
        </trans-unit>
        <trans-unit id="6476c77b7d784c95dbbc590911032f580e3f0bc4" translate="yes" xml:space="preserve">
          <source>Deprecation announced</source>
          <target state="translated">지원 중단 발표</target>
        </trans-unit>
        <trans-unit id="5058335bf29d5e3c5f14c109e68c0711e5a7f2dc" translate="yes" xml:space="preserve">
          <source>Deprecation practices</source>
          <target state="translated">지원 중단 사례</target>
        </trans-unit>
        <trans-unit id="34730e9bbd5c0ba7b7655973316eed44e39da85f" translate="yes" xml:space="preserve">
          <source>Deprecations</source>
          <target state="translated">Deprecations</target>
        </trans-unit>
        <trans-unit id="554ab2f632217d31bc0da60f68bf5c4c051c590b" translate="yes" xml:space="preserve">
          <source>Describes how an &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection). A static provider provides tokens to an injector for various types of dependencies.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 를 정적으로 구성 하는 방법 (즉, 반사 없음)을 설명합니다. 정적 공급자는 다양한 유형의 종속성에 대해 인젝터에 토큰을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1627ac80968a606d933e94e5d703f9c55d6e9632" translate="yes" xml:space="preserve">
          <source>Describes how an &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection). A static provider provides tokens to an injector for various types of dependencies.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 를 정적으로 구성 하는 방법 (즉, 반사 없음)을 설명합니다. 정적 공급자는 다양한 유형의 종속성에 대해 인젝터에 토큰을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="37d4da9c3e2f3e172d0498996ef3eb3a0f02a619" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 를 정적 (반사 없음)으로 구성 하는 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="0077d6cc8491b4b5017fb89074903642a9fbc3ff" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 구성 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="6600b83d9745dd9a9b042112a73a8a3701ed489a" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 를 정적 (반사 없음)으로 구성 하는 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="f289052a0ab33778b3202d92989357da4acfe96e" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 구성 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4f79b6c5e66c1a9169be45d48f9c57637ecaeef8" translate="yes" xml:space="preserve">
          <source>Designing a class with dependency injection makes the class easier to test. Listing dependencies as constructor parameters may be all you need to test application parts effectively.</source>
          <target state="translated">의존성 주입으로 클래스를 설계하면 클래스를 쉽게 테스트 할 수 있습니다. 응용 프로그램 부분을 효과적으로 테스트하려면 종속성을 생성자 매개 변수로 나열하면됩니다.</target>
        </trans-unit>
        <trans-unit id="29438575ddcbe936d3920226aa524c3393a610bf" translate="yes" xml:space="preserve">
          <source>Despite inner animations being disabled, a parent animation can &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; for inner elements located in disabled areas of the template and still animate them if needed. This is also the case for when a sub animation is queried by a parent and then later animated using &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">내부 애니메이션이 비활성화에도 불구하고, 부모 애니메이션 할 수 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 템플릿의 장애인 지역에 위치한 내부 요소에 대한 필요한 경우 여전히 애니메이션. 하위 애니메이션이 부모에 의해 쿼리 된 후 나중에 &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; 사용하여 애니메이션이되는 경우에도 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="3d2e8f0ff165e77f918de800977b3bf4c84cf007" translate="yes" xml:space="preserve">
          <source>Destroy the Angular platform and all Angular applications on the page.</source>
          <target state="translated">페이지에서 Angular 플랫폼과 모든 Angular 응용 프로그램을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="6192cea44a795469f201424a686d1f23e3abe2c1" translate="yes" xml:space="preserve">
          <source>Destroy the existing platform.</source>
          <target state="translated">기존 플랫폼을 파괴하십시오.</target>
        </trans-unit>
        <trans-unit id="e232f65b77c6e508c16de7f3b985ec765080941e" translate="yes" xml:space="preserve">
          <source>Destroys a view attached to this container</source>
          <target state="translated">이 컨테이너에 연결된 뷰를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="371555b173a3f42e5532895e8a8625000752c456" translate="yes" xml:space="preserve">
          <source>Destroys all views in this container.</source>
          <target state="translated">이 컨테이너의 모든 뷰를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="ea8b05fa2a4fef33bdb4c22d2fbb88d4595299a7" translate="yes" xml:space="preserve">
          <source>Destroys the animation, after invoking the &lt;code&gt;&lt;a href=&quot;animationplayer#beforeDestroy&quot;&gt;beforeDestroy&lt;/a&gt;()&lt;/code&gt; callback. Calls the &lt;code&gt;onDestroy()&lt;/code&gt; callback when destruction is completed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationplayer#beforeDestroy&quot;&gt;beforeDestroy&lt;/a&gt;()&lt;/code&gt; 콜백을 호출 한 후 애니메이션을 삭제 합니다. 삭제가 완료되면 &lt;code&gt;onDestroy()&lt;/code&gt; 콜백을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ef288c23349153fa252bb8969e480488b1ade1b0" translate="yes" xml:space="preserve">
          <source>Destroys the animation, after invoking the &lt;code&gt;beforeDestroy()&lt;/code&gt; callback. Calls the &lt;code&gt;onDestroy()&lt;/code&gt; callback when destruction is completed.</source>
          <target state="translated">&lt;code&gt;beforeDestroy()&lt;/code&gt; 콜백을 호출 한 후 애니메이션을 삭제 합니다. 소멸이 완료되면 &lt;code&gt;onDestroy()&lt;/code&gt; 콜백을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ea9bd7e5ed512aff6189ff2afc542da79a36f817" translate="yes" xml:space="preserve">
          <source>Destroys the component instance and all of the data structures associated with it.</source>
          <target state="translated">구성 요소 인스턴스 및 이와 연관된 모든 데이터 구조를 파괴합니다.</target>
        </trans-unit>
        <trans-unit id="0da0963f943856bb54d7b95d42e0e3d49675a337" translate="yes" xml:space="preserve">
          <source>Destroys the current Angular platform and all Angular applications on the page. Destroys all modules and listeners registered with the platform.</source>
          <target state="translated">페이지에있는 현재 Angular 플랫폼과 모든 Angular 애플리케이션을 삭제합니다. 플랫폼에 등록 된 모든 모듈과 리스너를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="9cf6b78e95b5f09265815794782da5cdbeb56f56" translate="yes" xml:space="preserve">
          <source>Destroys the module instance and all of the data structures associated with it.</source>
          <target state="translated">모듈 인스턴스 및 이와 관련된 모든 데이터 구조를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="fbb6f7a742a4eb748fc690a4f9d045ccc7e05659" translate="yes" xml:space="preserve">
          <source>Destroys this view and all of the data structures associated with it.</source>
          <target state="translated">이 뷰와 이와 관련된 모든 데이터 구조를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="578ea30d0209bdd1cc7a4e4351b5ad10a4b7a13b" translate="yes" xml:space="preserve">
          <source>Destructured variable or constant not supported</source>
          <target state="translated">구조화되지 않은 변수 또는 상수는 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="83b7a75d5bc1f9e9bbab53fd26eee0eebc347467" translate="yes" xml:space="preserve">
          <source>Desugared</source>
          <target state="translated">Desugared</target>
        </trans-unit>
        <trans-unit id="8d08aa8455a14b811d9b6fe35ed129bab859632f" translate="yes" xml:space="preserve">
          <source>Detach change detector to limit how often check occurs</source>
          <target state="translated">점검 빈도를 제한하기 위해 변경 감지기 분리</target>
        </trans-unit>
        <trans-unit id="795a62180e964ae94c53bb9b9985f6f0b5bcd60a" translate="yes" xml:space="preserve">
          <source>Detached views are not checked during change detection runs until they are re-attached, even if they are marked as dirty.</source>
          <target state="translated">더티로 표시되어 있어도 다시 연결될 때까지 변경 감지 실행 중에 분리 된 뷰를 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0a9d6f591149520b6b2d78586833388b575e21c" translate="yes" xml:space="preserve">
          <source>DetachedRouteHandle</source>
          <target state="translated">DetachedRouteHandle</target>
        </trans-unit>
        <trans-unit id="020cb0ab4db35fbda482781c20576f39e92991bb" translate="yes" xml:space="preserve">
          <source>Detaches a view from dirty checking again.</source>
          <target state="translated">더티 검사에서 다시보기를 분리합니다.</target>
        </trans-unit>
        <trans-unit id="ce080e741c27851c45aad3fbfe35ae9b1e68df51" translate="yes" xml:space="preserve">
          <source>Detaches a view from this container without destroying it. Use along with &lt;code&gt;&lt;a href=&quot;../forms/formarray#insert&quot;&gt;insert()&lt;/a&gt;&lt;/code&gt; to move a view within the current container.</source>
          <target state="translated">이 컨테이너를 손상시키지 않고 뷰를 분리합니다. &lt;code&gt;&lt;a href=&quot;../forms/formarray#insert&quot;&gt;insert()&lt;/a&gt;&lt;/code&gt; 와 함께 사용 하여 현재 컨테이너 내에서보기를 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="a97f9c88abc82bb35b48131114f8aae2ab3b02c1" translate="yes" xml:space="preserve">
          <source>Detaches a view from this container without destroying it. Use along with &lt;code&gt;insert()&lt;/code&gt; to move a view within the current container.</source>
          <target state="translated">이 컨테이너에서 뷰를 파괴하지 않고 분리합니다. 현재 컨테이너 내에서 뷰를 이동 하려면 &lt;code&gt;insert()&lt;/code&gt; 와 함께 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="94686a999c0455a3cf8b8386bc0cf59bdde40664" translate="yes" xml:space="preserve">
          <source>Detaches this view from the change-detection tree. A detached view is not checked until it is reattached. Use in combination with &lt;code&gt;&lt;a href=&quot;testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; to implement local change detection checks.</source>
          <target state="translated">변경 감지 트리에서이보기를 분리합니다. 분리 된 뷰는 다시 연결될 때까지 확인되지 않습니다. 로컬 변경 감지 검사를 구현하려면 &lt;code&gt;&lt;a href=&quot;testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c866fc2271c65ffa7825ede55b8489864846818c" translate="yes" xml:space="preserve">
          <source>Detaches this view from the change-detection tree. A detached view is not checked until it is reattached. Use in combination with &lt;code&gt;detectChanges()&lt;/code&gt; to implement local change detection checks.</source>
          <target state="translated">변경 감지 트리에서이보기를 분리합니다. 분리 된 뷰는 다시 연결될 때까지 확인되지 않습니다. &lt;code&gt;detectChanges()&lt;/code&gt; 와 함께 사용하여 로컬 변경 감지 검사를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="e00db26f44f35fb87be8830347a5264c12dde83e" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes that Angular can't or won't detect on its own.</source>
          <target state="translated">Angular가 자체적으로 감지 할 수 없거나 감지 할 수없는 변경 사항을 감지하고 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="2d0553de29fcfcd88c7f6c94093659b997ce7163" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes that Angular can't or won't detect on its own. See details and example in &lt;a href=&quot;lifecycle-hooks#docheck&quot;&gt;Defining custom change detection&lt;/a&gt; in this document.</source>
          <target state="translated">Angular가 자체적으로 감지 할 수 없거나 감지 할 수없는 변경 사항을 감지하고 조치를 취합니다. 이 문서의 &lt;a href=&quot;lifecycle-hooks#docheck&quot;&gt;사용자 정의 변경 감지 정의&lt;/a&gt; 에서 세부 사항 및 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8a127bfe17898a3b255876bcdf1d1c9fa3928de" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes to input property values with the &lt;code&gt;ngOnChanges()&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; lifecycle hook interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 라이프 사이클 후크 인터페이스 의 &lt;code&gt;ngOnChanges()&lt;/code&gt; 메소드를 사용하여 입력 특성 값의 변경 사항을 감지하고 조치 하십시오 .</target>
        </trans-unit>
        <trans-unit id="74dce6fffdd0462c1c153bee5974cdc0376a8b74" translate="yes" xml:space="preserve">
          <source>Detecting changes with data binding in pipes</source>
          <target state="translated">파이프의 데이터 바인딩으로 변경 감지</target>
        </trans-unit>
        <trans-unit id="5d2fe40bc6e7bf3ef9d676154d6fe0e4ee4e9964" translate="yes" xml:space="preserve">
          <source>Detecting impure changes within composite objects</source>
          <target state="translated">복합 객체 내 불순한 변화 감지</target>
        </trans-unit>
        <trans-unit id="3dae57708f9b4e33643c9eda71fd421e5883e693" translate="yes" xml:space="preserve">
          <source>Detecting pure changes to primitives and object references</source>
          <target state="translated">원시 및 객체 참조에 대한 순수한 변경 감지</target>
        </trans-unit>
        <trans-unit id="857eba68fb4e46cab2b9953790865f2a5092ebea" translate="yes" xml:space="preserve">
          <source>Detecting that an error occurred is one thing. Interpreting that error and composing a user-friendly response is a bit more involved.</source>
          <target state="translated">오류가 발생했음을 감지하는 것이 한 가지입니다. 이 오류를 해석하고 사용자 친화적 인 응답을 작성하는 것이 조금 더 복잡합니다.</target>
        </trans-unit>
        <trans-unit id="f682c256f996e01f2e6e6fb59f14d0e1d884fbad" translate="yes" xml:space="preserve">
          <source>Detecting when an animation is disabled</source>
          <target state="translated">애니메이션이 비활성화 된시기 감지</target>
        </trans-unit>
        <trans-unit id="04d06e3ff3564cb712418d032f6dfa595a2e7af4" translate="yes" xml:space="preserve">
          <source>Determines if a route should be reused</source>
          <target state="translated">경로를 재사용해야하는지 결정</target>
        </trans-unit>
        <trans-unit id="4435bd986bf1ce957bb5b0a58c7919ffb3cc6b25" translate="yes" xml:space="preserve">
          <source>Determines if a route should be reused. This strategy returns &lt;code&gt;true&lt;/code&gt; when the future route config and current route config are identical.</source>
          <target state="translated">경로를 재사용해야하는지 여부를 결정합니다. 이 전략은 향후 경로 구성과 현재 경로 구성이 동일 할 때 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="5cb9846df8e89fd7757c4cecb42b1f09c86afecb" translate="yes" xml:space="preserve">
          <source>Determines if this route (and its subtree) should be detached to be reused later</source>
          <target state="translated">나중에 다시 사용할 수 있도록이 경로 (및 해당 하위 트리)를 분리해야하는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="d9e64e88b5cb3aba35c3f9b37fc8405f431d8a8f" translate="yes" xml:space="preserve">
          <source>Determines if this route (and its subtree) should be reattached</source>
          <target state="translated">이 경로 (및 해당 하위 트리)를 다시 연결해야하는지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bf63974ae0ae184173f6e5b9dd49393bfd79fa35" translate="yes" xml:space="preserve">
          <source>Determines when the router updates the browser URL. By default (&lt;code&gt;&quot;deferred&quot;&lt;/code&gt;), updates the browser URL after navigation has finished. Set to &lt;code&gt;'eager'&lt;/code&gt; to update the browser URL at the beginning of navigation. You can choose to update early so that, if navigation fails, you can show an error message with the URL that failed.</source>
          <target state="translated">라우터가 브라우저 URL을 업데이트 할시기를 결정합니다. 기본적으로 ( &lt;code&gt;&quot;deferred&quot;&lt;/code&gt; ) 탐색이 완료된 후 브라우저 URL을 업데이트합니다. 탐색 시작시 브라우저 URL을 업데이트하려면 &lt;code&gt;'eager'&lt;/code&gt; 로 설정하십시오 . 탐색에 실패한 경우 실패한 URL과 함께 오류 메시지를 표시 할 수 있도록 조기에 업데이트하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c59db6e41de82982506198f4a98b9d1da63d6eb" translate="yes" xml:space="preserve">
          <source>Determines which injectors will provide the injectable, by either associating it with an &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; or other &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt;, or by specifying that this injectable should be provided in one of the following injectors:</source>
          <target state="translated">인젝터의 어느 쪽과 연결함으로써, 주사를 제공를 결정 &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 다른 &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt; 또는이 주사제는 다음 인젝터 하나에 제공되어야 함을 지정 :</target>
        </trans-unit>
        <trans-unit id="d4d104cdda5ff1053c0418ce564dd52363728bd7" translate="yes" xml:space="preserve">
          <source>Determines which injectors will provide the injectable, by either associating it with an @NgModule or other &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt;, or by specifying that this injectable should be provided in the 'root' injector, which will be the application-level injector in most apps.</source>
          <target state="translated">@NgModule 또는 다른 &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt; 과 연관 시키거나이 인젝터를 '루트'인젝터에 제공하도록 지정하여 인젝터를 제공 할 인젝터를 결정합니다. 이는 대부분의 앱에서 애플리케이션 레벨 인젝터입니다.</target>
        </trans-unit>
        <trans-unit id="ba45be12dab890f012be90980b2f05219b42cfec" translate="yes" xml:space="preserve">
          <source>Determining an event target</source>
          <target state="translated">이벤트 대상 결정</target>
        </trans-unit>
        <trans-unit id="999c66c441c3226e0966ddbba9a0c570185161ff" translate="yes" xml:space="preserve">
          <source>Dev server target to run tests against.</source>
          <target state="translated">테스트 대상 서버 개발 대상</target>
        </trans-unit>
        <trans-unit id="965695ae3b5de08fbcc553664bd700779eca213f" translate="yes" xml:space="preserve">
          <source>DevDependencies</source>
          <target state="translated">DevDependencies</target>
        </trans-unit>
        <trans-unit id="14466f532621848f60d0b683098849311d22cf50" translate="yes" xml:space="preserve">
          <source>Develop a component to create form controls dynamically.</source>
          <target state="translated">양식 컨트롤을 동적으로 만드는 구성 요소를 개발합니다.</target>
        </trans-unit>
        <trans-unit id="b0608ab1bd96359355856ec5aafa9740f6d63c4d" translate="yes" xml:space="preserve">
          <source>Developer Tools</source>
          <target state="translated">개발자 도구</target>
        </trans-unit>
        <trans-unit id="5083a3489727d560720fdf9a3fef93a68dd6422d" translate="yes" xml:space="preserve">
          <source>Developer-defined state that can be passed to any navigation. Access this value through the &lt;code&gt;Navigation.extras&lt;/code&gt; object returned from &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; while a navigation is executing.</source>
          <target state="translated">모든 탐색에 전달할 수있는 개발자 정의 상태입니다. 탐색이 실행되는 동안 &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; 에서 리턴 된 &lt;code&gt;Navigation.extras&lt;/code&gt; 오브젝트 를 통해이 값에 액세스하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f339b7168017fa28dc0d4f1050f82636e73c066" translate="yes" xml:space="preserve">
          <source>Developer-defined state that can be passed to any navigation. Access this value through the &lt;code&gt;Navigation.extras&lt;/code&gt; object returned from the &lt;a href=&quot;router#getcurrentnavigation&quot;&gt;Router.getCurrentNavigation() method&lt;/a&gt; while a navigation is executing.</source>
          <target state="translated">모든 탐색에 전달할 수있는 개발자 정의 상태입니다. 탐색이 실행되는 동안 &lt;a href=&quot;router#getcurrentnavigation&quot;&gt;Router.getCurrentNavigation () 메서드&lt;/a&gt; 에서 반환 된 &lt;code&gt;Navigation.extras&lt;/code&gt; 개체 를 통해이 값에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="7d70420c9b5d5dcaf2a90e58e9939aeecc418d9e" translate="yes" xml:space="preserve">
          <source>Developing forms requires design skills (which are out of scope for this page), as well as framework support for &lt;em&gt;two-way data binding, change tracking, validation, and error handling&lt;/em&gt;, which you'll learn about on this page.</source>
          <target state="translated">양식을 개발하려면이 페이지에서 다루지 않는 디자인 기술 &lt;em&gt;과 양방향 데이터 바인딩, 변경 내용 추적, 유효성 검사 및 오류 처리에&lt;/em&gt; 대한 프레임 워크 지원 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="31febd42549d5d48fe3c931baf9f040f396e2320" translate="yes" xml:space="preserve">
          <source>Developing schematics for libraries</source>
          <target state="translated">라이브러리를위한 회로도 개발</target>
        </trans-unit>
        <trans-unit id="73c1a0ef58c564d4a10d5d0f9429f07214af85c4" translate="yes" xml:space="preserve">
          <source>Dictionary of objects associated with template local variables (e.g. &lt;code&gt;#foo&lt;/code&gt;), keyed by the local variable name.</source>
          <target state="translated">로컬 변수 이름으로 키가 지정된 템플릿 로컬 변수 (예 : &lt;code&gt;#foo&lt;/code&gt; ) 와 관련된 개체 사전</target>
        </trans-unit>
        <trans-unit id="d138e770ccb2b52d2c77f539bee53aeb46b6a506" translate="yes" xml:space="preserve">
          <source>Differences with &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 과의 차이점</target>
        </trans-unit>
        <trans-unit id="5205f5f17a0df5d5c03d855d59f41a77eb75f242" translate="yes" xml:space="preserve">
          <source>Different classes can provide the same service. For example, the following code tells the injector to return a &lt;code&gt;BetterLogger&lt;/code&gt; instance when the component asks for a logger using the &lt;code&gt;Logger&lt;/code&gt; token.</source>
          <target state="translated">다른 클래스는 동일한 서비스를 제공 할 수 있습니다. 예를 들어 다음 코드는 구성 요소가 &lt;code&gt;Logger&lt;/code&gt; 토큰을 사용하여 로거를 요청할 때 인젝터가 &lt;code&gt;BetterLogger&lt;/code&gt; 인스턴스 를 반환하도록 지시 합니다 .</target>
        </trans-unit>
        <trans-unit id="f312093a46be4a4c362b96e84ae7c5b57668ffd7" translate="yes" xml:space="preserve">
          <source>Different file types have different comment syntax so adjust accordingly.</source>
          <target state="translated">파일 형식마다 주석 구문이 다르므로 적절하게 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="8bc5b687513fa24e83b6d7a0c90598defec2723f" translate="yes" xml:space="preserve">
          <source>Different languages have different pluralization rules and grammatical constructions that add complexity to the translation task. You can use regular expressions with the &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt; clauses to provide patterns that aid translation in these cases.</source>
          <target state="translated">언어마다 번역 규칙을 복잡하게하는 다른 복수 규칙과 문법 구성이 있습니다. &lt;code&gt;plural&lt;/code&gt; 및 &lt;code&gt;select&lt;/code&gt; 절 과 함께 정규식을 사용 하여 이러한 경우 변환을 돕는 패턴을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ad9efe70099a7ad76eb89260a1c6e11dcb99981" translate="yes" xml:space="preserve">
          <source>Different languages have different pluralization rules and grammatical constructions that can make translation difficult. To simplify translation, use International Components for Unicode (ICU) clauses with regular expressions, such as &lt;code&gt;plural&lt;/code&gt; to mark the uses of plural numbers, and &lt;code&gt;select&lt;/code&gt; to mark alternate text choices.</source>
          <target state="translated">언어마다 다원화 규칙과 문법 구조가 다르기 때문에 번역을 어렵게 만들 수 있습니다. 번역을 단순화하려면 &lt;code&gt;plural&lt;/code&gt; 과 같은 정규식과 함께 ICU (International Components for Unicode) 절을 사용하여 복수의 사용 을 표시하고 대체 텍스트 &lt;code&gt;select&lt;/code&gt; 을 표시하도록 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="fddacc86c58629a7a06e78de09cc7ce3bca5ae83" translate="yes" xml:space="preserve">
          <source>Differential Loading</source>
          <target state="translated">차동 로딩</target>
        </trans-unit>
        <trans-unit id="2d7a4dce83d8a83a0203b47ca4aa73a375cb78c8" translate="yes" xml:space="preserve">
          <source>Differential Loading (Two builds w/Conditional Polyfills</source>
          <target state="translated">차동 로딩 (조건부 폴리 필이 포함 된 두 가지 빌드)</target>
        </trans-unit>
        <trans-unit id="c0507f371f24db983eb326b7746378ec13825bee" translate="yes" xml:space="preserve">
          <source>Differential builds</source>
          <target state="translated">차등 빌드</target>
        </trans-unit>
        <trans-unit id="c1a1914703c6893ff3a3faabb7a9f5abfbbb5d01" translate="yes" xml:space="preserve">
          <source>Differential loading (two builds w/conditional polyfills)</source>
          <target state="translated">차등 하중 (조건부 폴리 필이있는 2 개의 빌드)</target>
        </trans-unit>
        <trans-unit id="ef47150250dc01045ca6f30fdb1d8fa1da1bfb0b" translate="yes" xml:space="preserve">
          <source>Differential loading can be explicitly disabled if it causes unexpected issues or you need to target ES5 specifically for legacy browser support.</source>
          <target state="translated">예상치 못한 문제가 발생하거나 레거시 브라우저 지원을 위해 특별히 ES5를 대상으로해야하는 경우 차등로드를 명시 적으로 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0954d254844bfdb1e4d3b504564b9474fa8a3b83" translate="yes" xml:space="preserve">
          <source>Differential loading is a strategy that allows your web application to support multiple browsers, but only load the necessary code that the browser needs. When differential loading is enabled the CLI builds two separate bundles as part of your deployed application.</source>
          <target state="translated">차등로드는 웹 애플리케이션이 여러 브라우저를 지원하지만 브라우저에 필요한 코드 만로드 할 수 있도록하는 전략입니다. 차등로드가 활성화되면 CLI는 배포 된 애플리케이션의 일부로 두 개의 개별 번들을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="8d2d01050bb3ebcdc0e9b5c9da3e30627a86ce04" translate="yes" xml:space="preserve">
          <source>Differential loading is a strategy where the CLI builds two separate bundles as part of your deployed application.</source>
          <target state="translated">차등 로딩은 CLI가 배포 된 애플리케이션의 일부로 두 개의 개별 번들을 빌드하는 전략입니다.</target>
        </trans-unit>
        <trans-unit id="e6559e68cd586a9e5aba6c76cebb91e98c156533" translate="yes" xml:space="preserve">
          <source>Differential loading is currently only supported when using &lt;code&gt;es2015&lt;/code&gt; as a compilation &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt;. When used with targets higher than &lt;code&gt;es2015&lt;/code&gt;, a warning is emitted during build time.</source>
          <target state="translated">차동로드는 현재 &lt;code&gt;es2015&lt;/code&gt; 를 컴파일 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 으로 사용하는 경우에만 지원됩니다 . &lt;code&gt;es2015&lt;/code&gt; 보다 높은 대상과 함께 사용하면 빌드 시간 동안 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="de3abd2ff8f1d873513f2c8097080de815c3dbc2" translate="yes" xml:space="preserve">
          <source>Differential loading is currently only supported when using &lt;code&gt;es2015&lt;/code&gt; as a compilation target. When used with targets higher than &lt;code&gt;es2015&lt;/code&gt;, the build process emits a warning.</source>
          <target state="translated">차동로드는 현재 &lt;code&gt;es2015&lt;/code&gt; 를 컴파일 대상으로 사용할 때만 지원됩니다 . &lt;code&gt;es2015&lt;/code&gt; 보다 높은 대상과 함께 사용 하면 빌드 프로세스가 경고를 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="17198706561cb331fc3c7bb7190d791c80826666" translate="yes" xml:space="preserve">
          <source>Differential loading is supported by default with version 8 and later of the Angular CLI. For each application project in your workspace, you can configure how builds are produced based on the &lt;code&gt;browserslist&lt;/code&gt; and &lt;code&gt;tsconfig.json&lt;/code&gt; files in your application project.</source>
          <target state="translated">차등 로딩은 기본적으로 버전 8 이상의 Angular CLI에서 지원됩니다. 작업 공간의 각 애플리케이션 프로젝트에 대해 애플리케이션 프로젝트의 &lt;code&gt;browserslist&lt;/code&gt; 및 &lt;code&gt;tsconfig.json&lt;/code&gt; 파일을 기반으로 빌드 작성 방법을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58150dc76bf26b88c5c5b48baaa6443ba5314f52" translate="yes" xml:space="preserve">
          <source>Direct use of the DOM APIs and explicit sanitization calls</source>
          <target state="translated">DOM API 및 명시 적 살균 호출 직접 사용</target>
        </trans-unit>
        <trans-unit id="164e0b79063f11a2936cf830fb48b8c7054cc118" translate="yes" xml:space="preserve">
          <source>Directive</source>
          <target state="translated">Directive</target>
        </trans-unit>
        <trans-unit id="e4adaa9d656e11f46881b340967de4f601ead5c8" translate="yes" xml:space="preserve">
          <source>Directive and component change detection and lifecycle hooks</source>
          <target state="translated">지시문 및 구성 요소 변경 감지 및 수명주기 후크</target>
        </trans-unit>
        <trans-unit id="1682fe77c47d222324b0302bf367d45dd3f72f4c" translate="yes" xml:space="preserve">
          <source>Directive and component instances have a lifecycle as Angular creates, updates, and destroys them. Developers can tap into key moments in that lifecycle by implementing one or more of the &lt;em&gt;lifecycle hook&lt;/em&gt; interfaces in the Angular &lt;code&gt;core&lt;/code&gt; library.</source>
          <target state="translated">지시문 및 구성 요소 인스턴스는 Angular가 인스턴스를 생성, 업데이트 및 파기 할 때 수명주기를 갖습니다. 개발자는 Angular &lt;code&gt;core&lt;/code&gt; 라이브러리 에서 하나 이상의 &lt;em&gt;라이프 사이클 후크&lt;/em&gt; 인터페이스를 구현하여 해당 라이프 사이클의 주요 순간을 활용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2654c073ed5bef1dd759fe92dd6b281c300cd6b" translate="yes" xml:space="preserve">
          <source>Directive automatically applied to Angular form controls that sets CSS classes based on control status.</source>
          <target state="translated">지시문은 제어 상태에 따라 CSS 클래스를 설정하는 각도 양식 제어에 자동으로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="75747f644b900a5f32ad06d340d4e026bf285acd" translate="yes" xml:space="preserve">
          <source>Directive automatically applied to Angular form groups that sets CSS classes based on control status (valid/invalid/dirty/etc).</source>
          <target state="translated">제어 상태 (유효 / 무효 / 더러운 / 등)에 따라 CSS 클래스를 설정하는 각도 양식 그룹에 지시문이 자동으로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="1fd55803370b29f5f55ad4e143686d9104e72374" translate="yes" xml:space="preserve">
          <source>Directive classes, like component classes, can implement &lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;life-cycle hooks&lt;/a&gt; to influence their configuration and behavior.</source>
          <target state="translated">구성 요소 클래스와 같은 지시문 클래스 는 구성 및 동작에 영향을 &lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;주기&lt;/a&gt; 위해 수명주기 후크 를 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7a712e56a0e276f0e4a48dc5e00f75907a458cd" translate="yes" xml:space="preserve">
          <source>Directive configuration</source>
          <target state="translated">지시어 구성</target>
        </trans-unit>
        <trans-unit id="faa9397afbd793cccd58be80adb509a96a8af6c4" translate="yes" xml:space="preserve">
          <source>Directive custom prefix</source>
          <target state="translated">지시문 사용자 정의 접두사</target>
        </trans-unit>
        <trans-unit id="1731bdcdbdffa1afa963e4872f9861768196adf1" translate="yes" xml:space="preserve">
          <source>Directive selectors</source>
          <target state="translated">지시어 선택기</target>
        </trans-unit>
        <trans-unit id="233b1dbe21adf04a0e287966365f0552786ce49b" translate="yes" xml:space="preserve">
          <source>Directive spelling</source>
          <target state="translated">지시어 철자</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="134c65a3c9a1183f4e598f629537b52066c32c08" translate="yes" xml:space="preserve">
          <source>Directives and binding markup in a component's template modify views based on program data and logic.</source>
          <target state="translated">구성 요소 템플리트의 지시문 및 바인딩 마크 업은 프로그램 데이터 및 논리에 따라보기를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="06b50e6029735d84376f972c0295eb92cee93b36" translate="yes" xml:space="preserve">
          <source>Directives are &lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;declarables&lt;/a&gt;. They must be declared by an NgModule in order to be usable in an app.</source>
          <target state="translated">지시어는 &lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;선언 할 수&lt;/a&gt; 있습니다. 앱에서 사용하려면 NgModule에서 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="8bcaad152be1bbb16300fb098f14d0ff672bd855" translate="yes" xml:space="preserve">
          <source>Directives have lifecycle hooks too. A &lt;code&gt;SpyDirective&lt;/code&gt; can log when the element it spies upon is created or destroyed using the &lt;code&gt;ngOnInit&lt;/code&gt; and &lt;code&gt;ngOnDestroy&lt;/code&gt; hooks.</source>
          <target state="translated">지시문에도 수명주기 후크가 있습니다. &lt;code&gt;SpyDirective&lt;/code&gt; 는 요소가 생성 또는 소멸에 사용 스파이 로그온 할 때 &lt;code&gt;ngOnInit&lt;/code&gt; 및 &lt;code&gt;ngOnDestroy&lt;/code&gt; 후크.</target>
        </trans-unit>
        <trans-unit id="bd4e162d053d9047f8191ab23f8513d857e41080" translate="yes" xml:space="preserve">
          <source>Directives in the &lt;code&gt;@angular/forms&lt;/code&gt; package used to have &lt;code&gt;any[]&lt;/code&gt; as a type of validators and asyncValidators arguments in constructors. Now these arguments are properly typed, so if your code relies on directive constructor types it may require some updates to improve type safety. See &lt;a href=&quot;https://github.com/angular/angular/pull/38944&quot;&gt;PR 38994&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@angular/forms&lt;/code&gt; 패키지 의 지시문은 생성자에서 유효성 검사기 유형으로 &lt;code&gt;any[]&lt;/code&gt; 와 asyncValidators 인수 를 갖는 데 사용되었습니다 . 이제 이러한 인수가 올바르게 형식화되었으므로 코드가 지시문 생성자 형식에 의존하는 경우 형식 안전성을 향상시키기 위해 일부 업데이트가 필요할 수 있습니다. &lt;a href=&quot;https://github.com/angular/angular/pull/38944&quot;&gt;PR 38994를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97bea3fa344a86af3d956e5d588feb9cda5f972b" translate="yes" xml:space="preserve">
          <source>Directives overview</source>
          <target state="translated">지시문 개요</target>
        </trans-unit>
        <trans-unit id="26c94017c46cdc88d61d6923d8b0eddeaf91879d" translate="yes" xml:space="preserve">
          <source>Directives that are used in an exported module (but not exported themselves) are exported publicly (previously, the compiler would automatically write a private, aliased export that it could use its global knowledge to resolve downstream).</source>
          <target state="translated">내 보낸 모듈 (자체 내 보낸 것은 아님)에서 사용되는 지시문은 공개적으로 내 보냅니다 (이전에는 컴파일러가 글로벌 지식을 사용하여 다운 스트림을 해결할 수 있도록 별칭이 지정된 비공개 내보내기를 자동으로 작성했습니다).</target>
        </trans-unit>
        <trans-unit id="26592a9a2f4cddfbb4afebe8ce3df3718441afde" translate="yes" xml:space="preserve">
          <source>Directives that behave like &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; can declare that they want the same treatment by including a static member marker that is a signal to the template compiler to treat them like &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. This static member for &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; is:</source>
          <target state="translated">지시어처럼 행동하는 것이 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 은 처럼 그들을 치료하는 템플릿 컴파일러에 신호 정적 멤버 마커를 포함하여 그들이 같은 치료를한다고 선언 할 수 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 을 . &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 에 대한이 정적 멤버 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e413521484883d1b26956d0c108786e5176aee96" translate="yes" xml:space="preserve">
          <source>Directives typically raise custom events with an Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;. The directive creates an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; and exposes it as a property. The directive calls &lt;code&gt;EventEmitter.emit(payload)&lt;/code&gt; to fire an event, passing in a message payload, which can be anything. Parent directives listen for the event by binding to this property and accessing the payload through the &lt;code&gt;$event&lt;/code&gt; object.</source>
          <target state="translated">지시문은 일반적으로 Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter로&lt;/a&gt; 사용자 정의 이벤트를 발생 시킵니다. 지시문은 &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 를 작성하고 이를 특성으로 노출합니다. 지시문은 &lt;code&gt;EventEmitter.emit(payload)&lt;/code&gt; 를 호출 하여 이벤트를 발생시키고 메시지 페이로드를 전달합니다. 부모 지시문은이 속성에 바인딩하고 &lt;code&gt;$event&lt;/code&gt; 객체를 통해 페이로드에 액세스하여 이벤트를 수신 합니다.</target>
        </trans-unit>
        <trans-unit id="e162e9d83bd60ff3d908ebf32714d5b5149cc574" translate="yes" xml:space="preserve">
          <source>Directly enables or disables all usage analytics for the user, or prompts the user to set the status interactively, or sets the default status for the project.</source>
          <target state="translated">사용자에 대한 모든 사용 현황 분석을 직접 활성화 또는 비활성화하거나 대화식으로 상태를 설정하라는 메시지를 표시하거나 프로젝트의 기본 상태를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1e78a95d04636868cba604820332052c052f098e" translate="yes" xml:space="preserve">
          <source>Disable Angular's development mode, which turns off assertions and other checks within the framework.</source>
          <target state="translated">프레임 워크 내에서 어설 션 및 기타 검사를 해제하는 Angular의 개발 모드를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="c502fe3e92db5333454c3f52453a1907dc9251e6" translate="yes" xml:space="preserve">
          <source>Disable animations application-wide</source>
          <target state="translated">응용 프로그램 전체에서 애니메이션 비활성화</target>
        </trans-unit>
        <trans-unit id="b7dd4b431d218225482d12b809b87e3de7196683" translate="yes" xml:space="preserve">
          <source>Disable checking of a binding expression by surrounding the expression in a call to the &lt;a href=&quot;template-expression-operators&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; cast pseudo-function&lt;/a&gt;. The compiler treats it as a cast to the &lt;code&gt;any&lt;/code&gt; type just like in TypeScript when a &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; or &lt;code&gt;as any&lt;/code&gt; cast is used.</source>
          <target state="translated">&lt;a href=&quot;template-expression-operators&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; cast pseudo-function&lt;/a&gt; 에 대한 호출에서 표현식을 둘러 싸서 바인딩 표현식 검사를 비활성화 합니다 . 컴파일러는 &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;as any&lt;/code&gt; 캐스트가 사용될 때 TypeScript에서와 같이 &lt;code&gt;any&lt;/code&gt; 유형에 대한 캐스트로 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="fa498c6d7585475093bb59ac3e4d903e7d385155" translate="yes" xml:space="preserve">
          <source>Disable checking of a binding expression by surrounding the expression in a call to the &lt;a href=&quot;template-syntax&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; cast pseudo-function&lt;/a&gt;. The compiler treats it as a cast to the &lt;code&gt;any&lt;/code&gt; type just like in TypeScript when a &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; or &lt;code&gt;as any&lt;/code&gt; cast is used.</source>
          <target state="translated">&lt;a href=&quot;template-syntax&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; cast pseudo-function을&lt;/a&gt; 호출하여 표현식을 묶어 바인딩 표현식 검사를 비활성화 합니다 . 받는 캐스트와 같은 컴파일러 취급을 &lt;code&gt;any&lt;/code&gt; 단지 타이프 라이터처럼 입력 할 때 &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;as any&lt;/code&gt; 캐스트가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5fb8cdddd489a8d9ed5269e9075f3511c841c9dd" translate="yes" xml:space="preserve">
          <source>Disable strict null checks in Angular templates completely.</source>
          <target state="translated">Angular 템플릿에서 엄격한 null 검사를 완전히 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="3a3867cb253d30cffa4f5b7f2c23506910276794" translate="yes" xml:space="preserve">
          <source>Disable the &lt;strong&gt;Submit&lt;/strong&gt; button until the form is valid.</source>
          <target state="translated">양식이 유효 할 때까지 &lt;strong&gt;제출&lt;/strong&gt; 단추를 비활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="c941ff72a9b24436d3e952f909f1d7e77a6f5100" translate="yes" xml:space="preserve">
          <source>Disable the default XSRF protection.</source>
          <target state="translated">기본 XSRF 보호를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="eb9abe8b988d1d2892f78a259e71850606b0f9bf" translate="yes" xml:space="preserve">
          <source>Disable the form&amp;rsquo;s &lt;em&gt;Submit&lt;/em&gt; button until the form is valid.</source>
          <target state="translated">양식이 유효해질 때까지 양식의 &lt;em&gt;제출&lt;/em&gt; 단추를 비활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="47dd9d43d5f5f62cbd433b889406a52005ee82ec" translate="yes" xml:space="preserve">
          <source>Disabled controls are exempt from validation checks and are not included in the aggregate value of their ancestor controls.</source>
          <target state="translated">비활성화 된 컨트롤은 유효성 검사에서 제외되며 상위 컨트롤의 총계 값에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ae642a07e4ba465762a1b462bf162baf3a09029" translate="yes" xml:space="preserve">
          <source>Disables Angular tools.</source>
          <target state="translated">각도 도구를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="161f7e4cab69df56dfaa6ff79ced90206f307f8a" translate="yes" xml:space="preserve">
          <source>Disables automatic scroll restoration provided by the browser. See also &lt;a href=&quot;https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration&quot;&gt;window.history.scrollRestoration info&lt;/a&gt;.</source>
          <target state="translated">브라우저가 제공하는 자동 스크롤 복원을 비활성화합니다. &lt;a href=&quot;https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration&quot;&gt;window.history.scrollRestoration info&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7239e7edb443b9ef5c9fec4a7006576b15faeffb" translate="yes" xml:space="preserve">
          <source>Disables the control. This means the control is exempt from validation checks and excluded from the aggregate value of any parent. Its status is &lt;code&gt;DISABLED&lt;/code&gt;.</source>
          <target state="translated">컨트롤을 비활성화합니다. 이는 컨트롤이 유효성 검사에서 제외되고 모든 상위의 집계 값에서 제외됨을 의미합니다. 상태는 &lt;code&gt;DISABLED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="49e06b6442e79995b5aa5867bdc26cb341c23f1c" translate="yes" xml:space="preserve">
          <source>Disabling Animations</source>
          <target state="translated">애니메이션 비활성화</target>
        </trans-unit>
        <trans-unit id="f3b4e520315f40e64f137fc24078069b1c75376b" translate="yes" xml:space="preserve">
          <source>Disabling all animations</source>
          <target state="translated">모든 애니메이션 비활성화</target>
        </trans-unit>
        <trans-unit id="fa56a5729e4b504e45afd1c5470855dbccf0c4c0" translate="yes" xml:space="preserve">
          <source>Disabling an animation on an HTML element</source>
          <target state="translated">HTML 요소에서 애니메이션 비활성화</target>
        </trans-unit>
        <trans-unit id="1c34c40ced0ea58defc7d87903d8f5e5a3c5df00" translate="yes" xml:space="preserve">
          <source>Disabling type checking using &lt;code&gt;$any()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$any()&lt;/code&gt; 사용하여 유형 검사 비활성화</target>
        </trans-unit>
        <trans-unit id="2cdfcdd1a412a8c6a67bac7adc1e32bbe75bc366" translate="yes" xml:space="preserve">
          <source>Disallow &lt;code&gt;local-part&lt;/code&gt; (the part before the &lt;code&gt;@&lt;/code&gt; symbol) to begin or end with a period (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">금지 &lt;code&gt;local-part&lt;/code&gt; (전과 부분 &lt;code&gt;@&lt;/code&gt; 의 시작 또는 기간이 종료하는 기호) ( &lt;code&gt;.&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e8edb13b82dcb96a8fe82f7bae4cd7f33b470b95" translate="yes" xml:space="preserve">
          <source>Disallow &lt;code&gt;local-part&lt;/code&gt; to be longer than 64 characters.</source>
          <target state="translated">허용 안 &lt;code&gt;local-part&lt;/code&gt; 64 자 이하 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6acc3c163f352ae3c5fcd3ac0f7d7a67ce1d0f50" translate="yes" xml:space="preserve">
          <source>Disallow the whole address to be longer than 254 characters.</source>
          <target state="translated">전체 주소가 254자를 초과 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="17e601d66c409630ceeac0a0e471360854bc32fa" translate="yes" xml:space="preserve">
          <source>Discard all remaining periodic tasks.</source>
          <target state="translated">남아있는 모든 주기적 작업을 폐기하십시오.</target>
        </trans-unit>
        <trans-unit id="27ff848437a6047575269ca76c310fc72e880c3d" translate="yes" xml:space="preserve">
          <source>Disclaimer: Dates are offered as general guidance and will be adjusted by us when necessary to ensure delivery of a high-quality platform.</source>
          <target state="translated">면책 조항 : 날짜는 일반적인 지침으로 제공되며 고품질 플랫폼을 제공하기 위해 필요한 경우 당사에서 조정합니다.</target>
        </trans-unit>
        <trans-unit id="413c48586a41c6e13f4f84647a0a8c96368993ad" translate="yes" xml:space="preserve">
          <source>Disclaimer: The dates are offered as general guidance and may be adjusted by us when necessary to ensure delivery of a high-quality platform.</source>
          <target state="translated">면책 조항 : 날짜는 일반적인 지침으로 제공되며 고품질 플랫폼을 제공하기 위해 필요할 때 조정될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fb937b602b4f2ef21c7fab00ac15de3b3ba49ea" translate="yes" xml:space="preserve">
          <source>Discussion</source>
          <target state="translated">Discussion</target>
        </trans-unit>
        <trans-unit id="6e8d5a186dc622a3626ee7e4c637ddf280fc7288" translate="yes" xml:space="preserve">
          <source>Display a Heroes List</source>
          <target state="translated">영웅 목록 표시</target>
        </trans-unit>
        <trans-unit id="d09718b254612bcd98c527cdae5927716a254664" translate="yes" xml:space="preserve">
          <source>Display a selection list</source>
          <target state="translated">선택 목록 표시</target>
        </trans-unit>
        <trans-unit id="50ab06bc90999c25d476ad86b84dbf4119bc834a" translate="yes" xml:space="preserve">
          <source>Display additional details about internal operations during execution.</source>
          <target state="translated">실행 중 내부 작업에 대한 추가 정보를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="936697d64458ff8ca788647c7b0045284d1aa4df" translate="yes" xml:space="preserve">
          <source>Display the cart items</source>
          <target state="translated">장바구니 품목 표시</target>
        </trans-unit>
        <trans-unit id="dfa86afacc9fd4bee56e5c9b2e4c921a1bdc9fe2" translate="yes" xml:space="preserve">
          <source>Display the cart items.</source>
          <target state="translated">장바구니 항목을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="12934993315662c08dc332b832a6fcfe68bd9435" translate="yes" xml:space="preserve">
          <source>Display the current status of &lt;code&gt;profileForm&lt;/code&gt; using interpolation.</source>
          <target state="translated">보간을 사용하여 &lt;code&gt;profileForm&lt;/code&gt; 의 현재 상태를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="a71eb74b057514c0e70e19d067ae99e621eb5b34" translate="yes" xml:space="preserve">
          <source>Display the form</source>
          <target state="translated">양식 표시</target>
        </trans-unit>
        <trans-unit id="a53cc6555efa0ad0290f5ac683dc5f839d979143" translate="yes" xml:space="preserve">
          <source>Display the form array in a template.</source>
          <target state="translated">템플릿에 양식 배열을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="293c04f1dc27393bab94e0e1df1f4a5820a7e2a8" translate="yes" xml:space="preserve">
          <source>Display the message from &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; 의 메시지 표시</target>
        </trans-unit>
        <trans-unit id="8391500f52f913bef2f5436777cabddfd5197d63" translate="yes" xml:space="preserve">
          <source>Display the new product alert component as a child of the product list.</source>
          <target state="translated">새 제품 경고 구성 요소를 제품 목록의 하위로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="26ac8e342c916304fc61037d8105baf99edd4c3e" translate="yes" xml:space="preserve">
          <source>Display validation errors to users and enable or disable form controls based on the form status.</source>
          <target state="translated">사용자에게 유효성 검사 오류를 표시하고 양식 상태에 따라 양식 컨트롤을 활성화 또는 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="187db4f52e17ecfca5ae1efe1dac6099dd2a3091" translate="yes" xml:space="preserve">
          <source>Display validation errors to users and enable/disable form controls.</source>
          <target state="translated">사용자에게 유효성 검사 오류를 표시하고 양식 컨트롤을 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="64e4975e075a85e6e6486a7508b2006fea68b3d0" translate="yes" xml:space="preserve">
          <source>Displayed text is sometimes supplied as the value of an attribute, rather than the content of tag. For example, if your template has an image with a &lt;code&gt;title&lt;/code&gt; attribute, the text value of the &lt;code&gt;title&lt;/code&gt; attribute needs to be translated.</source>
          <target state="translated">표시되는 텍스트는 때때로 태그의 내용이 아닌 속성의 값으로 제공됩니다. 템플릿이 포함 된 이미지가있는 경우 예를 들어, &lt;code&gt;title&lt;/code&gt; 속성을의 텍스트 값 &lt;code&gt;title&lt;/code&gt; 속성 요구는 번역합니다.</target>
        </trans-unit>
        <trans-unit id="f76593be8dd0141a5ddaffd2686e576e08afc5b7" translate="yes" xml:space="preserve">
          <source>Displaying Data</source>
          <target state="translated">데이터 표시</target>
        </trans-unit>
        <trans-unit id="5e6ea7b73ace73f546509526adcb804d71a19f83" translate="yes" xml:space="preserve">
          <source>Displaying a 404 page</source>
          <target state="translated">404 페이지 표시</target>
        </trans-unit>
        <trans-unit id="3382d66116a9a6c0577e8a5ed1325809b441a626" translate="yes" xml:space="preserve">
          <source>Displaying a code fragment</source>
          <target state="translated">코드 조각 표시</target>
        </trans-unit>
        <trans-unit id="a3d4457b2aebe7498f3aec39f2bcb0dfa5ebf35f" translate="yes" xml:space="preserve">
          <source>Displaying a form control value</source>
          <target state="translated">폼 컨트롤 값 표시</target>
        </trans-unit>
        <trans-unit id="ec7d1c82071d7dc99c5bd5ebb23d191f80fdd12b" translate="yes" xml:space="preserve">
          <source>Displaying dates, number, percentages, and currencies in a local format.</source>
          <target state="translated">날짜, 숫자, 백분율 및 통화를 현지 형식으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c9fb97d71900591a885c42ac4de47f4b8ce3cb66" translate="yes" xml:space="preserve">
          <source>Displaying form status</source>
          <target state="translated">양식 상태 표시</target>
        </trans-unit>
        <trans-unit id="9a81501c320e1623a9a0ece8fddf13ed90c88c68" translate="yes" xml:space="preserve">
          <source>Displaying heroes</source>
          <target state="translated">영웅 표시</target>
        </trans-unit>
        <trans-unit id="3e10904e7cc24806178428e12412202d516a97ad" translate="yes" xml:space="preserve">
          <source>Displaying multiple routes in named outlets</source>
          <target state="translated">명명 된 콘센트에 여러 경로 표시</target>
        </trans-unit>
        <trans-unit id="437c35fd09d5880b944f92117bf1891a887a73a2" translate="yes" xml:space="preserve">
          <source>Displaying the component</source>
          <target state="translated">구성 요소 표시</target>
        </trans-unit>
        <trans-unit id="87a45e164b445cbb2662704d3bf176b7ed450902" translate="yes" xml:space="preserve">
          <source>Displaying the first page quickly can be critical for user engagement. &lt;a href=&quot;https://www.thinkwithgoogle.com/marketing-resources/data-measurement/mobile-page-speed-new-industry-benchmarks/&quot;&gt;53 percent of mobile site visits are abandoned&lt;/a&gt; if pages take longer than 3 seconds to load. Your app may have to launch faster to engage these users before they decide to do something else.</source>
          <target state="translated">첫 페이지를 빠르게 표시하는 것은 사용자 참여에 중요 할 수 있습니다. 페이지를로드하는 데 3 초 이상이 걸리면 &lt;a href=&quot;https://www.thinkwithgoogle.com/marketing-resources/data-measurement/mobile-page-speed-new-industry-benchmarks/&quot;&gt;모바일 사이트 방문의 53 %가 중단&lt;/a&gt; 됩니다. 이러한 사용자가 다른 작업을 수행하기 전에 참여하도록 앱을 더 빨리 시작해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3018fd14cb6dbd43a38a8c8b612c385bb6ce4a07" translate="yes" xml:space="preserve">
          <source>Displaying the first page quickly can be critical for user engagement. Pages that load faster perform better, &lt;a href=&quot;https://web.dev/shopping-for-speed-on-ebay/&quot;&gt;even with changes as small as 100ms&lt;/a&gt;. Your app may have to launch faster to engage these users before they decide to do something else.</source>
          <target state="translated">첫 페이지를 빠르게 표시하는 것은 사용자 참여에 중요 할 수 있습니다. 더 빨리로드되는 페이지는 &lt;a href=&quot;https://web.dev/shopping-for-speed-on-ebay/&quot;&gt;변경 사항이 100ms만큼 작아도&lt;/a&gt; 성능이 향상 됩니다 . 이러한 사용자가 다른 작업을하기 전에 앱을 더 빨리 실행해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be6aac75dad35c792e30b1727ff36040ea8fd75b" translate="yes" xml:space="preserve">
          <source>Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees that match the switch expression's pluralization category.</source>
          <target state="translated">스위치 표현식 값과 일치하는 DOM 하위 트리를 표시하거나 스위치 표현식의 복수화 범주와 일치하는 DOM 하위 트리를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4a726d949246170017d0159180d56c3cdb4d23e0" translate="yes" xml:space="preserve">
          <source>Displays a message that the product has been added to the cart</source>
          <target state="translated">제품이 장바구니에 추가되었다는 메시지를 표시합니다</target>
        </trans-unit>
        <trans-unit id="3fd258589ec3413ce0934a63592705f8199a5271" translate="yes" xml:space="preserve">
          <source>Displays a message that you've added a product to the cart.</source>
          <target state="translated">장바구니에 제품을 추가했다는 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="15d60f9bd1f4d59065ade7eb83ac01154729d53b" translate="yes" xml:space="preserve">
          <source>Displays the application component for the active URL. Manages navigation from one component to the next.</source>
          <target state="translated">활성 URL의 응용 프로그램 구성 요소를 표시합니다. 한 구성 요소에서 다음 구성 요소로의 탐색을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="b75673d407de8304eb7361d00582b1562567807f" translate="yes" xml:space="preserve">
          <source>Displays the collection in the order specified by the expression. In this example, the movie title orders the &lt;code&gt;movieList&lt;/code&gt;.</source>
          <target state="translated">식으로 지정된 순서대로 컬렉션을 표시합니다. 이 예제에서 영화 제목은 &lt;code&gt;movieList&lt;/code&gt; 를 주문합니다 .</target>
        </trans-unit>
        <trans-unit id="4f25bbe16efc9f89794f9928c10c073638f3c99c" translate="yes" xml:space="preserve">
          <source>Dispose of running hybrid AngularJS / Angular application.</source>
          <target state="translated">하이브리드 AngularJS / Angular 애플리케이션을 실행하여 폐기하십시오.</target>
        </trans-unit>
        <trans-unit id="5f8ab14727ef35723fd40bc395d5a15a9eb1136f" translate="yes" xml:space="preserve">
          <source>Disposes of the router.</source>
          <target state="translated">라우터를 폐기합니다.</target>
        </trans-unit>
        <trans-unit id="b6da7cb7884b114d486da57635c6c0cf7a201e60" translate="yes" xml:space="preserve">
          <source>Distributing the Angular compiler as a plugin of the TypeScript compiler will substantially improve developers' build performance and reduce maintenance costs.</source>
          <target state="translated">Angular 컴파일러를 TypeScript 컴파일러의 플러그인으로 배포하면 개발자의 빌드 성능이 크게 향상되고 유지 관리 비용이 절감됩니다.</target>
        </trans-unit>
        <trans-unit id="08c2a554ac7554886705572fdeb828f2042d79a9" translate="yes" xml:space="preserve">
          <source>Dive deeper into the capabilities and advanced feature of the Angular DI system in the following pages:</source>
          <target state="translated">다음 페이지에서 Angular DI 시스템의 기능과 고급 기능에 대해 자세히 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="03779f03f1f9115d62b4f94d8a480686fae463e3" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; declare the following:</source>
          <target state="translated">마십시오 &lt;em&gt;하지&lt;/em&gt; 다음을 선언 :</target>
        </trans-unit>
        <trans-unit id="2475d66e74a14160938453ef0e85c7c2d0d851ed" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; reference the &lt;code&gt;userServiceStub&lt;/code&gt; object that's provided to the testing module in the body of your test. &lt;strong&gt;It does not work!&lt;/strong&gt; The &lt;code&gt;userService&lt;/code&gt; instance injected into the component is a completely &lt;em&gt;different&lt;/em&gt; object, a clone of the provided &lt;code&gt;userServiceStub&lt;/code&gt;.</source>
          <target state="translated">마십시오 &lt;em&gt;하지&lt;/em&gt; 참조 &lt;code&gt;userServiceStub&lt;/code&gt; 의 테스트의 본문에 테스트 모듈에 제공하는 것 개체를. &lt;strong&gt;작동하지 않습니다! &lt;/strong&gt; &lt;code&gt;userService&lt;/code&gt; 의 구성 요소에 주입 인스턴스는 완전히 &lt;em&gt;다른&lt;/em&gt; 목적은 설치의 복제 &lt;code&gt;userServiceStub&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12870bcd74aac23d50d0b29f666f89ec81c28f1f" translate="yes" xml:space="preserve">
          <source>Do a change detection run to make sure there are no pending changes. Throws an exceptions if there are.</source>
          <target state="translated">변경 감지 실행을 수행하여 보류중인 변경이 없는지 확인하십시오. 있을 경우 예외를 던집니다.</target>
        </trans-unit>
        <trans-unit id="eb2dc836b8c593cdbd90fa95783598016fcbf09f" translate="yes" xml:space="preserve">
          <source>Do a change detection run to make sure there were no changes.</source>
          <target state="translated">변경 감지 실행을 수행하여 변경이 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2313636875302c5d743751b15211e002d72e6da2" translate="yes" xml:space="preserve">
          <source>Do not create a node that is both a &lt;em&gt;header&lt;/em&gt; and an &lt;em&gt;item&lt;/em&gt; node. That is, do not specify the &lt;code&gt;url&lt;/code&gt; property of a &lt;em&gt;header&lt;/em&gt; node.</source>
          <target state="translated">&lt;em&gt;헤더&lt;/em&gt; 및 &lt;em&gt;항목&lt;/em&gt; 노드 인 노드를 작성하지 마십시오 . 즉, &lt;em&gt;헤더&lt;/em&gt; 노드 의 &lt;code&gt;url&lt;/code&gt; 속성을 지정하지 마십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faa0a4df964bbffd5263e64e7f24f3bd50f08908" translate="yes" xml:space="preserve">
          <source>Do not depend on this.</source>
          <target state="translated">이것에 의존하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="1347b0bda514ee25e75111d5f7406049b122ac68" translate="yes" xml:space="preserve">
          <source>Do not import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; in any other module. &lt;em&gt;Feature modules&lt;/em&gt; and &lt;em&gt;lazy-loaded modules&lt;/em&gt; should import &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; instead. They need the common directives. They don't need to re-install the app-wide providers.</source>
          <target state="translated">다른 모듈에서 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 을 가져 오지 마십시오 . &lt;em&gt;기능 모듈&lt;/em&gt; 및 &lt;em&gt;지연로드 모듈&lt;/em&gt; 은 대신 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 을 가져와야 합니다. 공통 지시문이 필요합니다. 앱 전체 공급자를 다시 설치할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="b53aacf7cfdb75cab36ee91ea58b40ba72ec414f" translate="yes" xml:space="preserve">
          <source>Do not re-configure &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; after calling &lt;code&gt;createComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createComponent&lt;/code&gt; 를 호출 한 후 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 를 재구성하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="8a23b6ef2227e6ccff39230682cb9bbb0db07d40" translate="yes" xml:space="preserve">
          <source>Do not re-configure the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; after calling &lt;code&gt;compileComponents()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compileComponents()&lt;/code&gt; 호출 한 후 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 를 다시 구성하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="766289fcaf6f3358a5de785cef51decc48e7fed0" translate="yes" xml:space="preserve">
          <source>Do not refer to ambient types in metadata expressions.</source>
          <target state="translated">메타 데이터 표현식에서 앰비언트 유형을 참조하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="d6405f3e12cf5c79eef4bce2326b3e7580784498" translate="yes" xml:space="preserve">
          <source>Do not retry &lt;strong&gt;authentication&lt;/strong&gt; requests, since these should only be initiated by user action. We don't want to lock out user accounts with repeated login requests that the user has not initiated.</source>
          <target state="translated">&lt;strong&gt;인증&lt;/strong&gt; 요청은 사용자 조치로 시작해야하므로 &lt;strong&gt;인증&lt;/strong&gt; 요청을 재 시도하지 마십시오 . 사용자가 시작하지 않은 반복 된 로그인 요청으로 사용자 계정을 잠그고 싶지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28a19ab23e9fe883d6e7f97200affa843fe8c5f9" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; in the same spec as &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용하지 마십시오 &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; 를 같은 사양에 &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a5db8d50567ea1e510a8a39e340d4f4053b0f11" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; in the same spec as &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용하지 마십시오 &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; 를 같은 사양에 &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2335b0f690b63608971fef94146a83235635e315" translate="yes" xml:space="preserve">
          <source>Do not use the real path when resolving modules.</source>
          <target state="translated">모듈을 확인할 때 실제 경로를 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="7349e20f9641df56be64c229cc31b086928d6118" translate="yes" xml:space="preserve">
          <source>Do not use the real path when resolving modules. If unset then will default to &lt;code&gt;true&lt;/code&gt; if NodeJS option --preserve-symlinks is set.</source>
          <target state="translated">모듈을 확인할 때 실제 경로를 사용하지 마십시오. 설정되지 않은 경우 NodeJS 옵션 --preserve-symlinks가 설정된 경우 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e79dc690e68fe885deb4f02b28c242039901b6e5" translate="yes" xml:space="preserve">
          <source>Do not use this in a production server environment. Use pre-compiled &lt;a href=&quot;../core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;rendermodulefactory&quot;&gt;&lt;code&gt;renderModuleFactory&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">프로덕션 서버 환경에서는 이것을 사용하지 마십시오. 대신 사전 컴파일 된 &lt;a href=&quot;../core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;rendermodulefactory&quot;&gt; &lt;code&gt;renderModuleFactory&lt;/code&gt; &lt;/a&gt; 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e95b4a5123622bbdb2e193331691ccb1de8fa81e" translate="yes" xml:space="preserve">
          <source>Do this by injecting the router and logging to the console its &lt;code&gt;config&lt;/code&gt; property. For example, update the &lt;code&gt;AppModule&lt;/code&gt; as follows and look in the browser console window to see the finished route configuration.</source>
          <target state="translated">라우터를 삽입하고 &lt;code&gt;config&lt;/code&gt; 속성을 콘솔에 기록하면됩니다 . 예를 들어 다음과 같이 &lt;code&gt;AppModule&lt;/code&gt; 을 업데이트하고 브라우저 콘솔 창에서 완료된 경로 구성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="63af3a5e4c9dc50cfdde2fcbffecebe94bfb4d50" translate="yes" xml:space="preserve">
          <source>Do this only in the beginning to avoid accidentally deleting your own tests and git setup!</source>
          <target state="translated">실수로 자신의 테스트 및 git 설정을 삭제하지 않도록 처음에만이 작업을 수행하십시오!</target>
        </trans-unit>
        <trans-unit id="20cca558f89d5711c8f3da0efc9477ae18de9033" translate="yes" xml:space="preserve">
          <source>Do this with the &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;checkForUpdate()&lt;/a&gt;&lt;/code&gt; method:</source>
          <target state="translated">으로이 작업을 수행 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;checkForUpdate()&lt;/a&gt;&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="a1eb87263601a93da06dcb27bb7561ee33d2bc4d" translate="yes" xml:space="preserve">
          <source>Do this with the &lt;code&gt;checkForUpdate()&lt;/code&gt; method:</source>
          <target state="translated">으로이 작업을 수행 &lt;code&gt;checkForUpdate()&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="78ddf7d15d9eadd3b6e0343a1c6248aa24d007b7" translate="yes" xml:space="preserve">
          <source>Do you need a &lt;code&gt;Routing Module&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;Routing Module&lt;/code&gt; 이 필요하십니까 ?</target>
        </trans-unit>
        <trans-unit id="974e4b1b193a71bcf82334316bb8290d4d24ce87" translate="yes" xml:space="preserve">
          <source>DoBootstrap</source>
          <target state="translated">DoBootstrap</target>
        </trans-unit>
        <trans-unit id="531f9022ed7522c3f7c2f8318631044b8f144ea4" translate="yes" xml:space="preserve">
          <source>DoCheck</source>
          <target state="translated">DoCheck</target>
        </trans-unit>
        <trans-unit id="fe56da291c49fe9ffdba4c0121544e151ccd5dda" translate="yes" xml:space="preserve">
          <source>Doc generation and tooling</source>
          <target state="translated">문서 생성 및 툴링</target>
        </trans-unit>
        <trans-unit id="361f1ffb11dfb67636a5555ed11bf9006ff5ddec" translate="yes" xml:space="preserve">
          <source>Document.querySelector()</source>
          <target state="translated">Document.querySelector()</target>
        </trans-unit>
        <trans-unit id="6b23b8dc766283282a9dd088b77fbc4505a2bac3" translate="yes" xml:space="preserve">
          <source>Documentation for using Bazel for frontend projects is linked from &lt;a href=&quot;https://docs.bazel.build/versions/master/bazel-and-javascript.html&quot;&gt;https://docs.bazel.build/versions/master/bazel-and-javascript.html&lt;/a&gt;.</source>
          <target state="translated">프론트 엔드 프로젝트에 Bazel을 사용하기위한 문서는 &lt;a href=&quot;https://docs.bazel.build/versions/master/bazel-and-javascript.html&quot;&gt;https://docs.bazel.build/versions/master/bazel-and-javascript.html&lt;/a&gt; 에서 링크됩니다 .</target>
        </trans-unit>
        <trans-unit id="636ed57eb2bb3515c8353809df42914e3c29dec9" translate="yes" xml:space="preserve">
          <source>Does &lt;strong&gt;not&lt;/strong&gt; declare components.</source>
          <target state="translated">않습니다 &lt;strong&gt;하지&lt;/strong&gt; 구성 요소를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="7cbd179f94380994e248d01aed9e9b9bcf8589a6" translate="yes" xml:space="preserve">
          <source>Does NOT alter text nodes inside HTML tags such as &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;a href=&quot;../forms/defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt;, where whitespace characters are significant.</source>
          <target state="translated">공백 문자가 중요한 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;&lt;a href=&quot;../forms/defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt; 와 같은 HTML 태그 내의 텍스트 노드를 변경하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="a6f9a8d25bcb5dd0d13fe369e2aa45e766e4b1af" translate="yes" xml:space="preserve">
          <source>Does not declare components.</source>
          <target state="translated">구성 요소를 선언하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="624064fe82af064c5846c4c65db2781b410f7f8b" translate="yes" xml:space="preserve">
          <source>Does not retrieve elements or directives that are in other components' templates, since a component's template is always a black box to its ancestors.</source>
          <target state="translated">구성 요소의 템플릿은 항상 조상의 블랙 박스이므로 다른 구성 요소의 템플릿에있는 요소 나 지시문을 검색하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ffc672431583e55590e23024e3b6210dab8403c" translate="yes" xml:space="preserve">
          <source>Does not support configuration.</source>
          <target state="translated">구성을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c74588ae83c3abe096ca0998ef59559ef0320224" translate="yes" xml:space="preserve">
          <source>Does not support parent-child relationship selectors.</source>
          <target state="translated">부모-자식 관계 선택기를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c2c19c3e51742058705ab287b418c0f553709384" translate="yes" xml:space="preserve">
          <source>Doing so adds clarity to the code. But it's not technically necessary. Although &lt;code&gt;AlexComponent&lt;/code&gt; has a &lt;code&gt;name&lt;/code&gt; property, as required by its &lt;code&gt;Base&lt;/code&gt; class, its class signature doesn't mention &lt;code&gt;Parent&lt;/code&gt;.</source>
          <target state="translated">그렇게하면 코드가 명확 해집니다. 그러나 기술적으로 필요하지 않습니다. &lt;code&gt;AlexComponent&lt;/code&gt; 에는 &lt;code&gt;Base&lt;/code&gt; 클래스에 필요한 &lt;code&gt;name&lt;/code&gt; 속성 이 있지만 클래스 서명에는 &lt;code&gt;Parent&lt;/code&gt; 를 언급하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="651ab4cdc0cde42e12d6952e46d048642d9f36c3" translate="yes" xml:space="preserve">
          <source>Doing this could break lazy-loading into currently running apps, especially if the lazy-loaded chunks use filenames with hashes, which change every version.</source>
          <target state="translated">이렇게하면 현재 실행중인 앱으로 지연 로딩이 중단 될 수 있습니다. 특히 지연 로딩 된 청크가 파일 이름에 해시를 사용하는 경우 모든 버전이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="fe17586b8fdcc1f1c069a1a6eebd32cd0d75b66c" translate="yes" xml:space="preserve">
          <source>DomSanitizer</source>
          <target state="translated">DomSanitizer</target>
        </trans-unit>
        <trans-unit id="3e53d3f18b0d8a00e18fd9ab729b7a8fae48cac5" translate="yes" xml:space="preserve">
          <source>DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing values to be safe to use in the different DOM contexts.</source>
          <target state="translated">DomSanitizer는 다른 DOM 컨텍스트에서 안전하게 사용할 수 있도록 값을 삭제하여 사이트 간 스크립팅 보안 버그 (XSS)를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="9b10914d8b0a097ace7176e8973f5c3dee92bb44" translate="yes" xml:space="preserve">
          <source>Domain</source>
          <target state="translated">Domain</target>
        </trans-unit>
        <trans-unit id="089fd6be6c2252d97b7162df714a7581f5904b6d" translate="yes" xml:space="preserve">
          <source>Domain NgModules</source>
          <target state="translated">도메인 NgModules</target>
        </trans-unit>
        <trans-unit id="7122a40bc7c9d5363bac845b7cb27f71cca2a973" translate="yes" xml:space="preserve">
          <source>Domain NgModules consist mostly of declarations. You rarely include providers. If you do, the lifetime of the provided services should be the same as the lifetime of the NgModule.</source>
          <target state="translated">도메인 NgModules는 대부분 선언으로 구성됩니다. 제공자를 거의 포함하지 않습니다. 그렇게하면 제공된 서비스의 수명이 NgModule의 수명과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="edc93410256fe4bcfcc1daf46c49efa65723ce0c" translate="yes" xml:space="preserve">
          <source>Domain feature modules are typically imported exactly once by a larger feature module.</source>
          <target state="translated">도메인 기능 모듈은 일반적으로 더 큰 기능 모듈에서 정확히 한 번만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4fce94c654a674f436b255450f8d45d5c2630c5f" translate="yes" xml:space="preserve">
          <source>Domain feature modules consist mostly of declarations. Only the top component is exported.</source>
          <target state="translated">도메인 기능 모듈은 대부분 선언으로 구성됩니다. 최상위 구성 요소 만 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="7d1601315ef4f7067cbdc3059ff63048a59d715e" translate="yes" xml:space="preserve">
          <source>Domain feature modules deliver a user experience dedicated to a particular application domain like editing a customer or placing an order.</source>
          <target state="translated">도메인 기능 모듈은 고객 편집 또는 주문과 같은 특정 응용 프로그램 도메인 전용 사용자 환경을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8dbbc2071a2038f14ccfa4a11eb9ba7f08805721" translate="yes" xml:space="preserve">
          <source>Domain feature modules rarely have providers. When they do, the lifetime of the provided services should be the same as the lifetime of the module.</source>
          <target state="translated">도메인 기능 모듈에는 제공자가 거의 없습니다. 제공되는 서비스의 수명은 모듈의 수명과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="ef770887f44abfda530598989a0cab61a80d18d4" translate="yes" xml:space="preserve">
          <source>Domain feature modules.</source>
          <target state="translated">도메인 기능 모듈.</target>
        </trans-unit>
        <trans-unit id="cb3187aa0ca33ec2d7071c6bcfd338ee7a22f4bf" translate="yes" xml:space="preserve">
          <source>Domain-specific libraries</source>
          <target state="translated">도메인 별 라이브러리</target>
        </trans-unit>
        <trans-unit id="abde3fdb171993c14d3ae55105d06f6114f07e22" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t send a request if the value stays the same (rapidly hit a character, then backspace, for instance).</source>
          <target state="translated">값이 동일하게 유지되는 경우 요청을 보내지 마십시오 (예 : 문자를 급격히 누른 다음 백 스페이스).</target>
        </trans-unit>
        <trans-unit id="93de9a249143adbeeeb82cbc813b9ce310ec9d8a" translate="yes" xml:space="preserve">
          <source>Don't ascend to ancestors of the node requesting injection.</source>
          <target state="translated">주입을 요청하는 노드의 조상으로 올라가지 마십시오.</target>
        </trans-unit>
        <trans-unit id="ce77c0300b3a5f10444391a94340295523b51e8d" translate="yes" xml:space="preserve">
          <source>Don't bother re-exporting pure service modules. Pure service modules don't export &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable&lt;/a&gt; classes that another NgModule could use. For example, there's no point in re-exporting &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; because it doesn't export anything. Its only purpose is to add http service providers to the application as a whole.</source>
          <target state="translated">순수한 서비스 모듈을 다시 내보내는 것을 귀찮게하지 마십시오. 순수 서비스 모듈은 내 보내지 않습니다 &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;신고 할&lt;/a&gt; 또 다른 NgModule 사용할 수 클래스. 예를 들어, 아무것도 내 보내지 않기 때문에 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 을 다시 내보내는 데 아무런 의미가 없습니다. 유일한 목적은 http 서비스 제공자를 애플리케이션에 전체적으로 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="de7459ce733088a4853dc7ad49103da4bec3d417" translate="yes" xml:space="preserve">
          <source>Don't change the IDs for translation units. Each &lt;code&gt;id&lt;/code&gt; is generated by Angular and depends on the content of the template text and its assigned meaning. If you change either the text or the meaning, then the &lt;code&gt;id&lt;/code&gt; changes. For more about managing text updates and IDs, see the previous section on &lt;a href=&quot;i18n#custom-id&quot;&gt;custom IDs&lt;/a&gt;.</source>
          <target state="translated">번역 단위의 ID를 변경하지 마십시오. 각 &lt;code&gt;id&lt;/code&gt; 는 Angular에 의해 생성되며 템플릿 텍스트의 내용과 할당 된 의미에 따라 다릅니다. 텍스트 나 의미를 변경 하면 &lt;code&gt;id&lt;/code&gt; 변경됩니다. 텍스트 업데이트 및 ID 관리에 대한 자세한 내용은 &lt;a href=&quot;i18n#custom-id&quot;&gt;사용자 지정 ID&lt;/a&gt; 에 대한 이전 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6590e628737b5e6b0ef0760c4f85f662467acd91" translate="yes" xml:space="preserve">
          <source>Don't declare the following:</source>
          <target state="translated">다음을 선언하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9615d146789f79dc31aca9c405d7130f71c9e375" translate="yes" xml:space="preserve">
          <source>Don't do that here. If the &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; value were &lt;code&gt;'prefix'&lt;/code&gt;, &lt;em&gt;every&lt;/em&gt; URL would match &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">여기서하지 마십시오. 는 IF &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 의 값이 있었다 &lt;code&gt;'prefix'&lt;/code&gt; , &lt;em&gt;모든&lt;/em&gt; URL이 일치합니다 &lt;code&gt;''&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65a16276e33123e39c8a4d00d367506a93d1886b" translate="yes" xml:space="preserve">
          <source>Don't eagerly import something from a lazy-loaded module</source>
          <target state="translated">느리게로드 된 모듈에서 무언가를 열심히 가져 오지 마십시오.</target>
        </trans-unit>
        <trans-unit id="41bb59a523c9daf81e4a26d6a2e69fa45bb7816d" translate="yes" xml:space="preserve">
          <source>Don't export the following:</source>
          <target state="translated">다음을 내 보내지 마십시오.</target>
        </trans-unit>
        <trans-unit id="98def866f6784d12e1232d4ba1ac26d20f4f4320" translate="yes" xml:space="preserve">
          <source>Don't fetch data in a component constructor. You shouldn't worry that a new component will try to contact a remote server when created under test or before you decide to display it. Constructors should do no more than set the initial local variables to simple values.</source>
          <target state="translated">컴포넌트 생성자에서 데이터를 가져 오지 마십시오. 테스트 중에 작성하거나 표시하기로 결정하기 전에 새 구성 요소가 원격 서버에 접속을 시도 할까 걱정할 필요가 없습니다. 생성자는 초기 로컬 변수를 단순한 값으로 설정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="fc491bacf383f1a73e23a426a3e14781ff636809" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (*) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. It's a critical part of the syntax.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 앞의 별표 (*)를 잊지 마십시오 . 구문의 중요한 부분입니다.</target>
        </trans-unit>
        <trans-unit id="4f0559c481e0584bb38279fe9351ea488db1fca7" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (*) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. It's a critical part of the syntax.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 앞의 별표 (*)를 잊지 마십시오 . 구문의 중요한 부분입니다.</target>
        </trans-unit>
        <trans-unit id="29a6291a036d169f27297f2e33e8a14cf2cdb7bb" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (&lt;code&gt;*&lt;/code&gt;) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. For more information on the asterisk, see the &lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;asterisk (*) prefix&lt;/a&gt; section of &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 앞의 별표 ( &lt;code&gt;*&lt;/code&gt; )를 잊지 마세요 . 별표에 대한 자세한 내용 은 &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt; 의 &lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;별표 (*) 접두사&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5940c21ded73420d9560fb5d88d6ba510bc7cd5" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (&lt;code&gt;*&lt;/code&gt;) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. For more information on the asterisk, see the &lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;asterisk (*) prefix&lt;/a&gt; section of &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 앞의 별표 ( &lt;code&gt;*&lt;/code&gt; )를 잊지 마십시오 . 별표에 대한 자세한 내용 은 &lt;a href=&quot;structural-directives&quot;&gt;구조 지시문&lt;/a&gt; 의 &lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;별표 (*) 접두사&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9d7069436c420884018ebec9bd644a89641d14d" translate="yes" xml:space="preserve">
          <source>Don't forget the leading asterisk (*) in &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. It is an essential part of the syntax. For more information, see the &lt;a href=&quot;template-syntax#ngFor&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 에서 별표 (*)를 잊지 마십시오 . 구문의 필수 부분입니다. 자세한 내용은 &lt;a href=&quot;template-syntax#ngFor&quot;&gt;템플릿 구문&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f88961494e42906518ac773630f15b9ea4c9613" translate="yes" xml:space="preserve">
          <source>Don't forget the leading asterisk (*) in &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. It is an essential part of the syntax. Read more about &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in the &lt;a href=&quot;template-syntax#ngIf&quot;&gt;ngIf section&lt;/a&gt; of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 의 선행 별표 (*)를 잊지 마십시오 . 구문의 필수 부분입니다. 에 대한 자세한 읽기 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;*&lt;/code&gt; 을 에 &lt;a href=&quot;template-syntax#ngIf&quot;&gt;ngIf 섹션&lt;/a&gt; 의 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="ed2cd99fb3ada47a82e704b07d25ee3a15f739a9" translate="yes" xml:space="preserve">
          <source>Don't import a lazy-loaded routed NgModule into another NgModule, as this would trigger an eager load, defeating the purpose of lazy loading.</source>
          <target state="translated">지연로드 된 라우팅 된 NgModule을 다른 NgModule로 가져 오지 마십시오. 이렇게하면 지연로드의 목적이 무효화되어 즉시로드가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="240c178f010ce6adf5d28fb137f1d1e68a75490c" translate="yes" xml:space="preserve">
          <source>Don't prefix &lt;code&gt;output&lt;/code&gt; properties</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 속성을 접두사로 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="8b73753946ee9fbedb2c567c98f11e350b60fde4" translate="yes" xml:space="preserve">
          <source>Don't provide any template or style encapsulation.</source>
          <target state="translated">템플릿 또는 스타일 캡슐화를 제공하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e72adae2dc825d3541b3718a85a12fb1bd2a25b3" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;--create-ivy-entry-points&lt;/code&gt; as this will cause Node not to resolve the Ivy version of the packages correctly.</source>
          <target state="translated">&lt;code&gt;--create-ivy-entry-points&lt;/code&gt; 를 사용하지 마십시오. 그러면 노드가 패키지의 Ivy 버전을 올바르게 해석하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="421f60c796355c0945865a559bb600139cb8022b" translate="yes" xml:space="preserve">
          <source>Don't use declarations in a routing NgModule. Components, directives, and pipes are the responsibility of the companion domain NgModule, not the routing NgModule.</source>
          <target state="translated">라우팅 NgModule에서 선언을 사용하지 마십시오. 구성 요소, 지시문 및 파이프는 라우팅 NgModule이 아니라 동반 도메인 NgModule의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="034cd612a1e6136ca10cbef73016d80fa0900bab" translate="yes" xml:space="preserve">
          <source>Don't verify connected clients are part of allowed hosts.</source>
          <target state="translated">연결된 클라이언트가 허용 된 호스트의 일부인지 확인하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="80b118003323fb9fdf485b6bd6d8bdfcc8308676" translate="yes" xml:space="preserve">
          <source>Down the road, you can inject a data service to get and save real data or perhaps expose these properties as inputs and outputs (see &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;Input and output properties&lt;/a&gt; on the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page) for binding to a parent component. This is not a concern now and these future changes won't affect the form.</source>
          <target state="translated">실제로 데이터 서비스를 주입하여 실제 데이터를 가져오고 저장하거나 이러한 속성을 부모 구성 요소에 바인딩하기위한 입력 및 출력 ( &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;입력 및 출력 속성&lt;/a&gt; 참조)으로 노출 할 수 있습니다 . 이것은 지금 걱정하지 않으며 앞으로의 이러한 변경은 양식에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0ccbe0bf2be8bc3e6b41de6c08f0a1498a381e54" translate="yes" xml:space="preserve">
          <source>Downgrading multiple modules</source>
          <target state="translated">여러 모듈 다운 그레이드</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="39c131f45fab5187e42e1e465465b4202e919c7c" translate="yes" xml:space="preserve">
          <source>Download and install the latest &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48593&quot;&gt;TypeScript for Visual Studio 2015&lt;/a&gt;,</source>
          <target state="translated">최신 &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48593&quot;&gt;Visual Studio 2015 용 TypeScript를&lt;/a&gt; 다운로드하여 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="b21a44d0dea536c166264bb02f56718f7d476d92" translate="yes" xml:space="preserve">
          <source>Download only</source>
          <target state="translated">다운로드 만</target>
        </trans-unit>
        <trans-unit id="55fd9611f7c571037e9909869ce233197def6aae" translate="yes" xml:space="preserve">
          <source>Download the library schematics project for a completed example of the steps below.</source>
          <target state="translated">아래 단계의 완료된 예제를 보려면 라이브러리 회로도 프로젝트를 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="bea9854a0974d8c207fb940eb07b3deedb9b02fd" translate="yes" xml:space="preserve">
          <source>Driver state</source>
          <target state="translated">운전자 상태</target>
        </trans-unit>
        <trans-unit id="92dcbcf51988b6a76ea5e858cad87b4f99031fb5" translate="yes" xml:space="preserve">
          <source>Due to the deployment complexities of i18n and the need to minimize rebuild time, the development server only supports localizing a single locale at a time. Setting the &lt;code&gt;&quot;localize&quot;&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; will cause an error when using &lt;code&gt;ng serve&lt;/code&gt; if more than one locale is defined. Setting the option to a specific locale, such as &lt;code&gt;&quot;localize&quot;: [&quot;fr&quot;]&lt;/code&gt;, can work if you want to develop against a specific locale (such as &lt;code&gt;fr&lt;/code&gt;).</source>
          <target state="translated">i18n의 배포 복잡성과 재 구축 시간을 최소화해야하기 때문에 개발 서버는 한 번에 하나의 로케일 만 현지화하도록 지원합니다. &lt;code&gt;&quot;localize&quot;&lt;/code&gt; 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 둘 이상의 로케일이 정의 된 경우 &lt;code&gt;ng serve&lt;/code&gt; 를 사용할 때 오류가 발생합니다 . &lt;code&gt;&quot;localize&quot;: [&quot;fr&quot;]&lt;/code&gt; 와 같은 특정 로케일로 옵션을 설정하면 특정 로케일 (예 : &lt;code&gt;fr&lt;/code&gt; ) 에 대해 개발하려는 경우 작동 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab8e2234ed8257af73e27e05dd2d529167ccaf7d" translate="yes" xml:space="preserve">
          <source>Duplicate the &lt;code&gt;&amp;lt;&lt;a href=&quot;i18n&quot;&gt;source&lt;/a&gt;/&amp;gt;&lt;/code&gt; tag, rename it &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt;, and then replace its content with the French greeting. If you were working with a more complex translation, you could use the information and context provided by the source, description, and meaning elements to guide your selection of the appropriate French translation.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;a href=&quot;i18n&quot;&gt;source&lt;/a&gt;/&amp;gt;&lt;/code&gt; 태그를 복제하고 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 이름을 바꾼 다음 내용을 프랑스어 인사로 바꿉니다 . 보다 복잡한 번역 작업을하는 경우, 소스, 설명 및 의미 요소에서 제공하는 정보와 컨텍스트를 사용하여 적절한 프랑스어 번역을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40ddfae03de378f494769f89dd35188f901c7320" translate="yes" xml:space="preserve">
          <source>Duplicate the &lt;code&gt;&amp;lt;source&amp;gt;...&amp;lt;/source&amp;gt;&lt;/code&gt; element in the text node, rename it &lt;code&gt;target&lt;/code&gt;, and then replace its content with the French text:</source>
          <target state="translated">텍스트 노드에서 &lt;code&gt;&amp;lt;source&amp;gt;...&amp;lt;/source&amp;gt;&lt;/code&gt; 요소를 복제하고 이름을 &lt;code&gt;target&lt;/code&gt; 으로 바꾼 다음 해당 콘텐츠를 프랑스어 텍스트로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="c9bd84cdbb4cc235c347080036b1ba9eb49d0ce1" translate="yes" xml:space="preserve">
          <source>Duration and delay are expressed as a number and optional time unit, such as &quot;1s&quot; or &quot;10ms&quot; for one second and 10 milliseconds, respectively. The default unit is milliseconds.</source>
          <target state="translated">지속 시간 및 지연은 각각 1 초 및 10 밀리 초 동안 &quot;1s&quot;또는 &quot;10ms&quot;와 같은 숫자 및 선택적 시간 단위로 표시됩니다. 기본 단위는 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="bc644b2d562cbf3f13865f41e46fce4f7a86d20e" translate="yes" xml:space="preserve">
          <source>During TypeScript conversion no changes are strictly necessary. But it may be a good idea to convert the unit test code into TypeScript as well.</source>
          <target state="translated">TypeScript 변환 중에는 변경할 필요가 없습니다. 그러나 단위 테스트 코드를 TypeScript로 변환하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d2adfdd8629e6ebc57fc1622f87096712d00503e" translate="yes" xml:space="preserve">
          <source>During TypeScript conversion, there is nothing to do to keep E2E tests working. But when you change the bootstrap to that of a Hybrid app, you must make a few changes.</source>
          <target state="translated">TypeScript 변환 중에 E2E 테스트가 계속 작동하도록 할 필요는 없습니다. 그러나 부트 스트랩을 하이브리드 앱의 부트 스트랩으로 변경할 때는 몇 가지 사항을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="c93ba65421200c8ce9c714d5433120cec0c210c4" translate="yes" xml:space="preserve">
          <source>During a transition, a new view is inserted directly after the old one and both elements appear on screen at the same time. To prevent this, apply additional styling to the host view, and to the removed and inserted child views. The host view must use relative positioning, and the child views must use absolute positioning. Adding styling to the views animates the containers in place, without the DOM moving things around.</source>
          <target state="translated">전환하는 동안 이전보기 바로 뒤에 새보기가 삽입되고 두 요소가 동시에 화면에 나타납니다. 이를 방지하려면 호스트보기 및 제거 및 삽입 된 하위보기에 추가 스타일을 적용하십시오. 호스트보기는 상대 위치를 사용해야하고 자식보기는 절대 위치를 사용해야합니다. 뷰에 스타일을 추가하면 DOM이 움직이지 않고 컨테이너가 움직입니다.</target>
        </trans-unit>
        <trans-unit id="7e2134e92266bcb5c8ab8f878ffaec17ab310443" translate="yes" xml:space="preserve">
          <source>During change detection, the &lt;code&gt;ngOnChanges&lt;/code&gt; lifecycle hook is called on the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive instance because the value of one of its inputs has changed.</source>
          <target state="translated">변경 감지 중에 입력 중 하나의 값이 변경 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 지정 문 인스턴스 에서 &lt;code&gt;ngOnChanges&lt;/code&gt; 라이프 사이클 후크가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="9edd1b9999956746c9f323ca67581f2b8c3fce33" translate="yes" xml:space="preserve">
          <source>During checkout, the app will prompt the user for a name and address. So that you can gather that information later, set the &lt;code&gt;checkoutForm&lt;/code&gt; property with a form model containing &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; fields, using the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;#&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;()&lt;/code&gt; method.</source>
          <target state="translated">체크 아웃하는 동안 앱은 사용자에게 이름과 주소를 입력하라는 메시지를 표시합니다. 나중에 해당 정보를 수집 할 수 있도록 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;#&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;()&lt;/code&gt; # &lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt; () 메소드를 사용하여 &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;address&lt;/code&gt; 필드가 포함 된 양식 모델로 &lt;code&gt;checkoutForm&lt;/code&gt; 특성을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4cb9093ab586cd348f47d9e6cf2bbfe140c681b4" translate="yes" xml:space="preserve">
          <source>During development, you typically use the &lt;code&gt;ng serve&lt;/code&gt; command to build, watch, and serve the application from local memory, using &lt;a href=&quot;https://webpack.js.org/guides/development/#webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;. When you are ready to deploy, however, you must use the &lt;code&gt;ng build&lt;/code&gt; command to build the app and deploy the build artifacts elsewhere.</source>
          <target state="translated">개발 중에는 일반적으로 &lt;code&gt;ng serve&lt;/code&gt; 명령을 사용하여 &lt;a href=&quot;https://webpack.js.org/guides/development/#webpack-dev-server&quot;&gt;webpack-dev-server를&lt;/a&gt; 사용하여 로컬 메모리에서 응용 프로그램을 빌드, 감시 및 제공 합니다 . 그러나 배포 할 준비가되면 &lt;code&gt;ng build&lt;/code&gt; 명령을 사용하여 앱을 빌드하고 빌드 아티팩트를 다른 곳에 배포해야합니다.</target>
        </trans-unit>
        <trans-unit id="fae7cf56608f88866b26b0ef5fcc953914fd85c8" translate="yes" xml:space="preserve">
          <source>During each navigation, the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; emits navigation events through the &lt;code&gt;&lt;a href=&quot;../api/router/router#events&quot;&gt;Router.events&lt;/a&gt;&lt;/code&gt; property. These events range from when the navigation starts and ends to many points in between. The full list of navigation events is displayed in the table below.</source>
          <target state="translated">각 탐색 중에 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/router/router#events&quot;&gt;Router.events&lt;/a&gt;&lt;/code&gt; 속성을 통해 탐색 이벤트를 생성합니다 . 이러한 이벤트는 내비게이션이 시작되고 끝나는 시점부터 사이의 많은 지점까지 다양합니다. 내비게이션 이벤트의 전체 목록이 아래 표에 표시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="24ce380938e6c21372f9336593acfe39017a0043" translate="yes" xml:space="preserve">
          <source>During the process you'll learn how to apply the steps outlined in the &lt;a href=&quot;upgrade#preparation&quot;&gt;preparation guide&lt;/a&gt;. You'll align the application with Angular and also start writing in TypeScript.</source>
          <target state="translated">이 과정에서 &lt;a href=&quot;upgrade#preparation&quot;&gt;준비 안내서에&lt;/a&gt; 설명 된 단계를 적용하는 방법을 배웁니다 . 응용 프로그램을 Angular에 맞추고 TypeScript로 쓰기를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e41271d97bfaa9855273d6170cf3c19d4e05bc1f" translate="yes" xml:space="preserve">
          <source>Dynamic Component Loader</source>
          <target state="translated">동적 컴포넌트 로더</target>
        </trans-unit>
        <trans-unit id="a5fdad1da0c422ddbaedc42b6d8523a19935dd4a" translate="yes" xml:space="preserve">
          <source>Dynamic Components</source>
          <target state="translated">동적 구성 요소</target>
        </trans-unit>
        <trans-unit id="4fd12c3974ec0be44713c8ffa0c687638c292157" translate="yes" xml:space="preserve">
          <source>Dynamic Forms</source>
          <target state="translated">동적 양식</target>
        </trans-unit>
        <trans-unit id="58bd26bb61ddef24bc329aa3b9da99eb3679b9b3" translate="yes" xml:space="preserve">
          <source>Dynamic Forms Guide</source>
          <target state="translated">동적 양식 안내서</target>
        </trans-unit>
        <trans-unit id="2bc79dd70e34554001fab0a24198b892ffd956a8" translate="yes" xml:space="preserve">
          <source>Dynamic Template</source>
          <target state="translated">동적 템플릿</target>
        </trans-unit>
        <trans-unit id="76dcce2563e561d996925b48365c76a33038f663" translate="yes" xml:space="preserve">
          <source>Dynamic component loader</source>
          <target state="translated">동적 구성 요소 로더</target>
        </trans-unit>
        <trans-unit id="5c188df063315960a8284608dfef5d7725223fee" translate="yes" xml:space="preserve">
          <source>Dynamic component loading</source>
          <target state="translated">동적 구성 요소 로딩</target>
        </trans-unit>
        <trans-unit id="cdadcbd36fff4607a6954bb84c819d544af6edd5" translate="yes" xml:space="preserve">
          <source>Dynamic component loading is not common in most apps beyond the router. If you need to dynamically load components, you must add these components to the &lt;code&gt;entryComponents&lt;/code&gt; list yourself.</source>
          <target state="translated">라우터 이외의 대부분의 앱에서는 동적 구성 요소로드가 일반적이지 않습니다. 구성 요소를 동적으로로드해야하는 경우 이러한 구성 요소를 &lt;code&gt;entryComponents&lt;/code&gt; 목록에 직접 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="dd0e82d54ffe53f8d72d2c99cb6529b8b8feb3fb" translate="yes" xml:space="preserve">
          <source>Dynamic controls using form arrays</source>
          <target state="translated">양식 배열을 사용하는 동적 컨트롤</target>
        </trans-unit>
        <trans-unit id="4dae7a3f578fc7983f17d596d5e7aa7dbe799d8d" translate="yes" xml:space="preserve">
          <source>Dynamic forms</source>
          <target state="translated">동적 형태</target>
        </trans-unit>
        <trans-unit id="a3550fb7b911a0a6ad88ba73e6bddbea416b4e9d" translate="yes" xml:space="preserve">
          <source>Dynamic forms are based on reactive forms. To give the application access reactive forms directives, the &lt;a href=&quot;bootstrapping&quot;&gt;root module&lt;/a&gt; imports &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; library.</source>
          <target state="translated">동적 양식은 반응 양식을 기반으로합니다. 애플리케이션 액세스 반응 양식 지시문을 제공하기 위해 &lt;a href=&quot;bootstrapping&quot;&gt;루트 모듈&lt;/a&gt; 은 &lt;code&gt;@angular/forms&lt;/code&gt; 라이브러리 에서 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="952ea5c3a4bd5ddb1e84e339d6efb4b6b521651c" translate="yes" xml:space="preserve">
          <source>E (S)</source>
          <target state="translated">E (S)</target>
        </trans-unit>
        <trans-unit id="3eda17458aac2e1c39c9e41ff906a98ea0cc80f0" translate="yes" xml:space="preserve">
          <source>E, EE &amp;amp; EEE</source>
          <target state="translated">전자, 전자 및 전자</target>
        </trans-unit>
        <trans-unit id="73589e1476f9ea766e54b42e42ec4d4d0cbca3c2" translate="yes" xml:space="preserve">
          <source>E2E Tests</source>
          <target state="translated">E2E 테스트</target>
        </trans-unit>
        <trans-unit id="dd0bb31f998d693382c796a469b61591c81e45c3" translate="yes" xml:space="preserve">
          <source>E2E test that all children were instantiated and displayed as expected:</source>
          <target state="translated">모든 어린이가 예상대로 인스턴스화되고 표시되었는지 E2E 테스트 :</target>
        </trans-unit>
        <trans-unit id="372bb5d00eb17ebcfa920207dee8bf8fee7270ee" translate="yes" xml:space="preserve">
          <source>E2E tests are difficult to write and perform poorly compared to unit tests. They break easily, often due to changes or misbehavior far removed from the site of breakage.</source>
          <target state="translated">E2E 테스트는 단위 테스트에 비해 작성하기 어렵고 성능이 떨어집니다. 그들은 종종 파손 부위에서 멀리 떨어진 변화 또는 오작동으로 인해 쉽게 파손됩니다.</target>
        </trans-unit>
        <trans-unit id="0a76346e352bd2cb73972ed43857bec080631a12" translate="yes" xml:space="preserve">
          <source>E2E tests are great for high-level validation of the entire system. But they can't give you the comprehensive test coverage that you'd expect from unit tests.</source>
          <target state="translated">E2E 테스트는 전체 시스템의 높은 수준의 유효성 검사에 적합합니다. 그러나 단위 테스트에서 기대할 수있는 포괄적 인 테스트 범위를 제공 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="d102c6f6f30bc1655cbe872e545e462853df6b3c" translate="yes" xml:space="preserve">
          <source>E2E tests can't easily reveal how your components behave when things go wrong, such as missing or bad data, lost connectivity, and remote service failures.</source>
          <target state="translated">E2E 테스트를 통해 데이터 누락 또는 불량, 연결 끊김 및 원격 서비스 오류와 같은 문제가 발생했을 때 구성 요소의 작동 방식을 쉽게 확인할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0c4e4c7796289ac9278300d31192ad0146ac03c6" translate="yes" xml:space="preserve">
          <source>E2E tests for apps that update a database, send an invoice, or charge a credit card require special tricks and back-doors to prevent accidental corruption of remote resources. It can even be hard to navigate to the component you want to test.</source>
          <target state="translated">데이터베이스를 업데이트하거나 송장을 보내거나 신용 카드를 청구하는 앱에 대한 E2E 테스트는 우발적 인 원격 리소스 손상을 방지하기 위해 특별한 트릭과 백도어가 필요합니다. 테스트하려는 구성 요소로 이동하기가 어려울 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="589dbe67e40317e7eee2bcd85f1afbc0aa40a3e7" translate="yes" xml:space="preserve">
          <source>E2E tests of input property setter with empty and non-empty names:</source>
          <target state="translated">비어 있고 비어 있지 않은 이름을 가진 입력 특성 설정 기의 E2E 테스트 :</target>
        </trans-unit>
        <trans-unit id="6d85b2d399967a027efc0d611a548da5bc48a920" translate="yes" xml:space="preserve">
          <source>ECMAScript</source>
          <target state="translated">ECMAScript</target>
        </trans-unit>
        <trans-unit id="bb41be0083d30940a15ed09539a8f13ac977b740" translate="yes" xml:space="preserve">
          <source>EEE (Sun)</source>
          <target state="translated">EEE (일)</target>
        </trans-unit>
        <trans-unit id="c49c34e2014a2da270eeae07d730726ffddd3196" translate="yes" xml:space="preserve">
          <source>EEEE</source>
          <target state="translated">EEEE</target>
        </trans-unit>
        <trans-unit id="9169dd1fe0dd70dd346d458bd301545612f3548d" translate="yes" xml:space="preserve">
          <source>EEEE (Sunday)</source>
          <target state="translated">EEEE (일요일)</target>
        </trans-unit>
        <trans-unit id="af660090b01149c4cd9581bca5e30ceaacc675be" translate="yes" xml:space="preserve">
          <source>EEEEE</source>
          <target state="translated">EEEEE</target>
        </trans-unit>
        <trans-unit id="8a1d9b464a3fd8c9e5f06af5b43005029d7c16b1" translate="yes" xml:space="preserve">
          <source>EEEEEE</source>
          <target state="translated">EEEEEE</target>
        </trans-unit>
        <trans-unit id="075901aadfe01a2f6e5ff5be94321e8718fe731b" translate="yes" xml:space="preserve">
          <source>ES Target</source>
          <target state="translated">ES 대상</target>
        </trans-unit>
        <trans-unit id="d2945b5e8055d95ac7e32791a5e2b9aa08838ab0" translate="yes" xml:space="preserve">
          <source>ES target</source>
          <target state="translated">ES 타겟</target>
        </trans-unit>
        <trans-unit id="5be8585e8dda5d16a9d3e66f70a40dc596a018af" translate="yes" xml:space="preserve">
          <source>ES2015</source>
          <target state="translated">ES2015</target>
        </trans-unit>
        <trans-unit id="0970b9d03521f08c59aa318cd73a8b50d05da427" translate="yes" xml:space="preserve">
          <source>ES2015&lt;a href=&quot;browser-support#classlist&quot;&gt;classList&lt;/a&gt;</source>
          <target state="translated">ES2015&lt;a href=&quot;browser-support#classlist&quot;&gt;classList&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9473da121f41fb7b3b153d3793463561bba99a5e" translate="yes" xml:space="preserve">
          <source>ES5 Browserslist Result</source>
          <target state="translated">ES5 브라우저 목록 결과</target>
        </trans-unit>
        <trans-unit id="c2cdc1a3458c8f78c569051ddb78146ba0f1f31b" translate="yes" xml:space="preserve">
          <source>ES5 support disabled</source>
          <target state="translated">ES5 지원 비활성화</target>
        </trans-unit>
        <trans-unit id="df75cdecd9e17afca028633e3d25ea6f32cc76df" translate="yes" xml:space="preserve">
          <source>ES5 support enabled</source>
          <target state="translated">ES5 지원 활성화</target>
        </trans-unit>
        <trans-unit id="f84a7f9916385bc3b3297219fea98468f763a46d" translate="yes" xml:space="preserve">
          <source>ES7/array</source>
          <target state="translated">ES7/array</target>
        </trans-unit>
        <trans-unit id="da9a5dd5bd129c51e47a47b3272ca4e140e15e73" translate="yes" xml:space="preserve">
          <source>EVENT_MANAGER_PLUGINS</source>
          <target state="translated">EVENT_MANAGER_PLUGINS</target>
        </trans-unit>
        <trans-unit id="d7e60287a55416a49a71c1115ff5604711cd5dd4" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element also has the required &lt;code&gt;name&lt;/code&gt; property that Angular uses to register the control with the form.</source>
          <target state="translated">각 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 요소에는 Angular가 양식에 컨트롤을 등록하는 데 사용 하는 필수 &lt;code&gt;name&lt;/code&gt; 속성 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9ce18d98faf53ec35f10c3730273055c75abee2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; exposes a dependency injector with the specific instance of the directive attached to that element.</source>
          <target state="translated">각 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 는 해당 요소에 첨부 된 지시문의 특정 인스턴스를 사용하여 종속성 인젝터를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="286e0075a5fff4e5432d6dc93abd9ba356e6dba0" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; provides methods to traverse up and down the route tree to get information from parent, child and sibling routes.</source>
          <target state="translated">각 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; 은 부모, 자녀 및 형제 자매 경로에서 정보를 얻기 위해 통과 및 경로 트리 아래에 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="98ee5a57eab9498887f027356bcf579d28712aef" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; maps a URL &lt;code&gt;path&lt;/code&gt; to a component. There are &lt;em&gt;no leading slashes&lt;/em&gt; in the &lt;em&gt;path&lt;/em&gt;. The router parses and builds the final URL for you, allowing you to use both relative and absolute paths when navigating between application views.</source>
          <target state="translated">각 &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 는 URL &lt;code&gt;path&lt;/code&gt; 를 구성 요소에 매핑합니다 . 이 없습니다 &lt;em&gt;선두에 슬래시&lt;/em&gt; 의 &lt;em&gt;경로&lt;/em&gt; . 라우터는 최종 URL을 구문 분석하고 빌드하므로 응용 프로그램보기 사이를 탐색 할 때 상대 경로와 절대 경로를 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88053292cde0c84f656ee4f45a15ce05d0267a93" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; maps a URL &lt;code&gt;path&lt;/code&gt; to a component. There are no leading slashes in the path. The router parses and builds the final URL for you, which allows you to use both relative and absolute paths when navigating between application views.</source>
          <target state="translated">각 &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 는 URL &lt;code&gt;path&lt;/code&gt; 를 구성 요소에 매핑합니다 . 경로에 선행 슬래시가 없습니다. 라우터는 최종 URL을 구문 분석하고 빌드하므로 애플리케이션보기 사이를 탐색 할 때 상대 경로와 절대 경로를 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b838c62689224b4ca27eea5c7a87704e8a67b4b9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; provides an own &lt;code&gt;&lt;a href=&quot;compiler&quot;&gt;Compiler&lt;/a&gt;&lt;/code&gt; to its injector, that will use the directives/pipes of the ng module for compilation of components.</source>
          <target state="translated">각 &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 은 인젝터에 자체 &lt;code&gt;&lt;a href=&quot;compiler&quot;&gt;Compiler&lt;/a&gt;&lt;/code&gt; 를 제공하며 , 구성 요소 컴파일을 위해 ng 모듈의 지시문 / 파이프를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="afd85145d04944e976611f2c1d57bdb27b0e7791" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;HeroBioComponent&lt;/code&gt; can edit a single hero's biography. &lt;code&gt;HeroBioComponent&lt;/code&gt; relies on &lt;code&gt;HeroCacheService&lt;/code&gt; to fetch, cache, and perform other persistence operations on that hero.</source>
          <target state="translated">각 &lt;code&gt;HeroBioComponent&lt;/code&gt; 는 단일 영웅의 전기를 편집 할 수 있습니다. &lt;code&gt;HeroBioComponent&lt;/code&gt; 는 &lt;code&gt;HeroCacheService&lt;/code&gt; 를 사용하여 해당 영웅에 대한 다른 지속성 작업을 페치, 캐시 및 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f4731307364ab8c0ca00233e6ebe2ff1235d5b46" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;build&lt;/code&gt; target configuration can include an &lt;code&gt;assets&lt;/code&gt; array that lists files or folders you want to copy as-is when building your project. By default, the &lt;code&gt;src/assets/&lt;/code&gt; folder and &lt;code&gt;src/favicon.ico&lt;/code&gt; are copied over.</source>
          <target state="translated">각 &lt;code&gt;build&lt;/code&gt; 대상 구성에는 프로젝트를 빌드 할 때 그대로 복사하려는 파일 또는 폴더를 나열 하는 &lt;code&gt;assets&lt;/code&gt; 배열이 포함될 수 있습니다 . 기본적으로 &lt;code&gt;src/assets/&lt;/code&gt; 폴더 및 &lt;code&gt;src/favicon.ico&lt;/code&gt; 가 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="c625350948f2e111f7aa538b14527a2d4339eebe" translate="yes" xml:space="preserve">
          <source>Each Angular template in your app is a section of HTML that you can include as a part of the page that the browser displays. An Angular HTML template renders a view, or user interface, in the browser, just like regular HTML, but with a lot more functionality.</source>
          <target state="translated">앱의 각 Angular 템플릿은 브라우저가 표시하는 페이지의 일부로 포함 할 수있는 HTML 섹션입니다. Angular HTML 템플릿은 일반 HTML과 마찬가지로 브라우저에서보기 또는 사용자 인터페이스를 렌더링하지만 훨씬 더 많은 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bce41e0b2ee4443f7cf1479faf944656cbc11207" translate="yes" xml:space="preserve">
          <source>Each DOM element on the page is owned exactly by one framework. Whichever framework instantiated the element is the owner. Each framework only updates/interacts with its own DOM elements and ignores others.</source>
          <target state="translated">페이지의 각 DOM 요소는 하나의 프레임 워크에서 정확히 소유합니다. 요소를 인스턴스화 한 프레임 워크가 소유자입니다. 각 프레임 워크는 자체 DOM 요소 만 업데이트 / 상호 작용하고 다른 DOM 요소는 무시합니다.</target>
        </trans-unit>
        <trans-unit id="90ab67a33781d98870fed308de0b4ac790f7eec7" translate="yes" xml:space="preserve">
          <source>Each additional app that you create with &lt;code&gt;ng generate application&lt;/code&gt; has a corresponding end-to-end test project, with its own configuration section. When you create a library project with &lt;code&gt;ng generate library&lt;/code&gt;, the library project is also added to the &lt;code&gt;projects&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;ng generate application&lt;/code&gt; 작성하는 각 추가 앱 에는 자체 구성 섹션이있는 해당 엔드 투 엔드 테스트 프로젝트가 있습니다. &lt;code&gt;ng generate library&lt;/code&gt; 로 라이브러리 프로젝트를 작성하면 라이브러리 프로젝트 도 &lt;code&gt;projects&lt;/code&gt; 섹션에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc1c3c3aef455453fc117482bdb289b01b6eead4" translate="yes" xml:space="preserve">
          <source>Each area has its own area root component.</source>
          <target state="translated">각 영역에는 자체 영역 루트 구성 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7935d876ab66da316599115544c04f9d078334fb" translate="yes" xml:space="preserve">
          <source>Each area root component has its own router outlet and child routes.</source>
          <target state="translated">각 영역 루트 구성 요소에는 자체 라우터 콘센트와 자식 경로가 있습니다.</target>
        </trans-unit>
        <trans-unit id="78e59ef6547ad3c662e30fa847b04b1ddce59b61" translate="yes" xml:space="preserve">
          <source>Each asset group specifies both a group of resources and a policy that governs them. This policy determines when the resources are fetched and what happens when changes are detected.</source>
          <target state="translated">각 자산 그룹은 자원 그룹과이를 관리하는 정책을 모두 지정합니다. 이 정책은 리소스를 가져 오는시기와 변경이 감지 될 때 발생하는 상황을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c151d68718ffef6d0eacffc4944821511f35e949" translate="yes" xml:space="preserve">
          <source>Each binding gets its own pipe instance.</source>
          <target state="translated">각 바인딩은 자체 파이프 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d091b6893ccf3885f59067c45c1301d7ee5ee6a4" translate="yes" xml:space="preserve">
          <source>Each bootstrapped component is the base of its own tree of components. Inserting a bootstrapped component usually triggers a cascade of component creations that fill out that tree.</source>
          <target state="translated">각 부트 스트랩 구성 요소는 자체 구성 요소 트리의 기초입니다. 부트 스트랩 된 구성 요소를 삽입하면 일반적으로 해당 트리를 채우는 일련의 구성 요소 작성이 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="26e7f477d783d9a514df967e209611ec60a31a55" translate="yes" xml:space="preserve">
          <source>Each budget entry is a JSON object with the following properties:</source>
          <target state="translated">각 예산 항목은 다음 특성을 가진 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="017a90f1b9d26ddfbb620db54aae6370b403e642" translate="yes" xml:space="preserve">
          <source>Each callback must take a &lt;code&gt;&lt;a href=&quot;componentref&quot;&gt;ComponentRef&lt;/a&gt;&lt;/code&gt; instance and return nothing.</source>
          <target state="translated">각 콜백은 &lt;code&gt;&lt;a href=&quot;componentref&quot;&gt;ComponentRef&lt;/a&gt;&lt;/code&gt; 인스턴스를 가져 와서 아무것도 반환하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="0a8b076ccfe8cc8605884f50d353ce0d05ae0da5" translate="yes" xml:space="preserve">
          <source>Each component has a &lt;em&gt;host view&lt;/em&gt;, and can have additional &lt;em&gt;embedded views&lt;/em&gt;. An embedded view in component A is the host view of component B, which can in turn have embedded view. This means that there is a &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;view hierarchy&lt;/a&gt; for each component, of which that component's host view is the root.</source>
          <target state="translated">각 구성 요소에는 &lt;em&gt;호스트보기&lt;/em&gt; 가 있으며 추가 &lt;em&gt;내장 된보기&lt;/em&gt; 가있을 수 &lt;em&gt;있습니다&lt;/em&gt; . 구성 요소 A의 내장 된 뷰는 구성 요소 B의 호스트 뷰이며 내장 뷰를 가질 수 있습니다. 이는 각 구성 요소에 대한 &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;보기 계층 구조&lt;/a&gt; 가 있으며 해당 구성 요소의 호스트보기가 루트입니다.</target>
        </trans-unit>
        <trans-unit id="cdd629c7b0c6876a713f0fae8f947f5dcd9bddb7" translate="yes" xml:space="preserve">
          <source>Each component, service, and filter is in its own source file, as per the &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;Rule of 1&lt;/a&gt;.</source>
          <target state="translated">각 구성 요소, 서비스 및 필터는 &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;규칙 1&lt;/a&gt; 에 따라 자체 소스 파일에 있습니다.</target>
        </trans-unit>
        <trans-unit id="a543edae922fea0770d08c1fee4f1f41525fd010" translate="yes" xml:space="preserve">
          <source>Each control is explicitly created in the component class by creating a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance manually or with &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">각 컨트롤은 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스를 수동으로 또는 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; 를 사용 하여 작성하여 컴포넌트 클래스에 명시 적으로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8d35b3156ab5bb60d84a0eef93b291d2f5f2608" translate="yes" xml:space="preserve">
          <source>Each definition translates to a &lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt; object which has two things: a &lt;code&gt;path&lt;/code&gt;, the URL path segment for this route; and a &lt;code&gt;component&lt;/code&gt;, the component associated with this route.</source>
          <target state="translated">각 정의 는 다음 두 가지가 있는 &lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt; 객체로 변환됩니다 . &lt;code&gt;path&lt;/code&gt; ,이 경로의 URL 경로 세그먼트; 그리고 &lt;code&gt;component&lt;/code&gt; 구성 요소는이 경로와 관련.</target>
        </trans-unit>
        <trans-unit id="6921b51ac3141eb9836e22d8d2b5c211ef71554c" translate="yes" xml:space="preserve">
          <source>Each downgraded component/injectable needs to be explicitly associated with a downgraded module. See &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; for more details.</source>
          <target state="translated">다운 그레이드 된 각 구성 요소 / 주입 품은 다운 그레이드 된 모듈과 명시 적으로 연결되어야합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="964518f2ab2a578d6482970abbf1f6d41de5a43c" translate="yes" xml:space="preserve">
          <source>Each feature area resides in its own folder.</source>
          <target state="translated">각 기능 영역은 자체 폴더에 있습니다.</target>
        </trans-unit>
        <trans-unit id="579cdc1ac54406dd19dd62a973087397898ead99" translate="yes" xml:space="preserve">
          <source>Each feature has its own Angular feature module.</source>
          <target state="translated">각 기능에는 자체 Angular 기능 모듈이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1c22426d18f303c0bc0731b497267fdc477bb27" translate="yes" xml:space="preserve">
          <source>Each guideline describes either a good or bad practice, and all have a consistent presentation.</source>
          <target state="translated">각 지침은 좋은 습관과 나쁜 습관 중 하나를 설명하며 모두 일관성있는 프레젠테이션을합니다.</target>
        </trans-unit>
        <trans-unit id="b46884375c2f4ef07db5d04e100e45c7f831280d" translate="yes" xml:space="preserve">
          <source>Each hero in the heroes list should have a delete button.</source>
          <target state="translated">영웅 목록의 각 영웅에는 삭제 버튼이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="bd0fa650708acb7f6ffbe8e7c1672a65c1d77539" translate="yes" xml:space="preserve">
          <source>Each input element has a &lt;code&gt;name&lt;/code&gt; property that is required by Angular forms to register the control with the form.</source>
          <target state="translated">각 입력 요소에는 컨트롤을 폼에 등록하기 위해 Angular 폼에 필요한 &lt;code&gt;name&lt;/code&gt; 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8991cfa20d0f3cc365961eb7850ff907e46e7442" translate="yes" xml:space="preserve">
          <source>Each input element has an &lt;code&gt;id&lt;/code&gt; property that is used by the &lt;code&gt;label&lt;/code&gt; element's &lt;code&gt;for&lt;/code&gt; attribute to match the label to its input control.</source>
          <target state="translated">각 입력 요소는이 &lt;code&gt;id&lt;/code&gt; 에 의해 사용되는 재산 &lt;code&gt;label&lt;/code&gt; 요소의 &lt;code&gt;for&lt;/code&gt; 입력 컨트롤에 레이블과 일치하는 속성을.</target>
        </trans-unit>
        <trans-unit id="86b355bab0e88cffc8ba8e29950e32e376f810d7" translate="yes" xml:space="preserve">
          <source>Each interface defines the prototype for a single hook method, whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit()&lt;/code&gt;. If you implement this method in your component or directive class, Angular calls it shortly after checking the input properties for that component or directive for the first time.</source>
          <target state="translated">각 인터페이스는 &lt;code&gt;ng&lt;/code&gt; 접두사가 붙은 인터페이스 이름 인 단일 후크 메서드의 프로토 타입을 정의합니다 . 예를 들어 &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; 인터페이스에는 &lt;code&gt;ngOnInit()&lt;/code&gt; 라는 후크 메서드가 있습니다. 이 메서드를 구성 요소 또는 지시문 클래스에 구현하면 Angular는 해당 구성 요소 또는 지시문의 입력 속성을 처음으로 확인한 직후에이를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="70cb6ceab5e15f47d5f692e35d9b740e519a062b" translate="yes" xml:space="preserve">
          <source>Each interface has a single hook method whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit()&lt;/code&gt; that Angular calls shortly after creating the component:</source>
          <target state="translated">각 인터페이스에는 이름이 &lt;code&gt;ng&lt;/code&gt; 로 시작되는 인터페이스 이름 인 단일 후크 메소드가 있습니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; 인터페이스에는 컴포넌트를 생성 한 직후 Angular가 호출하는 &lt;code&gt;ngOnInit()&lt;/code&gt; 이라는 후크 메소드 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="88ebe07ff5ed7d63169a91947c0983cd36bde1c0" translate="yes" xml:space="preserve">
          <source>Each interface has a single hook method whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit&lt;/code&gt;.</source>
          <target state="translated">각 인터페이스에는 이름이 &lt;code&gt;ng&lt;/code&gt; 로 시작되는 인터페이스 이름 인 단일 후크 메소드가 있습니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; 인터페이스에는 &lt;code&gt;ngOnInit&lt;/code&gt; 이라는 후크 메소드가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c49e1bbcb1085374dcd66a5403e9ecf43bb0628b" translate="yes" xml:space="preserve">
          <source>Each module has its own top-level scope. In other words, top-level variables and functions in a module are not seen in other scripts or modules. Each module provides a namespace for identifiers to prevent them from clashing with identifiers in other modules. With multiple modules, you can prevent accidental global variables by creating a single global namespace and adding sub-modules to it.</source>
          <target state="translated">각 모듈에는 고유 한 최상위 범위가 있습니다. 즉, 모듈의 최상위 변수와 함수는 다른 스크립트 나 모듈에서 볼 수 없습니다. 각 모듈은 식별자가 다른 모듈의 식별자와 충돌하지 않도록 이름 공간을 제공합니다. 여러 모듈을 사용하면 단일 전역 네임 스페이스를 만들고 여기에 하위 모듈을 추가하여 실수로 인한 전역 변수를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="736fa5d5b88f601a4b68d26da49837f873c9a8fb" translate="yes" xml:space="preserve">
          <source>Each named configuration can have defaults for any of the options that apply to the various &lt;a href=&quot;glossary#target&quot;&gt;builder targets&lt;/a&gt;, such as &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt;. The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;&lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt; commands can then replace files with appropriate versions for your intended target environment.</source>
          <target state="translated">각각의 명명 된 구성은 &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;serve&lt;/code&gt; 및 &lt;code&gt;test&lt;/code&gt; 와 같은 다양한 &lt;a href=&quot;glossary#target&quot;&gt;빌더 대상에&lt;/a&gt; 적용되는 옵션에 대한 기본값을 가질 수 있습니다 . &lt;a href=&quot;cli&quot;&gt;각도 CLI의 &lt;/a&gt; &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;serve&lt;/code&gt; 및 &lt;code&gt;test&lt;/code&gt; 명령은 의도 한 대상 환경에 적합한 버전으로 파일을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15e01d9b0088c32204d172b9d23d1982bfb25d78" translate="yes" xml:space="preserve">
          <source>Each named schematic in the collection has the following main parts.</source>
          <target state="translated">컬렉션의 각 회로도에는 다음과 같은 주요 부분이 있습니다.</target>
        </trans-unit>
        <trans-unit id="329b32865b1001d3b4b288fac86edd40b02aa8fb" translate="yes" xml:space="preserve">
          <source>Each nested &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; can present a custom message for one of the possible validation errors. There are messages for &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;forbiddenName&lt;/code&gt;.</source>
          <target state="translated">중첩 된 각 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 는 가능한 유효성 검사 오류 중 하나에 대한 사용자 지정 메시지를 표시 할 수 있습니다. &lt;code&gt;required&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;forbiddenName&lt;/code&gt; 에 대한 메시지가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5185bf611cc0f1996c1da943dea939467c034e5d" translate="yes" xml:space="preserve">
          <source>Each of these subjects is introduced in more detail in the following pages.</source>
          <target state="translated">이 주제들 각각은 다음 페이지에서 더 자세하게 소개됩니다.</target>
        </trans-unit>
        <trans-unit id="492742972cab7240263d9a307231b34fd42acbd2" translate="yes" xml:space="preserve">
          <source>Each operator works as follows:</source>
          <target state="translated">각 연산자는 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ee30bb9b05511cb5ca56d1dc673406c8457ba50a" translate="yes" xml:space="preserve">
          <source>Each option associates key with a type, description, and optional alias. The type defines the shape of the value you expect, and the description is displayed when the user requests usage help for your schematic.</source>
          <target state="translated">각 옵션은 키를 유형, 설명 및 선택적 별명과 연관시킵니다. 유형은 예상되는 값의 모양을 정의하며 사용자가 회로도에 대한 사용 도움말을 요청하면 설명이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bb6fa6715460582b0c4be7a4edfd3b729267ae3d" translate="yes" xml:space="preserve">
          <source>Each outlet can have a unique name, determined by the optional &lt;code&gt;name&lt;/code&gt; attribute. The name cannot be set or changed dynamically. If not set, default value is &quot;primary&quot;.</source>
          <target state="translated">각 콘센트는 선택적 &lt;code&gt;name&lt;/code&gt; 속성 으로 결정되는 고유 한 이름을 가질 수 있습니다 . 이름은 동적으로 설정하거나 변경할 수 없습니다. 설정하지 않으면 기본값은 &quot;1 차&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="61c9bd127991ee917708f24212eb86c5a2ff2569" translate="yes" xml:space="preserve">
          <source>Each override method takes a &lt;code&gt;&lt;a href=&quot;../api/core/testing/metadataoverride&quot;&gt;MetadataOverride&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; where &lt;code&gt;T&lt;/code&gt; is the kind of metadata appropriate to the method, that is, the parameter of an &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">각 재정의 메서드는 &lt;code&gt;&lt;a href=&quot;../api/core/testing/metadataoverride&quot;&gt;MetadataOverride&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 여기서 &lt;code&gt;T&lt;/code&gt; 는 메서드에 적합한 메타 데이터 종류입니다. 즉, &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; 의 매개 변수입니다 .</target>
        </trans-unit>
        <trans-unit id="6d715ab120a554227f54f05f4c7b115b5a68c786" translate="yes" xml:space="preserve">
          <source>Each pipe instance caches its own URL and data and calls the server only once.</source>
          <target state="translated">각 파이프 인스턴스는 자체 URL과 데이터를 캐시하고 서버를 한 번만 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f2688d78ae270bd7ee215561bf70670e97db0be1" translate="yes" xml:space="preserve">
          <source>Each pipe instance caches its own URL and data.</source>
          <target state="translated">각 파이프 인스턴스는 자체 URL과 데이터를 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="8406cc7112c99d403e6f12dc6489847bf043bfb4" translate="yes" xml:space="preserve">
          <source>Each pipe instance only calls the server once.</source>
          <target state="translated">각 파이프 인스턴스는 서버를 한 번만 호출합니다.</target>
        </trans-unit>
        <trans-unit id="8e5917c5d975c851fea3302a396d10e8bcc17992" translate="yes" xml:space="preserve">
          <source>Each product in the list displays the same way, one after another on the page. To iterate over the predefined list of products, put the &lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive on a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, as follows:</source>
          <target state="translated">목록의 각 제품은 페이지에서 동일한 방식으로 하나씩 표시됩니다. 사전 정의 된 제품 목록을 반복하려면 다음과 같이 &lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 지시문을 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 에 두십시오 .</target>
        </trans-unit>
        <trans-unit id="f697215d7bc3aea1a76723758a5870daf7b4cc95" translate="yes" xml:space="preserve">
          <source>Each product now has a &quot;Share&quot; button:</source>
          <target state="translated">각 제품에는 &quot;공유&quot;버튼이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="817ec3d74653ed7827a7aafb8dc9a22515f599eb" translate="yes" xml:space="preserve">
          <source>Each request results in the appropriate view for the requested route. The &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; function renders the view within the &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; tag of the template, creating a finished HTML page for the client.</source>
          <target state="translated">각 요청은 요청 된 경로에 대한 적절한보기를 생성합니다. &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; 함수는 내부 뷰 렌더링 &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; 클라이언트에 대한 완성 된 HTML 페이지를 생성하는 템플릿의 태그를.</target>
        </trans-unit>
        <trans-unit id="ec66a0f102f02c3d9406b868fa0c9eeceb3d7411" translate="yes" xml:space="preserve">
          <source>Each request results in the appropriate view for the requested route. The &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function renders the view within the &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; tag of the template, creating a finished HTML page for the client.</source>
          <target state="translated">각 요청은 요청 된 경로에 대한 적절한보기를 제공합니다. &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; 함수는 내부 뷰 렌더링 &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; 클라이언트에 대한 완성 된 HTML 페이지를 생성하는 템플릿의 태그를.</target>
        </trans-unit>
        <trans-unit id="3656d4ac1781afe1c6b1d36d5e961f3780f261ab" translate="yes" xml:space="preserve">
          <source>Each route in this array is a JavaScript object that contains two properties. The first property, &lt;code&gt;path&lt;/code&gt;, defines the URL path for the route. The second property, &lt;code&gt;component&lt;/code&gt;, defines the component Angular should use for the corresponding path.</source>
          <target state="translated">이 배열의 각 경로는 두 개의 속성을 포함하는 JavaScript 객체입니다. 첫 번째 속성 인 &lt;code&gt;path&lt;/code&gt; 는 경로의 URL 경로를 정의합니다. 두 번째 속성 인 &lt;code&gt;component&lt;/code&gt; 는 해당 경로에 대해 Angular가 사용해야하는 구성 요소 를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b5e7f38d5576f468babd40cdb4dbdec27a0c68b2" translate="yes" xml:space="preserve">
          <source>Each routing module augments the route configuration &lt;em&gt;in the order of import&lt;/em&gt;. If you list &lt;code&gt;AppRoutingModule&lt;/code&gt; first, the wildcard route will be registered &lt;em&gt;before&lt;/em&gt; the hero routes. The wildcard route&amp;mdash;which matches &lt;em&gt;every&lt;/em&gt; URL&amp;mdash;will intercept the attempt to navigate to a hero route.</source>
          <target state="translated">각 라우팅 모듈 &lt;em&gt;은 가져 오기 순서에&lt;/em&gt; 따라 경로 구성 &lt;em&gt;을&lt;/em&gt; 보강합니다 . &lt;code&gt;AppRoutingModule&lt;/code&gt; 을 먼저 나열 하면 와일드 카드 경로가 영웅 경로 &lt;em&gt;보다 먼저&lt;/em&gt; 등록됩니다 . &lt;em&gt;모든&lt;/em&gt; URL 과 일치하는 와일드 카드 경로 는 영웅 경로로 이동하려는 시도를 차단합니다.</target>
        </trans-unit>
        <trans-unit id="90e9e14ec2515dc8c61a567e4a607b7a699b6da0" translate="yes" xml:space="preserve">
          <source>Each routing module augments the route configuration in the order of import. If you listed &lt;code&gt;AppRoutingModule&lt;/code&gt; first, the wildcard route would be registered &lt;em&gt;before&lt;/em&gt; the hero routes. The wildcard route&amp;mdash;which matches &lt;em&gt;every&lt;/em&gt; URL&amp;mdash;would intercept the attempt to navigate to a hero route.</source>
          <target state="translated">각 라우팅 모듈은 가져 오기 순서대로 경로 구성을 확장합니다. &lt;code&gt;AppRoutingModule&lt;/code&gt; 을 먼저 나열 하면 와일드 카드 경로가 hero 경로 &lt;em&gt;보다 먼저&lt;/em&gt; 등록 됩니다. &lt;em&gt;모든&lt;/em&gt; URL 과 일치하는 와일드 카드 경로 는 영웅 경로 탐색 시도를 가로 챌 것입니다.</target>
        </trans-unit>
        <trans-unit id="168c2ec77caf801e972506d1e6e8beb63b52436b" translate="yes" xml:space="preserve">
          <source>Each schematic runs in a context, represented by a &lt;code&gt;SchematicContext&lt;/code&gt; object.</source>
          <target state="translated">각 회로도는 &lt;code&gt;SchematicContext&lt;/code&gt; 객체로 표시되는 컨텍스트에서 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="4825447444d4e18f42f91e26d03b905e996c72be" translate="yes" xml:space="preserve">
          <source>Each script tag has a &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; or &lt;code&gt;nomodule&lt;/code&gt; attribute. Browsers with native support for ES modules only load the scripts with the &lt;code&gt;module&lt;/code&gt; type attribute and ignore scripts with the &lt;code&gt;nomodule&lt;/code&gt; attribute. Legacy browsers only load the scripts with the &lt;code&gt;nomodule&lt;/code&gt; attribute, and ignore the script tags with the &lt;code&gt;module&lt;/code&gt; type that load ES modules.</source>
          <target state="translated">각 스크립트 태그에는 &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; 또는 &lt;code&gt;nomodule&lt;/code&gt; 속성이 있습니다. ES 모듈을 기본적으로 지원하는 브라우저는 &lt;code&gt;module&lt;/code&gt; 유형 속성이 있는 스크립트 만로드 하고 &lt;code&gt;nomodule&lt;/code&gt; 속성 이있는 스크립트는 무시 합니다. 레거시 브라우저는 &lt;code&gt;nomodule&lt;/code&gt; 속성을 가진 스크립트 만로드하고 ES 모듈을로드 하는 &lt;code&gt;module&lt;/code&gt; 유형 의 스크립트 태그는 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="e75bf221834c2b1fb6b2d823795b2526d503b732" translate="yes" xml:space="preserve">
          <source>Each secondary outlet has its own navigation, independent of the navigation driving the primary outlet. Changing a current route that displays in the primary outlet has no effect on the popup outlet. That's why the popup stays visible as you navigate among the crises and heroes.</source>
          <target state="translated">각 2 차 콘센트에는 1 차 콘센트를 구동하는 내비게이션과 무관하게 자체 내비게이션이 있습니다. 기본 콘센트에 표시되는 현재 경로를 변경해도 팝업 콘센트에는 영향을 미치지 않습니다. 위기와 영웅을 탐색 할 때 팝업이 계속 표시되는 이유입니다.</target>
        </trans-unit>
        <trans-unit id="299e7290b3f2a8d07e58e0a4f9e3128676fb22d4" translate="yes" xml:space="preserve">
          <source>Each section of the configuration file is described below.</source>
          <target state="translated">구성 파일의 각 섹션이 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9227a7aba828bec8cc740a7da8b3012ad3a4eca" translate="yes" xml:space="preserve">
          <source>Each spy's birth and death marks the birth and death of the attached hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with an entry in the &lt;em&gt;Hook Log&lt;/em&gt; as seen here:</source>
          <target state="translated">각 스파이의 출생과 사망은 다음과 같이 연결된 영웅 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 의 탄생과 사망을 &lt;em&gt;후크 로그에&lt;/em&gt; 입력 합니다.</target>
        </trans-unit>
        <trans-unit id="2d2df78a45b75e2dae415831c7b2d23b575313f3" translate="yes" xml:space="preserve">
          <source>Each spy's creation and destruction marks the appearance and disappearance of the attached hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with an entry in the &lt;em&gt;Hook Log&lt;/em&gt; as seen here:</source>
          <target state="translated">각 스파이의 생성 및 파괴는 다음과 같이 &lt;em&gt;후크 로그에&lt;/em&gt; 항목 이있는 연결된 영웅 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 의 모양과 사라짐을 표시합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="783713692d2fe672a17ac40ef0511469cdd78009" translate="yes" xml:space="preserve">
          <source>Each string in the array defines some CSS for this component.</source>
          <target state="translated">배열의 각 문자열은이 구성 요소에 대한 일부 CSS를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="48476a09dad5d99e11d658a9501cc06cfe59f311" translate="yes" xml:space="preserve">
          <source>Each switch-case statement contains an in-line HTML template or template reference that defines the subtree to be selected if the value of the match expression matches the value of the switch expression.</source>
          <target state="translated">각 switch-case 문에는 일치 식의 값이 스위치 식의 값과 일치하는 경우 선택할 하위 트리를 정의하는 인라인 HTML 템플릿 또는 템플릿 참조가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fba55ede002bcad03ef30757908c0ebc006fda9" translate="yes" xml:space="preserve">
          <source>Each target object specifies the &lt;code&gt;builder&lt;/code&gt; for that target, which is the npm package for the tool that Architect runs. In addition, each target has an &lt;code&gt;options&lt;/code&gt; section that configures default options for the target, and a &lt;code&gt;configurations&lt;/code&gt; section that names and specifies alternative configurations for the target. See the example in &lt;a href=&quot;workspace-config#build-target&quot;&gt;Build target&lt;/a&gt; below.</source>
          <target state="translated">각 대상 객체 는 해당 대상 의 &lt;code&gt;builder&lt;/code&gt; 를 지정합니다 . 이는 Architect가 실행하는 도구의 npm 패키지입니다. 또한 각 대상에는 대상에 대한 기본 옵션을 구성 하는 &lt;code&gt;options&lt;/code&gt; 섹션과 대상에 대한 대체 구성의 이름을 지정하고 지정 하는 &lt;code&gt;configurations&lt;/code&gt; 섹션이 있습니다. 아래 &lt;a href=&quot;workspace-config#build-target&quot;&gt;빌드 대상&lt;/a&gt; 의 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ab19647e721dd81282422e89f7501369e20553f" translate="yes" xml:space="preserve">
          <source>Each tax return component has the following characteristics:</source>
          <target state="translated">각 세금 환급 구성 요소에는 다음과 같은 특징이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9f5cecbb342c5b2c155bd0ede4d1fcb97168969" translate="yes" xml:space="preserve">
          <source>Each time a new alias instance is added, the new form array instance is provided its control based on the index. This allows you to track each individual control when calculating the status and value of the root control.</source>
          <target state="translated">새 별칭 인스턴스가 추가 될 때마다 새 폼 배열 인스턴스에 인덱스를 기반으로하는 제어가 제공됩니다. 이를 통해 루트 컨트롤의 상태와 값을 계산할 때 각 개별 컨트롤을 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4191b0fc88190e0dfd1f5d02d826834c374a2e8e" translate="yes" xml:space="preserve">
          <source>Each time an animation is triggered in Angular, the parent animation always get priority and child animations are blocked. In order for a child animation to run, the parent animation must query each of the elements containing child animations and then allow the animations to run using the &lt;a href=&quot;../api/animations/animatechild&quot;&gt;&lt;code&gt;animateChild()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">애니메이션이 Angular에서 트리거 될 때마다 상위 애니메이션이 항상 우선권을 가지며 하위 애니메이션이 차단됩니다. 자식 애니메이션을 실행하려면 부모 애니메이션에서 자식 애니메이션이 포함 된 각 요소를 쿼리 한 다음 &lt;a href=&quot;../api/animations/animatechild&quot;&gt; &lt;code&gt;animateChild()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 애니메이션을 실행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="39caf3d6f6d11e7504ee29654c47c89fcaff17d7" translate="yes" xml:space="preserve">
          <source>Each time an animation is triggered in Angular, the parent animation has priority and any child animations are blocked. In order for a child animation to run, the parent animation must query each of the elements containing child animations, and run them using this function.</source>
          <target state="translated">애니메이션이 Angular에서 트리거 될 때마다 부모 애니메이션이 우선 순위를 가지며 모든 자식 애니메이션이 차단됩니다. 자식 애니메이션을 실행하려면 부모 애니메이션이 자식 애니메이션이 포함 된 각 요소를 쿼리하고이 함수를 사용하여 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="3cb9d1e78bc6a527f7c2b3ed0e6aadb310220c65" translate="yes" xml:space="preserve">
          <source>Each time items are added, the opacity fade-in animation runs, and each removed item is faded out. When either of these animations occur, the stagger effect is applied after each item's animation is started.</source>
          <target state="translated">항목이 추가 될 때마다 불투명 페이드 인 애니메이션이 실행되고 제거 된 각 항목이 페이드 아웃됩니다. 이러한 애니메이션 중 하나가 발생하면 각 항목의 애니메이션이 시작된 후 스 태거 효과가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="840ece201b19a0940e7b47a2f6716b01bcfcf4bd" translate="yes" xml:space="preserve">
          <source>Earlier component tests configured the testing module with a few &lt;code&gt;declarations&lt;/code&gt; like this:</source>
          <target state="translated">이전 구성 요소 테스트는 다음과 같은 몇 가지 &lt;code&gt;declarations&lt;/code&gt; 테스트 모듈을 구성 했습니다.</target>
        </trans-unit>
        <trans-unit id="3b9a2bbbb5be998c7abeddf30825a264e234cf58" translate="yes" xml:space="preserve">
          <source>Earlier in 2020, we shared an &lt;a href=&quot;https://github.com/angular/angular/issues/38366&quot;&gt;RFC&lt;/a&gt; for Ivy library distribution. After invaluable feedback from the community, we developed a design of the project. We are now investing in the development of Ivy library distribution, including an update of the library package format to use Ivy compilation, unblock the deprecation of the View Engine library format, and &lt;a href=&quot;glossary#ngcc&quot;&gt;ngcc&lt;/a&gt;.</source>
          <target state="translated">2020 년 초에 우리 는 Ivy 라이브러리 배포를위한 &lt;a href=&quot;https://github.com/angular/angular/issues/38366&quot;&gt;RFC&lt;/a&gt; 를 공유했습니다 . 커뮤니티로부터 귀중한 피드백을받은 후 프로젝트 디자인을 개발했습니다. 우리는 현재 Ivy 컴파일을 사용하기위한 라이브러리 패키지 형식 업데이트, View Engine 라이브러리 형식의 사용 중단 해제 및 &lt;a href=&quot;glossary#ngcc&quot;&gt;ngcc를&lt;/a&gt; 포함하여 Ivy 라이브러리 배포 개발에 투자하고 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="46e5b375c74ca0c31347cccfda3742972be266ea" translate="yes" xml:space="preserve">
          <source>Edge (Chromium-based)</source>
          <target state="translated">Edge (Chromium 기반)</target>
        </trans-unit>
        <trans-unit id="a0dec05e152a15aac76a99730b18fb537af884ce" translate="yes" xml:space="preserve">
          <source>Edit a hero's name in the hero detail view. As you type, the hero name updates the heading at the top of the page. But when you click the &quot;go back button&quot;, the changes are lost.</source>
          <target state="translated">영웅 세부 사항보기에서 영웅의 이름을 편집하십시오. 입력하면 영웅 이름이 페이지 상단의 제목을 업데이트합니다. 그러나 &quot;뒤로 단추&quot;를 클릭하면 변경 내용이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="7a28f8fdf531d1de8cbfa03f27322c5ebe789231" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;HeroSearchComponent&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;HeroSearchComponent&lt;/code&gt; 클래스 편집</target>
        </trans-unit>
        <trans-unit id="a3828b5ef8330a0df646970e814f435f04fd02bc" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;collection.json&lt;/code&gt; file to define the initial schema for your collection.</source>
          <target state="translated">&lt;code&gt;collection.json&lt;/code&gt; 파일을 편집하여 콜렉션 의 초기 스키마를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="7073c6d0ea9dffd93fe969dc4169c8dcf848dab5" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;schematics/collection.json&lt;/code&gt; file to point to the new schematic subfolder, and include a pointer to a schema file that will specify inputs for the new schematic.</source>
          <target state="translated">편집 &lt;code&gt;schematics/collection.json&lt;/code&gt; 새로운 설계도 하위 폴더를 차례로 파일 및 새로운 설계도에 대한 입력을 지정하는 스키마 파일에 대한 포인터를 포함한다.</target>
        </trans-unit>
        <trans-unit id="243ae2ff9dd324df29ebd119467f5cddf3097987" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; file to add the following content.</source>
          <target state="translated">&lt;code&gt;tsconfig.schematics.json&lt;/code&gt; 파일을 편집하여 다음 컨텐츠를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="5a6924cb28620025b7daa3b7cbd4b6ce71c3f34b" translate="yes" xml:space="preserve">
          <source>Edit the generated translation file: Translate the extracted text into the target language.</source>
          <target state="translated">생성 된 번역 파일 편집 : 추출 된 텍스트를 대상 언어로 번역하십시오.</target>
        </trans-unit>
        <trans-unit id="77da553bb02e4e75712d607e650908e418ab7c9e" translate="yes" xml:space="preserve">
          <source>Edit the hero</source>
          <target state="translated">영웅 편집</target>
        </trans-unit>
        <trans-unit id="639e959572f60a7a83d110ab904c95adaaf8406f" translate="yes" xml:space="preserve">
          <source>Edit the template file &lt;code&gt;hero-form.component.html&lt;/code&gt;.</source>
          <target state="translated">템플릿 파일 &lt;code&gt;hero-form.component.html&lt;/code&gt; 을 편집합니다 .</target>
        </trans-unit>
        <trans-unit id="3981b776edea32fe25eceae3ad0387a1b8dc1c18" translate="yes" xml:space="preserve">
          <source>Editing the Bazel configuration may prevent you opting out of Bazel. Custom behaviors driven by Bazel won't be available in other Builders.</source>
          <target state="translated">Bazel 구성을 편집하면 Bazel을 선택 해제 할 수 없습니다. Bazel이 주도하는 사용자 지정 동작은 다른 빌더에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="bfc1131d505eb33e1e38ec6565dbfcbb9f7800fc" translate="yes" xml:space="preserve">
          <source>Either way, the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator tells Angular that this property is &lt;em&gt;public&lt;/em&gt; and available for binding by a parent component. Without &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;, Angular refuses to bind to the property.</source>
          <target state="translated">어느 쪽이든 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 데코레이터는 Angular에이 속성이 &lt;em&gt;공용&lt;/em&gt; 이며 부모 구성 요소에 의해 바인딩 할 수 있음을 알려줍니다 . &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 없으면 Angular는 속성에 대한 바인딩을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="3ea7a1338139564ad098308f10ae612adbafe8eb" translate="yes" xml:space="preserve">
          <source>Element event Component event Directive event</source>
          <target state="translated">요소 이벤트 요소 이벤트 지시어 이벤트</target>
        </trans-unit>
        <trans-unit id="78b32d614954e5819e912e04c63058e7347b0a0b" translate="yes" xml:space="preserve">
          <source>Element events may be the more common targets, but Angular looks first to see if the name matches an event property of a known directive, as it does in the following example:</source>
          <target state="translated">요소 이벤트가 더 일반적인 대상 일 수 있지만 Angular는 먼저 다음 예에서와 같이 이름이 알려진 지시문의 이벤트 속성과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1e3b8388bb2dc950b3f200f71c924d0916f2c8eb" translate="yes" xml:space="preserve">
          <source>Element for which the DOM listeners should be retrieved.</source>
          <target state="translated">DOM 리스너를 검색해야하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="613e9030149d259c057b76dc9391b404f9b8d7be" translate="yes" xml:space="preserve">
          <source>Element for which to get the surrounding component instance.</source>
          <target state="translated">주변 구성 요소 인스턴스를 가져올 요소입니다.</target>
        </trans-unit>
        <trans-unit id="a8af1f8f4a0f60574a912870fe01652703e8ae51" translate="yes" xml:space="preserve">
          <source>Element properties may be the more common targets, but Angular looks first to see if the name is a property of a known directive, as it is in the following example:</source>
          <target state="translated">요소 속성이 더 일반적인 대상 일 수 있지만 Angular는 먼저 다음 예제와 같이 이름이 알려진 지시문의 속성인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b814267cbc9b4c2f5dbdcaa48521ab0db7fa228f" translate="yes" xml:space="preserve">
          <source>Element properties named with dash case (&lt;code&gt;-&lt;/code&gt;). Dash case is the naming convention for custom elements.</source>
          <target state="translated">대소 문자 ( &lt;code&gt;-&lt;/code&gt; )로 명명 된 요소 속성 대시 케이스는 사용자 지정 요소의 명명 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="4281bfd6552b34124101c7945eb3921590e1840a" translate="yes" xml:space="preserve">
          <source>Element property Component property Directive property</source>
          <target state="translated">요소 속성 구성 요소 속성 지시어 속성</target>
        </trans-unit>
        <trans-unit id="4ff1bdab6222ab6715c6ab38046757d970570de5" translate="yes" xml:space="preserve">
          <source>Element that the listener is bound to.</source>
          <target state="translated">리스너가 바인딩 된 요소입니다.</target>
        </trans-unit>
        <trans-unit id="610e33c435ffd4f9cc64e044bd3fa683e6ff4746" translate="yes" xml:space="preserve">
          <source>ElementRef</source>
          <target state="translated">ElementRef</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="3d76efc8a111a229c16ed99fcb77e3865ffee55a" translate="yes" xml:space="preserve">
          <source>Elements within the &lt;code&gt;[&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; statement but outside of any &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; directive are preserved at the location.</source>
          <target state="translated">&lt;code&gt;[&lt;a href=&quot;common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; 문 내에 있지만 &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; 지시문 외부에있는 요소 는 해당 위치에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="660c8644c0aebbaa48f6509cbcb09b3790bda043" translate="yes" xml:space="preserve">
          <source>Elements within the &lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; statement but outside of any &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; directive are preserved at the location.</source>
          <target state="translated">&lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; 문 내에 있지만 &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; 지시문 밖에 있는 요소 는 해당 위치에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="7ea6230fc92026aec77cb73b411275cedcb01dd3" translate="yes" xml:space="preserve">
          <source>EmailValidator</source>
          <target state="translated">EmailValidator</target>
        </trans-unit>
        <trans-unit id="bb9641e7481a2ac16a688649131dd37a3702964f" translate="yes" xml:space="preserve">
          <source>Embedded live example</source>
          <target state="translated">임베디드 라이브 예제</target>
        </trans-unit>
        <trans-unit id="d9b684fcc3dcb76b1a4baede3b0c25aaf9a8c7cb" translate="yes" xml:space="preserve">
          <source>Embedded views (such as ones created by &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;) are now inserted in front of anchor DOM comment node (e.g. &lt;code&gt;&amp;lt;!--ng-for-of--&amp;gt;&lt;/code&gt;) rather than behind it as was the case previously. In most cases this does not have any impact on rendered DOM. In some cases (such as animations delaying the removal of an embedded view) any new embedded views will be inserted after the embedded view being animated away. This difference only last while the animation is active, and might alter the visual appearance of the animation. Once the animation is finished the resulting rendered DOM is identical to that rendered with View Engine.</source>
          <target state="translated">삽입 된 뷰 (예 : &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 에서 생성 된 뷰 )는 이제 이전의 경우처럼 앵커 DOM 주석 노드 (예 : &lt;code&gt;&amp;lt;!--ng-for-of--&amp;gt;&lt;/code&gt; of- &amp;gt; ) 뒤에 삽입되지 않습니다. 대부분의 경우 이것은 렌더링 된 DOM에 영향을 미치지 않습니다. 경우에 따라 (예 : 포함 된보기 제거를 지연시키는 애니메이션) 포함 된보기가 애니메이션 된 후 새 포함 된보기가 삽입됩니다. 이 차이는 애니메이션이 활성화 된 동안에 만 지속되며 애니메이션의 시각적 모양을 변경할 수 있습니다. 애니메이션이 완료되면 렌더링 된 DOM은 View Engine으로 렌더링 된 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c36c3f5e58e60871ead3cbe428b7ace21878e9b3" translate="yes" xml:space="preserve">
          <source>Embedded views (such as those within an &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;) are checked.</source>
          <target state="translated">포함 된 뷰 (예 : &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; )가 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="83e20452c44f63af957be29cf282b611c46d2aee" translate="yes" xml:space="preserve">
          <source>EmbeddedViewRef</source>
          <target state="translated">EmbeddedViewRef</target>
        </trans-unit>
        <trans-unit id="43f7a2bd10f700ecb039aad71ad500bb034ce583" translate="yes" xml:space="preserve">
          <source>Embedding the route parameter token, &lt;code&gt;:id&lt;/code&gt;, in the route definition path is a good choice for this scenario because the &lt;code&gt;id&lt;/code&gt; is &lt;em&gt;required&lt;/em&gt; by the &lt;code&gt;HeroDetailComponent&lt;/code&gt; and because the value &lt;code&gt;15&lt;/code&gt; in the path clearly distinguishes the route to &quot;Magneta&quot; from a route for some other hero.</source>
          <target state="translated">경로 정의 경로에 경로 매개 변수 토큰 인 &lt;code&gt;:id&lt;/code&gt; 를 포함시키는 것은 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 에 의해 &lt;code&gt;id&lt;/code&gt; 가 &lt;em&gt;필요&lt;/em&gt; 하고 경로 의 값 &lt;code&gt;15&lt;/code&gt; 는 일부 경로에 대해 &quot;Magneta&quot;경로를 명확하게 구분하기 때문에이 시나리오에 적합합니다. 다른 영웅.</target>
        </trans-unit>
        <trans-unit id="2c50b51bb07b5168f1450d115ff7ecd3899a0074" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;unrecoverablestateevent&quot;&gt;UnrecoverableStateEvent&lt;/a&gt;&lt;/code&gt; event whenever the version of the app used by the service worker to serve this client is in a broken state that cannot be recovered from without a full page reload.</source>
          <target state="translated">서비스 워커가이 클라이언트를 제공하는 데 사용하는 앱 버전이 전체 페이지를 다시로드하지 않으면 복구 할 수없는 손상된 상태 일 때마다 &lt;code&gt;&lt;a href=&quot;unrecoverablestateevent&quot;&gt;UnrecoverableStateEvent&lt;/a&gt;&lt;/code&gt; 이벤트를 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="e76e9c45e6f20e19c4f06dc20c952d47b9038f75" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;updateactivatedevent&quot;&gt;UpdateActivatedEvent&lt;/a&gt;&lt;/code&gt; event whenever the app has been updated to a new version.</source>
          <target state="translated">방출 &lt;code&gt;&lt;a href=&quot;updateactivatedevent&quot;&gt;UpdateActivatedEvent&lt;/a&gt;&lt;/code&gt; 의 응용 프로그램이 새 버전으로 업데이트 될 때마다 이벤트를.</target>
        </trans-unit>
        <trans-unit id="882e9b10d387257fbe1f9c9a65cd1c3691ef6ede" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;updateavailableevent&quot;&gt;UpdateAvailableEvent&lt;/a&gt;&lt;/code&gt; event whenever a new app version is available.</source>
          <target state="translated">방출 &lt;code&gt;&lt;a href=&quot;updateavailableevent&quot;&gt;UpdateAvailableEvent&lt;/a&gt;&lt;/code&gt; 의 새로운 응용 프로그램 버전을 사용할 때마다 이벤트를.</target>
        </trans-unit>
        <trans-unit id="aafa880c3dcedcc027cd4f9e5e8db3bd419db083" translate="yes" xml:space="preserve">
          <source>Emits an event containing a given value.</source>
          <target state="translated">주어진 값을 포함하는 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f75f623ea16165d1b8fa68ae33e82c5562cf68e7" translate="yes" xml:space="preserve">
          <source>Emits an event when the form submission has been triggered.</source>
          <target state="translated">양식 제출이 트리거 될 때 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="43a5c938c92ff76a8b0f08eaed896138bdf6f5e5" translate="yes" xml:space="preserve">
          <source>Emits the currently active &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt;PushSubscription&lt;/a&gt; associated to the Service Worker registration or &lt;code&gt;null&lt;/code&gt; if there is no subscription.</source>
          <target state="translated">서비스 워커 등록과 연관된 현재 활성화 된 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt;PushSubscription을 생성&lt;/a&gt; 하거나 구독이없는 경우 &lt;code&gt;null&lt;/code&gt; 을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="c6752a2ff06ebb716a84e7511cc420aaa89a5478" translate="yes" xml:space="preserve">
          <source>Emits the payloads of the received push notification messages as well as the action the user interacted with. If no action was used the &lt;code&gt;action&lt;/code&gt; property contains an empty string &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">수신 된 푸시 알림 메시지의 페이로드와 사용자가 상호 작용 한 작업을 수행합니다. 조치가 사용되지 않은 경우 &lt;code&gt;action&lt;/code&gt; 특성에 빈 문자열 &lt;code&gt;''&lt;/code&gt; 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="7e72684bb1ec9f0531eb8c7837750fb0400bd9b2" translate="yes" xml:space="preserve">
          <source>Emits the payloads of the received push notification messages.</source>
          <target state="translated">수신 된 푸시 알림 메시지의 페이로드를 방출합니다.</target>
        </trans-unit>
        <trans-unit id="6f30414a7687b5f41133943a97472cc313c6ca7f" translate="yes" xml:space="preserve">
          <source>Empower your HTML</source>
          <target state="translated">HTML 역량 강화</target>
        </trans-unit>
        <trans-unit id="4f82187a59b317b0dcc96d315aa6c31be3ea2d81" translate="yes" xml:space="preserve">
          <source>Empties out the async validator list.</source>
          <target state="translated">비동기 유효성 검사기 목록을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="f7fad72021d0dbe5822e8c652ce49746dc0bda5d" translate="yes" xml:space="preserve">
          <source>Empties out the sync validator list.</source>
          <target state="translated">동기화 검사기 목록을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="87434da39dfaf08f094f5a8d96e89bd88fe4ac24" translate="yes" xml:space="preserve">
          <source>Empty Path</source>
          <target state="translated">빈 경로</target>
        </trans-unit>
        <trans-unit id="672ad1b8b8d0a43ea96a232f42837d615b95f825" translate="yes" xml:space="preserve">
          <source>Empty-path route configurations can be used to instantiate components that do not 'consume' any URL segments.</source>
          <target state="translated">빈 경로 경로 구성을 사용하여 URL 세그먼트를 '소비'하지 않는 구성 요소를 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5370c69f525b9a37e8e07585264c99f9c59d322c" translate="yes" xml:space="preserve">
          <source>Empty-path routes can have children. In the following example, when navigating to &lt;code&gt;/team/11/user/jim&lt;/code&gt;, the router instantiates the wrapper component with the user component in it.</source>
          <target state="translated">빈 경로 경로에는 자식이있을 수 있습니다. 다음 예에서 &lt;code&gt;/team/11/user/jim&lt;/code&gt; 으로 이동하면 라우터는 래퍼 구성 요소를 사용자 구성 요소와 함께 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="16129f01e8969b5f4fb2adaad44b03b5d7650d4c" translate="yes" xml:space="preserve">
          <source>Emulate &lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; scoping of styles by adding an attribute containing surrogate id to the Host Element and pre-processing the style rules provided via &lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt; or &lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;, and adding the new Host Element attribute to all selectors.</source>
          <target state="translated">대리 ID를 포함하는 속성을 호스트 요소에 추가하고 &lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt; 또는 &lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt; 를 통해 제공되는 스타일 규칙을 사전 처리하고 모든 호스트에 새 호스트 요소 속성을 추가하여 스타일의 &lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; 범위를 에뮬레이트 합니다 .</target>
        </trans-unit>
        <trans-unit id="75735fbe1734a26efa7fe5c325b12e4edcdfe722" translate="yes" xml:space="preserve">
          <source>Emulate &lt;code&gt;Native&lt;/code&gt; scoping of styles by adding an attribute containing surrogate id to the Host Element and pre-processing the style rules provided via &lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt; or &lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;, and adding the new Host Element attribute to all selectors.</source>
          <target state="translated">호스트 요소에 대리 ID가 포함 된 속성을 추가하고 &lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt; 또는 &lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt; 를 통해 제공된 스타일 규칙을 사전 처리하고 모든 선택기에 새 호스트 요소 속성을 추가하여 스타일의 &lt;code&gt;Native&lt;/code&gt; 범위를 에뮬레이션 합니다 .</target>
        </trans-unit>
        <trans-unit id="265a9db68ca4a5d6ef8d4fae40f173a071928e99" translate="yes" xml:space="preserve">
          <source>Enable HTTP services</source>
          <target state="translated">HTTP 서비스 사용</target>
        </trans-unit>
        <trans-unit id="e67083640ced0b81bedd70c022a1ba4bc9884def" translate="yes" xml:space="preserve">
          <source>Enable HttpClient for app</source>
          <target state="translated">앱에 HttpClient 사용</target>
        </trans-unit>
        <trans-unit id="e34ac47784e0cfde79a7151a7989c931f93af556" translate="yes" xml:space="preserve">
          <source>Enable HttpClient for cart service</source>
          <target state="translated">카트 서비스에 HttpClient 사용</target>
        </trans-unit>
        <trans-unit id="fa6eebc6227fc9a918b716c4f215885d40621698" translate="yes" xml:space="preserve">
          <source>Enable access to CLI usage data</source>
          <target state="translated">CLI 사용 데이터에 액세스 할 수 있도록 설정</target>
        </trans-unit>
        <trans-unit id="6d63b68fee5b381bfb9695361afac709eb36b661" translate="yes" xml:space="preserve">
          <source>Enable and define the file watching poll time period in milliseconds.</source>
          <target state="translated">폴링 감시 기간 (밀리 초)을 활성화하고 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="39128e720765af16eba7528148ad65954348b7b8" translate="yes" xml:space="preserve">
          <source>Enable code coverage reports</source>
          <target state="translated">코드 커버리지 보고서 사용</target>
        </trans-unit>
        <trans-unit id="e4ed8e6c246b54070d8318341912b462815ca123" translate="yes" xml:space="preserve">
          <source>Enable hot module replacement.</source>
          <target state="translated">핫 모듈 교체를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="7d162c1d6a036692653e990d3db43e61209ece89" translate="yes" xml:space="preserve">
          <source>Enable reactive forms for a project.</source>
          <target state="translated">프로젝트에 반응 형 양식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a45fc5d6eac5c03e04a8e40043a791e924a85295" translate="yes" xml:space="preserve">
          <source>Enable reactive forms for your project</source>
          <target state="translated">프로젝트에 반응 형 양식 사용</target>
        </trans-unit>
        <trans-unit id="2becf0fba4ac14d337ccb6df4a33af2c2e4a71ab" translate="yes" xml:space="preserve">
          <source>Enable runtime production mode</source>
          <target state="translated">런타임 프로덕션 모드 사용</target>
        </trans-unit>
        <trans-unit id="d80854840d07f800e414541fedcc13a32a5458c2" translate="yes" xml:space="preserve">
          <source>Enable the &lt;code&gt;dead&lt;/code&gt; or &lt;code&gt;IE&lt;/code&gt; browsers in the &lt;code&gt;browserslist&lt;/code&gt; config file by removing the &lt;code&gt;not&lt;/code&gt; keyword in front of them.</source>
          <target state="translated">활성화 &lt;code&gt;dead&lt;/code&gt; 또는 &lt;code&gt;IE&lt;/code&gt; 의 브라우저 &lt;code&gt;browserslist&lt;/code&gt; 의 , 제거에 의해 설정 파일을 &lt;code&gt;not&lt;/code&gt; 그들 앞에서 키워드.</target>
        </trans-unit>
        <trans-unit id="382c7a8e054c81ea3fae6aaad68cbf31fbd48c43" translate="yes" xml:space="preserve">
          <source>Enable this phase explicitly by adding the compiler option &lt;code&gt;&quot;fullTemplateTypeCheck&quot;&lt;/code&gt; in the &lt;code&gt;&quot;angularCompilerOptions&quot;&lt;/code&gt; of the project's TypeScript configuration file (see &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular Compiler Options&lt;/a&gt;).</source>
          <target state="translated">컴파일러 옵션을 추가하여 명시 적으로이 단계를 사용 &lt;code&gt;&quot;fullTemplateTypeCheck&quot;&lt;/code&gt; 에서 &lt;code&gt;&quot;angularCompilerOptions&quot;&lt;/code&gt; 프로젝트의 타이프 라이터 구성 파일 (참조 : &lt;a href=&quot;angular-compiler-options&quot;&gt;각도 컴파일러 옵션&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="faa28fb670d9e554df72f4770b4d351a70b2299b" translate="yes" xml:space="preserve">
          <source>Enable users to select a hero from a master list and edit that hero in the details view.</source>
          <target state="translated">사용자가 마스터 목록에서 영웅을 선택하고 세부 정보보기에서 해당 영웅을 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af82fafd98183ea88b6b2ce709a425bba69efa9a" translate="yes" xml:space="preserve">
          <source>Enabled Angular debug tools that are accessible via your browser's developer console.</source>
          <target state="translated">브라우저의 개발자 콘솔을 통해 액세스 할 수있는 각도 디버그 도구.</target>
        </trans-unit>
        <trans-unit id="fb40fa7ce63184ee9b66dd0bfe91adbe467f8327" translate="yes" xml:space="preserve">
          <source>Enables '@angular-devkit/build-optimizer' optimizations when using the 'aot' option.</source>
          <target state="translated">'aot'옵션을 사용할 때 '@ angular-devkit / build-optimizer'최적화를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9df09e77f524ef461d3b4e5616b7fdd3566618a2" translate="yes" xml:space="preserve">
          <source>Enables &lt;a href=&quot;https://www.staging-typescript.org/tsconfig#strict&quot;&gt;&lt;code&gt;strict&lt;/code&gt; mode in TypeScript&lt;/a&gt;, as well as other strictness flags recommended by the TypeScript team. Specifically, &lt;code&gt;forceConsistentCasingInFileNames&lt;/code&gt;, &lt;code&gt;noImplicitReturns&lt;/code&gt;, &lt;code&gt;noFallthroughCasesInSwitch&lt;/code&gt;.</source>
          <target state="translated">수 있도록 &lt;a href=&quot;https://www.staging-typescript.org/tsconfig#strict&quot;&gt; &lt;code&gt;strict&lt;/code&gt; 타이프 모드&lt;/a&gt; 타이프 스크립트 팀에 의해 추천뿐만 아니라 다른 엄격 플래그. 특히 &lt;code&gt;forceConsistentCasingInFileNames&lt;/code&gt; , &lt;code&gt;noImplicitReturns&lt;/code&gt; , &lt;code&gt;noFallthroughCasesInSwitch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1cc047827e87383481e1ca961b5f9404a67422d" translate="yes" xml:space="preserve">
          <source>Enables a bug fix that corrects relative link resolution in components with empty paths.</source>
          <target state="translated">경로가 비어있는 구성 요소의 상대 링크 확인을 수정하는 버그 수정을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ac06417759dacb5336a8ec325b7c27700c913abc" translate="yes" xml:space="preserve">
          <source>Enables a bug fix that corrects relative link resolution in components with empty paths. Example:</source>
          <target state="translated">경로가 비어있는 구성 요소의 상대 링크 확인을 수정하는 버그 수정을 활성화합니다. 예:</target>
        </trans-unit>
        <trans-unit id="5576cd5af595cb792244725abdde9ed97de0e874" translate="yes" xml:space="preserve">
          <source>Enables conditionally loaded ES2015 polyfills.</source>
          <target state="translated">조건부로로드 된 ES2015 폴리 필을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="d7d0efe84209e6bb673aa9874f497d92f43c4e2a" translate="yes" xml:space="preserve">
          <source>Enables optimization of the build output.</source>
          <target state="translated">빌드 출력을 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92aba376f06cee090c7bd7984cb839f8f47ad6c7" translate="yes" xml:space="preserve">
          <source>Enables service worker build support in the CLI.</source>
          <target state="translated">CLI에서 서비스 워커 빌드 지원을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="8439cb165191b790c76249f97d7048f10bbb0e01" translate="yes" xml:space="preserve">
          <source>Enables the &lt;a href=&quot;ivy&quot;&gt;Ivy&lt;/a&gt; compilation and rendering pipeline. Default is &lt;code&gt;true&lt;/code&gt;, as of version 9. In version 9, you can &lt;a href=&quot;ivy#opting-out-of-angular-ivy&quot;&gt;opt out of Ivy&lt;/a&gt; to continue using the previous compiler, View Engine.</source>
          <target state="translated">&lt;a href=&quot;ivy&quot;&gt;Ivy&lt;/a&gt; 컴파일 및 렌더링 파이프 라인을 활성화합니다 . 기본값은 버전 9부터 &lt;code&gt;true&lt;/code&gt; 입니다. 버전 9에서는 &lt;a href=&quot;ivy#opting-out-of-angular-ivy&quot;&gt;Ivy&lt;/a&gt; 를 옵트 아웃 하여 이전 컴파일러 인 View Engine을 계속 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="816d66936a53cc03e36d791ff87d917b08ff2204" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;&lt;a href=&quot;common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service to read route state from the browser's URL. Angular provides two strategies: &lt;code&gt;&lt;a href=&quot;common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">가능 &lt;code&gt;&lt;a href=&quot;common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 브라우저의 URL에서 경로 상태를 읽을 수있는 서비스. Angular는 &lt;code&gt;&lt;a href=&quot;common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 의 두 가지 전략을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2fde15eb84da07dc5121c8a7b3c654796df3e1a2" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service to read route state from the browser's URL. Angular provides two strategies: &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">가능 &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 브라우저의 URL에서 경로 상태를 읽을 수있는 서비스. Angular는 &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 의 두 가지 전략을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ae2bf2b28b78634b6e274b5a4cb6685ee4236774" translate="yes" xml:space="preserve">
          <source>Enables the control. This means the control is included in validation checks and the aggregate value of its parent. Its status recalculates based on its value and its validators.</source>
          <target state="translated">제어를 가능하게합니다. 이는 컨트롤이 유효성 검사 및 해당 부모의 집계 값에 포함되어 있음을 의미합니다. 상태 및 값에 따라 상태가 다시 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="b9e46f25dc7ee87fb5ded014e116953e28110e6a" translate="yes" xml:space="preserve">
          <source>Enables the use of subresource integrity validation.</source>
          <target state="translated">하위 자원 무결성 검증을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc5a12db1e324c2b7dd69b3bfe2b8d7c1393abff" translate="yes" xml:space="preserve">
          <source>Enabling polyfills with CLI projects</source>
          <target state="translated">CLI 프로젝트로 폴리 필 활성화</target>
        </trans-unit>
        <trans-unit id="9d8f22cda3e727a39cb6d5f9cbc6920e3ee40de3" translate="yes" xml:space="preserve">
          <source>Enabling this flag initializes your new workspace or application with a few new settings that improve maintainability, help you catch bugs ahead of time. Additionally, applications that use these stricter settings are easier to statically analyze, which can help the &lt;code&gt;ng update&lt;/code&gt; command refactor code more safely and precisely when you are updating to future versions of Angular.</source>
          <target state="translated">이 플래그를 활성화하면 유지 보수성을 개선하는 몇 가지 새로운 설정으로 새 작업 공간 또는 애플리케이션을 초기화하여 미리 버그를 잡을 수 있습니다. 또한 이러한 더 엄격한 설정을 사용하는 애플리케이션은 정적으로 분석하기가 더 쉬우므로 Angular의 향후 버전으로 업데이트 할 때 &lt;code&gt;ng update&lt;/code&gt; 명령이 코드를 더 안전하고 정확하게 리팩터링 하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82d97a722f9bd2f260d6872e6e1c1368d68e3771" translate="yes" xml:space="preserve">
          <source>Encapsulates a child animation, that can be run explicitly when the parent is run. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">부모가 실행될 때 명시 적으로 실행할 수있는 자식 애니메이션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e67f35b0e15befa6112a86582de589af1eb6509e" translate="yes" xml:space="preserve">
          <source>Encapsulates a child animation, that can be run explicitly when the parent is run. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">부모가 실행될 때 명시 적으로 실행할 수있는 자식 애니메이션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="51602e00df41fab8699fc33a3d66db28f113b648" translate="yes" xml:space="preserve">
          <source>Encapsulates a keyframes sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">키 프레임 시퀀스를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="eea312371c9c4522fe9d154fe08ec79022831492" translate="yes" xml:space="preserve">
          <source>Encapsulates a keyframes sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">키 프레임 시퀀스를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="a4971d06afca83215d81f836e2dd45b2363e2baa" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation, which is a collection of individual animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function, and passed to the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">개별 애니메이션 단계의 모음 인 재사용 가능한 애니메이션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환되며 &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 함수에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="1df96d1474ff38a31de3fee689d9706e16ff0cf7" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation, which is a collection of individual animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function, and passed to the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">개별 애니메이션 단계의 모음 인 재사용 가능한 애니메이션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환되며 &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 함수에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e515e5130b8e32d6fc4afc2cd1acb89a77ff2b1" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">재사용 가능한 애니메이션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화 및 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="908ea316bcaabe15d2a8d34c21396e90c859dfc5" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">재사용 가능한 애니메이션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화 및 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9e77b22ce0e7c1986088f5d83407dea43be6d31" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation group. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 그룹을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="03afdf2ce28b3d3281d4d286b0f0ff4c68848a50" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation group. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 그룹을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="61a70386ff0fcf13a39642ec4421be17e8e2a47a" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation query. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 쿼리를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="716da4381a8b20dbe1fb7dcc1c06b3f846dff79f" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation query. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 쿼리를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="989bd79ad47de1872ca95560de7f37d0d0e3a0e5" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 시퀀스를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="7da932f27be4de034907616c90fd92e41720ef1c" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 시퀀스를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="5fe29ca1afe02d077482c094aea90fabb2efb91b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">상태 이름을 CSS 스타일 세트와 연관시켜 애니메이션 상태를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="4336a1c75521c5fd083d38b6cd227c9d71adc1e4" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">상태 이름을 CSS 스타일 세트와 연결하여 애니메이션 상태를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="cafcceea439c9d880e4ca5a76ed6a50dd8d4396b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">상태 이름을 CSS 스타일 세트와 연관시켜 애니메이션 상태를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="aa47842c405380fcf5e4456a0e8704c154dee6f9" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">상태 이름을 CSS 스타일 세트와 연결하여 애니메이션 상태를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="848b7c49de9bb7153581107ae1af63e989ae6480" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation step. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 단계를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="80c96b46d45590ad7a6e326fa324ed5d0d342266" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation step. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 단계를 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="205b24cabe22de4f517ff9953be8f2d04d4fd906" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation style. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 스타일을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="28b7fdc6da92b3ee02f32d9b3c5bc61e51f8aa7a" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation style. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 스타일을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="0347672b48914062705bfc7b4877d25dc434353d" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation transition. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 전환을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="d21db759b804367fab355379fa8f13a93cee565b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation transition. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 전환을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="9433882cf665f44d956b41fd6eacf7d14fa7342a" translate="yes" xml:space="preserve">
          <source>Encapsulates animation query options. Passed to the &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 쿼리 옵션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 함수에 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2731904c5fe656868e3f9d4d06263a10ed9fef1b" translate="yes" xml:space="preserve">
          <source>Encapsulates animation query options. Passed to the &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">애니메이션 쿼리 옵션을 캡슐화합니다. &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 함수에 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5b28f5efce82bd292d38c6feae74c4c1b401975a" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for staggering the start times of a set of animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">일련의 애니메이션 단계의 시작 시간을 엇갈리게하기위한 매개 변수를 캡슐화합니다. 스 &lt;code&gt;&lt;a href=&quot;animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="5bd43f9c52ef5eae490d0a9249eb0180efef2307" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for staggering the start times of a set of animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">일련의 애니메이션 단계의 시작 시간을 엇갈리게하기위한 매개 변수를 캡슐화합니다. 스 &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 함수에 의해 인스턴스화되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="ac811c547df2bcc849a4681b3e4d095a334e1748" translate="yes" xml:space="preserve">
          <source>Encodes a key name for a URL parameter or query-string.</source>
          <target state="translated">URL 매개 변수 또는 쿼리 문자열의 키 이름을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="4e6d7597b00dee1d9b12f8c3da253b16ded5abb2" translate="yes" xml:space="preserve">
          <source>Encodes the hash from the provided string</source>
          <target state="translated">제공된 문자열에서 해시를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="5a0cd9b2e8022370b3b0509a9427ccd7da2f8cec" translate="yes" xml:space="preserve">
          <source>Encodes the path from the provided string</source>
          <target state="translated">제공된 문자열에서 경로를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="c260306266d65e958485bd681dfb08b84f4a2140" translate="yes" xml:space="preserve">
          <source>Encodes the search string from the provided string or object</source>
          <target state="translated">제공된 문자열 또는 객체에서 검색 문자열을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="e03641fe608821032997c71c5a56090f82fc2bdb" translate="yes" xml:space="preserve">
          <source>Encodes the value of a URL parameter or query-string.</source>
          <target state="translated">URL 매개 변수 또는 쿼리 문자열의 값을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="20f40c58b071e9a7277373457706db22c56f22db" translate="yes" xml:space="preserve">
          <source>End-to-End Tests</source>
          <target state="translated">엔드 투 엔드 테스트</target>
        </trans-unit>
        <trans-unit id="b3f18894771fc8d6f088ca31ff6911e75200c41f" translate="yes" xml:space="preserve">
          <source>End-to-end test files</source>
          <target state="translated">엔드 투 엔드 테스트 파일</target>
        </trans-unit>
        <trans-unit id="a2365ba72108d31cd3d6c1c16496babe7ef35421" translate="yes" xml:space="preserve">
          <source>Ends a async time range operation. [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been enabled.</source>
          <target state="translated">비동기 시간 범위 작업을 종료합니다. [range]는 [wtfStartTimeRange]의 반환 값입니다. 비동기 범위는 WTF가 활성화 된 경우에만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="fe030e0ac9483f1774410e532b40c19c3058c1ba" translate="yes" xml:space="preserve">
          <source>Ends the animation, invoking the &lt;code&gt;onDone()&lt;/code&gt; callback.</source>
          <target state="translated">&lt;code&gt;onDone()&lt;/code&gt; 콜백을 호출하여 애니메이션을 종료합니다 .</target>
        </trans-unit>
        <trans-unit id="9665f4b305296947e9b5d1bdc20031bf7420667a" translate="yes" xml:space="preserve">
          <source>Enhanced Angular Material components by integrating &lt;a href=&quot;https://material.io/develop/web/&quot;&gt;MDC Web&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://material.io/develop/web/&quot;&gt;MDC Web&lt;/a&gt; 을 통합하여 Angular Material 구성 요소 향상</target>
        </trans-unit>
        <trans-unit id="333896d2f113281ad068983432c193866efd2cd5" translate="yes" xml:space="preserve">
          <source>Ensure smooth adoption for future RxJS changes (v7 and beyond)</source>
          <target state="translated">향후 RxJS 변경 (v7 이상)에 대한 원활한 채택 보장</target>
        </trans-unit>
        <trans-unit id="6cc1a9c010adc0d963f45d36b2ca51ffbc23ff25" translate="yes" xml:space="preserve">
          <source>Ensure that you are not already in an Angular workspace folder. For example, if you have previously created the Getting Started workspace, change to the parent of that folder.</source>
          <target state="translated">Angular 작업 영역 폴더에 있지 않은지 확인하십시오. 예를 들어, 시작하기 작업 공간을 이전에 작성한 경우 해당 폴더의 상위로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="5b985be3e4f20d96de12f00976c4c0910fb4bdc8" translate="yes" xml:space="preserve">
          <source>Ensuring valid data</source>
          <target state="translated">유효한 데이터 보장</target>
        </trans-unit>
        <trans-unit id="945c30b6d2cd9f42f65f94b2363c4b07a4390ca9" translate="yes" xml:space="preserve">
          <source>Enter a URL in the address bar and the browser navigates to a corresponding page.</source>
          <target state="translated">주소 표시 줄에 URL을 입력하면 브라우저가 해당 페이지로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="5b2837eec05b4cbd4f8e485666e49854e6c7fb61" translate="yes" xml:space="preserve">
          <source>Enter a URL in the address bar, and the browser navigates to a corresponding page.</source>
          <target state="translated">주소 표시 줄에 URL을 입력하면 브라우저가 해당 페이지로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="1fd361c250e37b989d268cec38571e912b6b1713" translate="yes" xml:space="preserve">
          <source>Enter a name and click &lt;em&gt;New Hero&lt;/em&gt; again. The app displays a &lt;em&gt;Name is required&lt;/em&gt; error message. You don't want error messages when you create a new (empty) hero. Why are you getting one now?</source>
          <target state="translated">이름을 입력하고 &lt;em&gt;New Hero를&lt;/em&gt; 다시 클릭 하십시오. 앱에 &lt;em&gt;이름이 필요합니다&lt;/em&gt; 오류 메시지 &lt;em&gt;가&lt;/em&gt; 표시됩니다 . 새로운 (빈) 영웅을 만들 때 오류 메시지를 원하지 않습니다. 왜 지금 받고 있어요?</target>
        </trans-unit>
        <trans-unit id="8210de41e67214f6cf427db9551e909c01803fd9" translate="yes" xml:space="preserve">
          <source>Enter a name and click &lt;strong&gt;New Hero&lt;/strong&gt; again.</source>
          <target state="translated">이름을 입력하고 &lt;strong&gt;New Hero를&lt;/strong&gt; 다시 클릭 합니다.</target>
        </trans-unit>
        <trans-unit id="188467cb6368c1cb94636621183dfaf578290d14" translate="yes" xml:space="preserve">
          <source>Entering a URL in the address bar to navigate to a corresponding view.</source>
          <target state="translated">주소 표시 줄에 URL을 입력하여 해당보기로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b49822088cea36d8bc8b7f290b066e9029739611" translate="yes" xml:space="preserve">
          <source>Entry Components</source>
          <target state="translated">엔트리 구성 요소</target>
        </trans-unit>
        <trans-unit id="007cbf2ba452e4583d408203d5a0b563eaf1b009" translate="yes" xml:space="preserve">
          <source>Entry and exit transitions:</source>
          <target state="translated">입국 및 퇴장 전환 :</target>
        </trans-unit>
        <trans-unit id="94e78ad85acf81b8f808775347cc5e5fb61215b4" translate="yes" xml:space="preserve">
          <source>Entry components</source>
          <target state="translated">엔트리 컴포넌트</target>
        </trans-unit>
        <trans-unit id="ff9189b5aa6efac11c15287a492b218d79dd096a" translate="yes" xml:space="preserve">
          <source>Entry point exports</source>
          <target state="translated">진입 점 수출</target>
        </trans-unit>
        <trans-unit id="18f73528d44427047489bb703aa3ca755342dbbb" translate="yes" xml:space="preserve">
          <source>Entry points</source>
          <target state="translated">진입 점</target>
        </trans-unit>
        <trans-unit id="3a571a4359b2cd140372e237ef5e3c2c5a6186c5" translate="yes" xml:space="preserve">
          <source>Enumerates the set of data-bound input properties for a directive</source>
          <target state="translated">지시문에 대한 데이터 바인딩 된 입력 속성 집합을 열거합니다.</target>
        </trans-unit>
        <trans-unit id="64101c05a2cf6652261d1745a418b7e927fca228" translate="yes" xml:space="preserve">
          <source>Enumerates the set of event-bound output properties.</source>
          <target state="translated">이벤트 바운드 출력 속성 세트를 열거합니다.</target>
        </trans-unit>
        <trans-unit id="f37a89cbd1a73777b5e65ae13dd77ca3e52051eb" translate="yes" xml:space="preserve">
          <source>Era</source>
          <target state="translated">Era</target>
        </trans-unit>
        <trans-unit id="9c58e3328b0971c008ce1a1e8bfc4788ff407a2c" translate="yes" xml:space="preserve">
          <source>Erase the name.</source>
          <target state="translated">이름을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="85784d82533506abf58bc8a91d6a6171d7b3482c" translate="yes" xml:space="preserve">
          <source>Erase the name. This makes the value invalid, so the &lt;code&gt;ng-invalid&lt;/code&gt; class replaces the &lt;code&gt;ng-valid&lt;/code&gt; class.</source>
          <target state="translated">이름을 지 웁니다. 이로 인해 값이 무효화되므로 &lt;code&gt;ng-invalid&lt;/code&gt; 클래스가 &lt;code&gt;ng-valid&lt;/code&gt; 클래스를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="a48c99c0bb82a825b2de88b6ef8dcb4228c5619d" translate="yes" xml:space="preserve">
          <source>Ergonomic component level code-splitting APIs</source>
          <target state="translated">인체 공학적 구성 요소 수준 코드 분할 API</target>
        </trans-unit>
        <trans-unit id="f5c2b7865df76e15d4c3b162675500c5f27ce98d" translate="yes" xml:space="preserve">
          <source>Error checking</source>
          <target state="translated">오류 확인</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="31c5a2a3b0e1cc6c9bcf73618e9aab80710648ad" translate="yes" xml:space="preserve">
          <source>Error handling (and specifically recovering from an error) is covered in more detail in a later section.</source>
          <target state="translated">오류 처리 (특히 오류에서 복구)에 대해서는 이후 섹션에서 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="4aab21f64f3ae2fed4694ee476bc130ac9bdcd17" translate="yes" xml:space="preserve">
          <source>Error inspection, interpretation, and resolution is something you want to do in the &lt;em&gt;service&lt;/em&gt;, not in the &lt;em&gt;component&lt;/em&gt;.</source>
          <target state="translated">오류 검사, 해석 및 해결은 &lt;em&gt;구성 요소가&lt;/em&gt; 아닌 &lt;em&gt;서비스&lt;/em&gt; 에서 수행하려는 작업입니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5daf5951c44906b1a70c4f80876b6552604e100e" translate="yes" xml:space="preserve">
          <source>Error messages often bring limited actionable information to help developers resolve them. We&amp;rsquo;ve been working on making error messages more discoverable by adding associated codes, developing guides, and other materials to ensure a smoother debugging experience.</source>
          <target state="translated">오류 메시지는 종종 개발자가 문제를 해결하는 데 도움이되는 제한된 실행 가능한 정보를 가져옵니다. 더 원활한 디버깅 환경을 보장하기 위해 관련 코드, 개발 가이드 및 기타 자료를 추가하여 오류 메시지를 더 쉽게 발견 할 수 있도록 노력하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1dc7f57ed4361a9994d5f5c1df19b68553d2dcf" translate="yes" xml:space="preserve">
          <source>Error: throw an error. If you are using AOT compilation, the build will fail. If you are using JIT compilation, the app will fail to load.</source>
          <target state="translated">오류 : 오류가 발생합니다. AOT 컴파일을 사용하는 경우 빌드가 실패합니다. JIT 컴파일을 사용중인 경우 앱이로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ce56d364feb43e7a2088dcd76ace52325393f7b" translate="yes" xml:space="preserve">
          <source>Error: throw if you have missing translations.</source>
          <target state="translated">오류 : 번역이 누락 된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="441c4e5aa8c59a894a04039c4f26123cabb982c1" translate="yes" xml:space="preserve">
          <source>ErrorHandler</source>
          <target state="translated">ErrorHandler</target>
        </trans-unit>
        <trans-unit id="e479225976d3687521ab58ddd623c11dd3670242" translate="yes" xml:space="preserve">
          <source>Errors are never okay, even when the status code is in the 2xx success range.</source>
          <target state="translated">상태 코드가 2xx 성공 범위에 있어도 오류는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="140f12ddf60a5bdd192c50cefaefa3e1c9f117cf" translate="yes" xml:space="preserve">
          <source>Errors during the build process could result in updated resources without &lt;code&gt;ngsw.json&lt;/code&gt; being updated. The reverse could also happen resulting in an updated &lt;code&gt;ngsw.json&lt;/code&gt; without updated resources.</source>
          <target state="translated">빌드 프로세스 중 오류로 &lt;code&gt;ngsw.json&lt;/code&gt; 을 업데이트 하지 않고 업데이트 된 리소스가 발생할 수 있습니다 . 업데이트 된 리소스없이 업데이트 된 &lt;code&gt;ngsw.json&lt;/code&gt; 이 발생하는 역순도 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd18a877ca7b0ceaa366b88dcd78fd4a5b4438f9" translate="yes" xml:space="preserve">
          <source>Errors in AOT compilation commonly occur because of metadata that does not conform to the compiler's requirements (as described more fully below). For help in understanding and resolving these problems, see &lt;a href=&quot;aot-metadata-errors&quot;&gt;AOT Metadata Errors&lt;/a&gt;.</source>
          <target state="translated">AOT 컴파일의 오류는 일반적으로 컴파일러의 요구 사항을 준수하지 않는 메타 데이터로 인해 발생합니다 (아래에 자세히 설명되어 있음). 이러한 문제를 이해하고 해결하는 데 도움이 필요하면 &lt;a href=&quot;aot-metadata-errors&quot;&gt;AOT 메타 데이터 오류를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f5d1776185d17f7f636da072a52b82b51304a31" translate="yes" xml:space="preserve">
          <source>Errors that occur within the service worker will be logged here.</source>
          <target state="translated">서비스 워커에서 발생하는 오류가 여기에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="2e99501d4fb7d1aedbfd96dace7464daa9c0f046" translate="yes" xml:space="preserve">
          <source>Establish a data model to represent form controls.</source>
          <target state="translated">양식 컨트롤을 나타내는 데이터 모델을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6eebfc5a8e55779a7589ac3319e418c8eede142b" translate="yes" xml:space="preserve">
          <source>Evaluation of a template expression should have no visible side effects. The expression language itself, or the way you write template expressions, helps to a certain extent; you can't assign a value to anything in a property binding expression nor use the increment and decrement operators.</source>
          <target state="translated">템플릿 표현식의 평가에는 부작용이 없어야합니다. 표현식 언어 자체 또는 템플릿 표현식 작성 방식은 어느 정도 도움이됩니다. 속성 바인딩 표현식의 값에 값을 할당하거나 증가 및 감소 연산자를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dc8dd35816c46ff173ec4619de1471801fed391e" translate="yes" xml:space="preserve">
          <source>Evaluation of a template expression should have no visible side effects. Use the syntax for template expressions to help avoid side effects. In general, the correct syntax prevents you from assigning a value to anything in a property binding expression. The syntax also prevents you from using increment and decrement operators.</source>
          <target state="translated">템플릿 표현식의 평가에는 눈에 보이는 부작용이 없어야합니다. 부작용을 방지하려면 템플릿 표현식에 구문을 사용하십시오. 일반적으로 올바른 구문은 속성 바인딩 식의 어떤 항목에도 값을 할당하지 못하게합니다. 구문은 또한 증가 및 감소 연산자를 사용하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="850e9818f40adbc977c81ae6399f41133a13fd54" translate="yes" xml:space="preserve">
          <source>Even a small form such as this one can produce a mess of tortured conditional setup and CSS element selection.</source>
          <target state="translated">이와 같은 작은 형식조차도 고문 조건부 설정과 CSS 요소 선택의 혼란을 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3769401ed313e5329253644819bfce1f955dbb33" translate="yes" xml:space="preserve">
          <source>Even accounting for these differences you can still have dependency injection interoperability. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; resolves the differences and makes everything work seamlessly:</source>
          <target state="translated">이러한 차이점을 고려하더라도 종속성 주입 상호 운용성을 유지할 수 있습니다. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; 은 차이점을 해결하고 모든 것이 원활하게 작동하도록합니다.</target>
        </trans-unit>
        <trans-unit id="e16b061e3708e3fc68014096083cafee7c7ce978" translate="yes" xml:space="preserve">
          <source>Even across a fast reliable network, round-trip delays can introduce significant latency when loading the application. Using a service worker to reduce dependency on the network can significantly improve the user experience.</source>
          <target state="translated">빠르고 안정적인 네트워크에서도 왕복 지연으로 인해 애플리케이션을로드 할 때 상당한 대기 시간이 발생할 수 있습니다. 서비스 워커를 사용하여 네트워크에 대한 종속성을 줄이면 사용자 경험이 크게 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d077313c4f8be84916129e534e1c9472b805611" translate="yes" xml:space="preserve">
          <source>Even though the components declared by &lt;code&gt;SharedModule&lt;/code&gt; might not bind with &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; and there may be no need for &lt;code&gt;SharedModule&lt;/code&gt; to import &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;SharedModule&lt;/code&gt; can still export &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; without listing it among its &lt;code&gt;imports&lt;/code&gt;. This way, you can give other modules access to &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; without having to import it directly into the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">구성 요소가 선언에도 불구하고 &lt;code&gt;SharedModule&lt;/code&gt; 과 결합하지 않을 수 있습니다 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; 과 대한 필요가 없을 수도 &lt;code&gt;SharedModule&lt;/code&gt; 수입에 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;SharedModule&lt;/code&gt; 여전히 할 수있는 수출 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 의 사이를 나열하지 않고 &lt;code&gt;imports&lt;/code&gt; . 이렇게 하면 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt; 데코레이터 로 직접 가져올 필요없이 다른 모듈에 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 에 대한 액세스 권한을 부여 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ac2045e3dc81152fb554884060276dbdd76671d" translate="yes" xml:space="preserve">
          <source>Even thought the component is instantiated in AngularJS, it will be using Angular syntax. This has to be done, this way because we must follow Angular components do not declare how the attributes should be interpreted.</source>
          <target state="translated">컴포넌트가 AngularJS에서 인스턴스화되었다고 생각하더라도 Angular 구문을 사용합니다. 우리는 Angular 컴포넌트를 따라야 속성을 해석하는 방법을 선언하지 않기 때문에 이렇게해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="a4b8c14cddb2f1885a3b5243af7a8673f906232d" translate="yes" xml:space="preserve">
          <source>Event and property</source>
          <target state="translated">행사 및 재산</target>
        </trans-unit>
        <trans-unit id="653b2d725355aff89cbe9374190b125e15219f77" translate="yes" xml:space="preserve">
          <source>Event binding</source>
          <target state="translated">이벤트 바인딩</target>
        </trans-unit>
        <trans-unit id="8861df64fa83a4b1d28dece2f39cadeb0dc09bc4" translate="yes" xml:space="preserve">
          <source>Event binding &lt;code&gt;( )&lt;/code&gt;</source>
          <target state="translated">이벤트 바인딩 &lt;code&gt;( )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa9823491ce467db213d22bc6b83c462e08f3718" translate="yes" xml:space="preserve">
          <source>Event binding &lt;code&gt;(event)&lt;/code&gt;</source>
          <target state="translated">이벤트 바인딩 &lt;code&gt;(event)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b19e33e110b0e60dede192bc05e31bc232edf4a" translate="yes" xml:space="preserve">
          <source>Event binding allows you to listen for and respond to user actions such as keystrokes, mouse movements, clicks, and touches.</source>
          <target state="translated">이벤트 바인딩을 사용하면 키 입력, 마우스 이동, 클릭 및 터치와 같은 사용자 작업을 수신하고 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77b48624494a6f0a9df34e45edd94c677ed6320e" translate="yes" xml:space="preserve">
          <source>Event binding allows you to listen for certain events such as keystrokes, mouse movements, clicks, and touches. For an example demonstrating all of the points in this section, see the &lt;span name=&quot;event-binding&quot;&gt;event binding example&lt;/span&gt;.</source>
          <target state="translated">이벤트 바인딩을 사용하면 키 입력, 마우스 움직임, 클릭 및 터치와 같은 특정 이벤트를들을 수 있습니다. 이 섹션의 모든 요점을 보여주는 예제는 &lt;span name=&quot;event-binding&quot;&gt;이벤트 바인딩 예제를&lt;/span&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="87f25a7f8c6489fdeb43b0e84d80feee4996cddd" translate="yes" xml:space="preserve">
          <source>Event emitter for producing the &lt;code&gt;ngModelChange&lt;/code&gt; event after the view model updates.</source>
          <target state="translated">뷰 모델이 업데이트 된 후 &lt;code&gt;ngModelChange&lt;/code&gt; 이벤트 를 생성하기위한 이벤트 이미 터 .</target>
        </trans-unit>
        <trans-unit id="b128948626495abc382e1e64d3eeecac95ddb8c7" translate="yes" xml:space="preserve">
          <source>Event emitter for the &quot;ngSubmit&quot; event</source>
          <target state="translated">&quot;ngSubmit&quot;이벤트의 이벤트 이미 터</target>
        </trans-unit>
        <trans-unit id="c56267c039db3d3b1ba5e7d51b4190b357b8e3bb" translate="yes" xml:space="preserve">
          <source>Event listener configuration returned from &lt;code&gt;&lt;a href=&quot;global/nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;global/nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt; 에서 반환 된 이벤트 리스너 구성 입니다.</target>
        </trans-unit>
        <trans-unit id="73e7242d72278d77020701c0514dedc2b9cce425" translate="yes" xml:space="preserve">
          <source>Event listener configuration returned from &lt;code&gt;&lt;a href=&quot;nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt; 에서 반환 된 이벤트 리스너 구성 입니다.</target>
        </trans-unit>
        <trans-unit id="8b38de0eda9857ebdbcd12bdbd0e63305b36cc10" translate="yes" xml:space="preserve">
          <source>Event: &lt;code&gt;&amp;lt;comp (close)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">이벤트 : &lt;code&gt;&amp;lt;comp (close)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5876adadbcd068acd9f996c259fbd067d5cbf8d9" translate="yes" xml:space="preserve">
          <source>EventEmitter</source>
          <target state="translated">EventEmitter</target>
        </trans-unit>
        <trans-unit id="913641e09266e8cb48d5e95316fd86cbe16755ba" translate="yes" xml:space="preserve">
          <source>EventManager</source>
          <target state="translated">EventManager</target>
        </trans-unit>
        <trans-unit id="fe344110e73a74f72736069ed919c062c627ec74" translate="yes" xml:space="preserve">
          <source>Events API</source>
          <target state="translated">이벤트 API</target>
        </trans-unit>
        <trans-unit id="8da7c1c5bd31b41021042d6be49c271cb61391f5" translate="yes" xml:space="preserve">
          <source>Eventually you'll get them from a remote data server. For now, you'll create some &lt;em&gt;mock heroes&lt;/em&gt; and pretend they came from the server.</source>
          <target state="translated">결국 원격 데이터 서버에서 가져옵니다. 지금은 &lt;em&gt;모의 영웅을&lt;/em&gt; 만들어 서버에서 온 척하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1f103dec1c98bfc6accaa7ec6f90d5f9d7a5b16c" translate="yes" xml:space="preserve">
          <source>Every Angular app has a &lt;em&gt;root module&lt;/em&gt;, conventionally named &lt;code&gt;AppModule&lt;/code&gt;, which provides the bootstrap mechanism that launches the application. An app typically contains many functional modules.</source>
          <target state="translated">모든 Angular 앱에는 일반적으로 &lt;code&gt;AppModule&lt;/code&gt; 이라는 &lt;em&gt;루트 모듈&lt;/em&gt; 이 있습니다.이 &lt;em&gt;모듈&lt;/em&gt; 은 애플리케이션을 시작하는 부트 스트랩 메커니즘을 제공합니다. 앱에는 일반적으로 많은 기능 모듈이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6daf3b062f03c71d4fae2209ffdc85e874f89f66" translate="yes" xml:space="preserve">
          <source>Every Angular app has at least one NgModule class, &lt;a href=&quot;bootstrapping&quot;&gt;the &lt;em&gt;root module&lt;/em&gt;&lt;/a&gt;, which is conventionally named &lt;code&gt;AppModule&lt;/code&gt; and resides in a file named &lt;code&gt;app.module.ts&lt;/code&gt;. You launch your app by &lt;em&gt;bootstrapping&lt;/em&gt; the root NgModule.</source>
          <target state="translated">모든 각도 응용 프로그램은 적어도 하나의 NgModule 클래스가 &lt;a href=&quot;bootstrapping&quot;&gt;&lt;em&gt;루트 모듈&lt;/em&gt;&lt;/a&gt; 종래 이름, &lt;code&gt;AppModule&lt;/code&gt; 라는 이름의 파일과 상주 &lt;code&gt;app.module.ts&lt;/code&gt; 을 . 루트 NgModule 을 &lt;em&gt;부트 스트랩&lt;/em&gt; 하여 앱을 시작합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="483c63e0bfa0f7ca6f63472bc5879db0599afb08" translate="yes" xml:space="preserve">
          <source>Every Angular app has at least one module, the root module. You &lt;a href=&quot;bootstrapping&quot;&gt;bootstrap&lt;/a&gt; that module to launch the application.</source>
          <target state="translated">모든 Angular 앱에는 하나 이상의 모듈 인 루트 모듈이 있습니다. 당신은 &lt;a href=&quot;bootstrapping&quot;&gt;부트 스트랩&lt;/a&gt; 응용 프로그램을 실행하기 위해 해당 모듈을.</target>
        </trans-unit>
        <trans-unit id="820ed242310301e24986112a7cff648414c77911" translate="yes" xml:space="preserve">
          <source>Every Angular application has a root module. By convention, the class is called &lt;code&gt;AppModule&lt;/code&gt; and resides in a file named &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">모든 Angular 응용 프로그램에는 루트 모듈이 있습니다. 일반적으로 클래스는 &lt;code&gt;AppModule&lt;/code&gt; 이며 &lt;code&gt;app.module.ts&lt;/code&gt; 라는 파일에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c35630c98a82ad178da0ab9c1b5acf827ada573b" translate="yes" xml:space="preserve">
          <source>Every Angular application has at least one component, the &lt;em&gt;root component&lt;/em&gt; that connects a component hierarchy with the page document object model (DOM). Each component defines a class that contains application data and logic, and is associated with an HTML &lt;em&gt;template&lt;/em&gt; that defines a view to be displayed in a target environment.</source>
          <target state="translated">모든 Angular 응용 프로그램에는 구성 요소 계층을 페이지 문서 개체 모델 (DOM)과 연결하는 &lt;em&gt;루트 구성&lt;/em&gt; 요소 인 하나 이상의 구성 &lt;em&gt;요소&lt;/em&gt; 가 있습니다. 각 구성 요소는 응용 프로그램 데이터와 논리를 포함하는 클래스를 정의하며 대상 환경에 표시 할보기를 정의 하는 HTML &lt;em&gt;템플릿&lt;/em&gt; 과 연결 됩니다.</target>
        </trans-unit>
        <trans-unit id="21950ef1d3b08fa378394db102c287c7e9d9c230" translate="yes" xml:space="preserve">
          <source>Every app is different. Developers have various levels of experience and comfort with the available choices. Some suggestions and guidelines appear to have wide appeal.</source>
          <target state="translated">모든 앱은 다릅니다. 개발자는 선택의 폭이 넓어 다양한 경험과 편안함을 누릴 수 있습니다. 일부 제안과 지침은 폭넓게 호소력이있는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="53c892053be276bc3b640b778522647ac9691d78" translate="yes" xml:space="preserve">
          <source>Every application starts out with what seems like a simple task: get data, transform them, and show them to users. Getting data could be as simple as creating a local variable or as complex as streaming data over a WebSocket.</source>
          <target state="translated">모든 응용 프로그램은 간단한 작업으로 시작합니다. 데이터를 가져 와서 변환하고 사용자에게 표시합니다. 데이터를 얻는 것은 로컬 변수를 만드는 것만 큼 간단하거나 WebSocket을 통한 데이터 스트리밍처럼 복잡 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9801e8ee8ba60600fa9d73e2004199dd124e627e" translate="yes" xml:space="preserve">
          <source>Every component must be declared in &lt;em&gt;exactly one&lt;/em&gt;&lt;a href=&quot;../guide/ngmodules&quot;&gt;NgModule&lt;/a&gt;.</source>
          <target state="translated">모든 컴포넌트는 &lt;em&gt;정확히 하나의 &lt;/em&gt;&lt;a href=&quot;../guide/ngmodules&quot;&gt;NgModule&lt;/a&gt; 로 선언되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="79baa39550c28364e350af4ed0e3840b932ee20d" translate="yes" xml:space="preserve">
          <source>Every component requires a CSS &lt;em&gt;selector&lt;/em&gt;. A selector instructs Angular to instantiate this component wherever it finds the corresponding tag in template HTML. For example, consider a component, &lt;code&gt;hello-world.component.ts&lt;/code&gt; that defines its selector as &lt;code&gt;app-hello-world&lt;/code&gt;. This selector instructs angular to instantiate this component any time the tag, &lt;code&gt;&amp;lt;app-hello-world&amp;gt;&lt;/code&gt; in a template.</source>
          <target state="translated">모든 구성 요소에는 CSS &lt;em&gt;선택기&lt;/em&gt; 가 필요합니다 . 선택기는 템플릿 HTML에서 해당 태그를 찾을 때마다이 구성 요소를 인스턴스화하도록 Angular에 지시합니다. 예를 들어, 선택기를 &lt;code&gt;app-hello-world&lt;/code&gt; 로 정의하는 &lt;code&gt;hello-world.component.ts&lt;/code&gt; 컴포넌트를 고려하십시오 . 이 선택기 는 템플릿에서 &lt;code&gt;&amp;lt;app-hello-world&amp;gt;&lt;/code&gt; 태그가있을 때마다이 구성 요소를 인스턴스화하도록 angular에 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="4952a251d677b65b9b459f62edb6a04fc9616121" translate="yes" xml:space="preserve">
          <source>Every guide document must have a title.</source>
          <target state="translated">모든 가이드 문서에는 제목이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5fa540bcfc1b39a5cf26b4f552a9a0a6f39ad11c" translate="yes" xml:space="preserve">
          <source>Every guide page file is stored in the &lt;code&gt;content/guide&lt;/code&gt; directory. Although the &lt;a href=&quot;docs-style-guide#navigation&quot;&gt;side navigation&lt;/a&gt; panel displays as a hierarchy, the directory is flat with no sub-folders. The flat folder approach allows us to shuffle the apparent navigation structure without moving page files or redirecting old page URLs.</source>
          <target state="translated">모든 안내 페이지 파일은 &lt;code&gt;content/guide&lt;/code&gt; 디렉토리에 저장됩니다 . 있지만 &lt;a href=&quot;docs-style-guide#navigation&quot;&gt;측면 탐색&lt;/a&gt; 계층 구조로 패널 디스플레이, 디렉토리없이 하위 폴더와 평평하다. 플랫 폴더 접근 방식을 사용하면 페이지 파일을 이동하거나 이전 페이지 URL을 리디렉션하지 않고도 명확한 탐색 구조를 섞을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d886ac38f851fdbc187ae78a3b2d9fde9be44cd7" translate="yes" xml:space="preserve">
          <source>Every node in the route tree is an &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; instance that knows about the &quot;consumed&quot; URL segments, the extracted parameters, and the resolved data. Use the &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; properties to traverse the tree from any node.</source>
          <target state="translated">라우트 트리의 모든 노드 는 &quot;소비 된&quot;URL 세그먼트, 추출 된 매개 변수 및 분석 된 데이터에 대해 알고 있는 &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 인스턴스입니다. &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 속성을 사용하여 노드에서 트리를 탐색하십시오.</target>
        </trans-unit>
        <trans-unit id="6ea96237603d72502bbf6d1b0c42d01f5d2953c0" translate="yes" xml:space="preserve">
          <source>Every progress event triggers change detection, so only turn them on if you truly intend to report progress in the UI.</source>
          <target state="translated">모든 진행 이벤트는 변경 감지를 트리거하므로 UI에서 진행 상황을보고하려는 경우에만 설정하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
