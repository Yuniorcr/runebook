<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="b69003587c867e7e340524002fd1fa86252f3e32" translate="yes" xml:space="preserve">
          <source>Only call this helper once per spec.</source>
          <target state="translated">이 헬퍼를 스펙 당 한 번만 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="6aa9ccc779fdff35f7ff277e0df6325b119d6fc7" translate="yes" xml:space="preserve">
          <source>Only initialized variables and constants</source>
          <target state="translated">초기화 된 변수와 상수 만</target>
        </trans-unit>
        <trans-unit id="579011de1d1d6760beff0e58edfe23acc7999e43" translate="yes" xml:space="preserve">
          <source>Only perform a migration, does not update the installed version.</source>
          <target state="translated">마이그레이션 만 수행하고 설치된 버전을 업데이트하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5948c9e6e775727987047ca9af9b8a29758babf" translate="yes" xml:space="preserve">
          <source>Only present if the responseType was &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">responseType이 &lt;code&gt;text&lt;/code&gt; 인 경우에만 존재 합니다 .</target>
        </trans-unit>
        <trans-unit id="07a621a1056b71ac908fc1c5cb0788cffa208462" translate="yes" xml:space="preserve">
          <source>Only reference exported symbols after &lt;a href=&quot;aot-compiler#code-folding&quot;&gt;code folding&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;aot-compiler#code-folding&quot;&gt;코드 접기&lt;/a&gt; 후 내 보낸 심볼 만 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e67718ded8b6cd36fa81294f9254fb2753c502b" translate="yes" xml:space="preserve">
          <source>Only requests whose URLs match &lt;em&gt;any&lt;/em&gt; of the non-negative URLs/patterns and &lt;em&gt;none&lt;/em&gt; of the negative ones will be considered navigation requests. The URL query will be ignored when matching.</source>
          <target state="translated">만 URL이 일치하는 요청에 &lt;em&gt;어떤&lt;/em&gt; 비 음성의 URL / 패턴이하고 &lt;em&gt;아무도&lt;/em&gt; 부정적인 것들의 탐색 요청을 간주되지 않습니다. 일치하면 URL 쿼리가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="fae8b36196c2d7c9bc82e024818e47073fff7e2b" translate="yes" xml:space="preserve">
          <source>Only some of the features of &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/%24compile&quot;&gt;Directive Definition Object&lt;/a&gt; are supported:</source>
          <target state="translated">&lt;a href=&quot;https://docs.angularjs.org/api/ng/service/%24compile&quot;&gt;Directive Definition Object&lt;/a&gt; 의 일부 기능 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0a4f1cd58a04fbb4f4579ee87ee3d34b9e5ff5d0" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; method resolves the configuration and overrides through the &lt;code&gt;angular.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; 메소드 만 구성을 분석하고 &lt;code&gt;angular.json&lt;/code&gt; 파일을 통해 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="badba1b20de1ae8cafa9eb1a80fd811428d174c8" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;en-US&lt;/code&gt; locale data comes with Angular. To localize dates in another language, you must import the corresponding locale data. See the &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;I18n guide&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; 로캘 데이터 만 Angular와 함께 제공됩니다. 다른 언어로 날짜를 현지화하려면 해당 로케일 데이터를 가져와야합니다. 자세한 내용은 &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;I18n 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="572abade960d96039060d52044e78dceb7d7938a" translate="yes" xml:space="preserve">
          <source>Only the last three lines of this file actually test the component and all they do is assert that Angular can create the component.</source>
          <target state="translated">이 파일의 마지막 세 줄만 실제로 구성 요소를 테스트하며 Angular가 구성 요소를 만들 수 있다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="2e5a80e20dec34a84bde9cf545eeeeea83b35c8a" translate="yes" xml:space="preserve">
          <source>Only the root &lt;code&gt;AppModule&lt;/code&gt; should import the &lt;code&gt;GreetingModule&lt;/code&gt;. If a lazy-loaded module imports it too, the app can generate &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;multiple instances&lt;/a&gt; of a service.</source>
          <target state="translated">루트 &lt;code&gt;AppModule&lt;/code&gt; 만 &lt;code&gt;GreetingModule&lt;/code&gt; 을 가져와야합니다 . 지연로드 된 모듈도 가져 오면 앱이 &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;여러&lt;/a&gt; 서비스 인스턴스 를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74e3616af019ff0e94847007cfa986e9df5014a6" translate="yes" xml:space="preserve">
          <source>Only the selected event test differs. It confirms that the selected &lt;code&gt;DashboardHeroComponent&lt;/code&gt; hero really does find its way up through the event binding to the host component.</source>
          <target state="translated">선택한 이벤트 테스트 만 다릅니다. 선택한 &lt;code&gt;DashboardHeroComponent&lt;/code&gt; 영웅이 실제로 호스트 구성 요소에 대한 이벤트 바인딩을 통해 길을 찾음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="89b591ffb9d7baafdc98bbbe94b530bb355b3c0c" translate="yes" xml:space="preserve">
          <source>Only used by the &lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 에서만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc45afb720e55cd7cc85109d4c9b039dd76dd61e" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; again in the same window. What happens?</source>
          <target state="translated">열기 &lt;a href=&quot;http://localhost:8080&quot;&gt;에 http : // localhost를 : 8080&lt;/a&gt; 다시 같은 창입니다. 무슨 일이야?</target>
        </trans-unit>
        <trans-unit id="e14a50b5520dfc18fa7fd543847099aa7bf163b3" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;AppModule&lt;/code&gt; (&lt;code&gt;app.module.ts&lt;/code&gt;) and import the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; symbol from the &lt;code&gt;@angular/forms&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; ( &lt;code&gt;app.module.ts&lt;/code&gt; )을 열고 &lt;code&gt;@angular/forms&lt;/code&gt; 라이브러리 에서 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 기호를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="866e5d6d1b334d49b032f539b556b797ab19627b" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;AppRoutingModule&lt;/code&gt; and import &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AppRoutingModule&lt;/code&gt; 을 열고 HeroDetailComponent 를 가져 &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77b65d6f30f279da483a0d2c5aaba8330bf5b22c" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;HeroService&lt;/code&gt; and add the following &lt;code&gt;getHero()&lt;/code&gt; method with the &lt;code&gt;id&lt;/code&gt; after the &lt;code&gt;getHeroes()&lt;/code&gt; method:</source>
          <target state="translated">열기 &lt;code&gt;HeroService&lt;/code&gt; 하고 다음 추가 &lt;code&gt;getHero()&lt;/code&gt; 과 방법을 &lt;code&gt;id&lt;/code&gt; 애프터 &lt;code&gt;getHeroes()&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="6528dd724b3ac4dd5196042f0d94caa2d32dadd1" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;MessageService&lt;/code&gt; and replace its contents with the following.</source>
          <target state="translated">&lt;code&gt;MessageService&lt;/code&gt; 를 열고 내용을 다음으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="114ada4e4b53ed8da2233d3cd7f02423629b9fa6" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;MessagesComponent&lt;/code&gt; and import the &lt;code&gt;MessageService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MessagesComponent&lt;/code&gt; 를 열고 &lt;code&gt;MessageService&lt;/code&gt; 를 가져 오십시오 .</target>
        </trans-unit>
        <trans-unit id="2d907856cc42bdc5e2fc3ea29e00cdc9f5082ee8" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app.module.ts&lt;/code&gt; and add a route for the component &lt;code&gt;CartComponent&lt;/code&gt;, with a &lt;code&gt;path&lt;/code&gt; of &lt;code&gt;cart&lt;/code&gt;:</source>
          <target state="translated">열기 &lt;code&gt;app.module.ts&lt;/code&gt; 및 구성 요소에 대한 경로를 추가 &lt;code&gt;CartComponent&lt;/code&gt; 으로, &lt;code&gt;path&lt;/code&gt; 의 &lt;code&gt;cart&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="575e23715adc35c1ca9c9988eec386e7d5b9930f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; 를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="6f1bf6a125bfb50f13854676105a2329271b6e9f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;auth.guard.ts&lt;/code&gt;. Import the &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; interface from &lt;code&gt;@angular/router&lt;/code&gt;. Add it to the &lt;code&gt;AuthGuard&lt;/code&gt; class's &lt;code&gt;implements&lt;/code&gt; list. Then implement &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="translated">열기 &lt;code&gt;auth.guard.ts&lt;/code&gt; . &lt;code&gt;@angular/router&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; 인터페이스를 가져옵니다 . &lt;code&gt;AuthGuard&lt;/code&gt; 클래스의 &lt;code&gt;implements&lt;/code&gt; 목록에 추가 하십시오. 그런 다음 다음과 같이 &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;()&lt;/code&gt; () 를 구현 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1af114daa83423205b7b94b662a58ac9599b0a63" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;auth.guard.ts&lt;/code&gt;. Import the &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; interface from &lt;code&gt;@angular/router&lt;/code&gt;. Add it to the &lt;code&gt;AuthGuard&lt;/code&gt; class's &lt;code&gt;implements&lt;/code&gt; list. Then implement &lt;code&gt;canLoad()&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;auth.guard.ts&lt;/code&gt; 를 엽니 다 . &lt;code&gt;@angular/router&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; 인터페이스를 가져옵니다 . &lt;code&gt;AuthGuard&lt;/code&gt; 클래스의 &lt;code&gt;implements&lt;/code&gt; 목록에 추가 하십시오. 그런 다음 다음과 같이 &lt;code&gt;canLoad()&lt;/code&gt; 를 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="8f675910d99209c8ea86aae1435d8e6b43b9f03e" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;cart.component.html&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;cart.component.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67023797578e456d2b4fa45dabd73a9085bab993" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;cart.component.ts&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;cart.component.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65c46c6f2ef1fbde016d6d946f5a25b4ae0d2a91" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;cart.service.ts&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;cart.service.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8fee58d1a2ab9cadaac9e77183557a479d795f7" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;index.ts&lt;/code&gt; and add the source code for your schematic factory function.</source>
          <target state="translated">&lt;code&gt;index.ts&lt;/code&gt; 를 열고 회로도 팩토리 기능의 소스 코드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3915069d2daf46146e86c490ad947d27cb0a79d0" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;messages.fr.xlf&lt;/code&gt; and find the first &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; element. This is a &lt;em&gt;translation unit&lt;/em&gt;, also known as a &lt;em&gt;text node&lt;/em&gt;, representing the translation of the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; greeting tag that was previously marked with the &lt;code&gt;i18n&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;messages.fr.xlf&lt;/code&gt; 를 열고 첫 번째 &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; 요소를 찾으십시오 . 이것은 이전에 &lt;code&gt;i18n&lt;/code&gt; 속성으로 표시된 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 인사말 태그 의 번역을 나타내는 &lt;em&gt;텍스트 노드&lt;/em&gt; 라고도 하는 &lt;em&gt;번역 단위입니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a47392ec87ed3fa0526ec688ceb94b3c13d0fab" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;messages.fr.xlf&lt;/code&gt; and find the first &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; section:</source>
          <target state="translated">&lt;code&gt;messages.fr.xlf&lt;/code&gt; 를 열고 첫 번째 &lt;code&gt;&amp;lt;trans-unit&amp;gt;&lt;/code&gt; 섹션을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="a4699e771c7b3370ae4b31ec47a6bd32c0039860" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-alerts.component.ts&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;product-alerts.component.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="744a94e1819e7f241acdc65fb4e349d1e473016d" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-details.component.html&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;product-details.component.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34812c7c2caeda4260035a1583f3d72e244de16c" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-details.component.ts&lt;/code&gt;</source>
          <target state="translated">열기 &lt;code&gt;product-details.component.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59a593e0c1b9760c313846329148117b6cbc5c11" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-details.component.ts&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;product-details.component.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="815ff9ebb4b718dcd77b32609931e5d6576472b8" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;product-list.component.html&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;product-list.component.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfffaf36792bb58305ebbee9817c3529bb1994a4" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;src/app/app.component.html&lt;/code&gt; for editing.</source>
          <target state="translated">여 &lt;code&gt;src/app/app.component.html&lt;/code&gt; 편집.</target>
        </trans-unit>
        <trans-unit id="ebd4ad14ad8a6413334d21a410aee323b90b5fee" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;src/app/app.module.ts&lt;/code&gt; and find &lt;code&gt;HeroesComponent&lt;/code&gt; imported near the top.</source>
          <target state="translated">열기 &lt;code&gt;src/app/app.module.ts&lt;/code&gt; 찾아 &lt;code&gt;HeroesComponent&lt;/code&gt; 은 상단에 수입했다.</target>
        </trans-unit>
        <trans-unit id="c7eb0eeb40c71d849cfff0b2075c26d8908b64a9" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;src/styles.css&lt;/code&gt; and add the code below to the file.</source>
          <target state="translated">&lt;code&gt;src/styles.css&lt;/code&gt; 를 열고 아래 코드를 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d68658e5a356696945dbd0fd61a93b951a7400dc" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;top-bar.component.html&lt;/code&gt; and add a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; directive pointing to &lt;code&gt;/cart&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;top-bar.component.html&lt;/code&gt; 을 열고 &lt;code&gt;/cart&lt;/code&gt; 를 가리키는 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 지시문을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0f74d2bdd1d19520402b98d21d64adcade48a22" translate="yes" xml:space="preserve">
          <source>Open a browser and navigate to &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;. You should see the familiar Tour of Heroes dashboard page.</source>
          <target state="translated">브라우저를 열고 &lt;a href=&quot;http://localhost:4000/&quot;&gt;http : // localhost : 4000 /으로 이동하십시오&lt;/a&gt; . 친숙한 Tour of Heroes 대시 보드 페이지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="e0a82df9270aa7bd7fdae3eed77d97a02caf61c1" translate="yes" xml:space="preserve">
          <source>Open a browser and navigate to &lt;a href=&quot;http://localhost:4200/&quot;&gt;http://localhost:4200/&lt;/a&gt;. You should see the familiar Tour of Heroes dashboard page.</source>
          <target state="translated">브라우저를 열고 &lt;a href=&quot;http://localhost:4200/&quot;&gt;http : // localhost : 4200 /로 이동&lt;/a&gt; 합니다. 익숙한 Tour of Heroes 대시 보드 페이지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="df4746563f1b3801f630600cd1c28289004187dd" translate="yes" xml:space="preserve">
          <source>Open a browser to &lt;code&gt;http://localhost:4200&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;http://localhost:4200&lt;/code&gt; 에 대한 브라우저를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="a792da65891040da84e7d8ecdd221eef49bd99aa" translate="yes" xml:space="preserve">
          <source>Open a terminal window in the project folder and enter the following commands for your environment:</source>
          <target state="translated">프로젝트 폴더에서 터미널 창을 열고 환경에 대한 다음 명령을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="f090fea76949747ac7a39fd3966bbdf3f37972e1" translate="yes" xml:space="preserve">
          <source>Open developer console (e.g. in Chrome Ctrl + Shift + j)</source>
          <target state="translated">개발자 콘솔 열기 (예 : Chrome Ctrl + Shift + j)</target>
        </trans-unit>
        <trans-unit id="9e65fb97fc048133e412914c11615f23951a6bf0" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;1st.spec.ts&lt;/code&gt; test file (Control/Command-P, then start typing the name of the file).</source>
          <target state="translated">&lt;code&gt;1st.spec.ts&lt;/code&gt; 테스트 파일을 엽니 다 (Control / Command-P, 파일 이름 입력 시작).</target>
        </trans-unit>
        <trans-unit id="b9c91187aa8b3d7b05434bda6b05e4913111c0a2" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;AppComponent&lt;/code&gt; template and replace the &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; element with a &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 템플리트를 열고 &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; 요소를 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 요소로 바꾸 십시오 .</target>
        </trans-unit>
        <trans-unit id="c3916758644e0166882ccb24cabed0c5e9049368" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;AppRoutingModule&lt;/code&gt; and add a new &lt;code&gt;admin&lt;/code&gt; route to its &lt;code&gt;appRoutes&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;AppRoutingModule&lt;/code&gt; 을 열고 &lt;code&gt;appRoutes&lt;/code&gt; 배열에 새 &lt;code&gt;admin&lt;/code&gt; 경로를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="eab95545204defbcf8502f2c0be34aa6ff2ed363" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;AppRoutingModule&lt;/code&gt; and add a new &lt;code&gt;compose&lt;/code&gt; route to the &lt;code&gt;appRoutes&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;AppRoutingModule&lt;/code&gt; 을 하고 새로운 추가 &lt;code&gt;compose&lt;/code&gt; 받는 경로를 &lt;code&gt;appRoutes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93778baa50a00162fcfb0d8a4b4552d47a6709f6" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;DashboardComponent&lt;/code&gt; template and add the hero search element, &lt;code&gt;&amp;lt;app-hero-search&amp;gt;&lt;/code&gt;, to the bottom of the markup.</source>
          <target state="translated">&lt;code&gt;DashboardComponent&lt;/code&gt; 템플릿을 열고 영웅 검색 요소 &lt;code&gt;&amp;lt;app-hero-search&amp;gt;&lt;/code&gt; 를 마크 업의 맨 아래에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="eaffbfda7513b495e182c9e77848b7226285fb11" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroDetailComponent&lt;/code&gt; class file and import the &lt;code&gt;Hero&lt;/code&gt; symbol.</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; 클래스 파일을 열고 &lt;code&gt;Hero&lt;/code&gt; 심볼을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d89496e624794a432ec7dcad00fed8f07ed6cf98" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroService&lt;/code&gt; file and import the &lt;code&gt;Observable&lt;/code&gt; and &lt;code&gt;of&lt;/code&gt; symbols from RxJS.</source>
          <target state="translated">열기 &lt;code&gt;HeroService&lt;/code&gt; 의 파일을하고 가져 &lt;code&gt;Observable&lt;/code&gt; 과 &lt;code&gt;of&lt;/code&gt; RxJS에서 문자.</target>
        </trans-unit>
        <trans-unit id="2379d746e66efdc602707b136bc2410835734b2d" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; class file and import the mock &lt;code&gt;HEROES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 클래스 파일을 열고 mock &lt;code&gt;HEROES&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="4e1699bc86ad2b587090e75c61450dd6e875e027" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; class file.</source>
          <target state="translated">오픈 &lt;code&gt;HeroesComponent&lt;/code&gt; 의 클래스 파일을.</target>
        </trans-unit>
        <trans-unit id="83c289ffb9fb3d0dab1e733b8cab3e6a6f24f60d" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; template (&lt;code&gt;heroes/heroes.component.html&lt;/code&gt;) and delete the &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; element from the bottom.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 템플릿 ( &lt;code&gt;heroes/heroes.component.html&lt;/code&gt; )을 열고 하단에서 &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; 요소를 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="249249b46403ef9737f6987ffc4dd5822252889f" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;HeroesComponent&lt;/code&gt; template file and make the following changes:</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 템플릿 파일을 열고 다음과 같이 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="26051224cdc1cb8a5bc7ecbd608f5a525fbf9143" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app.component.css&lt;/code&gt; file and add the following styles.</source>
          <target state="translated">&lt;code&gt;app.component.css&lt;/code&gt; 파일을 열고 다음 스타일을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="826ea10ba8e592def5eac6e488bceddb587e7140" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app.component.html&lt;/code&gt; file and add the following HTML below the title.</source>
          <target state="translated">&lt;code&gt;app.component.html&lt;/code&gt; 파일을 열고 제목 아래에 다음 HTML을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="064cde998d6b73441531381a451267ddc62c12b2" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app.module.ts&lt;/code&gt; file. In the &lt;code&gt;imports&lt;/code&gt; array, update the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; section as follows.</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; 파일을 엽니 다 . 에서 &lt;code&gt;imports&lt;/code&gt; 어레이 업데이트 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 다음 섹션.</target>
        </trans-unit>
        <trans-unit id="3451050e4c99553749d7111ce9833a422f635602" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;heroes.component.css&lt;/code&gt; file and paste in the private CSS styles for the &lt;code&gt;HeroesComponent&lt;/code&gt;. You'll find them in the &lt;a href=&quot;toh-pt2#final-code-review&quot;&gt;final code review&lt;/a&gt; at the bottom of this guide.</source>
          <target state="translated">열기 &lt;code&gt;heroes.component.css&lt;/code&gt; 의 파일과의 개인 CSS 스타일에 붙여 &lt;code&gt;HeroesComponent&lt;/code&gt; . 이 가이드 하단의 &lt;a href=&quot;toh-pt2#final-code-review&quot;&gt;최종 코드 검토&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="73a2d411e7db91151fae4870e606389ac95fb4e0" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;heroes.component.html&lt;/code&gt; template file. Delete the default text generated by the Angular CLI and replace it with a data binding to the new &lt;code&gt;hero&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;heroes.component.html&lt;/code&gt; 템플릿 파일을 엽니 다 . Angular CLI에서 생성 한 기본 텍스트를 삭제하고 새 &lt;code&gt;hero&lt;/code&gt; 속성에 바인딩 된 데이터로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="c94edf93f3dd2b62d3b03f689b7b2aadcd4920c8" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;product-alerts.component.html&lt;/code&gt; template and replace the placeholder paragraph with a &quot;Notify Me&quot; button that appears if the product price is over $700.</source>
          <target state="translated">&lt;code&gt;product-alerts.component.html&lt;/code&gt; 템플릿을 열고 자리 표시 자 단락을 제품 가격이 $ 700 이상인 경우 나타나는 &quot;알림&quot;버튼 으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="6400d025b8fa34953bdda2b672a0538df017c791" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;Options&lt;/strong&gt; dialog with &lt;code&gt;Tools&lt;/code&gt; | &lt;code&gt;Options&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;strong&gt;옵션&lt;/strong&gt; 으로 대화 상자를 &lt;code&gt;Tools&lt;/code&gt; | &lt;code&gt;Options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ed0bc4c0172c2fbba0c946c0c54e37389851b02" translate="yes" xml:space="preserve">
          <source>Open the Chrome Dev Tools and go to the Network tab.</source>
          <target state="translated">Chrome 개발자 도구를 열고 네트워크 탭으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="2ac40a79b7d99bdb53db696ee46f27dcf412ea9a" translate="yes" xml:space="preserve">
          <source>Open the browser developer tools and look in the console for an error message like this:</source>
          <target state="translated">브라우저 개발자 도구를 열고 콘솔에서 다음과 같은 오류 메시지를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="dc9e01a5ad80b61c63b2e99ced4361bbecdee205" translate="yes" xml:space="preserve">
          <source>Open the browser's &amp;ldquo;Developer Tools&amp;rdquo; (&lt;code&gt;Ctrl-Shift-I&lt;/code&gt; on Windows; &lt;code&gt;Command-Option-I&lt;/code&gt; in macOS).</source>
          <target state="translated">브라우저의 &quot;개발자 도구&quot;를 엽니 다 ( Windows의 경우 &lt;code&gt;Ctrl-Shift-I&lt;/code&gt; &lt;code&gt;Command-Option-I&lt;/code&gt; , macOS의 경우 Command-Option-I ).</target>
        </trans-unit>
        <trans-unit id="9fadc1acc9a9be8e0bf71561bf2a7d42a969832d" translate="yes" xml:space="preserve">
          <source>Open the component class file (&lt;code&gt;app.component.ts&lt;/code&gt;) and change the value of the &lt;code&gt;title&lt;/code&gt; property to 'Tour of Heroes'.</source>
          <target state="translated">컴포넌트 클래스 파일 ( &lt;code&gt;app.component.ts&lt;/code&gt; )을 열고 &lt;code&gt;title&lt;/code&gt; 특성 값 을 'Tour of Heroes'로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="2a512fe716528dcc59149d91e20e0f28d4ad253a" translate="yes" xml:space="preserve">
          <source>Open the component template file (&lt;code&gt;app.component.html&lt;/code&gt;) and delete the default template generated by the Angular CLI. Replace it with the following line of HTML.</source>
          <target state="translated">컴포넌트 템플리트 파일 ( &lt;code&gt;app.component.html&lt;/code&gt; )을 열고 Angular CLI에서 생성 된 기본 템플리트를 삭제하십시오. 다음 HTML 줄로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="734452c8b2541f55d9ae29a00ef4de74215d7e9d" translate="yes" xml:space="preserve">
          <source>Open the project in your favorite editor or IDE and navigate to the &lt;code&gt;src/app&lt;/code&gt; folder to make some changes to the starter app.</source>
          <target state="translated">자주 사용하는 편집기 또는 IDE에서 프로젝트를 열고 &lt;code&gt;src/app&lt;/code&gt; 폴더로 이동하여 스타터 앱을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="459015ea8246d6e4993d6740f8d4c742f2771b80" translate="yes" xml:space="preserve">
          <source>Opens the official Angular documentation (angular.io) in a browser, and searches for a given keyword.</source>
          <target state="translated">브라우저에서 공식 Angular 문서 (angular.io)를 열고 주어진 키워드를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="64cfd431ce17e3c9550646a51c01d3e44db9beeb" translate="yes" xml:space="preserve">
          <source>Opens the url in default browser.</source>
          <target state="translated">기본 브라우저에서 URL을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="19c9c9ed8477a3a275bcf0fa3f27c69151b58b7d" translate="yes" xml:space="preserve">
          <source>Opera</source>
          <target state="translated">Opera</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="55da9031f2999cb3d83e442304b4dcdf4c71eb07" translate="yes" xml:space="preserve">
          <source>Operators are functions that build on the observables foundation to enable sophisticated manipulation of collections. For example, RxJS defines operators such as &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/querylist#filter&quot;&gt;filter()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;concat()&lt;/code&gt;, and &lt;code&gt;flatMap()&lt;/code&gt;.</source>
          <target state="translated">연산자는 Observable Foundation을 기반으로하여 컬렉션을 정교하게 조작 할 수있는 기능입니다. 예를 들어 RxJS는 &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/querylist#filter&quot;&gt;filter()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;concat()&lt;/code&gt; 및 &lt;code&gt;flatMap()&lt;/code&gt; 과 같은 연산자를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="8a79c87bba58be2a44756834d5850acecdd46358" translate="yes" xml:space="preserve">
          <source>Operators are functions that build on the observables foundation to enable sophisticated manipulation of collections. For example, RxJS defines operators such as &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;concat()&lt;/code&gt;, and &lt;code&gt;flatMap()&lt;/code&gt;.</source>
          <target state="translated">연산자는 컬렉션을 정교하게 조작 할 수 있도록 Observable 기반을 기반으로하는 함수입니다. 예를 들어 RxJS는 &lt;code&gt;map()&lt;/code&gt; , &lt;code&gt;filter()&lt;/code&gt; , &lt;code&gt;concat()&lt;/code&gt; 및 &lt;code&gt;flatMap()&lt;/code&gt; 과 같은 연산자를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="fb6aba7d760dae5cbe0e7867f22c9c01e7fc584c" translate="yes" xml:space="preserve">
          <source>Operators such as &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;typeof&lt;/code&gt;, &lt;code&gt;instanceof&lt;/code&gt;, etc.</source>
          <target state="translated">같은 연산자 &lt;code&gt;new&lt;/code&gt; , &lt;code&gt;typeof&lt;/code&gt; , &lt;code&gt;instanceof&lt;/code&gt; 를 등</target>
        </trans-unit>
        <trans-unit id="78a67b274716fa5e61a869350cc8edc511b03285" translate="yes" xml:space="preserve">
          <source>Operators take configuration options, and they return a function that takes a source observable. When executing this returned function, the operator observes the source observable&amp;rsquo;s emitted values, transforms them, and returns a new observable of those transformed values. Here is a simple example:</source>
          <target state="translated">운영자는 구성 옵션을 사용하고 소스를 관찰 할 수있는 함수를 반환합니다. 이 반환 함수를 실행하면 작업자는 소스 옵저버 블의 방출 ​​된 값을 관찰하고 변환 한 다음 변환 된 값의 새로운 옵저버 블을 반환합니다. 다음은 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="aa7b517ed2c8c9eece687a703e1244e651136d90" translate="yes" xml:space="preserve">
          <source>Optimization and source map configuration</source>
          <target state="translated">최적화 및 소스 맵 구성</target>
        </trans-unit>
        <trans-unit id="9256c64de0258ef6aa5f3450d57a6a9abdb1a5a0" translate="yes" xml:space="preserve">
          <source>Optimized build speed and bundle sizes with Angular CLI webpack 5</source>
          <target state="translated">Angular CLI 웹팩 5로 최적화 된 빌드 속도 및 번들 크기</target>
        </trans-unit>
        <trans-unit id="918e9722f17b1a581662c7767624481c4fedcc02" translate="yes" xml:space="preserve">
          <source>Optimizing client app size with lightweight injection tokens</source>
          <target state="translated">경량 주입 토큰으로 클라이언트 앱 크기 최적화</target>
        </trans-unit>
        <trans-unit id="705e4a41edad736060e3a0f828ef8cf9e4cc96ad" translate="yes" xml:space="preserve">
          <source>Optimizing performance of async validators</source>
          <target state="translated">비동기 유효성 검사기의 성능 최적화</target>
        </trans-unit>
        <trans-unit id="030e97c870e56e7c41994045c7e02d21ed01463a" translate="yes" xml:space="preserve">
          <source>Optimizing server interaction with debouncing</source>
          <target state="translated">디 바운싱으로 서버 상호 작용 최적화</target>
        </trans-unit>
        <trans-unit id="a58c5cb025a62662cf44702a6d527a8c87a03712" translate="yes" xml:space="preserve">
          <source>Opting into Angular Ivy</source>
          <target state="translated">앵귤러 아이비로 선택</target>
        </trans-unit>
        <trans-unit id="c5a5b5cd96d737d33ff866ca1271b3ea54adfc52" translate="yes" xml:space="preserve">
          <source>Opting out of Ivy in version 9</source>
          <target state="translated">버전 9에서 Ivy 옵트 아웃</target>
        </trans-unit>
        <trans-unit id="ac18808e2e8e393149e16402b330eb2d7a36ad06" translate="yes" xml:space="preserve">
          <source>Opting out of differential loading</source>
          <target state="translated">차등 로딩 해제</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="75bca5f8db26fdc8df7cc72ba6934a8ea6df9ba3" translate="yes" xml:space="preserve">
          <source>Option names are prefixed with a double dash (--). Option aliases are prefixed with a single dash (-). Arguments are not prefixed. For example:</source>
          <target state="translated">옵션 이름 앞에는 이중 대시 (-)가 붙습니다. 옵션 별명은 단일 대시 (-)로 시작합니다. 인수는 접두사가 없습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="42fbc661d9eb5bdb9c764ccb784da2cf60ec117d" translate="yes" xml:space="preserve">
          <source>Optional argument which signifies if the current &lt;code&gt;insertBefore&lt;/code&gt; is a result of a move. Animation uses this information to trigger move animations. In the past the Animation would always assume that any &lt;code&gt;insertBefore&lt;/code&gt; is a move. This is not strictly true because with runtime i18n it is possible to invoke &lt;code&gt;insertBefore&lt;/code&gt; as a result of i18n and it should not trigger an animation move.</source>
          <target state="translated">현재 &lt;code&gt;insertBefore&lt;/code&gt; 가 이동의 결과 인지 여부를 나타내는 선택적 인수입니다 . 애니메이션은이 정보를 사용하여 이동 애니메이션을 트리거합니다. 과거에 애니메이션은 항상 &lt;code&gt;insertBefore&lt;/code&gt; 가 이동 이라고 가정했습니다 . 런타임 i18n을 사용하면 i18n 의 결과로 &lt;code&gt;insertBefore&lt;/code&gt; 를 호출 할 수 있고 애니메이션 이동을 트리거하지 않아야 하므로 엄격하게 사실이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="dc81f35d5cb2a85d02d09449720e3b4d0e563a55" translate="yes" xml:space="preserve">
          <source>Optional browser features to polyfill</source>
          <target state="translated">폴리 필 할 수있는 선택적 브라우저 기능</target>
        </trans-unit>
        <trans-unit id="e49ff74bc21a29fb180a1ac29c34980ae57fe46b" translate="yes" xml:space="preserve">
          <source>Optional component/template files to replicate.</source>
          <target state="translated">복제 할 선택적 구성 요소 / 템플릿 파일</target>
        </trans-unit>
        <trans-unit id="7346e4d45825ec177eaaa77f3cf50927846f5271" translate="yes" xml:space="preserve">
          <source>Optional dependencies</source>
          <target state="translated">선택적 종속성</target>
        </trans-unit>
        <trans-unit id="f5ee02ce09873d150e84882cfa2d00c65c6f61c9" translate="yes" xml:space="preserve">
          <source>Optional information can also include other forms such as:</source>
          <target state="translated">선택적 정보에는 다음과 같은 다른 형식도 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab510470f25bfcd81d4210f3e4091efd6f1cfab3" translate="yes" xml:space="preserve">
          <source>Optional information takes other forms. Search criteria are often loosely structured, e.g., &lt;code&gt;name='wind*'&lt;/code&gt;. Multiple values are common&amp;mdash;&lt;code&gt;after='12/31/2015' &amp;amp; before='1/1/2017'&lt;/code&gt;&amp;mdash;in no particular order&amp;mdash;&lt;code&gt;before='1/1/2017' &amp;amp; after='12/31/2015'&lt;/code&gt;&amp;mdash; in a variety of formats&amp;mdash;&lt;code&gt;during='currentYear'&lt;/code&gt;.</source>
          <target state="translated">선택적 정보는 다른 형태를 취합니다. 검색 기준은 종종 느슨하게 구성됩니다 (예 : &lt;code&gt;name='wind*'&lt;/code&gt; . 다중 값 커먼이다 &lt;code&gt;after='12/31/2015' &amp;amp; before='1/1/2017'&lt;/code&gt; 특별한 순서 - -in &lt;code&gt;before='1/1/2017' &amp;amp; after='12/31/2015'&lt;/code&gt; - 다양한 형식으로 &amp;mdash; &lt;code&gt;during='currentYear'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="400c931b4be3d7d0c08ae1d7d4b3a2706e5eb95a" translate="yes" xml:space="preserve">
          <source>Optional parameters are the ideal vehicle for conveying arbitrarily complex information during navigation. Optional parameters aren't involved in pattern matching and afford flexibility of expression.</source>
          <target state="translated">선택적 매개 변수는 탐색 중에 임의로 복잡한 정보를 전달하기위한 이상적인 수단입니다. 선택적 매개 변수는 패턴 일치에 관여하지 않으며 표현의 유연성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d5f1a6c613bb75d32b568488ce84888511631004" translate="yes" xml:space="preserve">
          <source>Optional practices</source>
          <target state="translated">선택적 관행</target>
        </trans-unit>
        <trans-unit id="6856aec35674ad76cddfd02f6ff177082b78ea73" translate="yes" xml:space="preserve">
          <source>Optional. A handler for an error notification. An error halts execution of the observable instance.</source>
          <target state="translated">선택 과목. 오류 알림 처리기 관찰 가능한 인스턴스의 실행이 중지되면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="29f601f024ebc56d9feeca9e17e7bdf0b57d1cc9" translate="yes" xml:space="preserve">
          <source>Optional. A handler for the execution-complete notification. Delayed values can continue to be delivered to the next handler after execution is complete.</source>
          <target state="translated">선택 과목. 실행 완료 알림 처리기 지연된 값은 실행이 완료된 후에 다음 핸들러로 계속 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dcae3623c0d8f13dc4392798d18296e66017e4e" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;''&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3381f35deada3fd6b019d74a7bf617a8c9b493e9" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'OK'&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;'OK'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0337f034b870c06d392a0cffaa1649d167036e8a" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'USD'&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;'USD'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5a3bb62c2d7f0552954f10cb2f8bff843cedd8ff" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'en'&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;'en'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5c14de4b5a52901ab45f1f50c8f6f8c388535cca" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'imperative'&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;'imperative'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1e7d75e9cc2bea632ff7da41006632ee60f1ced8" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'mediumDate'&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;'mediumDate'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb608f50cfb6774b712c37f877def2a0f761ae95" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'path'&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;'path'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1e74ea3046dea21fa1f199a43b2d9d2777651c96" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;'symbol'&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;'symbol'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83edc8035c7f93c13ecad123dc62e1a4b3f07969" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;(e: &lt;a href=&quot;../../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;) =&amp;gt; { }&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;(e: &lt;a href=&quot;../../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;) =&amp;gt; { }&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bb7706e8107c09e21f3abcf784a3658259913546" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;(e: Error) =&amp;gt; { }&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;(e: Error) =&amp;gt; { }&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f0fb4c3880567dd79f680c0df074813a3f8092e6" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0cc77783c426198beca7a5061e2fbc8d0f73d22e" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;200&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;200&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6cdfbb9d0c95f30183d4605789d3423494cbc47e" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;&lt;a href=&quot;serializertypes#PRIMITIVE&quot;&gt;SerializerTypes.PRIMITIVE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;&lt;a href=&quot;serializertypes#PRIMITIVE&quot;&gt;SerializerTypes.PRIMITIVE&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0fec7dfbf05401bca2791634d7c6a7bfc7067aa9" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f9fc6f9d8254c0e45b0c64754677e088f1d113ca" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;defaultComparator&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;defaultComparator&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9145bb534991daf57f7701301bbf91899e9dd502" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0055788f2ca22e20c975392f22c77a2081447880" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="81e97dcaaa41ca3300b210af9cb347aabd6782bc" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="78bbe710af81960b2e485bb4d19548f797e8de4a" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;undefined&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4a5f1791676379b433da5f7bbd4a17b1a738f4c6" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{ processNewMacroTasksSynchronously: true }&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;{ processNewMacroTasksSynchronously: true }&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ea504f3d8a30bf5b2b0407a00c52804459c0a173" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{ skipLocationChange: false }&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;{ skipLocationChange: false }&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7fe43eedc240161af52040b1459232628c4db09f" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{} as HttpParamsOptions&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;{} as HttpParamsOptions&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3b2bf12eb0f92f428cfb65113da6b250b10dcd6c" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 기본값은 &lt;code&gt;{}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90fef798a39f3038503c95933f2112a7de384039" translate="yes" xml:space="preserve">
          <source>Optional. If specified, this callback will be invoked whenever the set of pending macrotasks changes. If this callback returns true doneCb will not be invoked and no further updates will be issued.</source>
          <target state="translated">선택 과목. 지정하면 보류중인 매크로 작업 세트가 변경 될 때마다이 콜백이 호출됩니다. 이 콜백이 true를 반환하면 doneCb가 호출되지 않고 추가 업데이트가 발행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40872feaf230ffad9bd8997564d231308c95c3b6" translate="yes" xml:space="preserve">
          <source>Optional. The maximum time to wait for Angular to become stable. If not specified, whenStable() will wait forever.</source>
          <target state="translated">선택 과목. Angular가 안정 될 때까지 기다리는 최대 시간입니다. 지정하지 않으면 whenStable ()은 영원히 대기합니다.</target>
        </trans-unit>
        <trans-unit id="8875354ce564cd553c2341c2da111e365d05b6b2" translate="yes" xml:space="preserve">
          <source>Optionally signal to the renderer whether this element is a host element or not</source>
          <target state="translated">선택적으로이 요소가 호스트 요소인지 아닌지 렌더러에 신호를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="169a0beed38eda3807ef4a6e3b7866807f5bad42" translate="yes" xml:space="preserve">
          <source>Optionally, CSS styles applied to the template</source>
          <target state="translated">선택적으로 템플릿에 적용된 CSS 스타일</target>
        </trans-unit>
        <trans-unit id="c86bfd6abd0b43e24c33c522408b8b56e4ddafca" translate="yes" xml:space="preserve">
          <source>Optionally, a component can be mounted onto a DOM element that does not match the componentType's selector.</source>
          <target state="translated">선택적으로 componentType의 선택기와 일치하지 않는 DOM 요소에 구성 요소를 마운트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f8c1c2b5b21a8e5430392924dd15f7e26c0baf4" translate="yes" xml:space="preserve">
          <source>Optionally, you can configure the Angular CLI to use &lt;a href=&quot;https://docs.bazel.build&quot;&gt;Bazel&lt;/a&gt; as the build tool. For more information, see &lt;a href=&quot;guide/bazel&quot;&gt;Building with Bazel&lt;/a&gt;.</source>
          <target state="translated">선택적으로 &lt;a href=&quot;https://docs.bazel.build&quot;&gt;Bazel&lt;/a&gt; 을 빌드 도구로 사용하도록 Angular CLI를 구성 할 수 있습니다 . 자세한 내용 &lt;a href=&quot;guide/bazel&quot;&gt;은 Bazel을 사용한 빌드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="3743e45daa27c13ec520d24349acdbca83290cec" translate="yes" xml:space="preserve">
          <source>Options are given by the CLI user, context is provided by and provides access to the CLI Builder API, and the developer provides the behavior.</source>
          <target state="translated">옵션은 CLI 사용자가 제공하고 컨텍스트가 제공하며 CLI Builder API에 대한 액세스를 제공하며 개발자는 동작을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c9e5f370318c8dc3cee1fa76cecc61e59ecfc94b" translate="yes" xml:space="preserve">
          <source>Options for creating a compiler</source>
          <target state="translated">컴파일러 작성을위한 옵션</target>
        </trans-unit>
        <trans-unit id="2ef5635a8b4edbca1d90b4b8a045e7ee555d7f8b" translate="yes" xml:space="preserve">
          <source>Options that control animation styling and timing.</source>
          <target state="translated">애니메이션 스타일 및 타이밍을 제어하는 ​​옵션.</target>
        </trans-unit>
        <trans-unit id="5a3320daae4255b587f501a2828c3b8e5b2672a6" translate="yes" xml:space="preserve">
          <source>Options that control the navigation strategy.</source>
          <target state="translated">탐색 전략을 제어하는 ​​옵션.</target>
        </trans-unit>
        <trans-unit id="945df18a6234dedf43f7cd8df23b7ae5ba00463d" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URL. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URL 을 수정하는 옵션입니다 . 이러한 속성이 포함 된 개체를 &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 기능에 제공하여 대상 URL을 구성하는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="42d9084a0d6d5f1da0299cae21edf8cacf6c8dfb" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the navigation should be handled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 전략 을 수정하는 옵션입니다 . 이러한 속성을 포함하는 개체를 &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 기능에 제공하여 탐색 처리 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="c17cce0d1a7737c56033975a4a9d3c6f08cac549" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed or interpreted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 전략 을 수정하는 옵션입니다 . 이러한 속성이 포함 된 개체를 &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 기능에 제공하여 대상 URL을 구성하거나 해석하는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="1370833782863250c62f5a940dd0b66b5451c1c2" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URL. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; URL 을 수정하는 옵션입니다 . 이러한 속성이 포함 된 개체를 &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 기능에 제공하여 대상 URL을 구성하는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="f21f945cfdad21008daa419f1c2bcdea29781694" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the navigation should be handled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 전략 을 수정하는 옵션입니다 . 이러한 속성을 포함하는 개체를 &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 기능에 제공하여 탐색 처리 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="d143cee73ad76cbfa144b4b0f40a8e6aeaeae545" translate="yes" xml:space="preserve">
          <source>Options that modify the &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation strategy. Supply an object containing any of these properties to a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation function to control how the target URL should be constructed or interpreted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 전략 을 수정하는 옵션입니다 . 이러한 속성이 포함 된 개체를 &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 탐색 기능에 제공하여 대상 URL을 구성하거나 해석하는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="2312d0dae9bb6c6b2553204f4b8553b015206073" translate="yes" xml:space="preserve">
          <source>Options that modify the navigation strategy.</source>
          <target state="translated">탐색 전략을 수정하는 옵션.</target>
        </trans-unit>
        <trans-unit id="ec6b4a1f161a0c97e8e2157d877fd1afa52dbed1" translate="yes" xml:space="preserve">
          <source>Options that specify files can be given as absolute paths, or as paths relative to the current working directory, which is generally either the workspace or project root.</source>
          <target state="translated">파일을 지정하는 옵션은 절대 경로 또는 현재 작업 디렉토리에 대한 상대 경로 (일반적으로 작업 공간 또는 프로젝트 루트)로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfe27583e1d225b9a1db1842931adaae7fcd0d72" translate="yes" xml:space="preserve">
          <source>Or inside the &lt;code&gt;beforeEach()&lt;/code&gt; if you prefer to inject the service as part of your setup.</source>
          <target state="translated">또는 설정의 일부로 서비스를 주입하려는 경우 &lt;code&gt;beforeEach()&lt;/code&gt; 내부 .</target>
        </trans-unit>
        <trans-unit id="a258d20dbff14fba0a26b7e4ddee32d7abd12c5d" translate="yes" xml:space="preserve">
          <source>Or make the subscription callback run inside the zone.</source>
          <target state="translated">또는 영역 내에서 구독 콜백을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3936f7ad23900ec7726977342c7a6b87c57e0e00" translate="yes" xml:space="preserve">
          <source>Or something could go wrong on the client-side such as a network error that prevents the request from completing successfully or an exception thrown in an RxJS operator. These errors produce JavaScript &lt;code&gt;ErrorEvent&lt;/code&gt; objects.</source>
          <target state="translated">또는 요청이 성공적으로 완료되지 못하게하는 네트워크 오류 또는 RxJS 연산자에서 예외가 발생하는 등 클라이언트 측에서 문제가 발생할 수 있습니다. 이러한 오류는 JavaScript &lt;code&gt;ErrorEvent&lt;/code&gt; 객체를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="72e34d9cf1be96305161a84b1004a86ff4a17579" translate="yes" xml:space="preserve">
          <source>Or to use the production configuration.</source>
          <target state="translated">또는 프로덕션 구성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="df84bcd15a086370c882bf60c8fb48753585c091" translate="yes" xml:space="preserve">
          <source>Or you might not use a pipe at all. It may be better to pursue the pipe's purpose with a property of the component, a point that's discussed later in this page.</source>
          <target state="translated">또는 파이프를 전혀 사용하지 않을 수도 있습니다. 이 페이지의 뒷부분에서 설명 할 지점 인 구성 요소의 속성으로 파이프의 목적을 추구하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="74eeea1806385a560f87806ccc384fe685713829" translate="yes" xml:space="preserve">
          <source>Organize a sample application's features into modules.</source>
          <target state="translated">샘플 애플리케이션의 기능을 모듈로 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8444fcb4a82e33b055c10eaa5c1b216aee784066" translate="yes" xml:space="preserve">
          <source>Organize the app and routes into &lt;em&gt;feature areas&lt;/em&gt; using modules.</source>
          <target state="translated">모듈을 사용하여 앱을 구성하고 &lt;em&gt;기능 영역으로&lt;/em&gt; 라우팅 합니다.</target>
        </trans-unit>
        <trans-unit id="b2d968710497d4eceae60b1c6ec749f251693530" translate="yes" xml:space="preserve">
          <source>Organize the app into &lt;em&gt;feature areas&lt;/em&gt;.</source>
          <target state="translated">앱을 &lt;em&gt;기능 영역&lt;/em&gt; 으로 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="99718957d55a0d04ef3a677390d1dbed28ca86cc" translate="yes" xml:space="preserve">
          <source>Organizing the app and routes into feature areas using modules.</source>
          <target state="translated">모듈을 사용하여 앱과 경로를 기능 영역으로 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5806f8342fe1acc1956338c907044aa83140597d" translate="yes" xml:space="preserve">
          <source>Organizing the app into feature areas.</source>
          <target state="translated">기능 영역으로 앱 구성.</target>
        </trans-unit>
        <trans-unit id="ac43c4bfe64883c7de293b099023b616edb5a462" translate="yes" xml:space="preserve">
          <source>Organizing the application features into modules.</source>
          <target state="translated">애플리케이션 기능을 모듈로 구성</target>
        </trans-unit>
        <trans-unit id="ca86c62ddb9a806787e14a0b0b8237317a5018fc" translate="yes" xml:space="preserve">
          <source>Organizing your code into distinct functional modules helps in managing development of complex applications, and in designing for reusability. In addition, this technique lets you take advantage of &lt;em&gt;lazy-loading&lt;/em&gt;&amp;mdash;that is, loading modules on demand&amp;mdash;to minimize the amount of code that needs to be loaded at startup.</source>
          <target state="translated">코드를 개별 기능 모듈로 구성하면 복잡한 응용 프로그램의 개발 관리 및 재사용 성을위한 설계에 도움이됩니다. 또한이 기술을 사용하면 시작시로드해야하는 코드의 양을 최소화하기 위해 &lt;em&gt;지연로드 (&lt;/em&gt; 즉, 요청시 모듈 &lt;em&gt;로드)를&lt;/em&gt; 활용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83a39e002d71684b8b3fb6274fcd611217931dbe" translate="yes" xml:space="preserve">
          <source>Other &lt;em&gt;routed component&lt;/em&gt; tests need a test double for &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">다른 &lt;em&gt;라우팅 된 구성 요소&lt;/em&gt; 테스트에는 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 에 대한 테스트 이중이 필요 합니다 .</target>
        </trans-unit>
        <trans-unit id="0869cfde2d1aeea3f26a14c997de0f03f2a1126a" translate="yes" xml:space="preserve">
          <source>Other APIs may bury the data that you want within an object. You might have to dig that data out by processing the &lt;code&gt;Observable&lt;/code&gt; result with the RxJS &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">다른 API는 객체 내에 원하는 데이터를 저장할 수 있습니다. RxJS &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; 연산자로 &lt;code&gt;Observable&lt;/code&gt; 결과를 처리하여 해당 데이터를 파헤쳐 야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a22d3f4f426e80822e0956fe76f7cdfe7bbb06cd" translate="yes" xml:space="preserve">
          <source>Other APIs may bury the data that you want within an object. You might have to dig that data out by processing the &lt;code&gt;Observable&lt;/code&gt; result with the RxJS &lt;code&gt;map()&lt;/code&gt; operator.</source>
          <target state="translated">다른 API는 원하는 데이터를 개체 내에 저장할 수 있습니다. RxJS &lt;code&gt;map()&lt;/code&gt; 연산자를 사용하여 &lt;code&gt;Observable&lt;/code&gt; 결과를 처리하여 해당 데이터를 찾아야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4025c5882dbf33b768634c48c91716e3d8aa323b" translate="yes" xml:space="preserve">
          <source>Other Angular lifecycle hooks</source>
          <target state="translated">다른 Angular 수명주기 후크</target>
        </trans-unit>
        <trans-unit id="5e20c28f5514d747bf0651a3cf8b661c19763b23" translate="yes" xml:space="preserve">
          <source>Other Angular sub-systems may have their own lifecycle hooks apart from these component hooks.</source>
          <target state="translated">다른 Angular 하위 시스템에는 이러한 구성 요소 후크와 별도로 자체 수명주기 후크가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d04236090d90fbbdc04e8b5da31968890f7552f4" translate="yes" xml:space="preserve">
          <source>Other aspects of an outgoing request can be configured via the options object passed as the last argument to the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">발신 요청의 다른 측면은 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 메소드에 마지막 인수로 전달 된 옵션 오브젝트를 통해 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d16d34594c634bd0715de111d850d0ef95ffa572" translate="yes" xml:space="preserve">
          <source>Other handlers are less forgiving. For example, the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive expects an object with a &lt;code&gt;button&lt;/code&gt; property that identifies which mouse button (if any) was pressed during the click. The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive throws an error if the event object is missing.</source>
          <target state="translated">다른 핸들러는 덜 용서합니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 지시문 은 클릭 중 누른 마우스 버튼 (있는 경우)을 식별 하는 &lt;code&gt;button&lt;/code&gt; 속성이 있는 객체를 예상합니다 . &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 의 이벤트 객체가없는 경우 지시어는 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="288870d1724dd02a5ce433fe90e6e2f3ed869b96" translate="yes" xml:space="preserve">
          <source>Other notable differences from JavaScript syntax include:</source>
          <target state="translated">JavaScript 구문과 다른 주요 차이점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a8586ddfb0b549d5d774ad5cd6ad4b33ff4bae3a" translate="yes" xml:space="preserve">
          <source>Other reasons the Angular service worker might change the version of a running app are normal events:</source>
          <target state="translated">Angular 서비스 워커가 실행중인 앱의 버전을 변경할 수있는 다른 이유는 일반적인 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="73e8fe3faf09a56f69f9f940eebba0662dab6a8e" translate="yes" xml:space="preserve">
          <source>Other test frameworks</source>
          <target state="translated">다른 테스트 프레임 워크</target>
        </trans-unit>
        <trans-unit id="59c884e51b962ab65dd7fc3b9aedc26de661abe9" translate="yes" xml:space="preserve">
          <source>Other types of providers can create their values &lt;em&gt;lazily&lt;/em&gt;; that is, when they're needed for injection.</source>
          <target state="translated">다른 유형의 공급자는 값을 &lt;em&gt;게으르게&lt;/em&gt; 만들 수 있습니다 . 즉, 주사가 필요할 때입니다.</target>
        </trans-unit>
        <trans-unit id="4e7f217ab819a609a1f778b51855488efb2ea0c0" translate="yes" xml:space="preserve">
          <source>Our community values respectful, supportive communication. Please consult and adhere to the &lt;a href=&quot;https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">우리 공동체는 존중하고 지원하는 의사 소통을 중요하게 생각합니다. &lt;a href=&quot;https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md&quot;&gt;행동 강령&lt;/a&gt; 을 참조하고 준수하십시오 .</target>
        </trans-unit>
        <trans-unit id="071db634a9379fcd1ebd5baffe4fc841d7fa31c4" translate="yes" xml:space="preserve">
          <source>Out of the box, the router either never preloads, or preloads every lazy load module. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; also supports &lt;a href=&quot;router#custom-preloading&quot;&gt;custom preloading strategies&lt;/a&gt; for fine control over which modules to preload and when.</source>
          <target state="translated">기본적으로 라우터는 모든 게으른로드 모듈을 미리로드하거나 미리로드하지 않습니다. 또한 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 는 &lt;a href=&quot;router#custom-preloading&quot;&gt;사전로드&lt;/a&gt; 할 모듈과시기를 세부적으로 제어하기위한 사용자 정의 사전로드 전략 을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="150cdbc41b7f6e9b339465271d64901643a57549" translate="yes" xml:space="preserve">
          <source>Outgoing URL parameters.</source>
          <target state="translated">발신 URL 매개 변수</target>
        </trans-unit>
        <trans-unit id="d4bad590de3d2a64d6a24b3e9f2674b2cf5369fd" translate="yes" xml:space="preserve">
          <source>Outgoing headers for this request.</source>
          <target state="translated">이 요청에 대한 발신 헤더.</target>
        </trans-unit>
        <trans-unit id="4a81f898e5e4474a5618b8f023842ea200ddda8a" translate="yes" xml:space="preserve">
          <source>OutletContext</source>
          <target state="translated">OutletContext</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="31e493f13af084077b8a318788983f0e5d60c016" translate="yes" xml:space="preserve">
          <source>Output a code coverage report.</source>
          <target state="translated">코드 커버리지 보고서를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="2faf6bd753b0ce65551933b80f4bd5d1808345e3" translate="yes" xml:space="preserve">
          <source>Output format (prose, json, stylish, verbose, pmd, msbuild, checkstyle, vso, fileslist).</source>
          <target state="translated">출력 형식 (prose, json, stylish, verbose, pmd, msbuild, checkstyle, vso, fileslist).</target>
        </trans-unit>
        <trans-unit id="baa9407a9473bc756b7b02207560d4a49a43e8d1" translate="yes" xml:space="preserve">
          <source>Output format for the generated file.</source>
          <target state="translated">생성 된 파일의 출력 형식입니다.</target>
        </trans-unit>
        <trans-unit id="8f5d71b7c43000821c2489a9cdfcaad176dd4714" translate="yes" xml:space="preserve">
          <source>Output in-file eval sourcemaps.</source>
          <target state="translated">파일 내 평가 소스 맵을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="ca4409ba27dc1d2a8784894950db67da52a31ddb" translate="yes" xml:space="preserve">
          <source>Output options</source>
          <target state="translated">출력 옵션</target>
        </trans-unit>
        <trans-unit id="3cb7e94de5a4f52643bcf28b38d7272c4e70dc3f" translate="yes" xml:space="preserve">
          <source>Output profile events for Chrome profiler.</source>
          <target state="translated">Chrome 프로필러의 출력 프로필 이벤트</target>
        </trans-unit>
        <trans-unit id="6f1e775f7bd32d3f5bef06b33589003e7104614b" translate="yes" xml:space="preserve">
          <source>Output sourcemaps.</source>
          <target state="translated">출력 소스 맵.</target>
        </trans-unit>
        <trans-unit id="140a5bc951788cb85b964b9b11b49aa36ddda04b" translate="yes" xml:space="preserve">
          <source>Outputs Angular CLI version.</source>
          <target state="translated">Angular CLI 버전을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="67fda2a70b40411a45cd0693789fc25606a8181d" translate="yes" xml:space="preserve">
          <source>Overall JSON structure</source>
          <target state="translated">전체 JSON 구조</target>
        </trans-unit>
        <trans-unit id="0370569258170210e172c329a95a11cd7907a5cd" translate="yes" xml:space="preserve">
          <source>Overall application performance is affected in cases where the user stays on Angular-rendered pages because the AngularJS framework and application are still loaded and running, even if they are never accessed.</source>
          <target state="translated">AngularJS 프레임 워크 및 애플리케이션이 액세스되지 않은 경우에도 여전히로드되어 실행되므로 사용자가 Angular 렌더링 된 페이지를 유지하는 경우 전체 애플리케이션 성능에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="177a68e88431bcd2dbcca1a54072f3b5e904f4c5" translate="yes" xml:space="preserve">
          <source>Overall structural guidelines</source>
          <target state="translated">전반적인 구조 지침</target>
        </trans-unit>
        <trans-unit id="d0611499e594109b02f051b3c268baf908e73abb" translate="yes" xml:space="preserve">
          <source>Overload #1</source>
          <target state="translated">과부하 # 1</target>
        </trans-unit>
        <trans-unit id="8f61a01a0fcd57ff4e2afa8443e05ab873d1f7eb" translate="yes" xml:space="preserve">
          <source>Overload #10</source>
          <target state="translated">과부하 # 10</target>
        </trans-unit>
        <trans-unit id="5092d306bd8547dad81e4e6bb075aa8c7301ec7a" translate="yes" xml:space="preserve">
          <source>Overload #11</source>
          <target state="translated">과부하 # 11</target>
        </trans-unit>
        <trans-unit id="708ab9510c7e38c88f006b391797e1d466773093" translate="yes" xml:space="preserve">
          <source>Overload #12</source>
          <target state="translated">과부하 # 12</target>
        </trans-unit>
        <trans-unit id="29c87afbd834728ebd526e5d252d5e3ef7aad9af" translate="yes" xml:space="preserve">
          <source>Overload #13</source>
          <target state="translated">과부하 # 13</target>
        </trans-unit>
        <trans-unit id="c4f23330e96a7c9954b7624fd51cb9e702277387" translate="yes" xml:space="preserve">
          <source>Overload #14</source>
          <target state="translated">과부하 # 14</target>
        </trans-unit>
        <trans-unit id="5875cb2297c8b6a099963c7348d618e9d77bed46" translate="yes" xml:space="preserve">
          <source>Overload #15</source>
          <target state="translated">과부하 # 15</target>
        </trans-unit>
        <trans-unit id="7571f668025673eebc39fc687f625bd5f2b6872e" translate="yes" xml:space="preserve">
          <source>Overload #16</source>
          <target state="translated">과부하 # 16</target>
        </trans-unit>
        <trans-unit id="d656b1e8a7b592004dc4fce8abbcb8d292732108" translate="yes" xml:space="preserve">
          <source>Overload #17</source>
          <target state="translated">과부하 # 17</target>
        </trans-unit>
        <trans-unit id="b9e7b378fae999a47e0e9fc977aed102fcf991d7" translate="yes" xml:space="preserve">
          <source>Overload #2</source>
          <target state="translated">과부하 # 2</target>
        </trans-unit>
        <trans-unit id="4503cfa5e2771e6382a0e066463069671128efb1" translate="yes" xml:space="preserve">
          <source>Overload #3</source>
          <target state="translated">과부하 # 3</target>
        </trans-unit>
        <trans-unit id="91e294e149f13e0c4620355553caeb9afb0d6534" translate="yes" xml:space="preserve">
          <source>Overload #4</source>
          <target state="translated">과부하 # 4</target>
        </trans-unit>
        <trans-unit id="4e01b3b424f3a462a7589dc84c2863d0ef63e27e" translate="yes" xml:space="preserve">
          <source>Overload #5</source>
          <target state="translated">과부하 # 5</target>
        </trans-unit>
        <trans-unit id="7e86a19e6f128d7c6324adfb89f38179bd257846" translate="yes" xml:space="preserve">
          <source>Overload #6</source>
          <target state="translated">과부하 # 6</target>
        </trans-unit>
        <trans-unit id="f2ecfac37d94de7fcca719eb867422193b7dfabe" translate="yes" xml:space="preserve">
          <source>Overload #7</source>
          <target state="translated">과부하 # 7</target>
        </trans-unit>
        <trans-unit id="1d21149070575307aa140758d30f3023fe51b855" translate="yes" xml:space="preserve">
          <source>Overload #8</source>
          <target state="translated">과부하 # 8</target>
        </trans-unit>
        <trans-unit id="8d9cffbc651127c0793f004f812707630de70ca3" translate="yes" xml:space="preserve">
          <source>Overload #9</source>
          <target state="translated">과부하 # 9</target>
        </trans-unit>
        <trans-unit id="631bc5aa25f06fafc9a23994bb1eabdf6877fe11" translate="yes" xml:space="preserve">
          <source>Override component providers</source>
          <target state="translated">구성 요소 제공자 대체</target>
        </trans-unit>
        <trans-unit id="cc6d9f903f785852001169fdcf9d21c0dc2dcfda" translate="yes" xml:space="preserve">
          <source>Override specs in the protractor config.</source>
          <target state="translated">각도기 구성에서 사양을 재 지정합니다.</target>
        </trans-unit>
        <trans-unit id="82569e1af4411a3ca5a500d77442e4d926659dfc" translate="yes" xml:space="preserve">
          <source>Override suite in the protractor config.</source>
          <target state="translated">각도기 구성의 스위트를 재 지정합니다.</target>
        </trans-unit>
        <trans-unit id="95dd7f1f63e72a369de142c6a9ccb5f7656a8603" translate="yes" xml:space="preserve">
          <source>Override which browsers tests are run against.</source>
          <target state="translated">어떤 브라우저 테스트가 실행되는지 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="3945eec03a2fbff43b9a0124637fa3ddd8817e70" translate="yes" xml:space="preserve">
          <source>Overrides the default encapsulation start and end delimiters (&lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;)</source>
          <target state="translated">기본 캡슐화 시작 및 끝 구분 기호 ( &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt; )를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="a3e6276d4238b83d8b34b8690b18af3da84bd359" translate="yes" xml:space="preserve">
          <source>Overrides the template of the given component, compiling the template in the context of the TestingModule.</source>
          <target state="translated">TestingModule의 컨텍스트에서 템플릿을 컴파일하여 지정된 구성 요소의 템플릿을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="3851edd380abbaab34e148361e486f13f53d606d" translate="yes" xml:space="preserve">
          <source>Overriding disablement of inner animations</source>
          <target state="translated">내부 애니메이션 비활성화 비활성화</target>
        </trans-unit>
        <trans-unit id="7f56c915b749465438fc24153a743680f744796e" translate="yes" xml:space="preserve">
          <source>Overriding the base class's &lt;code&gt;afterGetHeroes()&lt;/code&gt; method solves the problem.</source>
          <target state="translated">기본 클래스의 &lt;code&gt;afterGetHeroes()&lt;/code&gt; 메서드를 재정의하면 문제가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="2746a08dacca4229b0af233daabfa9fd97dc5ee8" translate="yes" xml:space="preserve">
          <source>Overview of Angular Libraries</source>
          <target state="translated">각도 라이브러리 개요</target>
        </trans-unit>
        <trans-unit id="20d2efcbe4ecea78ea9bd00eddd272f2905610cb" translate="yes" xml:space="preserve">
          <source>Overview of Angular libraries</source>
          <target state="translated">Angular 라이브러리 개요</target>
        </trans-unit>
        <trans-unit id="3256a7d3f1780d92f9544bcccf88c57a842d3516" translate="yes" xml:space="preserve">
          <source>Overview of reactive forms</source>
          <target state="translated">반응 형 개요</target>
        </trans-unit>
        <trans-unit id="5f713cfc7c1ee9427723dcef181e1959c5325428" translate="yes" xml:space="preserve">
          <source>Overview of template type checking</source>
          <target state="translated">템플릿 유형 검사 개요</target>
        </trans-unit>
        <trans-unit id="a1077753c31ecdcb7f35db71ad27322b7cf6eadb" translate="yes" xml:space="preserve">
          <source>Overwrites all providers for the given token with the given provider definition.</source>
          <target state="translated">주어진 토큰에 대한 모든 제공자를 제공된 제공자 정의로 겹쳐 씁니다.</target>
        </trans-unit>
        <trans-unit id="3292eb3a99ca7abf1d1290994cdfe7c7707593aa" translate="yes" xml:space="preserve">
          <source>PACKAGE_ROOT_URL</source>
          <target state="translated">PACKAGE_ROOT_URL</target>
        </trans-unit>
        <trans-unit id="d3029193fe6a512053aa03be9cefd3922b2e590a" translate="yes" xml:space="preserve">
          <source>PATCH Example</source>
          <target state="translated">패치 예</target>
        </trans-unit>
        <trans-unit id="55dc4ff75c8aba5ba9283f3021f8a6cf480a42ff" translate="yes" xml:space="preserve">
          <source>PLATFORM_ID</source>
          <target state="translated">PLATFORM_ID</target>
        </trans-unit>
        <trans-unit id="eebc664eb359e840c8da6c5793091d6785b6a05c" translate="yes" xml:space="preserve">
          <source>PLATFORM_INITIALIZER</source>
          <target state="translated">PLATFORM_INITIALIZER</target>
        </trans-unit>
        <trans-unit id="397a769801b979d889ebd77a4332cd956babc6c8" translate="yes" xml:space="preserve">
          <source>PRIMARY_OUTLET</source>
          <target state="translated">PRIMARY_OUTLET</target>
        </trans-unit>
        <trans-unit id="270be4f67efbcd132dfcd88a1e60b5ca9c489764" translate="yes" xml:space="preserve">
          <source>PROPERTY</source>
          <target state="translated">PROPERTY</target>
        </trans-unit>
        <trans-unit id="64ae0efa4ecf6712c9bb96d5b026f94653c2db16" translate="yes" xml:space="preserve">
          <source>PURPOSE</source>
          <target state="translated">PURPOSE</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="d6406a88383eedf30b977d2bb0232aff0842dafc" translate="yes" xml:space="preserve">
          <source>Package name</source>
          <target state="translated">패키지 이름</target>
        </trans-unit>
        <trans-unit id="45ab97346b3ce00e0f00b6991ed88c0b88a73912" translate="yes" xml:space="preserve">
          <source>Packages to support the &lt;a href=&quot;https://jasmine.github.io/&quot;&gt;Jasmine&lt;/a&gt; test library.</source>
          <target state="translated">&lt;a href=&quot;https://jasmine.github.io/&quot;&gt;Jasmine&lt;/a&gt; 테스트 라이브러리 를 지원하기위한 패키지 .</target>
        </trans-unit>
        <trans-unit id="2957f306bb6cf56d4d975d8b62e2053e57cf4b92" translate="yes" xml:space="preserve">
          <source>Packages to support the &lt;a href=&quot;https://www.npmjs.com/package/karma&quot;&gt;karma&lt;/a&gt; test runner.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/karma&quot;&gt;카르마&lt;/a&gt; 테스트 러너 를 지원하기위한 패키지 .</target>
        </trans-unit>
        <trans-unit id="c3bf6af63f1304d786eda4276c19d026531db799" translate="yes" xml:space="preserve">
          <source>Packaging functionality as a library forces the artifacts in the library to be decoupled from the application's business logic. This can help to avoid various bad practices or architecture mistakes that can make it difficult to decouple and reuse code in the future.</source>
          <target state="translated">라이브러리로서의 패키징 기능은 라이브러리의 아티팩트가 애플리케이션의 비즈니스 로직에서 분리되도록합니다. 이를 통해 향후 코드를 분리하고 재사용하기 어려운 다양한 나쁜 관행이나 아키텍처 실수를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19a78c06faafad0c2d397e4dec6632383ee88e00" translate="yes" xml:space="preserve">
          <source>Page URLs mirror the &lt;code&gt;content&lt;/code&gt; file structure. The URL for the page of a guide is in the form &lt;code&gt;guide/{page-name}&lt;/code&gt;. The page for &lt;em&gt;this&lt;/em&gt; &quot;Authors Style Guide&quot; is located at &lt;code&gt;content/guide/docs-style-guide.md&lt;/code&gt; and its URL is &lt;code&gt;guide/docs-style-guide&lt;/code&gt;.</source>
          <target state="translated">페이지 URL은 &lt;code&gt;content&lt;/code&gt; 파일 구조를 반영합니다 . 가이드 페이지의 URL은 &lt;code&gt;guide/{page-name}&lt;/code&gt; 형식 입니다. &lt;em&gt;이&lt;/em&gt; &quot;저자 스타일 안내서&quot; 의 페이지 는 &lt;code&gt;content/guide/docs-style-guide.md&lt;/code&gt; 에 있으며 URL은 &lt;code&gt;guide/docs-style-guide&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="66f986b3cfa975a766863176b860bdf5fd800365" translate="yes" xml:space="preserve">
          <source>Parallel animation using group() function</source>
          <target state="translated">group () 함수를 사용한 병렬 애니메이션</target>
        </trans-unit>
        <trans-unit id="65ff6d96cab9fb6bd409ea5ef8e9b9343f89cc06" translate="yes" xml:space="preserve">
          <source>ParamMap</source>
          <target state="translated">ParamMap</target>
        </trans-unit>
        <trans-unit id="d402babc9a4a78fce14eb88c847eb02e3d8f7c21" translate="yes" xml:space="preserve">
          <source>Parameter decorator for a directive constructor that designates a host-element attribute whose value is injected as a constant string literal.</source>
          <target state="translated">값이 상수 문자열 리터럴로 주입되는 호스트 요소 속성을 지정하는 지시문 생성자를위한 매개 변수 데코레이터.</target>
        </trans-unit>
        <trans-unit id="831563a593704f674d85a360973bb4a6e18835d6" translate="yes" xml:space="preserve">
          <source>Parameter decorator on a dependency parameter of a class constructor that specifies a custom provider of the dependency.</source>
          <target state="translated">종속성의 사용자 지정 공급자를 지정하는 클래스 생성자의 종속성 매개 변수에 대한 매개 변수 데코레이터.</target>
        </trans-unit>
        <trans-unit id="bc4b1b77d0964b6c5e91f132ad5df2d2d9ad36ed" translate="yes" xml:space="preserve">
          <source>Parameter decorator on a view-provider parameter of a class constructor that tells the DI framework to resolve the view by checking injectors of child elements, and stop when reaching the host element of the current component.</source>
          <target state="translated">DI 프레임 워크에 자식 요소의 인젝터를 확인하여보기를 해결하고 현재 구성 요소의 호스트 요소에 도달하면 중지하도록 지시하는 클래스 생성자의 뷰 공급자 매개 변수에 대한 매개 변수 데코레이터.</target>
        </trans-unit>
        <trans-unit id="5b25852d9fb793500a6dc605fb628540f9433473" translate="yes" xml:space="preserve">
          <source>Parameter decorator that configures a content query.</source>
          <target state="translated">콘텐츠 쿼리를 구성하는 매개 변수 데코레이터.</target>
        </trans-unit>
        <trans-unit id="053dd21e29405d85267d6cc081cfcf47598f70a8" translate="yes" xml:space="preserve">
          <source>Parameter decorator that configures a view query.</source>
          <target state="translated">뷰 쿼리를 구성하는 매개 변수 데코레이터.</target>
        </trans-unit>
        <trans-unit id="85e20474c1527f9306bff0cfaccf100267656cf2" translate="yes" xml:space="preserve">
          <source>Parameter decorator to be used on constructor parameters, which marks the parameter as being an optional dependency. The DI framework provides null if the dependency is not found.</source>
          <target state="translated">매개 변수 데코레이터는 생성자 매개 변수에 사용되며 매개 변수를 선택적 종속성으로 표시합니다. DI 프레임 워크는 종속성이없는 경우 널을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c2ddd04bc605e651c5613b54a00087d189942d04" translate="yes" xml:space="preserve">
          <source>Parameter decorator to be used on constructor parameters, which tells the DI framework to start dependency resolution from the local injector.</source>
          <target state="translated">DI 프레임 워크에 로컬 인젝터에서 종속성 분석을 시작하도록 지시하는 생성자 매개 변수에 사용되는 매개 변수 데코레이터.</target>
        </trans-unit>
        <trans-unit id="157fde4baebaef726eb1b06b5a661dc750ad4abd" translate="yes" xml:space="preserve">
          <source>Parameter decorator to be used on constructor parameters, which tells the DI framework to start dependency resolution from the parent injector. Resolution works upward through the injector hierarchy, so the local injector is not checked for a provider.</source>
          <target state="translated">DI 프레임 워크에 부모 인젝터에서 종속성 해결을 시작하도록 지시하는 생성자 매개 변수에 사용되는 매개 변수 데코레이터. 해결 방법은 인젝터 계층 구조를 통해 위쪽으로 작동하므로 로컬 인젝터는 공급자를 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3934332701ff1e27ece937a553b42f8f0ad8f656" translate="yes" xml:space="preserve">
          <source>Parameterizing a pipe</source>
          <target state="translated">파이프 매개 변수화</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="6ff1901d0a038d4eb5ed3f50bfd077678c801964" translate="yes" xml:space="preserve">
          <source>Parameters that can be passed to the state when it is invoked. 0 or more key-value pairs.</source>
          <target state="translated">호출 될 때 상태로 전달 될 수있는 매개 변수입니다. 0 개 이상의 키-값 쌍.</target>
        </trans-unit>
        <trans-unit id="dc124689c7040d627a2c6490eec999443990ba30" translate="yes" xml:space="preserve">
          <source>Params</source>
          <target state="translated">Params</target>
        </trans-unit>
        <trans-unit id="c1993903d38c874b1312f7b6813a8ce87bc0bb8a" translate="yes" xml:space="preserve">
          <source>Parent and children communicate via a service</source>
          <target state="translated">부모와 자녀는 서비스를 통해 의사 소통</target>
        </trans-unit>
        <trans-unit id="4471f19ebf37cc8c31fe0b43635ff1a0ee9f70f7" translate="yes" xml:space="preserve">
          <source>Parent calls an &lt;code&gt;@ViewChild()&lt;/code&gt;</source>
          <target state="translated">부모는 &lt;code&gt;@ViewChild()&lt;/code&gt; 호출</target>
        </trans-unit>
        <trans-unit id="4d96bf3b564400b974a226b8c74842c6a32a7c8b" translate="yes" xml:space="preserve">
          <source>Parent class interface</source>
          <target state="translated">부모 클래스 인터페이스</target>
        </trans-unit>
        <trans-unit id="1677cf3ff9ab86295b42c775efb55b880b8ef316" translate="yes" xml:space="preserve">
          <source>Parent directives listen for the event by binding to this property and accessing the data through the &lt;code&gt;$event&lt;/code&gt; object.</source>
          <target state="translated">부모 지시문은이 속성에 바인딩하고 &lt;code&gt;$event&lt;/code&gt; 개체를 통해 데이터에 액세스하여 이벤트를 수신 합니다.</target>
        </trans-unit>
        <trans-unit id="836b9b7477bb5f75f34ca246e807cef5547ba120" translate="yes" xml:space="preserve">
          <source>Parent interacts with child via &lt;code&gt;local variable&lt;/code&gt;</source>
          <target state="translated">부모는 &lt;code&gt;local variable&lt;/code&gt; 를 통해 자녀와 상호 작용 합니다</target>
        </trans-unit>
        <trans-unit id="3cef6a03c19c22a5eec3970bccbcc20fd40e1f72" translate="yes" xml:space="preserve">
          <source>Parent listens for child event</source>
          <target state="translated">부모는 자식 이벤트를 듣는다</target>
        </trans-unit>
        <trans-unit id="e17a3012940a44fa306224280da31476b2092626" translate="yes" xml:space="preserve">
          <source>Parent of this injector.</source>
          <target state="translated">이 인젝터의 부모.</target>
        </trans-unit>
        <trans-unit id="f414d1ba1615873fb1a234e831c16c4292615b4f" translate="yes" xml:space="preserve">
          <source>Parent-child animations</source>
          <target state="translated">부모-자식 애니메이션</target>
        </trans-unit>
        <trans-unit id="f9627107a88876f4aaf6d7e0b0c19984c3a631ae" translate="yes" xml:space="preserve">
          <source>Parentheses</source>
          <target state="translated">Parentheses</target>
        </trans-unit>
        <trans-unit id="67149a9c481a8457cbf816d6fea3adcb470b442e" translate="yes" xml:space="preserve">
          <source>Parentheses surround the secondary route.</source>
          <target state="translated">괄호는 보조 경로를 둘러 쌉니다.</target>
        </trans-unit>
        <trans-unit id="7828527ba71c0f809df73eeb15889ee37f247d0e" translate="yes" xml:space="preserve">
          <source>Parse a url into a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL을 &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; 로 파싱</target>
        </trans-unit>
        <trans-unit id="a151757f9ee40aa876b0dbcc84e4a2aa94447743" translate="yes" xml:space="preserve">
          <source>Parse it out.</source>
          <target state="translated">파싱하십시오.</target>
        </trans-unit>
        <trans-unit id="21b772698ca345c10d56cee00a81a1873d6be651" translate="yes" xml:space="preserve">
          <source>Parses a string into a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">문자열을 &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; 로 구문 분석</target>
        </trans-unit>
        <trans-unit id="9575281e0031a8b0350c2eeda96853602dd5d106" translate="yes" xml:space="preserve">
          <source>Parses a url into a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL을 &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; 로 구문 분석</target>
        </trans-unit>
        <trans-unit id="3f69f39a9aa00c24352272d42d08bac986bea81a" translate="yes" xml:space="preserve">
          <source>Parses the URL string based on the base URL</source>
          <target state="translated">기본 URL을 기반으로 URL 문자열을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="8e18f1e2be4cc0236c8b76f29e1cd45d2b15350b" translate="yes" xml:space="preserve">
          <source>Parses the provided URL and its relative URL.</source>
          <target state="translated">제공된 URL과 관련 URL을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="2f4f13dd90b74e75be72e0b0a7d45ab267e86ade" translate="yes" xml:space="preserve">
          <source>Parses the provided URL, and sets the current URL to the parsed result.</source>
          <target state="translated">제공된 URL을 구문 분석하고 현재 URL을 구문 분석 결과로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="746181cbabd0c36524106f51d0af82d41570a46e" translate="yes" xml:space="preserve">
          <source>Partial file naming</source>
          <target state="translated">부분 파일 명명</target>
        </trans-unit>
        <trans-unit id="9e9f00d71de9e4d80ccd990b60112c8313eff691" translate="yes" xml:space="preserve">
          <source>Partial model updates</source>
          <target state="translated">부분 모델 업데이트</target>
        </trans-unit>
        <trans-unit id="f0cd834d38b36d38705bc70770c4cea0080eb4e4" translate="yes" xml:space="preserve">
          <source>Partner and third party libraries also support the Angular CLI with add schematics. For example, &lt;code&gt;@ng-bootstrap/schematics&lt;/code&gt; adds &lt;a href=&quot;https://ng-bootstrap.github.io/&quot;&gt;ng-bootstrap&lt;/a&gt; to an app, and &lt;code&gt;@clr/angular&lt;/code&gt; installs and sets up &lt;a href=&quot;https://vmware.github.io/clarity/documentation/v1.0/get-started&quot;&gt;Clarity from VMWare&lt;/a&gt;.</source>
          <target state="translated">파트너 및 타사 라이브러리도 회로도 추가를 통해 Angular CLI를 지원합니다. 예를 들어 &lt;code&gt;@ng-bootstrap/schematics&lt;/code&gt; 는 앱에 &lt;a href=&quot;https://ng-bootstrap.github.io/&quot;&gt;ng-bootstrap&lt;/a&gt; 을 추가 하고 &lt;code&gt;@clr/angular&lt;/code&gt; 는 &lt;a href=&quot;https://vmware.github.io/clarity/documentation/v1.0/get-started&quot;&gt;VMWare에서 Clarity를&lt;/a&gt; 설치 및 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3650cc18c9eac296b13d1cef29399885fc68316d" translate="yes" xml:space="preserve">
          <source>Pass data from parent to child with input binding</source>
          <target state="translated">입력 바인딩으로 부모에서 자식으로 데이터 전달</target>
        </trans-unit>
        <trans-unit id="df2e98f78fbb7324e2bec4b099d5f2f17892f388" translate="yes" xml:space="preserve">
          <source>Pass information along in route parameters and subscribe to them in the component.</source>
          <target state="translated">경로 매개 변수와 함께 정보를 전달하고 컴포넌트에서 구독하십시오.</target>
        </trans-unit>
        <trans-unit id="d12af56aea5de147e335dd23556be737d4cc0a30" translate="yes" xml:space="preserve">
          <source>Pass information to a component using a parameter.</source>
          <target state="translated">매개 변수를 사용하여 구성 요소에 정보를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="fe77eeb6f42e114596e23ea10653268f27e5369a" translate="yes" xml:space="preserve">
          <source>Pass required and optional information in route parameters.</source>
          <target state="translated">경로 매개 변수에 필수 및 선택적 정보를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="eaad3660dba745abb2af17f84c5e548a0b8fa5cb" translate="yes" xml:space="preserve">
          <source>Pass the current product as input to the component using property binding.</source>
          <target state="translated">특성 바인딩을 사용하여 현재 제품을 입력으로 컴포넌트에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="07f766c03ee41526736042244dadd75506ed0e75" translate="yes" xml:space="preserve">
          <source>Pass this schematic to the &quot;run&quot; command to create a service worker</source>
          <target state="translated">이 회로도를 &quot;run&quot;명령으로 전달하여 서비스 워커를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4467a947dcb3a498f2fc37f1fabd02c54aa219ba" translate="yes" xml:space="preserve">
          <source>Pass this schematic to the &quot;run&quot; command to set up server-side rendering for an app.</source>
          <target state="translated">이 회로도를 &quot;run&quot;명령에 전달하여 앱의 서버 측 렌더링을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2b751fc327a7dcfe9593f5a21354e60d3d30f7ec" translate="yes" xml:space="preserve">
          <source>Pass values into the directive with an &lt;code&gt;@Input&lt;/code&gt; data binding</source>
          <target state="translated">&lt;code&gt;@Input&lt;/code&gt; 데이터 바인딩 을 사용하여 지시문에 값을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="80f0f4ae03bf26d03b0d62ce7c16fbb4e96b478b" translate="yes" xml:space="preserve">
          <source>Passed to &lt;a href=&quot;router#createUrlTree&quot;&gt;Router#createUrlTree&lt;/a&gt; as part of the &lt;code&gt;&lt;a href=&quot;urlcreationoptions&quot;&gt;UrlCreationOptions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에 전달 &lt;a href=&quot;router#createUrlTree&quot;&gt;라우터 # createUrlTree&lt;/a&gt; 의 일환으로 &lt;code&gt;&lt;a href=&quot;urlcreationoptions&quot;&gt;UrlCreationOptions&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2e1faf8ed7275cb9217702647fcba0cae380a10" translate="yes" xml:space="preserve">
          <source>Passed to &lt;a href=&quot;router#navigateByUrl&quot;&gt;Router#navigateByUrl&lt;/a&gt; as part of the &lt;code&gt;&lt;a href=&quot;navigationbehavioroptions&quot;&gt;NavigationBehaviorOptions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;navigationbehavioroptions&quot;&gt;NavigationBehaviorOptions&lt;/a&gt;&lt;/code&gt; 의 일부로 &lt;a href=&quot;router#navigateByUrl&quot;&gt;Router # navigateByUrl에&lt;/a&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="368ddeb092dc46040eca0b1a6cfa21412c4b8367" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;$event&lt;/code&gt; is a dubious practice</source>
          <target state="translated">&lt;code&gt;$event&lt;/code&gt; 전달 은 모호한 연습입니다</target>
        </trans-unit>
        <trans-unit id="62ef1a584ee91b9705f1be01a036cc0c411dcab9" translate="yes" xml:space="preserve">
          <source>Passing a new search term directly to the &lt;code&gt;searchHeroes()&lt;/code&gt; after every user keystroke would create an excessive amount of HTTP requests, taxing server resources and burning through data plans.</source>
          <target state="translated">모든 사용자 키 입력 후 새로운 검색어를 &lt;code&gt;searchHeroes()&lt;/code&gt; 직접 전달 하면 과도한 양의 HTTP 요청이 발생하고 서버 리소스에 부담이 발생하며 데이터 계획을 통해 불타 게됩니다.</target>
        </trans-unit>
        <trans-unit id="e2bbd329b24cf69e01673970ea66bf2ff35c9952" translate="yes" xml:space="preserve">
          <source>Passing an array of components to &lt;code&gt;AdBannerComponent&lt;/code&gt; allows for a dynamic list of ads without static elements in the template.</source>
          <target state="translated">&lt;code&gt;AdBannerComponent&lt;/code&gt; 에 구성 요소 배열을 전달하면 템플릿에 정적 요소가없는 동적 광고 목록이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="37334c1f2693af162c9dad9866cd5e2b0ef74011" translate="yes" xml:space="preserve">
          <source>Passing in a string</source>
          <target state="translated">문자열 전달</target>
        </trans-unit>
        <trans-unit id="bc42a93af5a6fbbd2ecca30823e18bc2dbb8ae90" translate="yes" xml:space="preserve">
          <source>Passing in an object</source>
          <target state="translated">객체 전달</target>
        </trans-unit>
        <trans-unit id="cd918db66f50b4dc080e0a2d57b4fb744f9d1d0b" translate="yes" xml:space="preserve">
          <source>Passing information along in route parameters and subscribe to them in the component.</source>
          <target state="translated">경로 매개 변수를 따라 정보를 전달하고 컴포넌트에서 구독합니다.</target>
        </trans-unit>
        <trans-unit id="d8b5df37983878e2ad41dc56c5b3c026dfe3f4ce" translate="yes" xml:space="preserve">
          <source>Passing required and optional information in route parameters.</source>
          <target state="translated">경로 매개 변수에 필수 및 선택 정보를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="d57697ce49558233801e0eaf427f127fb2dc0f89" translate="yes" xml:space="preserve">
          <source>Paste the following code into your guard.</source>
          <target state="translated">가드에 다음 코드를 붙여 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="b7d6a4aaf033efc2986f8101aa454963315188d2" translate="yes" xml:space="preserve">
          <source>Patch the value for a form group</source>
          <target state="translated">양식 그룹의 값을 패치하십시오.</target>
        </trans-unit>
        <trans-unit id="e1ebe08030715ff940b0006753144b1569e485c7" translate="yes" xml:space="preserve">
          <source>Patch the values for controls in a form array</source>
          <target state="translated">폼 배열에서 컨트롤 값을 패치</target>
        </trans-unit>
        <trans-unit id="22baf0cbd4ac01a3a661f6b4a84fa5f4139cf6e2" translate="yes" xml:space="preserve">
          <source>Patches the value of a control.</source>
          <target state="translated">컨트롤의 값을 패치합니다.</target>
        </trans-unit>
        <trans-unit id="6572cb7b9b9f6c29e37ee8eb322fed0d80cde71b" translate="yes" xml:space="preserve">
          <source>Patches the value of the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. It accepts an array that matches the structure of the control, and does its best to match the values to the correct controls in the group.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 의 값을 패치합니다 . 컨트롤의 구조와 일치하는 배열을 받아들이고 값을 그룹의 올바른 컨트롤과 일치시키기 위해 최선을 다합니다.</target>
        </trans-unit>
        <trans-unit id="a944295e5bcdd2a5628b77126984be5da56bb988" translate="yes" xml:space="preserve">
          <source>Patches the value of the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. It accepts an object with control names as keys, and does its best to match the values to the correct controls in the group.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 값을 패치합니다 . 컨트롤 이름을 키로 사용하는 개체를 허용하고 값을 그룹의 올바른 컨트롤과 일치시키는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="93876a08e24d20da2d2cb67a1189d78e885ee57d" translate="yes" xml:space="preserve">
          <source>Patches the value of the control. Abstract method (implemented in sub-classes).</source>
          <target state="translated">컨트롤 값을 패치합니다. 추상 메소드 (서브 클래스에서 구현 됨).</target>
        </trans-unit>
        <trans-unit id="cc5d607fa4a4609de63f99f862138c6e03b4ebd4" translate="yes" xml:space="preserve">
          <source>Patching the model value</source>
          <target state="translated">모델 값 패치</target>
        </trans-unit>
        <trans-unit id="3ed43a3a0f94a6fcdbd58ae09a894cc13b04e3f4" translate="yes" xml:space="preserve">
          <source>Path to ngsw-config.json.</source>
          <target state="translated">ngsw-config.json의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="25c4cfd28cef041116c7b7bc8ca15e425574289e" translate="yes" xml:space="preserve">
          <source>Path where output will be placed.</source>
          <target state="translated">출력이 배치 될 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3e73f0447cc860168aee757b0d6aef190f943545" translate="yes" xml:space="preserve">
          <source>PathLocationStrategy</source>
          <target state="translated">PathLocationStrategy</target>
        </trans-unit>
        <trans-unit id="a6403199acd619a42efcc7f425ecb2021ce7030b" translate="yes" xml:space="preserve">
          <source>Paths should always begin with forward slash (/). This method adds the forward slash if it is missing.</source>
          <target state="translated">경로는 항상 슬래시 (/)로 시작해야합니다. 이 방법은 슬래시가없는 경우 슬래시를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="52c496f327be18fd65119f787b70659883ab1e8c" translate="yes" xml:space="preserve">
          <source>Pattern matching with the global or sticky flag</source>
          <target state="translated">전역 또는 고정 플래그와 일치하는 패턴</target>
        </trans-unit>
        <trans-unit id="0f5281baa789f97c9906c0a66900d4d98d83c86c" translate="yes" xml:space="preserve">
          <source>PatternValidator</source>
          <target state="translated">PatternValidator</target>
        </trans-unit>
        <trans-unit id="c4f9246ecd5466bdbf698a993ebf846997223d97" translate="yes" xml:space="preserve">
          <source>Pauses the animation.</source>
          <target state="translated">애니메이션을 일시 정지합니다.</target>
        </trans-unit>
        <trans-unit id="324f2140ef6b85ef93f8bf84e950a2247c40e8ce" translate="yes" xml:space="preserve">
          <source>Pay attention to two key points:</source>
          <target state="translated">두 가지 핵심 사항에주의하십시오.</target>
        </trans-unit>
        <trans-unit id="1786801551be2cc10398242d02ea9d7be87b95ca" translate="yes" xml:space="preserve">
          <source>Payload size debugging</source>
          <target state="translated">페이로드 크기 디버깅</target>
        </trans-unit>
        <trans-unit id="6408f1628187dc531274b7c13aa99eaeb03fa803" translate="yes" xml:space="preserve">
          <source>Peek-a-boo</source>
          <target state="translated">Peek-a-boo</target>
        </trans-unit>
        <trans-unit id="13f06dc9c51750db799af134ce604fc3cf1692f2" translate="yes" xml:space="preserve">
          <source>Peek-a-boo: all hooks</source>
          <target state="translated">픽 어 부 : 모든 후크</target>
        </trans-unit>
        <trans-unit id="f943c63d4bfbd73cac05e58aae5f5ff04d7953c2" translate="yes" xml:space="preserve">
          <source>Per user tracking</source>
          <target state="translated">사용자 당 추적</target>
        </trans-unit>
        <trans-unit id="99cc4a62a98bf7d2d79141044c8c69fe6edc8108" translate="yes" xml:space="preserve">
          <source>PercentPipe</source>
          <target state="translated">PercentPipe</target>
        </trans-unit>
        <trans-unit id="88cb2244486eb9636a4247dc700316395faa8a97" translate="yes" xml:space="preserve">
          <source>Percentage: &lt;code&gt;'100%'&lt;/code&gt;</source>
          <target state="translated">백분율 : &lt;code&gt;'100%'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0535a7ecad192b6b512e9d676fda57d50cf93916" translate="yes" xml:space="preserve">
          <source>Perform a basic update to the current stable release of the core framework and CLI by running the following command.</source>
          <target state="translated">다음 명령을 실행하여 코어 프레임 워크 및 CLI의 현재 안정 릴리스에 대한 기본 업데이트를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b956ef3b09067fc5ee4393f7ba4fa1a6974e6fe5" translate="yes" xml:space="preserve">
          <source>Perform complex initializations outside of the constructor. Components should be cheap and safe to construct. You should not, for example, fetch data in a component constructor. You shouldn't worry that a new component will try to contact a remote server when created under test or before you decide to display it.</source>
          <target state="translated">생성자 외부에서 복잡한 초기화를 수행합니다. 구성 요소는 저렴하고 안전하게 구성 할 수 있어야합니다. 예를 들어 구성 요소 생성자에서 데이터를 가져 오지 않아야합니다. 새 구성 요소가 테스트 중에 생성 될 때 또는 표시하기로 결정하기 전에 원격 서버에 연결을 시도 할 것이라고 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7b2260710aee7a5a916a9a3a4ee71922a6ec05aa" translate="yes" xml:space="preserve">
          <source>Perform the &lt;em&gt;clone-to-launch&lt;/em&gt; steps with these terminal commands.</source>
          <target state="translated">수행 &lt;em&gt;클론 - 투 - 시작&lt;/em&gt; 이 터미널 명령 단계를.</target>
        </trans-unit>
        <trans-unit id="7b1a76c1f8658975e4cacb3ec1edbbdfdbbd3a11" translate="yes" xml:space="preserve">
          <source>Performs HTTP requests. This service is available as an injectable class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http/httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">HTTP 요청을 수행합니다. 이 서비스는 HTTP 요청을 수행하는 메소드와 함께 주사 가능한 클래스로 제공됩니다. 각 요청 메소드에는 여러 서명이 있으며 리턴 유형은 호출 된 서명 (주로 &lt;code&gt;observe&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;http/httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; 값)에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="8cf74d87b6b851d3e13b233d78cf31bba72f4aa5" translate="yes" xml:space="preserve">
          <source>Performs HTTP requests. This service is available as an injectable class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">HTTP 요청을 수행합니다. 이 서비스는 HTTP 요청을 수행하는 메소드와 함께 주사 가능한 클래스로 제공됩니다. 각 요청 메소드에는 여러 서명이 있으며 리턴 유형은 호출 된 서명 (주로 &lt;code&gt;observe&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; 값)에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="cc15604d3483547a1a248b63f2be34708baf5649" translate="yes" xml:space="preserve">
          <source>Performs HTTP requests. This service is available as an injectable class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;responseType&lt;/code&gt;).</source>
          <target state="translated">HTTP 요청을 수행합니다. 이 서비스는 HTTP 요청을 수행하는 메서드와 함께 주입 가능한 클래스로 사용할 수 있습니다. 각 요청 메서드에는 여러 서명이 있으며 반환 유형은 호출되는 서명 (주로 &lt;code&gt;observe&lt;/code&gt; 및 &lt;code&gt;responseType&lt;/code&gt; 의 값)에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="5e0e579f20aa9017b5a5bf405d088b06d077d8f7" translate="yes" xml:space="preserve">
          <source>Performs a filter match for matches.</source>
          <target state="translated">일치하는 필터 일치를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="fbd3a6414f86c350ce21057bcf85969bb71fd694" translate="yes" xml:space="preserve">
          <source>Performs case matching. For internal use only.</source>
          <target state="translated">대 / 소문자를 일치시킵니다. 내부 전용.</target>
        </trans-unit>
        <trans-unit id="f0fa815ee0f8e7502cd323f53be4dda642caf766" translate="yes" xml:space="preserve">
          <source>Perhaps the user is not authorized to navigate to the target component.</source>
          <target state="translated">사용자는 대상 구성 요소를 탐색 할 권한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e625cc94f99a276ea88e61fb38b01e628e4b07df" translate="yes" xml:space="preserve">
          <source>Perhaps you declared &quot;x&quot; in an application sub-module but forgot to export it. The &quot;x&quot; class isn't visible to other modules until you add it to the &lt;code&gt;exports&lt;/code&gt; list.</source>
          <target state="translated">응용 프로그램 하위 모듈에서 &quot;x&quot;를 선언했지만 내보내는 것을 잊었을 수 있습니다. &quot;x&quot;클래스는 &lt;code&gt;exports&lt;/code&gt; 목록에 추가 할 때까지 다른 모듈에 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="170a28a9db6d27d7212fc6dc249434a57517e7bc" translate="yes" xml:space="preserve">
          <source>Period</source>
          <target state="translated">Period</target>
        </trans-unit>
        <trans-unit id="e4d27eecd313d8ce6f2608a84068369790772864" translate="yes" xml:space="preserve">
          <source>Period standalone*</source>
          <target state="translated">독립형 기간 *</target>
        </trans-unit>
        <trans-unit id="c8753a38d0545756f3a8227f0ed2c2c7057a2d66" translate="yes" xml:space="preserve">
          <source>Period*</source>
          <target state="translated">Period*</target>
        </trans-unit>
        <trans-unit id="ccba310cee50783e1688d63df45ac1024b3e01aa" translate="yes" xml:space="preserve">
          <source>Permitting direct access to the DOM can make your application more vulnerable to XSS attacks. Carefully review any use of &lt;code&gt;&lt;a href=&quot;elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; in your code. For more detail, see the &lt;a href=&quot;http://g.co/ng/security&quot;&gt;Security Guide&lt;/a&gt;.</source>
          <target state="translated">DOM에 직접 액세스하도록 허용하면 응용 프로그램이 XSS 공격에 더욱 취약해질 수 있습니다. 코드에서 &lt;code&gt;&lt;a href=&quot;elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; 의 사용을주의 깊게 검토하십시오 . 자세한 내용은 &lt;a href=&quot;http://g.co/ng/security&quot;&gt;보안 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57ebb57a4f9074cb590c1b05b3cb709fdf0c51f5" translate="yes" xml:space="preserve">
          <source>Phase 1 is &lt;em&gt;code analysis&lt;/em&gt;. In this phase, the TypeScript compiler and &lt;em&gt;AOT collector&lt;/em&gt; create a representation of the source. The collector does not attempt to interpret the metadata it collects. It represents the metadata as best it can and records errors when it detects a metadata syntax violation.</source>
          <target state="translated">1 단계는 &lt;em&gt;코드 분석&lt;/em&gt; 입니다. 이 단계에서 TypeScript 컴파일러와 &lt;em&gt;AOT 콜렉터&lt;/em&gt; 는 소스의 표현을 작성합니다. 수집기는 수집 한 메타 데이터를 해석하지 않습니다. 메타 데이터 구문을 감지하면 메타 데이터를 최대한 잘 나타내고 오류를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="ea959a9545e7ce4a4e4dc0c349397d6d0488c3af" translate="yes" xml:space="preserve">
          <source>Phase 1: Code analysis</source>
          <target state="translated">1 단계 : 코드 분석</target>
        </trans-unit>
        <trans-unit id="84c11744869d4f423f9ea1e9f82a1dc1b2a0f234" translate="yes" xml:space="preserve">
          <source>Phase 2 is &lt;em&gt;code generation&lt;/em&gt;. In this phase, the compiler's &lt;code&gt;StaticReflector&lt;/code&gt; interprets the metadata collected in phase 1, performs additional validation of the metadata, and throws an error if it detects a metadata restriction violation.</source>
          <target state="translated">2 단계는 &lt;em&gt;코드 생성&lt;/em&gt; 입니다. 이 단계에서 컴파일러의 &lt;code&gt;StaticReflector&lt;/code&gt; 는 1 단계에서 수집 된 메타 데이터를 해석하고 메타 데이터의 추가 유효성 검사를 수행하며 메타 데이터 제한 위반을 감지하면 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="85d4cb139676a6815bfd11962f2a145d28733afc" translate="yes" xml:space="preserve">
          <source>Phase 2: code generation</source>
          <target state="translated">2 단계 : 코드 생성</target>
        </trans-unit>
        <trans-unit id="1a6ada06034d6ecf65dcdf9ce5f10b8bbd0c42a6" translate="yes" xml:space="preserve">
          <source>Phase 3 is &lt;em&gt;template type checking&lt;/em&gt;. In this optional phase, the Angular &lt;em&gt;template compiler&lt;/em&gt; uses the TypeScript compiler to validate the binding expressions in templates. You can enable this phase explicitly by setting the &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; configuration option; see &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular compiler options&lt;/a&gt;.</source>
          <target state="translated">3 단계는 &lt;em&gt;템플릿 유형 확인&lt;/em&gt; 입니다. 이 선택적 단계에서 Angular &lt;em&gt;템플릿 컴파일러&lt;/em&gt; 는 TypeScript 컴파일러를 사용하여 &lt;em&gt;템플릿&lt;/em&gt; 의 바인딩 식을 확인합니다. &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; 구성 옵션 을 설정하여이 단계를 명시 적으로 사용할 수 있습니다 . &lt;a href=&quot;angular-compiler-options&quot;&gt;각도 컴파일러 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b248fc2361f1f33d985ac6fd0375650ea1e867b" translate="yes" xml:space="preserve">
          <source>Phase 3: Template type checking</source>
          <target state="translated">3 단계 : 템플릿 유형 확인</target>
        </trans-unit>
        <trans-unit id="77513301fca071ef50e34222162e1bee88638252" translate="yes" xml:space="preserve">
          <source>PhoneCat Upgrade Tutorial</source>
          <target state="translated">PhoneCat 업그레이드 튜토리얼</target>
        </trans-unit>
        <trans-unit id="c84767b3406e6820bf28975a2c31e54821aec724" translate="yes" xml:space="preserve">
          <source>Pick the &quot;sources&quot; section.</source>
          <target state="translated">&quot;소스&quot;섹션을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="00dae071c082bb73eaed17b4bb3429280e110e8c" translate="yes" xml:space="preserve">
          <source>Pipe</source>
          <target state="translated">Pipe</target>
        </trans-unit>
        <trans-unit id="6c5f8c2c367f43a764f4bfe55c90cef2f87478aa" translate="yes" xml:space="preserve">
          <source>Pipe Testing</source>
          <target state="translated">파이프 테스트</target>
        </trans-unit>
        <trans-unit id="3ccc4c0ef19d1ba8e6315dd591ed6f08d8e2cebf" translate="yes" xml:space="preserve">
          <source>Pipe names</source>
          <target state="translated">파이프 이름</target>
        </trans-unit>
        <trans-unit id="db0a638607a7eb69c3e26db0a30b2b8322c77ea8" translate="yes" xml:space="preserve">
          <source>PipeTransform</source>
          <target state="translated">PipeTransform</target>
        </trans-unit>
        <trans-unit id="785af2a4ad3c4ee912623c6e0b6d4299ea305bf6" translate="yes" xml:space="preserve">
          <source>Pipes</source>
          <target state="translated">Pipes</target>
        </trans-unit>
        <trans-unit id="cb2a8758a90a6a1ad70e15ab2f35125d3e28bbb8" translate="yes" xml:space="preserve">
          <source>Pipes and change detection</source>
          <target state="translated">파이프 및 변경 감지</target>
        </trans-unit>
        <trans-unit id="70cbce5e043d7e4ec78bddca83822e6747dfe443" translate="yes" xml:space="preserve">
          <source>Pipes are a great way to encapsulate and share common display-value transformations. Use them like styles, dropping them into your template's expressions to enrich the appeal and usability of your views.</source>
          <target state="translated">파이프는 일반적인 표시 값 변환을 캡슐화하고 공유 할 수있는 좋은 방법입니다. 스타일처럼 사용하여 템플릿의 표현에 끌어다 놓아 뷰의 매력과 유용성을 풍부하게합니다.</target>
        </trans-unit>
        <trans-unit id="9a1e8453a9c510b7cd81f9ac0bf7d273b2689f33" translate="yes" xml:space="preserve">
          <source>Pipes are easy to test without the Angular testing utilities.</source>
          <target state="translated">파이프는 각도 테스트 유틸리티없이 쉽게 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2597b4963ef049463e405c7d6e73c90c9e1c5e0" translate="yes" xml:space="preserve">
          <source>Pipes are simple functions that accept an input value and return a transformed value. They're easy to apply within template expressions, using the pipe operator (&lt;code&gt;|&lt;/code&gt;):</source>
          <target state="translated">파이프는 입력 값을 수락하고 변환 된 값을 반환하는 간단한 함수입니다. 파이프 연산자 ( &lt;code&gt;|&lt;/code&gt; )를 사용하여 템플릿 표현식에 쉽게 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05da230b695c1f1aa7caf1f8db2a8f9aad1a40f9" translate="yes" xml:space="preserve">
          <source>Pipes have the correct return type.</source>
          <target state="translated">파이프에는 올바른 반환 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="03700b0b5a3875f2890e5cc29d64836f946d234e" translate="yes" xml:space="preserve">
          <source>Pipes using Intl API</source>
          <target state="translated">Intl API를 사용하는 파이프</target>
        </trans-unit>
        <trans-unit id="5d35fb2984acf418b500f8848a540a960cf182c8" translate="yes" xml:space="preserve">
          <source>Place the providers into the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">공급자를 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 메서드에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="94e97573f3f36cc85a509cba82a8882db73eb5b2" translate="yes" xml:space="preserve">
          <source>Place the providers into the &lt;code&gt;forRoot()&lt;/code&gt; method.</source>
          <target state="translated">공급자를 &lt;code&gt;forRoot()&lt;/code&gt; 메서드에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="ac32ecbb008bd8e6a2ac9a9819654cbd68d1c6b0" translate="yes" xml:space="preserve">
          <source>Place your spec file next to the file it tests</source>
          <target state="translated">테스트 파일 옆에 사양 파일을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="af086a1752f7b13e9f3118daeb980172fbe47e92" translate="yes" xml:space="preserve">
          <source>Place your spec files in a test folder</source>
          <target state="translated">테스트 폴더에 사양 파일 배치</target>
        </trans-unit>
        <trans-unit id="f1dbc6a6def246b8e7db2c645d69cb1c276181b2" translate="yes" xml:space="preserve">
          <source>Plain InjectionToken</source>
          <target state="translated">일반 사출 토큰</target>
        </trans-unit>
        <trans-unit id="1ecd2749d5ebdc23a466e45d8cd30c925b0c7d2a" translate="yes" xml:space="preserve">
          <source>Platform for testing</source>
          <target state="translated">테스트 플랫폼</target>
        </trans-unit>
        <trans-unit id="152cf3d0db209f7bfd4079d8a34ddf474b9c46f5" translate="yes" xml:space="preserve">
          <source>Platform injector</source>
          <target state="translated">플랫폼 인젝터</target>
        </trans-unit>
        <trans-unit id="bea7d8d71c17bf523a37e15e5174526dd62f1bee" translate="yes" xml:space="preserve">
          <source>PlatformConfig</source>
          <target state="translated">PlatformConfig</target>
        </trans-unit>
        <trans-unit id="97be63e4c422f1cc7f9c7446a9e450eba2bd657c" translate="yes" xml:space="preserve">
          <source>PlatformLocation</source>
          <target state="translated">PlatformLocation</target>
        </trans-unit>
        <trans-unit id="a6f2b49d2e89ca8c89d96a762ff57c52051eaa40" translate="yes" xml:space="preserve">
          <source>PlatformRef</source>
          <target state="translated">PlatformRef</target>
        </trans-unit>
        <trans-unit id="b01e2980d8515172a9d3aa79b81950b4a90ed0e2" translate="yes" xml:space="preserve">
          <source>PlatformState</source>
          <target state="translated">PlatformState</target>
        </trans-unit>
        <trans-unit id="74639aadcc28aae30a85e69871c18d9bc9c1915f" translate="yes" xml:space="preserve">
          <source>Please note that directives &lt;em&gt;do not&lt;/em&gt; support namespaces.</source>
          <target state="translated">지시문 &lt;em&gt;은&lt;/em&gt; 네임 스페이스를 지원 &lt;em&gt;하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="61c195be0e6714febc8893a644ab80b038caa49a" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt;waitForAsync&lt;/a&gt; section for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt;waitForAsync&lt;/a&gt; 섹션을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="4ef8776654a5598bd9bf8265ea86a4a13f90f500" translate="yes" xml:space="preserve">
          <source>Plural</source>
          <target state="translated">Plural</target>
        </trans-unit>
        <trans-unit id="c822c5e43dd02bebbfa621e9e82432f691815c11" translate="yes" xml:space="preserve">
          <source>Plurality cases used for translating plurals to different languages.</source>
          <target state="translated">복수를 다른 언어로 번역하는 데 사용되는 복수 사례.</target>
        </trans-unit>
        <trans-unit id="deece46c22e64f44a14fe2209222289025573b98" translate="yes" xml:space="preserve">
          <source>Pluralization</source>
          <target state="translated">Pluralization</target>
        </trans-unit>
        <trans-unit id="691fb17d9ec645abcccef304dd3d450d16a59184" translate="yes" xml:space="preserve">
          <source>Pluralization categories include (depending on the language):</source>
          <target state="translated">복수형 범주에는 다음이 포함됩니다 (언어에 따라 다름).</target>
        </trans-unit>
        <trans-unit id="9261553f8e998b6ca0acfcb68f69cb942b6b73bc" translate="yes" xml:space="preserve">
          <source>Point the browser to the project root when loading things through SystemJS, instead of using the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; URL.</source>
          <target state="translated">&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; URL 을 사용하는 대신 SystemJS를 통해 항목을로드 할 때 브라우저를 프로젝트 루트로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="77a19dda9326382b91d909e73d98605ee2883479" translate="yes" xml:space="preserve">
          <source>Poke at its API.</source>
          <target state="translated">API를 찌르십시오.</target>
        </trans-unit>
        <trans-unit id="861260cecd797e42301015d1972945d6ccce6883" translate="yes" xml:space="preserve">
          <source>Polyfill</source>
          <target state="translated">Polyfill</target>
        </trans-unit>
        <trans-unit id="686b77cb484e01d6f0a696a15e0937d89d1ac793" translate="yes" xml:space="preserve">
          <source>Polyfill packages</source>
          <target state="translated">폴리 필 패키지</target>
        </trans-unit>
        <trans-unit id="c65de7239130b2221dc156af1c9b5fa8125b9bf3" translate="yes" xml:space="preserve">
          <source>Polyfills</source>
          <target state="translated">Polyfills</target>
        </trans-unit>
        <trans-unit id="7e22065c36bcda31ffb06eb771fe814a5d369aa6" translate="yes" xml:space="preserve">
          <source>Polyfills Required</source>
          <target state="translated">필요한 폴리 필</target>
        </trans-unit>
        <trans-unit id="52c3a3711b3b9e6b7b93a7d53aeecbb508abe8a7" translate="yes" xml:space="preserve">
          <source>Polyfills for non-CLI users</source>
          <target state="translated">CLI가 아닌 사용자를위한 폴리 필</target>
        </trans-unit>
        <trans-unit id="04f319abcfdc41549454a65108740afd882caa7d" translate="yes" xml:space="preserve">
          <source>PopStateEvent</source>
          <target state="translated">PopStateEvent</target>
        </trans-unit>
        <trans-unit id="3aa86d1665bcb4e3dbe2857f063a76b3c7ca070e" translate="yes" xml:space="preserve">
          <source>Populate the model with sample data.</source>
          <target state="translated">샘플 데이터로 모델을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="db23d762d8b57c6ab54bf69340014948dacf2947" translate="yes" xml:space="preserve">
          <source>Port to listen on.</source>
          <target state="translated">수신 할 포트입니다.</target>
        </trans-unit>
        <trans-unit id="33f8228b4f271aef80dab1a0ae9f8cd988cceaa1" translate="yes" xml:space="preserve">
          <source>Portuguese Brazil</source>
          <target state="translated">포르투갈어 브라질</target>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="translated">가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">가능한 값 :</target>
        </trans-unit>
        <trans-unit id="9310c30efd49230a522a5476fb106e532c4ad304" translate="yes" xml:space="preserve">
          <source>Power Boost Calculator</source>
          <target state="translated">파워 부스트 계산기</target>
        </trans-unit>
        <trans-unit id="55eed3cc7013197cfb7c5f1ea92b2dffefeffbe8" translate="yes" xml:space="preserve">
          <source>Practical observable usage</source>
          <target state="translated">실제 관찰 가능한 사용법</target>
        </trans-unit>
        <trans-unit id="e0ec019e6613fb1af300ed7695a138dc18ac2d81" translate="yes" xml:space="preserve">
          <source>Pre-defined format options</source>
          <target state="translated">미리 정의 된 형식 옵션</target>
        </trans-unit>
        <trans-unit id="a51f30cc3e4fcf0ee07c35bd2dec0b89b0f47eaa" translate="yes" xml:space="preserve">
          <source>Precaching with Angular Service Worker</source>
          <target state="translated">앵귤러 서비스 워커와의 사전 캐싱</target>
        </trans-unit>
        <trans-unit id="60517df9a72adb7b98fdcba382b4e39193f1749a" translate="yes" xml:space="preserve">
          <source>Predefined shipping data</source>
          <target state="translated">사전 정의 된 배송 데이터</target>
        </trans-unit>
        <trans-unit id="f18648d5cf93cb7cc4f85cc03b3fd481807b3442" translate="yes" xml:space="preserve">
          <source>Predefined states and wildcard matching</source>
          <target state="translated">사전 정의 된 상태 및 와일드 카드 일치</target>
        </trans-unit>
        <trans-unit id="0808b401a93f815fe9ce2e731fcd95f9ed6c3b2a" translate="yes" xml:space="preserve">
          <source>Predefined tokens and multiple providers</source>
          <target state="translated">미리 정의 된 토큰 및 여러 공급자</target>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="translated">Predicate</target>
        </trans-unit>
        <trans-unit id="a48d36ce88487edcdf3dd5e1a22e2e472b581b19" translate="yes" xml:space="preserve">
          <source>Predicates for use with &lt;a href=&quot;../core/debugelement&quot;&gt;&lt;code&gt;DebugElement&lt;/code&gt;&lt;/a&gt;'s query functions.</source>
          <target state="translated">&lt;a href=&quot;../core/debugelement&quot;&gt; &lt;code&gt;DebugElement&lt;/code&gt; &lt;/a&gt; 의 쿼리 함수 와 함께 사용할 술어 .</target>
        </trans-unit>
        <trans-unit id="51b9770eb11beb11e06dbb58f1ae277a38245e61" translate="yes" xml:space="preserve">
          <source>Predicates for use with &lt;a href=&quot;core/debugelement&quot;&gt;&lt;code&gt;DebugElement&lt;/code&gt;&lt;/a&gt;'s query functions.</source>
          <target state="translated">&lt;a href=&quot;core/debugelement&quot;&gt; &lt;code&gt;DebugElement&lt;/code&gt; &lt;/a&gt; 의 쿼리 함수 와 함께 사용할 술어 .</target>
        </trans-unit>
        <trans-unit id="0f5f6af855c155d6a39527f646350ea131a41ef5" translate="yes" xml:space="preserve">
          <source>Predictability</source>
          <target state="translated">Predictability</target>
        </trans-unit>
        <trans-unit id="6e3db619f4a80838687fe01789222032b8d6100a" translate="yes" xml:space="preserve">
          <source>Prefer spies as they are usually the easiest way to mock services.</source>
          <target state="translated">스파이는 일반적으로 서비스를 조롱하는 가장 쉬운 방법이므로 스파이를 선호합니다.</target>
        </trans-unit>
        <trans-unit id="6733962201f798f0db7d044124ca4a429500f7ca" translate="yes" xml:space="preserve">
          <source>Prefer the asterisk (*) syntax.</source>
          <target state="translated">별표 (*) 구문을 선호하십시오.</target>
        </trans-unit>
        <trans-unit id="42bcf74484be0c909148ef3e9fcd55cd2fd3d70d" translate="yes" xml:space="preserve">
          <source>Prefix to add when computing the name of the factory module for a given module name.</source>
          <target state="translated">지정된 모듈 이름의 팩토리 모듈 이름을 계산할 때 추가 할 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="067fba24288444a687cd633599a47db827992c93" translate="yes" xml:space="preserve">
          <source>PreloadAllModules</source>
          <target state="translated">PreloadAllModules</target>
        </trans-unit>
        <trans-unit id="f2684504bc0f6384c84c477f8be4a0311c5832d7" translate="yes" xml:space="preserve">
          <source>Preloading</source>
          <target state="translated">Preloading</target>
        </trans-unit>
        <trans-unit id="8c8aba0ee60d123f0f0b6ecde44af67411faa80c" translate="yes" xml:space="preserve">
          <source>Preloading allows you to load modules in the background so that the data is ready to render when the user activates a particular route. Consider the Crisis Center. It isn't the first view that a user sees. By default, the Heroes are the first view. For the smallest initial payload and fastest launch time, you should eagerly load the &lt;code&gt;AppModule&lt;/code&gt; and the &lt;code&gt;HeroesModule&lt;/code&gt;.</source>
          <target state="translated">미리로드를 사용하면 사용자가 특정 경로를 활성화 할 때 데이터를 렌더링 할 준비가되도록 백그라운드에서 모듈을로드 할 수 있습니다. 위기 센터를 고려하십시오. 사용자가 보는 첫 번째보기가 아닙니다. 기본적으로 영웅이 첫 번째보기입니다. 가장 작은 초기 페이로드와 가장 빠른 시작 시간을 위해 &lt;code&gt;AppModule&lt;/code&gt; 및 &lt;code&gt;HeroesModule&lt;/code&gt; 을 열심히로드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5ee13b2c8c4758ce7e602ac92d4525f8aba7ff04" translate="yes" xml:space="preserve">
          <source>Preloading component data</source>
          <target state="translated">구성 요소 데이터 미리로드</target>
        </trans-unit>
        <trans-unit id="eb4b3c20414ed205b451b8f4464e34572d297856" translate="yes" xml:space="preserve">
          <source>Preloading every lazy loaded module works well in many situations. However, in consideration of things such as low bandwidth and user metrics, you can use a custom preloading strategy for specific feature modules.</source>
          <target state="translated">지연로드 된 모든 모듈을 미리로드하는 것은 여러 상황에서 잘 작동합니다. 그러나 낮은 대역폭 및 사용자 메트릭과 같은 사항을 고려하여 특정 기능 모듈에 대해 사용자 지정 사전로드 전략을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70b0d75388db068d0fbf3c78a8238d3453737e41" translate="yes" xml:space="preserve">
          <source>Preloading every lazy loaded modules works well in many situations, but it isn't always the right choice, especially on mobile devices and over low bandwidth connections. You may choose to preload only certain feature modules, based on user metrics and other business and technical factors.</source>
          <target state="translated">게으른로드 된 모듈을 모두 미리로드하면 많은 상황에서 잘 작동하지만 특히 모바일 장치와 낮은 대역폭 연결에서 항상 올바른 선택은 아닙니다. 사용자 메트릭 및 기타 비즈니스 및 기술 요소를 기반으로 특정 기능 모듈 만 사전로드하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74df0558a508e714ab6638d22f5d320f4ebdf793" translate="yes" xml:space="preserve">
          <source>Preloading improves UX by loading parts of your app in the background. You can preload modules or component data.</source>
          <target state="translated">사전로드는 백그라운드에서 앱의 일부를로드하여 UX를 개선합니다. 모듈 또는 구성 요소 데이터를 미리로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4533db03614721876daa5e374250ca2b584aee1a" translate="yes" xml:space="preserve">
          <source>Preloading modules</source>
          <target state="translated">모듈 미리로드</target>
        </trans-unit>
        <trans-unit id="a93184beec70037cea0a10d2f7e16a1c6d7a3d51" translate="yes" xml:space="preserve">
          <source>Preloading modules improves UX by loading parts of your app in the background so users don't have to wait for the elements to download when they activate a route.</source>
          <target state="translated">모듈을 미리로드하면 앱의 일부를 백그라운드에서로드하여 UX를 개선하므로 사용자가 경로를 활성화 할 때 요소가 다운로드 될 때까지 기다릴 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2387fc03ded4c31718c0ef578b18d0483e829707" translate="yes" xml:space="preserve">
          <source>Preloading of all lazy loaded feature areas.</source>
          <target state="translated">게으른로드 된 모든 피처 영역을 사전로드합니다.</target>
        </trans-unit>
        <trans-unit id="cd65d9f77e29b00400e7a44f95cb0d92219a686a" translate="yes" xml:space="preserve">
          <source>Preloading: background loading of feature areas</source>
          <target state="translated">사전로드 : 기능 영역의 백그라운드로드</target>
        </trans-unit>
        <trans-unit id="d168fd8834b30e1d7b8838cae58a5296aa2e1bdc" translate="yes" xml:space="preserve">
          <source>PreloadingStrategy</source>
          <target state="translated">PreloadingStrategy</target>
        </trans-unit>
        <trans-unit id="a8bc382020aaaa716a496826f97b0c9d436c31a9" translate="yes" xml:space="preserve">
          <source>Preparation</source>
          <target state="translated">Preparation</target>
        </trans-unit>
        <trans-unit id="bbe865d4a79eb2974955efe0166f9b07b63a5f12" translate="yes" xml:space="preserve">
          <source>Prepare templates for translations</source>
          <target state="translated">번역을위한 템플릿 준비</target>
        </trans-unit>
        <trans-unit id="e04cc35909b27a6ac7cade1e37466d6a00dd9496" translate="yes" xml:space="preserve">
          <source>Preparing text in component templates for translation.</source>
          <target state="translated">번역을 위해 컴포넌트 템플릿에서 텍스트 준비.</target>
        </trans-unit>
        <trans-unit id="70dddd2437fc8dd1f3739d4f926746d2bba80f8c" translate="yes" xml:space="preserve">
          <source>Prerequisite: Configure External Web tools</source>
          <target state="translated">전제 조건 : 외부 웹 도구 구성</target>
        </trans-unit>
        <trans-unit id="249d4f1b938b2ffe89ffd88c1806ec40c41ea35b" translate="yes" xml:space="preserve">
          <source>Prerequisite: Install TypeScript for Visual Studio 2015</source>
          <target state="translated">전제 조건 : Visual Studio 2015 용 TypeScript 설치</target>
        </trans-unit>
        <trans-unit id="2a5d7871d8f55fc42e58f9720f864a7546fca7dd" translate="yes" xml:space="preserve">
          <source>Prerequisite: Node.js</source>
          <target state="translated">전제 조건 : Node.js</target>
        </trans-unit>
        <trans-unit id="18356b763e9cc10776248e27eee06a9d47a8e25c" translate="yes" xml:space="preserve">
          <source>Prerequisite: Visual Studio 2015 Update 3</source>
          <target state="translated">전제 조건 : Visual Studio 2015 업데이트 3</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="bc8ec7b72c76ebe8affb839c5ec1acdd75c9c484" translate="yes" xml:space="preserve">
          <source>Preserving navigation history</source>
          <target state="translated">내비게이션 기록 보존</target>
        </trans-unit>
        <trans-unit id="a664240f3a496c80cf7c7945e11febbe499af8fa" translate="yes" xml:space="preserve">
          <source>Preserving whitespace</source>
          <target state="translated">공백 유지</target>
        </trans-unit>
        <trans-unit id="49aabd1ffb70da3ce1ce41784926f360b6672f92" translate="yes" xml:space="preserve">
          <source>Prevent reimport of the &lt;code&gt;GreetingModule&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GreetingModule&lt;/code&gt; 의 다시 가져 오기 방지</target>
        </trans-unit>
        <trans-unit id="5e96ff8a7a9a6e2ece9594270b5512699fedc119" translate="yes" xml:space="preserve">
          <source>Preventing cross-site scripting (XSS)</source>
          <target state="translated">사이트 간 스크립팅 방지 (XSS)</target>
        </trans-unit>
        <trans-unit id="10a44579940dd5204c7501df0249d4ec6510af35" translate="yes" xml:space="preserve">
          <source>Preventing unauthorized access</source>
          <target state="translated">무단 액세스 방지</target>
        </trans-unit>
        <trans-unit id="1de8376e3ea51bf0a509280a292b540b5c6feb3d" translate="yes" xml:space="preserve">
          <source>Preview releases</source>
          <target state="translated">시험판</target>
        </trans-unit>
        <trans-unit id="0b1ba4ab538c84c12fdc06c5d80c072fbde98280" translate="yes" xml:space="preserve">
          <source>Previous code</source>
          <target state="translated">이전 코드</target>
        </trans-unit>
        <trans-unit id="686686ccc1b3cc405bda1243ad4a225064fcc6c7" translate="yes" xml:space="preserve">
          <source>Previous index of the item in &lt;code&gt;Iterable&lt;/code&gt; or null if added.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; 항목의 이전 색인 또는 추가 된 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="5fe29fa6e4ca4b83b765a11d9edd97051ad3fde0" translate="yes" xml:space="preserve">
          <source>Previous value for the key or &lt;code&gt;null&lt;/code&gt; if added.</source>
          <target state="translated">키의 이전 값이거나 추가 된 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ed1f3717287fa4e74e99c45f86b158101fcb8a73" translate="yes" xml:space="preserve">
          <source>Previously, the &lt;code&gt;entryComponents&lt;/code&gt; array in the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; definition was used to tell the compiler which components would be created and inserted dynamically. With Ivy, this isn't a requirement anymore and the &lt;code&gt;entryComponents&lt;/code&gt; array can be removed from existing module declarations. The same applies to the &lt;code&gt;&lt;a href=&quot;../api/core/analyze_for_entry_components&quot;&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/a&gt;&lt;/code&gt; injection token.</source>
          <target state="translated">이전 에는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 정의 의 &lt;code&gt;entryComponents&lt;/code&gt; 배열이 어떤 구성 요소가 동적으로 생성되고 삽입되는지 컴파일러에 알리는 데 사용되었습니다. Ivy에서는 더 이상 요구 사항이 아니며 &lt;code&gt;entryComponents&lt;/code&gt; 배열을 기존 모듈 선언에서 제거 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;../api/core/analyze_for_entry_components&quot;&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/a&gt;&lt;/code&gt; 주입 토큰 에도 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="38b507f09fc4bea4e4450552af2d404c4ddfcd2d" translate="yes" xml:space="preserve">
          <source>Previously, the parent &lt;code&gt;HeroesComponent&lt;/code&gt; set the &lt;code&gt;HeroDetailComponent.hero&lt;/code&gt; property and the &lt;code&gt;HeroDetailComponent&lt;/code&gt; displayed the hero.</source>
          <target state="translated">이전에는 부모 &lt;code&gt;HeroesComponent&lt;/code&gt; 는 설정된 &lt;code&gt;HeroDetailComponent.hero&lt;/code&gt; 의 속성을하고 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 는 영웅을 표시.</target>
        </trans-unit>
        <trans-unit id="54927c3b29c57a1de1bad9235800797c8db4802d" translate="yes" xml:space="preserve">
          <source>Previously, when navigating from the &lt;code&gt;HeroListComponent&lt;/code&gt; to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;, you subscribed to the route parameter map &lt;code&gt;Observable&lt;/code&gt; and made it available to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service. You injected that service in the constructor of the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">으로부터 탐색 할 때 이전 &lt;code&gt;HeroListComponent&lt;/code&gt; 받는 &lt;code&gt;HeroDetailComponent&lt;/code&gt; , 당신은 경로 매개 변수지도에 가입 &lt;code&gt;Observable&lt;/code&gt; 과에 그것을 사용할 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 의 서비스를 제공합니다. &lt;code&gt;HeroDetailComponent&lt;/code&gt; 의 생성자에 해당 서비스를 주입했습니다 .</target>
        </trans-unit>
        <trans-unit id="705295bd37f84d6f4e7bb50594c331369aa909a2" translate="yes" xml:space="preserve">
          <source>Previously, when you wanted to add a component to an app at runtime, you had to define a &lt;em&gt;dynamic component&lt;/em&gt;. The app module would have to list your dynamic component under &lt;code&gt;entryComponents&lt;/code&gt;, so that the app wouldn't expect it to be present at startup, and then you would have to load it, attach it to an element in the DOM, and wire up all of the dependencies, change detection, and event handling, as described in &lt;a href=&quot;dynamic-component-loader&quot;&gt;Dynamic Component Loader&lt;/a&gt;.</source>
          <target state="translated">이전에는 런타임에 앱에 구성 요소를 추가하려고 할 때 &lt;em&gt;동적 구성 요소&lt;/em&gt; 를 정의해야했습니다 . 응용 프로그램 모듈은 &lt;code&gt;entryComponents&lt;/code&gt; 아래에 동적 구성 요소를 나열해야 하므로 응용 프로그램이 시작시 존재하지 않을 것으로 예상 한 다음로드하고 DOM의 요소에 연결하고 모든 항목을 연결해야합니다 의존성 변화 검출 및 이벤트 처리뿐만에 기재된 &lt;a href=&quot;dynamic-component-loader&quot;&gt;동적 요소 로더&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a96ec019494d5b8b041c1d2468061ae66e35d5" translate="yes" xml:space="preserve">
          <source>Primary</source>
          <target state="translated">Primary</target>
        </trans-unit>
        <trans-unit id="7e1d2a68a12c861b36ffdc8817f6e71bb1c656a4" translate="yes" xml:space="preserve">
          <source>Primary entry point exports</source>
          <target state="translated">기본 진입 점 수출</target>
        </trans-unit>
        <trans-unit id="63424cddc8268426b09cae09b791cdebb47ef4bf" translate="yes" xml:space="preserve">
          <source>Primary: &lt;a href=&quot;https://developers.google.com/style/&quot;&gt;Google Developer Documentation Style Guide&lt;/a&gt;This guide: Specifies any special considerations for Angular docs.</source>
          <target state="translated">기본 : &lt;a href=&quot;https://developers.google.com/style/&quot;&gt;Google 개발자 문서 스타일 가이드이 안내서&lt;/a&gt; : 각도 문서에 대한 특별 고려 사항을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b26fe41a6ef090622403b199fdf17129d3f82806" translate="yes" xml:space="preserve">
          <source>Primary: &lt;a href=&quot;styleguide&quot;&gt;Angular Style Guide&lt;/a&gt;.This guide: How to create, store, and include code examples in guides and tutorials.</source>
          <target state="translated">기본 : &lt;a href=&quot;styleguide&quot;&gt;각도 스타일 안내서.&lt;/a&gt; 이 안내서 : 안내서 및 자습서에서 코드 예제를 작성, 저장 및 포함하는 방법.</target>
        </trans-unit>
        <trans-unit id="336665dc97315ab21d91e9eb3f466f9f1f2acb75" translate="yes" xml:space="preserve">
          <source>Primary: This guideThis guide: Specifies guidelines for markup of guides and tutorials, which are written primarily in Markdown.</source>
          <target state="translated">기본 :이 안내서이 안내서 : 주로 Markdown으로 작성된 안내서 및 자습서의 마크 업에 대한 지침을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="237dfa0a21c8e17a7276cf161eef7e0fba067c47" translate="yes" xml:space="preserve">
          <source>Private</source>
          <target state="translated">Private</target>
        </trans-unit>
        <trans-unit id="ccdb05e9287a5643b0f46a8a795873398b701006" translate="yes" xml:space="preserve">
          <source>Private components, directives, and pipes that you need only within components declared in this NgModule. If you don't want another NgModule to see it, don't export it.</source>
          <target state="translated">이 NgModule에 선언 된 구성 요소 내에서만 필요한 개인 구성 요소, 지시문 및 파이프. 다른 NgModule이이를보고 싶지 않다면 내 보내지 마십시오.</target>
        </trans-unit>
        <trans-unit id="4aa7faa011241b58e6d3463522ad478e4a417345" translate="yes" xml:space="preserve">
          <source>Proceed to the first application milestone.</source>
          <target state="translated">첫 번째 응용 프로그램 이정표로 진행하십시오.</target>
        </trans-unit>
        <trans-unit id="c986803a139eeb1814cb1cb9c60f9e6ba08db226" translate="yes" xml:space="preserve">
          <source>Processes a JSONP request and returns an event stream of the results.</source>
          <target state="translated">JSONP 요청을 처리하고 결과의 이벤트 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca1b293ff91a747b9e1c725d22d905891bd9334a" translate="yes" xml:space="preserve">
          <source>Processes a request and returns a stream of response events.</source>
          <target state="translated">요청을 처리하고 응답 이벤트 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b54af06306ac63586c56e2970c71f3615862b1a0" translate="yes" xml:space="preserve">
          <source>Processes an &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the JSONP method, by performing JSONP style requests.</source>
          <target state="translated">JSONP 스타일 요청을 수행하여 JSONP 메소드 로 &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="55d4096b59eb068acdc46953d49c4acf765ebb6a" translate="yes" xml:space="preserve">
          <source>Processes an &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the JSONP method, by performing JSONP style requests.</source>
          <target state="translated">JSONP 스타일 요청을 수행하여 JSONP 메소드 로 &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="4c180d40fb357028ba0ac0fc56f7be7c5d9174d1" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked from elsewhere. Used together with &lt;code&gt;&lt;a href=&quot;../api/animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">다른 곳에서 호출 할 수있는 재사용 가능한 애니메이션을 생성합니다. &lt;code&gt;&lt;a href=&quot;../api/animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 과 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="04be5c86df2b6217e4d14d7d23cb19226f4775b8" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked in another animation or sequence, by calling the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 함수를 호출하여 다른 애니메이션이나 시퀀스에서 호출 할 수있는 재사용 가능한 애니메이션을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="f565e89ffc1021668b87fc6b07e6130b5fb67a8c" translate="yes" xml:space="preserve">
          <source>Produces a reusable animation that can be invoked in another animation or sequence, by calling the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 함수를 호출하여 다른 애니메이션이나 시퀀스에서 호출 할 수있는 재사용 가능한 애니메이션을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="d25405283945c03fa70894ed8ca915f1d20c3cd2" translate="yes" xml:space="preserve">
          <source>Produces only one &lt;code&gt;.metadata.json&lt;/code&gt; file, which contains all the metadata necessary for symbols exported from the library index. In the generated &lt;code&gt;.ngfactory.js&lt;/code&gt; files, the flat module index is used to import symbols that includes both the public API from the library index as well as shrowded internal symbols.</source>
          <target state="translated">라이브러리 인덱스에서 내 보낸 심볼에 필요한 모든 메타 데이터를 포함하는 하나의 &lt;code&gt;.metadata.json&lt;/code&gt; 파일 만 생성합니다. 생성 된 &lt;code&gt;.ngfactory.js&lt;/code&gt; 파일에서 플랫 모듈 인덱스는 라이브러리 인덱스에서 공개 API와 축소 된 내부 기호를 모두 포함하는 기호를 가져 오는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="42c1e993da4701016c19505ac8a40f8ca68e2496" translate="yes" xml:space="preserve">
          <source>Production optimizations</source>
          <target state="translated">생산 최적화</target>
        </trans-unit>
        <trans-unit id="790662d7276fecead0642a68863411158d8bdf71" translate="yes" xml:space="preserve">
          <source>Products are linked from the product list page to individual products</source>
          <target state="translated">제품은 제품 목록 페이지에서 개별 제품으로 연결됩니다</target>
        </trans-unit>
        <trans-unit id="32a2f762dd96239c6776b7d239a10e9340945df1" translate="yes" xml:space="preserve">
          <source>Products are linked from the product list view to individual products.</source>
          <target state="translated">제품은 제품 목록보기에서 개별 제품으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="2a0ae4a78280da384552260861eade2c6574f548" translate="yes" xml:space="preserve">
          <source>Programmatic animations built using the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; service also make use of &lt;code&gt;&lt;a href=&quot;animationoptions&quot;&gt;AnimationOptions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용하여 구축 프로그래밍 애니메이션 &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 의 서비스도 사용할 수 있도록 &lt;code&gt;&lt;a href=&quot;animationoptions&quot;&gt;AnimationOptions&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="62dd459e772b968a8a788978ab7b3d9e6d236052" translate="yes" xml:space="preserve">
          <source>Progress and status reporting</source>
          <target state="translated">진행 상황 및 상태보고</target>
        </trans-unit>
        <trans-unit id="b091ed47915c75bb4f4374dd46c3e4c7702fdf54" translate="yes" xml:space="preserve">
          <source>Progress event type is either upload or download.</source>
          <target state="translated">진행 이벤트 유형은 업로드 또는 다운로드입니다.</target>
        </trans-unit>
        <trans-unit id="35a227fc0f2d5149392f6b32708deaf0d23d5fdf" translate="yes" xml:space="preserve">
          <source>Progress events are expensive (change detection runs on each event) and so they should only be requested if the consumer intends to monitor them.</source>
          <target state="translated">진행 이벤트는 비용이 많이 들고 (각 이벤트마다 변경 감지가 실행 됨) 소비자가이를 모니터링하려는 경우에만 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f5ea6dee40bc1957609cc91d1c8de4b38422dbc" translate="yes" xml:space="preserve">
          <source>Project configuration options</source>
          <target state="translated">프로젝트 구성 옵션</target>
        </trans-unit>
        <trans-unit id="b9801a527c5f2ea94ead96ffb5c51c7f0c4ce2ab" translate="yes" xml:space="preserve">
          <source>Project tool configuration options</source>
          <target state="translated">프로젝트 도구 구성 옵션</target>
        </trans-unit>
        <trans-unit id="74c0f70175cb25524a755932b999ce0195dcc462" translate="yes" xml:space="preserve">
          <source>Project-specific &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration files inherit from the workspace-wide &lt;code&gt;tsconfig.json&lt;/code&gt;, and project-specific &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration files inherit from the workspace-wide &lt;code&gt;tslint.json&lt;/code&gt;.</source>
          <target state="translated">프로젝트 특정 &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; 구성 파일은 작업 영역 전체 &lt;code&gt;tsconfig.json&lt;/code&gt; 에서 상속 되고 프로젝트 특정 &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; 구성 파일은 작업 영역 전체 &lt;code&gt;tslint.json&lt;/code&gt; 에서 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="19fbfba240d8133d7be4736881a0b978769181b7" translate="yes" xml:space="preserve">
          <source>Projecting AngularJS Content into Angular Components</source>
          <target state="translated">AngularJS 컨텐츠를 각도 컴포넌트로 투사</target>
        </trans-unit>
        <trans-unit id="c87ea457b498277e45dfe6b9ea8c191886995da8" translate="yes" xml:space="preserve">
          <source>Projects not using Angular CLI will see a significant size regression unless they update their minifier settings and set compile-time constants &lt;code&gt;ngDevMode&lt;/code&gt;, &lt;code&gt;ngI18nClosureMode&lt;/code&gt; and &lt;code&gt;ngJitMode&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; (for Terser, please set these to &lt;code&gt;false&lt;/code&gt; via &lt;a href=&quot;https://terser.org/docs/api-reference.html#conditional-compilation&quot;&gt;&lt;code&gt;global_defs&lt;/code&gt; config option&lt;/a&gt;). Please note that these constants are not meant to be used by 3rd party library or application code as they are not part of our public api surface and might change in the future.</source>
          <target state="translated">Angular CLI를 사용하지 않는 프로젝트는 minifier 설정을 업데이트하고 컴파일 타임 상수 &lt;code&gt;ngDevMode&lt;/code&gt; , &lt;code&gt;ngI18nClosureMode&lt;/code&gt; 및 &lt;code&gt;ngJitMode&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하지 않는 한 상당한 크기 회귀를 보게 됩니다 (Terser의 경우 &lt;a href=&quot;https://terser.org/docs/api-reference.html#conditional-compilation&quot;&gt; &lt;code&gt;global_defs&lt;/code&gt; &lt;/a&gt; 구성 옵션을 통해 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 ). 이러한 상수는 공개 API 표면의 일부가 아니고 향후 변경 될 수 있으므로 타사 라이브러리 또는 애플리케이션 코드에서 사용하기위한 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="75960a1110ccba8def033cd86e8a10afcbc14cdb" translate="yes" xml:space="preserve">
          <source>Promises are not cancellable.</source>
          <target state="translated">약속은 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fd075a0c7e57b8824112b06a641202fb7b294988" translate="yes" xml:space="preserve">
          <source>Promises do not differentiate between the last &lt;code&gt;.then&lt;/code&gt; clauses (equivalent to subscription) and intermediate &lt;code&gt;.then&lt;/code&gt; clauses (equivalent to map).</source>
          <target state="translated">약속은 마지막 &lt;code&gt;.then&lt;/code&gt; 절 (구독에 ​​해당)과 중간 &lt;code&gt;.then&lt;/code&gt; 절 (맵에 해당)을 구분하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c863d38da402eed1e862ef6202e429af3628e9cf" translate="yes" xml:space="preserve">
          <source>Promises execute immediately, and just once. The computation of the result is initiated when the promise is created. There is no way to restart work. All &lt;code&gt;then&lt;/code&gt; clauses (subscriptions) share the same computation.</source>
          <target state="translated">약속은 즉시 한 번만 실행됩니다. 약속의 생성시 결과 계산이 시작됩니다. 작업을 다시 시작할 수있는 방법이 없습니다. 모든 &lt;code&gt;then&lt;/code&gt; 절 (가입)을 동일한 계산을 공유한다.</target>
        </trans-unit>
        <trans-unit id="1472af86dfdb390fa3ffb01b3adfce53c1fcc332" translate="yes" xml:space="preserve">
          <source>Promises push errors to the child promises.</source>
          <target state="translated">자녀의 약속에 오류를 미룰 것을 약속합니다.</target>
        </trans-unit>
        <trans-unit id="d234326a4b0c46809ea38bd58ac4911bd7981881" translate="yes" xml:space="preserve">
          <source>Prompt Type</source>
          <target state="translated">프롬프트 유형</target>
        </trans-unit>
        <trans-unit id="392aee6a644d305cd374d40592dc974e0a918a9e" translate="yes" xml:space="preserve">
          <source>Prompt long-form syntax</source>
          <target state="translated">신속한 양식 구문</target>
        </trans-unit>
        <trans-unit id="a0269bd29a48abe5475f986f050d08f2eeff4876" translate="yes" xml:space="preserve">
          <source>Prompt short-form syntax</source>
          <target state="translated">신속한 짧은 구문</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="9e90a20c58850b67f856658cc9e4c99b342a100d" translate="yes" xml:space="preserve">
          <source>Properties like &lt;code&gt;host&lt;/code&gt; inside &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; decorators can be inherited (previously, only properties with explicit field decorators like &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; would be inherited).</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt; 데코레이터 내부의 &lt;code&gt;host&lt;/code&gt; 와 같은 속성은 상속 될 수 있습니다 (이전에는 &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt; 과 같은 명시 적 필드 데코레이터가있는 속성 만 상 속됨).</target>
        </trans-unit>
        <trans-unit id="7064440d35d215018bde74bbba3e67cfce94975a" translate="yes" xml:space="preserve">
          <source>Properties of elements in a view can change dynamically, in response to user actions; the structure (number and order) of elements in a view can't. You can change the structure of elements by inserting, moving, or removing nested views within their view containers.</source>
          <target state="translated">뷰의 요소 속성은 사용자 작업에 따라 동적으로 변경 될 수 있습니다. 뷰에서 요소의 구조 (수와 순서)는 할 수 없습니다. 뷰 컨테이너 내에 중첩 된 뷰를 삽입, 이동 또는 제거하여 요소의 구조를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef3749a2f44a01eb5b1fc0310f059eb04a298bb6" translate="yes" xml:space="preserve">
          <source>Properties of elements in a view can change, but the structure (number and order) of elements in a view cannot. Change the structure of elements by inserting, moving, or removing nested views in a view container.</source>
          <target state="translated">뷰의 요소 속성은 변경 될 수 있지만 뷰의 요소 구조 (번호 및 순서)는 변경할 수 없습니다. 뷰 컨테이너에 중첩 된 뷰를 삽입, 이동 또는 제거하여 요소의 구조를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="ac6ec18415c36a76d59830163325e84ed889af49" translate="yes" xml:space="preserve">
          <source>Properties of the &lt;code&gt;&lt;a href=&quot;metadefinition&quot;&gt;MetaDefinition&lt;/a&gt;&lt;/code&gt; object match the attributes of the HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag. These tags define document metadata that is important for things like configuring a Content Security Policy, defining browser compatibility and security settings, setting HTTP Headers, defining rich content for social sharing, and Search Engine Optimization (SEO).</source>
          <target state="translated">의 속성 &lt;code&gt;&lt;a href=&quot;metadefinition&quot;&gt;MetaDefinition&lt;/a&gt;&lt;/code&gt; 의 개체는 HTML의 속성과 일치 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그를. 이러한 태그는 콘텐츠 보안 정책 구성, 브라우저 호환성 및 보안 설정 정의, HTTP 헤더 설정, 소셜 공유를위한 리치 콘텐츠 정의, 검색 엔진 최적화 (SEO)와 같은 작업에 중요한 문서 메타 데이터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="f263dc38915b90a9052d4809c811ec821890851f" translate="yes" xml:space="preserve">
          <source>Properties that are not present take the HammerJS default values. For information about which properties are supported for which events, and their allowed and default values, see &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation&lt;/a&gt;.</source>
          <target state="translated">존재하지 않는 속성은 HammerJS 기본값을 사용합니다. 어떤 이벤트에 대해 어떤 속성이 지원되는지, 허용되는 기본값에 대한 정보는 &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed351121737bec708f3bda86370f451930772ef7" translate="yes" xml:space="preserve">
          <source>Properties whose default values can be overridden for a given event. Different sets of properties apply to different events. For information about which properties are supported for which events, and their allowed and default values, see &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation&lt;/a&gt;.</source>
          <target state="translated">지정된 이벤트에 대해 기본값을 재정의 할 수있는 속성입니다. 다른 속성 집합이 다른 이벤트에 적용됩니다. 어떤 이벤트에 대해 어떤 속성이 지원되는지, 허용되는 기본값에 대한 정보는 &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="c795710dede9c7672e5c93daff8ab98596997b26" translate="yes" xml:space="preserve">
          <source>Property Schema</source>
          <target state="translated">속성 스키마</target>
        </trans-unit>
        <trans-unit id="c250a939425c6fc56d3c5dfb59b1a229e6fe841d" translate="yes" xml:space="preserve">
          <source>Property access</source>
          <target state="translated">재산 접근</target>
        </trans-unit>
        <trans-unit id="a32aec98261097813a762b28180fc560fa718d3e" translate="yes" xml:space="preserve">
          <source>Property binding</source>
          <target state="translated">속성 바인딩</target>
        </trans-unit>
        <trans-unit id="346228906e73d1ee019e8cb4344383d3b2e78030" translate="yes" xml:space="preserve">
          <source>Property binding &lt;code&gt;[ ]&lt;/code&gt;</source>
          <target state="translated">속성 바인딩 &lt;code&gt;[ ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="107d6306f9bdce4c0ee8743d04ec8cf9e6d3d6f1" translate="yes" xml:space="preserve">
          <source>Property binding &lt;code&gt;[property]&lt;/code&gt;</source>
          <target state="translated">속성 바인딩 &lt;code&gt;[property]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c14c6252d9e2dd49704426dd055c14425f53f405" translate="yes" xml:space="preserve">
          <source>Property binding and interpolation</source>
          <target state="translated">속성 바인딩 및 보간</target>
        </trans-unit>
        <trans-unit id="d47d7a21ca12a497c7bbff764aab2b03906aa3a8" translate="yes" xml:space="preserve">
          <source>Property binding and security</source>
          <target state="translated">속성 바인딩 및 보안</target>
        </trans-unit>
        <trans-unit id="0301a4dc6377def270f857da7558dcb8979beae1" translate="yes" xml:space="preserve">
          <source>Property binding best practices</source>
          <target state="translated">속성 바인딩 모범 사례</target>
        </trans-unit>
        <trans-unit id="eed56d79d0275e7c810cb2dd41ce031d616d162f" translate="yes" xml:space="preserve">
          <source>Property binding can help keep content secure. For example, consider the following malicious content.</source>
          <target state="translated">속성 바인딩은 콘텐츠를 안전하게 유지하는 데 도움이 될 수 있습니다. 예를 들어 다음과 같은 악성 콘텐츠를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="d005f2fc0afb36c018f3e878d6e0cd2d41a51288" translate="yes" xml:space="preserve">
          <source>Property binding flows a value in one direction, from a component's property into a target element property.</source>
          <target state="translated">속성 바인딩은 구성 요소의 속성에서 대상 요소 속성으로 한 방향으로 값을 흐릅니다.</target>
        </trans-unit>
        <trans-unit id="8ff06e367cb125be5f2e9b382dd57b629b1c74f7" translate="yes" xml:space="preserve">
          <source>Property binding in Angular helps you set values for properties of HTML elements or directives. With property binding, you can do things such as toggle button functionality, set paths programmatically, and share values between components.</source>
          <target state="translated">Angular의 속성 바인딩은 HTML 요소 또는 지시문의 속성 값을 설정하는 데 도움이됩니다. 속성 바인딩을 사용하면 버튼 기능 전환, 프로그래밍 방식으로 경로 설정, 구성 요소간에 값 공유와 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c37dfec8db2006448ebab82f128b86df58978c0" translate="yes" xml:space="preserve">
          <source>Property binding moves a value in one direction, from a component's property into a target element property.</source>
          <target state="translated">속성 바인딩은 구성 요소의 속성에서 대상 요소 속성으로 값을 한 방향으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="f9667b791a7bcc826c9e552e1706d5a403ead2e7" translate="yes" xml:space="preserve">
          <source>Property binding vs. interpolation</source>
          <target state="translated">속성 바인딩과 보간</target>
        </trans-unit>
        <trans-unit id="0902ed8a581443aca3fb5c8b2932e9ac7cc78ce6" translate="yes" xml:space="preserve">
          <source>Property decorator that configures a view query. The change detector looks for the first element or the directive matching the selector in the view DOM. If the view DOM changes, and a new child matches the selector, the property is updated.</source>
          <target state="translated">뷰 쿼리를 구성하는 속성 데코레이터. 변경 감지기는 뷰 DOM에서 선택기와 일치하는 첫 번째 요소 또는 지시문을 찾습니다. 뷰 DOM이 변경되고 새 자식이 선택자와 일치하면 속성이 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="1ea0aadb2f222603c648dcc5c4806d773bae7566" translate="yes" xml:space="preserve">
          <source>Prototype for a class constructor based on an Angular component that can be used for custom element registration. Implemented and returned by the &lt;a href=&quot;createcustomelement&quot;&gt;createCustomElement() function&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 요소 등록에 사용할 수있는 Angular 구성 요소를 기반으로하는 클래스 생성자의 프로토 타입입니다. &lt;a href=&quot;createcustomelement&quot;&gt;createCustomElement () 함수에&lt;/a&gt; 의해 구현되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="45c734d8a118ca7943160a8da1958d4c97694962" translate="yes" xml:space="preserve">
          <source>Prototype for a class constructor based on an Angular component that can be used for custom element registration. Implemented and returned by the &lt;a href=&quot;elements/createcustomelement&quot;&gt;createCustomElement() function&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 요소 등록에 사용할 수있는 Angular 구성 요소를 기반으로하는 클래스 생성자의 프로토 타입입니다. &lt;a href=&quot;elements/createcustomelement&quot;&gt;createCustomElement () 함수에&lt;/a&gt; 의해 구현되고 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="5bcc05d10bd22bcb6a57ac35cf578bc945f3e4b3" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to a change in an observed attribute.</source>
          <target state="translated">관찰 된 속성의 변경에 응답하는 핸들러의 프로토 타입입니다.</target>
        </trans-unit>
        <trans-unit id="d4242981546e21fdb3b0aa7f0ab3725709e00971" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to the deletion of the custom element from the DOM.</source>
          <target state="translated">DOM에서 사용자 정의 요소 삭제에 응답하는 핸들러의 프로토 타입.</target>
        </trans-unit>
        <trans-unit id="b49d3370133fd5f84996c090070b457117aa588f" translate="yes" xml:space="preserve">
          <source>Prototype for a handler that responds to the insertion of the custom element in the DOM.</source>
          <target state="translated">DOM에서 사용자 정의 요소의 삽입에 응답하는 핸들러의 프로토 타입.</target>
        </trans-unit>
        <trans-unit id="364720ef6a6da0616b055436186192f1428f1e06" translate="yes" xml:space="preserve">
          <source>Provide a &lt;em&gt;spy stub&lt;/em&gt; (&lt;em&gt;HeroDetailServiceSpy&lt;/em&gt;)</source>
          <target state="translated">&lt;em&gt;스파이 스터브&lt;/em&gt; 제공 ( &lt;em&gt;HeroDetailServiceSpy&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="56b5fca9733d4354e4809cb7d8c15b0bda4b5f16" translate="yes" xml:space="preserve">
          <source>Provide a custom async validator directive</source>
          <target state="translated">사용자 정의 비동기 유효성 검사기 지시문 제공</target>
        </trans-unit>
        <trans-unit id="1b032de3dd61fd02081b246c3ef63793dca34072" translate="yes" xml:space="preserve">
          <source>Provide a custom validator</source>
          <target state="translated">맞춤 검사기 제공</target>
        </trans-unit>
        <trans-unit id="df0c1c920f554dc482156bd3d156adf2320a527b" translate="yes" xml:space="preserve">
          <source>Provide a name for the sub-group and it will become the key for the sub-group in the form's full value. If you need direct access, export the directive into a local template variable using &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&lt;/code&gt; (ex: &lt;code&gt;#myGroup=&quot;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">하위 그룹의 이름을 제공하면 양식의 전체 값에서 하위 그룹의 키가됩니다. 직접 액세스해야하는 경우 &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&lt;/code&gt; 을 사용하여 지시문을 로컬 템플리트 변수로 내보내십시오 (예 : &lt;code&gt;#myGroup=&quot;&lt;a href=&quot;ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b0bfac5b60f2cfcdb1e326e2371e802dee9bb7f9" translate="yes" xml:space="preserve">
          <source>Provide service test doubles</source>
          <target state="translated">서비스 테스트 복식 제공</target>
        </trans-unit>
        <trans-unit id="282b3a69f60a0417d266e1f3b3454cd26e7ab9f8" translate="yes" xml:space="preserve">
          <source>Provide services with the &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property of &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="translated">다음과 같이 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 의 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 속성으로 서비스를 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="59b3fbb5e36a4627db38be1518d51d442969ccd0" translate="yes" xml:space="preserve">
          <source>Provide services with the &lt;code&gt;providedIn&lt;/code&gt; property of &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="translated">다음과 같이 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 의 &lt;code&gt;providedIn&lt;/code&gt; 속성으로 서비스를 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a96aec90d191ffcecd423feab632222f110bd83" translate="yes" xml:space="preserve">
          <source>Provide the &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; 제공</target>
        </trans-unit>
        <trans-unit id="eba09a50b5ef8c8573323c50d8562ae64d92b88c" translate="yes" xml:space="preserve">
          <source>Provide the Angular compiler with three translation-specific pieces of information:</source>
          <target state="translated">Angular 컴파일러에 세 가지 번역 관련 정보를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="cdd2227ddb36c454e328ebcf762ca2c448cf687b" translate="yes" xml:space="preserve">
          <source>Provide the interceptor</source>
          <target state="translated">인터셉터 제공</target>
        </trans-unit>
        <trans-unit id="d0c86d6ffca326460b89bd946fad34a8ff2af2d7" translate="yes" xml:space="preserve">
          <source>Provide the router with an appropriate &lt;code&gt;&lt;a href=&quot;../api/common/app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">라우터에 적절한 &lt;code&gt;&lt;a href=&quot;../api/common/app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; 값을 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="99278df1a4d2a1a33d21799411dc49cbf8fdcf3b" translate="yes" xml:space="preserve">
          <source>Provide the router with an appropriate [APP_BASE_HREF][] value.</source>
          <target state="translated">라우터에 적절한 [APP_BASE_HREF] [] 값을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="78c22d5ad96ec6d26862683406067aafe9ec5e5b" translate="yes" xml:space="preserve">
          <source>Provide this token at bootstrap to set the format of your &lt;a href=&quot;core/translations&quot;&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;xtb&lt;/code&gt;, &lt;code&gt;xlf&lt;/code&gt; or &lt;code&gt;xlf2&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;core/translations&quot;&gt; &lt;code&gt;TRANSLATIONS&lt;/code&gt; &lt;/a&gt; 의 형식을 설정하려면 부트 스트랩에이 토큰을 제공하십시오 . &lt;code&gt;xtb&lt;/code&gt; , &lt;code&gt;xlf&lt;/code&gt; 또는 &lt;code&gt;xlf2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6e1db8d3331ddf65a5f5534e13ef7f98172968e" translate="yes" xml:space="preserve">
          <source>Provide this token at bootstrap to set the format of your &lt;a href=&quot;translations&quot;&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;xtb&lt;/code&gt;, &lt;code&gt;xlf&lt;/code&gt; or &lt;code&gt;xlf2&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;translations&quot;&gt; &lt;code&gt;TRANSLATIONS&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;xtb&lt;/code&gt; , 부트 스트랩에이 토큰을 제공하여 &lt;code&gt;xlf&lt;/code&gt; 또는 &lt;code&gt;xlf2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7468cc67031b821d79418d798168b9eabf1a6630" translate="yes" xml:space="preserve">
          <source>Provide this token to control if form directives buffer IME input until the &quot;compositionend&quot; event occurs.</source>
          <target state="translated">&quot;compositionend&quot;이벤트가 발생할 때까지 양식 지시문이 IME 입력을 버퍼링하는지 여부를 제어하려면이 토큰을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="f938316b748fecb1dcd2c9bff009f62d5950cd2b" translate="yes" xml:space="preserve">
          <source>Provide this token to set the default currency code your application uses for CurrencyPipe when there is no currency code passed into it. This is only used by CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.</source>
          <target state="translated">통화 코드가 전달되지 않은 경우 애플리케이션에서 CurrencyPipe에 사용하는 기본 통화 코드를 설정하려면이 토큰을 제공하십시오. 이는 CurrencyPipe에서만 사용되며 로케일 통화와 관련이 없습니다. 구성되지 않은 경우 기본값은 USD입니다.</target>
        </trans-unit>
        <trans-unit id="d9db331ca7175b54bfdbfa34f22999c194ea5071" translate="yes" xml:space="preserve">
          <source>Provide this token to set the locale of your application. It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe, DecimalPipe and PercentPipe) and by ICU expressions.</source>
          <target state="translated">애플리케이션의 로케일을 설정하려면이 토큰을 제공하십시오. i18n 파이프 (DatePipe, I18nPluralPipe, CurrencyPipe, DecimalPipe 및 PercentPipe) 및 ICU 표현식에 의한 i18n 추출에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5b54d983d0d3ed6b5e9f9aeae0e1fc2f2a5a2391" translate="yes" xml:space="preserve">
          <source>Provide visual feedback using special CSS classes that track the state of the controls.</source>
          <target state="translated">컨트롤 상태를 추적하는 특수 CSS 클래스를 사용하여 시각적 피드백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7ceee3f3615a2bbe4ce0ac5a269a311e4821daf4" translate="yes" xml:space="preserve">
          <source>Provider</source>
          <target state="translated">Provider</target>
        </trans-unit>
        <trans-unit id="3dd300f86b0abe3e7bd81d9da97630a87c0ac831" translate="yes" xml:space="preserve">
          <source>Provider for mock platform location config</source>
          <target state="translated">모의 플랫폼 위치 구성 제공 업체</target>
        </trans-unit>
        <trans-unit id="4b5c9e13d407299a81137be96842ae46ff27b552" translate="yes" xml:space="preserve">
          <source>Provider scope</source>
          <target state="translated">공급자 범위</target>
        </trans-unit>
        <trans-unit id="2f79863ed2d8ccad17111669817b34b89c65690a" translate="yes" xml:space="preserve">
          <source>Provider token alternatives: class interface and 'InjectionToken'</source>
          <target state="translated">공급자 토큰 대안 : 클래스 인터페이스 및 'InjectionToken'</target>
        </trans-unit>
        <trans-unit id="87b7c08baed1c8e93db95b79bcdca55b631dd7bb" translate="yes" xml:space="preserve">
          <source>Providers</source>
          <target state="translated">Providers</target>
        </trans-unit>
        <trans-unit id="3b0d079fabe95eb9cc4ce3f476c28f24898ca9ac" translate="yes" xml:space="preserve">
          <source>Providers can also be scoped by injector through constructor parameter decorators. The following example overrides the &lt;code&gt;BROWSER_STORAGE&lt;/code&gt; token in the &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; class &lt;code&gt;providers&lt;/code&gt; with the &lt;code&gt;sessionStorage&lt;/code&gt; browser API. The same &lt;code&gt;BrowserStorageService&lt;/code&gt; is injected twice in the constructor, decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; to define which injector handles the provider dependency.</source>
          <target state="translated">공급자는 생성자 매개 변수 데코레이터를 통해 인젝터로 범위를 지정할 수도 있습니다. 다음 예제 는 &lt;code&gt;sessionStorage&lt;/code&gt; 브라우저 API를 사용하여 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 클래스 &lt;code&gt;providers&lt;/code&gt; 의 &lt;code&gt;BROWSER_STORAGE&lt;/code&gt; 토큰을 대체합니다 . 동일한 &lt;code&gt;BrowserStorageService&lt;/code&gt; 가 생성자에 두 번 주입되며 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt; 로 장식되어 어떤 인젝터가 제공자 종속성을 처리하는지 정의합니다.</target>
        </trans-unit>
        <trans-unit id="61798394a1d98f63a6bf0f092a72f0b0b03b7494" translate="yes" xml:space="preserve">
          <source>Providers formatted as &lt;code&gt;{provide: X}&lt;/code&gt; without a &lt;code&gt;useValue&lt;/code&gt;, &lt;code&gt;useFactory&lt;/code&gt;, &lt;code&gt;useExisting&lt;/code&gt;, or &lt;code&gt;useClass&lt;/code&gt; property are treated like &lt;code&gt;{provide: X, useClass: X}&lt;/code&gt; (previously, it defaulted to &lt;code&gt;{provide: X, useValue: undefined}&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;useValue&lt;/code&gt; , &lt;code&gt;useFactory&lt;/code&gt; , &lt;code&gt;useExisting&lt;/code&gt; 또는 &lt;code&gt;useClass&lt;/code&gt; 속성 없이 &lt;code&gt;{provide: X}&lt;/code&gt; 형식의 공급자 는 &lt;code&gt;{provide: X, useClass: X}&lt;/code&gt; 처럼 처리됩니다 (이전에는 &lt;code&gt;{provide: X, useValue: undefined}&lt;/code&gt; 기본 설정 됨 ).</target>
        </trans-unit>
        <trans-unit id="6b9473cc02003bc3c9e71c517ef33a8522746744" translate="yes" xml:space="preserve">
          <source>Providers listed in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; of a bootstrapped module have application scope. Adding a service provider to &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; effectively publishes the service to the entire application.</source>
          <target state="translated">부트 스트랩 된 모듈 의 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; 에 나열된 공급자 는 응용 프로그램 범위가 있습니다. &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; 서비스 공급자를 추가하면 서비스 가 전체 응용 프로그램에 효과적으로 게시됩니다.</target>
        </trans-unit>
        <trans-unit id="0abb2e3cbd25921f13920a13b7f90b2a78b1807e" translate="yes" xml:space="preserve">
          <source>Providers should be configured using &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; syntax. If possible, they should be provided in the application root (&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt;). Services that are configured this way are lazily loaded if they are only used from a lazily loaded context.</source>
          <target state="translated">공급자는 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 구문을 사용하여 구성해야 합니다. 가능하면 응용 프로그램 루트에 제공해야합니다 ( &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; )에 . 이러한 방식으로 구성된 서비스는 느리게로드 된 컨텍스트에서만 사용되는 경우 느리게로드됩니다.</target>
        </trans-unit>
        <trans-unit id="7adb56df9bfc456f18f49d55ddb02e01f9c2130d" translate="yes" xml:space="preserve">
          <source>Providers should be configured using &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; syntax. If possible, they should be provided in the application root (&lt;code&gt;providedIn: 'root'&lt;/code&gt;). Services that are configured this way are lazily loaded if they are only used from a lazily loaded context.</source>
          <target state="translated">공급자는 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 구문을 사용하여 구성해야 합니다. 가능한 경우 애플리케이션 루트 ( &lt;code&gt;providedIn: 'root'&lt;/code&gt; )에 제공 되어야합니다 . 이러한 방식으로 구성된 서비스는 지연로드 된 컨텍스트에서만 사용되는 경우 지연로드됩니다.</target>
        </trans-unit>
        <trans-unit id="7a7782a1cdf5537b6ab45a90229b534099ab9b51" translate="yes" xml:space="preserve">
          <source>Provides &lt;a href=&quot;npm-packages&quot;&gt;npm packages&lt;/a&gt; to the entire workspace. Workspace-wide &lt;code&gt;node_modules&lt;/code&gt; dependencies are visible to all projects.</source>
          <target state="translated">전체 작업 공간에 &lt;a href=&quot;npm-packages&quot;&gt;npm 패키지&lt;/a&gt; 를 제공합니다 . 작업 공간 전체의 &lt;code&gt;node_modules&lt;/code&gt; 종속성은 모든 프로젝트에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dec98dd94321496de1f50cda2aba357145312ef3" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke after the animation is destroyed.</source>
          <target state="translated">애니메이션이 파괴 된 후 호출 할 콜백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="06472f531d20296a330d531003931c66f789f354" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke before the animation is destroyed.</source>
          <target state="translated">애니메이션이 파괴되기 전에 호출 할 콜백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cb0ddb064076a8f2b3798d4ffc50ea81406f82a8" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke when the animation finishes.</source>
          <target state="translated">애니메이션이 끝나면 호출 할 콜백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4ebb62f995874d193a7e43140c19b5194b764559" translate="yes" xml:space="preserve">
          <source>Provides a callback to invoke when the animation starts.</source>
          <target state="translated">애니메이션이 시작될 때 호출 할 콜백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c2aa0adcb1a04b38b56e0f68cb4a215cb7b21263" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;core/iterablediffer&quot;&gt;&lt;code&gt;IterableDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;core/iterablediffer&quot;&gt; &lt;code&gt;IterableDiffer&lt;/code&gt; 를&lt;/a&gt; 위한 팩토리 제공.</target>
        </trans-unit>
        <trans-unit id="4a4fc46799c84b04ab8e83e799bb8be92d40e11d" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;core/keyvaluediffer&quot;&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;core/keyvaluediffer&quot;&gt; &lt;code&gt;KeyValueDiffer&lt;/code&gt; &lt;/a&gt; 의 팩토리를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="daefdde64d29ae124d1a275a5108bdc322b38c48" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;iterablediffer&quot;&gt;&lt;code&gt;IterableDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;iterablediffer&quot;&gt; &lt;code&gt;IterableDiffer&lt;/code&gt; &lt;/a&gt; 팩토리를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5fa9a3518ecfe1b22563104d95c8551aaf9c2bd7" translate="yes" xml:space="preserve">
          <source>Provides a factory for &lt;a href=&quot;keyvaluediffer&quot;&gt;&lt;code&gt;KeyValueDiffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;keyvaluediffer&quot;&gt; &lt;code&gt;KeyValueDiffer&lt;/code&gt; &lt;/a&gt; 팩토리를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="e2b415e077e3361988c2f857fc3dc967e9bcb745" translate="yes" xml:space="preserve">
          <source>Provides a hook for centralized exception handling.</source>
          <target state="translated">중앙 집중식 예외 처리를위한 후크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9257fc421b719e7e9ea89910b760bb128facd7fa" translate="yes" xml:space="preserve">
          <source>Provides a module to replace or remove when testing the application.</source>
          <target state="translated">응용 프로그램을 테스트 할 때 교체하거나 제거 할 수있는 모듈을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ae1ff873c15a55ade83acb0552102896a99c7a2f" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy that does not preload any modules.</source>
          <target state="translated">모듈을 사전로드하지 않는 사전로드 전략을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a3db596ece1a1c58b1beb16d0c3dc92a7c136abc" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy that preloads all modules as quickly as possible.</source>
          <target state="translated">모든 모듈을 가능한 빨리 사전로드하는 사전로드 전략을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3abd726c53b26c510edb7d119ea042c8c042f3e6" translate="yes" xml:space="preserve">
          <source>Provides a preloading strategy.</source>
          <target state="translated">사전로드 전략을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d6003de65fb37910ad1a52f6b6630c1e94cb1fd3" translate="yes" xml:space="preserve">
          <source>Provides a set of built-in validators that can be used by form controls.</source>
          <target state="translated">양식 컨트롤에서 사용할 수있는 기본 제공 유효성 검사기 집합을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="45c69c00c305a0f684394aef06d5173d76d12e07" translate="yes" xml:space="preserve">
          <source>Provides a switch case expression to match against an enclosing &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; expression. When the expressions match, the given &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; template is rendered. If multiple match expressions match the switch expression value, all of them are displayed.</source>
          <target state="translated">둘러싸는 &lt;code&gt;&lt;a href=&quot;common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 식과 일치하는 스위치 케이스 식을 제공합니다 . 식이 일치하면 지정된 &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 템플릿이 렌더링됩니다. 여러 개의 일치식이 스위치 식 값과 일치하면 모든식이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae483f3e883980573fd75c34e895e749c9373866" translate="yes" xml:space="preserve">
          <source>Provides a switch case expression to match against an enclosing &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; expression. When the expressions match, the given &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; template is rendered. If multiple match expressions match the switch expression value, all of them are displayed.</source>
          <target state="translated">둘러싸는 &lt;code&gt;&lt;a href=&quot;ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 식과 일치하는 스위치 케이스 식을 제공합니다 . 식이 일치하면 지정된 &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 템플릿이 렌더링됩니다. 여러 개의 일치식이 스위치 식 값과 일치하면 모든식이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="88b1a486c61e7b580fdac0431f7516a11581529f" translate="yes" xml:space="preserve">
          <source>Provides a way to customize when activated routes get reused.</source>
          <target state="translated">활성화 된 경로가 재사용되는시기를 사용자 정의하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d62a1c7ef9d3bbcad1a36c5bdad9477fd5656228" translate="yes" xml:space="preserve">
          <source>Provides a way to migrate AngularJS applications to Angular.</source>
          <target state="translated">AngularJS 애플리케이션을 Angular로 마이그레이션하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="12dac37e322fe7a9dc40c678f9aaf99f6bce745a" translate="yes" xml:space="preserve">
          <source>Provides a well-known location for routing service providers including guards and resolvers.</source>
          <target state="translated">가드 및 리졸버를 포함한 라우팅 서비스 제공 업체에게 잘 알려진 위치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7795bd5c8e0a00955dc00c44c01be3036256a259" translate="yes" xml:space="preserve">
          <source>Provides a well-known location for routing service providers such as guards and resolvers.</source>
          <target state="translated">가드 및 리졸버와 같은 라우팅 서비스 공급자에게 잘 알려진 위치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8a0b1afb53b64fcdaef8af76086b6d95e29f87a8" translate="yes" xml:space="preserve">
          <source>Provides access to information about a route associated with a component that is loaded in an outlet. Use to traverse the &lt;code&gt;&lt;a href=&quot;router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; tree and extract information from nodes.</source>
          <target state="translated">콘센트에로드 된 구성 요소와 연관된 경로에 대한 정보에 대한 액세스를 제공합니다. &lt;code&gt;&lt;a href=&quot;router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; 트리 를 통과하고 노드에서 정보를 추출 하는 데 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e54f33cad6368b991f49961d69ade9a14c72730e" translate="yes" xml:space="preserve">
          <source>Provides access to information about a route associated with a component that is loaded in an outlet. Use to traverse the &lt;code&gt;&lt;a href=&quot;routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; tree and extract information from nodes.</source>
          <target state="translated">콘센트에로드 된 구성 요소와 연관된 경로에 대한 정보에 대한 액세스를 제공합니다. &lt;code&gt;&lt;a href=&quot;routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; 트리 를 통과하고 노드에서 정보를 추출 하는 데 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="893dd0b5ea5c90570a7bd768f6628369ae2522d9" translate="yes" xml:space="preserve">
          <source>Provides encoding and decoding of URL parameter and query-string values.</source>
          <target state="translated">URL 매개 변수 및 쿼리 문자열 값의 인코딩 및 디코딩을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a7d496c1bc393d2158ef9aa5de543241605a6d82" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for cross-platform rendering of animations in a browser.</source>
          <target state="translated">브라우저에서 애니메이션의 교차 플랫폼 렌더링을위한 인프라를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="db03f3571639689817fdb632783bcbaa77fdcd79" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for testing Angular core functionality.</source>
          <target state="translated">Angular 핵심 기능을 테스트하기위한 인프라를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6274f6de37965388a4c3c86253a161f2ed4e8fd2" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for testing of the Animations browser subsystem.</source>
          <target state="translated">애니메이션 브라우저 하위 시스템 테스트를위한 인프라를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2403fd1bc78cbb3c8c7e51cc991406b8f29a87cc" translate="yes" xml:space="preserve">
          <source>Provides infrastructure for the rendering of animations in supported browsers.</source>
          <target state="translated">지원되는 브라우저에서 애니메이션 렌더링을위한 인프라를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="42d55cfc88208fa3c7756e47a6e9d219a4ae5b37" translate="yes" xml:space="preserve">
          <source>Provides interactive prompts for optional configuration, such as adding routing support. All prompts can safely be allowed to default.</source>
          <target state="translated">라우팅 지원 추가와 같은 선택적 구성에 대한 대화식 프롬프트를 제공합니다. 모든 프롬프트는 안전하게 기본값으로 허용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ca69fc3bc5f789656d8ed09a709f1cb74634f5e" translate="yes" xml:space="preserve">
          <source>Provides options for configuring the reactive forms module.</source>
          <target state="translated">반응 양식 모듈을 구성하기위한 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0b8624e0d8f629e6c4af27527c1af12eb72275bf" translate="yes" xml:space="preserve">
          <source>Provides options for configuring the template-driven forms module.</source>
          <target state="translated">템플릿 기반 양식 모듈을 구성하기위한 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f7a021fc04fe85e843383ae9c651e172eb3dfefa" translate="yes" xml:space="preserve">
          <source>Provides polyfill scripts for browser support.</source>
          <target state="translated">브라우저 지원을위한 폴리 필 스크립트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="72fb1814644e83e6dab9bc61869f6e53fd387fb8" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 빌드 된 재사용 가능한 애니메이션 시퀀스를 프로그래밍 방식으로 제어합니다 . &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 메소드는 공장, 반환 &lt;code&gt;create()&lt;/code&gt; 방법 인스턴스화하고이 인터페이스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="03c96285b383fef43295b3135d866170627e2d20" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 빌드 된 재사용 가능한 애니메이션 시퀀스를 프로그래밍 방식으로 제어합니다 . &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 메소드는 공장 반환 &lt;code&gt;create()&lt;/code&gt; 방법 인스턴스화하고이 인터페이스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="58a1a4ed8221a8dc1e2ab66f5b4e98ea645cadfd" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;build()&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;build()&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;build()&lt;/code&gt; 메서드를 사용하여 빌드 된 재사용 가능한 애니메이션 시퀀스의 프로그래밍 방식 제어를 제공합니다 . &lt;code&gt;build()&lt;/code&gt; 메소드는 공장 반환 &lt;code&gt;create()&lt;/code&gt; 방법 인스턴스화하고이 인터페이스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="33651d3f3fb1d160b6d9bd373d5773bfff1dee2f" translate="yes" xml:space="preserve">
          <source>Provides programmatic control of a reusable animation sequence, built using the &lt;code&gt;build()&lt;/code&gt; method of &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;build()&lt;/code&gt; method returns a factory, whose &lt;code&gt;create()&lt;/code&gt; method instantiates and initializes this interface.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;build()&lt;/code&gt; 메서드를 사용하여 빌드 된 재사용 가능한 애니메이션 시퀀스의 프로그래밍 방식 제어를 제공합니다 . &lt;code&gt;build()&lt;/code&gt; 메소드는 공장 반환 &lt;code&gt;create()&lt;/code&gt; 방법 인스턴스화하고이 인터페이스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="9b74de36fac9103e8a23a75cc65a5e55c27abda2" translate="yes" xml:space="preserve">
          <source>Provides services that other application components can use.</source>
          <target state="translated">다른 응용 프로그램 구성 요소가 사용할 수있는 서비스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ee31ee58a96e307c62cc23950dacff6aef2f0cec" translate="yes" xml:space="preserve">
          <source>Provides services that the other application components can use.</source>
          <target state="translated">다른 응용 프로그램 구성 요소가 사용할 수있는 서비스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="747b4cd373537a4f040abd7593ce6e1ba7c59672" translate="yes" xml:space="preserve">
          <source>Provides support for upgrading applications from Angular JS to Angular. The primary entry point is deprecated. Use the secondary entry point, &lt;code&gt;&lt;a href=&quot;upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular JS에서 Angular로 애플리케이션 업그레이드를 지원합니다. 기본 진입 점은 더 이상 사용되지 않습니다. 보조 진입 점 인 &lt;code&gt;&lt;a href=&quot;upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff991c0c03e1035aea145f4b7da55a45e0bee0a1" translate="yes" xml:space="preserve">
          <source>Provides support for upgrading routing applications from Angular JS to Angular.</source>
          <target state="translated">라우팅 애플리케이션을 Angular JS에서 Angular로 업그레이드 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="79aab6da2713355991f786bb57b0146d7ac753ac" translate="yes" xml:space="preserve">
          <source>Provides the control for the given name</source>
          <target state="translated">주어진 이름에 대한 제어를 제공합니다</target>
        </trans-unit>
        <trans-unit id="8202d6a8287bd60319467db36010ab7775997e2b" translate="yes" xml:space="preserve">
          <source>Provides tools for upgrading from the &lt;code&gt;$location&lt;/code&gt; service provided in AngularJS to Angular's &lt;a href=&quot;../../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;unified location service&lt;/a&gt;.</source>
          <target state="translated">AngularJS에서 제공 하는 &lt;code&gt;$location&lt;/code&gt; 서비스에서 Angular의 &lt;a href=&quot;../../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;통합 위치 서비스&lt;/a&gt; 로 업그레이드하기위한 도구를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0f455b7498a61fd7c96b4eb72c4068a49d349c4f" translate="yes" xml:space="preserve">
          <source>Provides tools for upgrading from the &lt;code&gt;$location&lt;/code&gt; service provided in AngularJS to Angular's &lt;a href=&quot;../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;unified location service&lt;/a&gt;.</source>
          <target state="translated">AngularJS에서 제공 하는 &lt;code&gt;$location&lt;/code&gt; 서비스에서 Angular의 &lt;a href=&quot;../guide/upgrade#using-the-unified-angular-location-service&quot;&gt;통합 위치 서비스&lt;/a&gt; 로 업그레이드하기위한 도구를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="81bad13220af84327cd38d58af7f3576f91e518a" translate="yes" xml:space="preserve">
          <source>Provides two-way data-binding, parsing, and validation for form controls.</source>
          <target state="translated">양식 컨트롤에 대한 양방향 데이터 바인딩, 구문 분석 및 유효성 검사를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bb9c5e5e14bf9a68f0892495dd4456680789eb8c" translate="yes" xml:space="preserve">
          <source>Provides version information for all packages installed into &lt;code&gt;node_modules&lt;/code&gt; by the npm client. See &lt;a href=&quot;https://docs.npmjs.com/files/package-lock.json&quot;&gt;npm documentation&lt;/a&gt; for details. If you use the yarn client, this file will be &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/yarn-lock/&quot;&gt;yarn.lock&lt;/a&gt; instead.</source>
          <target state="translated">npm 클라이언트가 &lt;code&gt;node_modules&lt;/code&gt; 에 설치된 모든 패키지의 버전 정보를 제공합니다 . 자세한 내용은 &lt;a href=&quot;https://docs.npmjs.com/files/package-lock.json&quot;&gt;npm 설명서&lt;/a&gt; 를 참조하십시오. yarn 클라이언트를 사용하는 경우이 파일은 &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/yarn-lock/&quot;&gt;yarn.lock이&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="a1f3eba6d80ef73de65802ad20df346f7e1692a5" translate="yes" xml:space="preserve">
          <source>Providing a custom validator</source>
          <target state="translated">사용자 정의 유효성 검사기 제공</target>
        </trans-unit>
        <trans-unit id="0dfaee2f6f116a78b47b69dd046ba40ae17f0ddb" translate="yes" xml:space="preserve">
          <source>Providing a router spy for &lt;em&gt;this component&lt;/em&gt; test suite happens to be as easy as providing a &lt;code&gt;HeroService&lt;/code&gt; spy.</source>
          <target state="translated">&lt;em&gt;이 구성 요소&lt;/em&gt; 테스트 제품군에 라우터 스파이를 제공하는 것은 &lt;code&gt;HeroService&lt;/code&gt; 스파이 를 제공하는 것만 큼 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="87c05b6699d468083412915848d3a58b803e467c" translate="yes" xml:space="preserve">
          <source>Providing a service</source>
          <target state="translated">서비스 제공</target>
        </trans-unit>
        <trans-unit id="f758b5933ac8f87bcf11d903a4818a87ac5ca080" translate="yes" xml:space="preserve">
          <source>Providing a service in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator using its &lt;code&gt;providers&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; property configures an &lt;code&gt;ElementInjector&lt;/code&gt;. For example, the following &lt;code&gt;TestComponent&lt;/code&gt; configures the &lt;code&gt;ElementInjector&lt;/code&gt; by providing the service as follows:</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 속성을 사용하여 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 데코레이터에 서비스를 제공 하면 &lt;code&gt;ElementInjector&lt;/code&gt; 가 구성 됩니다. 예를 들어 다음 &lt;code&gt;TestComponent&lt;/code&gt; 는 다음 과 같이 서비스를 제공하여 &lt;code&gt;ElementInjector&lt;/code&gt; 를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="8667f95c8d6d6032497d1eb5a685a9a0c99f6e2e" translate="yes" xml:space="preserve">
          <source>Providing a service in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator using its &lt;code&gt;providers&lt;/code&gt; or &lt;code&gt;viewProviders&lt;/code&gt; property configures an &lt;code&gt;ElementInjector&lt;/code&gt;. For example, the following &lt;code&gt;TestComponent&lt;/code&gt; configures the &lt;code&gt;ElementInjector&lt;/code&gt; by providing the service as follows:</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; 또는 &lt;code&gt;viewProviders&lt;/code&gt; 속성을 사용하여 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 데코레이터 에서 서비스를 제공 하면 &lt;code&gt;ElementInjector&lt;/code&gt; 가 구성 됩니다. 예를 들어 다음 &lt;code&gt;TestComponent&lt;/code&gt; 는 다음 과 같이 서비스를 제공하여 &lt;code&gt;ElementInjector&lt;/code&gt; 를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="5ab75bb136196a83a81e241eb6436efdf4c60701" translate="yes" xml:space="preserve">
          <source>Providing a singleton service</source>
          <target state="translated">싱글 톤 서비스 제공</target>
        </trans-unit>
        <trans-unit id="98ccf33dba233146a5aed05a35b2ef482e0b5498" translate="yes" xml:space="preserve">
          <source>Providing dependencies in NgModules</source>
          <target state="translated">NgModules에서 종속성 제공</target>
        </trans-unit>
        <trans-unit id="aed0d70e5f6cebd9e9e3c5056f29826b09a02e98" translate="yes" xml:space="preserve">
          <source>Providing dependencies in modules</source>
          <target state="translated">모듈에 의존성 제공</target>
        </trans-unit>
        <trans-unit id="025158ef48c0e24c8476e3fa9acc7bb8431d7b36" translate="yes" xml:space="preserve">
          <source>Providing generation support</source>
          <target state="translated">세대 지원 제공</target>
        </trans-unit>
        <trans-unit id="ee0fd17d9cf45eaceb9ed3050e791d808af9e432" translate="yes" xml:space="preserve">
          <source>Providing installation support</source>
          <target state="translated">설치 지원 제공</target>
        </trans-unit>
        <trans-unit id="056018e2ab4674ddf211b8d8c0859cc45a70ce7d" translate="yes" xml:space="preserve">
          <source>Providing services</source>
          <target state="translated">서비스 제공</target>
        </trans-unit>
        <trans-unit id="cbc9952295f635438967dc9b2ddab45f118fc97b" translate="yes" xml:space="preserve">
          <source>Providing services in &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt; 에서 서비스 제공 ()</target>
        </trans-unit>
        <trans-unit id="a7944c0f736389d481ac564fb987aa5a6c848bbd" translate="yes" xml:space="preserve">
          <source>Providing services in modules vs. components</source>
          <target state="translated">모듈 대 구성 요소에서 서비스 제공</target>
        </trans-unit>
        <trans-unit id="ac51cd4294aa1b2a5aee66d570f83fa58a143d7b" translate="yes" xml:space="preserve">
          <source>Proxy configuration file.</source>
          <target state="translated">프록시 구성 파일.</target>
        </trans-unit>
        <trans-unit id="0e86ed99293715243569378d313cb684f9dc6ca3" translate="yes" xml:space="preserve">
          <source>Proxy log levels are &lt;code&gt;info&lt;/code&gt; (the default), &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;silent&lt;/code&gt;.</source>
          <target state="translated">프록시 로그 수준은 &lt;code&gt;info&lt;/code&gt; (기본값), &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; 및 &lt;code&gt;silent&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b5119e9ea25163bffe862724260bc3d1343041e2" translate="yes" xml:space="preserve">
          <source>Proxy multiple entries</source>
          <target state="translated">여러 항목 프록시</target>
        </trans-unit>
        <trans-unit id="dcdd72cd21d53fec0f196d1c6be8b3f2bd4cd199" translate="yes" xml:space="preserve">
          <source>Proxying to a backend server</source>
          <target state="translated">백엔드 서버에 프록시</target>
        </trans-unit>
        <trans-unit id="00c90af14bd313fa9ced2d1de95fd73ba071b57a" translate="yes" xml:space="preserve">
          <source>Public API surface</source>
          <target state="translated">공개 API 표면</target>
        </trans-unit>
        <trans-unit id="8db0aa8489c076d646ed83d0785591b0a12e847e" translate="yes" xml:space="preserve">
          <source>Public domain</source>
          <target state="translated">공개 도메인</target>
        </trans-unit>
        <trans-unit id="547ca5ba25e06e7a974e12cb26f896e55c3e3ed3" translate="yes" xml:space="preserve">
          <source>Public symbols</source>
          <target state="translated">공개 심볼</target>
        </trans-unit>
        <trans-unit id="a858cdee59dc4153f27cf9b6b21b190625fd9982" translate="yes" xml:space="preserve">
          <source>Publishing your library</source>
          <target state="translated">도서관 출판</target>
        </trans-unit>
        <trans-unit id="179f6f644c523fa27e67fcaba9dbd74e9f678fc3" translate="yes" xml:space="preserve">
          <source>Pure AngularJS applications can be automatically bootstrapped by using an &lt;code&gt;ng-app&lt;/code&gt; directive somewhere on the HTML page. But for hybrid applications, you manually bootstrap via the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;. Therefore, it is a good preliminary step to switch AngularJS applications to use the manual JavaScript &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;&lt;code&gt;angular.bootstrap&lt;/code&gt;&lt;/a&gt; method even before switching them to hybrid mode.</source>
          <target state="translated">HTML 페이지 어딘가에 &lt;code&gt;ng-app&lt;/code&gt; 지시문 을 사용하여 Pure AngularJS 애플리케이션을 자동으로 부트 스트랩 할 수 있습니다 . 그러나 하이브리드 애플리케이션의 경우 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 을 통해 수동으로 부트 스트랩 합니다 . 따라서 AngularJS 애플리케이션 을 하이브리드 JavaScript로 전환하기 전에 수동 JavaScript &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt; &lt;code&gt;angular.bootstrap&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하도록 전환하는 것이 좋은 예비 단계 입니다.</target>
        </trans-unit>
        <trans-unit id="4b7f90fdf2da497092a18a6bc45ba3c4f12e823d" translate="yes" xml:space="preserve">
          <source>Pure and impure pipes</source>
          <target state="translated">순수하고 불결한 파이프</target>
        </trans-unit>
        <trans-unit id="7db9ba7ce2d64da8346dc7bbe64e9299d2d0a950" translate="yes" xml:space="preserve">
          <source>Pure pipes</source>
          <target state="translated">순수한 파이프</target>
        </trans-unit>
        <trans-unit id="e623d5dadd9f4c5fad9b7f3fd0071b4f8bd49058" translate="yes" xml:space="preserve">
          <source>Pure pipes and pure functions</source>
          <target state="translated">순수한 파이프와 순수한 기능</target>
        </trans-unit>
        <trans-unit id="5bbb7f091909bcd9878a3757528b6daf128c91ae" translate="yes" xml:space="preserve">
          <source>Pure service modules that don't have public (exported) declarations. For example, there's no point in re-exporting &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; because it doesn't export anything. Its only purpose is to add http service providers to the application as a whole.</source>
          <target state="translated">공개 (내 보낸) 선언이없는 순수한 서비스 모듈. 예를 들어, 아무것도 내 보내지 않기 때문에 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 을 다시 내보내는 데 아무런 의미가 없습니다. 유일한 목적은 http 서비스 제공자를 애플리케이션에 전체적으로 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="3cc1997089b1b6ce49ba3955b42550ad27889873" translate="yes" xml:space="preserve">
          <source>Purpose and Timing</source>
          <target state="translated">목적과시기</target>
        </trans-unit>
        <trans-unit id="b8fe58ffd0349acdd100420150f69d1281dd76ce" translate="yes" xml:space="preserve">
          <source>Push Notifications</source>
          <target state="translated">푸시 알림</target>
        </trans-unit>
        <trans-unit id="aed30fc09e1412ff8de0e7d508541d501b797336" translate="yes" xml:space="preserve">
          <source>Put cleanup logic in &lt;code&gt;ngOnDestroy()&lt;/code&gt;, the logic that &lt;em&gt;must&lt;/em&gt; run before Angular destroys the directive.</source>
          <target state="translated">정리 로직을 &lt;code&gt;ngOnDestroy()&lt;/code&gt; 에 넣으십시오 . Angular가 지시문을 파괴하기 전에 실행 &lt;em&gt;해야하는&lt;/em&gt; 로직입니다 .</target>
        </trans-unit>
        <trans-unit id="c85ce16343cd1130f92be9d0f687c18880a9136b" translate="yes" xml:space="preserve">
          <source>Put cleanup logic in &lt;code&gt;ngOnDestroy()&lt;/code&gt;, the logic that must run before Angular destroys the directive.</source>
          <target state="translated">Angular가 지시문을 파괴하기 전에 실행 &lt;code&gt;ngOnDestroy()&lt;/code&gt; 로직 인 ngOnDestroy () 에 정리 로직을 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="46bd4b4fa2290cf6e1be2c1510e829c5b12d5567" translate="yes" xml:space="preserve">
          <source>Put commonly used directives, pipes, and components into one NgModule, typically named &lt;code&gt;SharedModule&lt;/code&gt;, and then import just that NgModule wherever you need it in other parts of your app. You can import the shared NgModule in your domain NgModules, including &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;lazy-loaded NgModules&lt;/a&gt;. One example is &lt;code&gt;SharedModule&lt;/code&gt; in the , which provides the &lt;code&gt;AwesomePipe&lt;/code&gt; custom pipe and &lt;code&gt;HighlightDirective&lt;/code&gt; directive.</source>
          <target state="translated">일반적으로 사용되는 지시문, 파이프 및 구성 요소를 하나의 NgModule (일반적으로 &lt;code&gt;SharedModule&lt;/code&gt; )에 넣은 다음 앱의 다른 부분에서 필요할 때마다 해당 NgModule 만 가져옵니다. &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;지연로드 된 NgModules를&lt;/a&gt; 포함하여 도메인 NgModules에서 공유 NgModule을 가져올 수 있습니다 . 한 가지 예는 &lt;code&gt;SharedModule&lt;/code&gt; 사용자 지정 파이프 및 &lt;code&gt;HighlightDirective&lt;/code&gt; 지시문 을 제공하는의 &lt;code&gt;AwesomePipe&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="43ca636f56432ea4588cdf384932df664f341634" translate="yes" xml:space="preserve">
          <source>Put it all together</source>
          <target state="translated">다 합쳐</target>
        </trans-unit>
        <trans-unit id="bdf20110d023249fe8bf093d40499c6a9de89f0c" translate="yes" xml:space="preserve">
          <source>Put presentation logic in the component class</source>
          <target state="translated">컴포넌트 클래스에 프리젠 테이션 로직 넣기</target>
        </trans-unit>
        <trans-unit id="a1d8ad4396194d3bbede4c3d23dddea8c8f3f743" translate="yes" xml:space="preserve">
          <source>Put the child selector, here &lt;code&gt;&amp;lt;app-item-output&amp;gt;&lt;/code&gt;, within the parent component's template, &lt;code&gt;app.component.html&lt;/code&gt;.</source>
          <target state="translated">상위 구성 요소의 템플릿 인 &lt;code&gt;app.component.html&lt;/code&gt; 내에 하위 선택기 (여기 &lt;code&gt;&amp;lt;app-item-output&amp;gt;&lt;/code&gt; )를 배치 합니다.</target>
        </trans-unit>
        <trans-unit id="cb692eba951411fb5b87b156073a51072c4fa245" translate="yes" xml:space="preserve">
          <source>Put the copy in the &lt;code&gt;&lt;a href=&quot;../api/common/nglocalelocalization#locale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; folder.</source>
          <target state="translated">사본을 &lt;code&gt;&lt;a href=&quot;../api/common/nglocalelocalization#locale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; 폴더 에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="8defa1c462b46d04def670514bdc24ba1bf715b7" translate="yes" xml:space="preserve">
          <source>Put the copy in the &lt;code&gt;src/locale&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;src/locale&lt;/code&gt; 폴더에 사본을 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="436bf10648b085e2f03a5e5fa355472836a058a3" translate="yes" xml:space="preserve">
          <source>Putting code into a separate library is more complex than simply putting everything in one app. It requires more of an investment in time and thought for managing, maintaining, and updating the library. This complexity can pay off, however, when the library is being used in multiple apps.</source>
          <target state="translated">코드를 별도의 라이브러리에 넣는 것은 모든 것을 하나의 앱에 넣는 것보다 더 복잡합니다. 라이브러리 관리, 유지 관리 및 업데이트에 더 많은 시간과 투자가 필요합니다. 그러나 이러한 복잡성으로 인해 라이브러리가 여러 앱에서 사용되는 경우 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ea0e0f92d43844529e33c1fcffa71baa789c203" translate="yes" xml:space="preserve">
          <source>Q (10.0), Pie (9.0), Oreo (8.0), Nougat (7.0)</source>
          <target state="translated">Q (10.0), 파이 (9.0), 오레오 (8.0), 누가 (7.0)</target>
        </trans-unit>
        <trans-unit id="c02912d8e6dcddbd779e1544c6f3f00babfa879a" translate="yes" xml:space="preserve">
          <source>Qualify dependency lookup with parameter decorators</source>
          <target state="translated">매개 변수 데코레이터를 사용하여 종속성 조회</target>
        </trans-unit>
        <trans-unit id="0bcad30e2e6ce03edaa562efea9e18b7ae5fc553" translate="yes" xml:space="preserve">
          <source>Queries the view that is removed and animates it to slide far to the right.</source>
          <target state="translated">제거 된 뷰를 쿼리하고 오른쪽으로 멀리 이동하도록 애니메이션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="a029560d8411f6bf73354ff2a95633b1dd3c69d4" translate="yes" xml:space="preserve">
          <source>Query for the &lt;em&gt;&amp;lt;h1&amp;gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;lt;h1&amp;gt;에&lt;/em&gt; 대한 쿼리&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70267b58fe69795cee30148c1b0ee6cb6009e2a1" translate="yes" xml:space="preserve">
          <source>Query parameters and fragments</source>
          <target state="translated">쿼리 매개 변수 및 조각</target>
        </trans-unit>
        <trans-unit id="d30db6d348f9f247f48063cbfc225e1b4d54409b" translate="yes" xml:space="preserve">
          <source>Query parameters and fragments are also available through the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service. Just like route parameters, the query parameters and fragments are provided as an &lt;code&gt;Observable&lt;/code&gt;. The updated Crisis Admin component feeds the &lt;code&gt;Observable&lt;/code&gt; directly into the template using the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 서비스를 통해 쿼리 매개 변수와 조각을 사용할 수도 있습니다 . 경로 매개 변수와 마찬가지로 쿼리 매개 변수와 조각은 &lt;code&gt;Observable&lt;/code&gt; 로 제공됩니다 . 업데이트 된 Crisis Admin 구성 요소 는 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; 를 사용하여 &lt;code&gt;Observable&lt;/code&gt; 을 템플릿에 직접 공급합니다 .</target>
        </trans-unit>
        <trans-unit id="ae932d00e1b875d5358c78dd469269566befef04" translate="yes" xml:space="preserve">
          <source>Query parameters.</source>
          <target state="translated">쿼리 매개 변수</target>
        </trans-unit>
        <trans-unit id="2aa04d862ecdcb132994e603854d7875a2776e7f" translate="yes" xml:space="preserve">
          <source>Query the view for the form input element, and create a custom &quot;input&quot; event for the test.</source>
          <target state="translated">양식 입력 요소에 대한보기를 조회하고 테스트에 대한 사용자 정의 &quot;입력&quot;이벤트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8de688cad77b3bd9109d93bd32268107b315f772" translate="yes" xml:space="preserve">
          <source>Query the view for the form input element.</source>
          <target state="translated">양식 입력 요소에 대한보기를 조회하십시오.</target>
        </trans-unit>
        <trans-unit id="0147dca38477f3a5a9be1219b22328bb010f7dac" translate="yes" xml:space="preserve">
          <source>QueryList</source>
          <target state="translated">QueryList</target>
        </trans-unit>
        <trans-unit id="96ee8d3424170d88c85a6c53daec4b42daf0cd09" translate="yes" xml:space="preserve">
          <source>QueryParamsHandling</source>
          <target state="translated">QueryParamsHandling</target>
        </trans-unit>
        <trans-unit id="7bcad0f705586dc98a34fe539ac1afb898b0bc0d" translate="yes" xml:space="preserve">
          <source>Querying the build graph</source>
          <target state="translated">빌드 그래프 쿼리</target>
        </trans-unit>
        <trans-unit id="882bc2143837d14088fd99457a6e1e26efc0d00f" translate="yes" xml:space="preserve">
          <source>Querying the view containers</source>
          <target state="translated">뷰 컨테이너 쿼리</target>
        </trans-unit>
        <trans-unit id="946257a5e24d848457988f38e120cf9fa01c8afd" translate="yes" xml:space="preserve">
          <source>Question form components</source>
          <target state="translated">질문 구성 요소</target>
        </trans-unit>
        <trans-unit id="694f84d59b7d66eb86a82e5f97c9c021ddd2cd24" translate="yes" xml:space="preserve">
          <source>Question model</source>
          <target state="translated">질문 모델</target>
        </trans-unit>
        <trans-unit id="cb0a1d833b62839e99a99af93ec9a7e7efeb2edb" translate="yes" xml:space="preserve">
          <source>Questionnaire data</source>
          <target state="translated">설문지 데이터</target>
        </trans-unit>
        <trans-unit id="e7faea1a87db018fb2d7a4c86b27476d8ef729f4" translate="yes" xml:space="preserve">
          <source>Quick execution</source>
          <target state="translated">빠른 실행</target>
        </trans-unit>
        <trans-unit id="15385e5c37b34e622261935118dfc8bfe9961b8e" translate="yes" xml:space="preserve">
          <source>Quick info</source>
          <target state="translated">빠른 정보</target>
        </trans-unit>
        <trans-unit id="1a11f2e9058cd0fcbd7823fe881477a77b51a320" translate="yes" xml:space="preserve">
          <source>Quick info and navigation</source>
          <target state="translated">빠른 정보 및 탐색</target>
        </trans-unit>
        <trans-unit id="ece3e0ab30befddafad9fd9bbd3da9599a27c6f8" translate="yes" xml:space="preserve">
          <source>RESOURCE_CACHE_PROVIDER</source>
          <target state="translated">RESOURCE_CACHE_PROVIDER</target>
        </trans-unit>
        <trans-unit id="0fcae65af39014acc15fa243db9ff97c579e8854" translate="yes" xml:space="preserve">
          <source>ROUTER_CONFIGURATION</source>
          <target state="translated">ROUTER_CONFIGURATION</target>
        </trans-unit>
        <trans-unit id="fda6334ec46c7993b0298bdf16a0bca518c9ef7f" translate="yes" xml:space="preserve">
          <source>ROUTER_INITIALIZER</source>
          <target state="translated">ROUTER_INITIALIZER</target>
        </trans-unit>
        <trans-unit id="cc0ad686900ce387999ab3c4438af03da7b81568" translate="yes" xml:space="preserve">
          <source>ROUTES</source>
          <target state="translated">ROUTES</target>
        </trans-unit>
        <trans-unit id="ccfcde6b9b11aa68850125350c8fb34f36d4d469" translate="yes" xml:space="preserve">
          <source>Radio buttons: &lt;code&gt;&lt;a href=&quot;radiocontrolvalueaccessor&quot;&gt;RadioControlValueAccessor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">라디오 버튼 : &lt;code&gt;&lt;a href=&quot;radiocontrolvalueaccessor&quot;&gt;RadioControlValueAccessor&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f7ef0603278b505cc6d2d71d35baa4aa1750211" translate="yes" xml:space="preserve">
          <source>RadioControlValueAccessor</source>
          <target state="translated">RadioControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="607b60904ab3566b835bab04aee31a66c903d40b" translate="yes" xml:space="preserve">
          <source>Range of week days that are considered the week-end for the given locale.</source>
          <target state="translated">지정된 로케일의 주말로 간주되는 요일 범위입니다.</target>
        </trans-unit>
        <trans-unit id="41dd49fa1c2918acfc0cc635f95bc4acfda156a1" translate="yes" xml:space="preserve">
          <source>RangeValueAccessor</source>
          <target state="translated">RangeValueAccessor</target>
        </trans-unit>
        <trans-unit id="cce370d2f9781af0f85d591ccdfad1fe365a619f" translate="yes" xml:space="preserve">
          <source>Rare</source>
          <target state="translated">Rare</target>
        </trans-unit>
        <trans-unit id="b7d39a8840296fb99e898a3f6f1c2bb04903cd55" translate="yes" xml:space="preserve">
          <source>Rather than defining all member classes in one giant file as a JavaScript module, declare which components, directives, and pipes belong to the NgModule in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; list. These classes are called &lt;a href=&quot;glossary#declarable&quot;&gt;declarables&lt;/a&gt;. An NgModule can export only the declarable classes it owns or imports from other NgModules. It doesn't declare or export any other kind of class. Declarables are the only classes that matter to the Angular compilation process.</source>
          <target state="translated">하나의 거대한 파일에있는 모든 멤버 클래스를 JavaScript 모듈로 정의하는 대신 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; 목록 에서 NgModule에 속하는 구성 요소, 지시문 및 파이프를 선언 합니다. 이러한 클래스를 &lt;a href=&quot;glossary#declarable&quot;&gt;선언 가능&lt;/a&gt; 이라고 합니다. NgModule은 자신이 소유하거나 다른 NgModules에서 가져온 선언 가능한 클래스 만 내보낼 수 있습니다. 다른 종류의 클래스를 선언하거나 내 보내지 않습니다. Declarable은 Angular 컴파일 프로세스에 중요한 유일한 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d3973b784fd7bd34452ca4b77c04f0f047b51674" translate="yes" xml:space="preserve">
          <source>Rather than forward every &lt;code&gt;searchText&lt;/code&gt; value directly to the injected &lt;code&gt;PackageSearchService&lt;/code&gt;, the code in &lt;code&gt;ngOnInit()&lt;/code&gt; pipes search values through three operators, so that a search value reaches the service only if it's a new value and the user has stopped typing.</source>
          <target state="translated">모든 &lt;code&gt;searchText&lt;/code&gt; 값을 삽입 된 &lt;code&gt;PackageSearchService&lt;/code&gt; 로 직접 전달하는 대신 &lt;code&gt;ngOnInit()&lt;/code&gt; 의 코드는 세 개의 연산자를 통해 검색 값을 파이프하여 검색 값이 새 값이고 사용자가 입력을 중지 한 경우에만 서비스에 도달하도록합니다.</target>
        </trans-unit>
        <trans-unit id="063b47d2f2ef26fe86f625d01121697f58c8f286" translate="yes" xml:space="preserve">
          <source>Rather than forward every &lt;code&gt;searchText&lt;/code&gt; value directly to the injected &lt;code&gt;PackageSearchService&lt;/code&gt;, the code in &lt;code&gt;ngOnInit()&lt;/code&gt;&lt;em&gt;pipes&lt;/em&gt; search values through three operators:</source>
          <target state="translated">모든 &lt;code&gt;searchText&lt;/code&gt; 값을 주입 된 &lt;code&gt;PackageSearchService&lt;/code&gt; 에 직접 전달하는 대신 &lt;code&gt;ngOnInit()&lt;/code&gt; 의 코드는 세 개의 연산자를 통해 검색 값을 &lt;em&gt;파이프&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f1e9f7a30260ef4ffa7fdd21d24c26259975cb6d" translate="yes" xml:space="preserve">
          <source>Rather than using this pattern, separate the two decorators into their own properties and add fallback logic as in the following example:</source>
          <target state="translated">이 패턴을 사용하는 대신 두 데코레이터를 자체 속성으로 분리하고 다음 예제와 같이 폴백 논리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d07b230efe466a43119cf25f549da16039351ce0" translate="yes" xml:space="preserve">
          <source>Rather than wonder when the test fixture will or won't perform change detection, the samples in this guide &lt;em&gt;always call&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt;&lt;em&gt;explicitly&lt;/em&gt;. There is no harm in calling &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; more often than is strictly necessary.</source>
          <target state="translated">테스트 픽스처가 언제 변경 감지를 수행할지 또는 수행하지 &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; 안내서의 샘플은 &lt;em&gt;항상 &lt;/em&gt;detectChanges ()를&lt;em&gt; 명시 적으로 &lt;/em&gt;&lt;em&gt;호출&lt;/em&gt; 합니다. &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; 더 자주 호출 하는 것보다 더 자주 호출 하면 아무런 해가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="620128724ca4325e7673cd82b80b070bd354603b" translate="yes" xml:space="preserve">
          <source>Rather than wonder when the test fixture will or won't perform change detection, the samples in this guide &lt;em&gt;always call&lt;/em&gt;&lt;code&gt;detectChanges()&lt;/code&gt;&lt;em&gt;explicitly&lt;/em&gt;. There is no harm in calling &lt;code&gt;detectChanges()&lt;/code&gt; more often than is strictly necessary.</source>
          <target state="translated">테스트 픽스처가 언제 변경 감지를 수행할지 여부를 궁금해하지 &lt;code&gt;detectChanges()&lt;/code&gt; 가이드의 샘플은 &lt;em&gt;항상 &lt;/em&gt;detectChanges ()를 &lt;em&gt;명시 적으로 &lt;/em&gt;&lt;em&gt;호출&lt;/em&gt; 합니다. 꼭 필요한 것보다 더 자주 &lt;code&gt;detectChanges()&lt;/code&gt; 를 호출 해도 아무런 해가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="cd97c538d031aa909359fb8f635a57f7cada53ff" translate="yes" xml:space="preserve">
          <source>Re-attaches the previously detached view to the change detection tree. Views are attached to the tree by default.</source>
          <target state="translated">이전에 분리 된보기를 변경 감지 트리에 다시 첨부합니다. 뷰는 기본적으로 트리에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="625bb98abae6906871d213e7c9b8c2b1fe2f099d" translate="yes" xml:space="preserve">
          <source>Re-export the Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; by adding it to the module &lt;code&gt;exports&lt;/code&gt; array. By re-exporting the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; here the components declared in &lt;code&gt;AppModule&lt;/code&gt; will have access to router directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 모듈 &lt;code&gt;exports&lt;/code&gt; 배열 에 추가하여 다시 내 보냅니다 . 여기서 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 다시 내 보내면 &lt;code&gt;AppModule&lt;/code&gt; 에 선언 된 컴포넌트는 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 과 같은 라우터 지시문에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="606d67fe5a2b06e1962be051489256995cc17de6" translate="yes" xml:space="preserve">
          <source>Re-export the Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; by adding it to the module &lt;code&gt;exports&lt;/code&gt; array. By re-exporting the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; here, the components declared in &lt;code&gt;AppModule&lt;/code&gt; have access to router directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 모듈 &lt;code&gt;exports&lt;/code&gt; 배열 에 추가하여 다시 내 보냅니다 . 여기서 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 다시 내 보내면 &lt;code&gt;AppModule&lt;/code&gt; 에 선언 된 구성 요소가 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 과 같은 라우터 지시문에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="32c35abee2316ac8365352584a205ea47ed77e67" translate="yes" xml:space="preserve">
          <source>Re-exported by &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="translated">CLI &lt;code&gt;new&lt;/code&gt; 명령 으로 새 앱을 만들 때 루트 &lt;code&gt;AppModule&lt;/code&gt; 에 자동으로 포함 되는 &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 으로 다시 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="4f791cc02c308ccab5a14fb29d64870ba1ad4f2b" translate="yes" xml:space="preserve">
          <source>Re-label the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; 레이블 을 &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="6bc11f344f43e2d39d1212e2b21c3d6581a73583" translate="yes" xml:space="preserve">
          <source>Re-open the &lt;code&gt;app.module.ts&lt;/code&gt; file, import and add &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array of the &lt;code&gt;AppModule&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; 파일을 다시 열고 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 을 가져 와서 &lt;code&gt;AppModule&lt;/code&gt; 의 &lt;code&gt;imports&lt;/code&gt; 배열에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cc59a8bbae2371ae1e0fd7beac79afcae776683" translate="yes" xml:space="preserve">
          <source>Reactive</source>
          <target state="translated">Reactive</target>
        </trans-unit>
        <trans-unit id="a1f4b6e98412e63a4fc1e6a6bd07371c114e7c61" translate="yes" xml:space="preserve">
          <source>Reactive Forms</source>
          <target state="translated">반응성 양식</target>
        </trans-unit>
        <trans-unit id="2ff98e0fc7f01b04bad4025de09759599afc991e" translate="yes" xml:space="preserve">
          <source>Reactive Forms Guide</source>
          <target state="translated">반응성 양식 안내서</target>
        </trans-unit>
        <trans-unit id="bb83ca557e89db92e40dccba428cac042f0bc1cd" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms both use a form model to track value changes between Angular forms and form input elements. The examples below show how the form model is defined and created.</source>
          <target state="translated">반응성 및 템플릿 기반 양식은 모두 양식 모델을 사용하여 각도 양식과 양식 입력 요소 간의 값 변경을 추적합니다. 아래 예제는 양식 모델을 정의하고 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="60538300b65a09cb0fd1bbc49e1c6db90986bbe2" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms differ in how they handle data flowing from the user or from programmatic changes. The following diagrams illustrate both kinds of data flow for each type of form, using the favorite-color input field defined above.</source>
          <target state="translated">반응 형 및 템플릿 기반 양식은 사용자 또는 프로그래밍 방식의 변경에서 데이터 흐름을 처리하는 방식이 다릅니다. 다음 다이어그램은 위에 정의 된 즐겨 찾기 색상 입력 필드를 사용하여 각 양식 유형에 대한 두 가지 종류의 데이터 흐름을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="351e224cbb414e5f3de3ba6c1592e1d8bba74c92" translate="yes" xml:space="preserve">
          <source>Reactive and template-driven forms process and manage form data differently. Each offers different advantages.</source>
          <target state="translated">반응 형 및 템플릿 기반 양식은 양식 데이터를 다르게 처리하고 관리합니다. 각각 다른 장점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a9adf5b89b23909fd127c82ffa7dd71bb5d8cc8c" translate="yes" xml:space="preserve">
          <source>Reactive form validation</source>
          <target state="translated">반응성 양식 검증</target>
        </trans-unit>
        <trans-unit id="de0a6db1d9885f2b4eb4070df239c7b7b0639bbe" translate="yes" xml:space="preserve">
          <source>Reactive forms</source>
          <target state="translated">반응성 양식</target>
        </trans-unit>
        <trans-unit id="a0c4037886566475f36761df0b6268abbbf65193" translate="yes" xml:space="preserve">
          <source>Reactive forms API</source>
          <target state="translated">반응성 양식 API</target>
        </trans-unit>
        <trans-unit id="05acd9f9a0ce2ad2657f3e7e94548c309f21a70a" translate="yes" xml:space="preserve">
          <source>Reactive forms API summary</source>
          <target state="translated">반응 형 양식 API 요약</target>
        </trans-unit>
        <trans-unit id="deb563931aa0525b4c0723e0bc8434ba5ee3813f" translate="yes" xml:space="preserve">
          <source>Reactive forms also provide a straightforward path to testing because you are assured that your data is consistent and predictable when requested. Any consumers of the streams have access to manipulate that data safely.</source>
          <target state="translated">또한 반응 형 양식은 요청시 데이터가 일관되고 예측 가능하므로 테스트를위한 간단한 경로를 제공합니다. 스트림의 모든 소비자는 해당 데이터를 안전하게 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3022dcfb95b653f0fde382cf327d3b565be9ec1" translate="yes" xml:space="preserve">
          <source>Reactive forms and template-driven forms process and manage form data differently. Each approach offers different advantages.</source>
          <target state="translated">반응 형 양식과 템플릿 기반 양식은 양식 데이터를 다르게 처리하고 관리합니다. 각 접근 방식은 서로 다른 장점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="029c4feb39108e5bd909fd45cbbfc8f8a3140761" translate="yes" xml:space="preserve">
          <source>Reactive forms are more scalable than template-driven forms. They provide direct access to the underlying form API, and synchronous access to the form data model, making creating large-scale forms easier. Reactive forms require less setup for testing, and testing does not require deep understanding of change detection to properly test form updates and validation.</source>
          <target state="translated">반응 형 양식은 템플릿 기반 양식보다 확장 성이 뛰어납니다. 기본 양식 API에 대한 직접 액세스와 양식 데이터 모델에 대한 동기식 액세스를 제공하여 대규모 양식을 더 쉽게 만들 수 있습니다. 반응 형 양식은 테스트를위한 설정이 덜 필요하며 테스트에서는 양식 업데이트 및 유효성 검사를 올바르게 테스트하기 위해 변경 감지에 대한 깊은 이해가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c31ea3ae7bc965f3b475630c6889b8511cc61ea2" translate="yes" xml:space="preserve">
          <source>Reactive forms belongs to a different &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; called &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;, so in order to access any reactive forms directives, you have to import &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; library.</source>
          <target state="translated">반응성 형태가 다른에 속하는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 라는 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 그래서 순서로 액세스 어떤 반응 양식 지시, 당신은 수입에이 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 로부터 &lt;code&gt;@angular/forms&lt;/code&gt; 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="7b691c9f7b31dff209413e0d8a6f527d04218912" translate="yes" xml:space="preserve">
          <source>Reactive forms differ from &lt;a href=&quot;forms&quot;&gt;template-driven forms&lt;/a&gt; in distinct ways. Reactive forms provide more predictability with synchronous access to the data model, immutability with observable operators, and change tracking through observable streams.</source>
          <target state="translated">반응 형 양식은 &lt;a href=&quot;forms&quot;&gt;템플릿 기반 양식&lt;/a&gt; 과 다른 점에서 다릅니다. 반응 형 양식은 데이터 모델에 대한 동기식 액세스, 관찰 가능한 연산자의 불변성, 관찰 가능한 스트림을 통한 변경 추적을 통해 더 많은 예측 가능성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8e5d5b79a2203308e6c0a813577a4a37628cbc60" translate="yes" xml:space="preserve">
          <source>Reactive forms differ from template-driven forms in distinct ways. Reactive forms provide more predictability with synchronous access to the data model, immutability with observable operators, and change tracking through observable streams. If you prefer direct access to modify data in your template, template-driven forms are less explicit because they rely on directives embedded in the template, along with mutable data to track changes asynchronously. See the &lt;a href=&quot;forms-overview&quot;&gt;Forms Overview&lt;/a&gt; for detailed comparisons between the two paradigms.</source>
          <target state="translated">반응 양식은 템플릿 방식 양식과 다른 점이 다릅니다. 반응성 양식은 데이터 모델에 대한 동기 액세스, 관찰 가능한 연산자의 불변성 및 관찰 가능한 스트림을 통한 변경 추적을 통해 더 예측 가능성을 제공합니다. 템플릿에서 데이터를 수정하기 위해 직접 액세스하는 것을 선호하는 경우 템플릿 기반 양식은 변경 가능한 데이터와 함께 템플릿에 포함 된 지시문을 사용하여 변경 사항을 비동기 적으로 추적하기 때문에 덜 명확합니다. 두 패러다임 간의 자세한 비교 는 &lt;a href=&quot;forms-overview&quot;&gt;양식 개요&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd9ac24d872d63b17556cfae2327e381716155de" translate="yes" xml:space="preserve">
          <source>Reactive forms give you access to the form control state and value at a point in time. You can manipulate the current state and value through the component class or the component template. The following examples display the value of the form control instance and change it.</source>
          <target state="translated">반응성 양식을 사용하면 특정 시점의 양식 제어 상태 및 값에 액세스 할 수 있습니다. 컴포넌트 클래스 또는 컴포넌트 템플리트를 통해 현재 상태 및 값을 조작 할 수 있습니다. 다음 예제는 양식 제어 인스턴스의 값을 표시하고 변경합니다.</target>
        </trans-unit>
        <trans-unit id="ec0d0d2ab1d11c930b6b1582276de9d1cd2bddc2" translate="yes" xml:space="preserve">
          <source>Reactive forms have methods to change a control's value programmatically, which gives you the flexibility to update the value without user interaction. A form control instance provides a &lt;code&gt;setValue()&lt;/code&gt; method that updates the value of the form control and validates the structure of the value provided against the control's structure. For example, when retrieving form data from a backend API or service, use the &lt;code&gt;setValue()&lt;/code&gt; method to update the control to its new value, replacing the old value entirely.</source>
          <target state="translated">반응 형에는 프로그래밍 방식으로 컨트롤의 값을 변경하는 방법이 있으므로 사용자 상호 작용없이 값을 유연하게 업데이트 할 수 있습니다. 폼 컨트롤 인스턴스는 폼 컨트롤 의 값을 업데이트하고 컨트롤의 구조와 비교하여 제공된 값의 구조를 확인 하는 &lt;code&gt;setValue()&lt;/code&gt; 메서드를 제공합니다. 예를 들어, 백엔드 API 또는 서비스에서 양식 데이터를 검색 할 때 &lt;code&gt;setValue()&lt;/code&gt; 메소드를 사용하여 제어를 새 값으로 업데이트하고 이전 값을 완전히 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="a77ac95993e373741c843f4847040ca277f5c8cb" translate="yes" xml:space="preserve">
          <source>Reactive forms have properties that use observables to monitor form control values. The &lt;a href=&quot;../api/forms/formcontrol&quot;&gt;&lt;code&gt;FormControl&lt;/code&gt;&lt;/a&gt; properties &lt;code&gt;valueChanges&lt;/code&gt; and &lt;code&gt;statusChanges&lt;/code&gt; contain observables that raise change events. Subscribing to an observable form-control property is a way of triggering application logic within the component class. For example:</source>
          <target state="translated">반응 양식에는 관찰 가능 항목을 사용하여 양식 컨트롤 값을 모니터링하는 속성이 있습니다. &lt;a href=&quot;../api/forms/formcontrol&quot;&gt; &lt;code&gt;FormControl&lt;/code&gt; 의&lt;/a&gt; 속성 &lt;code&gt;valueChanges&lt;/code&gt; 및 &lt;code&gt;statusChanges&lt;/code&gt; 는 인상 변경 이벤트가 관찰 가능한이 포함되어 있습니다. 관찰 가능한 양식 제어 속성을 구독하면 구성 요소 클래스 내에서 응용 프로그램 논리를 트리거 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3bb4ab92a56dcc4defcfb2ac4515b8029610a941" translate="yes" xml:space="preserve">
          <source>Reactive forms include a set of validator functions for common use cases. These functions receive a control to validate against and return an error object or a null value based on the validation check.</source>
          <target state="translated">반응성 양식에는 일반적인 사용 사례에 대한 일련의 유효성 검사기 기능이 포함됩니다. 이러한 함수는 유효성 검사를 기반으로 오류 개체 또는 null 값을 유효성 검사하고 반환하는 컨트롤을받습니다.</target>
        </trans-unit>
        <trans-unit id="70bc329b179f6dc528033859a05d2340452b2a8c" translate="yes" xml:space="preserve">
          <source>Reactive forms provide a model-driven approach to handling form inputs whose values change over time. This guide shows you how to create and update a basic form control, progress to using multiple controls in a group, validate form values, and create dynamic forms where you can add or remove controls at run time.</source>
          <target state="translated">반응 형 양식은 시간이 지남에 따라 값이 변경되는 양식 입력을 처리하는 모델 기반 접근 방식을 제공합니다. 이 가이드에서는 기본 양식 컨트롤을 만들고 업데이트하고, 그룹에서 여러 컨트롤을 사용하는 방법을 진행하고, 양식 값을 확인하고, 런타임에 컨트롤을 추가하거나 제거 할 수있는 동적 양식을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="fede3ea1d4a841ba50aac317631025ca1d8153a0" translate="yes" xml:space="preserve">
          <source>Reactive forms provide a relatively easy testing strategy because they provide synchronous access to the form and data models, and they can be tested without rendering the UI. In these tests, status and data are queried and manipulated through the control without interacting with the change detection cycle.</source>
          <target state="translated">반응성 양식은 양식 및 데이터 모델에 대한 동기 액세스를 제공하고 UI를 렌더링하지 않고도 테스트 할 수 있기 때문에 비교적 쉬운 테스트 전략을 제공합니다. 이 테스트에서 상태 및 데이터는 변경 감지주기와 상호 작용하지 않고 컨트롤을 통해 쿼리 및 조작됩니다.</target>
        </trans-unit>
        <trans-unit id="0833f4b58beb01933024850a6c07b5bcc20f1017" translate="yes" xml:space="preserve">
          <source>Reactive forms provide access to information about a given control through properties and methods provided with each instance. These properties and methods of the underlying &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; class are used to control form state and determine when to display messages when handling &lt;a href=&quot;reactive-forms#basic-form-validation&quot;&gt;input validation&lt;/a&gt;.</source>
          <target state="translated">반응 형 양식은 각 인스턴스와 함께 제공되는 속성 및 메서드를 통해 지정된 컨트롤에 대한 정보에 대한 액세스를 제공합니다. 기본 &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; 클래스 의 이러한 속성 및 메서드는 양식 상태를 제어하고 &lt;a href=&quot;reactive-forms#basic-form-validation&quot;&gt;입력 유효성 검사를&lt;/a&gt; 처리 할 때 메시지를 표시 할시기를 결정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7d9accf289c84c2991d9c58185296f8743b54f7e" translate="yes" xml:space="preserve">
          <source>Reactive forms provide access to information about a given control through properties and methods provided with each instance. These properties and methods of the underlying &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; class are used to control form state and determine when to display messages when handling validation. For more information, see &lt;a href=&quot;reactive-forms#simple-form-validation&quot;&gt;Simple form validation&lt;/a&gt; later in this guide.</source>
          <target state="translated">반응 양식은 각 인스턴스와 함께 제공되는 속성 및 방법을 통해 지정된 컨트롤에 대한 정보에 대한 액세스를 제공합니다. 기본 &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; 클래스 의 이러한 속성과 메서드는 양식 상태를 제어하고 유효성 검사를 처리 할 때 메시지를 표시 할시기를 결정하는 데 사용됩니다. 자세한 내용 은이 가이드 뒷부분의 &lt;a href=&quot;reactive-forms#simple-form-validation&quot;&gt;간단한 양식 유효성 검사를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5ade9729f091417417cbcf0742f1727ca1c06f4" translate="yes" xml:space="preserve">
          <source>Reactive forms use an explicit and immutable approach to managing the state of a form at a given point in time. Each change to the form state returns a new state, which maintains the integrity of the model between changes. Reactive forms are built around &lt;a href=&quot;glossary#observable&quot;&gt;observable&lt;/a&gt; streams, where form inputs and values are provided as streams of input values, which can be accessed synchronously.</source>
          <target state="translated">반응 형 양식은 지정된 시점에서 양식의 상태를 관리하는 데 명시적이고 변경 불가능한 접근 방식을 사용합니다. 양식 상태가 변경 될 때마다 새 상태가 반환되어 변경 사이에 모델의 무결성이 유지됩니다. 반응 형 양식은 &lt;a href=&quot;glossary#observable&quot;&gt;관찰 가능한&lt;/a&gt; 스트림을 중심으로 구축되며 , 양식 입력 및 값은 동 기적으로 액세스 할 수있는 입력 값의 스트림으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8d0e1d78caa8cd03d25c13b9d6d94bf11d48db6b" translate="yes" xml:space="preserve">
          <source>Reactive forms use an explicit and immutable approach to managing the state of a form at a given point in time. Each change to the form state returns a new state, which maintains the integrity of the model between changes. Reactive forms are built around observable streams, where form inputs and values are provided as streams of input values, which can be accessed synchronously.</source>
          <target state="translated">반응성 양식은 특정 시점에서 양식의 상태를 관리하기 위해 명시적이고 변경 불가능한 접근 방식을 사용합니다. 양식 상태가 변경 될 때마다 새 상태가 반환되어 변경간에 모델의 무결성이 유지됩니다. 반응성 양식은 관찰 가능한 스트림을 중심으로 작성되며 양식 입력 및 값은 입력 값의 스트림으로 제공되며 동기식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4600df76443898c376860cc863f1bb7d7233755" translate="yes" xml:space="preserve">
          <source>Reactive programming is an asynchronous programming paradigm concerned with data streams and the propagation of change (&lt;a href=&quot;https://en.wikipedia.org/wiki/Reactive_programming&quot;&gt;Wikipedia&lt;/a&gt;). RxJS (Reactive Extensions for JavaScript) is a library for reactive programming using observables that makes it easier to compose asynchronous or callback-based code. See (&lt;a href=&quot;https://rxjs.dev/guide/overview&quot;&gt;RxJS Docs&lt;/a&gt;).</source>
          <target state="translated">리 액티브 프로그래밍은 데이터 스트림 및 변경 전파 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Reactive_programming&quot;&gt;위키 백과&lt;/a&gt; ) 와 관련된 비동기 프로그래밍 패러다임 입니다. RxJS (Reactive Extensions for JavaScript)는 관찰 가능 코드를 사용하여 비동기 또는 콜백 기반 코드를보다 쉽게 ​​작성할 수있는 반응 형 프로그래밍 라이브러리입니다. ( &lt;a href=&quot;https://rxjs.dev/guide/overview&quot;&gt;RxJS Docs&lt;/a&gt; )를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8d2e9adf36fc2ad7858e49d434aad124f5487f3" translate="yes" xml:space="preserve">
          <source>ReactiveFormsModule</source>
          <target state="translated">ReactiveFormsModule</target>
        </trans-unit>
        <trans-unit id="b7ca216f61420f5ef14c84bd63594037c4958000" translate="yes" xml:space="preserve">
          <source>Read about &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;inputs-outputs&quot;&gt;&lt;code&gt;@Input()&lt;/code&gt; and &lt;code&gt;@Output()&lt;/code&gt; properties&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;inputs-outputs&quot;&gt; &lt;code&gt;@Input()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;@Output()&lt;/code&gt; 속성 가이드 에서 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 에 대해 읽어 보세요 .</target>
        </trans-unit>
        <trans-unit id="822053f8c36c65b4885e99e35ce51f29f03c2d13" translate="yes" xml:space="preserve">
          <source>Read about &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;&lt;em&gt;Template Syntax&lt;/em&gt;&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;&lt;em&gt;템플리트 구문&lt;/em&gt;&lt;/a&gt; 안내서 에서 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 에 대해 읽으십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f527f4691c39fe3c9a3edc43f600c96b879d15df" translate="yes" xml:space="preserve">
          <source>Read about how to write template expressions in &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;Template expressions&lt;/a&gt;.</source>
          <target state="translated">템플릿 표현식에서 &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;템플릿 표현식&lt;/a&gt; 을 작성하는 방법에 대해 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="a006a573abfcc3b12684c07040ca710150ca4aad" translate="yes" xml:space="preserve">
          <source>Read about how to write template expressions in the &lt;a href=&quot;interpolation#template-expressions&quot;&gt;template expressions&lt;/a&gt; section of the &lt;a href=&quot;interpolation&quot;&gt;Interpolation&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;interpolation&quot;&gt;보간&lt;/a&gt; 가이드 의 &lt;a href=&quot;interpolation#template-expressions&quot;&gt;템플릿 표현식&lt;/a&gt; 섹션 에서 템플릿 표현식을 작성하는 방법을 읽어 보세요.</target>
        </trans-unit>
        <trans-unit id="165301e85c3cb88135251f8429568a9a03474526" translate="yes" xml:space="preserve">
          <source>Read about other &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; properties and methods in the &lt;a href=&quot;../api/forms/formcontrol&quot;&gt;API Reference&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;API 참조&lt;/a&gt; 에서 다른 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 속성 및 메서드에 대해 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="fe8cc3177cd67e98185a060ad1af9e08c5b4e03a" translate="yes" xml:space="preserve">
          <source>Read about other &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; properties and methods in the &lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive forms API&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;반응성 양식 API&lt;/a&gt; 섹션 에서 다른 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 특성 및 메소드에 대해 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="35acddd11ffad194504b88f2399ed4d509e65d62" translate="yes" xml:space="preserve">
          <source>Read about the following forms of binding in &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 에서 다음과 같은 바인딩 형식에 대해 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="b3b409d1029d504031d148ce2b34395c30f72cc7" translate="yes" xml:space="preserve">
          <source>Read about the following forms of binding in Angular's &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;:</source>
          <target state="translated">Angular의 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 에서 다음 형태의 바인딩에 대해 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="cb13a238c7f23330639ed8115408080c8c11236b" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;template-syntax#interpolation&quot;&gt;interpolation&lt;/a&gt; in &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 에서 &lt;a href=&quot;template-syntax#interpolation&quot;&gt;보간&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="6bd71f1bcbaa8fca4926ae2075fe490d0f5f7cd3" translate="yes" xml:space="preserve">
          <source>Read more about component classes, templates, and views in &lt;a href=&quot;architecture&quot;&gt;Introduction to Angular concepts&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;architecture&quot;&gt;Angular 개념 소개&lt;/a&gt; 에서 구성 요소 클래스, 템플릿 및 뷰에 대해 자세히 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="c8afee31af40fd9cb2ab92093ed911e661096107" translate="yes" xml:space="preserve">
          <source>Read more about components, templates, and views in &lt;a href=&quot;architecture&quot;&gt;Architecture Overview&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;architecture&quot;&gt;아키텍처 개요&lt;/a&gt; 에서 구성 요소, 템플릿 및보기에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="405d5fda034a8ddc75ce204c2693de8cabd5992c" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; format options in the &lt;a href=&quot;../api/common/datepipe&quot;&gt;Date Pipe&lt;/a&gt; API Reference page.</source>
          <target state="translated">&lt;a href=&quot;../api/common/datepipe&quot;&gt;Date Pipe&lt;/a&gt; API Reference 페이지 에서 &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; 형식 옵션에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="1704320eeef607c6edb67f23a227c28dc7528ca7" translate="yes" xml:space="preserve">
          <source>Read more about these and many other built-in pipes in the &lt;a href=&quot;api?type=pipe&quot;&gt;pipes topics&lt;/a&gt; of the &lt;a href=&quot;api&quot;&gt;API Reference&lt;/a&gt;; filter for entries that include the word &quot;pipe&quot;.</source>
          <target state="translated">이러한 많은 대해 자세히 알아 다른 내장의 파이프 &lt;a href=&quot;api?type=pipe&quot;&gt;파이프 주제&lt;/a&gt; 의 &lt;a href=&quot;api&quot;&gt;API 참조&lt;/a&gt; ; &quot;pipe&quot;라는 단어가 포함 된 항목을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="2cef1f00f0d5e805663667f46ac1f095d0abe151" translate="yes" xml:space="preserve">
          <source>Read more forms in the &lt;a href=&quot;forms-overview&quot;&gt;Introduction to forms in Angular&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;forms-overview&quot;&gt;Angular 양식 소개 소개&lt;/a&gt; 에서 더 많은 양식을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="3b1d6f02c94117a6bee9f403003d447aab0d1cd9" translate="yes" xml:space="preserve">
          <source>Read more in the &lt;a href=&quot;interpolation&quot;&gt;Interpolation&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;interpolation&quot;&gt;보간&lt;/a&gt; 가이드 에서 자세히 알아보세요 .</target>
        </trans-unit>
        <trans-unit id="47b2dc999995d625d84643a8250e58178c4a0beb" translate="yes" xml:space="preserve">
          <source>Read-Only</source>
          <target state="translated">Read-Only</target>
        </trans-unit>
        <trans-unit id="b2701d2af58867b3c39e3f656bea5466c7230574" translate="yes" xml:space="preserve">
          <source>Read-OnlyDeclared in Constructor</source>
          <target state="translated">생성자에서 읽기 전용으로 선언</target>
        </trans-unit>
        <trans-unit id="a16a19626f162e847eb9c8fe316bad0b1a858d1a" translate="yes" xml:space="preserve">
          <source>Reading the full response</source>
          <target state="translated">전체 답변 읽기</target>
        </trans-unit>
        <trans-unit id="f9ae57c2193b591354e3b83454a5735ee675dde6" translate="yes" xml:space="preserve">
          <source>Reattaching a detached component</source>
          <target state="translated">분리 된 구성 요소 다시 부착</target>
        </trans-unit>
        <trans-unit id="7326d6682f0b14b11603710597d4126f529e2429" translate="yes" xml:space="preserve">
          <source>Rebuild on change.</source>
          <target state="translated">변경시 재구성하십시오.</target>
        </trans-unit>
        <trans-unit id="6313b86dbd9658ecc263ad6aa3a896e115fa9ab8" translate="yes" xml:space="preserve">
          <source>Recalculates the value and validation status of the control.</source>
          <target state="translated">컨트롤의 값과 유효성 검사 상태를 다시 계산합니다.</target>
        </trans-unit>
        <trans-unit id="006e28e26a1884bfeadfaf9ac3e7eec58f19e0d6" translate="yes" xml:space="preserve">
          <source>Recall that Angular always adds a component instance to its own injector; that's why you could inject &lt;em&gt;Alex&lt;/em&gt; into &lt;em&gt;Cathy&lt;/em&gt;&lt;a href=&quot;dependency-injection-navtree#known-parent&quot;&gt;earlier&lt;/a&gt;.</source>
          <target state="translated">Angular는 항상 구성 요소 인스턴스를 자체 인젝터에 추가합니다. 당신이 주입 수있는 이유입니다 &lt;em&gt;알렉스&lt;/em&gt; 로 &lt;em&gt;캐시 &lt;/em&gt;&lt;a href=&quot;dependency-injection-navtree#known-parent&quot;&gt;이전&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f968f17cbf2bd77955438d01bbbf2a03b6e241e5" translate="yes" xml:space="preserve">
          <source>Recall that Angular calls both &lt;em&gt;AfterContent&lt;/em&gt; hooks before calling either of the &lt;em&gt;AfterView&lt;/em&gt; hooks. Angular completes composition of the projected content &lt;em&gt;before&lt;/em&gt; finishing the composition of this component's view. There is a small window between the &lt;code&gt;AfterContent...&lt;/code&gt; and &lt;code&gt;AfterView...&lt;/code&gt; hooks to modify the host view.</source>
          <target state="translated">리콜 각도는 모두 호출하는 &lt;em&gt;afterContent를의&lt;/em&gt; 의 중 하나를 호출하기 전에 후크를 &lt;em&gt;AfterView의&lt;/em&gt; 후크. Angular 는이 컴포넌트보기의 컴포지션을 완료 &lt;em&gt;하기 전에&lt;/em&gt; 투영 된 컨텐츠 의 컴포지션을 완료합니다. &lt;code&gt;AfterContent...&lt;/code&gt; 와 &lt;code&gt;AfterView...&lt;/code&gt; 후크 사이 에는 호스트보기를 수정 하는 작은 창이 있습니다.</target>
        </trans-unit>
        <trans-unit id="149f9cee1708e5e5476d5efc22525ef63bfe8e64" translate="yes" xml:space="preserve">
          <source>Recall that the app hasn't been compiled. So when you call &lt;code&gt;createComponent()&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; compiles implicitly.</source>
          <target state="translated">앱이 컴파일되지 않았 음을 상기하십시오. 따라서 &lt;code&gt;createComponent()&lt;/code&gt; 를 호출 하면 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 가 내재적으로 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="137571674af298a9abc8ef79c09d94f5b73f761e" translate="yes" xml:space="preserve">
          <source>Recall that you specified a default child route for the crisis center so this simple &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; is fine.</source>
          <target state="translated">이 간단한 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 가 적합하도록 위기 센터에 기본 하위 경로를 지정했음을 상기하십시오 .</target>
        </trans-unit>
        <trans-unit id="71e5653b3f2b5e9170fb4fe6fc116051b1509ba3" translate="yes" xml:space="preserve">
          <source>ReceivedMessage</source>
          <target state="translated">ReceivedMessage</target>
        </trans-unit>
        <trans-unit id="595ce83435a7d04760fe605d453dcec356f0677b" translate="yes" xml:space="preserve">
          <source>Receives the current &lt;code&gt;product&lt;/code&gt;</source>
          <target state="translated">현재 &lt;code&gt;product&lt;/code&gt; 받습니다</target>
        </trans-unit>
        <trans-unit id="084913ce7222fc1a19916ad021c3b8d6c51c1f3a" translate="yes" xml:space="preserve">
          <source>Receives the current &lt;code&gt;product&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;product&lt;/code&gt; 받습니다 .</target>
        </trans-unit>
        <trans-unit id="2113a427348bd8709bf309d9827cd761a6cb7589" translate="yes" xml:space="preserve">
          <source>Record representing the item change information.</source>
          <target state="translated">품목 변경 정보를 나타내는 레코드</target>
        </trans-unit>
        <trans-unit id="303c765c62b3638ef845067ec6757d69d7d80e60" translate="yes" xml:space="preserve">
          <source>Redirecting specific URLs to avoid breaking existing links/bookmarks after a website redesign.</source>
          <target state="translated">웹 사이트를 재 설계 한 후 기존 링크 / 책갈피가 깨지지 않도록 특정 URL을 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="9bd42107db374ca79980a0f85d4acae90ced6cda" translate="yes" xml:space="preserve">
          <source>Redirecting to a different website, such as a server-status page, while a page is temporarily down.</source>
          <target state="translated">페이지가 일시적으로 다운되는 동안 서버 상태 페이지와 같은 다른 웹 사이트로 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="6ef76d57a7d77c904805ec295118e5f7f829a997" translate="yes" xml:space="preserve">
          <source>Redirecting to an authentication website when authentication is not handled by the application.</source>
          <target state="translated">응용 프로그램에서 인증을 처리하지 않는 경우 인증 웹 사이트로 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="ade8f51e231965f7ff206e0ce571bd072663eaa1" translate="yes" xml:space="preserve">
          <source>Reduce framework overhead by removing legacy &lt;a href=&quot;ivy&quot;&gt;View Engine&lt;/a&gt;</source>
          <target state="translated">레거시 &lt;a href=&quot;ivy&quot;&gt;View Engine&lt;/a&gt; 을 제거하여 프레임 워크 오버 헤드 감소</target>
        </trans-unit>
        <trans-unit id="06be91a8ee231e7c4925242abd4496240ce810bd" translate="yes" xml:space="preserve">
          <source>Reduce the setup</source>
          <target state="translated">설정을 줄입니다</target>
        </trans-unit>
        <trans-unit id="9f89ff05c95fc96d934805c0903d936688529f19" translate="yes" xml:space="preserve">
          <source>Refactor the component's &lt;code&gt;hero&lt;/code&gt; property to be of type &lt;code&gt;Hero&lt;/code&gt;. Initialize it with an &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; and the name &lt;code&gt;Windstorm&lt;/code&gt;.</source>
          <target state="translated">컴포넌트의 &lt;code&gt;hero&lt;/code&gt; 속성을 &lt;code&gt;Hero&lt;/code&gt; 유형으로 리팩토링하십시오 . &lt;code&gt;id&lt;/code&gt; 가 &lt;code&gt;1&lt;/code&gt; 이고 &lt;code&gt;Windstorm&lt;/code&gt; 이라는 이름으로 초기화하십시오 .</target>
        </trans-unit>
        <trans-unit id="39fd18399486a759e805869a3b5a5bb49c3d4a4c" translate="yes" xml:space="preserve">
          <source>Refactor the details area in the &lt;code&gt;HeroesComponent&lt;/code&gt; template so it looks like this:</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 템플릿 의 세부 정보 영역을 다음과 같이 리팩터링하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ce16abef8ba24a70146da7aa12dbdc7dec2b37e" translate="yes" xml:space="preserve">
          <source>Refactor the routing configuration into a &lt;code&gt;routing module&lt;/code&gt;</source>
          <target state="translated">라우팅 구성을 &lt;code&gt;routing module&lt;/code&gt; 로 리팩터링</target>
        </trans-unit>
        <trans-unit id="e0f6271eae15dc4d82887c9317fb37d151bb1a4e" translate="yes" xml:space="preserve">
          <source>Refactor the routing configuration into a routing module</source>
          <target state="translated">라우팅 구성을 라우팅 모듈로 리팩터링</target>
        </trans-unit>
        <trans-unit id="398443e8de1f60bf6225f1777eac84dc7ec81f94" translate="yes" xml:space="preserve">
          <source>Refactoring parts of an app into a library</source>
          <target state="translated">앱의 일부를 라이브러리로 리팩토링</target>
        </trans-unit>
        <trans-unit id="1e0736e496b7db32af8d26f9241fc2724968f6fc" translate="yes" xml:space="preserve">
          <source>Refactoring the original &lt;code&gt;HeroesComponent&lt;/code&gt; into two components yields benefits, both now and in the future:</source>
          <target state="translated">원래의 &lt;code&gt;HeroesComponent&lt;/code&gt; 를 두 가지 구성 요소로 리팩토링하면 현재와 ​​미래에 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d6b1287bff95d658e61103253b010027cff87d8" translate="yes" xml:space="preserve">
          <source>Refer to a locale using the Unicode &lt;em&gt;locale identifier&lt;/em&gt; (ID), which specifies the language, country, and an optional code for further variants or subdivisions.</source>
          <target state="translated">언어, 국가 및 추가 변형 또는 하위 부문에 대한 선택적 코드를 지정 하는 유니 코드 &lt;em&gt;로캘 식별자&lt;/em&gt; (ID)를 사용하여 로캘을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="120da17248d713c03edf0e9a720d209be87527a1" translate="yes" xml:space="preserve">
          <source>Refer to locales by ID</source>
          <target state="translated">ID로 로케일 참조</target>
        </trans-unit>
        <trans-unit id="a0e89c66f9afa5d101261659d08f8cb88dbf4467" translate="yes" xml:space="preserve">
          <source>Refer to that variable in a button many lines away.</source>
          <target state="translated">몇 줄 떨어진 버튼에서 해당 변수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b22c7cb05ff594d901a7a846f32fadcfb9c7cf61" translate="yes" xml:space="preserve">
          <source>Refer to the sample code snippet below for a syntax example:</source>
          <target state="translated">구문 예제는 아래 샘플 코드 스 니펫을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="573cdca6dc9153301f2c4e2204f55b081a5f8dbd" translate="yes" xml:space="preserve">
          <source>Reference &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; within the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; host element as well as within its descendants to access the item's properties. The following example references &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; first in an interpolation and then passes in a binding to the &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; property of the &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">항목의 속성에 액세스하기 위해 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 호스트 요소와 그 하위 &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; 내의 참조 항목 다음 예제 는 보간에서 먼저 &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; 참조한 다음 &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; 구성 요소 의 &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; 속성에 바인딩을 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="3c82590c038528589f267839ee1e5e6065235394" translate="yes" xml:space="preserve">
          <source>Reference &lt;code&gt;item&lt;/code&gt; within the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; host element as well as within its descendants to access the item's properties. The following example references &lt;code&gt;item&lt;/code&gt; first in an interpolation and then passes in a binding to the &lt;code&gt;item&lt;/code&gt; property of the &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">참조 &lt;code&gt;item&lt;/code&gt; 내 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 의 호스트 요소뿐만 아니라 그 자손에서 해당 항목의 속성에 액세스 할 수 있습니다. 다음 예제 에서는 보간에서 먼저 &lt;code&gt;item&lt;/code&gt; 참조한 다음 &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; 구성 요소 의 &lt;code&gt;item&lt;/code&gt; 속성 에 대한 바인딩을 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="57e4a415dd0497a24def6db81733f3a61579b98e" translate="yes" xml:space="preserve">
          <source>Reference to a local (non-exported) symbol</source>
          <target state="translated">로컬 (내보내기되지 않은) 심볼에 대한 참조</target>
        </trans-unit>
        <trans-unit id="075055d35ede87b75efb0de56af674b40e1a3927" translate="yes" xml:space="preserve">
          <source>Reference to a non-exported class</source>
          <target state="translated">내 보내지 않은 클래스에 대한 참조</target>
        </trans-unit>
        <trans-unit id="dd81b4dfd9ab55a313b5eb7accb31f8ccf8d35d4" translate="yes" xml:space="preserve">
          <source>Reference to a non-exported function</source>
          <target state="translated">내 보내지 않은 함수에 대한 참조</target>
        </trans-unit>
        <trans-unit id="ed70328904d4fc92b906431035a17a3b6d7989b7" translate="yes" xml:space="preserve">
          <source>Reference to the current application is provided as a parameter.</source>
          <target state="translated">현재 애플리케이션에 대한 참조가 매개 변수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7837f51bdaa3bad46c5634516a1b42c048946168" translate="yes" xml:space="preserve">
          <source>ReflectiveInjector</source>
          <target state="translated">ReflectiveInjector</target>
        </trans-unit>
        <trans-unit id="d1a1500261e47053460b5d62062e8b2fc644fa2b" translate="yes" xml:space="preserve">
          <source>ReflectiveKey</source>
          <target state="translated">ReflectiveKey</target>
        </trans-unit>
        <trans-unit id="32a0f3a28b7f9eb27dd0e894b6782f65fb64799c" translate="yes" xml:space="preserve">
          <source>Refresh the browser and add some heroes.</source>
          <target state="translated">브라우저를 새로 고침하고 일부 영웅을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="473b759a23293b19f3b2c19432cea12958184fb7" translate="yes" xml:space="preserve">
          <source>Refresh the browser and start clicking. Users can navigate around the app, from the dashboard to hero details and back, from heroes list to the mini detail to the hero details and back to the heroes again.</source>
          <target state="translated">브라우저를 새로 고침하고 클릭을 시작하십시오. 사용자는 대시 보드에서 영웅 세부 사항까지, 영웅 목록에서 미니 세부 사항까지, 영웅 세부 사항에서, 다시 영웅으로 다시 앱을 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cfa5e02c6fdba8f1ec0c45696170dbdfab0cfc6" translate="yes" xml:space="preserve">
          <source>Refresh the browser and try the new delete functionality.</source>
          <target state="translated">브라우저를 새로 고치고 새로운 삭제 기능을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="2e68ff8692d271a4016bb8cafc1a1c4a9205742b" translate="yes" xml:space="preserve">
          <source>Refresh the browser to see the list of heroes, and scroll to the bottom to see the messages from the HeroService. Each time you click a hero, a new message appears to record the selection. Use the &quot;clear&quot; button to clear the message history.</source>
          <target state="translated">브라우저를 새로 고침하여 Hero 목록을 확인하고 하단으로 스크롤하여 HeroService의 메시지를 확인합니다. 영웅을 클릭 할 때마다 선택 사항을 기록하는 새 메시지가 나타납니다. 메시지 기록을 지우려면 &quot;지우기&quot;버튼을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="26c112917d8495d7a7ddcf2a84127d956d8be4f4" translate="yes" xml:space="preserve">
          <source>Refresh the browser, and it stops at the breakpoint.</source>
          <target state="translated">브라우저를 새로 고치면 중단 점에서 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="176e1375358badf3872db54069f2b717475df2dd" translate="yes" xml:space="preserve">
          <source>Refresh the browser, change a hero name and save your change. The &lt;code&gt;save()&lt;/code&gt; method in &lt;code&gt;HeroDetailComponent&lt;/code&gt; navigates to the previous view. The hero now appears in the list with the changed name.</source>
          <target state="translated">브라우저를 새로 고치고 영웅 이름을 변경 한 후 변경 사항을 저장하십시오. &lt;code&gt;HeroDetailComponent&lt;/code&gt; 의 &lt;code&gt;save()&lt;/code&gt; 메소드 는 이전보기로 이동합니다. 이제 영웅이 변경된 이름으로 목록에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="99cebb52277a82605b1d204a860c9d62f2439d93" translate="yes" xml:space="preserve">
          <source>Refresh the browser. The hero data should successfully load from the mock server.</source>
          <target state="translated">브라우저를 새로 고칩니다. 영웅 데이터는 모의 서버에서 성공적으로로드되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fadbfb12ae3657d300a87b0fefe383766298bba2" translate="yes" xml:space="preserve">
          <source>Refresh the page.</source>
          <target state="translated">페이지를 새로 고칩니다.</target>
        </trans-unit>
        <trans-unit id="0669a24b1d3d64f2ca8003a83f78ea04f51e5b45" translate="yes" xml:space="preserve">
          <source>Regardless of whether you choose &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;, the basic principles of upgrading, the mental model behind hybrid apps, and how you use the &lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; utilities remain the same. For more information, see the &lt;a href=&quot;upgrade#how-ngupgrade-works&quot;&gt;How &lt;code&gt;ngUpgrade&lt;/code&gt; Works&lt;/a&gt; section of &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 중 어느 것을 선택하든 업그레이드의 기본 원칙, 하이브리드 앱의 멘탈 모델 및 &lt;a href=&quot;../api/upgrade/static&quot;&gt;업그레이드 / 정적&lt;/a&gt; 유틸리티 사용 방법 은 동일하게 유지됩니다. 자세한 내용은 참조 &lt;a href=&quot;upgrade#how-ngupgrade-works&quot;&gt;어떻게 &lt;code&gt;ngUpgrade&lt;/code&gt; 작품의&lt;/a&gt; 섹션 &lt;a href=&quot;upgrade&quot;&gt;AngularJS와에서 업그레이드를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11a6063cc0df22272a2910722f6e211f48adbe35" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 등록</target>
        </trans-unit>
        <trans-unit id="d7e5f50ef64cbfa7b161d319c5cc5e6aa9d83b05" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; within a group</source>
          <target state="translated">그룹 내에서 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 등록</target>
        </trans-unit>
        <trans-unit id="c1021db51e8ea3da43eb931cc521ad3cb699029a" translate="yes" xml:space="preserve">
          <source>Register &lt;strong&gt;global&lt;/strong&gt; style files in the &lt;code&gt;styles&lt;/code&gt; section which, by default, is pre-configured with the global &lt;code&gt;styles.css&lt;/code&gt; file.</source>
          <target state="translated">기본적으로 전역 &lt;code&gt;styles.css&lt;/code&gt; 파일로 사전 구성된 &lt;code&gt;styles&lt;/code&gt; 섹션 에 &lt;strong&gt;전역&lt;/strong&gt; 스타일 파일을 등록 하십시오.</target>
        </trans-unit>
        <trans-unit id="27e5fb5a19ff23a15bfa6a1bb4ec2933aca5ba75" translate="yes" xml:space="preserve">
          <source>Register Form Group</source>
          <target state="translated">양식 그룹 등록</target>
        </trans-unit>
        <trans-unit id="efd52a8f3b4041c85e460e6e23090e3d3a157abb" translate="yes" xml:space="preserve">
          <source>Register Router and Routes</source>
          <target state="translated">라우터 및 경로 등록</target>
        </trans-unit>
        <trans-unit id="499b39c06dfc2e66fe91454fabfa4e09e021f942" translate="yes" xml:space="preserve">
          <source>Register a &lt;code&gt;/login&lt;/code&gt; route in the &lt;code&gt;auth/auth-routing.module.ts&lt;/code&gt;. In &lt;code&gt;app.module.ts&lt;/code&gt;, import and add the &lt;code&gt;AuthModule&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt; imports.</source>
          <target state="translated">&lt;code&gt;auth/auth-routing.module.ts&lt;/code&gt; 에 &lt;code&gt;/login&lt;/code&gt; 경로를 등록하십시오 . 에서 &lt;code&gt;app.module.ts&lt;/code&gt; , 수입 추가 및 &lt;code&gt;AuthModule&lt;/code&gt; 을 받는 &lt;code&gt;AppModule&lt;/code&gt; 의 수입.</target>
        </trans-unit>
        <trans-unit id="9eeba7d8e16fcf05f45372b3016d653066e897db" translate="yes" xml:space="preserve">
          <source>Register a callback function which is notified upon successful hybrid AngularJS / Angular application has been bootstrapped.</source>
          <target state="translated">성공적인 하이브리드 AngularJS / Angular 애플리케이션이 부트 스트랩되면 알림을받는 콜백 함수를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="ddcf2e07710629a4c3d9c53e07ad77ebfa12f127" translate="yes" xml:space="preserve">
          <source>Register a callback to provide the value for a key when &lt;code&gt;toJson&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;toJson&lt;/code&gt; 이 호출 될 때 키 값을 제공하도록 콜백을 등록하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7b321109b4df896dd3cf33339222ff234822a75" translate="yes" xml:space="preserve">
          <source>Register a listener for change events.</source>
          <target state="translated">변경 이벤트를위한 리스너를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="fd5f193b5d08b9ef1d20f00035f6d27992e885a8" translate="yes" xml:space="preserve">
          <source>Register a listener for disabled events.</source>
          <target state="translated">비활성화 된 이벤트에 대한 리스너를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="5b192b96bb88748fadfa4f7fd4ae3bc3ef37b629" translate="yes" xml:space="preserve">
          <source>Register a listener to be called when the platform is disposed.</source>
          <target state="translated">플랫폼을 폐기 할 때 호출 할 리스너를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="7f348892fd77f60dec269716eb0f91e62200f5ae" translate="yes" xml:space="preserve">
          <source>Register a nested &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">중첩 된 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 을 등록하십시오 .</target>
        </trans-unit>
        <trans-unit id="d263f53532884277ae030db32685394d939772fa" translate="yes" xml:space="preserve">
          <source>Register a provider with a component when you &lt;em&gt;must&lt;/em&gt; limit the scope of a service instance to that component and its component tree. Apply the same reasoning to registering a provider with a directive.</source>
          <target state="translated">서비스 인스턴스의 범위를 해당 구성 요소 및 해당 구성 요소 트리로 제한 &lt;em&gt;해야하는&lt;/em&gt; 경우 구성 요소에 제공자를 등록하십시오 . 지시어를 사용하여 공급자를 등록 할 때도 같은 이유를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="d110fe90ef3eb9f9f1422c30fef0ef65e2643f6c" translate="yes" xml:space="preserve">
          <source>Register a provider with a component when you must limit a service instance to a component and its component tree, that is, its child components. For example, a user editing component, &lt;code&gt;UserEditorComponent&lt;/code&gt;, that needs a private copy of a caching &lt;code&gt;UserService&lt;/code&gt; should register the &lt;code&gt;UserService&lt;/code&gt; with the &lt;code&gt;UserEditorComponent&lt;/code&gt;. Then each new instance of the &lt;code&gt;UserEditorComponent&lt;/code&gt; gets its own cached service instance.</source>
          <target state="translated">서비스 인스턴스를 구성 요소 및 해당 구성 요소 트리 (하위 구성 요소)로 제한해야하는 경우 구성 요소에 제공자를 등록하십시오. 예를 들어, 사용자 편집 구성 요소, &lt;code&gt;UserEditorComponent&lt;/code&gt; 캐싱의 개인 사본 필요, &lt;code&gt;UserService&lt;/code&gt; 는 레지스터해야 &lt;code&gt;UserService&lt;/code&gt; 와 &lt;code&gt;UserEditorComponent&lt;/code&gt; 을 . 그런 다음 &lt;code&gt;UserEditorComponent&lt;/code&gt; 의 각 새 인스턴스 는 자체 캐시 서비스 인스턴스를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="8465823a679e4e48ffba873912c7013c8e4cbd0b" translate="yes" xml:space="preserve">
          <source>Register a service in &lt;code&gt;AppComponent&lt;/code&gt; providers &lt;em&gt;only&lt;/em&gt; if the service must be hidden from components outside the &lt;code&gt;AppComponent&lt;/code&gt; tree. This is a rare use case.</source>
          <target state="translated">서비스가 &lt;code&gt;AppComponent&lt;/code&gt; 트리 외부의 컴포넌트에서 숨겨져 야하는 경우 &lt;em&gt;에만 &lt;/em&gt; &lt;code&gt;AppComponent&lt;/code&gt; 제공자에 서비스를 등록하십시오 . 이것은 드문 사용 사례입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da47a0925da134eac74aa2a82182bb68d6a93f71" translate="yes" xml:space="preserve">
          <source>Register global data to be used internally by Angular. See the &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n guide&quot;&lt;/a&gt; to know how to import additional locale data.</source>
          <target state="translated">Angular에서 내부적으로 사용할 글로벌 데이터를 등록하십시오. 추가 로케일 데이터를 가져 오는 방법에 대해서는 &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n 안내서&quot;&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fc1edf78a618f2c721fd4d8c71efbcec47e1ad6" translate="yes" xml:space="preserve">
          <source>Register global data to be used internally by Angular. See the &lt;a href=&quot;../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n guide&quot;&lt;/a&gt; to know how to import additional locale data.</source>
          <target state="translated">Angular에서 내부적으로 사용할 글로벌 데이터를 등록하십시오. 추가 로케일 데이터를 가져 오는 방법에 대해서는 &lt;a href=&quot;../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n 안내서&quot;&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="699b9e365c651c5eaab57aa648e44165113e24ed" translate="yes" xml:space="preserve">
          <source>Register the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; in the template.</source>
          <target state="translated">템플릿에 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 을 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="7d16dcfb19d1203e1a27aba769ee65828ac58db9" translate="yes" xml:space="preserve">
          <source>Register the dependency provider using the &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 오브젝트를 사용하여 종속성 제공자를 등록하십시오 .</target>
        </trans-unit>
        <trans-unit id="30f01933bdc299c95cba737612efd3bafdc54e98" translate="yes" xml:space="preserve">
          <source>Register the given Angular Service Worker script.</source>
          <target state="translated">주어진 Angular Service Worker 스크립트를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="1b694def889e259e3ef3a8b9153f8bb729dd0a4c" translate="yes" xml:space="preserve">
          <source>Register the reactive forms module in your app. This module declares the reactive-form directives that you need to use reactive forms.</source>
          <target state="translated">앱에 반응 형 양식 모듈을 등록합니다. 이 모듈은 반응 양식을 사용하는 데 필요한 반응 양식 지시문을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="c0f53b3cd554913b0a02b0999d74c783e20f69ac" translate="yes" xml:space="preserve">
          <source>Register your custom pipes. The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;&lt;a href=&quot;cli/generate#pipe&quot;&gt;&lt;code&gt;ng generate pipe&lt;/code&gt;&lt;/a&gt; command registers the pipe automatically.</source>
          <target state="translated">사용자 정의 파이프를 등록하십시오. &lt;a href=&quot;cli&quot;&gt;각도 CLI는 &lt;/a&gt;&lt;a href=&quot;cli/generate#pipe&quot;&gt; &lt;code&gt;ng generate pipe&lt;/code&gt; &lt;/a&gt; 자동 명령 레지스터를 파이프.</target>
        </trans-unit>
        <trans-unit id="474c732f0215871e7f1f2e923bd067a6b129d90d" translate="yes" xml:space="preserve">
          <source>Registering a route</source>
          <target state="translated">경로 등록</target>
        </trans-unit>
        <trans-unit id="f28a4475c3c1cc3055c98c04a6e7184a2593555c" translate="yes" xml:space="preserve">
          <source>Registering a single form control</source>
          <target state="translated">단일 폼 컨트롤 등록</target>
        </trans-unit>
        <trans-unit id="6a8c904bd7d052116502d4142d609d72274b8ed7" translate="yes" xml:space="preserve">
          <source>Registering the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt; imports makes the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service available everywhere in the application.</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; 가져 오기 에 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 를 등록하면 응용 프로그램의 모든 곳에서 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 서비스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37f573dfc8136f8566f54e949420b1301e1fa14f" translate="yes" xml:space="preserve">
          <source>Registering the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; array makes the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service available everywhere in the application.</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; 배열 에 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 를 등록하면 응용 프로그램의 모든 곳에서 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 서비스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89c298327d98991688ac0360aa7243c779039c51" translate="yes" xml:space="preserve">
          <source>Registers a &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;DI provider&lt;/a&gt; for a set of routes.</source>
          <target state="translated">일련의 경로에 &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;DI 공급자&lt;/a&gt; 를 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="7f33e0ca2a6dd4f38bd5e9618439a64a8578b95f" translate="yes" xml:space="preserve">
          <source>Registers a &lt;a href=&quot;../guide/glossary#provider&quot;&gt;DI provider&lt;/a&gt; for a set of routes.</source>
          <target state="translated">일련의 경로에 &lt;a href=&quot;../guide/glossary#provider&quot;&gt;DI 공급자&lt;/a&gt; 를 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="8bef6dd7e65f36b218e6bc6ec1c691d3bc523b57" translate="yes" xml:space="preserve">
          <source>Registers a URL change listener. Use to catch updates performed by the Angular framework that are not detectible through &quot;popstate&quot; or &quot;hashchange&quot; events.</source>
          <target state="translated">URL 변경 리스너를 등록합니다. &quot;popstate&quot;또는 &quot;hashchange&quot;이벤트를 통해 감지 할 수없는 Angular 프레임 워크에 의해 수행 된 업데이트를 포착하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1c581def56ab6ac9fb88c3ad15e1cbaca013d411" translate="yes" xml:space="preserve">
          <source>Registers a callback function is called by the forms API on initialization to update the form model on blur.</source>
          <target state="translated">초기화시 양식 API에서 콜백 함수를 호출하여 흐림시 양식 모델을 업데이트하도록 등록합니다.</target>
        </trans-unit>
        <trans-unit id="d8ec3a9b26f0114059c0d3ad2650979680590c15" translate="yes" xml:space="preserve">
          <source>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</source>
          <target state="translated">흐림시 양식 모델을 업데이트하기 위해 초기화시 양식 API에서 호출하는 콜백 함수를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="a33580665d68f23d19cc437c5fddf02f9b41dc27" translate="yes" xml:space="preserve">
          <source>Registers a callback function that is called when the control's value changes in the UI.</source>
          <target state="translated">UI에서 컨트롤 값이 변경 될 때 호출되는 콜백 함수를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="167499d55d61fb6931fd057684fda26fc02336a3" translate="yes" xml:space="preserve">
          <source>Registers a callback function to call when the validator inputs change.</source>
          <target state="translated">유효성 검사기 입력이 변경 될 때 호출 할 콜백 함수를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="651efdfec5700f18bcd1de0095c89e46d914ff40" translate="yes" xml:space="preserve">
          <source>Registers a callback to be executed when the module is destroyed.</source>
          <target state="translated">모듈이 소멸되었을 때 실행할 콜백을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="4cccd3c9038849e370222a8f5454556408b880f3" translate="yes" xml:space="preserve">
          <source>Registers a control with the group's list of controls.</source>
          <target state="translated">그룹의 컨트롤 목록에 컨트롤을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="0058ace972503cd082944e3b514ee343130d6196" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control is touched.</source>
          <target state="translated">컨트롤을 터치 할 때 호출되는 기능을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="ac9b9cea3b85b99825f4339268f87d45e3ddce50" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control value changes and writes an array of the selected options.</source>
          <target state="translated">제어 값이 변경 될 때 호출되는 함수를 등록하고 선택한 옵션의 배열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="42402627981bd38f04d7134c6ef6e366e0f49b16" translate="yes" xml:space="preserve">
          <source>Registers a function called when the control value changes.</source>
          <target state="translated">제어 값이 변경 될 때 호출되는 함수를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="68fc74b3379ee6475d87386b853bd24c10dda94e" translate="yes" xml:space="preserve">
          <source>Registers a global handler for an event in a target view.</source>
          <target state="translated">대상 뷰에서 이벤트에 대한 전역 핸들러를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="b9b957ac7972a68c5c19698f6b2f46d15fbaa324" translate="yes" xml:space="preserve">
          <source>Registers a handler for a specific element and event.</source>
          <target state="translated">특정 요소 및 이벤트에 대한 핸들러를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="3bfe0e6bce7458537b374de02d449ab60e5ace2f" translate="yes" xml:space="preserve">
          <source>Registers a listener to be called when the platform is destroyed.</source>
          <target state="translated">플랫폼이 파괴되었을 때 호출 할 리스너를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="c1a72e375b3ac6e3d36f6d01323010121ac19cfe" translate="yes" xml:space="preserve">
          <source>Registers an application with a testability hook so that it can be tracked</source>
          <target state="translated">추적 할 수 있도록 테스트 가능성 후크가있는 애플리케이션을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="303ef3aa05eb96d9035ebfaf0e6bb0a6eff8d9e0" translate="yes" xml:space="preserve">
          <source>Registers handlers for events emitted by this instance.</source>
          <target state="translated">이 인스턴스가 생성 한 이벤트에 대한 핸들러를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="94f8a4aa998ff705d940ac02f21808b84034f706" translate="yes" xml:space="preserve">
          <source>Registers listeners for URL changes. This API is used to catch updates performed by the AngularJS framework. These changes are a subset of the &lt;code&gt;$locationChangeStart&lt;/code&gt; and &lt;code&gt;$locationChangeSuccess&lt;/code&gt; events which fire when AngularJS updates its internally-referenced version of the browser URL.</source>
          <target state="translated">URL 변경에 대한 리스너를 등록합니다. 이 API는 AngularJS 프레임 워크에서 수행 한 업데이트를 포착하는 데 사용됩니다. 이러한 변경 사항은 AngularJS가 내부적으로 참조되는 브라우저 URL 버전을 업데이트 할 때 발생하는 &lt;code&gt;$locationChangeStart&lt;/code&gt; 및 &lt;code&gt;$locationChangeSuccess&lt;/code&gt; 이벤트 의 하위 집합입니다 .</target>
        </trans-unit>
        <trans-unit id="51bd756c2e6106aa040f50c2114a07bb4ea92816" translate="yes" xml:space="preserve">
          <source>Registers the adapter's AngularJS upgrade module for unit testing in AngularJS. Use this instead of &lt;code&gt;angular.mock.module()&lt;/code&gt; to load the upgrade module into the AngularJS testing injector.</source>
          <target state="translated">AngularJS에서 장치 테스트를 위해 어댑터의 AngularJS 업그레이드 모듈을 등록합니다. &lt;code&gt;angular.mock.module()&lt;/code&gt; 대신 이것을 사용 하여 업그레이드 모듈을 AngularJS 테스트 인젝터에로드하십시오.</target>
        </trans-unit>
        <trans-unit id="bc3af0571f22d311e46fa14763dd68335c62e484" translate="yes" xml:space="preserve">
          <source>Regular expressions for plurals and selections</source>
          <target state="translated">복수 및 선택을위한 정규 표현식</target>
        </trans-unit>
        <trans-unit id="09c24b920e6e0806452f541dd508872c3a4b51bb" translate="yes" xml:space="preserve">
          <source>Relabel the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; 를 &lt;code&gt;&amp;lt;h2&amp;gt;HEROES&amp;lt;/h2&amp;gt;&lt;/code&gt; 다시 레이블하십시오 .</target>
        </trans-unit>
        <trans-unit id="72fb32d7ae1139f3dea16af21922728a2ee4c17c" translate="yes" xml:space="preserve">
          <source>Related configuration files.</source>
          <target state="translated">관련 구성 파일</target>
        </trans-unit>
        <trans-unit id="f08acc559b3522efc7db5dba837c335ae47d5270" translate="yes" xml:space="preserve">
          <source>Related information</source>
          <target state="translated">관련 정보</target>
        </trans-unit>
        <trans-unit id="af37119e89ab5e671b28740aaa9741b7dd676656" translate="yes" xml:space="preserve">
          <source>Related resources</source>
          <target state="translated">관련 자료</target>
        </trans-unit>
        <trans-unit id="970299e4e2176d0fb6a3ccd9806c0c1ad10e1cb4" translate="yes" xml:space="preserve">
          <source>Relative font size: &lt;code&gt;'3em'&lt;/code&gt;</source>
          <target state="translated">상대 글꼴 크기 : &lt;code&gt;'3em'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba6d74cf29dddfb9e888f128b72e89c7f45cdf11" translate="yes" xml:space="preserve">
          <source>Relative link paths</source>
          <target state="translated">상대 링크 경로</target>
        </trans-unit>
        <trans-unit id="273924f6b8bb09d40649f3a052e0708a616b4325" translate="yes" xml:space="preserve">
          <source>Relative navigation</source>
          <target state="translated">상대 탐색</target>
        </trans-unit>
        <trans-unit id="cf7ddb7603d2a26315f2455b522c75c84a223953" translate="yes" xml:space="preserve">
          <source>Relative paths</source>
          <target state="translated">상대 경로</target>
        </trans-unit>
        <trans-unit id="03b13e3c44681c777814bc02b83d2913558e84ce" translate="yes" xml:space="preserve">
          <source>Relative paths allow you to define paths that are relative to the current URL segment. The following example shows a relative route to another component, &lt;code&gt;second-component&lt;/code&gt;. &lt;code&gt;FirstComponent&lt;/code&gt; and &lt;code&gt;SecondComponent&lt;/code&gt; are at the same level in the tree, however, the link to &lt;code&gt;SecondComponent&lt;/code&gt; is situated within the &lt;code&gt;FirstComponent&lt;/code&gt;, meaning that the router has to go up a level and then into the second directory to find the &lt;code&gt;SecondComponent&lt;/code&gt;. Rather than writing out the whole path to get to &lt;code&gt;SecondComponent&lt;/code&gt;, you can use the &lt;code&gt;../&lt;/code&gt; notation to go up a level.</source>
          <target state="translated">상대 경로를 사용하면 현재 URL 세그먼트에 상대적인 경로를 정의 할 수 있습니다. 다음 예는 다른 구성 요소 인 &lt;code&gt;second-component&lt;/code&gt; 에 대한 상대 경로를 보여줍니다 . &lt;code&gt;FirstComponent&lt;/code&gt; 및 &lt;code&gt;SecondComponent&lt;/code&gt; 는 트리에서 같은 수준에서, 그러나, 링크되어 &lt;code&gt;SecondComponent&lt;/code&gt; 는 에 위치하고 있습니다 &lt;code&gt;FirstComponent&lt;/code&gt; 라우터가 찾을 수있는 두 번째 디렉토리에 다음 수준을 가서해야한다는 것을 의미 &lt;code&gt;SecondComponent&lt;/code&gt; 을 . &lt;code&gt;SecondComponent&lt;/code&gt; 에 도달하기 위해 전체 경로를 작성하는 대신 &lt;code&gt;../&lt;/code&gt; 표기법을 사용하여 수준을 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca1e9859d878c64d5a702f7c04bd96cbb4ed5678" translate="yes" xml:space="preserve">
          <source>Release announcements (older): &lt;a href=&quot;https://blog.angularjs.org/search?q=available&amp;amp;by-date=true&quot;&gt;Angular blog - announcements about releases prior to August 2017&lt;/a&gt;</source>
          <target state="translated">출시 공지 (이전) : &lt;a href=&quot;https://blog.angularjs.org/search?q=available&amp;amp;by-date=true&quot;&gt;Angular 블로그-2017 년 8 월 이전 릴리스에 대한 공지&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b3ff56d3178fb09ce35426dcffa4e7a93999e80" translate="yes" xml:space="preserve">
          <source>Release announcements: &lt;a href=&quot;https://blog.angular.io/tagged/release%20notes&quot;&gt;Angular blog - release announcements&lt;/a&gt;</source>
          <target state="translated">출시 공지 : &lt;a href=&quot;https://blog.angular.io/tagged/release%20notes&quot;&gt;Angular 블로그-출시 공지&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0e9be040ffdccdde22aa875dc9106626987b907" translate="yes" xml:space="preserve">
          <source>Release details: &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;Angular change log&lt;/a&gt;</source>
          <target state="translated">릴리스 세부 사항 : &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;각도 변경 로그&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="375da07bd98ddf85ba6ae31bd08bf325cf089dfe" translate="yes" xml:space="preserve">
          <source>Release frequency</source>
          <target state="translated">방출 빈도</target>
        </trans-unit>
        <trans-unit id="ea33e8c31694912887d747c2ac0b47cd176d8edd" translate="yes" xml:space="preserve">
          <source>Release schedule</source>
          <target state="translated">출시 일정</target>
        </trans-unit>
        <trans-unit id="f2014b76ac55691bf918cbe564e50b6a34f7662a" translate="yes" xml:space="preserve">
          <source>Release schedule: &lt;a href=&quot;releases#schedule&quot;&gt;Angular versioning and releases&lt;/a&gt;</source>
          <target state="translated">출시 일정 : &lt;a href=&quot;releases#schedule&quot;&gt;각도 버전 및 출시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35d9bc51591e20cba61b95e7bbe1f27d185b3c80" translate="yes" xml:space="preserve">
          <source>Released</source>
          <target state="translated">Released</target>
        </trans-unit>
        <trans-unit id="1f506dd995cb9abff9bec6254417f6424b5d409d" translate="yes" xml:space="preserve">
          <source>Rely on the router to call the resolver. Don't worry about all the ways that the user could navigate away. That's the router's job. Write this class and let the router take it from there.</source>
          <target state="translated">라우터를 사용하여 리졸버를 호출하십시오. 사용자가 탐색 할 수있는 모든 방법에 대해 걱정하지 마십시오. 이것이 라우터의 일입니다. 이 클래스를 작성하고 라우터가 거기서 가져 가도록하십시오.</target>
        </trans-unit>
        <trans-unit id="afb2937301efc646b5a60fb1b92a22a48c083f94" translate="yes" xml:space="preserve">
          <source>Relying on direct DOM access creates tight coupling between your application and rendering layers which will make it impossible to separate the two and deploy your application into a web worker.</source>
          <target state="translated">직접 DOM 액세스를 사용하면 애플리케이션과 렌더링 계층간에 긴밀한 연결이 이루어 지므로 두 애플리케이션을 분리하여 웹 워커에 애플리케이션을 배포 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7206b206b31aa3633a033e2dc7a73ae006e2945f" translate="yes" xml:space="preserve">
          <source>Remember also that a directive's data-bound input properties are not set until &lt;em&gt;after construction&lt;/em&gt;. That's a problem if you need to initialize the directive based on those properties. They'll have been set when &lt;code&gt;ngOnInit()&lt;/code&gt; runs.</source>
          <target state="translated">지시문의 데이터 바인딩 된 입력 속성은 &lt;em&gt;생성 후&lt;/em&gt; 까지 설정되지 않습니다 . 해당 속성을 기반으로 지시문을 초기화 해야하는 경우 문제가됩니다. &lt;code&gt;ngOnInit()&lt;/code&gt; 가 실행될 때 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="13651e994fa66c3288128cedcf7c0183fa01bfc1" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;app-heroes&lt;/code&gt; is the &lt;a href=&quot;toh-pt1#selector&quot;&gt;element selector&lt;/a&gt; for the &lt;code&gt;HeroesComponent&lt;/code&gt;. So add an &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; element to the &lt;code&gt;AppComponent&lt;/code&gt; template file, just below the title.</source>
          <target state="translated">그 기억 &lt;code&gt;app-heroes&lt;/code&gt; 은 IS &lt;a href=&quot;toh-pt1#selector&quot;&gt;요소 선택기&lt;/a&gt; 에 대한 &lt;code&gt;HeroesComponent&lt;/code&gt; . 따라서 제목 바로 아래의 &lt;code&gt;AppComponent&lt;/code&gt; 템플릿 파일에 &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; 요소를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e3d011212e72a1e405fbfa32d0e8f9ce97b09af" translate="yes" xml:space="preserve">
          <source>Remember that impure pipes are called every few milliseconds. If you're not careful, this pipe will punish the server with requests.</source>
          <target state="translated">불순한 파이프는 몇 밀리 초마다 호출됩니다. 주의하지 않으면이 파이프는 요청으로 서버를 처벌합니다.</target>
        </trans-unit>
        <trans-unit id="b082e1ff346e7c39761ee9a112da674a5cb94e69" translate="yes" xml:space="preserve">
          <source>Remember that in this situation you'd call &lt;code&gt;setCurrentClasses()&lt;/code&gt;, both initially and when the dependent properties change.</source>
          <target state="translated">이 상황 에서는 처음과 종속 속성이 변경 될 때 &lt;code&gt;setCurrentClasses()&lt;/code&gt; 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="8fa44c5766b19ac0cd5b2eeacca3f333d904c4fc" translate="yes" xml:space="preserve">
          <source>Remember that the component &lt;em&gt;class&lt;/em&gt; does not subscribe to the &lt;code&gt;heroes$&lt;/code&gt;&lt;em&gt;observable&lt;/em&gt;. That's the job of the &lt;a href=&quot;toh-pt6#asyncpipe&quot;&gt;&lt;code&gt;AsyncPipe&lt;/code&gt;&lt;/a&gt; in the template.</source>
          <target state="translated">구성 요소 &lt;em&gt;클래스&lt;/em&gt; 는 &lt;code&gt;heroes$&lt;/code&gt; &lt;em&gt;observable을&lt;/em&gt; 구독하지 않습니다 . 템플릿 에서 &lt;a href=&quot;toh-pt6#asyncpipe&quot;&gt; &lt;code&gt;AsyncPipe&lt;/code&gt; &lt;/a&gt; 의 작업입니다 .</target>
        </trans-unit>
        <trans-unit id="2c9866cde69e0f9bace65e73f610bd7b59dd1186" translate="yes" xml:space="preserve">
          <source>Remember the brackets</source>
          <target state="translated">괄호를 기억하십시오</target>
        </trans-unit>
        <trans-unit id="6f1f45af2f822f4853dababc20a2d2e721186681" translate="yes" xml:space="preserve">
          <source>Remember the declarations array</source>
          <target state="translated">선언 배열을 기억하십시오</target>
        </trans-unit>
        <trans-unit id="af8cdd266af8fe9056293c06a0835486379a11e6" translate="yes" xml:space="preserve">
          <source>Remember to add the &lt;code&gt;InspectorComponent&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt;&lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;InspectorComponent&lt;/code&gt; 를 &lt;code&gt;AppModule&lt;/code&gt; &lt;code&gt;declarations&lt;/code&gt; 배열 에 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="02c8c82fcfa1ebdb050af38bd24616cd31038d91" translate="yes" xml:space="preserve">
          <source>Remember to call &lt;code&gt;setCurrentStyles()&lt;/code&gt;, both initially and when the dependent properties change.</source>
          <target state="translated">초기 및 종속 속성이 변경 될 때 &lt;code&gt;setCurrentStyles()&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="17516af45dd099bbc1571d24b1c7bde6c0c05358" translate="yes" xml:space="preserve">
          <source>Remember to exclude these files from stackblitz by listing them in the &lt;code&gt;stackblitz.json&lt;/code&gt; as illustrated here.</source>
          <target state="translated">여기에 &lt;code&gt;stackblitz.json&lt;/code&gt; 대로 stackblitz.json에 파일을 나열하여 이러한 파일을 stackblitz에서 제외해야합니다 .</target>
        </trans-unit>
        <trans-unit id="07e4e58a5951e0a7c881f2f6e289757c9dd27f55" translate="yes" xml:space="preserve">
          <source>Remember to import &lt;code&gt;GreetingModule&lt;/code&gt; as a Javascript import at the top of the file and don't add it to more than one &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; list.</source>
          <target state="translated">가져올 기억 &lt;code&gt;GreetingModule&lt;/code&gt; 를 파일의 맨 위에있는 자바 스크립트 가져 오기로 한 것보다 더 많은 추가하지 않습니다 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; 목록입니다.</target>
        </trans-unit>
        <trans-unit id="832180d8eb87ef1998ffb89e091308e4fe67fd37" translate="yes" xml:space="preserve">
          <source>Remember to import the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to make &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; available as follows:</source>
          <target state="translated">&lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; &lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt; )] 을 다음과 같이 사용할 수 있도록 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 을 가져와야합니다 .</target>
        </trans-unit>
        <trans-unit id="a4d39a4f7a173386221bc146c1862a6c09ae6cca" translate="yes" xml:space="preserve">
          <source>Remember to refer to this region by name in the &lt;code&gt;region&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;code-pane&amp;gt;&lt;/code&gt; as you did in an example above like this:</source>
          <target state="translated">위의 예에서와 같이 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;code-pane&amp;gt;&lt;/code&gt; 의 &lt;code&gt;region&lt;/code&gt; 속성 에서이 영역을 이름으로 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ae2155556aba175b9d87c09bdfea7d3d3051ddd" translate="yes" xml:space="preserve">
          <source>Remember, components, directives, and pipes belong to one module only. You only need to declare them once in your app because you share them by importing the necessary modules. This saves you time and helps keep your app lean.</source>
          <target state="translated">컴포넌트, 지시문 및 파이프는 하나의 모듈에만 속한다는 것을 기억하십시오. 필요한 모듈을 가져 와서 공유하므로 앱에서 한 번만 선언하면됩니다. 이를 통해 시간을 절약하고 앱을 깔끔하게 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8adb46d34eff3a8b15bcc3c40717d0ab0d11e49" translate="yes" xml:space="preserve">
          <source>Remember, whether a value is safe depends on context, so choose the right context for your intended use of the value. Imagine that the following template needs to bind a URL to a &lt;code&gt;javascript:alert(...)&lt;/code&gt; call:</source>
          <target state="translated">값이 안전한지 여부는 상황에 따라 달라 지므로 의도 한 값 사용에 적합한 컨텍스트를 선택하십시오. 다음 템플릿이 URL을 &lt;code&gt;javascript:alert(...)&lt;/code&gt; 호출 에 바인딩해야한다고 상상해보십시오 .</target>
        </trans-unit>
        <trans-unit id="1d3a3049f887fbcb21bfbe766ecfe584918f00c4" translate="yes" xml:space="preserve">
          <source>Reminder: If you use these &lt;code&gt;Deprecated*&lt;/code&gt; pipes, you should migrate to the current APIs listed above as soon as possible. These deprecated APIs are candidates for removal in version 9.</source>
          <target state="translated">알림 :이 &lt;code&gt;Deprecated*&lt;/code&gt; 파이프 를 사용하는 경우 가능한 빨리 위에 나열된 현재 API로 마이그레이션해야합니다. 더 이상 사용되지 않는 API는 버전 9에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="762589a8acb662468c7b8292a03d308f440ae134" translate="yes" xml:space="preserve">
          <source>Reminder: In the file list, right-click the &lt;code&gt;app&lt;/code&gt; folder, choose &lt;code&gt;Angular Generator&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">알림 : 파일 목록에서 &lt;code&gt;app&lt;/code&gt; 폴더를 마우스 오른쪽 버튼으로 클릭 하고 &lt;code&gt;Angular Generator&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5f94b095a44dde7d0d8af01b457729bec0e1a8d" translate="yes" xml:space="preserve">
          <source>Reminder: Open &lt;code&gt;app.module.ts&lt;/code&gt; and add a route for the component &lt;code&gt;CartComponent&lt;/code&gt;, with a &lt;code&gt;path&lt;/code&gt; of &lt;code&gt;cart&lt;/code&gt;:</source>
          <target state="translated">알림 : 열기 &lt;code&gt;app.module.ts&lt;/code&gt; 및 구성 요소에 대한 경로를 추가 &lt;code&gt;CartComponent&lt;/code&gt; 으로, &lt;code&gt;path&lt;/code&gt; 의 &lt;code&gt;cart&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae2147e66b8bc2bd312faebc0682b87f9a6d5d01" translate="yes" xml:space="preserve">
          <source>Reminder: the styles in the style file apply &lt;em&gt;only to this component&lt;/em&gt;. They are &lt;em&gt;not inherited&lt;/em&gt; by any components nested within the template nor by any content projected into the component.</source>
          <target state="translated">알림 : 스타일 파일의 스타일 &lt;em&gt;은이 구성 요소에만&lt;/em&gt; 적용 &lt;em&gt;됩니다&lt;/em&gt; . 그들은되는 &lt;em&gt;상속되지&lt;/em&gt; 템플릿 내도 구성 요소에 투영 된 어떤 내용으로 중첩 된 구성 요소에 의해.</target>
        </trans-unit>
        <trans-unit id="c420308ba57631e51f4eea85e2dbbb8c5f167ff8" translate="yes" xml:space="preserve">
          <source>Reminder: these styles apply &lt;em&gt;only to this component&lt;/em&gt;. They are &lt;em&gt;not inherited&lt;/em&gt; by any components nested within the template nor by any content projected into the component.</source>
          <target state="translated">알림 :이 스타일은 &lt;em&gt;이 구성 요소에만&lt;/em&gt; 적용 &lt;em&gt;됩니다&lt;/em&gt; . 그들은되는 &lt;em&gt;상속되지&lt;/em&gt; 템플릿 내도 구성 요소에 투영 된 어떤 내용으로 중첩 된 구성 요소에 의해.</target>
        </trans-unit>
        <trans-unit id="141c0d8ec3a9c9686ec3000640fa7c8d7b4d6f06" translate="yes" xml:space="preserve">
          <source>Remove a control from this form.</source>
          <target state="translated">이 폼에서 컨트롤을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="36e4826b1fe6a272f91ac4b1061500c0ffd1c5c8" translate="yes" xml:space="preserve">
          <source>Remove a control from this group.</source>
          <target state="translated">이 그룹에서 컨트롤을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="0140d145c4d2ab13c262d2fa061836da399313ed" translate="yes" xml:space="preserve">
          <source>Remove a group of controls to this form.</source>
          <target state="translated">이 폼에 대한 컨트롤 그룹을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="e7a38c48e797a3f1d17578e956636a4c90bd7f29" translate="yes" xml:space="preserve">
          <source>Remove a key from the store.</source>
          <target state="translated">상점에서 키를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="3d897e55ccff78c2ff5b4107c0eb0180e972a408" translate="yes" xml:space="preserve">
          <source>Remove all controls in the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 의 모든 컨트롤을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f0bd90c68fe76316f5f2ce32cfdc26eb59130e4" translate="yes" xml:space="preserve">
          <source>Remove all elements from a FormArray</source>
          <target state="translated">FormArray에서 모든 요소 제거</target>
        </trans-unit>
        <trans-unit id="675a65343753f89282932f2d108d9401b5d4c082" translate="yes" xml:space="preserve">
          <source>Remove all mention of the &lt;code&gt;CrisisCenterModule&lt;/code&gt; from &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CrisisCenterModule&lt;/code&gt; 에서 &lt;code&gt;app.module.ts&lt;/code&gt; 에 대한 모든 언급을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="354bb4620eb8d89f95b9ce62fa9eb46bf6e0c8b6" translate="yes" xml:space="preserve">
          <source>Remove any &lt;code&gt;map(res =&amp;gt; res.json())&lt;/code&gt; calls. They are no longer needed.</source>
          <target state="translated">모든 &lt;code&gt;map(res =&amp;gt; res.json())&lt;/code&gt; 호출을 제거하십시오 . 더 이상 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0355b45ef70dfcbfc27082bbbab1a27db9c45ede" translate="yes" xml:space="preserve">
          <source>Remove dead code (optional)</source>
          <target state="translated">데드 코드 제거 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="83f4d6ebf43d95496e091a268d3d2e865c85375a" translate="yes" xml:space="preserve">
          <source>Remove deprecated support for IE 9, 10, and IE mobile. See &lt;a href=&quot;https://github.com/angular/angular/pull/38931&quot;&gt;PR 38931&lt;/a&gt;.</source>
          <target state="translated">IE 9, 10 및 IE 모바일에 대한 더 이상 사용되지 않는 지원을 제거합니다. &lt;a href=&quot;https://github.com/angular/angular/pull/38931&quot;&gt;PR 38931을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64f42d0a7e5c675bc4fc4073516f4e88f7f3f0df" translate="yes" xml:space="preserve">
          <source>Remove duplicate hero routes</source>
          <target state="translated">중복 영웅 경로 제거</target>
        </trans-unit>
        <trans-unit id="da8a49a00d9c37a6610d70fea7180e05bfd548be" translate="yes" xml:space="preserve">
          <source>Remove heroes declarations</source>
          <target state="translated">영웅 선언 제거</target>
        </trans-unit>
        <trans-unit id="b749c5698be06d88d76f4c4c20af916d3cb9ea3a" translate="yes" xml:space="preserve">
          <source>Remove the &amp;lt;script&amp;gt; tag for the phone list component from &lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; 에서 전화 번호부 구성 요소의 &amp;lt;script&amp;gt; 태그를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="07e653fd3d1a09bf18e552cdb4c722cca2f49951" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;HeroListComponent&lt;/code&gt; from the &lt;code&gt;AppModule&lt;/code&gt;'s &lt;code&gt;declarations&lt;/code&gt; because it's now provided by the &lt;code&gt;HeroesModule&lt;/code&gt;. You can evolve the hero feature with more components and different routes. That's a key benefit of creating a separate module for each feature area.</source>
          <target state="translated">이제 &lt;code&gt;HeroesModule&lt;/code&gt; 이 제공하므로 &lt;code&gt;AppModule&lt;/code&gt; 의 &lt;code&gt;declarations&lt;/code&gt; 에서 &lt;code&gt;HeroListComponent&lt;/code&gt; 를 제거하십시오 . 더 많은 구성 요소와 다른 경로로 영웅 기능을 발전시킬 수 있습니다. 이는 각 기능 영역에 대해 별도의 모듈을 작성하면 얻을 수있는 주요 이점입니다.</target>
        </trans-unit>
        <trans-unit id="228fb5b1cfd86efcf92c5af71ef03cc392fc0758" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;HeroListComponent&lt;/code&gt; import and the &lt;code&gt;/heroes&lt;/code&gt; route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app-routing.module.ts&lt;/code&gt; 에서 &lt;code&gt;HeroListComponent&lt;/code&gt; 가져 오기 및 &lt;code&gt;/heroes&lt;/code&gt; 경로를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a6dce3d69d19a74546a704c4cb5ccb85bad0cfe" translate="yes" xml:space="preserve">
          <source>Remove the control at the given &lt;code&gt;index&lt;/code&gt; in the array.</source>
          <target state="translated">배열 의 지정된 &lt;code&gt;index&lt;/code&gt; 에서 제어를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9896c7e9072371709a3d7ce5c4dcff841cbc002" translate="yes" xml:space="preserve">
          <source>Remove the initial crisis center route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt; because now the &lt;code&gt;HeroesModule&lt;/code&gt; and the &lt;code&gt;CrisisCenter&lt;/code&gt; modules provide the feature routes.</source>
          <target state="translated">이제 &lt;code&gt;HeroesModule&lt;/code&gt; 및 &lt;code&gt;CrisisCenter&lt;/code&gt; 모듈이 기능 경로를 제공 하므로 &lt;code&gt;app-routing.module.ts&lt;/code&gt; 에서 초기 위기 센터 경로를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="acef8513aff8e50c9de63f43d894a476d7a1a4b4" translate="yes" xml:space="preserve">
          <source>Remove the initial crisis center route from the &lt;code&gt;app-routing.module.ts&lt;/code&gt;. The feature routes are now provided by the &lt;code&gt;HeroesModule&lt;/code&gt; and the &lt;code&gt;CrisisCenter&lt;/code&gt; modules.</source>
          <target state="translated">&lt;code&gt;app-routing.module.ts&lt;/code&gt; 에서 초기 위기 센터 경로를 제거하십시오 . 기능 경로는 이제 &lt;code&gt;HeroesModule&lt;/code&gt; 및 &lt;code&gt;CrisisCenter&lt;/code&gt; 모듈 에서 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="cab54fe624f00c44dfb29ea434660cb21fa96c33" translate="yes" xml:space="preserve">
          <source>Removed APIs</source>
          <target state="translated">제거 된 API</target>
        </trans-unit>
        <trans-unit id="675b61563e331e987ff42c65c9681e0849490c82" translate="yes" xml:space="preserve">
          <source>Removes a given value or all values from a parameter.</source>
          <target state="translated">매개 변수에서 지정된 값 또는 모든 값을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="36388aed802da3334e538eaafea28bc9dc62465b" translate="yes" xml:space="preserve">
          <source>Removes a trailing slash from a URL string if needed. Looks for the first occurrence of either &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or the end of the line as &lt;code&gt;/&lt;/code&gt; characters and removes the trailing slash if one exists.</source>
          <target state="translated">필요한 경우 URL 문자열에서 후행 슬래시를 제거합니다. 하나의 첫 번째 항목을 찾습니다 &lt;code&gt;#&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; , 또는 행 끝을 &lt;code&gt;/&lt;/code&gt; 문자로 사용하고 후행 슬래시가 있으면 제거합니다.</target>
        </trans-unit>
        <trans-unit id="6c702e0e52361022cd0fd6bbc6462d4b5c411831" translate="yes" xml:space="preserve">
          <source>Removes an existing &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag element from the current HTML document.</source>
          <target state="translated">현재 HTML 문서에서 기존 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그 요소를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="f77dcf847494e18c2040e4c43e2df4c50e620a4b" translate="yes" xml:space="preserve">
          <source>Removes or recreates a portion of the DOM tree based on the &lt;code&gt;showSection&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;showSection&lt;/code&gt; 표현식을 기반으로 DOM 트리의 일부를 제거하거나 다시 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="5d4476d012096601913a81f6e9c72341413e9d5d" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; instance from the internal list of directives</source>
          <target state="translated">내부 지시문 목록에서 &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; 인스턴스를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="8b2357fbee7e433019e97dfebac16d58751c7f42" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; instance from the internal list of directives</source>
          <target state="translated">내부 지시문 목록에서 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 인스턴스를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="872946ce457e8ed2515586b6b9533517081ce7ea" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive instance from the form.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 지시문 인스턴스를 양식에서 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="27cdb6f2b6cb7abc01fe47bb82184cdf5686326e" translate="yes" xml:space="preserve">
          <source>Removes whitespace-only text nodes. For example,</source>
          <target state="translated">공백 만있는 텍스트 노드를 제거합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="f8ecc17d3ab4f9a92555a0b5560eb0f9ba433b8c" translate="yes" xml:space="preserve">
          <source>Removing Bazel</source>
          <target state="translated">Bazel 제거</target>
        </trans-unit>
        <trans-unit id="bfcfcfb14e902bf6f8ca406c3fe92143c41a0ba9" translate="yes" xml:space="preserve">
          <source>Removing data access from components means you can change your mind about the implementation anytime, without touching any components. They don't know how the service works.</source>
          <target state="translated">구성 요소에서 데이터 액세스를 제거하면 구성 요소를 건드리지 않고도 언제든지 구현에 대한 생각을 바꿀 수 있습니다. 그들은 서비스가 어떻게 작동하는지 모른다.</target>
        </trans-unit>
        <trans-unit id="c8a3c77f08cd8291fe544b9d209d82e28baa5950" translate="yes" xml:space="preserve">
          <source>Removing whitespace can greatly reduce AOT-generated code size and speed up view creation. As of Angular 6, the default for &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; is false (whitespace is removed). To change the default setting for all components in your application, set the &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; option of the AOT compiler.</source>
          <target state="translated">공백을 제거하면 AOT 생성 코드 크기를 크게 줄이고 뷰 생성 속도를 높일 수 있습니다. Angular 6에서 &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; 의 기본값 은 false입니다 (공백이 제거됨). 응용 프로그램의 모든 구성 요소에 대한 기본 설정을 변경하려면 AOT 컴파일러 의 &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="adc5b4d194a26e5fb7a695273b5fb9fa82b9761a" translate="yes" xml:space="preserve">
          <source>Removing whitespace can greatly reduce AOT-generated code size and speed up view creation. As of Angular 6, the default for &lt;code&gt;preserveWhitespaces&lt;/code&gt; is false (whitespace is removed). To change the default setting for all components in your application, set the &lt;code&gt;preserveWhitespaces&lt;/code&gt; option of the AOT compiler.</source>
          <target state="translated">공백을 제거하면 AOT 생성 코드 크기를 크게 줄이고보기 생성 속도를 높일 수 있습니다. Angular 6부터 &lt;code&gt;preserveWhitespaces&lt;/code&gt; 의 기본값 은 false입니다 (공백이 제거됨). 애플리케이션의 모든 구성 요소에 대한 기본 설정을 변경하려면 AOT 컴파일러 의 &lt;code&gt;preserveWhitespaces&lt;/code&gt; 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="49f49405b61f30843af6003da162c8ee8625a285" translate="yes" xml:space="preserve">
          <source>Rename &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;&lt;/code&gt; 로 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="1455f12769a3d50f36112140e2904afcdbdff365" translate="yes" xml:space="preserve">
          <source>Rename the NgModule files to &lt;code&gt;crisis-center.module.ts&lt;/code&gt; and &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt;.</source>
          <target state="translated">NgModule 파일의 이름을 &lt;code&gt;crisis-center.module.ts&lt;/code&gt; 및 &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="060139a45ee7fa74f8aea343ea509e8ea84869cc" translate="yes" xml:space="preserve">
          <source>Rename the component's &lt;code&gt;hero&lt;/code&gt; property to &lt;code&gt;selectedHero&lt;/code&gt; but don't assign it. There is no &lt;em&gt;selected hero&lt;/em&gt; when the application starts.</source>
          <target state="translated">컴포넌트의 &lt;code&gt;hero&lt;/code&gt; 속성 이름 을 &lt;code&gt;selectedHero&lt;/code&gt; 로 바꾸 되 할당하지 마십시오. 응용 프로그램을 시작할 때 &lt;em&gt;선택된 영웅&lt;/em&gt; 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2432c6d61ab95ce70fedac148611a6612631bc92" translate="yes" xml:space="preserve">
          <source>Rename the copy to &lt;code&gt;messages.fr.xlf&lt;/code&gt; for the French language (&lt;code&gt;fr&lt;/code&gt;) translation. Send this translation file to the translator.</source>
          <target state="translated">프랑스어 ( &lt;code&gt;fr&lt;/code&gt; ) 번역을 위해 사본의 이름을 &lt;code&gt;messages.fr.xlf&lt;/code&gt; 로 바꿉니다 . 이 번역 파일을 번역자에게 보냅니다.</target>
        </trans-unit>
        <trans-unit id="9cb48a8e76df217606c36986299abb4e3fa45f36" translate="yes" xml:space="preserve">
          <source>Rename the copy to &lt;code&gt;messages.fr.xlf&lt;/code&gt; for the French language translation.</source>
          <target state="translated">프랑스어 번역을 위해 사본의 이름을 &lt;code&gt;messages.fr.xlf&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="71d2d7d24ec7e7f24ea084470bc301ff5eef960f" translate="yes" xml:space="preserve">
          <source>RenderComponentType</source>
          <target state="translated">RenderComponentType</target>
        </trans-unit>
        <trans-unit id="e72008facbad3c15c8bae1dc5a6d48d55c2181ce" translate="yes" xml:space="preserve">
          <source>Renderer</source>
          <target state="translated">Renderer</target>
        </trans-unit>
        <trans-unit id="cc99feb324f6b6cb7870e79c770886db703053d9" translate="yes" xml:space="preserve">
          <source>Renderer2</source>
          <target state="translated">Renderer2</target>
        </trans-unit>
        <trans-unit id="f05efcc1457680c2f44d46edb4c6e631506df261" translate="yes" xml:space="preserve">
          <source>RendererFactory2</source>
          <target state="translated">RendererFactory2</target>
        </trans-unit>
        <trans-unit id="c2d63a3d0692201be642c3e5b12a761c6202822f" translate="yes" xml:space="preserve">
          <source>RendererStyleFlags2</source>
          <target state="translated">RendererStyleFlags2</target>
        </trans-unit>
        <trans-unit id="4b61abbb7d2ad8773879992ad5774433aa516b59" translate="yes" xml:space="preserve">
          <source>RendererType2</source>
          <target state="translated">RendererType2</target>
        </trans-unit>
        <trans-unit id="79f5346b3de7d933df3da0b45252bd8407010458" translate="yes" xml:space="preserve">
          <source>Rendering a feature module&amp;rsquo;s component template</source>
          <target state="translated">기능 모듈의 컴포넌트 템플릿 렌더링</target>
        </trans-unit>
        <trans-unit id="b47a9f47d5939524c6012ea0b6181f4406d6227e" translate="yes" xml:space="preserve">
          <source>Rendering critical pages on the server is a technique that can greatly improve perceived responsiveness when the app first loads. An app that would otherwise take ten or more seconds to start could be rendered on the server and delivered to the user's device in less than a second.</source>
          <target state="translated">서버에서 중요 페이지를 렌더링하는 것은 앱이 처음로드 될 때 인식되는 응답 성을 크게 향상시킬 수있는 기술입니다. 그렇지 않으면 시작하는 데 10 초 이상 걸리는 앱이 서버에서 렌더링되어 1 초 이내에 사용자의 장치로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7b27806e37094fca797ad3deab14837abf019cf" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;../core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; to string.</source>
          <target state="translated">&lt;a href=&quot;../core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt; 를 문자열로 렌더링 합니다.</target>
        </trans-unit>
        <trans-unit id="46e22790812ac0598ea57408ee918927b321f270" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; to string.</source>
          <target state="translated">&lt;a href=&quot;core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt; 를 문자열로 렌더링 합니다.</target>
        </trans-unit>
        <trans-unit id="2f3256d4a8135d6ea9724a5a9bef59f6a339cb2c" translate="yes" xml:space="preserve">
          <source>Renders a Module to string.</source>
          <target state="translated">모듈을 문자열로 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="831690a047ef566fcaf6f184d3c0cf5a6c23f194" translate="yes" xml:space="preserve">
          <source>Renders the current state of the platform to string.</source>
          <target state="translated">플랫폼의 현재 상태를 문자열로 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="a857a51e0149d2defb41cd5a8cade60428e4e3d1" translate="yes" xml:space="preserve">
          <source>Repeat the above steps for each language you want to add to your app.</source>
          <target state="translated">앱에 추가하려는 각 언어에 대해 위 단계를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="c92d949883edb99abaf461c9bd691ee69bdf800d" translate="yes" xml:space="preserve">
          <source>Repeat this step for a second component but give it a different name. Here, the new name is &lt;code&gt;second&lt;/code&gt;.</source>
          <target state="translated">두 번째 구성 요소에 대해이 단계를 반복하되 다른 이름을 지정합니다. 여기에서 새 이름은 &lt;code&gt;second&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6cc508a44faffbd582b0ea5d9a7e401c3f62887b" translate="yes" xml:space="preserve">
          <source>Repeat to add more items to the cart.</source>
          <target state="translated">장바구니에 더 많은 항목을 추가하려면 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="a3631fed92fa9271412dda086e8601dba47a977f" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;HttpModule&lt;/code&gt; with &lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;&lt;code&gt;HttpClientModule&lt;/code&gt;&lt;/a&gt; (from &lt;a href=&quot;../api/common/http&quot;&gt;&lt;code&gt;@angular/common/http&lt;/code&gt;&lt;/a&gt;) in each of your modules.</source>
          <target state="translated">교체 &lt;code&gt;HttpModule&lt;/code&gt; 의를 함께 &lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt; &lt;code&gt;HttpClientModule&lt;/code&gt; &lt;/a&gt; (에서 &lt;a href=&quot;../api/common/http&quot;&gt; &lt;code&gt;@angular/common/http&lt;/code&gt; &lt;/a&gt; 당신의 각 모듈에서).</target>
        </trans-unit>
        <trans-unit id="775add567e4ba89b65ba005f6e4ef796f364f4f1" translate="yes" xml:space="preserve">
          <source>Replace an existing control.</source>
          <target state="translated">기존 컨트롤을 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="35183ee247577ad2ab951c8a4e018783564a0cb3" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="translated">다음과 같이 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="bf9be4259d7dbb3cbb65bc98ac003799fbdd38cc" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. Recall that modules can import other modules. The &lt;code&gt;overrideModule&lt;/code&gt; method can reach deeply into the current testing module to modify one of these inner modules.</source>
          <target state="translated">지정된 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 의 메타 데이터를 교체하십시오 . 모듈은 다른 모듈을 가져올 수 있습니다. &lt;code&gt;overrideModule&lt;/code&gt; 의 방법은 이러한 내부 모듈 중 하나를 수정하는 현재의 테스트 모듈에 깊게 도달 할 수있다.</target>
        </trans-unit>
        <trans-unit id="dbdfa3991734f11ff4020bf2d9aba4c1c8e5320c" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given component class, which could be nested deeply within an inner module.</source>
          <target state="translated">내부 모듈 내에 깊이 중첩 될 수있는 지정된 구성 요소 클래스의 메타 데이터를 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="20c173c6528752be2b7b80d6e21e410a7734627f" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given directive class, which could be nested deeply within an inner module.</source>
          <target state="translated">내부 모듈 내에 깊이 중첩 될 수있는 지정된 지시문 클래스의 메타 데이터를 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="ef5576d7423a0ff218fb985ae2f5a3473178c7e9" translate="yes" xml:space="preserve">
          <source>Replace metadata for the given pipe class, which could be nested deeply within an inner module.</source>
          <target state="translated">내부 모듈 내에 깊게 중첩 될 수있는 지정된 파이프 클래스의 메타 데이터를 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="1ab0e2799274f4e39a105b05c25a0eaa68fd967d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy in the call to &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; with this &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt;.</source>
          <target state="translated">바꾸기 &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; 의 호출에 전략을 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 이와 &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeafa99e5ba73fa0738a057df4186cf858ff663d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy in the call to &lt;code&gt;forRoot()&lt;/code&gt; with this &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt;.</source>
          <target state="translated">바꾸기 &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; 의 호출에 전략을 &lt;code&gt;forRoot()&lt;/code&gt; 이와 &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d252566134d4acca8e80e102dbd30e6e5cc077a4" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;Http&lt;/code&gt; service with the &lt;a href=&quot;../api/common/http/httpclient&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">바꾸기 &lt;code&gt;Http&lt;/code&gt; 와 서비스 &lt;a href=&quot;../api/common/http/httpclient&quot;&gt; &lt;code&gt;HttpClient&lt;/code&gt; 를&lt;/a&gt; 서비스합니다.</target>
        </trans-unit>
        <trans-unit id="986eace1b762f87dee1e0be0169892a127224ec7" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;getHeroes()&lt;/code&gt; method with the following:</source>
          <target state="translated">바꾸기 &lt;code&gt;getHeroes()&lt;/code&gt; 다음과 방법 :</target>
        </trans-unit>
        <trans-unit id="2148a21a0a5511905d9037dc28562b13c3d17a2d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;imports&lt;/code&gt; array in that section with the following.</source>
          <target state="translated">해당 섹션 의 &lt;code&gt;imports&lt;/code&gt; 배열을 다음으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="aa9de07b8b03587f99be9a6632efdcef141fa44d" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;ng12Hybrid&lt;/code&gt; previously added with the following in &lt;code&gt;protractor-conf.js&lt;/code&gt;:</source>
          <target state="translated">이전에 추가 한 &lt;code&gt;ng12Hybrid&lt;/code&gt; 를 &lt;code&gt;protractor-conf.js&lt;/code&gt; 에서 다음 으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="2fcc06b39a58790c763190d869e9a2be72fb51f7" translate="yes" xml:space="preserve">
          <source>Replace the CLI-generated &lt;code&gt;MessagesComponent&lt;/code&gt; template with the following.</source>
          <target state="translated">CLI 생성 &lt;code&gt;MessagesComponent&lt;/code&gt; 템플리트를 다음으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="0eede105240be9f8f997c5bb228f4b1cb31af548" translate="yes" xml:space="preserve">
          <source>Replace the clone's body with the modified copy.</source>
          <target state="translated">클론의 본문을 수정 된 복사본으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="0b046f796a3f34570eadb0ebbf1cfde44675bc81" translate="yes" xml:space="preserve">
          <source>Replace the contents of &lt;code&gt;selective-preloading-strategy.service.ts&lt;/code&gt; with the following:</source>
          <target state="translated">&lt;code&gt;selective-preloading-strategy.service.ts&lt;/code&gt; 의 내용을 다음 으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="2a9a3c91bae2642e4f7cf0f1a43c872b32c3f3ae" translate="yes" xml:space="preserve">
          <source>Replace the contents of each component with the sample HTML below.</source>
          <target state="translated">각 구성 요소의 내용을 아래 샘플 HTML로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="c16c7b495286df22440c048e266a2251ed768c07" translate="yes" xml:space="preserve">
          <source>Replace the contents of its template with the following:</source>
          <target state="translated">템플리트의 컨텐츠를 다음으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="12d4bc67bb7cc924258c88151a77d9461ee0e02d" translate="yes" xml:space="preserve">
          <source>Replace the default contents of &lt;code&gt;in-memory-data.service.ts&lt;/code&gt; with the following:</source>
          <target state="translated">&lt;code&gt;in-memory-data.service.ts&lt;/code&gt; 의 기본 내용을 다음 으로 바꾸 십시오.</target>
        </trans-unit>
        <trans-unit id="6805b011f5dfde0331dbfd2f3db8b3bdb663ffe8" translate="yes" xml:space="preserve">
          <source>Replace the default file content in these three files as follows:</source>
          <target state="translated">이 세 파일의 기본 파일 내용을 다음과 같이 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="0721d72ec342a357f8227c96061adfbffcb359cf" translate="yes" xml:space="preserve">
          <source>Replace the definition of the &lt;code&gt;heroes&lt;/code&gt; property with a simple declaration.</source>
          <target state="translated">&lt;code&gt;heroes&lt;/code&gt; 속성 의 정의를 간단한 선언으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="3110314b822b125cebd0ee19c84fb4e5a7b7a1d4" translate="yes" xml:space="preserve">
          <source>Replace the generated &lt;code&gt;HeroSearchComponent&lt;/code&gt; class and metadata as follows.</source>
          <target state="translated">생성 된 &lt;code&gt;HeroSearchComponent&lt;/code&gt; 클래스 및 메타 데이터를 다음과 같이 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="6314133dca67c7d1d68822d4be112a01c4763dcb" translate="yes" xml:space="preserve">
          <source>Replace the generated &lt;code&gt;HeroSearchComponent&lt;/code&gt; template with an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and a list of matching search results, as follows.</source>
          <target state="translated">생성 된 &lt;code&gt;HeroSearchComponent&lt;/code&gt; 템플리트를 다음과 같이 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 및 일치하는 검색 결과 목록으로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="bb3c65bcc253f91dc73a4651686e551fb35d3db7" translate="yes" xml:space="preserve">
          <source>Replace the list's &lt;code&gt;ng-repeat&lt;/code&gt; with an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; as &lt;a href=&quot;built-in-directives&quot;&gt;described in the Template Syntax page&lt;/a&gt;. Replace the image tag's &lt;code&gt;ng-src&lt;/code&gt; with a binding to the native &lt;code&gt;src&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives&quot;&gt;템플릿 구문 페이지에 설명 된대로&lt;/a&gt; 목록의 &lt;code&gt;ng-repeat&lt;/code&gt; 를 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 로 바꿉니다 . 이미지 태그의 &lt;code&gt;ng-src&lt;/code&gt; 를 기본 &lt;code&gt;src&lt;/code&gt; 속성에 대한 바인딩으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="8ad17c3063ed9c09e8a85e21cdea4f8779fcc38c" translate="yes" xml:space="preserve">
          <source>Replace the list's &lt;code&gt;ng-repeat&lt;/code&gt; with an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; as &lt;a href=&quot;template-syntax#directives&quot;&gt;described in the Template Syntax page&lt;/a&gt;. Replace the image tag's &lt;code&gt;ng-src&lt;/code&gt; with a binding to the native &lt;code&gt;src&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#directives&quot;&gt;템플리트 구문 페이지에 설명 된대로&lt;/a&gt; 목록의 &lt;code&gt;ng-repeat&lt;/code&gt; 를 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 로 바꾸십시오 . 이미지 태그의 &lt;code&gt;ng-src&lt;/code&gt; 를 기본 &lt;code&gt;src&lt;/code&gt; 속성에 대한 바인딩으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="fa68a4d3a899abae96fde2d07f46cef2bb12c2d9" translate="yes" xml:space="preserve">
          <source>Replaced automatically by the character used for the decimal point.</source>
          <target state="translated">소수점에 사용 된 문자로 자동 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="1616683f51123aa85b938797d7eccf50d989a7ca" translate="yes" xml:space="preserve">
          <source>Replaced by a currency symbol, such as $ or USD.</source>
          <target state="translated">$ 또는 USD와 같은 통화 기호로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="130457de5556d78c45ffb27874aba0a2f4581a51" translate="yes" xml:space="preserve">
          <source>Replaced by a digit (or nothing if there aren't enough).</source>
          <target state="translated">숫자로 대체됩니다 (또는 충분하지 않은 경우 아무것도 없음).</target>
        </trans-unit>
        <trans-unit id="8a24bd69dcffe43e79ed8d92f8bd8122a60cdfa7" translate="yes" xml:space="preserve">
          <source>Replaced by a digit (or zero if there aren't enough digits).</source>
          <target state="translated">숫자로 대체됩니다 (또는 숫자가 충분하지 않으면 0).</target>
        </trans-unit>
        <trans-unit id="2eb9f0197cc01234b225a71b39358c25fb1c1118" translate="yes" xml:space="preserve">
          <source>Replaced by the &quot;grouping&quot; (thousands) separator.</source>
          <target state="translated">&quot;그룹화&quot;(수천) 구분 기호로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="c385e347b2af0a4d67c9b1c9902c4b0b140d1abd" translate="yes" xml:space="preserve">
          <source>Replacement</source>
          <target state="translated">Replacement</target>
        </trans-unit>
        <trans-unit id="09cecdc0f55c3f8652b1bf40533ab20dc411dd8e" translate="yes" xml:space="preserve">
          <source>Replacement:</source>
          <target state="translated">Replacement:</target>
        </trans-unit>
        <trans-unit id="a762fc8ca497d0eaf0d4ff9f762e6237a7894894" translate="yes" xml:space="preserve">
          <source>Replaces a series of whitespace characters in text nodes with a single space. For example, &lt;code&gt;&amp;lt;span&amp;gt;\n some text\n&amp;lt;/span&amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;lt;span&amp;gt; some text &amp;lt;/span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">텍스트 노드의 일련의 공백 문자를 단일 공백으로 바꿉니다. 예를 들어 &lt;code&gt;&amp;lt;span&amp;gt;\n some text\n&amp;lt;/span&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;span&amp;gt; some text &amp;lt;/span&amp;gt;&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="083f882936136e841b75bb75bf2ce35311f333fa" translate="yes" xml:space="preserve">
          <source>Replaces the value for a parameter.</source>
          <target state="translated">매개 변수 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="7065eac5998dcd922bbd9b6cd303c2622dbeb721" translate="yes" xml:space="preserve">
          <source>Replacing a form control value</source>
          <target state="translated">폼 컨트롤 값 바꾸기</target>
        </trans-unit>
        <trans-unit id="09101265ef25b728a1961e52a8992e174c2a4ab1" translate="yes" xml:space="preserve">
          <source>Replacing the array is an efficient way to signal Angular to update the display. When do you replace the array? When the data changes. That's an easy rule to follow in &lt;em&gt;this&lt;/em&gt; example where the only way to change the data is by adding a hero.</source>
          <target state="translated">어레이를 교체하는 것은 디스플레이를 업데이트하도록 Angular에 신호를 보내는 효율적인 방법입니다. 언제 어레이를 교체합니까? 데이터가 변경 될 때 &lt;em&gt;이&lt;/em&gt; 예에서 데이터를 변경하는 유일한 방법은 영웅을 추가하는 것이 쉬운 규칙 입니다.</target>
        </trans-unit>
        <trans-unit id="e8d1aaf14f595b036a6b2526783a74a6a832f9f9" translate="yes" xml:space="preserve">
          <source>Report missing translations</source>
          <target state="translated">누락 된 번역보고</target>
        </trans-unit>
        <trans-unit id="bfc37608c32958ce7ebb03befffc73e782976778" translate="yes" xml:space="preserve">
          <source>Reporting vulnerabilities</source>
          <target state="translated">취약점보고</target>
        </trans-unit>
        <trans-unit id="dad149400947fce310fd5dbf9c4bdcc324dd1b21" translate="yes" xml:space="preserve">
          <source>Reports all values regardless of disabled status. For enabled controls only, the &lt;code&gt;value&lt;/code&gt; property is the best way to get the value of the array.</source>
          <target state="translated">비활성화 된 상태에 관계없이 모든 값을보고합니다. 활성화 된 컨트롤에 대해서만 &lt;code&gt;value&lt;/code&gt; 속성은 배열의 값을 얻는 가장 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="607a1c982ecada24a795ac53eaf7916931b2c8db" translate="yes" xml:space="preserve">
          <source>Reports error data for the control with the given path.</source>
          <target state="translated">주어진 경로를 가진 제어에 대한 오류 데이터를보고합니다.</target>
        </trans-unit>
        <trans-unit id="c326f5ecd3712d6c66ecd6be492d869d3265dbd1" translate="yes" xml:space="preserve">
          <source>Reports false for disabled controls. If you'd like to check for existence in the group only, use &lt;a href=&quot;abstractcontrol#get&quot;&gt;get&lt;/a&gt; instead.</source>
          <target state="translated">비활성화 된 컨트롤에 대해 false를보고합니다. 그룹에만 존재하는지 확인하려면 &lt;a href=&quot;abstractcontrol#get&quot;&gt;get을&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="130125151a1ab7068fbafef6087a7d527a3dce17" translate="yes" xml:space="preserve">
          <source>Reports how many views are currently attached to this container.</source>
          <target state="translated">현재이 컨테이너에 연결된보기 수를보고합니다.</target>
        </trans-unit>
        <trans-unit id="da3cbe5fd35eb520591314bcd9fed642496e6979" translate="yes" xml:space="preserve">
          <source>Reports the control's validation errors. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤의 유효성 검사 오류를보고합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9c853b18375da7f1b792782cf1a6164080078185" translate="yes" xml:space="preserve">
          <source>Reports the current position of the animation.</source>
          <target state="translated">애니메이션의 현재 위치를보고합니다.</target>
        </trans-unit>
        <trans-unit id="390cebcbc2534047ffe6b9a161695ea0a039f265" translate="yes" xml:space="preserve">
          <source>Reports the current state of the location history.</source>
          <target state="translated">위치 기록의 현재 상태를보고합니다.</target>
        </trans-unit>
        <trans-unit id="6ec5ad63919e194aeb01534cbdfbbd15566c337a" translate="yes" xml:space="preserve">
          <source>Reports the number of decimal digits for a given currency. The value depends upon the presence of cents in that particular currency.</source>
          <target state="translated">주어진 통화에 대한 소수 자릿수를보고합니다. 가치는 특정 통화에 센트가 있는지 여부에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5183aae0c0e9784d82b6918057bbb0ad6d371363" translate="yes" xml:space="preserve">
          <source>Reports the update strategy of the &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; (meaning the event on which the control updates itself). Possible values: &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; Default value: &lt;code&gt;'change'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; 의 업데이트 전략을보고합니다 (컨트롤이 자체적으로 업데이트되는 이벤트를 의미). 가능한 값 : &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; 기본값 : &lt;code&gt;'change'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b791b780c1b97bd2b3cb2b99a63e94cd5859bdd5" translate="yes" xml:space="preserve">
          <source>Reports the validation status of the control. Possible values include: 'VALID', 'INVALID', 'DISABLED', and 'PENDING'. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤의 유효성 검사 상태를보고합니다. 가능한 값은 'VALID', 'INVALID', 'DISABLED'및 'PENDING'입니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4e6a8dc9087dcdf544a49971917e5ec9ef85024d" translate="yes" xml:space="preserve">
          <source>Reports the value of the control if it is present, otherwise null.</source>
          <target state="translated">컨트롤 값이 있으면보고합니다. 그렇지 않으면 null입니다.</target>
        </trans-unit>
        <trans-unit id="2063aaf2335423c6b6ba5c9e8bb12f84f3e2bb52" translate="yes" xml:space="preserve">
          <source>Reports whether a control is pending, meaning that that async validation is occurring and errors are not yet available for the input value. If the control is not present, null is returned.</source>
          <target state="translated">제어가 보류 중인지 여부를보고합니다. 즉, 비동기 유효성 검증이 발생하고 입력 값에 대해 오류를 아직 사용할 수 없음을 의미합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5dc3b505ae0f4e63f15bcf3a9f65c74da9dc1054" translate="yes" xml:space="preserve">
          <source>Reports whether the animation has started.</source>
          <target state="translated">애니메이션이 시작되었는지 여부를보고합니다.</target>
        </trans-unit>
        <trans-unit id="301f10951c97f894da3905178db39b3dfb13d94e" translate="yes" xml:space="preserve">
          <source>Reports whether the body includes one or more values for a given parameter.</source>
          <target state="translated">본문에 지정된 매개 변수에 대한 하나 이상의 값이 포함되어 있는지보고합니다.</target>
        </trans-unit>
        <trans-unit id="1e03113ec4e9c771759659e59b1714f7c589c5be" translate="yes" xml:space="preserve">
          <source>Reports whether the control is dirty, meaning that the user has changed the value in the UI. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤이 더티인지 여부를보고합니다. 이는 사용자가 UI에서 값을 변경했음을 의미합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b938ac7dbe724572747d7ae0219802d641f9e0d4" translate="yes" xml:space="preserve">
          <source>Reports whether the control is disabled, meaning that the control is disabled in the UI and is exempt from validation checks and excluded from aggregate values of ancestor controls. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤이 비활성화되어 있는지 여부를보고합니다. 즉, UI에서 컨트롤이 비활성화되고 유효성 검사가 면제되고 상위 컨트롤의 집계 값에서 제외됩니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="66c7322fff3965079eae8ceacb2cb54262945bb4" translate="yes" xml:space="preserve">
          <source>Reports whether the control is enabled, meaning that the control is included in ancestor calculations of validity or value. If the control is not present, null is returned.</source>
          <target state="translated">제어가 사용 가능한지 여부를보고합니다. 즉, 제어가 유효성 또는 값의 상위 계산에 포함되어 있음을 의미합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f53c7ed7c72d51420e991af97be6612aa5487b52" translate="yes" xml:space="preserve">
          <source>Reports whether the control is invalid, meaning that an error exists in the input value. If the control is not present, null is returned.</source>
          <target state="translated">제어가 유효하지 않은지를보고합니다. 즉, 입력 값에 오류가 있음을 의미합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="92296c7a28a248803c800197a6b8019063501540" translate="yes" xml:space="preserve">
          <source>Reports whether the control is pristine, meaning that the user has not yet changed the value in the UI. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤이 깨끗한 지 여부를보고합니다. 이는 사용자가 아직 UI의 값을 변경하지 않았 음을 의미합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7d0652e4ea51938f37feb12c9b89ed5c64f6d53d" translate="yes" xml:space="preserve">
          <source>Reports whether the control is touched, meaning that the user has triggered a &lt;code&gt;blur&lt;/code&gt; event on it. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤이 터치되었는지 여부를보고합니다. 즉, 사용자가 컨트롤에 &lt;code&gt;blur&lt;/code&gt; 이벤트를 트리거했음을 의미 합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1c75120d9ce1eb5a7cceafd7c81bfd10004d10ab" translate="yes" xml:space="preserve">
          <source>Reports whether the control is untouched, meaning that the user has not yet triggered a &lt;code&gt;blur&lt;/code&gt; event on it. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤이 터치되지 않았는지 여부를보고합니다. 즉, 사용자가 아직 &lt;code&gt;blur&lt;/code&gt; 이벤트를 트리거하지 않았 음을 의미 합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2a58091754881f0a0f78a56cf951f8a26f1373fe" translate="yes" xml:space="preserve">
          <source>Reports whether the control is valid. A control is considered valid if no validation errors exist with the current value. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤이 유효한지 여부를보고합니다. 현재 값에 유효성 검사 오류가 없으면 컨트롤이 유효한 것으로 간주됩니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="78154373f7280227f1e52638c470c2c9f272e414" translate="yes" xml:space="preserve">
          <source>Reports whether the control with the given path has the error specified.</source>
          <target state="translated">지정된 경로를 가진 컨트롤에 오류가 지정되어 있는지 여부를보고합니다.</target>
        </trans-unit>
        <trans-unit id="cd4fc64b3caa17d2a2af5f5285b67610e2efba08" translate="yes" xml:space="preserve">
          <source>Reports whether the form submission has been triggered.</source>
          <target state="translated">양식 제출이 트리거되었는지 여부를보고합니다.</target>
        </trans-unit>
        <trans-unit id="3bb2a49d5e909d63439e908826b702ff2681065b" translate="yes" xml:space="preserve">
          <source>Reports whether the map contains a given parameter.</source>
          <target state="translated">지도에 지정된 매개 변수가 포함되어 있는지 여부를보고합니다.</target>
        </trans-unit>
        <trans-unit id="15cf9f706b1d1a3f1f1977496bffd149294f43e5" translate="yes" xml:space="preserve">
          <source>Reports whether this view has been destroyed.</source>
          <target state="translated">이 뷰가 파기되었는지 여부를보고합니다.</target>
        </trans-unit>
        <trans-unit id="aa79f241bf8f91eba2582c7e4b6ea60cbba47ffc" translate="yes" xml:space="preserve">
          <source>Representation of the current platform state.</source>
          <target state="translated">현재 플랫폼 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7fdc9ac4a9bbc92d9a4961b34831cad04cfe6b4b" translate="yes" xml:space="preserve">
          <source>Represents a basic change from a previous to a new value for a single property on a directive instance. Passed as a value in a &lt;a href=&quot;core/simplechanges&quot;&gt;&lt;code&gt;SimpleChanges&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">지시문 인스턴스의 단일 특성에 대한 이전 값에서 새 값으로의 기본 변경 사항을 나타냅니다. &lt;a href=&quot;core/simplechanges&quot;&gt; &lt;code&gt;SimpleChanges&lt;/code&gt; &lt;/a&gt; 객체 의 값으로 &lt;code&gt;ngOnChanges&lt;/code&gt; 후크에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="551f27c388f2931f9bb9dd245d7387369ea71bc0" translate="yes" xml:space="preserve">
          <source>Represents a basic change from a previous to a new value for a single property on a directive instance. Passed as a value in a &lt;a href=&quot;simplechanges&quot;&gt;&lt;code&gt;SimpleChanges&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">지시문 인스턴스의 단일 특성에 대한 이전 값에서 새 값으로의 기본 변경 사항을 나타냅니다. &lt;a href=&quot;simplechanges&quot;&gt; &lt;code&gt;SimpleChanges&lt;/code&gt; &lt;/a&gt; 객체 의 값으로 &lt;code&gt;ngOnChanges&lt;/code&gt; 후크에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="486473b3ba617628c250574c1d165728d5233dc5" translate="yes" xml:space="preserve">
          <source>Represents a component created by a &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the component instance and related objects, and provides the means of destroying the instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 에 의해 작성된 컴퍼넌트를 나타 냅니다. 구성 요소 인스턴스 및 관련 개체에 대한 액세스를 제공하고 인스턴스를 파괴하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dd278233448b84a7691e7c203ac2822054195ea0" translate="yes" xml:space="preserve">
          <source>Represents a component created by a &lt;code&gt;&lt;a href=&quot;core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the component instance and related objects, and provides the means of destroying the instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 에 의해 작성된 컴퍼넌트를 나타 냅니다. 구성 요소 인스턴스 및 관련 개체에 대한 액세스를 제공하고 인스턴스를 파괴하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8d2cbf93c7a81a9b408ca92a9a607ffcce817ef4" translate="yes" xml:space="preserve">
          <source>Represents a container where one or more views can be attached to a component.</source>
          <target state="translated">하나 이상의 뷰를 구성 요소에 연결할 수있는 컨테이너를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1d5f1086c4ad81fc008a9b95e610a870ff70b4b5" translate="yes" xml:space="preserve">
          <source>Represents a meta element.</source>
          <target state="translated">메타 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1e7d3f29e1eaf204f4c8cf8841ba5ae9040d2581" translate="yes" xml:space="preserve">
          <source>Represents a route configuration for the Router service. An array of &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; objects, used in &lt;code&gt;&lt;a href=&quot;router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; and for nested route configurations in &lt;code&gt;&lt;a href=&quot;route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">라우터 서비스의 경로 구성을 나타냅니다. 배열 &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 에서 사용 목적, &lt;code&gt;&lt;a href=&quot;router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; 과 중첩 된 경로 구성을 &lt;code&gt;&lt;a href=&quot;route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c950b32102cc63cbc6edd2be67c146f7233176e3" translate="yes" xml:space="preserve">
          <source>Represents a route configuration for the Router service. An array of &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; objects, used in &lt;code&gt;&lt;a href=&quot;router/router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; and for nested route configurations in &lt;code&gt;&lt;a href=&quot;router/route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">라우터 서비스의 경로 구성을 나타냅니다. 배열 &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 에서 사용 목적, &lt;code&gt;&lt;a href=&quot;router/router#config&quot;&gt;Router.config&lt;/a&gt;&lt;/code&gt; 과 중첩 된 경로 구성을 &lt;code&gt;&lt;a href=&quot;router/route#children&quot;&gt;Route.children&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27d4922d31f87648d26a6ba749cc244f7d215f8a" translate="yes" xml:space="preserve">
          <source>Represents a single URL segment.</source>
          <target state="translated">단일 URL 세그먼트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="80fd182a7b798bdf2cc0f82eabc55aaa8cbb6b1f" translate="yes" xml:space="preserve">
          <source>Represents a time value with hours and minutes.</source>
          <target state="translated">시간과 분으로 시간 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7e2d7df8d52ed5731608badf33df32eb62092397" translate="yes" xml:space="preserve">
          <source>Represents a type that a Component or other object is instances of.</source>
          <target state="translated">Component 또는 다른 객체가 인스턴스 인 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8855d1f7965e1105fd0e2b5a82b018089c830664" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt; in a view container. An &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;embedded view&lt;/a&gt; can be referenced from a component other than the hosting component whose template defines it, or it can be defined independently by a &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">뷰 컨테이너 의 각도 &lt;a href=&quot;../../guide/glossary#view&quot;&gt;뷰&lt;/a&gt; 를 나타냅니다. &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;매립 뷰는&lt;/a&gt; 그 템플릿을 정의하는 호스트 기기 이외의 기기에서 참조 될 수 있거나 그것은 개별적으로 정의 될 수 &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1474620d16464c5b015b9887a5b11cbb356e2fb" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt;, specifically the &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;host view&lt;/a&gt; that is defined by a component. Also serves as the base class that adds destroy methods for &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;embedded views&lt;/a&gt;.</source>
          <target state="translated">각도 &lt;a href=&quot;../../guide/glossary#view&quot;&gt;보기&lt;/a&gt; , 특히 구성 요소에 의해 정의 된 &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;호스트보기를&lt;/a&gt; 나타냅니다. 또한 &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;내장 된 뷰에&lt;/a&gt; 대한 destroy 메소드를 추가하는 기본 클래스 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="aa941ac6d1e32a0b3784ee7ed7a1c43de03ad972" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="translated">Angular &lt;a href=&quot;../../guide/glossary#view&quot;&gt;뷰를 나타&lt;/a&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="de1910de827c29f7f09f1bcbebe02f70c743a697" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt; in a view container. An &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;embedded view&lt;/a&gt; can be referenced from a component other than the hosting component whose template defines it, or it can be defined independently by a &lt;code&gt;&lt;a href=&quot;core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">뷰 컨테이너 의 각도 &lt;a href=&quot;../guide/glossary#view&quot;&gt;뷰&lt;/a&gt; 를 나타냅니다. &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;매립 뷰는&lt;/a&gt; 그 템플릿을 정의하는 호스트 기기 이외의 기기에서 참조 될 수 있거나 그것은 개별적으로 정의 될 수 &lt;code&gt;&lt;a href=&quot;core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05e33238d67a3c70cfb2776240f2a8e4d9bb3146" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt;, specifically the &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;host view&lt;/a&gt; that is defined by a component. Also serves as the base class that adds destroy methods for &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;embedded views&lt;/a&gt;.</source>
          <target state="translated">각도 &lt;a href=&quot;../guide/glossary#view&quot;&gt;보기&lt;/a&gt; , 특히 구성 요소에 의해 정의 된 &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;호스트보기를&lt;/a&gt; 나타냅니다. 또한 &lt;a href=&quot;../guide/glossary#view-tree&quot;&gt;내장 된 뷰에&lt;/a&gt; 대한 destroy 메소드를 추가하는 기본 클래스 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="f06aed64c3d5975e1b2cb073ff993dad4186941d" translate="yes" xml:space="preserve">
          <source>Represents an Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="translated">Angular &lt;a href=&quot;../guide/glossary#view&quot;&gt;뷰를 나타&lt;/a&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="9acd8f3b5eb9ee185f453118cb503e8e597291b7" translate="yes" xml:space="preserve">
          <source>Represents an abstract class &lt;code&gt;T&lt;/code&gt;, if applied to a concrete class it would stop being instantiable.</source>
          <target state="translated">추상 클래스 &lt;code&gt;T&lt;/code&gt; 를 나타냅니다. 구체적인 클래스에 적용하면 인스턴스화가 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="86a343d9d6615393f8c795c8e22af6e371f3a4e6" translate="yes" xml:space="preserve">
          <source>Represents an abstract class &lt;code&gt;T&lt;/code&gt;, if applied to a concrete class it would stop being instantiatable.</source>
          <target state="translated">추상 클래스 &lt;code&gt;T&lt;/code&gt; 를 나타냅니다. 구체적인 클래스에 적용하면 인스턴스화가 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="48b56a345db5d7d9430c6431f732ef6804310f4e" translate="yes" xml:space="preserve">
          <source>Represents an embedded template that can be used to instantiate embedded views. To instantiate embedded views based on a template, use the &lt;code&gt;&lt;a href=&quot;core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; method &lt;code&gt;createEmbeddedView()&lt;/code&gt;.</source>
          <target state="translated">포함 된 뷰를 인스턴스화하는 데 사용할 수있는 포함 된 템플릿을 나타냅니다. 템플릿을 기반으로 포함 된 뷰를 인스턴스화하려면 &lt;code&gt;&lt;a href=&quot;core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; 메서드 &lt;code&gt;createEmbeddedView()&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f097966af7488b335e4597b088c53b538a72dd0" translate="yes" xml:space="preserve">
          <source>Represents an embedded template that can be used to instantiate embedded views. To instantiate embedded views based on a template, use the &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; method &lt;code&gt;createEmbeddedView()&lt;/code&gt;.</source>
          <target state="translated">포함 된 뷰를 인스턴스화하는 데 사용할 수있는 포함 된 템플릿을 나타냅니다. 템플릿을 기반으로 포함 된 뷰를 인스턴스화하려면 &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; 메서드 &lt;code&gt;createEmbeddedView()&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="aca27f8de8d6b5fcbddd63eb28fc2e2f088908ac" translate="yes" xml:space="preserve">
          <source>Represents an instance of an &lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; created by an &lt;code&gt;&lt;a href=&quot;core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the &lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; instance and related objects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; Factory 에 의해 생성 된 NgModule 의 인스턴스를 &lt;code&gt;&lt;a href=&quot;core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 인스턴스 및 관련 개체에 대한 액세스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="271f66d60a76a18a700efa8ee6c6b5b1bdbf4699" translate="yes" xml:space="preserve">
          <source>Represents an instance of an &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; created by an &lt;code&gt;&lt;a href=&quot;ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;. Provides access to the &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; instance and related objects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; Factory 에 의해 생성 된 NgModule 의 인스턴스를 &lt;code&gt;&lt;a href=&quot;ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 인스턴스 및 관련 개체에 대한 액세스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2de76fa8b01fb284aff4f7c8ede2b8d16ccd296d" translate="yes" xml:space="preserve">
          <source>Represents an instance of an NgModule created via a &lt;a href=&quot;core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">NgModuleFactory를 통해 작성된 NgModule의 인스턴스를 &lt;a href=&quot;core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7dc486058809e798bca1587b0959242fe8a34da" translate="yes" xml:space="preserve">
          <source>Represents an instance of an NgModule created via a &lt;a href=&quot;ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">NgModuleFactory를 통해 작성된 NgModule의 인스턴스를 &lt;a href=&quot;ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d6cb74b78c65ce846c31c91186c5cc5f11e71db" translate="yes" xml:space="preserve">
          <source>Represents animation-step timing parameters for an animation step.</source>
          <target state="translated">애니메이션 단계의 애니메이션 단계 타이밍 매개 변수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a3f1412fbf75b8cbde3f7322cdadd1397a72fb42" translate="yes" xml:space="preserve">
          <source>Represents static data associated with a particular route.</source>
          <target state="translated">특정 경로와 관련된 정적 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e75bc834a770ee79b6d16d8584c3340dd16f027d" translate="yes" xml:space="preserve">
          <source>Represents the attributes of an HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element. The element itself is represented by the internal &lt;code&gt;HTMLMetaElement&lt;/code&gt;.</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 요소 의 속성을 나타 냅니다. 요소 자체는 내부 &lt;code&gt;HTMLMetaElement&lt;/code&gt; 로 표현됩니다 .</target>
        </trans-unit>
        <trans-unit id="f4060a1d56ff6f2b872cffc6cb977755e3940386" translate="yes" xml:space="preserve">
          <source>Represents the detached route tree.</source>
          <target state="translated">분리 된 라우트 트리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f953e52d394859f218f7481077ee53e17599d7e8" translate="yes" xml:space="preserve">
          <source>Represents the header configuration options for an HTTP request. Instances are immutable. Modifying methods return a cloned instance with the change. The original object is never changed.</source>
          <target state="translated">HTTP 요청에 대한 헤더 구성 옵션을 나타냅니다. 인스턴스는 변경할 수 없습니다. 메서드를 수정하면 변경 사항이있는 복제 된 인스턴스가 반환됩니다. 원본 객체는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1b16e69f19523c0999ac65f5caacb500d78a393" translate="yes" xml:space="preserve">
          <source>Represents the parsed URL segment group.</source>
          <target state="translated">구문 분석 된 URL 세그먼트 그룹을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="07e78a87630648b457077a03232afd13a392fc9b" translate="yes" xml:space="preserve">
          <source>Represents the parsed URL.</source>
          <target state="translated">구문 분석 된 URL을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0bf1386fee21aa4e6b830340578838186ea317eb" translate="yes" xml:space="preserve">
          <source>Represents the resolved data associated with a particular route.</source>
          <target state="translated">특정 경로와 관련된 해결 된 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="df6be6fb11064cb484baf60135b4f61a41ac4e54" translate="yes" xml:space="preserve">
          <source>Represents the result of matching URLs with a custom matching function.</source>
          <target state="translated">맞춤 검색 기능을 사용하여 URL을 검색 한 결과를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e6a0e0e70e1102979afb5ac921b4a2db49f650f6" translate="yes" xml:space="preserve">
          <source>Represents the state of the router as a tree of activated routes.</source>
          <target state="translated">라우터의 상태를 활성화 된 경로의 트리로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b093c5d5c8cd0d55164578740ffe4e5a1534b39f" translate="yes" xml:space="preserve">
          <source>Represents the state of the router at a moment in time.</source>
          <target state="translated">순간의 라우터 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5e7f377e593ecb8f06ed5b554c2d79625e02c767" translate="yes" xml:space="preserve">
          <source>Represents the version of Angular</source>
          <target state="translated">Angular의 버전을 나타냅니다</target>
        </trans-unit>
        <trans-unit id="e6b1823305f7eafee6970355bd97157b79efcd8d" translate="yes" xml:space="preserve">
          <source>Request and response &lt;a href=&quot;http#intercepting-requests-and-responses&quot;&gt;interception&lt;/a&gt;.</source>
          <target state="translated">요청 및 응답 &lt;a href=&quot;http#intercepting-requests-and-responses&quot;&gt;차단&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c600f4f45cf929630e597d3f3425ddb5644f92e" translate="yes" xml:space="preserve">
          <source>RequestMatch</source>
          <target state="translated">RequestMatch</target>
        </trans-unit>
        <trans-unit id="a8af7e5fc31a5ed7be2900f5271a97a959432adb" translate="yes" xml:space="preserve">
          <source>Requesting a typed response</source>
          <target state="translated">입력 된 응답 요청</target>
        </trans-unit>
        <trans-unit id="41bfccf4d152577e5c73afd0773a7eb88c0cceca" translate="yes" xml:space="preserve">
          <source>Requesting data from a server</source>
          <target state="translated">서버에서 데이터 요청</target>
        </trans-unit>
        <trans-unit id="d0c9caf1362d86293a969759c1f36e96237241d4" translate="yes" xml:space="preserve">
          <source>Requesting data from server</source>
          <target state="translated">서버에서 데이터 요청</target>
        </trans-unit>
        <trans-unit id="5696ae92b7af50f389ead0bece55e4a42ee39659" translate="yes" xml:space="preserve">
          <source>Requesting non-JSON data</source>
          <target state="translated">JSON이 아닌 데이터 요청</target>
        </trans-unit>
        <trans-unit id="770c6b106c177111cd3a507306da91d52608f080" translate="yes" xml:space="preserve">
          <source>Requesting services from a different server (CORS)</source>
          <target state="translated">다른 서버 (CORS)에서 서비스 요청</target>
        </trans-unit>
        <trans-unit id="4c82d8fdf30d6d479b042ed69c68b02fa1724163" translate="yes" xml:space="preserve">
          <source>Requesting this token instead of &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; allows &lt;code&gt;StaticInjector&lt;/code&gt; to be tree-shaken from a project.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 대신이 토큰을 요청 하면 &lt;code&gt;StaticInjector&lt;/code&gt; 가 프로젝트에서 트리 쉐이크 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1461bb3a7497c29f1d65c70191b538b6187c52c4" translate="yes" xml:space="preserve">
          <source>Requests can be configured to get progress event updates.</source>
          <target state="translated">진행 이벤트 업데이트를 받도록 요청을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="165e136a439cbf534f3baa991819a17d83bc02fa" translate="yes" xml:space="preserve">
          <source>Require specific criteria to load components.</source>
          <target state="translated">구성 요소를로드하려면 특정 기준이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b955ba673919dafbc9944e857a8b3742810687fb" translate="yes" xml:space="preserve">
          <source>Required and optional route parameters that go into the route URL.</source>
          <target state="translated">라우트 URL로 이동하는 필수 및 선택적 라우트 매개 변수</target>
        </trans-unit>
        <trans-unit id="d985565d02776ba52975271bd492290606bebb8b" translate="yes" xml:space="preserve">
          <source>Required. A handler for each delivered value. Called zero or more times after execution starts.</source>
          <target state="translated">필수입니다. 전달 된 각 값에 대한 핸들러입니다. 실행이 시작된 후 0 번 이상 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dffd4efe847cacad9a3758c5b1bc2f76cd2f0477" translate="yes" xml:space="preserve">
          <source>RequiredValidator</source>
          <target state="translated">RequiredValidator</target>
        </trans-unit>
        <trans-unit id="95e1209fc4a417c34d8515bb7d33cfc953152ab1" translate="yes" xml:space="preserve">
          <source>Reserve the constructor for simple initialization such as wiring constructor parameters to properties. The constructor shouldn't &lt;em&gt;do anything&lt;/em&gt;. It certainly shouldn't call a function that makes HTTP requests to a remote server as a &lt;em&gt;real&lt;/em&gt; data service would.</source>
          <target state="translated">생성자 매개 변수를 속성에 연결하는 것과 같은 간단한 초기화를 위해 생성자를 예약하십시오. 생성자는 &lt;em&gt;아무것도하지&lt;/em&gt; 않아야합니다 . 원격 서버에 대한 HTTP 요청을 &lt;em&gt;실제로 수행&lt;/em&gt; 하는 함수를 호출해서는 안됩니다.&lt;em&gt;&lt;/em&gt; 데이터 서비스 .</target>
        </trans-unit>
        <trans-unit id="641dd33af252e55fbf2d02ff6e54875190315468" translate="yes" xml:space="preserve">
          <source>Reset the control back to an initial value</source>
          <target state="translated">컨트롤을 초기 값으로 다시 설정</target>
        </trans-unit>
        <trans-unit id="570dd83ba1366fc79dd3f72a855e695ac0d7c9bc" translate="yes" xml:space="preserve">
          <source>Reset the control back to an initial value and disabled</source>
          <target state="translated">컨트롤을 초기 값으로 재설정하고 비활성화</target>
        </trans-unit>
        <trans-unit id="44e960d4a01c3cabbf2a2290d9dab7e5e298e5f3" translate="yes" xml:space="preserve">
          <source>Reset the form group values</source>
          <target state="translated">양식 그룹 값 재설정</target>
        </trans-unit>
        <trans-unit id="dc2279f7a41126be0482109e4521f42ace2bf59a" translate="yes" xml:space="preserve">
          <source>Reset the form group values and disabled status</source>
          <target state="translated">양식 그룹 값 및 비활성화 상태 재설정</target>
        </trans-unit>
        <trans-unit id="4e5bdd91b679b1ec70f689c9f238300ef3430a86" translate="yes" xml:space="preserve">
          <source>Reset the initial test environment, including the default testing module.</source>
          <target state="translated">기본 테스트 모듈을 포함하여 초기 테스트 환경을 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ffc15d474951107d59444895d2f067ab733c1062" translate="yes" xml:space="preserve">
          <source>Reset the providers for the test injector.</source>
          <target state="translated">테스트 인젝터의 제공자를 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="455d58c0c5be486a7812c291057d5a560401d756" translate="yes" xml:space="preserve">
          <source>Reset the values in a form array</source>
          <target state="translated">양식 배열에서 값을 재설정</target>
        </trans-unit>
        <trans-unit id="203a968d1175b2a352ad81ba3a27f9a7f22b1747" translate="yes" xml:space="preserve">
          <source>Reset the values in a form array and the disabled status for the first control</source>
          <target state="translated">양식 배열의 값을 재설정하고 첫 번째 컨트롤의 비활성화 상태</target>
        </trans-unit>
        <trans-unit id="6714fe9d64156c4392146c9d917ba8f032a43a06" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; and all descendants are marked &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and the value of all descendants to null or null maps.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 를 재설정 하고 모든 하위 항목은 &lt;code&gt;pristine&lt;/code&gt; 하고 &lt;code&gt;untouched&lt;/code&gt; 표시됩니다. 값은 null 또는 null 맵으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="110854e98b8b472f54ced4233c9385a3311440a9" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, marks all descendants &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt; and sets the value of all descendants to null.</source>
          <target state="translated">재설정은 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 는 , 마크는 모든 자손은 &lt;code&gt;pristine&lt;/code&gt; 하고 &lt;code&gt;untouched&lt;/code&gt; null로 모든 자손의 값을 설정한다.</target>
        </trans-unit>
        <trans-unit id="5a7287fdfccef00199bf3e4fa1d61dd60eaec2b1" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, marks all descendants are marked &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and the value of all descendants to null.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 을 재설정하고 모든 자손이 &lt;code&gt;pristine&lt;/code&gt; 하고 &lt;code&gt;untouched&lt;/code&gt; 것으로 표시 하고 모든 자손의 값을 null로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e5e0f702aaedc7c6972e3f110daca7a5c9158ba4" translate="yes" xml:space="preserve">
          <source>Resets the AngularJS global.</source>
          <target state="translated">AngularJS 전역을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="24870e46baceb970fb4534665e32255537cb71ad" translate="yes" xml:space="preserve">
          <source>Resets the animation to its initial state.</source>
          <target state="translated">애니메이션을 초기 상태로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="f88538bfab67e9e0c356b616aae226ae3cd472d3" translate="yes" xml:space="preserve">
          <source>Resets the configuration used for navigation and generating links.</source>
          <target state="translated">탐색 및 링크 생성에 사용되는 구성을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="a2e089372be38def35d12038d312cf7cff0d8d32" translate="yes" xml:space="preserve">
          <source>Resets the control with an initial value, or an object that defines the initial value and disabled state.</source>
          <target state="translated">초기 값 또는 초기 값과 비활성화 된 상태를 정의하는 개체로 컨트롤을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="2fc7a98a9e0f85b5443a219c186d8c82560d9d55" translate="yes" xml:space="preserve">
          <source>Resets the control with the provided value if the control is present.</source>
          <target state="translated">컨트롤이있는 경우 제공된 값으로 컨트롤을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="88702bd4bf3be248ab185b7feda16df52da79cb4" translate="yes" xml:space="preserve">
          <source>Resets the control. Abstract method (implemented in sub-classes).</source>
          <target state="translated">컨트롤을 리셋합니다. 추상 메소드 (서브 클래스에서 구현 됨).</target>
        </trans-unit>
        <trans-unit id="47d4885ef343770c40754fe962fcb8b1c56741ff" translate="yes" xml:space="preserve">
          <source>Resets the form control, marking it &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and setting the value to null.</source>
          <target state="translated">&lt;code&gt;pristine&lt;/code&gt; 하고 &lt;code&gt;untouched&lt;/code&gt; 것으로 표시하여 양식 컨트롤을 재설정합니다. 하고 값을 null로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="49b3b6784361c44d2330bc9200cfd2ef02593400" translate="yes" xml:space="preserve">
          <source>Resets the form to an initial value and resets its submitted status.</source>
          <target state="translated">양식을 초기 값으로 재설정하고 제출 된 상태를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="8635aa5d179c8df3b57e1c64dc526685d61d9a09" translate="yes" xml:space="preserve">
          <source>Resets the route configuration used for navigation and generating links.</source>
          <target state="translated">탐색 및 링크 생성에 사용되는 경로 구성을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="dafdd49549d0718ea3f265ce0ffd382b7fb22c19" translate="yes" xml:space="preserve">
          <source>Resolution modifiers</source>
          <target state="translated">해상도 수정 자</target>
        </trans-unit>
        <trans-unit id="968f15ecf972446f10f7693c33b8940e1ebae3cc" translate="yes" xml:space="preserve">
          <source>Resolution modifiers and dependency injection</source>
          <target state="translated">해결 수정 자 및 종속성 주입</target>
        </trans-unit>
        <trans-unit id="14dbb4b1816b9410c76c9b483c0fc6b476ef2cfe" translate="yes" xml:space="preserve">
          <source>Resolution modifiers fall into three categories:</source>
          <target state="translated">해상도 수정자는 세 가지 범주로 분류됩니다.</target>
        </trans-unit>
        <trans-unit id="1630633b28570d9d271f0a3fa1bc084637a5dc40" translate="yes" xml:space="preserve">
          <source>Resolution rules</source>
          <target state="translated">해결 규칙</target>
        </trans-unit>
        <trans-unit id="22899a486866313817a37fb316724b0f36c6dd4c" translate="yes" xml:space="preserve">
          <source>Resolution works upward through the injector hierarchy, so the children of this class must configure their own providers or be prepared for a null result.</source>
          <target state="translated">해결 방법은 인젝터 계층 구조를 통해 위쪽으로 작동하므로이 클래스의 자식은 자신의 공급자를 구성하거나 null 결과를 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="5428d801dbf9cd5af8724c4449af2204a7e74318" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning a body plus additional HTTP information (such as response headers) if provided. If the request specifies an expected body type, the body is converted into the requested type. Otherwise, the body is converted to &lt;code&gt;JSON&lt;/code&gt; by default.</source>
          <target state="translated">제공되는 경우 본문과 추가 HTTP 정보 (예 : 응답 헤더)를 반환하여 요청을 해결하십시오. 요청이 예상 본문 유형을 지정하면 본문이 요청 된 유형으로 변환됩니다. 그렇지 않으면 기본적으로 본문이 &lt;code&gt;JSON&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec9648af2c97466d258a342886ddfc8487fe626a" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning an &lt;code&gt;ErrorEvent&lt;/code&gt; (e.g. simulating a network failure).</source>
          <target state="translated">&lt;code&gt;ErrorEvent&lt;/code&gt; 를 리턴하여 요청을 해결하십시오 (예 : 네트워크 장애 시뮬레이션).</target>
        </trans-unit>
        <trans-unit id="d892b45b3568820b7637e88a421da7e3b9cc005a" translate="yes" xml:space="preserve">
          <source>Resolve vendor packages sourcemaps.</source>
          <target state="translated">공급 업체 패키지 소스 맵을 해결하십시오.</target>
        </trans-unit>
        <trans-unit id="3d067fa7b0e7b927dc5fd2ddc95419173701aa0c" translate="yes" xml:space="preserve">
          <source>ResolveData</source>
          <target state="translated">ResolveData</target>
        </trans-unit>
        <trans-unit id="0c6389bb51f19b41d7378625dbb8022c3608c006" translate="yes" xml:space="preserve">
          <source>ResolveEnd</source>
          <target state="translated">ResolveEnd</target>
        </trans-unit>
        <trans-unit id="61ef5fa48b634f6d35231db0ce74b2fbff781bcd" translate="yes" xml:space="preserve">
          <source>ResolveStart</source>
          <target state="translated">ResolveStart</target>
        </trans-unit>
        <trans-unit id="5774b1f7e7d5d970b2d71e03c9494d4b8f646425" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveFactory</source>
          <target state="translated">ResolvedReflectiveFactory</target>
        </trans-unit>
        <trans-unit id="a33073e17765ddd6137810adff34b548ac033389" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveProvider</source>
          <target state="translated">ResolvedReflectiveProvider</target>
        </trans-unit>
        <trans-unit id="47ecade1ed39b604db07f2373e6d2388db12b9e7" translate="yes" xml:space="preserve">
          <source>Resolvers</source>
          <target state="translated">Resolvers</target>
        </trans-unit>
        <trans-unit id="bfe1a0e94ea746eafa78ec55cb8711bfc94f9062" translate="yes" xml:space="preserve">
          <source>Resolvers run after all &lt;a href=&quot;glossary#route-guard&quot;&gt;route guards&lt;/a&gt; for a route tree have been executed and have succeeded.</source>
          <target state="translated">라우트 트리에 대한 모든 &lt;a href=&quot;glossary#route-guard&quot;&gt;라우트 가드&lt;/a&gt; 가 실행되고 성공한 후에 해석기가 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="2cbbc4d20999a3f6dc525713838585739e52f19f" translate="yes" xml:space="preserve">
          <source>Resolves a provider and instantiates an object in the context of the injector.</source>
          <target state="translated">공급자를 확인하고 인젝터 컨텍스트에서 객체를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="4d65d65ebb9a014dd0b1ffdc2fc18917fd546aa6" translate="yes" xml:space="preserve">
          <source>Resolves an array of providers and creates a child injector from those providers.</source>
          <target state="translated">일련의 제공자를 해결하고 해당 제공자로부터 하위 인젝터를 작성합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
