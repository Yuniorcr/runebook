<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="6d3749bd80b9a3e6b64c10cfb0571b3d16e05599" translate="yes" xml:space="preserve">
          <source>&quot;A Web for Everyone: Designing Accessible User Experiences&quot;, Sarah Horton and Whitney Quesenbery</source>
          <target state="translated">&quot;모두를위한 웹 : 접근 가능한 사용자 경험 디자인&quot;, Sarah Horton 및 Whitney Quesenbery</target>
        </trans-unit>
        <trans-unit id="5c50b2607c1efbc758b3b8a67e9f2ad10ddaed01" translate="yes" xml:space="preserve">
          <source>&quot;Dependency Injection Guide&quot;</source>
          <target state="translated">&quot;종속성 주입 가이드&quot;</target>
        </trans-unit>
        <trans-unit id="e7a85842a00b6aacc572730798eadada0934442b" translate="yes" xml:space="preserve">
          <source>&quot;Inclusive Design Patterns&quot;, Heydon Pickering</source>
          <target state="translated">&quot;포괄적 인 디자인 패턴&quot;, Heydon Pickering</target>
        </trans-unit>
        <trans-unit id="ab11c10fd7d15a2898d0901ba882d89542a9be37" translate="yes" xml:space="preserve">
          <source>&quot;Rules&quot; are like plugins for Bazel. Many rule sets are available. This guide documents the ones maintained by the Angular team at Google.</source>
          <target state="translated">&quot;규칙&quot;은 Bazel의 플러그인과 같습니다. 많은 규칙 세트를 사용할 수 있습니다. 이 가이드는 Google의 Angular 팀이 유지 관리하는 내용을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="bcdda55b307e6851847004e16db0d7e12584bf9c" translate="yes" xml:space="preserve">
          <source>&quot;ci&quot; : Enables analytics and configures reporting for use with Continuous Integration, which uses a common CI user.</source>
          <target state="translated">&quot;ci&quot;: 공통 CI 사용자를 사용하는 Continuous Integration과 함께 사용할 분석을 사용하고보고를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="937e4092ee73c84d3356be089ce5f56627bacefb" translate="yes" xml:space="preserve">
          <source>&quot;enum&quot;: [...]</source>
          <target state="translated">&quot;enum&quot;: [...]</target>
        </trans-unit>
        <trans-unit id="7e8e7fc33d5c436e7537c52c76dfebcb0ad998b9" translate="yes" xml:space="preserve">
          <source>&quot;off&quot; : Disables analytics gathering and reporting for the user.</source>
          <target state="translated">&quot;off&quot;: 사용자에 대한 분석 수집 및보고를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ca686b1a6096f8e22ac6642a7b45176c487fe8e4" translate="yes" xml:space="preserve">
          <source>&quot;on&quot; : Enables analytics gathering and reporting for the user.</source>
          <target state="translated">&quot;on&quot;: 사용자에 대한 분석 수집 및보고를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="786f0b0fdba0e7e6f629657cdbbde92b21c4a610" translate="yes" xml:space="preserve">
          <source>&quot;project&quot; : Sets the default status for the project to the &lt;em&gt;projectSetting&lt;/em&gt; value, which can be any of the other values. The &lt;em&gt;projectSetting&lt;/em&gt; argument is ignored for all other values of &lt;em&gt;settingOrProject&lt;/em&gt;.</source>
          <target state="translated">&quot;project&quot;: 프로젝트의 기본 상태를 &lt;em&gt;projectSetting&lt;/em&gt; 값으로 설정합니다. 다른 값이 될 수 있습니다. &lt;em&gt;projectSetting의&lt;/em&gt; 인수는 다른 모든 값을 무시 &lt;em&gt;settingOrProject&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="994e99cb6f189eacbd02f675504086a8bbfc9058" translate="yes" xml:space="preserve">
          <source>&quot;prompt&quot; : Prompts the user to set the status interactively.</source>
          <target state="translated">&quot;prompt&quot;: 대화식으로 상태를 설정하도록 사용자에게 프롬프트합니다.</target>
        </trans-unit>
        <trans-unit id="a0a48c5ba60b34292a010a747ba3afe52390cef1" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;boolean&quot;</source>
          <target state="translated">&quot;type&quot;: &quot;부울&quot;</target>
        </trans-unit>
        <trans-unit id="da8c898251b2a876444168ecc0b736b5456bf416" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;integer&quot;</source>
          <target state="translated">&quot;type&quot;: &quot;정수&quot;</target>
        </trans-unit>
        <trans-unit id="a204891f50fcebde8aa5636c4aff6e7573aff874" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;number&quot;</source>
          <target state="translated">&quot;type&quot;: &quot;숫자&quot;</target>
        </trans-unit>
        <trans-unit id="cd8406286fc295f8e2be3b72a8910b7199b3b761" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;string&quot;</source>
          <target state="translated">&quot;type&quot;: &quot;문자열&quot;</target>
        </trans-unit>
        <trans-unit id="0627031bc9fb1d2b40046fab6f7e81a7e26f86eb" translate="yes" xml:space="preserve">
          <source>$locationShim</source>
          <target state="translated">$locationShim</target>
        </trans-unit>
        <trans-unit id="ce10375bafe0eeb818e044811bd963e06ce95a54" translate="yes" xml:space="preserve">
          <source>$locationShimProvider</source>
          <target state="translated">$locationShimProvider</target>
        </trans-unit>
        <trans-unit id="ba5b90dcfc66d1ef800fc4c0a78b9c55952c9929" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2010&amp;ndash;2019 Google, Inc.</source>
          <target state="translated">&amp;copy; 2010&amp;ndash;2019 Google, Inc.</target>
        </trans-unit>
        <trans-unit id="621c0e771f3a95ea8fdc9a194602d43711318bf8" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2010&amp;ndash;2020 Google, Inc.</source>
          <target state="translated">&amp;copy; 2010&amp;ndash;2020 Google, Inc.</target>
        </trans-unit>
        <trans-unit id="96fb3b85e55d5e5a85d990f7e5a3b5ec9230b2f5" translate="yes" xml:space="preserve">
          <source>&amp;curren;</source>
          <target state="translated">&amp;curren;</target>
        </trans-unit>
        <trans-unit id="d5eb021d14802dd8de47342f74b9a42820439322" translate="yes" xml:space="preserve">
          <source>&amp;lt;img&amp;gt;</source>
          <target state="translated">&amp;lt;img&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6dac79354b752febcb9f1726dc159b997c286a26" translate="yes" xml:space="preserve">
          <source>&amp;lt;ng-container&amp;gt; to the rescue</source>
          <target state="translated">구조에 &amp;lt;ng- 컨테이너&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dfbfd69bf6b2dc5a5aef007b419287bf654ef7fd" translate="yes" xml:space="preserve">
          <source>&amp;lt;template&amp;gt; tag</source>
          <target state="translated">&amp;lt;템플릿&amp;gt; 태그</target>
        </trans-unit>
        <trans-unit id="fea457e13c3bd58bc056a82d906e4785b66e7a16" translate="yes" xml:space="preserve">
          <source>&amp;mdash;or&amp;mdash;</source>
          <target state="translated">&amp;mdash;or&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="919eee0227d60f9c3f72efb279ccc3425b973414" translate="yes" xml:space="preserve">
          <source>'InjectionToken' objects</source>
          <target state="translated">'InjectionToken'객체</target>
        </trans-unit>
        <trans-unit id="b224a268c0d01e2758c1968ff19885490515a244" translate="yes" xml:space="preserve">
          <source>'any' : Provides a unique instance in each lazy loaded module while all eagerly loaded modules share one instance.</source>
          <target state="translated">'any': 즉시로드 된 모든 모듈이 하나의 인스턴스를 공유하는 동안 지연로드 된 각 모듈에 고유 한 인스턴스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ad3711960582ca257067906627eda39e5a120bc0" translate="yes" xml:space="preserve">
          <source>'disabled' - The initial navigation is not performed. The location listener is set up before the root component gets created. Use if there is a reason to have more control over when the router starts its initial navigation due to some complex initialization logic.</source>
          <target state="translated">'disabled'-초기 탐색이 수행되지 않습니다. 위치 리스너는 루트 컴포넌트가 작성되기 전에 설정됩니다. 복잡한 초기화 로직으로 인해 라우터가 초기 탐색을 시작할 때 더 많은 제어 권한을 가질 이유가있는 경우 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dd2172cc4d18e9a8edc8793eccd563d452337847" translate="yes" xml:space="preserve">
          <source>'disabled'- (Default) Does nothing. Scroll position is maintained on navigation.</source>
          <target state="translated">'disabled'- (기본값) 아무 것도하지 않습니다. 탐색시 스크롤 위치가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="af3c1d6d854d61bdf4467b67d3dc6ecc70779fe6" translate="yes" xml:space="preserve">
          <source>'enabled' - The initial navigation starts before the root component is created. The bootstrap is blocked until the initial navigation is complete. This value is required for &lt;a href=&quot;../../guide/universal&quot;&gt;server-side rendering&lt;/a&gt; to work.</source>
          <target state="translated">'enabled'-루트 구성 요소가 작성되기 전에 초기 탐색이 시작됩니다. 초기 탐색이 완료 될 때까지 부트 스트랩이 차단됩니다. 이 값은 &lt;a href=&quot;../../guide/universal&quot;&gt;서버 측 렌더링&lt;/a&gt; 이 작동하는 데 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="f1eb21ac66655f87afa0c5f7e1b8bde1e55723fd" translate="yes" xml:space="preserve">
          <source>'enabled' - This option is 1:1 replaceable with &lt;code&gt;enabledNonBlocking&lt;/code&gt;.</source>
          <target state="translated">' &lt;code&gt;enabledNonBlocking&lt;/code&gt; 이 옵션은 enabledNonBlocking로 1 : 1 대체 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="40afc865582ac79a8bcafab01414db398c0a63e2" translate="yes" xml:space="preserve">
          <source>'enabled'- Restores the previous scroll position on backward navigation, else sets the position to the anchor if one is provided, or sets the scroll position to [0, 0] (forward navigation). This option will be the default in the future.</source>
          <target state="translated">'enabled'- 뒤로 탐색시 이전 스크롤 위치를 복원합니다. 그렇지 않으면 앵커가 제공된 경우 위치를 앵커로 설정하거나 스크롤 위치를 [0, 0] (앞으로 탐색)으로 설정합니다. 이 옵션은 나중에 기본값이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="683e15786ec34c075240994b6c3bec4b90ae5a43" translate="yes" xml:space="preserve">
          <source>'enabledBlocking' - The initial navigation starts before the root component is created. The bootstrap is blocked until the initial navigation is complete. This value is required for &lt;a href=&quot;../../guide/universal&quot;&gt;server-side rendering&lt;/a&gt; to work.</source>
          <target state="translated">'enabledBlocking'-루트 구성 요소가 생성되기 전에 초기 탐색이 시작됩니다. 초기 탐색이 완료 될 때까지 부트 스트랩이 차단됩니다. 이 값은 &lt;a href=&quot;../../guide/universal&quot;&gt;서버 측 렌더링&lt;/a&gt; 이 작동하는 데 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="83060430e1161ad283e156038507b4dd0ac8980c" translate="yes" xml:space="preserve">
          <source>'enabledNonBlocking' - (default) The initial navigation starts after the root component has been created. The bootstrap is not blocked on the completion of the initial navigation.</source>
          <target state="translated">'enabledNonBlocking'-(기본값) 루트 구성 요소가 생성 된 후 초기 탐색이 시작됩니다. 초기 탐색 완료시 부트 스트랩이 차단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="47c7a13812fd886b36e524f66d855ebf26fd39e9" translate="yes" xml:space="preserve">
          <source>'legacy_disabled'- The initial navigation is not performed. The location listener is set up after the root component gets created. @deprecated since v4</source>
          <target state="translated">'legacy_disabled'- 초기 탐색이 수행되지 않습니다. 위치 컴포넌트는 루트 컴포넌트가 작성된 후에 설정됩니다. v4부터 @deprecated</target>
        </trans-unit>
        <trans-unit id="e4ecabecf888717b1214dca30c4197e7c3a58893" translate="yes" xml:space="preserve">
          <source>'legacy_enabled'- (Default, for compatibility.) The initial navigation starts after the root component has been created. The bootstrap is not blocked until the initial navigation is complete. @deprecated</source>
          <target state="translated">'legacy_enabled'- (기본값, 호환성) 루트 구성 요소가 작성된 후 초기 탐색이 시작됩니다. 부트 스트랩은 초기 탐색이 완료 될 때까지 차단되지 않습니다. @deprecated</target>
        </trans-unit>
        <trans-unit id="0e333fdc00589e75ee6a2f52f658346816b6ea04" translate="yes" xml:space="preserve">
          <source>'platform' : A special singleton platform injector shared by all applications on the page.</source>
          <target state="translated">'platform': 페이지의 모든 애플리케이션에서 공유하는 특수한 싱글 톤 플랫폼 인젝터입니다.</target>
        </trans-unit>
        <trans-unit id="4c410b893364eed4922178f76d02f359759e9a1b" translate="yes" xml:space="preserve">
          <source>'root' : The application-level injector in most apps.</source>
          <target state="translated">'root': 대부분의 앱에서 애플리케이션 수준 인젝터입니다.</target>
        </trans-unit>
        <trans-unit id="2a4dfeeeba28466ee813d6aef442e5d5677c4c5c" translate="yes" xml:space="preserve">
          <source>'top'- Sets the scroll position to x = 0, y = 0 on all navigation.</source>
          <target state="translated">'top'- 모든 탐색에서 스크롤 위치를 x = 0, y = 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="067cdf519b257821ce1e924903c5a511fa00f15b" translate="yes" xml:space="preserve">
          <source>(Deprecated in v4.0.0 use &lt;code&gt;queryParamsHandling&lt;/code&gt; instead) You can also tell the directive to preserve the current query params and fragment:</source>
          <target state="translated">( &lt;code&gt;queryParamsHandling&lt;/code&gt; 에서 더 이상 사용되지 않음 대신 queryParamsHandling 사용) 지시문에 현재 쿼리 매개 변수 및 단편을 유지하도록 지시 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4662724ea5a572943e07b286d8759983b471d29e" translate="yes" xml:space="preserve">
          <source>(Note: The &quot;Checkout&quot; button that we provided in the top-bar component was already configured with a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;/cart&lt;/code&gt;.)</source>
          <target state="translated">(참고 : 상단 바 구성 요소에서 제공 한 &quot;Checkout&quot;버튼은 이미 &lt;code&gt;/cart&lt;/code&gt; 에 대한 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 로 구성되어 있습니다.)</target>
        </trans-unit>
        <trans-unit id="f789c14a9475c42edfbae7ecde94299ffb8562c3" translate="yes" xml:space="preserve">
          <source>(deprecated) &lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;::ng-deep&lt;/code&gt;</source>
          <target state="translated">(더 이상 사용되지 않음) &lt;code&gt;/deep/&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 및 &lt;code&gt;::ng-deep&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21dc2f98182dd959be1c1af286df85e91e1c0388" translate="yes" xml:space="preserve">
          <source>(implemented as class methods)</source>
          <target state="translated">(클래스 메소드로 구현 됨)</target>
        </trans-unit>
        <trans-unit id="a641c7fc0180b3ac58c7b0329a2968efe39e1e04" translate="yes" xml:space="preserve">
          <source>(required) The &lt;code&gt;maxAge&lt;/code&gt; parameter indicates how long responses are allowed to remain in the cache before being considered invalid and evicted. &lt;code&gt;maxAge&lt;/code&gt; is a duration string, using the following unit suffixes:</source>
          <target state="translated">(필수) &lt;code&gt;maxAge&lt;/code&gt; 매개 변수는 유효하지 않고 제거 된 것으로 간주되기 전에 응답이 캐시에 남아있는 시간을 나타냅니다. &lt;code&gt;maxAge&lt;/code&gt; 는 다음 단위 접미사를 사용하는 지속 기간 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c90369e540090901e785ed9bc7495ae3c5924739" translate="yes" xml:space="preserve">
          <source>(required) The maximum number of entries, or responses, in the cache. Open-ended caches can grow in unbounded ways and eventually exceed storage quotas, calling for eviction.</source>
          <target state="translated">(필수) 캐시의 최대 항목 수 또는 응답 수입니다. 개방형 캐시는 무제한으로 증가하고 결국 스토리지 할당량을 초과하여 제거를 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd44775e8acbe8dd02f9747df5d0266f76608874" translate="yes" xml:space="preserve">
          <source>* Figures are for minified and gzipped code, computed with the &lt;a href=&quot;http://closure-compiler.appspot.com/home&quot;&gt;closure compiler&lt;/a&gt;.</source>
          <target state="translated">* 그림은 &lt;a href=&quot;http://closure-compiler.appspot.com/home&quot;&gt;클로저 컴파일러로&lt;/a&gt; 계산 된 축소 및 zip 코드 입니다.</target>
        </trans-unit>
        <trans-unit id="39db08f9fabd3dff73da54580b129dbeaacb6e31" translate="yes" xml:space="preserve">
          <source>*To see APIs removed in version 10, check out this guide on the &lt;a href=&quot;https://v10.angular.io/guide/deprecations#removed&quot;&gt;version 10 docs site&lt;/a&gt;.</source>
          <target state="translated">* 버전 10에서 제거 된 API를 확인하려면 &lt;a href=&quot;https://v10.angular.io/guide/deprecations#removed&quot;&gt;버전 10 문서 사이트&lt;/a&gt; 에서이 가이드를 확인하세요 .</target>
        </trans-unit>
        <trans-unit id="d7229c8bed4657f0c6db46841c4a31171845fb19" translate="yes" xml:space="preserve">
          <source>*ngFor</source>
          <target state="translated">*ngFor</target>
        </trans-unit>
        <trans-unit id="18b7f1c669ffd069cc24e6af9b19bf24144afa1a" translate="yes" xml:space="preserve">
          <source>*ngFor microsyntax</source>
          <target state="translated">마이크로 구문의 경우</target>
        </trans-unit>
        <trans-unit id="0c7aff0d2d2fc8945be404d95bddd086d8d1405a" translate="yes" xml:space="preserve">
          <source>*ngFor with &lt;code&gt;trackBy&lt;/code&gt;</source>
          <target state="translated">* 트랙으로 &lt;code&gt;trackBy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c52c21816b330fc0165a88e889078e7ede64683" translate="yes" xml:space="preserve">
          <source>*ngIf</source>
          <target state="translated">*ngIf</target>
        </trans-unit>
        <trans-unit id="589224456b03aaeff7f6962b355e9872f15ffed8" translate="yes" xml:space="preserve">
          <source>*observe* and *response* types</source>
          <target state="translated">* 관찰 * 및 * 응답 * 유형</target>
        </trans-unit>
        <trans-unit id="81600b4a9234e16342d625af832664a2d020c4f8" translate="yes" xml:space="preserve">
          <source>-OR-</source>
          <target state="translated">-OR-</target>
        </trans-unit>
        <trans-unit id="f6ece903ed54e2e9a29ce75975835257a0082ee3" translate="yes" xml:space="preserve">
          <source>/schematics/ng-add/ folder.</source>
          <target state="translated">/ schematics / ng-add / 폴더</target>
        </trans-unit>
        <trans-unit id="3ff3de0e4c15ab8da5760688f896442dc2310a05" translate="yes" xml:space="preserve">
          <source>0, 23</source>
          <target state="translated">0, 23</target>
        </trans-unit>
        <trans-unit id="fa55b59064510b7d1b64ddcd0bf30168ddf97d4d" translate="yes" xml:space="preserve">
          <source>0. The Application Shell</source>
          <target state="translated">0. 응용 프로그램 셸</target>
        </trans-unit>
        <trans-unit id="45c6167f3ff400ddeacd4f071e09e35de9165fbb" translate="yes" xml:space="preserve">
          <source>0... 59</source>
          <target state="translated">0 ... 59</target>
        </trans-unit>
        <trans-unit id="5d24c1e9066a9c30823fc418b5c93309bfb3853b" translate="yes" xml:space="preserve">
          <source>0... 9</source>
          <target state="translated">0 ... 9</target>
        </trans-unit>
        <trans-unit id="b4194547c8883da7e8ee6006cd8f8e1ef4b99d0b" translate="yes" xml:space="preserve">
          <source>0.1KB</source>
          <target state="translated">0.1KB</target>
        </trans-unit>
        <trans-unit id="5e46029b347f8d32214508e89f4a369e8802d551" translate="yes" xml:space="preserve">
          <source>0.4KB</source>
          <target state="translated">0.4KB</target>
        </trans-unit>
        <trans-unit id="74df59d5b024efd129d979a36e61fcaeffe6d99d" translate="yes" xml:space="preserve">
          <source>00, 23</source>
          <target state="translated">00, 23</target>
        </trans-unit>
        <trans-unit id="ce90b426291d8352838c1f4f1237db2bec8e0344" translate="yes" xml:space="preserve">
          <source>00... 59</source>
          <target state="translated">00 ... 59</target>
        </trans-unit>
        <trans-unit id="8a7116d5e9b8ecb838c1425531adb4201035d4ea" translate="yes" xml:space="preserve">
          <source>00... 99</source>
          <target state="translated">00 ... 99</target>
        </trans-unit>
        <trans-unit id="e39443668f7e9ee9cbadaa88e3b6957fd828c2d5" translate="yes" xml:space="preserve">
          <source>000... 999</source>
          <target state="translated">000 ... 999</target>
        </trans-unit>
        <trans-unit id="9e743d004e04b370e185db323f84180d984bc9f1" translate="yes" xml:space="preserve">
          <source>0002, 0020, 0201, 2017, 20173</source>
          <target state="translated">0002, 0020, 0201, 2017, 20173</target>
        </trans-unit>
        <trans-unit id="03ef6b2e27fff24acacab1d2434af62d7efeb694" translate="yes" xml:space="preserve">
          <source>002, 020, 201, 2017, 20173</source>
          <target state="translated">002, 020, 201, 2017, 20173</target>
        </trans-unit>
        <trans-unit id="ebaf5d2c7058d5d56edf2d0ed45410c353ae16e2" translate="yes" xml:space="preserve">
          <source>01, 12</source>
          <target state="translated">01, 12</target>
        </trans-unit>
        <trans-unit id="2e360210f191362d6a1a4421824a35418bbec30b" translate="yes" xml:space="preserve">
          <source>01... 53</source>
          <target state="translated">01 ... 53</target>
        </trans-unit>
        <trans-unit id="8c5e7c01cac312a5a2318af0e4ab00a06ee69b90" translate="yes" xml:space="preserve">
          <source>02, 20, 01, 17, 73</source>
          <target state="translated">02, 20, 01, 17, 73</target>
        </trans-unit>
        <trans-unit id="cb4c026b88a785c112752167b0e39ad6d2b56873" translate="yes" xml:space="preserve">
          <source>08, 59</source>
          <target state="translated">08, 59</target>
        </trans-unit>
        <trans-unit id="5c47ac55abcff1f04cd14720361b40518b849534" translate="yes" xml:space="preserve">
          <source>09, 12</source>
          <target state="translated">09, 12</target>
        </trans-unit>
        <trans-unit id="6694a4f6470e70837769b36bf43eaf5ddc940941" translate="yes" xml:space="preserve">
          <source>1 character for &lt;code&gt;en-US&lt;/code&gt;. For example: 'S'</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; 의 경우 1 자입니다 . 예를 들어'</target>
        </trans-unit>
        <trans-unit id="0a67d83fa03ded7661b5390c9d072d07b2fe6c41" translate="yes" xml:space="preserve">
          <source>1) &lt;code&gt;&lt;a href=&quot;abstractcontroloptions&quot;&gt;AbstractControlOptions&lt;/a&gt;&lt;/code&gt; object (preferred), which consists of:</source>
          <target state="translated">1) &lt;code&gt;&lt;a href=&quot;abstractcontroloptions&quot;&gt;AbstractControlOptions&lt;/a&gt;&lt;/code&gt; 객체 (선호) :</target>
        </trans-unit>
        <trans-unit id="b315f0efbe638a2ac95d1c0251272bc11710b4db" translate="yes" xml:space="preserve">
          <source>1, 12</source>
          <target state="translated">1, 12</target>
        </trans-unit>
        <trans-unit id="a1b3e6eaaf00e8b2827ff79eafa10db51e15ab2e" translate="yes" xml:space="preserve">
          <source>1-3 minor releases for each major release</source>
          <target state="translated">각 주요 릴리스에 대해 1-3 개의 부 릴리스</target>
        </trans-unit>
        <trans-unit id="86cd4572239007254b63d78ea18dd858c8426ae3" translate="yes" xml:space="preserve">
          <source>1. The Hero Editor</source>
          <target state="translated">1. 영웅 편집자</target>
        </trans-unit>
        <trans-unit id="c0409d939bd9dd7e2c9b334b0d7d6d9d605e89a9" translate="yes" xml:space="preserve">
          <source>1... 5</source>
          <target state="translated">1 ... 5</target>
        </trans-unit>
        <trans-unit id="d40d5d5389292f64d6fa15dfc8b13bb780576d36" translate="yes" xml:space="preserve">
          <source>1... 53</source>
          <target state="translated">1 ... 53</target>
        </trans-unit>
        <trans-unit id="4714d686163abf0fb332134439e02c33f2d985d3" translate="yes" xml:space="preserve">
          <source>1.3KB</source>
          <target state="translated">1.3KB</target>
        </trans-unit>
        <trans-unit id="17ba0791499db908433b80f37c5fbc89b870084b" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="translated">11</target>
        </trans-unit>
        <trans-unit id="8dfedc2e0116a89e95c942d0cdd57fd1c828ad77" translate="yes" xml:space="preserve">
          <source>11, 10, 9 (&quot;compatibility view&quot; mode not supported)</source>
          <target state="translated">11, 10, 9 ( &quot;호환성보기&quot;모드는 지원되지 않음)</target>
        </trans-unit>
        <trans-unit id="3782676f7679f7122df0ae1a0ec413b90a8f6ddb" translate="yes" xml:space="preserve">
          <source>12 months of &lt;em&gt;long-term support (LTS)&lt;/em&gt;, during which only &lt;a href=&quot;releases#lts-fixes&quot;&gt;critical fixes and security patches&lt;/a&gt; are released.</source>
          <target state="translated">12 개월의 &lt;em&gt;장기 지원 (LTS)&lt;/em&gt; .이 기간 동안 &lt;a href=&quot;releases#lts-fixes&quot;&gt;중요한 수정 사항과 보안 패치&lt;/a&gt; 만 릴리스됩니다.</target>
        </trans-unit>
        <trans-unit id="8a69e3b67ebb2180c6c474535759b4edca8b8979" translate="yes" xml:space="preserve">
          <source>12 months of &lt;em&gt;long-term support (LTS)&lt;/em&gt;, during which only critical fixes and security patches are released.</source>
          <target state="translated">중요 수정 사항 및 보안 패치 만 릴리스되는 12 개월의 &lt;em&gt;장기 지원 (LTS)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7e01ec95635eef65b94a88bb60491c2b316909fe" translate="yes" xml:space="preserve">
          <source>12%: Percentage of size relative to baseline. (Not valid for baseline values.)</source>
          <target state="translated">12 % : 기준선 대비 크기의 백분율입니다. (기준값에는 유효하지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="275c4e6c028b548b940dba9695c63a949b372f44" translate="yes" xml:space="preserve">
          <source>123 or 123b: Size in bytes</source>
          <target state="translated">123 또는 123b : 바이트 크기</target>
        </trans-unit>
        <trans-unit id="37eecc59be0bae23d301da90f087c39b5c1dd6c0" translate="yes" xml:space="preserve">
          <source>123kb: Size in kilobytes</source>
          <target state="translated">123kb : 킬로바이트 단위의 크기</target>
        </trans-unit>
        <trans-unit id="14299613ebe2db61442d81b702a081012916a626" translate="yes" xml:space="preserve">
          <source>123mb: Size in megabytes</source>
          <target state="translated">123mb : 메가 바이트 크기</target>
        </trans-unit>
        <trans-unit id="9dfc6db297ab706a6dde3ef9e3c1cd115a87d5fe" translate="yes" xml:space="preserve">
          <source>13.5KB</source>
          <target state="translated">13.5KB</target>
        </trans-unit>
        <trans-unit id="3a4bb318970f2245a6bf569cfb87067273779176" translate="yes" xml:space="preserve">
          <source>14.8KB</source>
          <target state="translated">14.8KB</target>
        </trans-unit>
        <trans-unit id="34274c9930ba079153e31b6b9dea11c17947cc67" translate="yes" xml:space="preserve">
          <source>15 overloads...</source>
          <target state="translated">과부하 ... 15</target>
        </trans-unit>
        <trans-unit id="c6498bd15aa9886259761663b40d9f115db2c8ba" translate="yes" xml:space="preserve">
          <source>17 overloads...</source>
          <target state="translated">17 과부하 ...</target>
        </trans-unit>
        <trans-unit id="8f7dcba5e6bd1b94dbf9b3c6bc0e4e65b191d10d" translate="yes" xml:space="preserve">
          <source>1KB</source>
          <target state="translated">1KB</target>
        </trans-unit>
        <trans-unit id="e96f390db06225c926f546b54f48f849e353c6cf" translate="yes" xml:space="preserve">
          <source>2 characters for &lt;code&gt;en-US&lt;/code&gt;, For example: &quot;Su&quot;</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; 의 경우 2 자 ( 예 : &quot;Su&quot;)</target>
        </trans-unit>
        <trans-unit id="7aa74ee8a16b8bc66d2eabe586f892de61c4f223" translate="yes" xml:space="preserve">
          <source>2 most recent major versions</source>
          <target state="translated">가장 최근의 주요 버전 2 개</target>
        </trans-unit>
        <trans-unit id="5743fba0666d4cc997b5077e84f04b08f73f01ca" translate="yes" xml:space="preserve">
          <source>2) Legacy configuration object, which consists of:</source>
          <target state="translated">2) 레거시 구성 개체 :</target>
        </trans-unit>
        <trans-unit id="3318edaf1a1289aa4d43287f6bbcb4f986bbe8f4" translate="yes" xml:space="preserve">
          <source>2, 20, 201, 2017, 20173</source>
          <target state="translated">2, 20, 201, 2017, 20173</target>
        </trans-unit>
        <trans-unit id="88e6b09b2ee5af635a586fca69cd9d36345f0e34" translate="yes" xml:space="preserve">
          <source>2-digit</source>
          <target state="translated">2-digit</target>
        </trans-unit>
        <trans-unit id="a14caa417d57d9712d84cc06095d439a7f505130" translate="yes" xml:space="preserve">
          <source>2. Display a Heroes List</source>
          <target state="translated">2. 영웅 목록 표시</target>
        </trans-unit>
        <trans-unit id="35249fad6027e3cc46a6dc8252fb3b2178052f1f" translate="yes" xml:space="preserve">
          <source>27.4KB</source>
          <target state="translated">27.4KB</target>
        </trans-unit>
        <trans-unit id="89120eb623c3c0f77c16adde49525acc8c653133" translate="yes" xml:space="preserve">
          <source>3 characters for &lt;code&gt;en-US&lt;/code&gt;. For example: 'Sun'</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; 의 경우 3 자입니다 . 예를 들면 다음과 같습니다. 'Sun'</target>
        </trans-unit>
        <trans-unit id="ee9a1d19da905defe08ed5f2146607883c3fd3a5" translate="yes" xml:space="preserve">
          <source>3 overloads...</source>
          <target state="translated">3 과부하 ...</target>
        </trans-unit>
        <trans-unit id="d0bc0f51587fe17d330a5988db6005bc81f12bfc" translate="yes" xml:space="preserve">
          <source>3. Master/Detail Components</source>
          <target state="translated">3. 마스터 / 세부 구성 요소</target>
        </trans-unit>
        <trans-unit id="a405f03c52e50a767eac85fc4df296b80c6163b0" translate="yes" xml:space="preserve">
          <source>3rd party libraries might implement their hooks as well in order to give developers more control over how these libraries are used.</source>
          <target state="translated">써드 파티 라이브러리는 개발자가 이러한 라이브러리 사용 방법을보다 잘 제어 할 수 있도록 후크를 구현할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="10c1c1c848d6a9b98e9b795f5d85b5c3424baef2" translate="yes" xml:space="preserve">
          <source>4. Services</source>
          <target state="translated">4. 서비스</target>
        </trans-unit>
        <trans-unit id="0996bd1dc3a23f0c15c35dedab68175adf3e3968" translate="yes" xml:space="preserve">
          <source>4KB</source>
          <target state="translated">4KB</target>
        </trans-unit>
        <trans-unit id="88001b036a01e6e97488eb05f5aea0a783e6de75" translate="yes" xml:space="preserve">
          <source>5. Routing</source>
          <target state="translated">5. 라우팅</target>
        </trans-unit>
        <trans-unit id="ec0617dcd1d02c43e8fc73a5c155a66428cb17cc" translate="yes" xml:space="preserve">
          <source>50 pixels: &lt;code&gt;'50px'&lt;/code&gt;</source>
          <target state="translated">50 픽셀 : '50 픽셀 &lt;code&gt;'50px'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2abb01c1a6ac728c08be44b5affc661f50b7047e" translate="yes" xml:space="preserve">
          <source>6 months of &lt;em&gt;active support&lt;/em&gt;, during which regularly-scheduled updates and patches are released.</source>
          <target state="translated">정기적으로 예약 된 업데이트 및 패치가 릴리스되는 6 개월의 &lt;em&gt;적극적인 지원&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0cb37d5bfa34fcbe3b6c21945d8e6ee67719cdc3" translate="yes" xml:space="preserve">
          <source>6. HTTP</source>
          <target state="translated">6. HTTP</target>
        </trans-unit>
        <trans-unit id="31e7acc1792355a1ec505553c3df078c67673904" translate="yes" xml:space="preserve">
          <source>8, 59</source>
          <target state="translated">8, 59</target>
        </trans-unit>
        <trans-unit id="642dc82a986ccd60d9a3e4de64ce9e9c31b74947" translate="yes" xml:space="preserve">
          <source>9, 12</source>
          <target state="translated">9, 12</target>
        </trans-unit>
        <trans-unit id="bed8a49f19081888db48d9ad66d2983200ce2268" translate="yes" xml:space="preserve">
          <source>:enter and :leave aliases</source>
          <target state="translated">: enter 및 : leave aliases</target>
        </trans-unit>
        <trans-unit id="0b86a5defb42589cdacc5218eed5e279918cf2e8" translate="yes" xml:space="preserve">
          <source>:host</source>
          <target state="translated">:host</target>
        </trans-unit>
        <trans-unit id="8a50308174b22c7fb696f2e7b878835fcb625235" translate="yes" xml:space="preserve">
          <source>:host-context</source>
          <target state="translated">:host-context</target>
        </trans-unit>
        <trans-unit id="5cec73409d02a5f4fa1b7f41fd75585c88ad2150" translate="yes" xml:space="preserve">
          <source>:increment and :decrement in transitions</source>
          <target state="translated">: 증가 및 증감</target>
        </trans-unit>
        <trans-unit id="f6dddaf64cf16d0cea587eefd325043e84c350f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&quot;종속성 주입 안내서&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aacb3cbc01671a427fbec49139eff3bace05fabb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/dependency-injection-in-action#skip&quot;&gt;Dependency Injection guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guide/dependency-injection-in-action#skip&quot;&gt;의존성 주입 가이드&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f707871619915d5afbe73009a8689745c9d774b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/dependency-injection-providers&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guide/dependency-injection-providers&quot;&gt;&quot;종속성 주입 가이드&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a8fa339a8a8901b6b73151f9ce084bd7ef5a91cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/lifecycle-hooks#onchanges&quot;&gt;Lifecycle Hooks&lt;/a&gt; guide</source>
          <target state="translated">&lt;a href=&quot;../../guide/lifecycle-hooks#onchanges&quot;&gt;수명주기 후크&lt;/a&gt; 안내서</target>
        </trans-unit>
        <trans-unit id="81583fb24c996b4730642a8f23be9c267a025da3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/router&quot;&gt;Routing and Navigation Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guide/router&quot;&gt;라우팅 및 탐색 안내서&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b438af7d016d4b2b775f636010283ee2c321a9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/router&quot;&gt;Routing and Navigation guide&lt;/a&gt; for an overview of how the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service should be used.</source>
          <target state="translated">&lt;a href=&quot;../../guide/router&quot;&gt;&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 서비스를 사용 하는 방법에 대한 개요는 라우팅 및 탐색 가이드 를 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="014e67c8f99cffda83d2c8964c54d1046c5fa264" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/router&quot;&gt;Routing and Navigation&lt;/a&gt; for an overview of how the router service should be used.</source>
          <target state="translated">&lt;a href=&quot;../../guide/router&quot;&gt;&lt;/a&gt;라우터 서비스 사용 방법에 대한 개요는 라우팅 및 탐색 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2cbb6f762a6932c77bc5dd41d16fda1140d8fce5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/router-tutorial-toh#named-outlets&quot;&gt;Routing tutorial&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guide/router-tutorial-toh#named-outlets&quot;&gt;라우팅 튜토리얼&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fee800045c3edcf896ed20aa24ec4e8c97fdf91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;. (Standard animation support does not require polyfills.)</source>
          <target state="translated">&lt;a href=&quot;../api/animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt; . 표준 애니메이션 지원에는 폴리 필이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8573b198152e557b075b7cca35e3c6de30c2e6c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/animations/group&quot;&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/a&gt; runs multiple animation steps in parallel.</source>
          <target state="translated">&lt;a href=&quot;../api/animations/group&quot;&gt; &lt;code&gt;group()&lt;/code&gt; &lt;/a&gt; 은 여러 애니메이션 단계를 병렬로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="4270e3550c58b3b1ffc170d164e40529d838adc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/currencypipe&quot;&gt;&lt;code&gt;CurrencyPipe&lt;/code&gt;&lt;/a&gt;: Transforms a number to a currency string, formatted according to locale rules.</source>
          <target state="translated">&lt;a href=&quot;../api/common/currencypipe&quot;&gt; &lt;code&gt;CurrencyPipe&lt;/code&gt; &lt;/a&gt; : 로케일 규칙에 따라 형식이 지정된 통화 문자열로 숫자를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="33dcd32fa5a714e53b99456082ebddcc4b24d596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/currencypipe&quot;&gt;&lt;code&gt;CurrencyPipe&lt;/code&gt;&lt;/a&gt;: Transforms a number to a currency string.</source>
          <target state="translated">&lt;a href=&quot;../api/common/currencypipe&quot;&gt; &lt;code&gt;CurrencyPipe&lt;/code&gt; &lt;/a&gt; : 숫자를 통화 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b3e8e36dab0f340fda7ba761c5683b6133bc39de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/datepipe&quot;&gt;&lt;code&gt;DatePipe&lt;/code&gt;&lt;/a&gt;: Formats a date value according to locale rules.</source>
          <target state="translated">&lt;a href=&quot;../api/common/datepipe&quot;&gt; &lt;code&gt;DatePipe&lt;/code&gt; &lt;/a&gt; : 로케일 규칙에 따라 날짜 값의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="155a124a389e92ed877bf047c2847cd685ace62d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/datepipe&quot;&gt;&lt;code&gt;DatePipe&lt;/code&gt;&lt;/a&gt;: Formats a date value.</source>
          <target state="translated">&lt;a href=&quot;../api/common/datepipe&quot;&gt; &lt;code&gt;DatePipe&lt;/code&gt; &lt;/a&gt; : 날짜 값의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="826991535afc1fd71b54edf98d5ccd83406db8a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;&lt;code&gt;DecimalPipe&lt;/code&gt;&lt;/a&gt;: Transforms a number into a decimal number string.</source>
          <target state="translated">&lt;a href=&quot;../api/common/decimalpipe&quot;&gt; &lt;code&gt;DecimalPipe&lt;/code&gt; &lt;/a&gt; : 숫자를 10 진수 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="fdfe09f1beeb8d0c6304ae9aab4b7c2b3b4b7327" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;&lt;code&gt;DecimalPipe&lt;/code&gt;&lt;/a&gt;: Transforms a number into a string with a decimal point, formatted according to locale rules.</source>
          <target state="translated">&lt;a href=&quot;../api/common/decimalpipe&quot;&gt; &lt;code&gt;DecimalPipe&lt;/code&gt; &lt;/a&gt; : 로케일 규칙에 따라 형식이 지정된 소수점이있는 문자열로 숫자를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="15195a55d124fc70aad26de00cee6d7d4c2568b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/lowercasepipe&quot;&gt;&lt;code&gt;LowerCasePipe&lt;/code&gt;&lt;/a&gt;: Transforms text to all lower case.</source>
          <target state="translated">&lt;a href=&quot;../api/common/lowercasepipe&quot;&gt; &lt;code&gt;LowerCasePipe&lt;/code&gt; &lt;/a&gt; : 텍스트를 모두 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="fa1e5bbcad569e8cbfb7cccce8d190063e7e5d3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/ngclass&quot;&gt;NgClass&lt;/a&gt; on SVG elements</source>
          <target state="translated">&lt;a href=&quot;../api/common/ngclass&quot;&gt;&lt;/a&gt;SVG 요소의 NgClass</target>
        </trans-unit>
        <trans-unit id="582d2309432c34bf36d0925d925e110ad9920f48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/percentpipe&quot;&gt;&lt;code&gt;PercentPipe&lt;/code&gt;&lt;/a&gt;: Transforms a number to a percentage string, formatted according to locale rules.</source>
          <target state="translated">&lt;a href=&quot;../api/common/percentpipe&quot;&gt; &lt;code&gt;PercentPipe&lt;/code&gt; &lt;/a&gt; : 로케일 규칙에 따라 형식이 지정된 백분율 문자열로 숫자를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f56faf86765f4eba06f511d2a70fce31b294bfae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/percentpipe&quot;&gt;&lt;code&gt;PercentPipe&lt;/code&gt;&lt;/a&gt;: Transforms a number to a percentage string.</source>
          <target state="translated">&lt;a href=&quot;../api/common/percentpipe&quot;&gt; &lt;code&gt;PercentPipe&lt;/code&gt; &lt;/a&gt; : 숫자를 백분율 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1c5eec97f3fa34ef3fd30ddfd21397c2eb515c6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;&lt;code&gt;UpperCasePipe&lt;/code&gt;&lt;/a&gt;: Transforms text to all upper case.</source>
          <target state="translated">&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt; &lt;code&gt;UpperCasePipe&lt;/code&gt; &lt;/a&gt; : 텍스트를 모두 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="c834054a3fb097f8173b32d9786bf4ebf5f02cbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/app_bootstrap_listener&quot;&gt;APP_BOOTSTRAP_LISTENER&lt;/a&gt;: Callback is invoked for each component that is bootstrapped. The handler function receives the ComponentRef instance of the bootstrapped component.</source>
          <target state="translated">&lt;a href=&quot;../api/core/app_bootstrap_listener&quot;&gt;APP_BOOTSTRAP_LISTENER&lt;/a&gt; : 부트 스트랩 된 각 구성 요소에 대해 콜백이 호출됩니다. 핸들러 함수는 부트 스트랩 된 구성 요소의 ComponentRef 인스턴스를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="0d8bc08983ea37037fe4e793ca546e5f098d5f53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/app_initializer&quot;&gt;APP_INITIALIZER&lt;/a&gt;: Callback is invoked before an app is initialized. All registered initializers can optionally return a Promise. All initializer functions that return Promises must be resolved before the application is bootstrapped. If one of the initializers fails to resolves, the application is not bootstrapped.</source>
          <target state="translated">&lt;a href=&quot;../api/core/app_initializer&quot;&gt;APP_INITIALIZER&lt;/a&gt; : 앱이 초기화되기 전에 콜백이 호출됩니다. 등록 된 모든 초기화 프로그램은 선택적으로 Promise를 반환 할 수 있습니다. 약속을 반환하는 모든 이니셜 라이저 기능은 응용 프로그램을 부트 스트랩하기 전에 해결해야합니다. 이니셜 라이저 중 하나가 해결되지 않으면 응용 프로그램이 부트 스트랩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f28366f7261d9ec518df08a6195ecc04f4a841de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/platform_initializer&quot;&gt;PLATFORM_INITIALIZER&lt;/a&gt;: Callback is invoked when a platform is initialized.</source>
          <target state="translated">&lt;a href=&quot;../api/core/platform_initializer&quot;&gt;PLATFORM_INITIALIZER&lt;/a&gt; : 플랫폼이 초기화 될 때 콜백이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="299d74d15d48895eb60ed7f48123896143a7f751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/renderertype2&quot;&gt;&lt;code&gt;RendererType2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/core/renderer2&quot;&gt;&lt;code&gt;Renderer2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../api/core/renderertype2&quot;&gt; &lt;code&gt;RendererType2&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../api/core/renderer2&quot;&gt; &lt;code&gt;Renderer2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5083f2fd842f8324cc53bdfdf74f14cc574e341" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt; contains two &lt;a href=&quot;../api/router/activatedroute#properties&quot;&gt;properties&lt;/a&gt; that are less capable than their replacements and may be deprecated in a future Angular version.</source>
          <target state="translated">&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt; 에는 대체 기능보다 성능이 떨어지고 향후 Angular 버전에서 더 이상 사용되지 않을 수있는 두 가지 &lt;a href=&quot;../api/router/activatedroute#properties&quot;&gt;속성&lt;/a&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4be41f3f56effcfd94c070e24e8be5596d5c02b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/canactivate&quot;&gt;&lt;code&gt;CanActivate&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;to&lt;/em&gt; a route.</source>
          <target state="translated">&lt;a href=&quot;../api/router/canactivate&quot;&gt; &lt;code&gt;CanActivate&lt;/code&gt; 는&lt;/a&gt; 탐색을 중재하기&lt;em&gt; 로&lt;/em&gt; 경로.</target>
        </trans-unit>
        <trans-unit id="44e9012484c409afc19a9c5c28397276aca30572" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;&lt;code&gt;CanActivateChild&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;to&lt;/em&gt; a child route.</source>
          <target state="translated">&lt;a href=&quot;../api/router/canactivatechild&quot;&gt; &lt;code&gt;CanActivateChild&lt;/code&gt; &lt;/a&gt; 는 자식 경로&lt;em&gt; 로&lt;/em&gt; 의탐색을 중재합니다.</target>
        </trans-unit>
        <trans-unit id="dd0030140bd17105104bea5963dca6677e89598d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/candeactivate&quot;&gt;&lt;code&gt;CanDeactivate&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;away&lt;/em&gt; from the current route.</source>
          <target state="translated">&lt;a href=&quot;../api/router/candeactivate&quot;&gt; &lt;code&gt;CanDeactivate&lt;/code&gt; 는&lt;/a&gt; 탐색을 중재하는&lt;em&gt; 떨어진&lt;/em&gt; 현재의 경로에서.</target>
        </trans-unit>
        <trans-unit id="44c78b72a556382ef979b8f8e3280089fd298078" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/canload&quot;&gt;&lt;code&gt;CanLoad&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;to&lt;/em&gt; a feature module loaded &lt;em&gt;asynchronously&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/router/canload&quot;&gt; &lt;code&gt;CanLoad&lt;/code&gt; &lt;/a&gt;&lt;em&gt;비동기 적으로&lt;/em&gt; 로드 된 기능 모듈&lt;em&gt; 에&lt;/em&gt; 대한탐색을 중재하기 위해 CanLoad .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae906237bfe53f715ce6968dcc69d628ac5c19ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/resolve&quot;&gt;&lt;code&gt;Resolve&lt;/code&gt;&lt;/a&gt; to perform route data retrieval &lt;em&gt;before&lt;/em&gt; route activation.</source>
          <target state="translated">&lt;a href=&quot;../api/router/resolve&quot;&gt; &lt;code&gt;Resolve&lt;/code&gt; &lt;/a&gt;경로 활성화&lt;em&gt; 전에&lt;/em&gt; 경로데이터 검색을 수행하도록 해결하십시오 .</target>
        </trans-unit>
        <trans-unit id="e48e66e8e926744693eb1317b9b0ff2220dfc664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/router#events&quot;&gt;&lt;code&gt;Router.events&lt;/code&gt;&lt;/a&gt; provides events as observables. You can use the &lt;code&gt;&lt;a href=&quot;../api/core/querylist#filter&quot;&gt;filter()&lt;/a&gt;&lt;/code&gt; operator from RxJS to look for events of interest, and subscribe to them in order to make decisions based on the sequence of events in the navigation process. Here's an example:</source>
          <target state="translated">&lt;a href=&quot;../api/router/router#events&quot;&gt; &lt;code&gt;Router.events&lt;/code&gt; &lt;/a&gt; 는 이벤트를 관찰 가능 항목으로 제공합니다. RxJS의 &lt;code&gt;&lt;a href=&quot;../api/core/querylist#filter&quot;&gt;filter()&lt;/a&gt;&lt;/code&gt; 연산자를사용하여관심있는 이벤트를 찾고이를 구독하여 탐색 프로세스의 이벤트 순서에 따라 결정을 내릴 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f3f2a65d1c2a3571de01cd253bc7cf1524325cce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/router#events&quot;&gt;&lt;code&gt;Router.events&lt;/code&gt;&lt;/a&gt; provides events as observables. You can use the &lt;code&gt;filter()&lt;/code&gt; operator from RxJS to look for events of interest, and subscribe to them in order to make decisions based on the sequence of events in the navigation process. Here's an example:</source>
          <target state="translated">&lt;a href=&quot;../api/router/router#events&quot;&gt; &lt;code&gt;Router.events&lt;/code&gt; &lt;/a&gt; 는 이벤트를 관찰 가능 항목으로 제공합니다. RxJS의 &lt;code&gt;filter()&lt;/code&gt; 연산자를사용하여관심있는 이벤트를 찾고, 탐색 프로세스에서 이벤트 순서에 따라 결정을 내리기 위해 구독 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0a9c1d6176cd38403ad97248fcbeb48a65269cd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/pipes&quot;&gt;Pipes&lt;/a&gt; are a good way to format strings, currency amounts, dates and other display data. Angular ships with several built-in pipes and you can create your own.</source>
          <target state="translated">&lt;a href=&quot;../guide/pipes&quot;&gt;파이프&lt;/a&gt; 는 문자열, 통화 금액, 날짜 및 기타 표시 데이터를 형식화하는 좋은 방법입니다. 여러 개의 파이프가 내장 된 앵귤러 선박으로 나만의 파이프를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd1f8cf50210c29c5c60cffc598bf7f18b9c4881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;accessibility&quot;&gt;Accessibility&lt;/a&gt;: Make your app accessible to all users.</source>
          <target state="translated">&lt;a href=&quot;accessibility&quot;&gt;접근성&lt;/a&gt; : 모든 사용자가 앱에 액세스 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="427270ef30066b7f81d786950fbce26b2fe58bf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activationend&quot;&gt;ActivationEnd&lt;/a&gt;: When the router finishes activating a route.</source>
          <target state="translated">&lt;a href=&quot;activationend&quot;&gt;ActivationEnd&lt;/a&gt; : 라우터가 경로 활성화를 마쳤을 때.</target>
        </trans-unit>
        <trans-unit id="596bed66f84e7f9480ca93487b750fdbc0130314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activationstart&quot;&gt;ActivationStart&lt;/a&gt;: When the router begins activating a route.</source>
          <target state="translated">&lt;a href=&quot;activationstart&quot;&gt;ActivationStart&lt;/a&gt; : 라우터가 경로 활성화를 시작할 때.</target>
        </trans-unit>
        <trans-unit id="ef68472e39dff6414fc1268920a86b23e8dba258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;animations&quot;&gt;Animations&lt;/a&gt;: Use Angular's animation library to animate component behavior without deep knowledge of animation techniques or CSS.</source>
          <target state="translated">&lt;a href=&quot;animations&quot;&gt;애니메이션&lt;/a&gt; : Angular의 애니메이션 라이브러리를 사용하여 애니메이션 기술이나 CSS에 대한 깊은 지식없이 구성 요소 동작에 애니메이션을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae8e0ce43424269b5b712cda94d75bdf8b6f0d8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;aot-compiler&quot;&gt;Ahead-of-Time (AOT) Compilation&lt;/a&gt;: pre-compiles Angular component templates.</source>
          <target state="translated">&lt;a href=&quot;aot-compiler&quot;&gt;AOT (Ahead-of-Time) 컴파일&lt;/a&gt; : 각도 구성 요소 템플릿을 사전 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="ecb14d061a328ab5f89a0d91b765fce465f1d12f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;aot-compiler&quot;&gt;Compilation&lt;/a&gt;: Angular provides just-in-time (JIT) compilation for the development environment, and ahead-of-time (AOT) compilation for the production environment.</source>
          <target state="translated">&lt;a href=&quot;aot-compiler&quot;&gt;컴파일&lt;/a&gt; : Angular는 개발 환경을위한 JIT (Just-In-Time) 컴파일 및 프로덕션 환경을위한 AOT (Pre-of-Time) 컴파일을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a7c3de0094819275678d9a912ae284cbf3298fd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;aot-metadata-errors#expression-form-not-supported&quot;&gt;Expression form not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-local-symbol&quot;&gt;Reference to a local (non-exported) symbol&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#only-initialized-variables&quot;&gt;Only initialized variables and constants&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-non-exported-class&quot;&gt;Reference to a non-exported class&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-non-exported-function&quot;&gt;Reference to a non-exported function&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#function-calls-not-supported&quot;&gt;Function calls are not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#destructured-variable-not-supported&quot;&gt;Destructured variable or constant not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#could-not-resolve-type&quot;&gt;Could not resolve type&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#name-expected&quot;&gt;Name expected&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#unsupported-enum-member-name&quot;&gt;Unsupported enum member name&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#tagged-template-expressions-not-supported&quot;&gt;Tagged template expressions are not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#symbol-reference-expected&quot;&gt;Symbol reference expected&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;aot-metadata-errors#expression-form-not-supported&quot;&gt;지원되지 않는 식 양식 &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-local-symbol&quot;&gt;로컬 (내보내기되지 않은) 기호 &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-non-exported-class&quot;&gt;참조 &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#only-initialized-variables&quot;&gt;초기화 된 변수 및 상수 만 &lt;/a&gt;내보내 지지 않은 클래스 &lt;a href=&quot;aot-metadata-errors#reference-to-a-non-exported-function&quot;&gt;참조 내보내 &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#function-calls-not-supported&quot;&gt;지지 않은 &lt;/a&gt;함수 참조 함수 호출이 지원되지 않습니다. &lt;a href=&quot;aot-metadata-errors#destructured-variable-not-supported&quot;&gt;구조화 된 변수 또는 상수가 지원 &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#could-not-resolve-type&quot;&gt;되지 않습니다. 유형 &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#name-expected&quot;&gt;이름을 확인할 &lt;/a&gt;수 없습니다. &lt;a href=&quot;aot-metadata-errors#unsupported-enum-member-name&quot;&gt;지원되지 않는 열거 형 멤버 이름 &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#tagged-template-expressions-not-supported&quot;&gt;태그가 지정된 템플릿 표현식이 지원되지 않습니다. &lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#symbol-reference-expected&quot;&gt;심볼 참조가 필요합니다&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd5d6f214bd4347a298f7d37b98f9a1d189a25b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applicationref#is-stable-examples&quot;&gt;Usage notes&lt;/a&gt; for examples and caveats when using this API.</source>
          <target state="translated">&lt;a href=&quot;applicationref#is-stable-examples&quot;&gt;&lt;/a&gt;이 API를 사용할 때 예제 및주의 사항에 대한 사용법 참고 사항.</target>
        </trans-unit>
        <trans-unit id="a8dea144daf202527bfbf75cb50a02ad305ec0e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-binding&quot;&gt;Attribute, class, and style bindings&lt;/a&gt;&amp;mdash;set the value of attributes, classes, and styles.</source>
          <target state="translated">&lt;a href=&quot;attribute-binding&quot;&gt;속성, 클래스 및 스타일 바인딩&lt;/a&gt; &amp;mdash; 속성, 클래스 및 스타일 의 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="edfa6228eeb428f9ac0ed66e15bdbf235e8f212f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#apply-directive&quot;&gt;Apply the directive&lt;/a&gt; to an element in a template.</source>
          <target state="translated">&lt;a href=&quot;attribute-directives#apply-directive&quot;&gt;지시문&lt;/a&gt; 을 템플릿의 요소에 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="327abf8f348f2f3a3cd2a8a639673e9afd621b7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#bindings&quot;&gt;&lt;strong&gt;Bind&lt;/strong&gt; values to the directive&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;attribute-directives#bindings&quot;&gt;&lt;strong&gt;&lt;/strong&gt;지시문에 값을 &lt;strong&gt;바인딩&lt;/strong&gt; 합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2318173d9b76b60acb3e375c9b608569dc5c3b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#respond-to-user&quot;&gt;Respond to &lt;strong&gt;events&lt;/strong&gt;&lt;/a&gt; that change the directive's behavior.</source>
          <target state="translated">&lt;a href=&quot;attribute-directives#respond-to-user&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;지시문의 동작을 변경하는 &lt;strong&gt;이벤트에&lt;/strong&gt; 응답하십시오 .</target>
        </trans-unit>
        <trans-unit id="e13bc96a7398a8f42fbeafb0ac2ca5f8d3c1f678" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#write-directive&quot;&gt;Build an &lt;strong&gt;attribute directive&lt;/strong&gt;&lt;/a&gt; that modifies the behavior of an element.</source>
          <target state="translated">&lt;a href=&quot;attribute-directives#write-directive&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;요소의 동작을 수정 하는 &lt;strong&gt;속성 지시문&lt;/strong&gt; 을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1a448f105494f997a437dd9e5434b641ab26a66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;binding-syntax&quot;&gt;Binding syntax&lt;/a&gt;&amp;mdash;use binding to coordinate values in your app.</source>
          <target state="translated">&lt;a href=&quot;binding-syntax&quot;&gt;바인딩 구문-&lt;/a&gt; 바인딩을 사용하여 앱의 값을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="d68c4837bb8f15b45ff7eb9ac94b4bfdde0cf21d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ce646448fc20682bbed1e4cb01065df6bfce3222" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;browser-support&quot;&gt;Browser support&lt;/a&gt;: Make your apps compatible across a wide range of browsers.</source>
          <target state="translated">&lt;a href=&quot;browser-support&quot;&gt;브라우저 지원&lt;/a&gt; : 다양한 브라우저에서 앱을 호환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6174a6656d781663053900ee71e383009fe86863" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build&quot;&gt;Building and Serving&lt;/a&gt;: Learn to define different build and proxy server configurations for your project, such as development, staging, and production.</source>
          <target state="translated">&lt;a href=&quot;build&quot;&gt;구축 및 서비스&lt;/a&gt; : 개발, 스테이징 및 프로덕션과 같이 프로젝트에 대한 다양한 구축 및 프록시 서버 구성을 정의하는 방법을 배웁니다.</target>
        </trans-unit>
        <trans-unit id="eb56ab0cbb3a3d12c65b61691f0321baed53df64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build&quot;&gt;Building and serving&lt;/a&gt; describes how packages come together to create a development build.</source>
          <target state="translated">&lt;a href=&quot;build&quot;&gt;빌드 및 제공&lt;/a&gt; 은 패키지가 함께 빌드되어 개발 빌드를 작성하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="910e4a2c1c0f6d476d80ac12e5eef0b350a3b54d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build&quot;&gt;Building and serving&lt;/a&gt;: Learn to define different build and proxy server configurations for your project, such as development, staging, and production.</source>
          <target state="translated">&lt;a href=&quot;build&quot;&gt;빌드 및 제공&lt;/a&gt; : 개발, 스테이징 및 프로덕션과 같은 프로젝트에 대해 다양한 빌드 및 프록시 서버 구성을 정의 하는 방법을 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="bbe637a71f5f0c4cb13ed70a8bd45fb8d398154e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build#configuring-size-budgets&quot;&gt;Bundle size budgets&lt;/a&gt; have been reduced by ~75%.</source>
          <target state="translated">&lt;a href=&quot;build#configuring-size-budgets&quot;&gt;번들 크기 예산&lt;/a&gt; 이 ~ 75 % 감소했습니다.</target>
        </trans-unit>
        <trans-unit id="f86632c53c778b8f31345a523271f1d0b82808fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt;&amp;mdash;listen to and modify the behavior and layout of HTML.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives&quot;&gt;기본 제공 지시문&lt;/a&gt; &amp;mdash;HTML의 동작과 레이아웃을 듣고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="1e9534148a6104391bc841a128364ea686f9d7d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives&quot;&gt;Directives&lt;/a&gt; typically raise custom events with an Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt; as follows.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives&quot;&gt;지시문은&lt;/a&gt; 일반적 으로 다음과 같이 Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt; 를 사용하여 사용자 지정 이벤트를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="98a2eb6dfd172cac8d58aea55957f556076f523a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives#ngClass&quot;&gt;&lt;code&gt;NgClass&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds and removes a set of CSS classes.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives#ngClass&quot;&gt; &lt;code&gt;NgClass&lt;/code&gt; &lt;/a&gt; &amp;mdash;CSS 클래스 세트를 추가 및 제거합니다.</target>
        </trans-unit>
        <trans-unit id="a0bae5fd130dde44c2bf1d093fa4b9f49a3d68ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives#ngFor&quot;&gt;&lt;code&gt;NgFor&lt;/code&gt;&lt;/a&gt;&amp;mdash;repeat a node for each item in a list.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives#ngFor&quot;&gt; &lt;code&gt;NgFor&lt;/code&gt; &amp;mdash;&lt;/a&gt; 목록의 각 항목에 대해 노드를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="ebdbd716bae3c1345afea7450ed9e6c7249c8edd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives#ngIf&quot;&gt;&lt;code&gt;NgIf&lt;/code&gt;&lt;/a&gt;&amp;mdash;conditionally creates or destroys subviews from the template.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives#ngIf&quot;&gt; &lt;code&gt;NgIf&lt;/code&gt; &amp;mdash;&lt;/a&gt; 조건부로 템플릿에서 하위보기를 생성하거나 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="d18cbc0512f0ba33fa3808313ac94945f34b8050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives#ngModel&quot;&gt;&lt;code&gt;NgModel&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds two-way data binding to an HTML form element.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives#ngModel&quot;&gt; &lt;code&gt;NgModel&lt;/code&gt; &lt;/a&gt; &amp;mdash;HTML 양식 요소에 양방향 데이터 바인딩을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="af0c440e483c6ecb95ffcea0984b257defd2cab3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives#ngStyle&quot;&gt;&lt;code&gt;NgStyle&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds and removes a set of HTML styles.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives#ngStyle&quot;&gt; &lt;code&gt;NgStyle&lt;/code&gt; &lt;/a&gt; &amp;mdash;HTML 스타일 세트를 추가 및 제거합니다.</target>
        </trans-unit>
        <trans-unit id="abd4a696fd94435089d35ffb216a05acb34fb2c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;built-in-directives#ngSwitch&quot;&gt;&lt;code&gt;NgSwitch&lt;/code&gt;&lt;/a&gt;&amp;mdash;a set of directives that switch among alternative views.</source>
          <target state="translated">&lt;a href=&quot;built-in-directives#ngSwitch&quot;&gt; &lt;code&gt;NgSwitch&lt;/code&gt; &lt;/a&gt; &amp;mdash; 대체보기간에 전환하는 지시문 집합입니다.</target>
        </trans-unit>
        <trans-unit id="91fbd67356864f02910ea3adb169c9205a6adbb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;childactivationend&quot;&gt;ChildActivationEnd&lt;/a&gt;: When the router finishes activating a route's children.</source>
          <target state="translated">&lt;a href=&quot;childactivationend&quot;&gt;ChildActivationEnd&lt;/a&gt; : 라우터가 경로의 자식 활성화를 완료 할 때.</target>
        </trans-unit>
        <trans-unit id="877db51866c4738d5f9ddfdc91338c75dbdea818" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;childactivationstart&quot;&gt;ChildActivationStart&lt;/a&gt;: When the router begins activating a route's children.</source>
          <target state="translated">&lt;a href=&quot;childactivationstart&quot;&gt;ChildActivationStart&lt;/a&gt; : 라우터가 경로의 자식을 활성화하기 시작할 때.</target>
        </trans-unit>
        <trans-unit id="6a179bb603888e1cfcdd6e2f03e4c5d1c207c2a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli&quot;&gt;CLI Command Reference&lt;/a&gt;: The Angular CLI is a command-line tool that you use to create projects, generate application and library code, and perform a variety of ongoing development tasks such as testing, bundling, and deployment.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;CLI 명령 참조&lt;/a&gt; : Angular CLI는 프로젝트 작성, 응용 프로그램 및 라이브러리 코드 생성, 테스트, 번들링 및 배포와 같은 다양한 진행중인 개발 작업을 수행하는 데 사용하는 명령 줄 도구입니다.</target>
        </trans-unit>
        <trans-unit id="2d6a1f0956ed378583bf3fbc37caadd71fe34b80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli-builder&quot;&gt;CLI builders&lt;/a&gt;: Learn about customizing and extending the CLI's ability to apply tools to perform complex tasks, such as building and testing applications.</source>
          <target state="translated">&lt;a href=&quot;cli-builder&quot;&gt;CLI 빌더&lt;/a&gt; : 애플리케이션 빌드 및 테스트와 같은 복잡한 작업을 수행하기 위해 도구를 적용하는 CLI의 기능을 사용자 정의하고 확장하는 방법에 대해 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="59a4239375b78a6c9540414e6798519eede89c88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dependency-injection-in-action&quot;&gt;Dependency Injection in Action&lt;/a&gt; is a cookbook for some of the interesting things you can do with DI.</source>
          <target state="translated">&lt;a href=&quot;dependency-injection-in-action&quot;&gt;Dependency Injection in Action&lt;/a&gt; 은 DI로 할 수있는 흥미로운 것들에 대한 요리 책입니다.</target>
        </trans-unit>
        <trans-unit id="10043de7f9799fe38c325824ad34aead11e765f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dependency-injection-navtree#parent-token&quot;&gt;Parent&lt;/a&gt; is the provider's class interface token. The &lt;a href=&quot;dependency-injection-in-action#forwardref&quot;&gt;&lt;em&gt;forwardRef&lt;/em&gt;&lt;/a&gt; breaks the circular reference you just created by having the &lt;code&gt;AlexComponent&lt;/code&gt; refer to itself.</source>
          <target state="translated">&lt;a href=&quot;dependency-injection-navtree#parent-token&quot;&gt;Parent&lt;/a&gt; 는 공급자의 클래스 인터페이스 토큰입니다. &lt;a href=&quot;dependency-injection-in-action#forwardref&quot;&gt;&lt;em&gt;forwardRef는&lt;/em&gt;&lt;/a&gt; 필요로 방금 만든 순환 참조 나누기 &lt;code&gt;AlexComponent&lt;/code&gt; 가 자신을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="21087d6adb12bd5cb78976f2386ffd902c19d5ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;Tree-shakable Providers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;나무를 흔드는 공급자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39633768d44e649aeeb1c40470f8f53135e87044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deployment&quot;&gt;Deployment&lt;/a&gt; describes how packages come together to create a production build.</source>
          <target state="translated">&lt;a href=&quot;deployment&quot;&gt;배포&lt;/a&gt; 는 패키지를 함께 만들어 프로덕션 빌드를 만드는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1ffbc267457898a8f367bdab8c5a728c78a86a4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deployment&quot;&gt;Deployment&lt;/a&gt;: Learn techniques for deploying your Angular application to a remote server.</source>
          <target state="translated">&lt;a href=&quot;deployment&quot;&gt;배포&lt;/a&gt; : Angular 응용 프로그램을 원격 서버에 배포하는 기술을 배웁니다.</target>
        </trans-unit>
        <trans-unit id="bb3189e89f23191818f9a6d6b93463c0e8871ed1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deployment#enable-prod-mode&quot;&gt;Production mode&lt;/a&gt;: deploys the production environment which enables &lt;em&gt;production mode&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;deployment#enable-prod-mode&quot;&gt;프로덕션 모드&lt;/a&gt; : 프로덕션 모드 를 활성화하는 프로덕션 환경을 배포 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1db6871aed0fef74eb8b726cf3dd9307794b4ae8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;displaying-data#ngFor&quot;&gt;&lt;code&gt;*ngFor&lt;/code&gt;&lt;/a&gt; is an iterative; it tells Angular to stamp out one &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; per hero in the &lt;code&gt;heroes&lt;/code&gt; list.</source>
          <target state="translated">&lt;a href=&quot;displaying-data#ngFor&quot;&gt; &lt;code&gt;*ngFor&lt;/code&gt; &lt;/a&gt; 는 반복입니다. 그것은 &lt;code&gt;heroes&lt;/code&gt; 목록에서 영웅 당하나의 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 를 찍도록 Angular에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="873b0cb15ccb12957e5405f0ea6d29fc170717a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;displaying-data#ngIf&quot;&gt;&lt;code&gt;*ngIf&lt;/code&gt;&lt;/a&gt; is a conditional; it includes the &lt;code&gt;HeroDetail&lt;/code&gt; component only if a selected hero exists.</source>
          <target state="translated">&lt;a href=&quot;displaying-data#ngIf&quot;&gt; &lt;code&gt;*ngIf&lt;/code&gt; &lt;/a&gt; 는 조건부입니다. 선택된 영웅이 존재하는 경우에만 &lt;code&gt;HeroDetail&lt;/code&gt; 컴포넌트를포함합니다.</target>
        </trans-unit>
        <trans-unit id="55670ad536de6821cdec9b367282200f93de8792" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;elements&quot;&gt;Angular elements&lt;/a&gt;: How to package components as &lt;em&gt;custom elements&lt;/em&gt; using Web Components, a web standard for defining new HTML elements in a framework-agnostic way.</source>
          <target state="translated">&lt;a href=&quot;elements&quot;&gt;Angular 요소&lt;/a&gt; : 프레임 워크에 구애받지 않는 방식으로 새 HTML 요소를 정의하는 웹 표준 인 웹 구성 &lt;em&gt;요소를&lt;/em&gt; 사용하여 구성 요소를 &lt;em&gt;사용자 지정 요소&lt;/em&gt; 로 패키지 하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c8476247529ce38d9bc6fbedf91f7fbb9dfbe43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;entry-components&quot;&gt;Entry Components&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;entry-components&quot;&gt;엔트리 구성 요소&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a91f4ba89976a1fa5fe4d67df6643f84a1d9520a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event-binding&quot;&gt;Event binding&lt;/a&gt; listens for an element change event.</source>
          <target state="translated">&lt;a href=&quot;event-binding&quot;&gt;이벤트 바인딩&lt;/a&gt; 은 요소 변경 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="bc19c540e50a0d43ade762f5f087049369f2eee3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event-binding&quot;&gt;Event binding&lt;/a&gt;&amp;mdash;listen for events and your HTML.</source>
          <target state="translated">&lt;a href=&quot;event-binding&quot;&gt;이벤트 바인딩 &amp;mdash;&lt;/a&gt; 이벤트 및 HTML을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="8f366f34b15d4450107593ffa19d1ebf4d825dc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;feature-modules&quot;&gt;Feature Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;feature-modules&quot;&gt;기능 모듈&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="503bb4c2b562c476d9bdc4a539ef72689bd3b7d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file-structure&quot;&gt;Workspace and File Structure&lt;/a&gt;: Understand the structure of Angular workspace and project folders.</source>
          <target state="translated">&lt;a href=&quot;file-structure&quot;&gt;작업 공간 및 파일 구조&lt;/a&gt; : Angular 작업 공간 및 프로젝트 폴더의 구조를 이해합니다.</target>
        </trans-unit>
        <trans-unit id="7edff9501a4cd092b38344cf52b021c3944ce116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file-structure&quot;&gt;Workspace and file structure&lt;/a&gt;: Understand the structure of Angular workspace and project folders.</source>
          <target state="translated">&lt;a href=&quot;file-structure&quot;&gt;작업 공간 및 파일 구조&lt;/a&gt; : Angular 작업 공간 및 프로젝트 폴더의 구조를 이해합니다.</target>
        </trans-unit>
        <trans-unit id="730b984a83b77fb3194e7170991dfc89489924c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;forms&quot;&gt;Building a template-driven form&lt;/a&gt; tutorial</source>
          <target state="translated">&lt;a href=&quot;forms&quot;&gt;템플릿 기반 양식 작성&lt;/a&gt; 튜토리얼</target>
        </trans-unit>
        <trans-unit id="3f7dcfc50789eefb9ceb5fe63f39961c26daa56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;forms&quot;&gt;Forms&lt;/a&gt;: Support complex data entry scenarios with HTML-based validation and dirty checking.</source>
          <target state="translated">&lt;a href=&quot;forms&quot;&gt;양식&lt;/a&gt; : HTML 기반 유효성 검사 및 더티 검사로 복잡한 데이터 입력 시나리오를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e514aeee0e2583b2b637c782d2fadc26346b178a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;forms-overview&quot;&gt;Forms&lt;/a&gt;: Support complex data entry scenarios with HTML-based input validation.</source>
          <target state="translated">&lt;a href=&quot;forms-overview&quot;&gt;양식&lt;/a&gt; : HTML 기반 입력 유효성 검사를 통해 복잡한 데이터 입력 시나리오를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2516249ead30e928946a383ad53f1f2b0a2f7b6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;frequent-ngmodules&quot;&gt;Frequently used modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;frequent-ngmodules&quot;&gt;자주 사용되는 모듈&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4f834a2d41be562f21a41430d3148b9a91bb4e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#A&quot;&gt;A&lt;/a&gt;&lt;a href=&quot;glossary#B&quot;&gt;B&lt;/a&gt;&lt;a href=&quot;glossary#C&quot;&gt;C&lt;/a&gt;&lt;a href=&quot;glossary#D&quot;&gt;D&lt;/a&gt;&lt;a href=&quot;glossary#E&quot;&gt;E&lt;/a&gt;&lt;a href=&quot;glossary#F&quot;&gt;F&lt;/a&gt;&lt;a href=&quot;glossary#G&quot;&gt;G&lt;/a&gt;&lt;a href=&quot;glossary#H&quot;&gt;H&lt;/a&gt;&lt;a href=&quot;glossary#I&quot;&gt;I&lt;/a&gt;&lt;a href=&quot;glossary#J&quot;&gt;J&lt;/a&gt;&lt;a href=&quot;glossary#K&quot;&gt;K&lt;/a&gt;&lt;a href=&quot;glossary#L&quot;&gt;L&lt;/a&gt;&lt;a href=&quot;glossary#M&quot;&gt;M&lt;/a&gt;&lt;a href=&quot;glossary#N&quot;&gt;N&lt;/a&gt;&lt;a href=&quot;glossary#O&quot;&gt;O&lt;/a&gt;&lt;a href=&quot;glossary#P&quot;&gt;P&lt;/a&gt;&lt;a href=&quot;glossary#Q&quot;&gt;Q&lt;/a&gt;&lt;a href=&quot;glossary#R&quot;&gt;R&lt;/a&gt;&lt;a href=&quot;glossary#S&quot;&gt;S&lt;/a&gt;&lt;a href=&quot;glossary#T&quot;&gt;T&lt;/a&gt;&lt;a href=&quot;glossary#U&quot;&gt;U&lt;/a&gt;&lt;a href=&quot;glossary#V&quot;&gt;V&lt;/a&gt;&lt;a href=&quot;glossary#W&quot;&gt;W&lt;/a&gt;&lt;a href=&quot;glossary#X&quot;&gt;X&lt;/a&gt;&lt;a href=&quot;glossary#Y&quot;&gt;Y&lt;/a&gt;&lt;a href=&quot;glossary#Z&quot;&gt;Z&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;glossary#A&quot;&gt;A&lt;/a&gt;&lt;a href=&quot;glossary#B&quot;&gt;B&lt;/a&gt;&lt;a href=&quot;glossary#C&quot;&gt;C&lt;/a&gt;&lt;a href=&quot;glossary#D&quot;&gt;D&lt;/a&gt;&lt;a href=&quot;glossary#E&quot;&gt;E&lt;/a&gt;&lt;a href=&quot;glossary#F&quot;&gt;F&lt;/a&gt;&lt;a href=&quot;glossary#G&quot;&gt;G&lt;/a&gt;&lt;a href=&quot;glossary#H&quot;&gt;H&lt;/a&gt;&lt;a href=&quot;glossary#I&quot;&gt;I&lt;/a&gt;&lt;a href=&quot;glossary#J&quot;&gt;J&lt;/a&gt;&lt;a href=&quot;glossary#K&quot;&gt;K&lt;/a&gt;&lt;a href=&quot;glossary#L&quot;&gt;L&lt;/a&gt;&lt;a href=&quot;glossary#M&quot;&gt;M&lt;/a&gt;&lt;a href=&quot;glossary#N&quot;&gt;N&lt;/a&gt;&lt;a href=&quot;glossary#O&quot;&gt;O&lt;/a&gt;&lt;a href=&quot;glossary#P&quot;&gt;P&lt;/a&gt;&lt;a href=&quot;glossary#Q&quot;&gt;Q&lt;/a&gt;&lt;a href=&quot;glossary#R&quot;&gt;R&lt;/a&gt;&lt;a href=&quot;glossary#S&quot;&gt;S&lt;/a&gt;&lt;a href=&quot;glossary#T&quot;&gt;T&lt;/a&gt;&lt;a href=&quot;glossary#U&quot;&gt;U&lt;/a&gt;&lt;a href=&quot;glossary#V&quot;&gt;V&lt;/a&gt;&lt;a href=&quot;glossary#W&quot;&gt;W&lt;/a&gt;&lt;a href=&quot;glossary#X&quot;&gt;X&lt;/a&gt;&lt;a href=&quot;glossary#Y&quot;&gt;Y&lt;/a&gt;&lt;a href=&quot;glossary#Z&quot;&gt;Z&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a008f38ef8754cd716374e3e475e08937807961b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#attribute-directive&quot;&gt;Attribute directives&lt;/a&gt; modify behavior and appearance of page elements.</source>
          <target state="translated">&lt;a href=&quot;glossary#attribute-directive&quot;&gt;속성 지시문&lt;/a&gt; 은 페이지 요소의 동작 및 모양을 수정합니다.</target>
        </trans-unit>
        <trans-unit id="5a50ed225cca7cd9f1e8b0936760c0096c11cad6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#command-line-interface-cli&quot;&gt;Angular CLI&lt;/a&gt; command-line tool for managing the Angular development cycle</source>
          <target state="translated">&lt;a href=&quot;glossary#command-line-interface-cli&quot;&gt;Angular&lt;/a&gt; 개발주기를 관리하기위한 Angular CLI 명령 줄 도구</target>
        </trans-unit>
        <trans-unit id="06e9b8b562222e2992939ef5af2d0694130ca07d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#component&quot;&gt;Components&lt;/a&gt; use &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; (an extension of &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt;) to associate a template with a class.</source>
          <target state="translated">&lt;a href=&quot;glossary#component&quot;&gt;구성 요소&lt;/a&gt; 는 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; ( &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 확장 )를 사용하여 템플릿을 클래스와 연결합니다.</target>
        </trans-unit>
        <trans-unit id="fbb15523b2937ec0c14c57703bb98992d78cfa83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#data-binding&quot;&gt;Two-way binding&lt;/a&gt; with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; keeps the component model synchronized with the user's entry into the input elements.</source>
          <target state="translated">&lt;a href=&quot;glossary#data-binding&quot;&gt;&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 을 사용한 양방향 바인딩 은 구성 요소 모델이 사용자가 입력 요소에 입력 한 내용과 동기화 된 상태를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="e0275d46150bd064ea050e504a89dcc202de9a38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#lazy-loading&quot;&gt;Lazy loading&lt;/a&gt; is a technique that defers the loading of required assets and code resources until they are actually used. This reduces startup time and increases efficiency, especially when running different frameworks in the same application.</source>
          <target state="translated">&lt;a href=&quot;glossary#lazy-loading&quot;&gt;지연 로딩&lt;/a&gt; 은 실제로 사용될 때까지 필요한 자산 및 코드 리소스의 로딩을 지연시키는 기술입니다. 이는 특히 동일한 응용 프로그램에서 다른 프레임 워크를 실행할 때 시작 시간을 줄이고 효율성을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="e1dd0f0dc39e53bf8d33d62e695c711a2c28baa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#library&quot;&gt;Library&lt;/a&gt; developers can create schematics that enable the Angular CLI to add and update their published libraries, and to generate artifacts the library defines. Add these schematics to the npm package that you use to publish and share your library.</source>
          <target state="translated">&lt;a href=&quot;glossary#library&quot;&gt;라이브러리&lt;/a&gt; 개발자는 Angular CLI가 게시 된 라이브러리를 추가 및 업데이트하고 라이브러리가 정의한 아티팩트를 생성 할 수 있도록 회로도를 작성할 수 있습니다. 이 회로도를 라이브러리를 게시하고 공유하는 데 사용하는 npm 패키지에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="349930d7ecb625aadbedc24af93af73208b44d2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#observable&quot;&gt;Observables&lt;/a&gt; let you pass messages between parts of your application. Observables are recommended for event handling, asynchronous programming, and handling multiple values. Observables can deliver single or multiple values of any type, either synchronously (as a function delivers a value to its caller) or asynchronously on a schedule.</source>
          <target state="translated">&lt;a href=&quot;glossary#observable&quot;&gt;Observable&lt;/a&gt; 을 사용하면 애플리케이션의 일부간에 메시지를 전달할 수 있습니다. Observable은 이벤트 처리, 비동기 프로그래밍 및 여러 값 처리에 권장됩니다. Observable은 모든 유형의 단일 또는 다중 값을 동기식으로 (함수가 호출자에게 값을 전달함에 따라) 또는 일정에 따라 비동기 적으로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f24fd7b522a028cb9a9d1f13688f4f77777fc894" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#structural-directive&quot;&gt;Structural directives&lt;/a&gt; modify the structure of the DOM.</source>
          <target state="translated">&lt;a href=&quot;glossary#structural-directive&quot;&gt;구조적 지시문&lt;/a&gt; 은 DOM의 구조를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="474033263a2f94893fb35effba7197a5fb722c92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#template&quot;&gt;Templates&lt;/a&gt; in HTML with CSS styles</source>
          <target state="translated">&lt;a href=&quot;glossary#template&quot;&gt;&lt;/a&gt;CSS 스타일이있는 HTML의 템플릿</target>
        </trans-unit>
        <trans-unit id="d7620b7203196994eab694d833e6b38cea3e9898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#typescript&quot;&gt;Typescript&lt;/a&gt; and HTML5 programming</source>
          <target state="translated">&lt;a href=&quot;glossary#typescript&quot;&gt;Typescript&lt;/a&gt; 및 HTML5 프로그래밍</target>
        </trans-unit>
        <trans-unit id="976cb2e51604ae7f6f48a865903cdc0569537550" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;guardscheckend&quot;&gt;GuardsCheckEnd&lt;/a&gt;: When the router finishes the &lt;em&gt;guards&lt;/em&gt; phase of routing successfully.</source>
          <target state="translated">&lt;a href=&quot;guardscheckend&quot;&gt;GuardsCheckEnd&lt;/a&gt; : 라우터가 라우팅 의 &lt;em&gt;가드&lt;/em&gt; 단계를 성공적으로 마쳤을 때 .</target>
        </trans-unit>
        <trans-unit id="5d8c3ee6b9cff64668c3509f20ec4462af5417c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;guardscheckstart&quot;&gt;GuardsCheckStart&lt;/a&gt;: When the router begins the &lt;em&gt;guards&lt;/em&gt; phase of routing.</source>
          <target state="translated">&lt;a href=&quot;guardscheckstart&quot;&gt;GuardsCheckStart&lt;/a&gt; : 라우터가 라우팅 의 &lt;em&gt;가드&lt;/em&gt; 단계를 시작할 때 .</target>
        </trans-unit>
        <trans-unit id="012b905d0a8a9b31c2b496bafa9975c8a84ca254" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;HTTP&lt;/a&gt;: Communicate with a server to get data, save data, and invoke server-side actions with an HTTP client.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt;HTTP&lt;/a&gt; : 서버와 통신하여 데이터를 가져오고 데이터를 저장하며 HTTP 클라이언트로 서버 측 작업을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d7a528e6e9c3dc3c13058560046e8a97b66eee19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;Http&lt;/a&gt; when sending and receiving binary data</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt;&lt;/a&gt;이진 데이터를 보내고받을 때의 HTTP</target>
        </trans-unit>
        <trans-unit id="f29bcfba8230b9e044bf29fb96ce2574f0668f75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http#testing-requests&quot;&gt;Testability&lt;/a&gt; features.</source>
          <target state="translated">&lt;a href=&quot;http#testing-requests&quot;&gt;테스트 가능성&lt;/a&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="7bd2d480faa29ebcb671e50348117c02a789e51f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codelyzer.com/rules/&quot;&gt;Codelyzer&lt;/a&gt; provides linting rules that can help you make sure your code meets accessibility standards.</source>
          <target state="translated">&lt;a href=&quot;http://codelyzer.com/rules/&quot;&gt;Codelyzer&lt;/a&gt; 는 코드가 접근성 표준을 충족시키는 데 도움이되는 보푸라기 규칙을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a490c94a31d4f6753c24253d38b0bb7f1d31a731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://localhost:4200/&quot;&gt;http://localhost:4200/&lt;/a&gt; &amp;mdash; browse to the app running locally.</source>
          <target state="translated">&lt;a href=&quot;http://localhost:4200/&quot;&gt;http : // localhost : 4200 /&lt;/a&gt; &amp;mdash; 로컬에서 실행중인 앱을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="97d9c838aa62cff527ade96335288821e4ed470e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://nginx.org/&quot;&gt;Nginx&lt;/a&gt;: use &lt;code&gt;try_files&lt;/code&gt;, as described in &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#front-controller-pattern-web-apps&quot;&gt;Front Controller Pattern Web Apps&lt;/a&gt;, modified to serve &lt;code&gt;index.html&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://nginx.org/&quot;&gt;Nginx&lt;/a&gt; : &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#front-controller-pattern-web-apps&quot;&gt;Front Controller Pattern Web Apps에&lt;/a&gt; 설명 된대로 &lt;code&gt;try_files&lt;/code&gt; 를 사용 하여 &lt;code&gt;index.html&lt;/code&gt; 을 제공하도록 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5333ebd749f869b42deff87f9d40cf2cca53eeb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;RxJS&lt;/a&gt; is a library for composing asynchronous and callback-based code in a &lt;em&gt;functional, reactive style&lt;/em&gt;. Many Angular APIs, including &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, produce and consume RxJS &lt;code&gt;Observables&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;RxJS&lt;/a&gt; 는 &lt;em&gt;기능적이고 반응적인 스타일로&lt;/em&gt; 비동기 및 콜백 기반 코드를 작성하기위한 라이브러리 &lt;em&gt;입니다&lt;/em&gt; . &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 를 포함한 많은 Angular API 는 RxJS &lt;code&gt;Observables&lt;/code&gt; 를 생성하고 소비 합니다.</target>
        </trans-unit>
        <trans-unit id="1b0708db239eb61dd91d851bf057638ac2984d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/deployment&quot;&gt;Skip ahead to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/deployment&quot;&gt;'배포'섹션&lt;/a&gt; 으로 건너 뛰어 로컬 개발로 이동하거나 앱을 Firebase 또는 자체 서버에 배포합니다.</target>
        </trans-unit>
        <trans-unit id="47e1a4e084f127b82fd88cba8823a99b9b17c886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/routing&quot;&gt;Continue to the &quot;Routing&quot; section&lt;/a&gt; to create a product details page that can be accessed by clicking a product name and that has its own URL pattern.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/routing&quot;&gt;&quot;라우팅&quot;섹션&lt;/a&gt; 으로 계속 진행하여 제품 이름을 클릭하여 액세스 할 수 있고 고유 한 URL 패턴이있는 제품 세부 사항 페이지를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="1da65d776813cc94005b47e07e209ab18232011c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start-deployment&quot;&gt;Skip ahead to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start-deployment&quot;&gt;'배포'섹션&lt;/a&gt; 으로 건너 뛰어 로컬 개발로 이동하거나 앱을 Firebase 또는 자체 서버에 배포하세요.</target>
        </trans-unit>
        <trans-unit id="04a2bf173e1f457d6541ca6f42e6be5827a2fb1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start-routing&quot;&gt;Continue to the &quot;In-app navigation&quot; section&lt;/a&gt; to create a product details page that can be accessed by clicking a product name and that has its own URL pattern.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start-routing&quot;&gt;계속해서 &quot;인앱 탐색&quot;섹션&lt;/a&gt; 으로 이동 하여 제품 이름을 클릭하여 액세스 할 수 있고 자체 URL 패턴이있는 제품 세부 정보 페이지를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="689a67c05fdef063c183d35a0fa56109dee7633b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/data&quot;&gt;Continue to the &quot;Managing Data&quot; section&lt;/a&gt; to add the shopping cart feature, using a service to manage the cart data and using HTTP to retrieve external data for shipping prices.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/data&quot;&gt;&quot;데이터 관리&quot;섹션으로&lt;/a&gt; 이동하여 쇼핑 카트 기능을 추가하십시오. 서비스를 사용하여 쇼핑 카트 데이터를 관리하고 HTTP를 사용하여 운송 가격에 대한 외부 데이터를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="c59ff7e8cd67136b432cf19d8936d588fdfe9ce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;Continue to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;'배포'섹션&lt;/a&gt; 으로 이동하여 로컬 개발로 이동하거나 앱을 Firebase 또는 자체 서버에 배포합니다.</target>
        </trans-unit>
        <trans-unit id="2269d64dcb4a754119ed1212f5b94bd300bc8550" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;Skip ahead to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;'배포'섹션&lt;/a&gt; 으로 건너 뛰어 로컬 개발로 이동하거나 앱을 Firebase 또는 자체 서버에 배포합니다.</target>
        </trans-unit>
        <trans-unit id="c5a196b2b34e4f0c35e0edd41af80ec9fc69e967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;Skip ahead to the Deployment section&lt;/a&gt; to deploy your app to Firebase or move to local development.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;배포 섹션&lt;/a&gt; 으로 건너 뛰어 앱을 Firebase에 배포하거나 로컬 개발로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b30346ad683c0df172f9edfcb03e1085bc324722" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/forms&quot;&gt;Continue to the &quot;Forms&quot; section&lt;/a&gt; to finish the app by adding the shopping cart page and a form-based checkout feature. You'll create a form to collect user information as part of checkout.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/forms&quot;&gt;&lt;/a&gt;장바구니 페이지와 양식 기반 체크 아웃 기능을 추가 하여 &quot;양식&quot;섹션으로 이동하여 앱을 완료하십시오. 결제의 일부로 사용자 정보를 수집하는 양식을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="3d7a6a30f419a0adaa4e237875a75b66b19f59a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/start-data&quot;&gt;Continue to the &quot;Managing Data&quot; section&lt;/a&gt; to add a shopping cart feature, use a service to manage the cart data and use HTTP to retrieve external data for shipping prices.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/start-data&quot;&gt;계속해서 &quot;데이터 관리&quot;섹션으로 이동&lt;/a&gt; 하여 장바구니 기능을 추가하고 서비스를 사용하여 장바구니 데이터를 관리하고 HTTP를 사용하여 배송 가격에 대한 외부 데이터를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="06fdb3a8e34f91aea91d886ee2f54e6eaeec9291" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/start-deployment&quot;&gt;Continue to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/start-deployment&quot;&gt;계속해서 '배포'섹션&lt;/a&gt; 으로 이동하여 로컬 개발로 이동하거나 앱을 Firebase 또는 자체 서버에 배포하세요.</target>
        </trans-unit>
        <trans-unit id="3e3223aa08388596b6744a0cde49d9c7115c7226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/start-deployment&quot;&gt;Skip ahead to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/start-deployment&quot;&gt;'배포'섹션&lt;/a&gt; 으로 건너 뛰어 로컬 개발로 이동하거나 앱을 Firebase 또는 자체 서버에 배포하세요.</target>
        </trans-unit>
        <trans-unit id="a42d88f5bffafdf656b0e3a451066cbef13c36e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/start-deployment&quot;&gt;Skip ahead to the Deployment section&lt;/a&gt; to deploy your app to Firebase or move to local development.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/start-deployment&quot;&gt;&lt;/a&gt;앱을 Firebase에 배포하거나 로컬 개발로 이동 하려면 배포 섹션 으로 건너 뛰 세요.</target>
        </trans-unit>
        <trans-unit id="deb32eaeef0fe74b18eda33f58342c4dfd71a8c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/start-forms&quot;&gt;Continue to the &quot;Forms&quot; section&lt;/a&gt; to finish the app by adding the shopping cart view and a checkout form.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/start/start/start-forms&quot;&gt;&quot;양식&quot;섹션으로&lt;/a&gt; 이동하여 장바구니보기와 결제 양식을 추가하여 앱을 완료합니다.</target>
        </trans-unit>
        <trans-unit id="29bbaccd61d4a682bae9cb389589a2b77320c4e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;Web Workers&lt;/a&gt; allow you to run CPU intensive computations in a background thread, freeing the main thread to update the user interface.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;웹 워커를&lt;/a&gt; 사용하면 백그라운드 스레드에서 CPU 집약적 계산을 실행하여 기본 스레드를 해제하여 사용자 인터페이스를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aad8313e6068162dc5327398d5db348da7f88ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;Web workers&lt;/a&gt; allow you to run CPU-intensive computations in a background thread, freeing the main thread to update the user interface. If you find your application performs a lot of computations, such as generating CAD drawings or doing heavy geometrical calculations, using web workers can help increase your application's performance.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;웹 작업자를&lt;/a&gt; 사용하면 백그라운드 스레드에서 CPU 집약적 인 계산을 실행할 수 있으므로 주 스레드가 사용자 인터페이스를 업데이트 할 수 있습니다. 응용 프로그램이 CAD 도면 생성 또는 무거운 기하학적 계산 수행과 같은 많은 계산을 수행하는 경우 웹 작업자를 사용하면 응용 프로그램의 성능을 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74b47b6bf74b5812c636dac2d1c2172abdfc03f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw&quot;&gt;&lt;code&gt;String.raw()&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;tag function&lt;/em&gt; native to JavaScript ES2015.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw&quot;&gt; &lt;code&gt;String.raw()&lt;/code&gt; &lt;/a&gt; 는JavaScript ES2015에 고유한&lt;em&gt; 태그 함수&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="55c45ce6b76d5368f74740cb7a3b18b7a1a6bc1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;Custom elements&lt;/a&gt; are a Web Platform feature currently supported by Chrome, Edge (Chromium-based), Firefox, Opera, and Safari, and available in other browsers through polyfills (see &lt;a href=&quot;elements#browser-support&quot;&gt;Browser Support&lt;/a&gt;). A custom element extends HTML by allowing you to define a tag whose content is created and controlled by JavaScript code. The browser maintains a &lt;code&gt;CustomElementRegistry&lt;/code&gt; of defined custom elements, which maps an instantiable JavaScript class to an HTML tag.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;사용자 정의 요소&lt;/a&gt; 는 현재 Chrome, Edge (Chromium 기반), Firefox, Opera 및 Safari에서 지원하는 웹 플랫폼 기능이며 폴리 필을 통해 다른 브라우저에서 사용할 수 있습니다 ( &lt;a href=&quot;elements#browser-support&quot;&gt;브라우저 지원&lt;/a&gt; 참조 ). 사용자 정의 요소는 컨텐츠가 JavaScript 코드로 작성 및 제어되는 태그를 정의 할 수 있도록하여 HTML을 확장합니다. 브라우저 는 인스턴스화 가능한 JavaScript 클래스를 HTML 태그에 매핑하는 정의 된 사용자 지정 요소 의 &lt;code&gt;CustomElementRegistry&lt;/code&gt; 를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="82e2046ebdc0c52c172c977fac8e05478ec42609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;Custom elements&lt;/a&gt; are a Web Platform feature currently supported by Chrome, Firefox, Opera, and Safari, and available in other browsers through polyfills (see &lt;a href=&quot;elements#browser-support&quot;&gt;Browser Support&lt;/a&gt;). A custom element extends HTML by allowing you to define a tag whose content is created and controlled by JavaScript code. The browser maintains a &lt;code&gt;CustomElementRegistry&lt;/code&gt; of defined custom elements, which maps an instantiable JavaScript class to an HTML tag.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;사용자 정의 요소&lt;/a&gt; 는 현재 Chrome, Firefox, Opera 및 Safari에서 지원되는 웹 플랫폼 기능이며 폴리 필을 통해 다른 브라우저에서 사용할 수 있습니다 ( &lt;a href=&quot;elements#browser-support&quot;&gt;브라우저 지원&lt;/a&gt; 참조 ). 사용자 정의 요소는 JavaScript 코드로 컨텐츠를 작성하고 제어하는 ​​태그를 정의 할 수 있도록하여 HTML을 확장합니다. 브라우저 는 정의 가능한 사용자 정의 요소 의 &lt;code&gt;CustomElementRegistry&lt;/code&gt; 를 유지 관리 하여 인스턴스화 가능한 JavaScript 클래스를 HTML 태그에 맵핑합니다.</target>
        </trans-unit>
        <trans-unit id="100bc087258ec6a120d900a354466663720e3fbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;Cross-Site Request Forgery (XSRF or CSRF)&lt;/a&gt; is an attack technique by which the attacker can trick an authenticated user into unknowingly executing actions on your website. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; supports a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-Header_Token&quot;&gt;common mechanism&lt;/a&gt; used to prevent XSRF attacks. When performing HTTP requests, an interceptor reads a token from a cookie, by default &lt;code&gt;XSRF-TOKEN&lt;/code&gt;, and sets it as an HTTP header, &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt;. Since only code that runs on your domain could read the cookie, the backend can be certain that the HTTP request came from your client application and not an attacker.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;Cross-Site Request Forgery (XSRF 또는 CSRF)&lt;/a&gt; 는 공격자가 인증 된 사용자를 속여 웹 사이트에서 무의식적으로 작업을 실행하도록하는 공격 기술입니다. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 는 XSRF 공격을 방지 &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-Header_Token&quot;&gt;하는&lt;/a&gt; 데 사용되는 공통 메커니즘을 지원합니다 . HTTP 요청을 수행 할 때 인터셉터는 쿠키 (기본적으로 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; ) 에서 토큰을 읽고 이를 HTTP 헤더 인 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 으로 설정 합니다. 도메인에서 실행되는 코드 만 쿠키를 읽을 수 있으므로 백엔드는 HTTP 요청이 공격자가 아닌 클라이언트 애플리케이션에서 온 것인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aac54a6284ea149d8a94525e8ce6560e2a2992a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;Cross-Site Request Forgery (XSRF)&lt;/a&gt; is an attack technique by which the attacker can trick an authenticated user into unknowingly executing actions on your website. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; supports a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-Header_Token&quot;&gt;common mechanism&lt;/a&gt; used to prevent XSRF attacks. When performing HTTP requests, an interceptor reads a token from a cookie, by default &lt;code&gt;XSRF-TOKEN&lt;/code&gt;, and sets it as an HTTP header, &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt;. Since only code that runs on your domain could read the cookie, the backend can be certain that the HTTP request came from your client application and not an attacker.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;XSRF (Cross-Site Request Forgery)&lt;/a&gt; 는 공격자가 인증 된 사용자가 자신의 웹 사이트에서 무의식으로 작업을 실행하도록 속일 수있는 공격 기법입니다. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 는 XSRF 공격을 방지 &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-Header_Token&quot;&gt;하는&lt;/a&gt; 데 사용되는 일반적인 메커니즘을 지원합니다 . HTTP 요청을 수행 할 때 인터셉터는 기본적으로 쿠키에서 토큰을 읽고 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; 을 HTTP 헤더 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 으로 설정 합니다. 도메인에서 실행되는 코드 만 쿠키를 읽을 수 있으므로 백엔드는 HTTP 요청이 공격자가 아닌 클라이언트 응용 프로그램에서 온 것임을 확신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84f70e95bd25e7dc919a25c0762c9214eef01915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;Cross-site scripting (XSS)&lt;/a&gt; enables attackers to inject malicious code into web pages. Such code can then, for example, steal user data (in particular, login data) or perform actions to impersonate the user. This is one of the most common attacks on the web.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS (Cross-Site Scripting)를&lt;/a&gt; 통해 공격자는 웹 페이지에 악성 코드를 삽입 할 수 있습니다. 이러한 코드는 예를 들어 사용자 데이터 (특히 로그인 데이터)를 훔치거나 사용자를 가장하는 작업을 수행 할 수 있습니다. 이것은 웹에서 가장 일반적인 공격 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="9e64e74221f7d30e0d86948be76d3e988bc48616" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Fragment_identifier&quot;&gt;Fragments&lt;/a&gt; refer to certain elements on the page identified with an &lt;code&gt;id&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Fragment_identifier&quot;&gt;조각&lt;/a&gt; 은 페이지에서 &lt;code&gt;id&lt;/code&gt; 속성으로 식별 된 특정 요소를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="25ed860c591f09b442494b6abea7d3b3592e0497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://firebase.google.com/docs/hosting/&quot;&gt;Firebase hosting&lt;/a&gt;: add a &lt;a href=&quot;https://firebase.google.com/docs/hosting/url-redirects-rewrites#section-rewrites&quot;&gt;rewrite rule&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://firebase.google.com/docs/hosting/&quot;&gt;Firebase 호스팅&lt;/a&gt; : &lt;a href=&quot;https://firebase.google.com/docs/hosting/url-redirects-rewrites#section-rewrites&quot;&gt;다시 쓰기 규칙을&lt;/a&gt; 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="b11894ce4c71c48cc40a36f3f13d07bf63504d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/angular/quickstart/archive/master.zip&quot;&gt;Download the QuickStart seed&lt;/a&gt; and unzip it into your project folder. Then perform the remaining steps with these terminal commands.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/angular/quickstart/archive/master.zip&quot;&gt;빠른 시작 시드를 다운로드&lt;/a&gt; 하여 프로젝트 폴더에 압축 해제하십시오. 그런 다음이 터미널 명령으로 나머지 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="81012129c89232fbe4276e2ab4985af33b263508" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fgnass/domino&quot;&gt;Domino&lt;/a&gt;, which is used in server-side rendering, doesn't support &lt;code&gt;innerText&lt;/code&gt;, so in platform-server's &quot;domino adapter&quot;, there was special code to fall back to &lt;code&gt;textContent&lt;/code&gt; if you tried to bind to &lt;code&gt;innerText&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fgnass/domino&quot;&gt;&lt;/a&gt;서버 측 렌더링에 사용되는 Domino 는 &lt;code&gt;innerText&lt;/code&gt; 를 지원하지 않으므로 플랫폼 서버의 &quot;domino 어댑터&quot; 에서 &lt;code&gt;innerText&lt;/code&gt; 에 바인딩하려고하면 &lt;code&gt;textContent&lt;/code&gt; 로 대체 되는 특수 코드가있었습니다 .</target>
        </trans-unit>
        <trans-unit id="bc50b9fbefdc84768ebc724674877ac105e4f298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/&quot;&gt;Golang&lt;/a&gt;: create a Golang server using (&lt;a href=&quot;https://github.com/gorilla/mux&quot;&gt;gorilla/mux&lt;/a&gt;) with a basic Golang file that configures the server &lt;code&gt;main.go&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://golang.org/&quot;&gt;Golang&lt;/a&gt; : 서버를 구성하는 기본 Golang 파일과 함께 ( &lt;a href=&quot;https://github.com/gorilla/mux&quot;&gt;gorilla / mux&lt;/a&gt; )를 사용하여 Golang 서버를 &lt;code&gt;main.go&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="884e13675b53054a90e03b9c2f764ee2e2a00d7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt;: add a &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;rewrite rule&lt;/a&gt; to the &lt;code&gt;.htaccess&lt;/code&gt; file as shown (&lt;a href=&quot;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&quot;&gt;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; : 표시된대로 &lt;code&gt;.htaccess&lt;/code&gt; 파일에 &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;다시 쓰기 규칙&lt;/a&gt; 을 추가하십시오 ( &lt;a href=&quot;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&quot;&gt;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&lt;/a&gt; ) :</target>
        </trans-unit>
        <trans-unit id="62c20e7e73b679f118286f6116001760a1e305fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; offers an extensive library of Material Design components.</source>
          <target state="translated">&lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; 은 광범위한 Material Design 컴포넌트 라이브러리를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9f2dd13277dda02d85d59b6c1ece62d7a4bc089d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;: you can't &lt;a href=&quot;https://github.com/isaacs/github/issues/408&quot;&gt;directly configure&lt;/a&gt; the GitHub Pages server, but you can add a 404 page. Copy &lt;code&gt;index.html&lt;/code&gt; into &lt;code&gt;404.html&lt;/code&gt;. It will still be served as the 404 response, but the browser will process that page and load the app properly. It's also a good idea to &lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch&quot;&gt;serve from &lt;code&gt;docs/&lt;/code&gt; on master&lt;/a&gt; and to &lt;a href=&quot;https://www.bennadel.com/blog/3181-including-node-modules-and-vendors-folders-in-your-github-pages-site.htm&quot;&gt;create a &lt;code&gt;.nojekyll&lt;/code&gt; file&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub 페이지&lt;/a&gt; : GitHub 페이지 서버를 &lt;a href=&quot;https://github.com/isaacs/github/issues/408&quot;&gt;직접 구성&lt;/a&gt; 할 수는 없지만 404 페이지를 추가 할 수 있습니다. &lt;code&gt;index.html&lt;/code&gt; 을 &lt;code&gt;404.html&lt;/code&gt; 로 복사하십시오 . 여전히 404 응답으로 제공되지만 브라우저는 해당 페이지를 처리하고 앱을 올바르게로드합니다. 그것은하는 것이 좋은 생각 &lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch&quot;&gt;에서 제공 &lt;code&gt;docs/&lt;/code&gt; 마스터&lt;/a&gt; 하고 &lt;a href=&quot;https://www.bennadel.com/blog/3181-including-node-modules-and-vendors-folders-in-your-github-pages-site.htm&quot;&gt;만들 &lt;code&gt;.nojekyll&lt;/code&gt; 파일을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8ae4cf44a70eb9ece2606087c21c356df6a0c2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://protractor.angular.io/&quot;&gt;Angular Protractor&lt;/a&gt; offers an end-to-end testing framework for Angular apps.</source>
          <target state="translated">&lt;a href=&quot;https://protractor.angular.io/&quot;&gt;Angular Protractor&lt;/a&gt; 는 Angular 앱을위한 엔드 투 엔드 테스트 프레임 워크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6e2474af262463a1f1584e4b5b8d56ff513ff65f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://web.dev/accessible-angular-with-codelyzer/&quot;&gt;Audit your Angular app's accessibility with codelyzer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://web.dev/accessible-angular-with-codelyzer/&quot;&gt;codelyzer로 Angular 앱의 접근성을 감사하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56e12c2cbfa95739e6ea296eb368a107a5671b83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.iis.net/&quot;&gt;IIS&lt;/a&gt;: add a rewrite rule to &lt;code&gt;web.config&lt;/code&gt;, similar to the one shown &lt;a href=&quot;http://stackoverflow.com/a/26152011/2116927&quot;&gt;here&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.iis.net/&quot;&gt;IIS&lt;/a&gt; : &lt;a href=&quot;http://stackoverflow.com/a/26152011/2116927&quot;&gt;여기에&lt;/a&gt; 표시된 것과 유사한 다시 쓰기 규칙을 &lt;code&gt;web.config&lt;/code&gt; 에 추가 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e57824a9b5d81eadf32312a6ed9777832e90dc4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;: create a Ruby server using (&lt;a href=&quot;http://sinatrarb.com/&quot;&gt;sinatra&lt;/a&gt;) with a basic Ruby file that configures the server &lt;code&gt;server.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt; : &lt;code&gt;server.rb&lt;/code&gt; 를 구성하는 기본 Ruby 파일과 함께 ( &lt;a href=&quot;http://sinatrarb.com/&quot;&gt;sinatra&lt;/a&gt; )를 사용하여 Ruby 서버를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="64692c418c749fdf26df53bd7178aeef31f6dfa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript programming&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript 프로그래밍&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb95f352ba40b1a6db688cf30f2add38817c23ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for the application tests. See &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript Configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;&lt;/a&gt;응용 프로그램 테스트를위한 TypeScript 구성 &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f52785f1e9e65b0406a87730482df36132fbe70c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for the library tests. See &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript Configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;&lt;/a&gt;라이브러리 테스트를위한 TypeScript 구성 &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b44d25ff2fc71a0a66fb431a38b5bc1cacaa1e89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript 구성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90b4ca53847800b29f451ce7b1ba906c8c16d2bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/docs/home.html&quot;&gt;TypeScript&lt;/a&gt; and HTML5 programming.</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org/docs/home.html&quot;&gt;TypeScript&lt;/a&gt; 및 HTML5 프로그래밍.</target>
        </trans-unit>
        <trans-unit id="7a4c027abf0d2d9c0896ce0a1222e4f73e2ab1bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/XML/&quot;&gt;Extensible Markup Language (XML)&lt;/a&gt; used for translation files</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/XML/&quot;&gt;&lt;/a&gt;번역 파일에 사용되는 XML (Extensible Markup Language)</target>
        </trans-unit>
        <trans-unit id="49e150e71ee3b6876b2a205228cf7bcfa7448205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=anphffaCZrQ&quot;&gt;Watch Alex Rickabaugh explain the Angular compiler&lt;/a&gt; at AngularConnect 2019.</source>
          <target state="translated">&lt;a href=&quot;https://www.youtube.com/watch?v=anphffaCZrQ&quot;&gt;&lt;/a&gt;AngularConnect 2019에서 Alex Rickabaugh가 Angular 컴파일러 에 대해 설명하는 것을 보십시오.</target>
        </trans-unit>
        <trans-unit id="563e4f57ffcb0ce3f3e311b8d28e3829e8f0befe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=kW9cJsvcsGo&quot;&gt;Watch compiler author Tobias Bosch explain the Angular compiler&lt;/a&gt; at AngularConnect 2016.</source>
          <target state="translated">&lt;a href=&quot;https://www.youtube.com/watch?v=kW9cJsvcsGo&quot;&gt;컴파일러 작성자 인 Tobias Bosch&lt;/a&gt; 가 AngularConnect 2016에서 Angular 컴파일러 를 설명하는 것을 보십시오.</target>
        </trans-unit>
        <trans-unit id="18312434cf04457d54583c04d7be3ec18f37c111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n&quot;&gt;Internationalization&lt;/a&gt;: Make your app available in multiple languages with Angular's internationalization (i18n) tools.</source>
          <target state="translated">&lt;a href=&quot;i18n&quot;&gt;국제화&lt;/a&gt; : Angular의 국제화 (i18n) 도구를 사용하여 앱을 여러 언어로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bae5736c5918c1e4afa63fa50564ea4bf95a50a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#Template-translations&quot;&gt;Prepare templates for translations&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#Template-translations&quot;&gt;번역을위한 템플릿을 준비합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d72bc8461513cdf5f4023f81ab094639fa7db64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#create-source&quot;&gt;Extract the source language file&lt;/a&gt;. You can optionally change the location, format, and name.</source>
          <target state="translated">&lt;a href=&quot;i18n#create-source&quot;&gt;소스 언어 파일을 추출하십시오&lt;/a&gt; . 선택적으로 위치, 형식 및 이름을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b17564bc0f0190d06748a6b740facc76508601" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#custom-id&quot;&gt;Manage marked text with custom IDs&lt;/a&gt; if you require more control over matching translations.</source>
          <target state="translated">&lt;a href=&quot;i18n#custom-id&quot;&gt;&lt;/a&gt;일치하는 번역에 대해 더 많은 제어가 필요한 경우 사용자 지정 ID로 표시된 텍스트를 관리합니다 .</target>
        </trans-unit>
        <trans-unit id="c66118fe9f312eb62f640f11f7221edfc98b93bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#deploy-locales&quot;&gt;Deploy multiple locales&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#deploy-locales&quot;&gt;여러 로케일을 배포합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a374134e892ec32747487cd5b79b4c7bfedc3ad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#help-translator&quot;&gt;Add helpful descriptions and meanings&lt;/a&gt; to help the translator with additional information or context.</source>
          <target state="translated">&lt;a href=&quot;i18n#help-translator&quot;&gt;&lt;/a&gt;번역가에게 추가 정보 나 컨텍스트를 제공하는 데 도움이되는 유용한 설명과 의미 를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2ac852c80e14a48ecbc339d6133507136ed0d39b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#i18n-attribute&quot;&gt;Mark text for translations&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#i18n-attribute&quot;&gt;번역 할 텍스트를 표시합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c564e6bf6b9483b0390d6036e6e0fbc294441f6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#i18n-pipes&quot;&gt;Format data based on locale&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#i18n-pipes&quot;&gt;로케일에 따라 데이터 형식을 지정합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6739d6d067ab305a9a129d867b7d9b16dabddd07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#import-locale&quot;&gt;Import global variants of the locale data&lt;/a&gt; for extra locale data.</source>
          <target state="translated">&lt;a href=&quot;i18n#import-locale&quot;&gt;&lt;/a&gt;추가 로케일 데이터를 위해 로케일 데이터의 글로벌 변형을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="1f9a01e83f76088e1fb5145fc9ce40c58071902e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#localization-folder&quot;&gt;Create a translation file for each language&lt;/a&gt; by copying the source language file.</source>
          <target state="translated">&lt;a href=&quot;i18n#localization-folder&quot;&gt;&lt;/a&gt;소스 언어 파일을 복사하여 각 언어 에 대한 번역 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="052ca57f862d3245d0e4a4afc6585d92ceed2058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#merge&quot;&gt;Merge translations into the app&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#merge&quot;&gt;번역을 앱에 병합합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="10a53d94bb81d225da9cb40fb464ff937036cb30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#ng-xi18n&quot;&gt;Work with translation files&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#ng-xi18n&quot;&gt;번역 파일로 작업합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="693bf5045296920065cb91826ea390cf46653e58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#no-element&quot;&gt;Translate text not for display&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#no-element&quot;&gt;표시 용이 아닌 텍스트를 번역합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ffba9d326ca14736fa07cf07ee38b1c94db3c6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#plurals-alternates&quot;&gt;Mark plurals and alternates for translation&lt;/a&gt; in order to comply with the pluralization rules and grammatical constructions of different languages.</source>
          <target state="translated">&lt;a href=&quot;i18n#plurals-alternates&quot;&gt;&lt;/a&gt;여러 언어의 복수화 규칙 및 문법 구조를 준수하기 위해 복수형 및 대체 형을 번역 용으로 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0f2ae687f7212e98163c48334493a17faa7fb52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#set-source-manually&quot;&gt;Set the source locale manually&lt;/a&gt; by setting the &lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt; token.</source>
          <target state="translated">&lt;a href=&quot;i18n#set-source-manually&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt; 토큰을 설정하여 소스 로케일을 수동 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="efb2423a69b13a03252cb9d46bb303e909bcecd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#set-source-manually&quot;&gt;Set the source locale manually&lt;/a&gt; if you need to set the &lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt; token.</source>
          <target state="translated">&lt;a href=&quot;i18n#set-source-manually&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt; 토큰 을 설정해야하는 경우 소스 로케일을 수동으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="398aa303e87f9a39fea199d971be6e33f6ceb3c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#setting-up-cli&quot;&gt;Add the localize package&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#setting-up-cli&quot;&gt;지역화 패키지를 추가합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea242a09a2f0c74540cdf30039bc4426a722021a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#setting-up-locale&quot;&gt;Refer to locales by ID&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#setting-up-locale&quot;&gt;ID로 로케일을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54142d1f4f2fcac44a065380575987462c6e9f0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#translate-attributes&quot;&gt;Mark element attributes for translations&lt;/a&gt;, such as an image's &lt;code&gt;title&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;a href=&quot;i18n#translate-attributes&quot;&gt;&lt;/a&gt;이미지의 &lt;code&gt;title&lt;/code&gt; 속성 과 같은 번역을위한 요소 속성을 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="f0287a9db3c0bf6051ee6e66e63895ac671b1b39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#translate-plural-select&quot;&gt;Translate plurals and alternate expressions&lt;/a&gt; separately.</source>
          <target state="translated">&lt;a href=&quot;i18n#translate-plural-select&quot;&gt;복수형과 대체 표현을&lt;/a&gt; 따로 번역하십시오 .</target>
        </trans-unit>
        <trans-unit id="f45aca27480038c3e38542bd1ec0f5605119436e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n#translate-text-nodes&quot;&gt;Translate each translation file&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;i18n#translate-text-nodes&quot;&gt;각 번역 파일을 번역합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8fd1682d93657f5118b9f436cae6af4e6837c71a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;injector#create&quot;&gt;Injector.create()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;injector#create&quot;&gt;Injector.create()&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ad88ee7c82fb592e054f2612ab9fae67cfb691a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inputs-outputs&quot;&gt;Inputs and Outputs&lt;/a&gt;&amp;mdash;share data between the parent context and child directives or components</source>
          <target state="translated">&lt;a href=&quot;inputs-outputs&quot;&gt;입력 및 출력&lt;/a&gt; &amp;mdash; 상위 컨텍스트와 하위 지시문 또는 구성 요소간에 데이터 공유</target>
        </trans-unit>
        <trans-unit id="df3855b1703de01a4fe4a7b0994332b6f69039c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;interpolation&quot;&gt;Interpolation&lt;/a&gt;&amp;mdash;learn how to use interpolation and expressions in HTML.</source>
          <target state="translated">&lt;a href=&quot;interpolation&quot;&gt;보간&lt;/a&gt; &amp;mdash;HTML에서 보간 및 표현식을 사용하는 방법을 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="406d7a962508d8a0a0a49859d913408903701904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Modules with the Angular Router&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;앵귤러 라우터가 장착 된 지연 로딩 모듈&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cdd4614090735af9c3f4224542dc4055cd7ddc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;지연 로딩 모듈&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="586e450e64b9d00f67fefc2d55e607359541543e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;libraries&quot;&gt;Angular libraries&lt;/a&gt;: Learn about using and creating re-usable libraries.</source>
          <target state="translated">&lt;a href=&quot;libraries&quot;&gt;Angular 라이브러리&lt;/a&gt; : 재사용 가능한 라이브러리 사용 및 생성에 대해 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="676bcd93d0a3a11fa1c6db1aab235fc4cdee5473" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lifecycle-hooks&quot;&gt;Lifecycle hooks&lt;/a&gt;: Tap into key moments in the lifetime of a component, from its creation to its destruction, by implementing the lifecycle hook interfaces.</source>
          <target state="translated">&lt;a href=&quot;lifecycle-hooks&quot;&gt;수명주기 후크&lt;/a&gt; : 수명주기 후크 인터페이스를 구현하여 구성 요소의 생성에서 폐기에 이르기까지 구성 요소 수명의 주요 순간을 활용하십시오.</target>
        </trans-unit>
        <trans-unit id="0fe3291c6dfb10f45e6dc765d3170b2651211545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types&quot;&gt;Types of Feature Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;module-types&quot;&gt;기능 모듈의 유형&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8504f1b6186a88c1b757a9b8233eeeec0aaf717e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types&quot;&gt;Types of NgModules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;module-types&quot;&gt;NgModules의 종류&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2aac7476ac31aeaf7c4e6ace811c2c8ede11d5dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types#domain&quot;&gt;Domain&lt;/a&gt;: A domain NgModule is organized around a feature, business domain, or user experience.</source>
          <target state="translated">&lt;a href=&quot;module-types#domain&quot;&gt;도메인&lt;/a&gt; : 도메인 NgModule은 기능, 비즈니스 도메인 또는 사용자 경험을 중심으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="ef7da530c24ec6e52e07ed25bab1c0cf25340a3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types#routed&quot;&gt;Routed&lt;/a&gt;: The top component of the NgModule acts as the destination of a &lt;a href=&quot;glossary#router&quot;&gt;router&lt;/a&gt; navigation route.</source>
          <target state="translated">&lt;a href=&quot;module-types#routed&quot;&gt;Routed&lt;/a&gt; : NgModule의 최상위 구성 요소는 &lt;a href=&quot;glossary#router&quot;&gt;라우터&lt;/a&gt; 탐색 경로 의 대상 역할을 합니다.</target>
        </trans-unit>
        <trans-unit id="d376c93ff907bd16c40413db690b8e2b69cc09bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types#routing&quot;&gt;Routing&lt;/a&gt;: A routing NgModule provides the routing configuration for another NgModule.</source>
          <target state="translated">&lt;a href=&quot;module-types#routing&quot;&gt;라우팅&lt;/a&gt; : 라우팅 NgModule은 다른 NgModule에 대한 라우팅 구성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2afbd14f912b82709df8ea01f7ac992183c7d046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types#service&quot;&gt;Service&lt;/a&gt;: A service NgModule provides utility services such as data access and messaging.</source>
          <target state="translated">&lt;a href=&quot;module-types#service&quot;&gt;서비스&lt;/a&gt; : 서비스 NgModule은 데이터 액세스 및 메시징과 같은 유틸리티 서비스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="29b1369a61052ce74c6e0b387543f3d84009bb6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types#shared&quot;&gt;Shared&lt;/a&gt;: A shared NgModule makes a set of components, directives, and pipes available to other NgModules.</source>
          <target state="translated">&lt;a href=&quot;module-types#shared&quot;&gt;Shared&lt;/a&gt; : 공유 NgModule은 다른 NgModules에서 사용할 수있는 구성 요소, 지시문 및 파이프 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e6a8e1cf49438acd494f1fefff126380c44348fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types#widget&quot;&gt;Widget&lt;/a&gt;: A widget NgModule makes a component, directive, or pipe available to other NgModules.</source>
          <target state="translated">&lt;a href=&quot;module-types#widget&quot;&gt;위젯&lt;/a&gt; : 위젯 NgModule은 다른 NgModules에서 컴포넌트, 디렉티브 또는 파이프를 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="8e792d77e7b9e086c695b9e095cde7585babd65b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;navigationcancel&quot;&gt;NavigationCancel&lt;/a&gt;: When navigation is canceled.</source>
          <target state="translated">&lt;a href=&quot;navigationcancel&quot;&gt;NavigationCancel&lt;/a&gt; : 내비게이션이 취소되었을 때.</target>
        </trans-unit>
        <trans-unit id="c5ab4e2942b018662da73e888c4f4548e83c6d48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;navigationend&quot;&gt;NavigationEnd&lt;/a&gt;: When navigation ends successfully.</source>
          <target state="translated">&lt;a href=&quot;navigationend&quot;&gt;NavigationEnd&lt;/a&gt; : 내비게이션이 성공적으로 종료되었을 때.</target>
        </trans-unit>
        <trans-unit id="7fc69d8e55014aaad72625fc02c10da9615e65ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;navigationerror&quot;&gt;NavigationError&lt;/a&gt;: When navigation fails due to an unexpected error.</source>
          <target state="translated">&lt;a href=&quot;navigationerror&quot;&gt;NavigationError&lt;/a&gt; : 예기치 않은 오류로 인해 탐색이 실패한 경우.</target>
        </trans-unit>
        <trans-unit id="40bc0a739a41b74fda989251c2150abe94b6d2f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;: Navigation starts.</source>
          <target state="translated">&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt; : 탐색이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="ef1a3b4b050d05d52ad2badc20dc91f23d9f5547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq&quot;&gt;NgModule FAQ&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ngmodule-faq&quot;&gt;NgModule FAQ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c33aec4977fd8a9055ba7b62a6e209902d447fc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq&quot;&gt;NgModules FAQ&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ngmodule-faq&quot;&gt;NgModules FAQ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7396d8059153d1cc90a2525644b01abe772f2e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq#q-reexport&quot;&gt;Re-export&lt;/a&gt; makes module transitivity explicit. If Module 'A' re-exports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and Module 'B' imports Module 'A', Module 'B' components can use &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; even though 'B' itself didn't import &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;ngmodule-faq#q-reexport&quot;&gt;다시 내보내기&lt;/a&gt; 는 모듈의 과도 성을 명시 적으로 만듭니다. 모듈 'A'가 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 을 다시 내보내고 모듈 'B'가 모듈 'A'를 가져 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 'B'자체가 CommonModule을 가져 오지 않은 경우에도 모듈 'B'구성 요소는 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="289c9c06fc0851d19dd1d3a95ef797a278ab7287" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq#q-root-component-or-module&quot;&gt;Always register &lt;em&gt;application-wide&lt;/em&gt; services with the root &lt;code&gt;AppModule&lt;/code&gt;&lt;/a&gt;, not the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;ngmodule-faq#q-root-component-or-module&quot;&gt;항상&lt;em&gt;&lt;/em&gt; &lt;code&gt;AppModule&lt;/code&gt; &lt;/a&gt; 루트 &lt;code&gt;AppComponent&lt;/code&gt; 가 아닌 루트 AppModule을 사용하여 &lt;em&gt;애플리케이션 전체&lt;/em&gt; 서비스를 등록 하십시오 .</target>
        </trans-unit>
        <trans-unit id="60df7be8e2262f58d695d3d14ccbec8769b48b17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-vs-jsmodule&quot;&gt;JavaScript Modules vs. NgModules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ngmodule-vs-jsmodule&quot;&gt;자바 스크립트 모듈 대 NgModules&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fc79f560242af18e219593beb47fa51034529ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="32c03a49bb08e1fdf0d69105d07a855a275d479c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages&quot;&gt;npm Packages&lt;/a&gt;: The Angular Framework, Angular CLI, and components used by Angular applications are packaged as &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt; packages and distributed via the npm registry. The Angular CLI creates a default &lt;code&gt;package.json&lt;/code&gt; file, which specifies a starter set of packages that work well together and jointly support many common application scenarios.</source>
          <target state="translated">&lt;a href=&quot;npm-packages&quot;&gt;npm 패키지&lt;/a&gt; : Angular 프레임 워크, Angular CLI 및 Angular 응용 프로그램에서 사용하는 구성 요소는 &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt; 패키지로 패키지되어 npm 레지스트리를 통해 배포됩니다. Angular CLI는 기본 &lt;code&gt;package.json&lt;/code&gt; 파일을 작성합니다.이 파일은 함께 작동하고 많은 공통 애플리케이션 시나리오를 공동으로 지원하는 패키지의 스타터 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="51030458fe4a2ef299207cdea3f8f9746ce99852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages&quot;&gt;npm packages&lt;/a&gt;: The Angular Framework, Angular CLI, and components used by Angular applications are packaged as &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt; packages and distributed via the npm registry. The Angular CLI creates a default &lt;code&gt;package.json&lt;/code&gt; file, which specifies a starter set of packages that work well together and jointly support many common application scenarios.</source>
          <target state="translated">&lt;a href=&quot;npm-packages&quot;&gt;npm 패키지&lt;/a&gt; : Angular 애플리케이션에서 사용되는 Angular 프레임 워크, Angular CLI 및 구성 요소는 &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt; 패키지 로 패키지화되고 npm 레지스트리를 통해 배포됩니다. Angular CLI는 함께 잘 작동하고 많은 일반적인 애플리케이션 시나리오를 공동으로 지원하는 시작 패키지 세트를 지정 하는 기본 &lt;code&gt;package.json&lt;/code&gt; 파일을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="6136ba0f7ab0f8ff39277bfe2092d86838b39db9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#angular-packages&quot;&gt;&lt;strong&gt;Angular packages&lt;/strong&gt;&lt;/a&gt;: Angular core and optional modules; their package names begin &lt;code&gt;@angular/&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;npm-packages#angular-packages&quot;&gt;&lt;strong&gt;앵귤러 패키지&lt;/strong&gt;&lt;/a&gt; : 앵귤러 코어 및 옵션 모듈; 패키지 이름은 &lt;code&gt;@angular/&lt;/code&gt; 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a71c244f07e09d82292dc92bb3cb182590db5cd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#dependencies&quot;&gt;Dependencies&lt;/a&gt; are essential to &lt;em&gt;running&lt;/em&gt; applications.</source>
          <target state="translated">&lt;a href=&quot;npm-packages#dependencies&quot;&gt;&lt;/a&gt;응용 프로그램 을 &lt;em&gt;실행&lt;/em&gt; 하려면 종속성 이 필수적 입니다.</target>
        </trans-unit>
        <trans-unit id="8af9a60a7ab9f3e1910c02f6d55142329c6714ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#dev-dependencies&quot;&gt;DevDependencies&lt;/a&gt; are only necessary to &lt;em&gt;develop&lt;/em&gt; applications.</source>
          <target state="translated">&lt;a href=&quot;npm-packages#dev-dependencies&quot;&gt;DevDependencies&lt;/a&gt; 는 애플리케이션 을 &lt;em&gt;개발할&lt;/em&gt; 때만 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="6599252d350b6aa09903cc06891188565994af05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#polyfills&quot;&gt;&lt;strong&gt;Polyfill packages&lt;/strong&gt;&lt;/a&gt;: Polyfills plug gaps in a browser's JavaScript implementation.</source>
          <target state="translated">&lt;a href=&quot;npm-packages#polyfills&quot;&gt;&lt;strong&gt;Polyfill 패키지&lt;/strong&gt;&lt;/a&gt; : Polyfill은 브라우저의 JavaScript 구현에서 플러그 갭을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="12350411c789fe81001c9b846f88e3b5bb6b6cd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#support-packages&quot;&gt;&lt;strong&gt;Support packages&lt;/strong&gt;&lt;/a&gt;: 3rd party libraries that must be present for Angular apps to run.</source>
          <target state="translated">&lt;a href=&quot;npm-packages#support-packages&quot;&gt;&lt;strong&gt;지원 패키지&lt;/strong&gt;&lt;/a&gt; : Angular 앱을 실행하려면 타사 라이브러리가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6990f3be7cad53718e427eed9f80186fe7fb7958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;observables&quot;&gt;Observables and event processing&lt;/a&gt;: How to use observables with components and services to publish and subscribe to messages of any type, such as user-interaction events and asynchronous operation results.</source>
          <target state="translated">&lt;a href=&quot;observables&quot;&gt;Observable 및 이벤트 처리&lt;/a&gt; : 구성 요소 및 서비스와 함께 Observable 을 사용하여 사용자 상호 작용 이벤트 및 비동기 작업 결과와 같은 모든 유형의 메시지를 게시하고 구독하는 방법.</target>
        </trans-unit>
        <trans-unit id="a98eb56123c4e29ead9a0122954cdf2e226c005b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;property-binding&quot;&gt;Property binding&lt;/a&gt; sets a specific element property.</source>
          <target state="translated">&lt;a href=&quot;property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 은 특정 요소 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="38b591bad11204011ce5b5b38d425e844fe75a67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;property-binding&quot;&gt;Property binding&lt;/a&gt;&amp;mdash;set properties of target elements or directive &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorators.</source>
          <target state="translated">&lt;a href=&quot;property-binding&quot;&gt;속성 바인딩&lt;/a&gt; &amp;mdash; 대상 요소 또는 지시문 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 데코레이터의 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="4f11ab708e85200043ffcf35803f4a4ef66d82b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;providers&quot;&gt;Providers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;providers&quot;&gt;Providers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bae55e9a01c6e3d1f79097b2bc4e29edf2cc7f00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;releases#versioning&quot;&gt;Angular Versioning and Releases&lt;/a&gt; describes the level of change that you can expect based a release's version number. It also describes supported update paths.</source>
          <target state="translated">&lt;a href=&quot;releases#versioning&quot;&gt;Angular Versioning and Releases&lt;/a&gt; 는 릴리스의 버전 번호를 기반으로 예상되는 변경 수준을 설명합니다. 또한 지원되는 업데이트 경로에 대해서도 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3152cbac5e86337826b9b436cbb91562ea1d15d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;resolveend&quot;&gt;ResolveEnd&lt;/a&gt;: When the router finishes the &lt;em&gt;resolve&lt;/em&gt; phase of routing successfuly.</source>
          <target state="translated">&lt;a href=&quot;resolveend&quot;&gt;ResolveEnd&lt;/a&gt; : 라우터가 성공적으로 라우팅 의 &lt;em&gt;해결&lt;/em&gt; 단계를 완료 한 경우 .</target>
        </trans-unit>
        <trans-unit id="b0f197a280d9c670c80ec838f55e2a0b342956a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;: When the router begins the &lt;em&gt;resolve&lt;/em&gt; phase of routing.</source>
          <target state="translated">&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt; : 라우터가 라우팅 의 &lt;em&gt;해결&lt;/em&gt; 단계를 시작할 때 .</target>
        </trans-unit>
        <trans-unit id="0e37137e52d0ad34f5e409784f162e1823c22716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;routeconfigloadend&quot;&gt;RouteConfigLoadEnd&lt;/a&gt;: After a route has been lazy loaded.</source>
          <target state="translated">&lt;a href=&quot;routeconfigloadend&quot;&gt;RouteConfigLoadEnd&lt;/a&gt; : 경로가 지연로드 된 후.</target>
        </trans-unit>
        <trans-unit id="eca5a39967ebce58cc75b45a768ad086850d50d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;routeconfigloadstart&quot;&gt;RouteConfigLoadStart&lt;/a&gt;: Before the router &lt;a href=&quot;../../guide/router#lazy-loading&quot;&gt;lazy loads&lt;/a&gt; a route configuration.</source>
          <target state="translated">&lt;a href=&quot;routeconfigloadstart&quot;&gt;RouteConfigLoadStart&lt;/a&gt; : 라우터 가 경로 구성을 &lt;a href=&quot;../../guide/router#lazy-loading&quot;&gt;지연로드&lt;/a&gt; 하기 전 .</target>
        </trans-unit>
        <trans-unit id="7d67250f40f2acb9478b566e9898b4166d758c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt; when using &lt;a href=&quot;router#appendix-locationstrategy-and-browser-url-styles&quot;&gt;hash-based routing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;router&quot;&gt;&lt;/a&gt;&lt;a href=&quot;router#appendix-locationstrategy-and-browser-url-styles&quot;&gt;해시 기반 라우팅&lt;/a&gt; 사용시 라우터</target>
        </trans-unit>
        <trans-unit id="5a78d96bac23a2d2a569258fca2f25cd8528d8c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt; when using &lt;a href=&quot;router#location-strategy&quot;&gt;hash-based routing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;router&quot;&gt;&lt;/a&gt;&lt;a href=&quot;router#location-strategy&quot;&gt;해시 기반 라우팅을&lt;/a&gt; 사용할 때 라우터</target>
        </trans-unit>
        <trans-unit id="7864666c0f5634cca853c4eda0430b6e83d2094c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;router&quot;&gt;Routing and Navigation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;router&quot;&gt;라우팅 및 탐색&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe1c47e9ce82a9038b3b5067ebf930dc5ef2b250" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;routesrecognized&quot;&gt;RoutesRecognized&lt;/a&gt;: When the router parses the URL and the routes are recognized.</source>
          <target state="translated">&lt;a href=&quot;routesrecognized&quot;&gt;RoutesRecognized&lt;/a&gt; : 라우터가 URL을 구문 분석하고 경로를 인식 할 때.</target>
        </trans-unit>
        <trans-unit id="36009a087e7ceb2549ce9a913f2c02245bf5a415" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;schematics&quot;&gt;Schematics&lt;/a&gt;: Learn about customizing and extending the CLI's generation capabilities.</source>
          <target state="translated">&lt;a href=&quot;schematics&quot;&gt;회로도&lt;/a&gt; : CLI의 생성 기능을 사용자 정의하고 확장하는 방법에 대해 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="c8b897da3559a6d342d56c2db067e7fbbdab1152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scroll&quot;&gt;Scroll&lt;/a&gt;: When the user scrolls.</source>
          <target state="translated">&lt;a href=&quot;scroll&quot;&gt;스크롤&lt;/a&gt; : 사용자가 스크롤 할 때.</target>
        </trans-unit>
        <trans-unit id="6b9ac18f71b5fd4b4d4cca2b133628c2e857202f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;security&quot;&gt;Security guidelines&lt;/a&gt;: Learn about Angular's built-in protections against common web-app vulnerabilities and attacks such as cross-site scripting attacks.</source>
          <target state="translated">&lt;a href=&quot;security&quot;&gt;보안 지침&lt;/a&gt; : 일반적인 웹앱 취약점 및 사이트 간 스크립팅 공격과 같은 공격에 대한 Angular의 기본 제공 보호 기능에 대해 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="0b0cf59eef40529551dde50fb2b75e0d4ccc0e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-communications&quot;&gt;Communicating with service workers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-communications&quot;&gt;서비스 근로자와의 의사 소통&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f31ed292ba2f7d16618f69f9b907ceaaaef52d39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-communications&quot;&gt;Service Worker Communication&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-communications&quot;&gt;서비스 근로자 커뮤니케이션&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0190a4bb7d780c19467a905a93502d1ddeb0343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-config&quot;&gt;Service Worker Configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-config&quot;&gt;서비스 워커 구성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c25ab6c23c5b43a04ea66186fb5ae5821717927" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-devops&quot;&gt;Service Worker in Production&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-devops&quot;&gt;생산 서비스 요원&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e98022b284274c8d4411388102ad633a44e04943" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-getting-started&quot;&gt;Getting Started with Service Workers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-getting-started&quot;&gt;서비스 작업자 시작하기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="745c1063b20a1f964dbb97ea774091c0778de3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-intro&quot;&gt;Service Workers&lt;/a&gt;: Use a service worker to reduce dependency on the network significantly improving the user experience.</source>
          <target state="translated">&lt;a href=&quot;service-worker-intro&quot;&gt;서비스 워커&lt;/a&gt; : 서비스 워커를 사용하여 네트워크에 대한 종속성을 줄이면 사용자 경험이 크게 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="0766137b354ccd5d8271fa3ce0633786c4552f4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-intro&quot;&gt;Service workers and PWA&lt;/a&gt;: Use a service worker to reduce dependency on the network and significantly improve the user experience.</source>
          <target state="translated">&lt;a href=&quot;service-worker-intro&quot;&gt;서비스 워커 및 PWA&lt;/a&gt; : 서비스 워커를 사용하여 네트워크에 대한 종속성을 줄이고 사용자 경험을 크게 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="44b80aaf171346ddd6cfb4f3ba23cec88ba9d330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sharing-ngmodules&quot;&gt;Sharing Modules&lt;/a&gt;, which elaborates on the concepts covered on this page.</source>
          <target state="translated">&lt;a href=&quot;sharing-ngmodules&quot;&gt;&lt;/a&gt;이 페이지에서 다루는 개념을 자세히 설명하는 공유 모듈 .</target>
        </trans-unit>
        <trans-unit id="7cad0d8922aef4307cfca5faa4eea387fb79eb1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;singleton-services&quot;&gt;Singleton Services&lt;/a&gt;, which elaborates on the concepts covered on this page.</source>
          <target state="translated">&lt;a href=&quot;singleton-services&quot;&gt;&lt;/a&gt;이 페이지에서 다루는 개념을 자세히 설명하는 Singleton Services</target>
        </trans-unit>
        <trans-unit id="51034508c240edddf1f305db239dfc1647621e83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;structural-directives#inside-ngfor&quot;&gt;&lt;code&gt;*ngFor&lt;/code&gt;&lt;/a&gt; is an iterative; it tells Angular to stamp out one &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; per hero in the &lt;code&gt;heroes&lt;/code&gt; list.</source>
          <target state="translated">&lt;a href=&quot;structural-directives#inside-ngfor&quot;&gt; &lt;code&gt;*ngFor&lt;/code&gt; &lt;/a&gt; 는 반복적입니다. Angular는 &lt;code&gt;heroes&lt;/code&gt; 목록에서 영웅 당하나의 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 를 스탬프 처리하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="e63ea0a7a5ab79959535969e205afd75df36d3d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;structural-directives#ngif-case-study&quot;&gt;&lt;code&gt;*ngIf&lt;/code&gt;&lt;/a&gt; is a conditional; it includes the &lt;code&gt;HeroDetail&lt;/code&gt; component only if a selected hero exists.</source>
          <target state="translated">&lt;a href=&quot;structural-directives#ngif-case-study&quot;&gt; &lt;code&gt;*ngIf&lt;/code&gt; &lt;/a&gt; 는 조건부입니다. 선택한 Hero가있는 경우에만 &lt;code&gt;HeroDetail&lt;/code&gt; 구성 요소를포함합니다.</target>
        </trans-unit>
        <trans-unit id="3424a14623794e80feeaee81d9379888931bc2fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;svg-in-templates&quot;&gt;SVG in templates&lt;/a&gt;&amp;mdash;dynamically generate interactive graphics.</source>
          <target state="translated">&lt;a href=&quot;svg-in-templates&quot;&gt;템플릿의 SVG &amp;mdash;&lt;/a&gt; 대화 형 그래픽을 동적으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d6e2ba9b706b937f94a5bb078983193b7a544a2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-expression-operators&quot;&gt;Template expression operators&lt;/a&gt;&amp;mdash;learn about the pipe operator, &lt;code&gt;|&lt;/code&gt;, and protect against &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; values in your HTML.</source>
          <target state="translated">&lt;a href=&quot;template-expression-operators&quot;&gt;템플릿 표현식 연산자 &amp;mdash;&lt;/a&gt; 파이프 연산자에 대해 알아보기, &lt;code&gt;|&lt;/code&gt; , HTML의 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 값 으로부터 보호 합니다.</target>
        </trans-unit>
        <trans-unit id="93b24a2e352085e41cb732266774b8f39ad57564" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-reference-variables&quot;&gt;Template reference variables&lt;/a&gt;&amp;mdash;use special variables to reference a DOM element within a template.</source>
          <target state="translated">&lt;a href=&quot;template-reference-variables&quot;&gt;템플릿 참조 변수-&lt;/a&gt; 특수 변수를 사용하여 템플릿 내에서 DOM 요소를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="ab0d20821ff3602873f0c51cba6063d12d63003e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-statements&quot;&gt;Template statements&lt;/a&gt;&amp;mdash;respond to events in your templates.</source>
          <target state="translated">&lt;a href=&quot;template-statements&quot;&gt;템플릿 설명 &amp;mdash; 템플릿의&lt;/a&gt; 이벤트에 응답합니다.</target>
        </trans-unit>
        <trans-unit id="35a9d4e23669ba4a96b3b12eaa59df34a5da3091" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngClass&quot;&gt;&lt;code&gt;NgClass&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds and removes a set of CSS classes.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#ngClass&quot;&gt; &lt;code&gt;NgClass&lt;/code&gt; &lt;/a&gt; &amp;mdash;CSS 클래스 세트를 추가하고 제거합니다.</target>
        </trans-unit>
        <trans-unit id="2e53659b9d00c9421af85d1aa856fb44971db633" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngFor&quot;&gt;&lt;code&gt;NgFor&lt;/code&gt;&lt;/a&gt;&amp;mdash;repeat a node for each item in a list.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#ngFor&quot;&gt; &lt;code&gt;NgFor&lt;/code&gt; &amp;mdash;&lt;/a&gt; 목록의 각 항목에 대한 노드를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="224bf2d91e9f1bec7d0139d20782d5aaca524d52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngIf&quot;&gt;&lt;code&gt;NgIf&lt;/code&gt;&lt;/a&gt;&amp;mdash;conditionally creates or destroys subviews from the template.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#ngIf&quot;&gt; &lt;code&gt;NgIf&lt;/code&gt; -&lt;/a&gt; 템플릿에서 하위 뷰를 조건부로 작성하거나 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="abf68a84f627bea6877403337a58b6f648b7d58c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngModel&quot;&gt;&lt;code&gt;NgModel&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds two-way data binding to an HTML form element.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#ngModel&quot;&gt; &lt;code&gt;NgModel&lt;/code&gt; &lt;/a&gt; -HTML 양식 요소에 양방향 데이터 바인딩을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f9fcb617321c4bc14cfad94d88a019eeaa5d588e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngStyle&quot;&gt;&lt;code&gt;NgStyle&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds and removes a set of HTML styles.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#ngStyle&quot;&gt; &lt;code&gt;NgStyle&lt;/code&gt; &lt;/a&gt; &amp;mdash;HTML 스타일을 추가하고 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b17be61e362d9c8c3f1d0ef99793474177be2c73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;&lt;code&gt;NgSwitch&lt;/code&gt;&lt;/a&gt;&amp;mdash;a set of directives that switch among alternative views.</source>
          <target state="translated">&lt;a href=&quot;template-syntax#ngSwitch&quot;&gt; &lt;code&gt;NgSwitch&lt;/code&gt; &lt;/a&gt; &amp;mdash; 대체보기간에 전환되는 지시문 집합입니다.</target>
        </trans-unit>
        <trans-unit id="44e9adac5d9f54a0682c824ea3e6932319935eb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing&quot;&gt;Testing platform&lt;/a&gt;: Run unit tests on your application parts as they interact with the Angular framework.</source>
          <target state="translated">&lt;a href=&quot;testing&quot;&gt;테스트 플랫폼&lt;/a&gt; : Angular 프레임 워크와 상호 작용할 때 애플리케이션 파트에서 단위 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0cd7033e67e2ad9c07130532a4ae09da55f5eb5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-attribute-directives&quot;&gt;Debugging tests&lt;/a&gt;&amp;mdash;uncover common testing bugs.</source>
          <target state="translated">&lt;a href=&quot;testing-attribute-directives&quot;&gt;디버깅 테스트&lt;/a&gt; &amp;mdash; 일반적인 테스트 버그를 발견합니다.</target>
        </trans-unit>
        <trans-unit id="ca6cb6036e5b0197e1d548408be17dcdc13b69e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-attribute-directives&quot;&gt;Testing attribute directives&lt;/a&gt;&amp;mdash;learn about how to test your attribute directives.</source>
          <target state="translated">&lt;a href=&quot;testing-attribute-directives&quot;&gt;속성 지시문 테스트 &amp;mdash; 속성 지시문&lt;/a&gt; 을 테스트하는 방법에 대해 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="a09077a408473c1e6208d5374c1753f616fc3877" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-code-coverage&quot;&gt;Code coverage&lt;/a&gt;&amp;mdash;find out how much of your app your tests are covering and how to specify required amounts.</source>
          <target state="translated">&lt;a href=&quot;testing-code-coverage&quot;&gt;코드 커버리지&lt;/a&gt; &amp;mdash; 테스트에서 다루는 앱의 양과 필요한 양을 지정하는 방법을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a7bc221d4df153a67d687b466125130169132e01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-components-basics&quot;&gt;Basics of testing components&lt;/a&gt;&amp;mdash;discover the basics of testing Angular components.</source>
          <target state="translated">&lt;a href=&quot;testing-components-basics&quot;&gt;구성 요소 테스트&lt;/a&gt; 의 기본 &amp;mdash;Angular 구성 요소 테스트 의 기본 사항을 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="e431f95045145d8e9ad1bbc7e9110ae911bbcfdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-components-scenarios&quot;&gt;Component testing scenarios&lt;/a&gt;&amp;mdash;read about the various kinds of component testing scenarios and use cases.</source>
          <target state="translated">&lt;a href=&quot;testing-components-scenarios&quot;&gt;구성 요소 테스트 시나리오 &amp;mdash;&lt;/a&gt; 다양한 종류의 구성 요소 테스트 시나리오 및 사용 사례에 대해 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="a69122f3dbfa774667988fd0dae582325048de1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-pipes&quot;&gt;Testing pipes&lt;/a&gt;&amp;mdash;find out how to test attribute directives.</source>
          <target state="translated">&lt;a href=&quot;testing-pipes&quot;&gt;파이프&lt;/a&gt; 테스트 &amp;mdash; 속성 지시문을 테스트하는 방법을 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="e933a8ba98eefa2d8fbf436c55b4814de143b725" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-services&quot;&gt;Testing services&lt;/a&gt;&amp;mdash;learn how to test the services your app uses.</source>
          <target state="translated">&lt;a href=&quot;testing-services&quot;&gt;서비스&lt;/a&gt; 테스트 &amp;mdash; 앱에서 사용하는 서비스를 테스트하는 방법을 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="a7e27e10cc4fc3b36ca477a23c2476500d3b2649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing-utility-apis&quot;&gt;Testing utility APIs&lt;/a&gt;&amp;mdash;get familiar with Angular testing features.</source>
          <target state="translated">&lt;a href=&quot;testing-utility-apis&quot;&gt;테스트 유틸리티 API &amp;mdash;&lt;/a&gt; Angular 테스트 기능에 익숙해집니다.</target>
        </trans-unit>
        <trans-unit id="07e2e0f40596a7b70ca29cdf5e811e8f5f8dd547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;two-way-binding&quot;&gt;Two-way binding&lt;/a&gt;&amp;mdash;share data between a class and its template.</source>
          <target state="translated">&lt;a href=&quot;two-way-binding&quot;&gt;양방향 바인딩&lt;/a&gt; &amp;mdash; 클래스와 해당 템플릿간에 데이터를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="c311ee4f65a545ab767e4db7fcc7012241021714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript configuration&lt;/a&gt;: TypeScript is the primary language for Angular application development.</source>
          <target state="translated">&lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript 구성&lt;/a&gt; : TypeScript는 Angular 응용 프로그램 개발을위한 기본 언어입니다.</target>
        </trans-unit>
        <trans-unit id="79ca60a89f6d1fbd40c0143c1804a15c47481c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typescript-configuration#tsconfig&quot;&gt;tsconfig.json&lt;/a&gt;&amp;mdash;TypeScript compiler configuration.</source>
          <target state="translated">&lt;a href=&quot;typescript-configuration#tsconfig&quot;&gt;tsconfig.json-&lt;/a&gt; TypeScript 컴파일러 구성.</target>
        </trans-unit>
        <trans-unit id="3cb47bde2e932892f7a5ff9a839eef276319723b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typescript-configuration#typings&quot;&gt;typings&lt;/a&gt;&amp;mdash;TypesScript declaration files.</source>
          <target state="translated">&lt;a href=&quot;typescript-configuration#typings&quot;&gt;typings&lt;/a&gt; &amp;mdash;TypesScript 선언 파일입니다.</target>
        </trans-unit>
        <trans-unit id="bc89ce31f7e0691030da999e220204ded70ffcaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;universal&quot;&gt;Server-side Rendering&lt;/a&gt;: Angular Universal generates static application pages on the server through server-side rendering (SSR). This allows you to run your Angular app on the server in order to improve performance and show the first page quickly on mobile and low-powered devices, and also facilitate web crawlers.</source>
          <target state="translated">&lt;a href=&quot;universal&quot;&gt;서버 측 렌더링&lt;/a&gt; : Angular Universal은 서버 측 렌더링 (SSR)을 통해 서버에서 정적 애플리케이션 페이지를 생성합니다. 이를 통해 서버에서 Angular 앱을 실행하여 성능을 향상시키고 모바일 및 저전력 장치에서 첫 페이지를 빠르게 표시하고 웹 크롤러를 용이하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8944467d2f1bc13cf57ef326922fc17e985a5ea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;universal&quot;&gt;Server-side rendering&lt;/a&gt;: Angular Universal generates static application pages on the server through server-side rendering (SSR). This allows you to run your Angular app on the server in order to improve performance and show the first page quickly on mobile and low-powered devices, and also facilitate web crawlers.</source>
          <target state="translated">&lt;a href=&quot;universal&quot;&gt;서버 측 렌더링&lt;/a&gt; : Angular Universal은 서버 측 렌더링 (SSR)을 통해 서버에 정적 애플리케이션 페이지를 생성합니다. 이를 통해 서버에서 Angular 앱을 실행하여 성능을 향상시키고 모바일 및 저전력 장치에서 빠르게 첫 페이지를 표시하고 웹 크롤러를 용이하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac52eb7e615e1132e4c7515adbbe99a3aebdb0cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#making-angular-dependencies-injectable-to-angularjs&quot;&gt;Making Angular Dependencies Injectable to AngularJS&lt;/a&gt;. &lt;em&gt;NOTE: If you are downgrading multiple modules, you need to specify the name of the downgraded module each injectable belongs to, when calling &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;upgrade#making-angular-dependencies-injectable-to-angularjs&quot;&gt;AngularJS와에 각도 의존성 주사를 만들기&lt;/a&gt; . &lt;em&gt;참고 : 여러 모듈을 다운 그레이드하는 경우 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; 호출 할 때 각 인젝터 블이 속하는 다운 그레이드 된 모듈의 이름을 지정해야합니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56500e3adac93b17c38cb29ec0cb166fb34eae4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#making-angularjs-dependencies-injectable-to-angular&quot;&gt;Making AngularJS Dependencies Injectable to Angular&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;upgrade#making-angularjs-dependencies-injectable-to-angular&quot;&gt;AngularJS 의존성을 Angular에 주입 가능하게 만들기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e07bc685278a9d9a470e7d263db94d81ed7eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#projecting-angularjs-content-into-angular-components&quot;&gt;Projecting AngularJS Content into Angular Components&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;upgrade#projecting-angularjs-content-into-angular-components&quot;&gt;AngularJS 컨텐츠를 각도 컴포넌트로 투사&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee0e82db5161cd2b9be5cc2919b3fb4a014597df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#transcluding-angular-content-into-angularjs-component-directives&quot;&gt;Transcluding Angular Content into AngularJS Component Directives&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;upgrade#transcluding-angular-content-into-angularjs-component-directives&quot;&gt;Angular 컨텐츠를 AngularJS 컴포넌트 지시문으로 변환&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cfac725eb791f4869d28a852726875ca336cd85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#using-angular-components-from-angularjs-code&quot;&gt;Using Angular Components from AngularJS Code&lt;/a&gt;. &lt;em&gt;NOTE: If you are downgrading multiple modules, you need to specify the name of the downgraded module each component belongs to, when calling &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;upgrade#using-angular-components-from-angularjs-code&quot;&gt;AngularJS 코드에서 각도 구성 요소 사용&lt;/a&gt; . &lt;em&gt;참고 : 여러 모듈을 다운 그레이드하는 경우 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; 호출 할 때 각 구성 요소가 속하는 다운 그레이드 된 모듈의 이름을 지정해야합니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b20b0ba5f4af641907f060c2e1e223ee03b8cce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#using-angularjs-component-directives-from-angular-code&quot;&gt;Using AngularJS Component Directives from Angular Code&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;upgrade#using-angularjs-component-directives-from-angular-code&quot;&gt;Angular 코드에서 AngularJS 구성 요소 지시문 사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05be404cb7159eab882ee00f664fb44c8edfd76a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;web-worker&quot;&gt;Web workers&lt;/a&gt;: Learn how to run CPU-intensive computations in a background thread.</source>
          <target state="translated">&lt;a href=&quot;web-worker&quot;&gt;웹 작업자&lt;/a&gt; : 백그라운드 스레드에서 CPU 집약적 인 계산을 실행하는 방법을 알아 봅니다.</target>
        </trans-unit>
        <trans-unit id="1f9eefb5bb5483152fe22fb75b988d8ddedfc257" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;i&gt;Link parameters array&lt;/i&gt;&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;i&gt;링크 파라미터 배열&lt;/i&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="07aa4df86bb3a59ccd6a32ea0c59b0b861a6dfc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;i&gt;Routing component&lt;/i&gt;&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;i&gt;라우팅 구성 요소&lt;/i&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bc096abf022b3e0bf250788b3ae5f37f95f68078" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Content-rich applications&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;풍부한 컨텐츠&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ca8c5a5bd70ac3f83354f817f3a31df706856901" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Definitions:&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Definitions:&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4ebc9bc50d8714000ac7281f1c2c5e9f08e7be7c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Easy dynamic content in an Angular app&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Angular 앱의 간편한 동적 콘텐츠&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="64d6a8b1310f1064e77dd425a5baa78d8744c89a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Important:&lt;/b&gt; The characters &lt;code&gt;.&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;&lt;code&gt;#&lt;/code&gt; (and others below) are special placeholders that stand for the decimal separator, and so on, and are NOT real characters. You must NOT &quot;translate&quot; the placeholders. For example, don't change &lt;code&gt;.&lt;/code&gt; to &lt;code&gt;,&lt;/code&gt; even though in your language the decimal point is written with a comma. The symbols should be replaced by the local equivalents, using the appropriate &lt;code&gt;&lt;a href=&quot;numbersymbol&quot;&gt;NumberSymbol&lt;/a&gt;&lt;/code&gt; for your language.</source>
          <target state="translated">&lt;b&gt;중요 :&lt;/b&gt; 문자 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;,&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; &lt;code&gt;#&lt;/code&gt; (및 기타)은 소수점 구분 기호 등을 나타내는 특수 자리 표시 자이며 실제 문자가 아닙니다. 자리 표시자를 &quot;번역&quot;해서는 안됩니다. 예를 들어, 변경하지 마십시오 &lt;code&gt;.&lt;/code&gt; 에 &lt;code&gt;,&lt;/code&gt; 언어에 소수점이 쉼표로 작성된 경우에도. 적절한 &lt;code&gt;&lt;a href=&quot;numbersymbol&quot;&gt;NumberSymbol&lt;/a&gt;&lt;/code&gt; 을 사용하여 기호를 로컬 동등 물로 바꿔야합니다. 언어에 을 .</target>
        </trans-unit>
        <trans-unit id="daa1b0fb57aebdf9db7c088f57d84b699c7e613b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;template reference&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;템플릿 참조&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="22a2b342809ebf174f21b9bb8b098a40720c37f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!/**/*.map&lt;/code&gt; exclude all sourcemaps.</source>
          <target state="translated">&lt;code&gt;!/**/*.map&lt;/code&gt; 은 모든 소스 맵을 제외합니다.</target>
        </trans-unit>
        <trans-unit id="c36aec0f6c679b2e537f5763c652e7c5c94b2374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; - Add the package to the dependencies</source>
          <target state="translated">&lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; - 종속성 에 패키지 추가</target>
        </trans-unit>
        <trans-unit id="835846ae0912e52983a38b8b361f350c04f82b54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; - Add the package to the devDependencies</source>
          <target state="translated">&lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; -devDependencies 에 패키지 추가</target>
        </trans-unit>
        <trans-unit id="1f096d53b6c2253adf945490a3d9739887867ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#name=&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; exports &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; into a local variable called &lt;code&gt;name&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; mirrors many of the properties of its underlying &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance, so you can use this in the template to check for control states such as &lt;code&gt;valid&lt;/code&gt; and &lt;code&gt;dirty&lt;/code&gt;. For a full list of control properties, see the &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; API reference.</source>
          <target state="translated">&lt;code&gt;#name=&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;name&lt;/code&gt; 이라는 로컬 변수로 내 보냅니다 . &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 은 기본 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스 의 많은 속성을 미러링 하므로 템플릿에서이를 사용하여 &lt;code&gt;valid&lt;/code&gt; 및 &lt;code&gt;dirty&lt;/code&gt; 같은 제어 상태를 확인할 수 있습니다 . 컨트롤 속성의 전체 목록은 &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; API 참조를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0932a1ac0eab10385e5ea5373aa9aa3eabf6498d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$event&lt;/code&gt; and event handling statements</source>
          <target state="translated">&lt;code&gt;$event&lt;/code&gt; 및 이벤트 처리 명령문</target>
        </trans-unit>
        <trans-unit id="3e5f5e68b5abcf0caec77963bdd2fd955e0442fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$implicit: T&lt;/code&gt;: The value of the individual items in the iterable (&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;$implicit: T&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;&lt;/code&gt; ( ngForOf ) 의 개별 항목 값입니다 .</target>
        </trans-unit>
        <trans-unit id="1aaaba15641048c99b47e564c041a8fdda7744a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;div &lt;b&gt;[ngStyle]&lt;/b&gt;=&quot;{'property': 'value'}&quot;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;div &lt;b&gt;[ngStyle]&lt;/b&gt;=&quot;dynamicStyles()&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;div &lt;b&gt;[ngStyle]&lt;/b&gt;=&quot;{'property': 'value'}&quot;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;div &lt;b&gt;[ngStyle]&lt;/b&gt;=&quot;dynamicStyles()&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c7008e3d194f46e9d62fab7d157d8f52e909f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; is the host element.</source>
          <target state="translated">&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 는 호스트 요소입니다.</target>
        </trans-unit>
        <trans-unit id="686c790a0aa440a5bc90ce1ffac9d143ba9b819e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;template&lt;/code&gt;&amp;gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;template&lt;/code&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3794ddaf1be97f7c035cb69e27a1214703b5a588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;a href=&quot;../core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt;: equivalent to &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'&lt;a href=&quot;../core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt; : 등가 &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="18c9c3fc600cc3c128168731689fdf4de6303a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;a href=&quot;urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;'&lt;/code&gt; - UrlSerializer that&amp;rsquo;s configured with the router.</source>
          <target state="translated">&lt;code&gt;'&lt;a href=&quot;urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;'&lt;/code&gt; 라우터로 구성된 것 UrlSerializer -.</target>
        </trans-unit>
        <trans-unit id="f3962d7b9fd4b767897236d047a134c5ea8c4696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'URIError'&lt;/code&gt; - Error thrown when parsing a bad URL.</source>
          <target state="translated">&lt;code&gt;'URIError'&lt;/code&gt; - 잘못된 URL을 구문 분석 할 때 발생하는 오류입니다.</target>
        </trans-unit>
        <trans-unit id="3c79a177e5863f1c4cb1d5d4e6e4fed8fe997457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'always'&lt;/code&gt; : Inherit parent parameters, data, and resolved data for all child routes.</source>
          <target state="translated">&lt;code&gt;'always'&lt;/code&gt; : 모든 자식 경로에 대한 부모 매개 변수, 데이터 및 확인 된 데이터를 상속합니다.</target>
        </trans-unit>
        <trans-unit id="bca72adaa4fd68ab37c9c844d9d27690d93850a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'emptyOnly'&lt;/code&gt; : Inherit parent parameters, data, and resolved data for path-less or component-less routes.</source>
          <target state="translated">&lt;code&gt;'emptyOnly'&lt;/code&gt; : 경로가 없거나 구성 요소가없는 경로에 대해 부모 매개 변수, 데이터 및 확인 된 데이터를 상속합니다.</target>
        </trans-unit>
        <trans-unit id="7fd7a4a6f153fabde0fe8f332d5f12bfcd6c6b4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'freshness'&lt;/code&gt;: Passes the requests through to the network and falls back to the &lt;code&gt;performance&lt;/code&gt; behavior when offline. This value is useful when the server redirects the navigation requests elsewhere using an HTTP redirect (3xx status code). Reasons for using this value include:</source>
          <target state="translated">&lt;code&gt;'freshness'&lt;/code&gt; : 요청을 네트워크로 전달하고 오프라인 일 때 &lt;code&gt;performance&lt;/code&gt; 동작으로 대체합니다. 이 값은 서버가 HTTP 리디렉션 (3xx 상태 코드)을 사용하여 탐색 요청을 다른 곳으로 리디렉션 할 때 유용합니다. 이 값을 사용하는 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d111ebfb69bc5cb63306f29256fc454e5003456b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'full'&lt;/code&gt;: equivalent to &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss a zzzz'&lt;/code&gt; (&lt;code&gt;Monday, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'full'&lt;/code&gt; : &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss a zzzz'&lt;/code&gt; ( &lt;code&gt;Monday, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e00e510463f41a9a01f8be681830b452ce0596aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullDate'&lt;/code&gt;: equivalent to &lt;code&gt;'EEEE, MMMM d, y'&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'fullDate'&lt;/code&gt; : &lt;code&gt;'EEEE, MMMM d, y'&lt;/code&gt; 와 동일합니다 ( &lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015&lt;/code&gt; &lt;a href=&quot;weekday#Monday&quot;&gt;일 월요일&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6f85cfa8ea3a728a815d481069537792dfb77080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullDate'&lt;/code&gt;: equivalent to &lt;code&gt;'EEEE, MMMM d, y'&lt;/code&gt; (&lt;code&gt;Monday, June 15, 2015&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'fullDate'&lt;/code&gt; : &lt;code&gt;'EEEE, MMMM d, y'&lt;/code&gt; ( &lt;code&gt;Monday, June 15, 2015&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="6fff836b794a1f71f68fdb4fb66ec9e13ac03827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMMEEEEd'&lt;/code&gt; (e.g. &lt;code&gt;&lt;a href=&quot;weekday#Friday&quot;&gt;Friday&lt;/a&gt;, September 3, 2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'fullDate'&lt;/code&gt; : 동등 &lt;code&gt;'yMMMMEEEEd'&lt;/code&gt; (예 : &lt;code&gt;&lt;a href=&quot;weekday#Friday&quot;&gt;Friday&lt;/a&gt;, September 3, 2010&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fdd99c4ad278021c0633c452ef2f1fdf890d3ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; (&lt;code&gt;9:03:01 AM GMT+01:00&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'fullTime'&lt;/code&gt; : &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; ( &lt;code&gt;9:03:01 AM GMT+01:00&lt;/code&gt; )와 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1918a371cdcf06ab863ca1f935d5e48cb0d5ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss a zzzz'&lt;/code&gt; (&lt;code&gt;9:03:01 AM GMT+01:00&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'fullTime'&lt;/code&gt; : &lt;code&gt;'h:mm:ss a zzzz'&lt;/code&gt; ( &lt;code&gt;9:03:01 AM GMT+01:00&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="96f9dbc5a865e0963c61d30ea9085b8d23adc94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ignore'&lt;/code&gt; : The router ignores the request.</source>
          <target state="translated">&lt;code&gt;'ignore'&lt;/code&gt; : 라우터가 요청을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="83d7879b351c35637b1ae413a68d1aeaf3370368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'long'&lt;/code&gt;: equivalent to &lt;code&gt;'MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; (&lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'long'&lt;/code&gt; : &lt;code&gt;'MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; ( &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="77d55340d1eced490eace32d01950d4e26259620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'long'&lt;/code&gt;: equivalent to &lt;code&gt;'MMMM d, y, h:mm:ss a z'&lt;/code&gt; (&lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'long'&lt;/code&gt; : &lt;code&gt;'MMMM d, y, h:mm:ss a z'&lt;/code&gt; ( &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="788ca79109eae611761a7bc664533d3ca9f30859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longDate'&lt;/code&gt;: equivalent to &lt;code&gt;'MMMM d, y'&lt;/code&gt; (&lt;code&gt;June 15, 2015&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'longDate'&lt;/code&gt; : &lt;code&gt;'MMMM d, y'&lt;/code&gt; ( &lt;code&gt;June 15, 2015&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8042cc768188f93b931e11d226e294683607bcbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMMd'&lt;/code&gt; (e.g. &lt;code&gt;September 3, 2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'longDate'&lt;/code&gt; : 동등 &lt;code&gt;'yMMMMd'&lt;/code&gt; (예를 들어 &lt;code&gt;September 3, 2010&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="34eaa339f0b2309477bacd7a9f01e2a4190143a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; (&lt;code&gt;9:03:01 AM GMT+1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'longTime'&lt;/code&gt; : &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; ( &lt;code&gt;9:03:01 AM GMT+1&lt;/code&gt; )와 같습니다.</target>
        </trans-unit>
        <trans-unit id="c21095c76764b1725b731295cc16336d368d9c4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss a z'&lt;/code&gt; (&lt;code&gt;9:03:01 AM GMT+1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'longTime'&lt;/code&gt; : &lt;code&gt;'h:mm:ss a z'&lt;/code&gt; ( &lt;code&gt;9:03:01 AM GMT+1&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="2695850331ded4cf1fa96d085f85b20ca16b0838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ltr' | 'rtl'&lt;/code&gt;: 'rtl' or 'ltr'</source>
          <target state="translated">&lt;code&gt;'ltr' | 'rtl'&lt;/code&gt; : 'rtl'또는 'ltr'</target>
        </trans-unit>
        <trans-unit id="708e5ddb98c01d161e4d4dace6dd96796100924f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'medium'&lt;/code&gt;: equivalent to &lt;code&gt;'MMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'medium'&lt;/code&gt; : &lt;code&gt;'MMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; ( &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="267ff7e71800493e65042b0a37d309917e71c766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'medium'&lt;/code&gt;: equivalent to &lt;code&gt;'MMM d, y, h:mm:ss a'&lt;/code&gt; (&lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'medium'&lt;/code&gt; : &lt;code&gt;'MMM d, y, h:mm:ss a'&lt;/code&gt; ( &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="a36d928c9a84885299b19bc4a64c04f558a38921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'medium'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMdjms'&lt;/code&gt; (e.g. &lt;code&gt;Sep 3, 2010, 12:05:08 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'medium'&lt;/code&gt; : 동등 &lt;code&gt;'yMMMdjms'&lt;/code&gt; (예를 들어 &lt;code&gt;Sep 3, 2010, 12:05:08 PM&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4d769d80b29a9677d777168169eb271a84ae7690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumDate'&lt;/code&gt;: equivalent to &lt;code&gt;'MMM d, y'&lt;/code&gt; (&lt;code&gt;Jun 15, 2015&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'mediumDate'&lt;/code&gt; : &lt;code&gt;'MMM d, y'&lt;/code&gt; ( &lt;code&gt;Jun 15, 2015&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f94fd42f22b1ea07eea6339ecf8fbab4194bbb6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMd'&lt;/code&gt; (e.g. &lt;code&gt;Sep 3, 2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'mediumDate'&lt;/code&gt; : 상당 &lt;code&gt;'yMMMd'&lt;/code&gt; (예를 들어 &lt;code&gt;Sep 3, 2010&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9c0899c698e9cf6869cbdb38023669e55e29dab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;9:03:01 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'mediumTime'&lt;/code&gt; : &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; ( &lt;code&gt;9:03:01 AM&lt;/code&gt; )와 같습니다.</target>
        </trans-unit>
        <trans-unit id="d937015174b4f8a0ca77a4cd64df5932a3f819a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss a'&lt;/code&gt; (&lt;code&gt;9:03:01 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'mediumTime'&lt;/code&gt; : &lt;code&gt;'h:mm:ss a'&lt;/code&gt; ( &lt;code&gt;9:03:01 AM&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f1b7ccb273106b2f89cff8c932d4a4109e1483c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumTime'&lt;/code&gt;: equivalent to &lt;code&gt;'jms'&lt;/code&gt; (e.g. &lt;code&gt;12:05:08 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'mediumTime'&lt;/code&gt; : 동등 &lt;code&gt;'jms'&lt;/code&gt; (예 : &lt;code&gt;12:05:08 PM&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="64d47ee5e84b92da825039ae570d147734d665b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'merge'&lt;/code&gt;: Merge the given &lt;code&gt;queryParams&lt;/code&gt; into the current query params.</source>
          <target state="translated">&lt;code&gt;'merge'&lt;/code&gt; : 주어진 &lt;code&gt;queryParams&lt;/code&gt; 를 현재 쿼리 매개 변수에 병합합니다 .</target>
        </trans-unit>
        <trans-unit id="a8f94d441cdcc1b7761abe92e0feee2f77f56aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'merge'&lt;/code&gt;: merge the queryParams into the current queryParams</source>
          <target state="translated">&lt;code&gt;'merge'&lt;/code&gt; : queryParams를 현재 queryParams로 병합</target>
        </trans-unit>
        <trans-unit id="14fb20f0fbba9efbe7333a2342bfd291caf5e936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'performance'&lt;/code&gt;: The default setting. Serves the specified &lt;a href=&quot;service-worker-config#index-file&quot;&gt;index file&lt;/a&gt;, which is typically cached.</source>
          <target state="translated">&lt;code&gt;'performance'&lt;/code&gt; : 기본 설정입니다. 일반적으로 캐시되는 지정된 &lt;a href=&quot;service-worker-config#index-file&quot;&gt;색인 파일을&lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="8a4563c956604852f7803e974730d44fc4f91f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'preserve'&lt;/code&gt;: Preserve the current query params.</source>
          <target state="translated">&lt;code&gt;'preserve'&lt;/code&gt; : 현재 쿼리 매개 변수를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="10377b55e280138a1622e66dade5ccc302a9c302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'preserve'&lt;/code&gt;: preserve the current queryParams</source>
          <target state="translated">&lt;code&gt;'preserve'&lt;/code&gt; : 현재 queryParams 유지</target>
        </trans-unit>
        <trans-unit id="c6cfc1fbda1399d8abcac30fe018fcd33ac7aff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'reload'&lt;/code&gt; : The router reloads the URL. Use to implement a &quot;refresh&quot; feature.</source>
          <target state="translated">&lt;code&gt;'reload'&lt;/code&gt; : 라우터가 URL을 다시로드합니다. &quot;새로 고침&quot;기능을 구현하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="83c6f247b33faf30fc477cfaa3e9d2b237c2b6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'short'&lt;/code&gt;: equivalent to &lt;code&gt;'M/d/yy, h:mm &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;6/15/15, 9:03 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'short'&lt;/code&gt; : &lt;code&gt;'M/d/yy, h:mm &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; ( &lt;code&gt;6/15/15, 9:03 AM&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="64442b28c5f654dd67ec02a5c8299b2c27019827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'short'&lt;/code&gt;: equivalent to &lt;code&gt;'M/d/yy, h:mm a'&lt;/code&gt; (&lt;code&gt;6/15/15, 9:03 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'short'&lt;/code&gt; : &lt;code&gt;'M/d/yy, h:mm a'&lt;/code&gt; ( &lt;code&gt;6/15/15, 9:03 AM&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9a3413770f7714441078e942fc208d161c0c7390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'short'&lt;/code&gt;: equivalent to &lt;code&gt;'yMdjm'&lt;/code&gt; (e.g. &lt;code&gt;9/3/2010, 12:05 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'short'&lt;/code&gt; : 동등 &lt;code&gt;'yMdjm'&lt;/code&gt; (예를 들어 &lt;code&gt;9/3/2010, 12:05 PM&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="41c2ab185113aede9e7518865a34659f043e864c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortDate'&lt;/code&gt;: equivalent to &lt;code&gt;'M/d/yy'&lt;/code&gt; (&lt;code&gt;6/15/15&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'shortDate'&lt;/code&gt; : &lt;code&gt;'M/d/yy'&lt;/code&gt; ( &lt;code&gt;6/15/15&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="99e082e28d697a7715bf7650b9e18a35f6f8ae7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMd'&lt;/code&gt; (e.g. &lt;code&gt;9/3/2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'shortDate'&lt;/code&gt; : 동등 &lt;code&gt;'yMd'&lt;/code&gt; (예를 들어 &lt;code&gt;9/3/2010&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="804652815182c13a05a6defa25fd92102343f520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;9:03 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'shortTime'&lt;/code&gt; : &lt;code&gt;'h:mm &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; ( &lt;code&gt;9:03 AM&lt;/code&gt; )와 같습니다.</target>
        </trans-unit>
        <trans-unit id="35361e4810f4308de521223dce79d97a6abcd4b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm a'&lt;/code&gt; (&lt;code&gt;9:03 AM&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'shortTime'&lt;/code&gt; : &lt;code&gt;'h:mm a'&lt;/code&gt; ( &lt;code&gt;9:03 AM&lt;/code&gt; )와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="48866985fe63a44e6e009ab38955f072c9dcff81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortTime'&lt;/code&gt;: equivalent to &lt;code&gt;'jm'&lt;/code&gt; (e.g. &lt;code&gt;12:05 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'shortTime'&lt;/code&gt; : 동등 &lt;code&gt;'jm'&lt;/code&gt; (예 : &lt;code&gt;12:05 PM&lt;/code&gt; 을위한 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="51bd365cc081a85763afcb8e46f32fb04fa89c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'url'&lt;/code&gt; - The malformed URL that caused the URIError</source>
          <target state="translated">&lt;code&gt;'url'&lt;/code&gt; url'-URIError를 일으킨 잘못된 URL</target>
        </trans-unit>
        <trans-unit id="7616cb07734fb1653cd1384af5639e3701edc96a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;() =&amp;gt; void&lt;/code&gt;: An &quot;unlisten&quot; function for disposing of this handler.</source>
          <target state="translated">&lt;code&gt;() =&amp;gt; void&lt;/code&gt; :이 핸들러를 처리하기위한 &quot;unlisten&quot;함수입니다.</target>
        </trans-unit>
        <trans-unit id="8165dab95db5eb9ed28019654d2a31e9ee3c521b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(...args: any[]) =&amp;gt; any&lt;/code&gt;: The function wrapped to be executed in the fakeAsync zone</source>
          <target state="translated">&lt;code&gt;(...args: any[]) =&amp;gt; any&lt;/code&gt; : fakeAsync 영역에서 실행되도록 랩핑 된 함수</target>
        </trans-unit>
        <trans-unit id="6f5f3a7fa354ee8c6694605070f89b70a421f048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;testing/componentfixture#componentRef&quot;&gt;componentRef&lt;/a&gt;: &lt;a href=&quot;componentref&quot;&gt;ComponentRef&lt;/a&gt;) =&amp;gt; void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;testing/componentfixture#componentRef&quot;&gt;componentRef&lt;/a&gt;: &lt;a href=&quot;componentref&quot;&gt;ComponentRef&lt;/a&gt;) =&amp;gt; void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22d8cf63753a20d31088272af4bc7c0d13f5bcae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; | [&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;, &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;])[]&lt;/code&gt;: The rules for the locale, a single time value or array of &lt;em&gt;from-time, to-time&lt;/em&gt;, or null if no periods are available.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; | [&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;, &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;])[]&lt;/code&gt; : 로케일 규칙, 단일 시간 값 또는 시작 &lt;em&gt;시간, 종료 시간&lt;/em&gt; 배열 또는 사용 가능한 기간이없는 경우 널입니다.</target>
        </trans-unit>
        <trans-unit id="8102e875e4a10d2ea8e65cb12735cbab95e1f66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(value: number) =&amp;gt; number&lt;/code&gt;: The plural function for the locale.</source>
          <target state="translated">&lt;code&gt;(value: number) =&amp;gt; number&lt;/code&gt; : 로캘의 복수 함수입니다.</target>
        </trans-unit>
        <trans-unit id="e0b1011b11b77be1dc3a45f89bfbb34433764a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches 0 or more path segments.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; 0 개 이상의 경로 세그먼트와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="86fd12bc40e77f589f3b0929878a0ac2ef7666ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; (asterisk) Indicates the default state. You can associate styles with this name to be used as the fallback when the state that is being animated is not declared within the trigger.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; (별표) 기본 상태를 나타냅니다. 애니메이션되는 상태가 트리거 내에서 선언되지 않은 경우 스타일을이 이름과 연관시켜 대체로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7d17fd6b84d2dfbc7a52297defdc0b6c9508ceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; matches 0 or more characters excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 는 &lt;code&gt;/&lt;/code&gt; 를 제외한 0 개 이상의 문자와 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="9edea2f88c69510ffe94a2324adb161eb21607b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb6f2a518fa640a8f545ae8245c351652d2cddd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is a &quot;structural directive&quot;. Structural directives shape or reshape the DOM's structure, typically by adding, removing, and manipulating the elements to which they are attached. Any directive with an asterisk, &lt;code&gt;*&lt;/code&gt;, is a structural directive.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 은 은 &quot;구조적 지시자&quot;이다. 구조적 지시문은 일반적으로 첨부 된 요소를 추가, 제거 및 조작하여 DOM 구조를 형성하거나 재구성합니다. 별표 ( &lt;code&gt;*&lt;/code&gt; )가있는 지시문은 구조적 지시문입니다.</target>
        </trans-unit>
        <trans-unit id="edc5434b59e542cad852fab26985a0316cf00877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is a &quot;structural directive&quot;. Structural directives shape or reshape the DOM's structure, typically by adding, removing, and manipulating the elements to which they are attached. Directives with an asterisk, &lt;code&gt;*&lt;/code&gt;, are structural directives.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 는 &quot;구조적 지시문&quot;입니다. 구조적 지시문은 일반적으로 연결된 요소를 추가, 제거 및 조작하여 DOM의 구조를 형성하거나 재구성합니다. 별표 ( &lt;code&gt;*&lt;/code&gt; )가있는 지시문은 구조 지시문입니다.</target>
        </trans-unit>
        <trans-unit id="a2909ff2da89e11f619cca13bf8fbde77a273927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--flat&lt;/code&gt; puts the file in &lt;code&gt;src/app&lt;/code&gt; instead of its own folder. &lt;code&gt;--module=app&lt;/code&gt; tells the CLI to register it in the &lt;code&gt;imports&lt;/code&gt; array of the &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--flat&lt;/code&gt; 은 파일을 자체 폴더 대신 &lt;code&gt;src/app&lt;/code&gt; 에 넣습니다 . &lt;code&gt;--module=app&lt;/code&gt; 는 CLI가 &lt;code&gt;AppModule&lt;/code&gt; 의 &lt;code&gt;imports&lt;/code&gt; 배열에 CLI를 등록하도록 지시합니다 .</target>
        </trans-unit>
        <trans-unit id="3e1e3e40d47c81888d9524eeea147b2f189218e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--format&lt;/code&gt;: Change the format.</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; : 형식을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="e1f0be98028e0b1785b753b6bdf1efca5c49a844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--i18nFile&lt;/code&gt;=&lt;em&gt;path to the translation file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;--i18nFile&lt;/code&gt; = &lt;em&gt;번역 파일의 경로&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c63e10e15d4a74fd848966865371b4cc6205b7be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--i18nFormat&lt;/code&gt;=&lt;em&gt;format of the translation file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;--i18nFormat&lt;/code&gt; = &lt;em&gt;번역 파일의 형식&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14bfbfee5926f7406f483df9d8e8ce0f8267fa23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--i18nLocale&lt;/code&gt;= &lt;em&gt;locale id&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;--i18nLocale&lt;/code&gt; = &lt;em&gt;로캘 ID&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d0c94fbc5e143f741407edac02753944e222b99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--outFile&lt;/code&gt;: Change the file name.</source>
          <target state="translated">&lt;code&gt;--outFile&lt;/code&gt; : 파일 이름을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="4550b59785a90623b952d6ffb5810a0c28f909c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--output-path&lt;/code&gt;: Change the location.</source>
          <target state="translated">&lt;code&gt;--output-path&lt;/code&gt; : 위치를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="84e15cd84341e492ec50f632e91d26e0b0a65f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;../&lt;/code&gt; to go up one level in the route path.</source>
          <target state="translated">&lt;code&gt;../&lt;/code&gt; 경로 경로에서 한 수준 위로 올라갑니다.</target>
        </trans-unit>
        <trans-unit id="01e6b21e6c5734e1679686779d6722d993f4f11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;./&lt;/code&gt; or &lt;code&gt;no leading slash&lt;/code&gt; is relative to the current level.</source>
          <target state="translated">&lt;code&gt;./&lt;/code&gt; 또는 &lt;code&gt;no leading slash&lt;/code&gt; 가 현재 레벨과 관련이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="73ac5c90f54bb9dad26ab7140a1b9a76c14175c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.class&lt;/code&gt;: Select by class name.</source>
          <target state="translated">&lt;code&gt;.class&lt;/code&gt; : 클래스 이름으로 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="e113d6dbdba6584c35b28312a121542d7d79d655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/**/*.html&lt;/code&gt; specifies all HTML files.</source>
          <target state="translated">&lt;code&gt;/**/*.html&lt;/code&gt; 은 모든 HTML 파일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="08c4cfd5660a8d942ac6cbbe22cb4891c6d32608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*.html&lt;/code&gt; specifies only HTML files in the root.</source>
          <target state="translated">&lt;code&gt;/*.html&lt;/code&gt; 은 루트에 HTML 파일 만 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9790461d814a22ff3e68c7a5847e664fc2bad896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/BUILD.bazel&lt;/code&gt; and &lt;code&gt;/src/BUILD.bazel&lt;/code&gt; tell Bazel about your source code.</source>
          <target state="translated">&lt;code&gt;/BUILD.bazel&lt;/code&gt; 및 &lt;code&gt;/src/BUILD.bazel&lt;/code&gt; 은 Bazel에 소스 코드를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="3a3cf60086070be8ad133ef737acb29e0402ab50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/WORKSPACE&lt;/code&gt; tells Bazel how to download external dependencies.</source>
          <target state="translated">&lt;code&gt;/WORKSPACE&lt;/code&gt; 는 Bazel에 외부 종속성을 다운로드하는 방법을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="d863cee96733dbc7e94ba0176dfa5f7feb7244ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/angular.json.bak&lt;/code&gt; replaces &lt;code&gt;/angular.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/angular.json.bak&lt;/code&gt; 을 대체 &lt;code&gt;/angular.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="406404b28a022d696b0a6d7fe56f07adee250fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;:ng-deep&lt;/code&gt; component style selectors</source>
          <target state="translated">&lt;code&gt;/deep/&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 및 &lt;code&gt;:ng-deep&lt;/code&gt; 구성 요소 스타일 선택기</target>
        </trans-unit>
        <trans-unit id="910d5852d89ec2c7ad5105950b6bd557c5aedab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;::ng-deep&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/deep/&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 및 &lt;code&gt;::ng-deep&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb5aabb6903788e49c570fb7115ea162417fcfc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/my/app/user/123/&lt;/code&gt;&lt;strong&gt;is not&lt;/strong&gt; normalized</source>
          <target state="translated">&lt;code&gt;/my/app/user/123/&lt;/code&gt; &lt;strong&gt; 이&lt;/strong&gt; 표준화 &lt;strong&gt;되지 않았습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f3d65b844176686071676d8dec640b031d75453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/my/app/user/123&lt;/code&gt; is normalized</source>
          <target state="translated">&lt;code&gt;/my/app/user/123&lt;/code&gt; 이 정규화되었습니다</target>
        </trans-unit>
        <trans-unit id="a055061b5c5a3a55fa835d64ce36650ef761ddfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enter&lt;/code&gt; and &lt;code&gt;:leave&lt;/code&gt; are aliases for the &lt;code&gt;void =&amp;gt; *&lt;/code&gt; and &lt;code&gt;* =&amp;gt; void&lt;/code&gt; transitions. These aliases are used by several animation functions.</source>
          <target state="translated">&lt;code&gt;:enter&lt;/code&gt; 및 &lt;code&gt;:leave&lt;/code&gt; 는 &lt;code&gt;void =&amp;gt; *&lt;/code&gt; 및 &lt;code&gt;* =&amp;gt; void&lt;/code&gt; 별명입니다. 전환의 . 이러한 별칭은 여러 애니메이션 기능에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="da2b7a5cd5a46052e6fdabcf3e296a50f034a102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not(sub_selector)&lt;/code&gt;: Select only if the element does not match the &lt;code&gt;sub_selector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:not(sub_selector)&lt;/code&gt; : 요소가 &lt;code&gt;sub_selector&lt;/code&gt; 와 일치하지 않는 경우에만 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2be8e185e55dcb6a00d24c968729c505deeb69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt;: The simulated time elapsed, in millis.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; : 시뮬레이션 된 경과 시간 (밀리 초).</target>
        </trans-unit>
        <trans-unit id="17f2b7a13ce90f134c436e590d67d8ba0373bb42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; used for providing and configuring Angular's Unified Location Service for upgrading.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 은 업그레이드를 위해 Angular의 Unified Location Service를 제공하고 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f4f9265a5f31621cc2164fdb1443cc279b1862ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;: If you pass an &lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;, it will be used to instantiate a module using &lt;code&gt;&lt;a href=&quot;../../platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;&lt;/code&gt;'s &lt;a href=&quot;../../core/platformref#bootstrapModuleFactory&quot;&gt;bootstrapModuleFactory()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; 은 : 당신이 전달하는 경우 &lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; 을 , 그것을 사용하여 모듈을 인스턴스화하는 데 사용됩니다 &lt;code&gt;&lt;a href=&quot;../../platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;&lt;/code&gt; 의&lt;a href=&quot;../../core/platformref#bootstrapModuleFactory&quot;&gt; bootstrapModuleFactory ()을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03be5df725216c59acc08ae24f10c0feb5f33cf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(':enter &lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;({ left: '-100%'})&lt;/code&gt; matches the view that is added and hides the newly added view by positioning it to the far left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(':enter &lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;({ left: '-100%'})&lt;/code&gt; 는 추가 된보기와 일치하고 새로 추가 된보기를 가장 왼쪽에 배치하여 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="af3ba0d4af80094dc2f7e25577513f04ebe10a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(':enter', &lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;({ left: '-100%' }))&lt;/code&gt; matches the view that is added and hides the newly added view by positioning it to the far left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(':enter', &lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;({ left: '-100%' }))&lt;/code&gt; 는 추가 된보기와 일치하고 새로 추가 된보기를 맨 왼쪽에 배치하여 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="5981093ea6333760d7bb50c63a8e45563b5319cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; finds one or more inner HTML elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 는 하나 이상의 내부 HTML 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3e831343e297a162591488084b35d378c25b8ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; runs animation steps one after another.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 는 애니메이션 단계를 차례로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f54ee7f2e69466eadee0325a21fa840f1625c9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; applies a cascading delay to animations for multiple elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 는 여러 요소의 애니메이션에 계단식 지연을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="3ad79e9ca80983cf9c63d1d8eedbe960eb3ab906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="95c2a3755055fcdf59164a4894b14f9996881ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; handles the observable subscription and the component's &lt;code&gt;hero&lt;/code&gt; property will be (re)set with the retrieved hero.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; 는 관찰 가능한 구독을 처리하고 구성 요소의 &lt;code&gt;hero&lt;/code&gt; 속성은 검색된 hero로 (재) 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7c5c3ad7ea9e0a632410444e1b6c95c16f982d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; no longer rounds up fractional milliseconds. See &lt;a href=&quot;https://github.com/angular/angular/pull/38009&quot;&gt;PR 38009&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; 는 더 이상 밀리 초 단위로 반올림하지 않습니다. &lt;a href=&quot;https://github.com/angular/angular/pull/38009&quot;&gt;PR 38009를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ee90ae5fabd23c2cccb16955c7d0bb03386c95ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt;&amp;mdash;the &quot;hash URL&quot; style.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; &amp;ndash; &quot;해시 URL&quot;스타일.</target>
        </trans-unit>
        <trans-unit id="2ceb7cf98232fd417d9a3e9bd2b6ad8022f19989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; captures both kinds of errors in its &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt;. You can inspect that response to identify the error's cause.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt; 에서 두 종류의 오류를 모두 캡처합니다. 해당 응답을 검사하여 오류의 원인을 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86447376deb3ac72e4501db04b06491ccd41dc65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; is Angular's mechanism for communicating with a remote server over HTTP.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 는 HTTP를 통해 원격 서버와 통신하기위한 Angular의 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="fa2970ac4a30e4dd07607b3b76cea08bffb54983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods return one value</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 메소드는 하나의 값을 리턴합니다</target>
        </trans-unit>
        <trans-unit id="e732bf13622c573f66c526611569d6b5479dbd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns a string rather than the default JSON because of the &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; 때문에 기본 JSON 대신 문자열을 반환합니다. 옵션으로 .</target>
        </trans-unit>
        <trans-unit id="672c61ddc16d825b3ab0f54cb8c97f9dc4828112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns a string rather than the default JSON because of the &lt;code&gt;responseType&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;responseType&lt;/code&gt; 옵션으로인해 기본 JSON이 아닌 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a7438ddf0941285fb62a292852c94f8a1a42972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns response data</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 은 응답 데이터를 반환</target>
        </trans-unit>
        <trans-unit id="50aac7ed717d66f74896676fd8abc6f6a8bb4150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns the body of the response as an untyped JSON object by default. Applying the optional type specifier, &lt;code&gt;&amp;lt;Hero[]&amp;gt;&lt;/code&gt; , adds TypeScript capabilities, which reduce errors during compile time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 은 기본적으로 응답의 본문을 형식화되지 않은 JSON 개체로 반환합니다. 선택적 유형 지정자 인 &lt;code&gt;&amp;lt;Hero[]&amp;gt;&lt;/code&gt; 적용하면컴파일 시간 동안 오류를 줄이는 TypeScript 기능이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="bbef61b50517d07fbceccb21377e7fafb6abf8a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns the body of the response as an untyped JSON object by default. Applying the optional type specifier, &lt;code&gt;&amp;lt;Hero[]&amp;gt;&lt;/code&gt; , gives you a typed result object.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 은 기본적으로 응답 본문을 형식화되지 않은 JSON 객체로 반환합니다. 선택적 유형 지정자 인 &lt;code&gt;&amp;lt;Hero[]&amp;gt;&lt;/code&gt; 적용하면 유형이 지정된결과 오브젝트가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="997ec6382ae7e4ea2464cf55db930311a4855690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; and browser URL styles</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; 및 브라우저 URL 스타일</target>
        </trans-unit>
        <trans-unit id="4095d14b8e51da1d582b13b1589eb2e0b1d0baa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; is the simplest structural directive and the easiest to understand. It takes a boolean expression and makes an entire chunk of the DOM appear or disappear.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 는 가장 간단한 구조적 지시문이며 이해하기 가장 쉬운 방법입니다. 부울 표현식을 사용하여 DOM의 전체 청크가 나타나거나 사라지게합니다.</target>
        </trans-unit>
        <trans-unit id="1ade4e4841046521002ff64df76beef3476b7894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; works differently. When &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, Angular removes the element and its descendants from the DOM. It destroys their components, freeing up resources, which results in a better user experience.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 는 다르게 작동합니다. 때 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; , 각도는 요소와 DOM에서 그 자손을 제거합니다. 구성 요소를 파괴하여 리소스를 확보하여 사용자 환경을 개선합니다.</target>
        </trans-unit>
        <trans-unit id="d1df56aeb460185161a94d8aed5374faa9f97a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; is actually a set of three, cooperating directives: &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; as in the following example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 는 실제로다음 예에서와같이협력하는 세 가지 지시문 집합 인 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8b7772da8375b182bb0e419c62e16d370aa325f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; is the controller directive. Bind it to an expression that returns the &lt;em&gt;switch value&lt;/em&gt;, such as &lt;code&gt;feature&lt;/code&gt;. Though the &lt;code&gt;feature&lt;/code&gt; value in this example is a string, the switch value can be of any type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 는 컨트롤러 지정 문입니다. &lt;code&gt;feature&lt;/code&gt; 와 같은&lt;em&gt; 스위치 값&lt;/em&gt; 을 리턴하는 표현식에이를 바인드하십시오. 이 예제의 &lt;code&gt;feature&lt;/code&gt; 값은 문자열이지만 스위치 값은 모든 유형이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ffb15992e960c5fcb6ee267d7855d22b6c2bd63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; itself is not a structural directive. It's an &lt;em&gt;attribute&lt;/em&gt; directive that controls the behavior of the other two switch directives. That's why you write &lt;code&gt;[&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt;, never &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 자체는 구조적 지침이 아닙니다.다른 두 스위치 지시문의 동작을 제어하는&lt;em&gt; 속성&lt;/em&gt; 지시문입니다. 그렇기 때문에 &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch가 아니라&lt;/a&gt; &lt;code&gt;[&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt; 를 쓰십시오 .</target>
        </trans-unit>
        <trans-unit id="5b09c03e7c242ac0ef45150c3c59d8b3fbc661ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; adds its element to the DOM when its bound value equals the switch value and removes its bound value when it doesn't equal the switch value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 는 바운드 값이 스위치 값과 같을 때 요소를 DOM에 추가하고 스위치 값과 같지 않으면 바운드 값을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="dedafe82553dd8acae7b616669ca15824d65b74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt;&lt;em&gt;are&lt;/em&gt; structural directives. You attach them to elements using the asterisk (*) prefix notation. An &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; displays its host element when its value matches the switch value. The &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; displays its host element when no sibling &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; matches the switch value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; &lt;em&gt; 는&lt;/em&gt; 구조적 지시어입니다. 별표 (*) 접두사 표기법을 사용하여 요소에 첨부합니다. &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 는 그 값이 상기 스위치의 값과 일치 할 때 호스트 요소를 표시한다. &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; 는 어떤 형제 경우 호스트 요소를 표시 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 이 스위치의 값과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="659df2cc34db97a6823137d0dd8421f5f4ec67b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; adds its element to the DOM when there is no selected &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; 는 선택된 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 가 없을 때 요소를 DOM에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="598f75080de9860d16f147117c7567a52cd45589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;&amp;mdash;the default &quot;HTML5 pushState&quot; style.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; - 기본 &quot;HTML5 pushState&quot;스타일입니다.</target>
        </trans-unit>
        <trans-unit id="3a67fa624e99f37fdb779c9899f2ab16fc30d6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt;&amp;mdash; the location of the component's private CSS styles.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; &amp;mdash; 구성 요소의 전용 CSS 스타일 위치입니다.</target>
        </trans-unit>
        <trans-unit id="de9dcdfce1217b8a858a272578069ffbd7e6552d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; also has &lt;code&gt;&lt;a href=&quot;../api/core/debugelement#childNodes&quot;&gt;childNodes&lt;/a&gt;&lt;/code&gt;, a list of &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; objects. &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; derives from &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; objects and there are often more nodes than elements. Testers can usually ignore plain nodes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 에는 또한 &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; 객체목록 인 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement#childNodes&quot;&gt;childNodes&lt;/a&gt;&lt;/code&gt; 가있습니다. &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; 객체에서 파생되며 종종 요소보다 더 많은 노드가 있습니다. 테스터는 일반적으로 일반 노드를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="629d635bf60011bf5dc25b0ded6a20ae9f1acb9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; also has &lt;code&gt;childNodes&lt;/code&gt;, a list of &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; objects. &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; derives from &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; objects and there are often more nodes than elements. Testers can usually ignore plain nodes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 에는 &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; 객체목록 인 &lt;code&gt;childNodes&lt;/code&gt; 도있습니다. &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; 객체에서 파생되며 종종 요소보다 노드가 더 많습니다. 테스터는 일반적으로 일반 노드를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58699ed02f7a42db98d1e4602fe344982e0064b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#attributes&quot;&gt;DebugElement.attributes&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; for attributes that were added and then subsequently removed (previously, attributes added and later removed would have a value of &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#attributes&quot;&gt;DebugElement.attributes&lt;/a&gt;&lt;/code&gt; 는추가 된 후 이후에 제거 된 속성에 대해 &lt;code&gt;undefined&lt;/code&gt; 를반환합니다(이전에는 추가되고 나중에 제거 된 속성은 &lt;code&gt;null&lt;/code&gt; 값을 가짐).</target>
        </trans-unit>
        <trans-unit id="f9331ed77dfed0a721ef152e21d7715cfa3114fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#classes&quot;&gt;DebugElement.classes&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; for classes that were added and then subsequently removed (previously, classes added and later removed would have a value of &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#classes&quot;&gt;DebugElement.classes&lt;/a&gt;&lt;/code&gt; 는추가 된 다음 이후에 제거 된 클래스에 대해 &lt;code&gt;undefined&lt;/code&gt; 를반환합니다(이전에는 추가 된 클래스와 나중에 제거 된 클래스의 값은 &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="be71f43d75dceab126fb3fbbaf60558d36821734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#properties&quot;&gt;DebugElement.properties&lt;/a&gt;&lt;/code&gt; affords access to the artificial custom property that is set by the directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#properties&quot;&gt;DebugElement.properties&lt;/a&gt;&lt;/code&gt; 는 지시문에 의해 설정된 인공 사용자 정의 특성에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="faf8744723d0400411e4b0f0a83ce77defce8515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#styles&quot;&gt;DebugElement.styles&lt;/a&gt;&lt;/code&gt; affords access to element styles even in the absence of a real browser, thanks to the &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; abstraction. But feel free to exploit the &lt;code&gt;nativeElement&lt;/code&gt; when that seems easier or more clear than the abstraction.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#styles&quot;&gt;DebugElement.styles&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 추상화덕분에 실제 브라우저가 없어도 요소 스타일에 액세스 할 수 있습니다. 그러나추상화보다 쉽고 명확하게 &lt;code&gt;nativeElement&lt;/code&gt; 를 자유롭게 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="940effa3627a77809314573e15a5b7c230e81b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; grants direct access to the host DOM element through its &lt;code&gt;nativeElement&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;nativeElement&lt;/code&gt; 속성을통해 호스트 DOM 요소에 대한 직접 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="57972ed1c66ec9d2dd371d65a320a3fc0f2afa82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&amp;mdash;the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;'s type</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;&lt;/code&gt; - &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 유형</target>
        </trans-unit>
        <trans-unit id="2a568e7e2964ceb719251355f947386e7b29d198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; and NgModules</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 및 NgModules</target>
        </trans-unit>
        <trans-unit id="f5809d8914703bdca48a956dbc08a574c83b2cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; has these characteristics. You encountered them twice in the &lt;em&gt;Hero of the Month&lt;/em&gt; example, in the &lt;em&gt;title&lt;/em&gt; value provider and in the &lt;em&gt;runnersUp&lt;/em&gt; factory provider.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 에는 이러한 특성이 있습니다. &lt;em&gt;Hero of the Month&lt;/em&gt; 예제,&lt;em&gt; 제목&lt;/em&gt; 값 제공자 및&lt;em&gt; runnersUp&lt;/em&gt; 팩토리 제공자에서두 번 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="1f378d5d6b2332a64999aab3ff1741357d4ad06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; is the locale of the target language.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 는 대상 언어의 로캘입니다.</target>
        </trans-unit>
        <trans-unit id="d3eabd3338b53ea78e3cac5ee397be7db37f46d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&lt;/code&gt; type without a generic</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&lt;/code&gt; 제네릭이없는 ModuleWithProviders 유형</target>
        </trans-unit>
        <trans-unit id="f2710880ae6cc7ae2b08c176aa7a0db29b9b5829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffa86a81d9b4ce3921e761044b74e8c5b0ea78f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; simulates passage of time, which allows you to calculate the difference between dates inside &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 는 시간의 흐름을 시뮬레이션하여 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 내부의 날짜 간 차이를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5e76f03da0e15b6e870578146e3814873f3328a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/translations&quot;&gt;TRANSLATIONS&lt;/a&gt;&lt;/code&gt; is a string containing the content of the translation file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/translations&quot;&gt;TRANSLATIONS&lt;/a&gt;&lt;/code&gt; 는 번역 파일의 내용을 포함하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="6b2d347e3cbd21a3b61683487ce2832b26307dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/translations_format&quot;&gt;TRANSLATIONS_FORMAT&lt;/a&gt;&lt;/code&gt; is the format of the file: &lt;code&gt;xlf&lt;/code&gt;, &lt;code&gt;xlf2&lt;/code&gt;, or &lt;code&gt;xtb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/translations_format&quot;&gt;TRANSLATIONS_FORMAT&lt;/a&gt;&lt;/code&gt; 은 파일 형식 : &lt;code&gt;xlf&lt;/code&gt; , &lt;code&gt;xlf2&lt;/code&gt; 또는 &lt;code&gt;xtb&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0497ebce097065d72153dfa2f80b48c4463e284c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; view encapsulation (the default) emulates the behavior of shadow DOM by preprocessing (and renaming) the CSS code to effectively scope the CSS to the component's view. For details, see &lt;a href=&quot;component-styles#inspect-generated-css&quot;&gt;Appendix 1&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; 뷰 캡슐화 (기본값)는 CSS 코드를 사전 처리하고 이름을 변경하여 CSS를 구성 요소의 뷰에 효과적으로 적용하여 shadow DOM의 동작을 에뮬레이트합니다. 자세한 내용은&lt;a href=&quot;component-styles#inspect-generated-css&quot;&gt; 부록 1을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="096e2b6f9c61f687a09d8d37ec9c4abffaba6f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; view encapsulation uses a now deprecated version of the browser's native shadow DOM implementation - &lt;a href=&quot;https://hayato.io/2016/shadowdomv1/&quot;&gt;learn about the changes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; 뷰 캡슐화에서는 브라우저의 기본 섀도 DOM 구현의 더 이상 사용되지 않는 버전을 사용합니다.&lt;a href=&quot;https://hayato.io/2016/shadowdomv1/&quot;&gt; 변경 사항에 대해 알아보십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb7a32edfd9bb7be4a2f1b5a294bcd43d556672a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt; view encapsulation only works on browsers that have native support for shadow DOM (see &lt;a href=&quot;https://caniuse.com/#feat=shadowdomv1&quot;&gt;Shadow DOM v1&lt;/a&gt; on the &lt;a href=&quot;http://caniuse.com&quot;&gt;Can I use&lt;/a&gt; site). The support is still limited, which is why &lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; view encapsulation is the default mode and recommended in most cases.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt; 보기 캡슐화는 shadow DOM을 기본적으로 지원하는 브라우저에서만 작동합니다 (&lt;a href=&quot;http://caniuse.com&quot;&gt; 사용할 수있는&lt;/a&gt; 사이트의&lt;a href=&quot;https://caniuse.com/#feat=shadowdomv1&quot;&gt; Shadow DOM v1&lt;/a&gt; 참조). 지원이 여전히 제한되어 있기 때문에 &lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; 뷰 캡슐화가 기본 모드이며 대부분의 경우 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="ae5e9ad84c6b3ad325a3f616c018853d3d56da3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt; view encapsulation uses the browser's native shadow DOM implementation (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM&quot;&gt;Shadow DOM&lt;/a&gt; on the &lt;a href=&quot;https://developer.mozilla.org&quot;&gt;MDN&lt;/a&gt; site) to attach a shadow DOM to the component's host element, and then puts the component view inside that shadow DOM. The component's styles are included within the shadow DOM.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt; 의 보기 캡슐화는 브라우저의 기본 그림자 DOM 구현 (참조 사용&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM&quot;&gt; 그림자 DOM을&lt;/a&gt; 온&lt;a href=&quot;https://developer.mozilla.org&quot;&gt; MDN의&lt;/a&gt; 구성 요소의 호스트 요소에 그림자 DOM을 연결하는 사이트), 그리고 그 그림자 DOM 내부의 구성 요소보기를 넣습니다. 구성 요소의 스타일은 shadow DOM에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="361b9798a23f96c4ffaac19d930a954d2336538d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/wtfstarttimerange&quot;&gt;wtfStartTimeRange&lt;/a&gt;&lt;/code&gt; and all &lt;code&gt;wtf*&lt;/code&gt; APIs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/wtfstarttimerange&quot;&gt;wtfStartTimeRange&lt;/a&gt;&lt;/code&gt; 및 모든 &lt;code&gt;wtf*&lt;/code&gt; API</target>
        </trans-unit>
        <trans-unit id="82ecec69b1b851db70523458fa8002479fa2bac8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; creates a bridge between Angular &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instances and native DOM elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; 는 Angular &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스와 기본 DOM 요소사이에 브리지를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2ce346baab2eacd174ed1523246002f635636ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; is an alternative to &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for managing any number of unnamed controls. As with form group instances, you can dynamically insert and remove controls from form array instances, and the form array instance value and validation status is calculated from its child controls. However, you don't need to define a key for each control by name, so this is a great option if you don't know the number of child values in advance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 는이름이 지정되지 않은 컨트롤을 관리하기위한 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 대안입니다. 양식 그룹 인스턴스와 마찬가지로 양식 배열 인스턴스에서 컨트롤을 동적으로 삽입 및 제거 할 수 있으며 양식 배열 인스턴스 값과 유효성 검사 상태는 자식 컨트롤에서 계산됩니다. 그러나 각 컨트롤에 대해 이름으로 키를 정의 할 필요가 없으므로 사전에 자식 값의 수를 모르는 경우 좋은 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="b1d0da826812121a9557c43cd29242f28bea9fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; is an alternative to &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for managing any number of unnamed controls. As with form group instances, you can dynamically insert and remove controls from form array instances, and the form array instance value and validation status is calculated from its child controls. However, you don't need to define a key for each control by name, so this is a great option if you don't know the number of child values in advance. The following example shows you how to manage an array of &lt;em&gt;aliases&lt;/em&gt; in &lt;code&gt;ProfileEditor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 는여러 개의 명명되지 않은 컨트롤을 관리하기위한 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 대안입니다. 폼 그룹 인스턴스와 마찬가지로 폼 배열 인스턴스에서 컨트롤을 동적으로 삽입 및 제거 할 수 있으며 폼 배열 인스턴스 값과 유효성 검사 상태는 자식 컨트롤에서 계산됩니다. 그러나 이름별로 각 컨트롤의 키를 정의 할 필요가 없으므로 미리 자식 값의 수를 모르는 경우이 옵션을 사용하는 것이 좋습니다. 다음 예제는 &lt;code&gt;ProfileEditor&lt;/code&gt; 에서&lt;em&gt; 별명&lt;/em&gt; 배열을 관리하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c315484ec0d20da9d0ca62f5c6f5411bfa8e5376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; tracks the same values and status for an array of form controls.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 는 양식 컨트롤 배열에 대해 동일한 값과 상태를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="9313f1945a36085e175c25f16a18ebd7b7931c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; tracks the value and validation status of an individual form control.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 은 개별 양식 컨트롤의 값과 유효성 검사 상태를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="c0abc067741c7147539b3c8815c4227c97d5107f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;formGroup&lt;/code&gt; are directives defined in &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;. The templates can access these directives directly since you imported &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;formGroup&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 에 정의 된 지시문입니다. &lt;code&gt;AppModule&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 을 가져 왔으므로 템플리트는 이러한 지시문에 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f62c05b37a0fde297ce1de9460d3fd6abc29315e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; tracks the same values and status for a collection of form controls.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 은 양식 컨트롤 모음에 대해 동일한 값과 상태를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="380913a16726cdf595c8623ae5bf3c92bbb1fc05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive API reference</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 지시어 API 참조</target>
        </trans-unit>
        <trans-unit id="49dcb289af1c2079857c53a0e8c0299445a36e05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; and friends in the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to enable two-way data binding.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 양방향 데이터 바인딩을 가능하게하는 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 의NgModel 및 친구</target>
        </trans-unit>
        <trans-unit id="ff558b76ac2ffe77b76bed51ed74984f24f2aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; and value accessors</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 및 값 접근 자</target>
        </trans-unit>
        <trans-unit id="0c360bcbfb360bda40ad5871e105496631cc4fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; also re-exports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/common&lt;/code&gt;, which means that components in the &lt;code&gt;AppModule&lt;/code&gt; also have access to the Angular directives every app needs, such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;NgFor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 은 또한 &lt;code&gt;@angular/common&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 을다시 내보내므로 &lt;code&gt;AppModule&lt;/code&gt; 의 구성 요소도 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;NgFor&lt;/code&gt; 와 같이 모든 앱에 필요한 Angular 지시문에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dcf0ea48543891a47bb3776438fb6545b7510c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; also re-exports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/common&lt;/code&gt;, which means that components in the &lt;code&gt;AppModule&lt;/code&gt; module also have access to the Angular directives every app needs, such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;NgFor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;@angular/common&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 을다시 내 보냅니다.즉, &lt;code&gt;AppModule&lt;/code&gt; 모듈의구성 요소도 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;NgFor&lt;/code&gt; 와 같은 모든 앱에 필요한 Angular 지시문에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf81ac0a95bede605692a73f0021b0d4461b064d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86e08f4d307a789116f4b437a7c3ec691d4bc2aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; imports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;, which contributes many common directives such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. Additionally, &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; re-exports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; making all of its directives available to any module that imports &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 을 가져 오며 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 와 같은 많은 공통 지시문을 제공 합니다. 또한 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 을다시 내 보내어 모든 지시문을 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 을 가져 오는 모든 모듈에서 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="db75a5b79ffd1cfd3335894ed66227edce7ed4b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; provides services that are essential to launch and run a browser app.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 은 브라우저 앱을 시작하고 실행하는 데 필요한 서비스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8f74168997f5b7e5862b035a691aac4a4c603646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt;: requiring authentication</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt; : 인증 필요</target>
        </trans-unit>
        <trans-unit id="a8c1ba257e86218539c8fd68c5759d4e84c1ba85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt;: guarding child routes</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt; : 자식 경로 보호</target>
        </trans-unit>
        <trans-unit id="d1ab0479c4ba69b5cbc3cc89617c07fd6f68577c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt;: handling unsaved changes</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; : 저장되지 않은 변경 사항 처리</target>
        </trans-unit>
        <trans-unit id="84eea2ebfb505ad7edc8e5de01082ebbaae969eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; blocks preload</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; 는 사전로드를 차단합니다.</target>
        </trans-unit>
        <trans-unit id="795140975ceb71f9f2d18a660fc64bfe2ddc5f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt;: guarding unauthorized loading of feature modules</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; : 기능 모듈의 무단로드 방지</target>
        </trans-unit>
        <trans-unit id="3745a2a590a499785d99f5d85804b027a787e610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;#preserveQueryParams&lt;/code&gt; has been removed from &lt;code&gt;@angular/router&lt;/code&gt;. See &lt;a href=&quot;https://github.com/angular/angular/pull/38762&quot;&gt;PR 38762&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;#preserveQueryParams&lt;/code&gt; 가 &lt;code&gt;@angular/router&lt;/code&gt; 에서 제거되었습니다. &lt;a href=&quot;https://github.com/angular/angular/pull/38762&quot;&gt;PR 38762&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="58f6d184544a0c398c2c3abdd78b12b3a522aeeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt;s aren't tied to route configuration, so you'll need to update the associated router links so they remain active when the new route is active. You'll update the &lt;code&gt;app.component.ts&lt;/code&gt; template for the &lt;code&gt;/heroes&lt;/code&gt; routerLink.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 는 라우트 구성에 묶여 있지 않으므로 새 라우트가 활성화 될 때 활성 상태로 유지되도록 연관된 라우터 링크를 업데이트해야합니다. &lt;code&gt;/heroes&lt;/code&gt; routerLink에대한 &lt;code&gt;app.component.ts&lt;/code&gt; 템플리트를업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="7f96ab095c625bb6fa50fc0f055fdf5eeeee5a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; now accepts &lt;code&gt;undefined&lt;/code&gt; inputs. See &lt;a href=&quot;https://github.com/angular/angular/pull/39151&quot;&gt;PR 39151&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 는 이제 &lt;code&gt;undefined&lt;/code&gt; 입력을허용합니다. &lt;a href=&quot;https://github.com/angular/angular/pull/39151&quot;&gt;PR 39151을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9e89f142e80027e19a333fc6863e2292dccd7748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; also offers a &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; static method for configuring the routes of lazy-loaded modules.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 은 지연로드 된 모듈의 경로를 구성하기위한 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; 정적 메서드도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ea0f94cbcb6a80a0e071a963d85e8130e848990d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; also offers a &lt;code&gt;forChild()&lt;/code&gt; static method for configuring the routes of lazy-loaded modules.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 은 지연로드 된 모듈의 경로를 구성하기위한 &lt;code&gt;forChild()&lt;/code&gt; 정적 메서드도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7868f37b403427210bde1607f5b5c862887b8d9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; provides the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service, as well as router directives, such as &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt;. The root application module imports &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; so that the application has a &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; and the root application components can access the router directives. Any feature modules must also import &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; so that their components can place router directives into their templates.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 와 같은 라우터 지시문뿐만 아니라 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 서비스를제공합니다. 루트 응용 프로그램 모듈은 응용 프로그램에 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 있고 루트 응용 프로그램 구성 요소가 라우터 지시문에 액세스 할 수있도록 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 가져옵니다. 모든 기능 모듈은 또한해당 구성 요소가 라우터 지시문을 템플리트에 배치 할 수 있도록 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="26916fe484a4b4870d64ff8e2d78460613de76da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74cb2fde1b220e943bf4fd5f10aa3af96500e0ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; are conventional names for methods that configure services in root and feature modules respectively.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; 는 각각 루트 및 기능 모듈에서 서비스를 구성하는 메소드의 일반적인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="3e0e42871c22b7c88c2e070721c3184e9d419a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc350a2b995195bbd642c797081a2f8c613ce133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; takes a service configuration object and returns a &lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;, which is a simple object with the following properties:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 는 서비스 구성 객체를&lt;a href=&quot;../api/core/modulewithproviders&quot;&gt; 가져와&lt;/a&gt; 다음 속성을 가진 간단한 객체 인 ModuleWithProviders를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bbbf4abe8bda4ea5d682c643f99b1c014ec416a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;: {}&lt;/code&gt; - an isolate scope. In Angular, components are always isolated from their surroundings, and you should do this in AngularJS too.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;: {}&lt;/code&gt; -격리 범위. Angular에서 구성 요소는 항상 주변 환경과 격리되어 있으므로 AngularJS 에서도이 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="cdca9841e654e46a230c35d6417dcb9e15e1a179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; service</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; 서비스</target>
        </trans-unit>
        <trans-unit id="1318c9fa08fdc822e34c9fa7b12c0166fa67ce9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;, on the other side, avoids explicitly triggering change detection unless it knows the other part of the app is interested in the changes. For example, if a downgraded component defines an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, chances are that the app needs to be aware when that value changes. Thus, &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; automatically triggers change detection on that component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 반면에 downgradeModule () 은 앱의 다른 부분이 변경에 관심이 있다는 것을 알지 않는 한 변경 감지를 명시 적으로 트리거하지 않습니다. 예를 들어, 다운 그레이드 된 구성 요소가 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 정의하면 해당 값이 변경 될 때 앱이 인식해야 할 가능성이 있습니다. 따라서 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; 는 해당 구성 요소에서 변경 감지를 자동으로 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="371a68325913fbca243798f8e3af24f3c911cc39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt;: A 0-based offset into the duration, in milliseconds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; : 밀리 초 단위의 기간에 대한 0 기반 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="5260f0f0df4bb07cc3df410a68b1aacde8e52a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt;: The 0-based index of the view's position in this container, or &lt;code&gt;-1&lt;/code&gt; if this container doesn't contain the view.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; :이 컨테이너에서 뷰 위치의 0부터 시작하는 인덱스 또는이 컨테이너에 뷰가 포함되지 않은 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="71300f907d87fd31e9a67cc4e9a73c992f56be6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; If the directive does not have a valid parent.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; 지시문에 유효한 부모가없는 경우.</target>
        </trans-unit>
        <trans-unit id="734fee2b6898269660210e09109a76d5d1e5fefd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; When strict checks fail, such as setting the value of a control that doesn't exist or if you exclude a value of a control that does exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; 존재하지 않는 컨트롤의 값을 설정하거나 존재하는 컨트롤의 값을 제외하는 등 엄격한 검사에 실패한 경우.</target>
        </trans-unit>
        <trans-unit id="f1b499ccef464c33814bfedce8c7ece31764134b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&amp;gt;&lt;/code&gt;: The reconfigured &lt;code&gt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; to import into the app's root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&amp;gt;&lt;/code&gt; :앱의 루트 &lt;code&gt;AppModule&lt;/code&gt; 로 가져 오도록재구성 된 &lt;code&gt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d8fbef5566359aaf3b6b307a95388e1bf831ffd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;routermodule&quot;&gt;RouterModule&lt;/a&gt;&amp;gt;&lt;/code&gt;: The new &lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;routermodule&quot;&gt;RouterModule&lt;/a&gt;&amp;gt;&lt;/code&gt; : 새로운 &lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24015fd9506546d4a23b814d8e64ced7795bc75f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;routermodule&quot;&gt;RouterModule&lt;/a&gt;&amp;gt;&lt;/code&gt;: The new NgModule.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;routermodule&quot;&gt;RouterModule&lt;/a&gt;&amp;gt;&lt;/code&gt; : 새로운 NgModule.</target>
        </trans-unit>
        <trans-unit id="c9fe82a6a34a0194b6e596c4409a243250c126d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;routermodule&quot;&gt;RouterModule&lt;/a&gt;&amp;gt;&lt;/code&gt;: The new router module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;routermodule&quot;&gt;RouterModule&lt;/a&gt;&amp;gt;&lt;/code&gt; : 새 라우터 모듈.</target>
        </trans-unit>
        <trans-unit id="e9e5ad5f9f46fde9a480bbb4f322a1b04ce7e845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; used for providing and configuring Angular's Unified Location Service for upgrading.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 은 업그레이드를 위해 Angular의 Unified Location Service를 제공하고 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a423c4549439c83373fcea9152355c1ab3cb39e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;: Injector associated with the element, component or directive instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; : 요소, 구성 요소 또는 지시어 인스턴스와 관련된 인젝터.</target>
        </trans-unit>
        <trans-unit id="8e324c2fb917e5e843927edf76c92561d78e77ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; to end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; 끝나는 범위 .</target>
        </trans-unit>
        <trans-unit id="d602dfa6f21688e05a04f00ff35e2feed996ac00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; : 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="fb82fa3a588b8be1fea10490f50c88e42cdab691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;abstractcontroloptions#asyncValidators&quot;&gt;asyncValidators&lt;/a&gt;&lt;/code&gt;: A single async validator or array of async validator functions</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;abstractcontroloptions#asyncValidators&quot;&gt;asyncValidators&lt;/a&gt;&lt;/code&gt; : 단일 비동기 유효성 검사기 또는 비동기 유효성 검사기 함수 배열</target>
        </trans-unit>
        <trans-unit id="d4c74cbe88b4ac5b82a2eb0395fcb7b918293849" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;abstractcontroloptions#validators&quot;&gt;validators&lt;/a&gt;&lt;/code&gt;: A synchronous validator function, or an array of validator functions</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;abstractcontroloptions#validators&quot;&gt;validators&lt;/a&gt;&lt;/code&gt; : 동기 유효성 검사기 함수 또는 유효성 검사기 함수 배열</target>
        </trans-unit>
        <trans-unit id="13f25da67f7c9693b8acec59f49fe98399275b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;activationstart&quot;&gt;ActivationStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;activationstart&quot;&gt;ActivationStart&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="fcf21a6727dfa6433bbc8274a839cc417a11a87b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;100ms 0.5s&quot;)&lt;/code&gt; : Duration is 100 milliseconds, delay is 500 milliseconds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;100ms 0.5s&quot;)&lt;/code&gt; : 지속 시간은 100 밀리 초이고 지연은 500 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="b212c8bcdb851de567a6f62c8bd8e60f1edb83f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;1s&quot;)&lt;/code&gt; : Duration is 1000 milliseconds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;1s&quot;)&lt;/code&gt; : 지속 시간은 1000 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="2ae4390dc741aac436286eb1e945d05069536c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;5s 10ms cubic-bezier(.17,.67,.88,.1)&quot;)&lt;/code&gt; : Duration is 5000 milliseconds, delay is 10 milliseconds, easing according to a bezier curve.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;5s 10ms cubic-bezier(.17,.67,.88,.1)&quot;)&lt;/code&gt; : 지속 시간은 5000 밀리 초이고 지연은 10 밀리 초이며 베 지어 곡선에 따라 완화됩니다.</target>
        </trans-unit>
        <trans-unit id="7ad559a0c77a756c47bffce3b05b1b6ec2df1af8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;5s ease-in&quot;)&lt;/code&gt; : Duration is 5000 milliseconds, easing in.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;5s ease-in&quot;)&lt;/code&gt; : 지속 시간이 5000 밀리 초로 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="ea1936a5f69a8e59c74a7f35d64f9b3fb81d7a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(500)&lt;/code&gt; : Duration is 500 milliseconds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(500)&lt;/code&gt; : 지속 시간은 500 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="18b646c1f894dff260430fdf2642df5a9a4ab098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationanimatechildmetadata&quot;&gt;AnimationAnimateChildMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the child animation data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationanimatechildmetadata&quot;&gt;AnimationAnimateChildMetadata&lt;/a&gt;&lt;/code&gt; : 자식 애니메이션 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a078405f7918d2e2f66e3c08dcaa2dde16d0c863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationanimatemetadata&quot;&gt;AnimationAnimateMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the animation step.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationanimatemetadata&quot;&gt;AnimationAnimateMetadata&lt;/a&gt;&lt;/code&gt; : 애니메이션 단계를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="3629e0a5a466926d91fa24c11b155b7282d7b287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationanimaterefmetadata&quot;&gt;AnimationAnimateRefMetadata&lt;/a&gt;&lt;/code&gt;: An object that contains the animation parameters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationanimaterefmetadata&quot;&gt;AnimationAnimateRefMetadata&lt;/a&gt;&lt;/code&gt; : 애니메이션 매개 변수가 포함 된 객체입니다.</target>
        </trans-unit>
        <trans-unit id="144373eb0ee873a21954278fbe147d4fd4bd9867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;AnimationFactory&lt;/a&gt;&lt;/code&gt;: A factory object that can create a player for the defined animation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;AnimationFactory&lt;/a&gt;&lt;/code&gt; : 정의 된 애니메이션의 플레이어를 만들 수있는 팩토리 객체입니다.</target>
        </trans-unit>
        <trans-unit id="e4304094cc6253f1f46122148e5d56bf8941c185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationgroupmetadata&quot;&gt;AnimationGroupMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the group data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationgroupmetadata&quot;&gt;AnimationGroupMetadata&lt;/a&gt;&lt;/code&gt; : 그룹 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="89eb3fda127c0d99d6f786794835ab4956a5e3b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationkeyframessequencemetadata&quot;&gt;AnimationKeyframesSequenceMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the keyframes data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationkeyframessequencemetadata&quot;&gt;AnimationKeyframesSequenceMetadata&lt;/a&gt;&lt;/code&gt; : 키 프레임 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="35ccee6d3579a3edbe03cf7c3e65010e729dd2ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationquerymetadata&quot;&gt;AnimationQueryMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the query data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationquerymetadata&quot;&gt;AnimationQueryMetadata&lt;/a&gt;&lt;/code&gt; : 쿼리 데이터를 캡슐화하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="34242adfb8eeea4c71a834a5209a67f91ee57f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationreferencemetadata&quot;&gt;AnimationReferenceMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the animation data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationreferencemetadata&quot;&gt;AnimationReferenceMetadata&lt;/a&gt;&lt;/code&gt; : 애니메이션 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b0f3e196f47aabb0764424047cdd053fab50adfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationsequencemetadata&quot;&gt;AnimationSequenceMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the sequence data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationsequencemetadata&quot;&gt;AnimationSequenceMetadata&lt;/a&gt;&lt;/code&gt; : 시퀀스 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="8880d0b98c486d9d249a6be26fc8e1fa7099a234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationstaggermetadata&quot;&gt;AnimationStaggerMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the stagger data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationstaggermetadata&quot;&gt;AnimationStaggerMetadata&lt;/a&gt;&lt;/code&gt; : 스 태거 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d06eda7b76225e0bb980d02566919878e855e53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationstatemetadata&quot;&gt;AnimationStateMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the new state data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationstatemetadata&quot;&gt;AnimationStateMetadata&lt;/a&gt;&lt;/code&gt; : 새 상태 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a86932f72716b5bd79be200a436ce09500a0e337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationstylemetadata&quot;&gt;AnimationStyleMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the style data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationstylemetadata&quot;&gt;AnimationStyleMetadata&lt;/a&gt;&lt;/code&gt; : 스타일 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="5a8a9002405c5aea01f1fc71fb858dd1d64936f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationtransitionmetadata&quot;&gt;AnimationTransitionMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the transition data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationtransitionmetadata&quot;&gt;AnimationTransitionMetadata&lt;/a&gt;&lt;/code&gt; : 전환 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="aa7b5f9840b43d8c80de17795a7be7993d8d1843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationtriggermetadata&quot;&gt;AnimationTriggerMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the trigger data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animationtriggermetadata&quot;&gt;AnimationTriggerMetadata&lt;/a&gt;&lt;/code&gt; : 트리거 데이터를 캡슐화하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a38489a8fdb54a2fa8199852e2b4bd68353c164d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;asyncvalidatorfn&quot;&gt;AsyncValidatorFn&lt;/a&gt; | null&lt;/code&gt;: A validator function that returns an error map with the merged error objects of the async validators if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;asyncvalidatorfn&quot;&gt;AsyncValidatorFn&lt;/a&gt; | null&lt;/code&gt; : 유효성 검사에 실패한 경우 비동기 유효성 검사기의 병합 된 오류 개체와 함께 오류 맵을 반환하는 유효성 검사기 함수이고, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="41f5695c989af97b6cb46a8308c71bc87e9ead1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#Default&lt;/code&gt; sets the strategy to &lt;code&gt;&lt;a href=&quot;component&quot;&gt;CheckAlways&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#Default&lt;/code&gt; 에 전략 설정 &lt;code&gt;&lt;a href=&quot;component&quot;&gt;CheckAlways&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="db9454556108217105c232f536305c04578c5d2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#Default&lt;/code&gt; sets the strategy to &lt;code&gt;CheckAlways&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#Default&lt;/code&gt; 에 전략 설정 &lt;code&gt;CheckAlways&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="4a566cf872572fa81743e74d0bcb90a2012ab79f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#OnPush&lt;/code&gt; sets the strategy to &lt;code&gt;&lt;a href=&quot;component&quot;&gt;CheckOnce&lt;/a&gt;&lt;/code&gt; (on demand).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#OnPush&lt;/code&gt; 는 전략을 &lt;code&gt;&lt;a href=&quot;component&quot;&gt;CheckOnce&lt;/a&gt;&lt;/code&gt; (요청시)로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8eead4c96855cbd6893bd284194939f0a2ac256b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#OnPush&lt;/code&gt; sets the strategy to &lt;code&gt;CheckOnce&lt;/code&gt; (on demand).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#OnPush&lt;/code&gt; 는 전략을 &lt;code&gt;CheckOnce&lt;/code&gt; (요청시)로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="512e0e935566e436719af2204b1a2f4f518d994a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;childactivationstart&quot;&gt;ChildActivationStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;childactivationstart&quot;&gt;ChildActivationStart&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="fbce24a0a742e3d027f32152993c13f908e52cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;componentref&quot;&gt;ComponentRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt;: The new component instance, containing the host view.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;componentref&quot;&gt;ComponentRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt; : 호스트보기를 포함하는 새 구성 요소 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="e833e17819fe90a04f5590afb447662ebed5adb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;contentchild&quot;&gt;ContentChild&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;contentchild&quot;&gt;ContentChild&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="23020a854f91ac604827402e30919a53d6e028b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="aab9da5caca27f4c210bea36dc34470375421c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt;: The number of decimal digits, typically 0 or 2.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; : 소수 자릿수, 일반적으로 0 또는 2입니다.</target>
        </trans-unit>
        <trans-unit id="fb1dd81d178b4d1cf07b5bed658358412b058192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; requires either an &lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; or a function:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 에는 &lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; 또는 함수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f7a74438f08a8e812fea83143c3780561bb48885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; returns the name of the created AngularJS wrapper module. You can use it to declare a dependency in your main AngularJS module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 은 작성된 AngularJS 랩퍼 모듈의 이름을 리턴합니다. 이를 사용하여 기본 AngularJS 모듈에서 종속성을 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f4dba4c71216af240187ba2798d7c620b81624c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;, on the other side, does not try to tie the two change detection systems as tightly, restricting the explicit change detection runs only to cases where it knows it is necessary (e.g. when the inputs of a downgraded component change). This improves performance, especially in change-detection-heavy applications, but leaves it up to the developer to manually notify each framework as needed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 은 두 가지 변경 감지 시스템을 긴밀하게 연결하지 않고 명시 적 변경 감지 실행이 필요한 경우 (예 : 다운 그레이드 된 구성 요소의 입력이 변경되는 경우)로만 제한합니다. 이렇게하면 특히 변경 감지가 많은 응용 프로그램에서 성능이 향상되지만 필요에 따라 각 프레임 워크에 수동으로 알리도록 개발자에게 맡깁니다.</target>
        </trans-unit>
        <trans-unit id="4e37efd1c6f3d00eba7c82757da2256f56893f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;embeddedviewref&quot;&gt;EmbeddedViewRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt;: The &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance for the newly created view.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;embeddedviewref&quot;&gt;EmbeddedViewRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt; :새로 생성 된 뷰의 &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="3cc0949d5fd5b81d89dbd731b01d885cb19ed3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;embeddedviewref&quot;&gt;EmbeddedViewRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt;: The new embedded view object.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;embeddedviewref&quot;&gt;EmbeddedViewRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt; : 새로운 임베디드 뷰 객체.</target>
        </trans-unit>
        <trans-unit id="6ae3dc770600071411b183bde75730b88ab73dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; is one of the three fundamental building blocks used to define forms in Angular, along with &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 과 함께 Angular에서 양식을 정의하는 데 사용되는 세 가지 기본 빌딩 블록 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="7261e0dfb8f243657b3c4043474cf4a1542ce111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; is one of the three fundamental building blocks used to define forms in Angular, along with &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 와 함께 Angular에서 양식을 정의하는 데 사용되는 세 가지 기본 구성 요소 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="11b8a80b55192dbb4f59e7c7574219191360cb3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;getlocalenumberformat&quot;&gt;getLocaleNumberFormat&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;getlocalenumberformat&quot;&gt;getLocaleNumberFormat&lt;/a&gt;()&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="b9b55aa18918719697d20db3a2c4fd0e15b46faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;guardscheckend&quot;&gt;GuardsCheckEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;guardscheckend&quot;&gt;GuardsCheckEnd&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="63749d7f5026c97f87e9c6cc3cb57d3f91d748f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;guardscheckstart&quot;&gt;GuardsCheckStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;guardscheckstart&quot;&gt;GuardsCheckStart&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="e0a283ca15fe3d3ae058bfcced16ebc3e3fe99fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; is injectable. When injected, the handler instance dispatches requests to the first interceptor in the chain, which dispatches to the second, etc, eventually reaching the &lt;code&gt;&lt;a href=&quot;httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; 는 주입 가능합니다. 삽입되면 핸들러 인스턴스는 체인의 첫 번째 인터셉터에 요청을 발송하고,이 인터셉터는 두 번째 등에 전달하여 결국 &lt;code&gt;&lt;a href=&quot;httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; 에 도달합니다.</target>
        </trans-unit>
        <trans-unit id="f6f3cffa8563ca1a5fd5ddbd9c80c0b7d9c7f063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; available on the response event stream, only when progress events are requested.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; 는진행 이벤트가 요청 될 때만 응답 이벤트 스트림에서 사용 가능한 &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="db4d714fa96ac23fe32fb243d62f7aefa97d5f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt;: A clone of the HTTP headers object with the given value deleted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt; : 제공된 값이 삭제 된 HTTP 헤더 오브젝트의 복제본.</target>
        </trans-unit>
        <trans-unit id="dd50b6987c8bd87a3301f5a58724af6029dff2b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt;: A clone of the HTTP headers object with the newly set header value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt; : 새로 설정된 헤더 값을 가진 HTTP 헤더 객체의 복제본.</target>
        </trans-unit>
        <trans-unit id="0fbc74438c10b515c6e284298c19fbf4654bcd15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt;: A clone of the HTTP headers object with the value appended to the given header.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt; : 지정된 헤더에 값이 추가 된 HTTP 헤더 오브젝트의 복제본.</target>
        </trans-unit>
        <trans-unit id="c2e9061b271c3d5d20d647a28723d7c6f1a34dd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt;: A new body with the appended value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; : 값이 추가 된 새 본문입니다.</target>
        </trans-unit>
        <trans-unit id="cc737361986d462289f8d117e324fa5699653453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt;: A new body with the given value removed, or with all values removed if no value is specified.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; : 지정된 값이 제거되었거나 값이 지정되지 않은 경우 모든 값이 제거 된 새 본문입니다.</target>
        </trans-unit>
        <trans-unit id="8392a1bf802eea133f8b5e1a7453c7b10c5f942c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt;: A new body with the new value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; : 새로운 가치를 가진 새로운 몸.</target>
        </trans-unit>
        <trans-unit id="78c200082c6351776b32d0b8972399e91fa8a274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; represents an outgoing request, including URL, method, headers, body, and other request configuration options. Instances should be assumed to be immutable. To modify a &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;clone&lt;/code&gt; method should be used.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 는 URL, 메소드, 헤더, 본문 및 기타 요청 구성 옵션을 포함하여 발신 요청을 나타냅니다. 인스턴스는 변경 불가능한 것으로 가정해야합니다. 수정하려면 &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 에을 의 &lt;code&gt;clone&lt;/code&gt; 방법이 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="130b568b3a947edd9d5cd27090e123be0e7dec97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; available on the response event stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 는응답 이벤트 스트림에서 사용 가능한 &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8da98438d39899a649e24140358e0b1aecf45bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; is parameterized on &lt;code&gt;T&lt;/code&gt; which is the type of object which will be returned by the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;. This provides additional level of type safety.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 가 반환 할 객체의 유형 인 &lt;code&gt;T&lt;/code&gt; 에서 매개 변수화됩니다. 이는 추가적인 수준의 유형 안전을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3413092bc8e4d014339d8b0ffbbee34a7f8d2823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; returns itself when given &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; as a token:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 주어 졌을 때 그 자체를 반환 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 토큰으로 :</target>
        </trans-unit>
        <trans-unit id="e7cd16f219c2e49b6175fc7bf45a893e6bfebb5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iterablechanges&quot;&gt;IterableChanges&lt;/a&gt;&amp;lt;V&amp;gt; | null&lt;/code&gt;: an object describing the difference. The return value is only valid until the next &lt;code&gt;&lt;a href=&quot;defaultiterablediffer#diff&quot;&gt;diff()&lt;/a&gt;&lt;/code&gt; invocation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterablechanges&quot;&gt;IterableChanges&lt;/a&gt;&amp;lt;V&amp;gt; | null&lt;/code&gt; : 차이를 설명하는 객체. 리턴 값은 다음 &lt;code&gt;&lt;a href=&quot;defaultiterablediffer#diff&quot;&gt;diff()&lt;/a&gt;&lt;/code&gt; 호출까지만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="b8f4280a10820f70eb513b45085845d65e45fe52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iterablechanges&quot;&gt;IterableChanges&lt;/a&gt;&amp;lt;V&amp;gt; | null&lt;/code&gt;: an object describing the difference. The return value is only valid until the next &lt;code&gt;diff()&lt;/code&gt; invocation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterablechanges&quot;&gt;IterableChanges&lt;/a&gt;&amp;lt;V&amp;gt; | null&lt;/code&gt; : 차이를 설명하는 객체. 반환 값은 다음 &lt;code&gt;diff()&lt;/code&gt; 호출까지만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="a6908f8551f47ccac5bc169408cca349fb2a4379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;keyvaluechanges&quot;&gt;KeyValueChanges&lt;/a&gt;&amp;lt;string, V&amp;gt; | null&lt;/code&gt;: an object describing the difference. The return value is only valid until the next &lt;code&gt;&lt;a href=&quot;defaultiterablediffer#diff&quot;&gt;diff()&lt;/a&gt;&lt;/code&gt; invocation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;keyvaluechanges&quot;&gt;KeyValueChanges&lt;/a&gt;&amp;lt;string, V&amp;gt; | null&lt;/code&gt; : 차이를 설명하는 객체. 리턴 값은 다음 &lt;code&gt;&lt;a href=&quot;defaultiterablediffer#diff&quot;&gt;diff()&lt;/a&gt;&lt;/code&gt; 호출까지만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="dcfab4dce548c33e5a1aa4f0f73b626fd5e5ec7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;keyvaluechanges&quot;&gt;KeyValueChanges&lt;/a&gt;&amp;lt;string, V&amp;gt; | null&lt;/code&gt;: an object describing the difference. The return value is only valid until the next &lt;code&gt;diff()&lt;/code&gt; invocation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;keyvaluechanges&quot;&gt;KeyValueChanges&lt;/a&gt;&amp;lt;string, V&amp;gt; | null&lt;/code&gt; : 차이를 설명하는 객체. 반환 값은 다음 &lt;code&gt;diff()&lt;/code&gt; 호출까지만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="e460128247a925e94fa7f22224a6f04ea051446c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;listener&quot;&gt;Listener&lt;/a&gt;[]&lt;/code&gt;: Array of event listeners on the DOM element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;listener&quot;&gt;Listener&lt;/a&gt;[]&lt;/code&gt; : DOM 요소의 이벤트 리스너 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ebbeab4d73c45487df767b481626dca93d3fdd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; is responsible for normalizing the URL against the application's base href. A normalized URL is absolute from the URL host, includes the application's base href, and has no trailing slash:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 는 애플리케이션의 기본 href에 대해 URL을 정규화해야합니다. 정규화 된 URL은 URL 호스트에서 절대적이며 응용 프로그램의 기본 href를 포함하며 슬래시가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c4f2db92121b6f1bb3951e6bbab5b81e473b88ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; When the &lt;code&gt;notFoundValue&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;injector#THROW_IF_NOT_FOUND&quot;&gt;Injector.THROW_IF_NOT_FOUND&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; &lt;code&gt;notFoundValue&lt;/code&gt; 가 &lt;code&gt;undefined&lt;/code&gt; 거나 &lt;code&gt;&lt;a href=&quot;injector#THROW_IF_NOT_FOUND&quot;&gt;Injector.THROW_IF_NOT_FOUND&lt;/a&gt;&lt;/code&gt; 인 경우 오류 가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="c0dc1f453a816759a02eb855e25a5dec3067b072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;navigationcancel&quot;&gt;NavigationCancel&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;navigationcancel&quot;&gt;NavigationCancel&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="475c287b535f622172020666cbcfa7f9b2caa423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;navigationend&quot;&gt;NavigationEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;navigationend&quot;&gt;NavigationEnd&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="c0a58e70d507c3a16f6fd9663e3cb14271aee57e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="dccea5ec83e99c95ae2fef83db967232b3cc6fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet&quot;&gt;NgComponentOutlet&lt;/a&gt;&lt;/code&gt; requires a component type, if a falsy value is set the view will clear and any existing component will get destroyed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet&quot;&gt;NgComponentOutlet&lt;/a&gt;&lt;/code&gt; 에는 구성 요소 유형이 필요합니다. 잘못된 값을 설정하면보기가 지워지고 기존 구성 요소가 모두 파괴됩니다.</target>
        </trans-unit>
        <trans-unit id="8c6a2893ca7b14a97670cf240ffd9f180c239812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletContent&quot;&gt;ngComponentOutletContent&lt;/a&gt;&lt;/code&gt;: Optional list of projectable nodes to insert into the content section of the component, if exists.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletContent&quot;&gt;ngComponentOutletContent&lt;/a&gt;&lt;/code&gt; : 컴포넌트의 컨텐츠 섹션에 삽입 할 투영 가능한 노드의 선택적 목록입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="7aa2a737bd072eeaf0b9a955612be2ab041cf8ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletInjector&quot;&gt;ngComponentOutletInjector&lt;/a&gt;&lt;/code&gt;: Optional custom &lt;a href=&quot;../core/injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt; that will be used as parent for the Component. Defaults to the injector of the current view container.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletInjector&quot;&gt;ngComponentOutletInjector&lt;/a&gt;&lt;/code&gt; :컴포넌트의 부모로 사용될선택적 커스텀&lt;a href=&quot;../core/injector&quot;&gt; &lt;code&gt;Injector&lt;/code&gt; &lt;/a&gt; . 현재 뷰 컨테이너의 인젝터가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="9b08267da277f0d727c55a88ae6cdaddf8d1c705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletNgModuleFactory&quot;&gt;ngComponentOutletNgModuleFactory&lt;/a&gt;&lt;/code&gt;: Optional module factory to allow dynamically loading other module, then load a component from that module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletNgModuleFactory&quot;&gt;ngComponentOutletNgModuleFactory&lt;/a&gt;&lt;/code&gt; : 다른 모듈을 동적으로로드 한 다음 해당 모듈에서 구성 요소를로드 할 수있는 선택적 모듈 팩토리.</target>
        </trans-unit>
        <trans-unit id="4ec50ce550a6457b22b22e2c3524fa9a39b5af61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngelementconstructor&quot;&gt;NgElementConstructor&amp;lt;P&amp;gt;&lt;/a&gt;&lt;/code&gt;: The custom-element construction class, which can be registered with a browser's &lt;code&gt;CustomElementRegistry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngelementconstructor&quot;&gt;NgElementConstructor&amp;lt;P&amp;gt;&lt;/a&gt;&lt;/code&gt; : 브라우저의 &lt;code&gt;CustomElementRegistry&lt;/code&gt; 에 등록 할 수있는 사용자 정의 요소 생성 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1e61fd503bafc1626207f003a8cbcf3ce52769ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; provides exported values that can be aliased to local variables. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; 는 지역 변수에 별명을 지정할 수있는 내 보낸 값을 제공합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2ecdfd114ceac9362a7d5e64732a9adb2675fc76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;: &lt;a href=&quot;../core/ngiterable&quot;&gt;NgIterable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;: The value of the iterable expression. Useful when the expression is more complex then a property access, for example when using the async pipe (&lt;code&gt;userStreams | &lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;: &lt;a href=&quot;../core/ngiterable&quot;&gt;NgIterable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; : 반복 가능한 식의 값입니다. 표현식이 속성 액세스보다 더 복잡한 경우 (예 : 비동기 파이프 ( &lt;code&gt;userStreams | &lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; )를사용하는 경우)에 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="7417f738d7b6f6f9e7ce8e59889cffed7ca4e10c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;: &lt;a href=&quot;../core/ngiterable&quot;&gt;NgIterable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;: The value of the iterable expression. Useful when the expression is more complex then a property access, for example when using the async pipe (&lt;code&gt;userStreams | async&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;: &lt;a href=&quot;../core/ngiterable&quot;&gt;NgIterable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; : 반복 가능한 표현식의 값. 예를 들어 비동기 파이프 ( &lt;code&gt;userStreams | async&lt;/code&gt; )를사용할 때와 같이식이 속성 액세스보다 복잡한 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7a225eff0352ebc2ffccfd419a9f3229fbc813a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforofcontext#even&quot;&gt;even&lt;/a&gt;: boolean&lt;/code&gt;: True when the item has an even index in the iterable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngforofcontext#even&quot;&gt;even&lt;/a&gt;: boolean&lt;/code&gt; : 아이템이 iterable에 짝수 인덱스를 가질 때 참.</target>
        </trans-unit>
        <trans-unit id="a7955a657edb2c4ff95de058b10654bf6b858207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;: boolean&lt;/code&gt;: True when the item has an odd index in the iterable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;: boolean&lt;/code&gt; : 아이템이 iterable에 홀수 인덱스를 가지고있을 때 참.</target>
        </trans-unit>
        <trans-unit id="cdef2e0a8c3d06e033f26d6243297b9e7f4ef3ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt; provides access to the NgModule Instance as well other objects related to this NgModule Instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt; 는 NgModule 인스턴스 및이 NgModule 인스턴스와 관련된 다른 객체에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="635a842763bcb849ebe64cb9464c2e07111e9831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt;: The new map instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; : 새로운 맵 인스턴스.</target>
        </trans-unit>
        <trans-unit id="86744ae01afb0c4ac4f128b5b417622405f0a57e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; is the full document HTML of the page to render, as a string. &lt;code&gt;url&lt;/code&gt; is the URL for the current render request. &lt;code&gt;extraProviders&lt;/code&gt; are the platform level providers for the current render request.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; 는 렌더링 할 페이지의 전체 문서 HTML입니다 (문자열). &lt;code&gt;url&lt;/code&gt; 은 현재 렌더링 요청의 URL입니다. &lt;code&gt;extraProviders&lt;/code&gt; 는 현재 렌더링 요청에 대한 플랫폼 수준 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="76ff1c2adb9ab2037dcc0deecea3e8f7a4428e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; encapsulates all calls to DOM APIs, which allows the Router to be platform-agnostic. This means that we can have different implementation of &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; for the different platforms that Angular supports. For example, &lt;code&gt;@angular/platform-browser&lt;/code&gt; provides an implementation specific to the browser environment, while &lt;code&gt;@angular/platform-server&lt;/code&gt; provides one suitable for use with server-side rendering.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; 은 DOM API에 대한 모든 호출을 캡슐화하여 라우터가 플랫폼에 구애받지 않도록합니다. 이것은Angular가 지원하는 다른 플랫폼에 대해 &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; 의 다른 구현을 가질 수 있음을 의미합니다. 예를 들어, &lt;code&gt;@angular/platform-browser&lt;/code&gt; 는 브라우저 환경에 특정한 구현을 제공하는 반면 &lt;code&gt;@angular/platform-server&lt;/code&gt; 는 서버 측 렌더링에 사용하기에 적합한 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4e953e251c09907073215fa0540509f9ea1e07ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; encapsulates all calls to DOM apis, which allows the Router to be platform agnostic. This means that we can have different implementation of &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; for the different platforms that angular supports. For example, &lt;code&gt;@angular/platform-browser&lt;/code&gt; provides an implementation specific to the browser environment, while &lt;code&gt;@angular/platform-webworker&lt;/code&gt; provides one suitable for use with web workers.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; 은 DOM API에 대한 모든 호출을 캡슐화하므로 라우터는 플랫폼에 구애받지 않습니다. 이것은각도가 지원하는 다른 플랫폼에 대해 다른 &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; 구현을 가질 수 있음을 의미합니다. 예를 들어, &lt;code&gt;@angular/platform-browser&lt;/code&gt; 는 브라우저 환경에 특정한 구현을 제공하고 &lt;code&gt;@angular/platform-webworker&lt;/code&gt; 는 웹 워커와 함께 사용하기에 적합한 것을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fbf2cfa85f246697ea90501a6269fb9091faff76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:animating&quot;)&lt;/code&gt; : Query all currently animating elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:animating&quot;)&lt;/code&gt; : 현재 애니메이션 요소를 모두 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="1e4b191d56391f7aa915ae06df3e873d955f7409" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:enter&quot;)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:leave&quot;)&lt;/code&gt; : Query for newly inserted/removed elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:enter&quot;)&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:leave&quot;)&lt;/code&gt; : 새로 삽입 / 제거 된 요소를 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="d37996ecc0571ee3e5f3b34a3eeb255428a5ab5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:self&quot;)&lt;/code&gt; : Include the current element into the animation sequence.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:self&quot;)&lt;/code&gt; : 현재 요소를 애니메이션 시퀀스에 포함합니다.</target>
        </trans-unit>
        <trans-unit id="aa884b82bdbaf9919211e4392ed8cbd9181c15b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@*&quot;)&lt;/code&gt; : Query all elements that contain an animation triggers.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@*&quot;)&lt;/code&gt; : 애니메이션 트리거가 포함 된 모든 요소를 ​​쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="6eb56475f761e4343c2c3d8fa8ba0a8ecc0d67ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@&lt;a href=&quot;animationevent#triggerName&quot;&gt;triggerName&lt;/a&gt;&quot;)&lt;/code&gt; : Query elements that contain an animation trigger.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@&lt;a href=&quot;animationevent#triggerName&quot;&gt;triggerName&lt;/a&gt;&quot;)&lt;/code&gt; : 애니메이션 트리거가 포함 된 쿼리 요소입니다.</target>
        </trans-unit>
        <trans-unit id="acccae415e347401fc81654944a6e3173eefad0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@triggerName&quot;)&lt;/code&gt; : Query elements that contain an animation trigger.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@triggerName&quot;)&lt;/code&gt; : 애니메이션 트리거가 포함 된 쿼리 요소입니다.</target>
        </trans-unit>
        <trans-unit id="124b5832b9b8c4142d5b646af66f8d8a60a8f71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt;: The new custom renderer instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; : 새로운 커스텀 렌더러 인스턴스.</target>
        </trans-unit>
        <trans-unit id="83d553367b90296ce21bfdcec132f65b25d3bab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolveend&quot;&gt;ResolveEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;resolveend&quot;&gt;ResolveEnd&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="07671970b61ea3a3190a161a435b18ca9f896b53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt; *</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt; *</target>
        </trans-unit>
        <trans-unit id="bc9fc2bfdfe26d1061618d108920925eee43ab42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="ccc7e79fbfcc312266f26ab88119b8b93a273741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="3f4747477fbe17193ac552bb3f9b6e40dbf6669d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#&lt;a href=&quot;route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#&lt;a href=&quot;route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="0648577339c936f71bff120d6a848bbba962c9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#&lt;a href=&quot;route#resolve&quot;&gt;resolve&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#&lt;a href=&quot;route#resolve&quot;&gt;resolve&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="67f57bc2891fe75a9ce65b4cc663e94ef0920434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#resolve&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#resolve&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="b72e9cfeff225851ceddb2bd235db1591e4f6fda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="afa15f92d85306cdf8160fe6c5df7c1517ad94a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;routeconfigloadend&quot;&gt;RouteConfigLoadEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;routeconfigloadend&quot;&gt;RouteConfigLoadEnd&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="aadb85c6421a02f1d456db43182757b4494a2b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;routeconfigloadstart&quot;&gt;RouteConfigLoadStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;routeconfigloadstart&quot;&gt;RouteConfigLoadStart&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="9253646390dcb5f14ab9cb0d26c8273ba22510d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;routesrecognized&quot;&gt;RoutesRecognized&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;routesrecognized&quot;&gt;RoutesRecognized&lt;/a&gt;&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="3a2572a9d42077a643a5eddcc7dbb05990b74d5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; is the primary api for writing unit tests for Angular applications and libraries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 는 Angular 응용 프로그램 및 라이브러리에 대한 단위 테스트를 작성하기위한 기본 API입니다.</target>
        </trans-unit>
        <trans-unit id="05a3e4e80ea686b6c91911426fb4d28ebd7e7c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; will be available as an injectable token. To use it import &lt;code&gt;&lt;a href=&quot;../platform-server/servertransferstatemodule&quot;&gt;ServerTransferStateModule&lt;/a&gt;&lt;/code&gt; on the server and &lt;code&gt;&lt;a href=&quot;browsertransferstatemodule&quot;&gt;BrowserTransferStateModule&lt;/a&gt;&lt;/code&gt; on the client.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 는 주사 가능한 토큰으로 제공됩니다. 이를 사용하려면서버에서 &lt;code&gt;&lt;a href=&quot;../platform-server/servertransferstatemodule&quot;&gt;ServerTransferStateModule&lt;/a&gt;&lt;/code&gt; 을가져오고클라이언트에서 &lt;code&gt;&lt;a href=&quot;browsertransferstatemodule&quot;&gt;BrowserTransferStateModule&lt;/a&gt;&lt;/code&gt; 을가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="48517ff6562f7b870208ffe5b667f4532e4d4861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt;: an &lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt;, which lets you register a &lt;code&gt;&lt;a href=&quot;upgradeadapterref#ready&quot;&gt;ready()&lt;/a&gt;&lt;/code&gt; callback to run assertions once the Angular components are ready to test through AngularJS.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; 당신이 등록 할 수 있습니다, &lt;code&gt;&lt;a href=&quot;upgradeadapterref#ready&quot;&gt;ready()&lt;/a&gt;&lt;/code&gt; 각 구성 요소가 AngularJS와를 통해 테스트 할 준비가되면 주장을 실행하는 콜백을.</target>
        </trans-unit>
        <trans-unit id="31f30c162bbe2dff8b85af4bd43008327d3532a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt;: an &lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt;, which lets you register a &lt;code&gt;ready()&lt;/code&gt; callback to run assertions once the Angular components are ready to test through AngularJS.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; :Angular 구성 요소가 AngularJS를 통해 테스트 할 준비가되면 어설 션을 실행하기 위해 &lt;code&gt;ready()&lt;/code&gt; 콜백을등록 할 수있는 &lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a78f3a5358e002d1ac9dafdaf3d9da80f2562f78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;: The new URL tree.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; : 새로운 URL 트리.</target>
        </trans-unit>
        <trans-unit id="1962e5ff4c5c57ec70f754c1a2f3fcf641364874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: A map of validation errors if validation fails, otherwise null.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt; : 검증에 실패했을 경우의 검증 에러의 맵. 그렇지 않은 경우는 null</target>
        </trans-unit>
        <trans-unit id="e0ba81d62351eb182340f3f37b0ddba5d699d28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: An error map that contains the &lt;code&gt;required&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt; if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt; :는 오류지도가 포함되어 &lt;code&gt;required&lt;/code&gt; 에 속성 집합 &lt;code&gt;true&lt;/code&gt; 유효성 검사가 실패 할 경우, 그렇지 않은 경우 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="774b5cabbee22d83071b9df7583ae9f92e28528c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: An error map with the &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt; 다음과 오류 맵 &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 유효성 검사가 실패 할 경우 재산, 그렇지 않은 경우 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c750c12ad870ecddc67df6eb491886efe48a956a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: An error map with the &lt;code&gt;required&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt; 다음과 오류지도 &lt;code&gt;required&lt;/code&gt; 유효성 검사가 실패 할 경우 재산, 그렇지 않은 경우 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ce9f923c9148dc34c7ef242acdec4efe90cbd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;&lt;a href=&quot;maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; :유효성 검사가 실패하면 &lt;code&gt;&lt;a href=&quot;maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; 속성으로오류 맵을 반환하는 유효성 검사기 함수입니다.그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b4a7063f8ef3a3bd3f11fc8e474841aa4e59a959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; :유효성 검사가 실패하면 &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 의 오류 맵을 반환하는 유효성 검사기 함수, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e21f5b371702da60ecb769ac9664f177ba288ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;&lt;a href=&quot;patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; :유효성 검사가 실패하면 &lt;code&gt;&lt;a href=&quot;patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; 속성이 포함된 오류 맵을 반환하는 유효성 검사기 함수, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8e786aa7c1313da1ebce2cd9d8a662800341cb0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;max&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; :유효성 검사가 실패하면 &lt;code&gt;max&lt;/code&gt; 속성으로오류 맵을 반환하는 유효성 검사기 함수, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ac7eeca7c4bc8411ac9009236c2182e7ae43824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;min&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; :유효성 검사가 실패하면 &lt;code&gt;min&lt;/code&gt; 속성으로오류 맵을 반환하는 유효성 검사기 함수, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="34282c282ef789659d4b54497997829d2206fbeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7568fbdba697738f582cc4de3d3857b5fb856638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewchildren&quot;&gt;ViewChildren&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewchildren&quot;&gt;ViewChildren&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="bccfb1cd4b2704f197599e0f487fa461b3091888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; (default): Emulate native scoping of styles.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; (기본값) : 기본 스타일 범위를 에뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="337a797ddd55c60605b9aa3a7355ff65b3204924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt;: Use shimmed CSS that emulates the native behavior.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt; : 기본 동작을 에뮬레이트하는 shimmed CSS를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="63346354764ec54d59fca82476136ccdcae8f133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt;: Use the native encapsulation mechanism of the renderer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; : 렌더러의 네이티브 캡슐화 메커니즘을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="108fece1fc733fa50500bcbe874704d9068f2a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;ViewEncapsulation.Native&lt;/a&gt;&lt;/code&gt;: Deprecated. Use &lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;ViewEncapsulation.Native&lt;/a&gt;&lt;/code&gt; : 사용되지 않습니다. &lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt; 을 대신사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f5b153b873299a450e9201bf2112d7cc692b58dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#None&quot;&gt;ViewEncapsulation.None&lt;/a&gt;&lt;/code&gt;: Use global CSS without any encapsulation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewencapsulation#None&quot;&gt;ViewEncapsulation.None&lt;/a&gt;&lt;/code&gt; : 캡슐화없이 전역 CSS를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e6c9cb9400c899ecc942bf331aa78ef3a5a7fa3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt;: Use modern &lt;a href=&quot;https://w3c.github.io/webcomponents/spec/shadow/&quot;&gt;Shadow DOM&lt;/a&gt; and create a ShadowRoot for component's host element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt; : 최신&lt;a href=&quot;https://w3c.github.io/webcomponents/spec/shadow/&quot;&gt; Shadow DOM&lt;/a&gt; 을 사용하여 구성 요소의 호스트 요소에 대한 ShadowRoot를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0c371cc21ed646a13fd59cbdd7621c7212c028f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt;: Use Shadow DOM v1 to encapsulate styles.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt; : Shadow DOM v1을 사용하여 스타일을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="e328ee763c3419fc3ac3eb6b7d4603c7c20da4fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt; | null&lt;/code&gt;: The &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance, or null if the index is out of range.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt; | null&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; 인스턴스. 인덱스가 범위를 벗어난 경우 null</target>
        </trans-unit>
        <trans-unit id="c2c331c7a5f4189987afc4b555f67a1ac69f233a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt;: The inserted &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; : 삽입 된 &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="dd732f0905dd21a64b1e8b52d0703c1e467ef277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt;: The moved &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; : 이동 된 &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="2ca406306f3b740c4a627f87081cd85521636945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;&lt;/code&gt;: A day index number, using the 0-based week-day index for &lt;code&gt;en-US&lt;/code&gt; (Sunday = 0, Monday = 1, ...). For example, for &lt;code&gt;fr-FR&lt;/code&gt;, returns 1 to indicate that the first day is Monday.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;en-US&lt;/code&gt; 에 대해 0부터 시작하는 요일 색인을 사용하는 일 색인 번호입니다(일요일 = 0, 월요일 = 1, ...). 예를 들어 &lt;code&gt;fr-FR&lt;/code&gt; 의 경우 첫 번째 날이 월요일임을 나타내려면 1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f145d58c6fd74c30fd20572701b6f8514f87ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=0&lt;/code&gt; (or any other number)</source>
          <target state="translated">&lt;code&gt;=0&lt;/code&gt; (또는 다른 숫자)</target>
        </trans-unit>
        <trans-unit id="10912fa0c709f6b79baa8001ec52d213438a543b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; is matched literally; that is, it matches &lt;em&gt;only&lt;/em&gt; the character &lt;code&gt;?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 말 그대로 일치합니다. 즉, 문자 &lt;em&gt;만&lt;/em&gt; 일치 &lt;code&gt;?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1270daceea3b2260a63ded33f1f39d66a327d3f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; matches exactly one character excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; 를 제외하고 정확히 하나의 문자와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="c30c6dd61436988862959bb849037594e9e127fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; extends &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, so the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; configuration applies to components as well</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 확장 하므로 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 구성은 구성 요소에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="52500b3eac7aa8510164f2665f2a34295e7089e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; is a decorator function that specifies the Angular metadata for the component.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 는 컴포넌트 의 Angular 메타 데이터를 지정하는 데코레이터 함수입니다.</target>
        </trans-unit>
        <trans-unit id="0b872a46f3c12b6dd595c98412bd6fef818ceea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; used together</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 함께 사용</target>
        </trans-unit>
        <trans-unit id="62c8012bbcfd634e7f21f915596b242b2fe78c33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; queries will no longer be able to match their directive's own host node (previously, these queries would match the host node in addition to its content children).</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; 쿼리는 더 이상 지시문의 자체 호스트 노드와 일치 할 수 없습니다 (이전에는 이러한 쿼리가 콘텐츠 하위 항목뿐 아니라 호스트 노드와도 일치 함).</target>
        </trans-unit>
        <trans-unit id="ec79c6a862679a4f547da02004d20730f0b6df7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e83057aec842759895e841beda881cab2995e2fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fed9a112c9bddc7b963c249b2fe0f9f36ef4779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;viewProviders&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="964ce757d00178b0192570a822b1d0b5f9b75bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; causes the injector to look until it encounters the edge of the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 는 인젝터가 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 의 가장자리에 닿을 때까지 보도록합니다 .</target>
        </trans-unit>
        <trans-unit id="e5b82846979ba2b3c3aec7fc7efde4476f8065bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; lets you designate a component as the last stop in the injector tree when searching for providers. Even if there is a service instance further up the tree, Angular won't continue looking. Use &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 사용하면 공급자를 검색 할 때 인젝터 트리에서 마지막 중지로 구성 요소를 지정할 수 있습니다. 트리 위에 서비스 인스턴스가 더 있어도 Angular는 계속 찾지 않습니다. 다음과 같이 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3b393e86d562cb68018c3614d40f2fd3439437e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; are &lt;em&gt;parameter decorators&lt;/em&gt;. They alter the way the DI framework provides a dependency, by annotating the dependency parameter on the constructor of the class that requires the dependency.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 있는 &lt;em&gt;매개 변수 장식&lt;/em&gt; . 종속성이 필요한 클래스의 생성자에 종속성 매개 변수에 주석을 달아 DI 프레임 워크가 종속성을 제공하는 방식을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="8cc85dd75766839e63ae4d424e89a90f22816085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;(Token)=&amp;gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; demonstrates that if &lt;code&gt;Token&lt;/code&gt; is injected at this location in the logical tree its value would be &lt;code&gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;(Token)=&amp;gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 경우 것을 증명 &lt;code&gt;Token&lt;/code&gt; 논리 트리의이 위치에 주입되어 그 값이 될 &lt;code&gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8b0125464173c0d185d1554b6ac84821d7be5f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;(Token)=&amp;gt;Value&lt;/code&gt; demonstrates that if &lt;code&gt;Token&lt;/code&gt; is injected at this location in the logical tree its value would be &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;(Token)=&amp;gt;Value&lt;/code&gt; 경우 것을 증명 &lt;code&gt;Token&lt;/code&gt; 논리 트리의이 위치에 주입되어 그 값이 될 &lt;code&gt;Value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e1064c227111edb303b1ee138838547bdad0a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; services</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 서비스</target>
        </trans-unit>
        <trans-unit id="acd5a7b6534b18264742ffac125bd2e772f1d779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; vs. &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; vs &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3b24600181e2a7e83d8b553fc602f2198399bd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02eca41584ced2a8591e638d0fda6f161c287e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; act as the API, or application programming interface, of the child component in that they allow the child to communicate with the parent. Think of &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; like ports or doorways&amp;mdash;&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; is the doorway into the component allowing data to flow in while &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; is the doorway out of the component, allowing the child component to send data out.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 은 자식이 부모와 통신 할 수 있도록 자식 구성 요소의 API 또는 응용 프로그래밍 인터페이스 역할을합니다. &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 포트 또는 출입구와 같은 것으로 생각하십시오. &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 은 구성 요소의 출입구이며, &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 은 구성 요소의 출입구이며 하위 구성 요소는 보낼 수 있습니다. 데이터 출력.</target>
        </trans-unit>
        <trans-unit id="d9502ef19a3a56c64d892654d6e4e777f65b0533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; allow Angular to share data between the parent context and child directives or components. An &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property is writable while an &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; property is observable.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 사용하면 Angular는 부모 컨텍스트와 자식 지시문 또는 구성 요소간에 데이터를 공유 할 수 있습니다. &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 동안 속성 쓸 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 특성이 관측된다.</target>
        </trans-unit>
        <trans-unit id="226486b9f473a6e4ae880810f9be654cdeb6ce32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; are independent</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 과 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 은 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="2b09c859a3befd2bfd7597737f7dee7263842343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 선언</target>
        </trans-unit>
        <trans-unit id="6b00b924baae1f76a87bdf4eb59f51438b4c6c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; give a child component a way to communicate with its parent component. &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; allows a parent component to update data in the child component. Conversely, `@Output() allows the child to send data to a parent component.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 은 자식 구성 요소가 부모 구성 요소와 통신하는 방법을 제공합니다. &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 사용하면 부모 구성 요소가 자식 구성 요소의 데이터를 업데이트 할 수 있습니다. 반대로`@Output ()은 자식이 부모 컴포넌트에 데이터를 보낼 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="c9a49f4d50c659735e79892be8a358a3fb9f7e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; properties</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="afdd6359ef45d33da460127c107200c00356879e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; together</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 이 함께</target>
        </trans-unit>
        <trans-unit id="f9c9111ee98e8c51095f3615b5bd05724b59372e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;(Token)&lt;/code&gt; demonstrates that a fallback &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; injector should be used at this location.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;(Token)&lt;/code&gt; 은이 위치에서 폴백 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 인젝터를 사용해야 함을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="efa772e61a2d04e10845b19a0ca79a5335bae034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 메타 데이터</target>
        </trans-unit>
        <trans-unit id="fe3f1b3e145eb9a0ee1940dbb91f560f2207491e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata tells the Angular compiler what components to compile for this module and how to link this module with other modules.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 메타 데이터는 Angular 컴파일러에게이 모듈을 위해 컴파일 할 컴포넌트와이 모듈을 다른 모듈과 링크하는 방법을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="6972eeefe7eac00a069d512e646a46bb7c13ff58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; allows Angular to consider a service you inject to be optional. This way, if it can't be resolved at runtime, Angular simply resolves the service as &lt;code&gt;null&lt;/code&gt;, rather than throwing an error. In the following example, the service, &lt;code&gt;OptionalService&lt;/code&gt;, isn't provided in the service, &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;, or component class, so it isn't available anywhere in the app.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 사용하면 Angular는 주입 한 서비스를 선택 사항 으로 간주 할 수 있습니다. 이런 식으로 런타임에 해결할 수 없으면 Angular는 단순히 오류를 발생시키지 않고 서비스를 &lt;code&gt;null&lt;/code&gt; 로 해석합니다 . 다음 예제에서 서비스 &lt;code&gt;OptionalService&lt;/code&gt; 서비스는 서비스 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; 또는 컴포넌트 클래스에서 제공되지 않으므로 앱의 어느 곳에서도 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="783fddf464f0a02bc15416ced39f05067da67f39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; marks a property in a child component as a doorway through which data can travel from the child to the parent.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 은 하위 구성 요소의 속성을 데이터가 하위에서 상위로 이동할 수있는 출입구로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="81559745b7ead2cb893f8a76046522d0b7a8e6a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; marks a property in a child component as a doorway through which data can travel from the child to the parent. The child component then has to raise an event so the parent knows something has changed. To raise an event, &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; works hand in hand with &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, which is a class in &lt;code&gt;@angular/core&lt;/code&gt; that you use to emit custom events.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 은 자식 구성 요소의 속성을 자식에서 부모로 데이터가 이동할 수있는 출입구로 표시합니다. 그런 다음 자식 구성 요소는 이벤트를 발생시켜야 부모가 무언가 변경된 것을 알 수 있습니다. 이벤트를 발생시키기 위해 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 은 사용자 정의 이벤트를 생성하는 데 사용하는 &lt;code&gt;@angular/core&lt;/code&gt; 의 클래스 인 &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 와 함께 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="9eae59175740fa7e3fe510bfed3175924db18924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;&amp;mdash;a decorator function marking the property as a way for data to go from the child to the parent</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; &amp;mdash; 데이터가 자식에서 부모로 이동하는 방법으로 속성을 표시하는 데코레이터 함수</target>
        </trans-unit>
        <trans-unit id="8be3c4ae30cbb072cf873f9fe19ac38edb784e2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae775b610170330c54a55be51908b4b915c6bedc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 및 &lt;code&gt;viewProviders&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80e21f119928963530faf51124d241c3bba2da26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; is the opposite of &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt;. With &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;, Angular starts its search for a service in the parent &lt;code&gt;ElementInjector&lt;/code&gt;, rather than in the current one. So if the parent &lt;code&gt;ElementInjector&lt;/code&gt; were using the value &lt;code&gt;🌿&lt;/code&gt; (fern) for &lt;code&gt;emoji&lt;/code&gt; , but you had &lt;code&gt;🍁&lt;/code&gt; (maple leaf) in the component's &lt;code&gt;providers&lt;/code&gt; array, Angular would ignore &lt;code&gt;🍁&lt;/code&gt; (maple leaf) and use &lt;code&gt;🌿&lt;/code&gt; (fern).</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 는 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 와 반대입니다 . 와 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; , 각도는 부모의 서비스에 대한 검색을 시작 &lt;code&gt;ElementInjector&lt;/code&gt; 를 오히려 현재보다. 부모한다면 &lt;code&gt;ElementInjector&lt;/code&gt; 이 값을 사용하고 &lt;code&gt;🌿&lt;/code&gt; 에 대한 (고사리) &lt;code&gt;emoji&lt;/code&gt; 하지만했다 &lt;code&gt;🍁&lt;/code&gt; 구성 요소의에서 (메이플 리프) &lt;code&gt;providers&lt;/code&gt; 배열, 각도는 무시합니다 &lt;code&gt;🍁&lt;/code&gt; (메이플 리프) 사용 &lt;code&gt;🌿&lt;/code&gt; (고사리).</target>
        </trans-unit>
        <trans-unit id="98ffddef70b3efe7aac4f09d3867c789053d29fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 와 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ee87b8917a6a921485dc8d1644ae6d8553a865a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;, causes the injector to start its search for the &lt;code&gt;AnimalService&lt;/code&gt; at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;, not the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;, where the request originates, and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; stops the search at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;. Since &lt;code&gt;AnimalService&lt;/code&gt; is provided via the &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array, the injector finds 🦔 (hedgehog) in the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 는 인젝터가 요청이 시작된 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 가 아닌 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 에서 &lt;code&gt;AnimalService&lt;/code&gt; 검색을 시작하게 하고 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt; () 는 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 에서 검색을 중지합니다 &amp;gt; &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; . &lt;code&gt;AnimalService&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 배열을 통해 제공 되므로 인젝터는 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 에서 🦔 (고슴도치)를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="c298d5043830e6434a4fa37d14e5871c58760803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;, causes the injector to start its search for the &lt;code&gt;AnimalService&lt;/code&gt; at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;, not the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;, where the request originates, and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; stops the search at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;. Since &lt;code&gt;AnimalService&lt;/code&gt; is provided via the &lt;code&gt;viewProviders&lt;/code&gt; array, the injector finds 🦔 (hedgehog) in the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 는 인젝터가 요청이 시작된 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 가 아닌 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 에서 &lt;code&gt;AnimalService&lt;/code&gt; 검색을 시작하도록 하고 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt; () 는 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 에서 검색을 중지합니다. &amp;gt; &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; . &lt;code&gt;AnimalService&lt;/code&gt; 는 &lt;code&gt;viewProviders&lt;/code&gt; 배열을 통해 제공 되므로 인젝터는 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 에서 🦔 (고슴도치)를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="0a84bdcf6b7e28315149c1f06114a22bb1d1b466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; is essential for two reasons:</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; 는 다음 두 가지 이유로 필수적입니다.</target>
        </trans-unit>
        <trans-unit id="f4b02b9857b724f247ab96d80f89428b62e36a21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; static resolution as the default</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; 정적 해상도를 기본값으로</target>
        </trans-unit>
        <trans-unit id="818a4f7f78bf20e58b62bde715ebff70077a8578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;custom_elements_schema&quot;&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;custom_elements_schema&quot;&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ca7761fe6f1c92450dc5ccbb52a08c185c1edb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Provide(Token=&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;)&lt;/code&gt; demonstrates that there is a declaration of &lt;code&gt;Token&lt;/code&gt; provider with value &lt;code&gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; at this location in the logical tree.</source>
          <target state="translated">&lt;code&gt;@Provide(Token=&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;)&lt;/code&gt; 는 논리 트리의이 위치에 값이 &lt;code&gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;Token&lt;/code&gt; 제공자 의 선언이 있음을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="46066d42b561413c36dab7a5c9313f87fe14c981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Provide(Token=Value)&lt;/code&gt; demonstrates that there is a declaration of &lt;code&gt;Token&lt;/code&gt; provider with value &lt;code&gt;Value&lt;/code&gt; at this location in the logical tree.</source>
          <target state="translated">&lt;code&gt;@Provide(Token=Value)&lt;/code&gt; 는 논리 트리의이 위치에 값 &lt;code&gt;Value&lt;/code&gt; 이있는 &lt;code&gt;Token&lt;/code&gt; 공급자 선언이 있음을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a22b971fd277c657297448af0072500a533160a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@angular/platform-webworker&lt;/code&gt; has been removed and will no longer be supported. See &lt;a href=&quot;https://github.com/angular/angular/pull/38846&quot;&gt;PR 38846&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@angular/platform-webworker&lt;/code&gt; 가 제거되었으며 더 이상 지원되지 않습니다. &lt;a href=&quot;https://github.com/angular/angular/pull/38846&quot;&gt;PR 38846을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1eb6bb1c84a507be288a87b8100d27cba6c63e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@angular/platform-webworker&lt;/code&gt; is no longer supported. No further versions will be published. See &lt;a href=&quot;https://github.com/angular/angular/pull/38846&quot;&gt;PR 38846&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@angular/platform-webworker&lt;/code&gt; 는 더 이상 지원되지 않습니다. 더 이상 버전이 게시되지 않습니다. &lt;a href=&quot;https://github.com/angular/angular/pull/38846&quot;&gt;PR 38846을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2df93d3356523f89d3823d58f5daa7a3f985c9ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@angular/platform-webworker&lt;/code&gt; was introduced in Angular version 2 as an experiment in leveraging Angular's rendering architecture to run an entire web application in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;web worker&lt;/a&gt;. We've learned a lot from this experiment and have come to the conclusion that running the entire application in a web worker is not the best strategy for most applications.</source>
          <target state="translated">&lt;code&gt;@angular/platform-webworker&lt;/code&gt; 는 Angular의 렌더링 아키텍처를 활용하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;웹 워커&lt;/a&gt; 에서 전체 웹 애플리케이션을 실행하는 실험으로 Angular 버전 2에 도입되었습니다 . 우리는이 실험에서 많은 것을 배웠으며 웹 워커에서 전체 애플리케이션을 실행하는 것이 대부분의 애플리케이션에 가장 적합한 전략이 아니라는 결론에 도달했습니다.</target>
        </trans-unit>
        <trans-unit id="ee6934fa313c36bb3632eefa683d74e7be6f236d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@angular/upgrade/&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; has a &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt; method for the purpose of making Angular services available to AngularJS code. Use it to plug in the &lt;code&gt;Phone&lt;/code&gt; service:</source>
          <target state="translated">&lt;code&gt;@angular/upgrade/&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; 에는 Angular 서비스를 AngularJS 코드에 제공하기 위해 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt; 메소드가 있습니다. &lt;code&gt;Phone&lt;/code&gt; 서비스 를 연결하는 데 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3e30ffb5154739abe2e62bf2940062c63bb5efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@types/angular&lt;/code&gt; is declared as a UMD module, and due to the way &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#support-for-umd-module-definitions&quot;&gt;UMD typings&lt;/a&gt; work, once you have an ES6 &lt;code&gt;import&lt;/code&gt; statement in a file all UMD typed modules must also be imported via &lt;code&gt;import&lt;/code&gt; statements instead of being globally available.</source>
          <target state="translated">&lt;code&gt;@types/angular&lt;/code&gt; UMD 모듈로 선언하고, 방식 때문에하는 것입니다 &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#support-for-umd-module-definitions&quot;&gt;UMD의 typings의&lt;/a&gt; 당신이 ES6의 일단, 작업 &lt;code&gt;import&lt;/code&gt; 모든 UMD 모듈도를 통해 가져와야 입력 파일에 문 &lt;code&gt;import&lt;/code&gt; 문 대신 전 세계적으로 사용할 수있는합니다.</target>
        </trans-unit>
        <trans-unit id="c16eff33b35908b84383cea7abb1875523a44b12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Activated &lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; in action</source>
          <target state="translated">&lt;code&gt;Activated &lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 행동에</target>
        </trans-unit>
        <trans-unit id="a458d887be531fc181433bd61e339c2e04a69767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Activated Route&lt;/code&gt; in action</source>
          <target state="translated">&lt;code&gt;Activated Route&lt;/code&gt; 작동</target>
        </trans-unit>
        <trans-unit id="d5dd5882973665f048d159d3ef852b35e9226a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActivatedRoute&lt;/code&gt; params and &lt;code&gt;queryParams&lt;/code&gt; properties</source>
          <target state="translated">&lt;code&gt;ActivatedRoute&lt;/code&gt; 매개 변수 및 &lt;code&gt;queryParams&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="ac42a8f4c89465ac4e569e07b18ce3682f353126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdBannerComponent&lt;/code&gt; takes an array of &lt;code&gt;AdItem&lt;/code&gt; objects as input, which ultimately comes from &lt;code&gt;AdService&lt;/code&gt;. &lt;code&gt;AdItem&lt;/code&gt; objects specify the type of component to load and any data to bind to the component.&lt;code&gt;AdService&lt;/code&gt; returns the actual ads making up the ad campaign.</source>
          <target state="translated">&lt;code&gt;AdBannerComponent&lt;/code&gt; 는 &lt;code&gt;AdItem&lt;/code&gt; 객체 의 배열을 입력으로 사용하며 결국 &lt;code&gt;AdService&lt;/code&gt; 에서 가져옵니다 . &lt;code&gt;AdItem&lt;/code&gt; 객체는로드 할 구성 요소 유형과 구성 요소에 바인딩 할 데이터를 지정합니다. &lt;code&gt;AdService&lt;/code&gt; 는 광고 캠페인을 구성하는 실제 광고를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a521eab173b9f837bc6789f8e888f759453b138f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdDirective&lt;/code&gt; injects &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; to gain access to the view container of the element that will host the dynamically added component.</source>
          <target state="translated">&lt;code&gt;AdDirective&lt;/code&gt; 는 동적으로 추가 된 구성 요소를 호스팅 할 요소의 뷰 컨테이너에 액세스하기 위해 &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; 를 주입 합니다 .</target>
        </trans-unit>
        <trans-unit id="f14889583e9bb0b9cddff9fded84c128a6a24039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlexComponent&lt;/code&gt;&lt;em&gt;should&lt;/em&gt; implement &lt;code&gt;Parent&lt;/code&gt; as a matter of proper style. It doesn't in this example &lt;em&gt;only&lt;/em&gt; to demonstrate that the code will compile and run without the interface.</source>
          <target state="translated">&lt;code&gt;AlexComponent&lt;/code&gt; &lt;em&gt;는&lt;/em&gt; 적절한 스타일의 문제로 &lt;code&gt;Parent&lt;/code&gt; 를 구현 &lt;em&gt;해야합니다&lt;/em&gt; . 이 예제 에서는 인터페이스없이 코드가 컴파일되고 실행됨을 보여주기위한 것이 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f2bda7caf88799fe289c3e3e58cac88dd77160b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; could be bootstrapped in this module but declared in a different feature module.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 는이 모듈에서 부트 스트랩 될 수 있지만 다른 기능 모듈에서 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="feb551f85199da795f4f8bcaf46b2fc92e3e8fa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; could be declared in this module but not bootstrapped.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 이 모듈에서 AppComponent를 선언 할 수는 있지만 부트 스트랩 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="41ee884f53d753e9009c1ef0d273ad8f868573ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; defines a method that can detect when a view changes. The method assigns an animation state value to the animation trigger (&lt;code&gt;@routeAnimation&lt;/code&gt;) based on the route configuration &lt;code&gt;data&lt;/code&gt; property value. Here's an example of an &lt;code&gt;AppComponent&lt;/code&gt; method that detects when a route change happens.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 는 뷰가 변경 될 때이를 감지 할 수있는 메소드를 정의합니다. 이 방법 은 경로 구성 &lt;code&gt;data&lt;/code&gt; 속성 값을 기반으로 애니메이션 상태 값을 애니메이션 트리거 ( &lt;code&gt;@routeAnimation&lt;/code&gt; )에 할당합니다 . 다음 은 경로 변경이 발생하는시기를 감지 하는 &lt;code&gt;AppComponent&lt;/code&gt; 메소드 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="383b3a22bba66e0a98e4280236ab92e8d0eee8c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; is included in the &lt;code&gt;exports&lt;/code&gt; list here for illustration; it isn't actually necessary in this example. A root NgModule has no reason to &lt;em&gt;export&lt;/em&gt; anything because other modules don't need to &lt;em&gt;import&lt;/em&gt; the root NgModule.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 는 여기에 대한 &lt;code&gt;exports&lt;/code&gt; 목록에 포함되어 있습니다 . 이 예제에서는 실제로 필요하지 않습니다. 다른 모듈은 루트 NgModule 을 &lt;em&gt;가져올&lt;/em&gt; 필요 가 없기 때문에 루트 NgModule은 아무것도 &lt;em&gt;내보낼&lt;/em&gt; 이유가 없습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3729c23c1e7924997731702e5777be2ad7aacc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; is often listed in both &lt;code&gt;declarations&lt;/code&gt; and &lt;code&gt;bootstrap&lt;/code&gt;. You might see the same component listed in &lt;code&gt;declarations&lt;/code&gt;, &lt;code&gt;exports&lt;/code&gt;, and &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 는 종종 &lt;code&gt;declarations&lt;/code&gt; 과 &lt;code&gt;bootstrap&lt;/code&gt; 모두에 나열됩니다 . &lt;code&gt;declarations&lt;/code&gt; , &lt;code&gt;exports&lt;/code&gt; 및 &lt;code&gt;entryComponents&lt;/code&gt; 에 동일한 구성 요소가 나열되어있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b375afc618b783b6925c578e4b562c41ed937b02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; is the application's root component. It will host the new &lt;code&gt;HeroFormComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; 는 응용 프로그램의 루트 구성 요소입니다. 새로운 &lt;code&gt;HeroFormComponent&lt;/code&gt; 를 호스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="9627bfd51be26f75305be962a4822bed9097ba92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppRoutingModule&lt;/code&gt;, &lt;code&gt;AppModule&lt;/code&gt;, and &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AppRoutingModule&lt;/code&gt; , &lt;code&gt;AppModule&lt;/code&gt; 및 &lt;code&gt;HeroService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63c52ae238c535f227c40c8b444ca832e7f7c79e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; - the CSS classes declared as Array elements are added,</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; -Array 요소로 선언 된 CSS 클래스가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="7790fc2fd64479cc256a9ab761481fd8ce22505a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt;&amp;lt;&lt;code&gt;string&lt;/code&gt;&amp;gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt;&amp;lt;&lt;code&gt;string&lt;/code&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3dd8e81a4e027857b3a992656a2789e479d74def" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;By.all&lt;/code&gt; - return all elements.</source>
          <target state="translated">&lt;code&gt;By.all&lt;/code&gt; - 모든 요소를 ​​반환합니다.</target>
        </trans-unit>
        <trans-unit id="ead15d12ec92c1bcf05250ca08a17a031f4616e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;By.css(selector)&lt;/code&gt; - return elements with matching CSS selectors.</source>
          <target state="translated">&lt;code&gt;By.css(selector)&lt;/code&gt; 와 일치하는 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a0f945f7c5be538beb44c3e86fe3e9bf02c32354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;By.directive(directive)&lt;/code&gt; - return elements that Angular matched to an instance of the directive class.</source>
          <target state="translated">&lt;code&gt;By.directive(directive)&lt;/code&gt; 가 지시문 클래스의 인스턴스와 일치 한 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="279eee9c75e9e5084fdbc52a0aa7e2fc2bb2a88a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanActivate&lt;/code&gt;: requiring authentication</source>
          <target state="translated">&lt;code&gt;CanActivate&lt;/code&gt; : 인증 필요</target>
        </trans-unit>
        <trans-unit id="54b04bf7ecd44697353fbc221c6083a5b7620e65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanActivateChild&lt;/code&gt;: guarding child routes</source>
          <target state="translated">&lt;code&gt;CanActivateChild&lt;/code&gt; : 자식 경로 보호</target>
        </trans-unit>
        <trans-unit id="064160c691a18470cd89ffb3a1318ea809793db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanDeactivate&lt;/code&gt;: handling unsaved changes</source>
          <target state="translated">&lt;code&gt;CanDeactivate&lt;/code&gt; : 저장되지 않은 변경 사항 처리</target>
        </trans-unit>
        <trans-unit id="b8ae91271080d62702e9a068720fe8945ae08840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanLoad&lt;/code&gt; Guard: guarding unauthorized loading of feature modules</source>
          <target state="translated">&lt;code&gt;CanLoad&lt;/code&gt; Guard : 기능 모듈의 무단 로딩 보호</target>
        </trans-unit>
        <trans-unit id="de29fcf969a11ed1a9725a1291b9961595973d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionChangeRecord&lt;/code&gt; has been removed from &lt;code&gt;@angular/core&lt;/code&gt;. See &lt;a href=&quot;https://github.com/angular/angular/pull/38668&quot;&gt;PR 38668&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionChangeRecord&lt;/code&gt; &lt;code&gt;@angular/core&lt;/code&gt; 에서 CollectionChangeRecord 가 제거되었습니다 . &lt;a href=&quot;https://github.com/angular/angular/pull/38668&quot;&gt;PR 38668을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60bbde8979d122db0bf6a3a2cddc5e54f56af72e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ComponentFixture&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;ComponentFixture&lt;/code&gt; 메서드</target>
        </trans-unit>
        <trans-unit id="4066aaa3ce2038c289ef0c2531326b5fd932acae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ComponentFixture&lt;/code&gt; properties</source>
          <target state="translated">&lt;code&gt;ComponentFixture&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="31e3f6105c247142572016d0651f402369c117e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CurrencyPipe&lt;/code&gt; - &lt;code&gt;DEFAULT_CURRENCY_CODE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CurrencyPipe&lt;/code&gt; - &lt;code&gt;DEFAULT_CURRENCY_CODE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="680ef6a9b3647d0470bb4485305a4262a8cb90a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOCUMENT&lt;/code&gt; in &lt;code&gt;@angular/common&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DOCUMENT&lt;/code&gt; 의 &lt;code&gt;@angular/common&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6eb7ac779c82f86f6e3779b0dfe6f48b7d4f1638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DashboardComponent&lt;/code&gt; hero links</source>
          <target state="translated">&lt;code&gt;DashboardComponent&lt;/code&gt; 영웅 링크</target>
        </trans-unit>
        <trans-unit id="5f13dc7a4840d6dd0549866e4797f952f2144610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateLoggerService&lt;/code&gt; inherits from &lt;code&gt;LoggerService&lt;/code&gt;; it appends the current date/time to each message:</source>
          <target state="translated">&lt;code&gt;DateLoggerService&lt;/code&gt; 의 에서 상속 &lt;code&gt;LoggerService&lt;/code&gt; ; 각 메시지에 현재 날짜 / 시간을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="29a726088085f1bb15a75c512f2d14f16073ccf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DropdownQuestion&lt;/code&gt; presents a list of choices in a select box.</source>
          <target state="translated">&lt;code&gt;DropdownQuestion&lt;/code&gt; 은 선택 상자에 선택 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f90640d30422213fd13ec563d16f1870c68876ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicFormComponent&lt;/code&gt; expects the list of questions in the form of an array bound to &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;() questions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DynamicFormComponent&lt;/code&gt; 는 결합 배열의 형태 질문 목록 기대 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;() questions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d85def03aa8159714ae909c1594b4aa24fcd68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicFormComponent&lt;/code&gt; is the entry point and the main container for the form.</source>
          <target state="translated">&lt;code&gt;DynamicFormComponent&lt;/code&gt; 는 양식의 시작점 및 기본 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="64be889d31debd22c2cc760bc53ab6f115ee390b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXISTING_CLIENTS_ONLY&lt;/code&gt;: the service worker does not have a clean copy of the latest known version of the app. Older cached versions are safe to use, so existing tabs continue to run from cache, but new loads of the app will be served from the network. The service worker will try to recover from this state when a new version of the application is detected and installed (that is, when a new &lt;code&gt;ngsw.json&lt;/code&gt; is available).</source>
          <target state="translated">&lt;code&gt;EXISTING_CLIENTS_ONLY&lt;/code&gt; : 서비스 워커는 알려진 최신 버전의 앱 복사본을 가지고 있지 않습니다. 오래된 캐시 버전은 사용하기에 안전하므로 기존 탭은 캐시에서 계속 실행되지만 새로운 앱로드는 네트워크에서 제공됩니다. 서비스 워커는 새로운 버전의 응용 프로그램이 감지되어 설치 될 때 (즉, 새로운 &lt;code&gt;ngsw.json&lt;/code&gt; 을 사용할 수있는 경우) 이 상태에서 복구를 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="a1cb48e9e80d5917b4293700e4d3d6a5b174757b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Element&lt;/code&gt;: Host element of the target.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; : 대상의 호스트 요소입니다.</target>
        </trans-unit>
        <trans-unit id="969d8f4800f19339856dba68d8883f2ff3116eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementInjector&lt;/code&gt; hierarchy&amp;mdash;created implicitly at each DOM element. An &lt;code&gt;ElementInjector&lt;/code&gt; is empty by default unless you configure it in the &lt;code&gt;providers&lt;/code&gt; property on &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ElementInjector&lt;/code&gt; 계층 구조 &amp;mdash; 각 DOM 요소에서 암시 적으로 생성됩니다. &lt;code&gt;ElementInjector&lt;/code&gt; 은 당신이 그것을 구성하지 않는 한 기본적으로 비어 &lt;code&gt;providers&lt;/code&gt; 에 재산 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 또는 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6be404c81a25c135b343b10f14e939f833b324e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementInjector&lt;/code&gt; use case examples</source>
          <target state="translated">&lt;code&gt;ElementInjector&lt;/code&gt; 사용 사례</target>
        </trans-unit>
        <trans-unit id="6203f1b667a8122fbd9fff950334a69b188a46fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Emulated&lt;/code&gt; (default): Emulate native scoping of styles.</source>
          <target state="translated">&lt;code&gt;Emulated&lt;/code&gt; (기본값) : 스타일의 기본 범위를 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="5246c86ef4d9ce1194cd9e6fd08997f1d88716ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Emulated&lt;/code&gt; view encapsulation (the default) emulates the behavior of shadow DOM by preprocessing (and renaming) the CSS code to effectively scope the CSS to the component's view. For details, see &lt;a href=&quot;view-encapsulation#inspect-generated-css&quot;&gt;Inspecting generated CSS&lt;/a&gt; below.</source>
          <target state="translated">&lt;code&gt;Emulated&lt;/code&gt; 뷰 캡슐화 (기본값)는 CSS 코드를 전처리 (및 이름 변경)하여 CSS를 구성 요소의 뷰로 효과적으로 범위를 지정하여 Shadow DOM의 동작을 에뮬레이션합니다. 자세한 내용은 아래 &lt;a href=&quot;view-encapsulation#inspect-generated-css&quot;&gt;생성 된 CSS 검사를&lt;/a&gt; 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="b8c26ee637359e8234226dcd054fa37fd3d6f5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;End-to-End&lt;/code&gt; (E2E) test file names</source>
          <target state="translated">&lt;code&gt;End-to-End&lt;/code&gt; E2E ( End-to-End ) 테스트 파일 이름</target>
        </trans-unit>
        <trans-unit id="f5210eb36f9f0d1278290913b90cfa12a20b9288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; When strict checks fail, such as setting the value of a control that doesn't exist or if you exclude a value of a control that does exist.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 존재하지 않는 컨트롤의 값을 설정하거나 존재하는 컨트롤의 값을 제외하는 경우와 같이 엄격한 검사가 실패하는 경우.</target>
        </trans-unit>
        <trans-unit id="01ea77840d2cb4d4d723a6d08fc63c06db3dae7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlyingHeroesImpurePipe&lt;/code&gt; is a good candidate for an impure pipe because the &lt;code&gt;transform&lt;/code&gt; function is trivial and fast:</source>
          <target state="translated">&lt;code&gt;FlyingHeroesImpurePipe&lt;/code&gt; 는 &lt;code&gt;transform&lt;/code&gt; 기능이 간단하고 빠르기 때문에 불순한 파이프에 적합한 후보입니다 .</target>
        </trans-unit>
        <trans-unit id="6ed7b8029daf2443d2ce4d0190704ced388f68af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Folders-by-feature&lt;/code&gt; structure</source>
          <target state="translated">&lt;code&gt;Folders-by-feature&lt;/code&gt; 구조</target>
        </trans-unit>
        <trans-unit id="c604411866d36053a4b8f378905344a35e7e038d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt;: A callback function that can be used to remove the handler.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; : 핸들러를 제거하는 데 사용할 수있는 콜백 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c1009d43e61fd029bb71e8be43497826cc67527a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt;: If you pass a function, it is expected to return a promise resolving to an &lt;code&gt;&lt;a href=&quot;../../core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt;. The function is called with an array of extra &lt;a href=&quot;../../core/staticprovider&quot;&gt;Providers&lt;/a&gt; that are expected to be available from the returned &lt;code&gt;&lt;a href=&quot;../../core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; : 함수 를 전달하면 &lt;code&gt;&lt;a href=&quot;../../core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt; 로 해결되는 약속을 반환해야합니다 . 이 함수는 반환 된 &lt;code&gt;&lt;a href=&quot;../../core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 에서 사용할 수있는 추가 &lt;a href=&quot;../../core/staticprovider&quot;&gt;공급자&lt;/a&gt; 배열로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0625b821e5e44330b516d6c1d62494c6f01dded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt;: a &lt;a href=&quot;https://docs.angularjs.org/guide/di&quot;&gt;factory function&lt;/a&gt; that can be used to register the service on an AngularJS module.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; : AngularJS 모듈에 서비스를 등록하는 데 사용할 수 있는 &lt;a href=&quot;https://docs.angularjs.org/guide/di&quot;&gt;팩토리 기능&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bbedf7badbdcec3910b749550b6bcdec5f47ba3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLMetaElement | null&lt;/code&gt;: The existing element with the same attributes and values if found, the new element if no match is found, or &lt;code&gt;null&lt;/code&gt; if the tag parameter is not defined.</source>
          <target state="translated">&lt;code&gt;HTMLMetaElement | null&lt;/code&gt; : 동일한 속성과 값이있는 기존 요소, 일치하는 항목이 없으면 새 요소 , 태그 매개 변수가 정의되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4c1b54c934dad0a0c1fc85761528c7e493997561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLMetaElement | null&lt;/code&gt;: The matching element, if any.</source>
          <target state="translated">&lt;code&gt;HTMLMetaElement | null&lt;/code&gt; : 일치하는 요소 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="18683da59e0e63840af99c0b28ea9f72d043412d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLMetaElement | null&lt;/code&gt;: The modified element.</source>
          <target state="translated">&lt;code&gt;HTMLMetaElement | null&lt;/code&gt; : 수정 된 요소입니다.</target>
        </trans-unit>
        <trans-unit id="c03ecdc49cf3eee195b1b8387ca72831ff5fd7c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLMetaElement[]&lt;/code&gt;: The matching elements if found, or the new elements.</source>
          <target state="translated">&lt;code&gt;HTMLMetaElement[]&lt;/code&gt; : 발견 된 경우 일치하는 요소 또는 새 요소.</target>
        </trans-unit>
        <trans-unit id="b73f8fca0658cff19830e4436b82d93e3fb01ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLMetaElement[]&lt;/code&gt;: The matching elements, if any.</source>
          <target state="translated">&lt;code&gt;HTMLMetaElement[]&lt;/code&gt; : 일치하는 요소 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="fefd001fe93a832c4d5543c80ac5ca90f8ee72c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HammerInstance&lt;/code&gt;: A HammerJS event-manager object.</source>
          <target state="translated">&lt;code&gt;HammerInstance&lt;/code&gt; : HammerJS 이벤트 관리자 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4e6c0e5dc4b9d7e1b0f50b835c563078c202c154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroChildComponent&lt;/code&gt; has two &lt;strong&gt;&lt;em&gt;input properties&lt;/em&gt;&lt;/strong&gt;, typically adorned with &lt;a href=&quot;inputs-outputs#input&quot;&gt;@Input() decorator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HeroChildComponent&lt;/code&gt; 에는 일반적으로 &lt;a href=&quot;inputs-outputs#input&quot;&gt;@Input () 데코레이터&lt;/a&gt; 로 장식 된 두 개의 &lt;strong&gt;&lt;em&gt;입력 속성이&lt;/em&gt;&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a179323fa2040d5e147b809e26a61ece9dff9ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroChildComponent&lt;/code&gt; has two &lt;strong&gt;&lt;em&gt;input properties&lt;/em&gt;&lt;/strong&gt;, typically adorned with &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;@Input decorations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HeroChildComponent&lt;/code&gt; 에는 일반적으로 &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;@Input 데코레이션&lt;/a&gt; 으로 장식 된 두 가지 &lt;strong&gt;&lt;em&gt;입력 속성이&lt;/em&gt;&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="c62061c1403d1569b2c00da036f7adf3c3df9d0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService.getHeroes()&lt;/code&gt; must have an &lt;em&gt;asynchronous signature&lt;/em&gt; of some kind.</source>
          <target state="translated">&lt;code&gt;HeroService.getHeroes()&lt;/code&gt; 에는 어떤 종류 의 &lt;em&gt;비동기 서명&lt;/em&gt; 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="90e897b2c34a092b65e416b1b8245b24762c27ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService&lt;/code&gt; must be provided in some parent injector. The code in &lt;code&gt;HeroListComponent&lt;/code&gt; doesn't depend on where &lt;code&gt;HeroService&lt;/code&gt; comes from. If you decided to provide &lt;code&gt;HeroService&lt;/code&gt; in &lt;code&gt;AppModule&lt;/code&gt;, &lt;code&gt;HeroListComponent&lt;/code&gt; wouldn't change.</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; 일부 부모 인젝터에서 HeroService 를 제공해야합니다. 의 코드 &lt;code&gt;HeroListComponent&lt;/code&gt; 은 위치에 의존하지 않는 &lt;code&gt;HeroService&lt;/code&gt; 가 에서 온다. 당신이 제공하기로 결정하는 경우 &lt;code&gt;HeroService&lt;/code&gt; 을 에 &lt;code&gt;AppModule&lt;/code&gt; , &lt;code&gt;HeroListComponent&lt;/code&gt; 은 변하지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="b535dc533abff5678ced63783c9b134f1ce7db75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService&lt;/code&gt;, &lt;code&gt;InMemoryDataService&lt;/code&gt;, &lt;code&gt;AppModule&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; , &lt;code&gt;InMemoryDataService&lt;/code&gt; , &lt;code&gt;AppModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ea47dcbe833629e5397bb6e79fc3a5e0f44491c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService&lt;/code&gt;&lt;em&gt;requires&lt;/em&gt; a logger, but what if it could get by without one?</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; 는 로거 &lt;em&gt;가 필요&lt;/em&gt; 하지만, 로거가 없으면 로거 &lt;em&gt;가 필요&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ab63d7f0034a805503d5d68aaa2687d5e3a1daac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroesComponent&lt;/code&gt; doesn't do that anymore. Now the router creates the &lt;code&gt;HeroDetailComponent&lt;/code&gt; in response to a URL such as &lt;code&gt;~/detail/11&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 는 더 이상 그렇게하지 않습니다. 이제 라우터 는 &lt;code&gt;~/detail/11&lt;/code&gt; 과 같은 URL에 대한 응답으로 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ab66504cd46291da78576c065b890089f590aa64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroesComponent&lt;/code&gt; hero links</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 영웅 링크</target>
        </trans-unit>
        <trans-unit id="53af9e5c1693268db6d88a3318949b66a05baae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroesComponent&lt;/code&gt; is the top-level heroes component. Its only purpose is to display &lt;code&gt;HeroListComponent&lt;/code&gt;, which displays a list of hero names.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 는 최상위 영웅 구성 요소입니다. 히어로 이름 목록을 표시하는 &lt;code&gt;HeroListComponent&lt;/code&gt; 를 표시하는 것이 유일한 목적입니다 .</target>
        </trans-unit>
        <trans-unit id="261958e227a2b3a42d63b0e3bc175e66fe3de23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HostListener&lt;/code&gt;/&lt;code&gt;HostBinding&lt;/code&gt; decorators versus &lt;code&gt;host&lt;/code&gt; metadata</source>
          <target state="translated">&lt;code&gt;HostListener&lt;/code&gt; / &lt;code&gt;HostBinding&lt;/code&gt; 데코레이터 및 &lt;code&gt;host&lt;/code&gt; 메타 데이터</target>
        </trans-unit>
        <trans-unit id="c1dc914145a28379c9b74e9dc5b2786d662ba84e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InjectableDefType&lt;/code&gt;s contain their own Dependency Injection metadata and are usable in an &lt;code&gt;InjectorDef&lt;/code&gt;-based `StaticInjector.</source>
          <target state="translated">&lt;code&gt;InjectableDefType&lt;/code&gt; 은 자체 의존성 주입 메타 데이터를 포함하며 &lt;code&gt;InjectorDef&lt;/code&gt; 기반`StaticInjector 에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef89f86962cf497ad648c99c0c26375a5a169479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InjectorDefTypes&lt;/code&gt; can be used to configure a &lt;code&gt;StaticInjector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InjectorDefTypes&lt;/code&gt; 를 사용하여 &lt;code&gt;StaticInjector&lt;/code&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6c95732f0b8d340b62d752cc04461e168c46e98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Key&lt;/code&gt; is used internally by &lt;a href=&quot;reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt; because its system-wide unique &lt;code&gt;id&lt;/code&gt; allows the injector to store created objects in a more efficient way.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; 는 시스템 전체의 고유 &lt;code&gt;id&lt;/code&gt; 통해 인젝터가 작성된 오브젝트를보다 효율적인 방식으로 저장할 수 있으므로 &lt;a href=&quot;reflectiveinjector&quot;&gt; &lt;code&gt;ReflectiveInjector&lt;/code&gt; 에서&lt;/a&gt; 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6b0991df15787d4b31976801d02f5eb8a192cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Key&lt;/code&gt; should not be created directly. &lt;a href=&quot;reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt; creates keys automatically when resolving providers.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; 는 직접 작성해서는 안됩니다. &lt;a href=&quot;reflectiveinjector&quot;&gt; &lt;code&gt;ReflectiveInjector&lt;/code&gt; 는&lt;/a&gt; 공급자를 확인할 때 자동으로 키를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="360cb8a3889c180392f6d03f776e73063dcf78cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LiveAnnouncer&lt;/code&gt; is used to announce messages for screen-reader users using an &lt;code&gt;aria-live&lt;/code&gt; region. See the W3C documentation for more information on &lt;a href=&quot;https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live&quot;&gt;aria-live regions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;LiveAnnouncer&lt;/code&gt; 는 &lt;code&gt;aria-live&lt;/code&gt; 지역을 사용하는 스크린 리더 사용자에게 메시지를 알리는 데 사용됩니다 . &lt;a href=&quot;https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live&quot;&gt;aria-live region&lt;/a&gt; 에 대한 자세한 내용은 W3C 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ba66fb7bfeacbaf1ffc6ea4bd9d06ebd5b766e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MasterService&lt;/code&gt; delegates its only method, &lt;code&gt;getValue&lt;/code&gt;, to the injected &lt;code&gt;ValueService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MasterService&lt;/code&gt; 는 유일한 메소드 &lt;code&gt;getValue&lt;/code&gt; 를 삽입 된 &lt;code&gt;ValueService&lt;/code&gt; 에 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="f1e085a6383dff2cd96fbc420f5c5f9b9cc86330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinimalLogger&lt;/code&gt; is an abstract class.</source>
          <target state="translated">&lt;code&gt;MinimalLogger&lt;/code&gt; 는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="15aef367fdeb7e1459aa1e009069302aa5205c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleInjector&lt;/code&gt; hierarchy&amp;mdash;configure a &lt;code&gt;ModuleInjector&lt;/code&gt; in this hierarchy using an &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; annotation.</source>
          <target state="translated">&lt;code&gt;ModuleInjector&lt;/code&gt; 계층 &amp;mdash; &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt; () 또는 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 주석을 사용하여이 계층에서 &lt;code&gt;ModuleInjector&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f75f5974124d7263318f5bcdc142c54368877ed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleInjector&lt;/code&gt; is configured by the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule#imports&quot;&gt;NgModule.imports&lt;/a&gt;&lt;/code&gt; property. &lt;code&gt;ModuleInjector&lt;/code&gt; is a flattening of all of the providers arrays which can be reached by following the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule#imports&quot;&gt;NgModule.imports&lt;/a&gt;&lt;/code&gt; recursively.</source>
          <target state="translated">&lt;code&gt;ModuleInjector&lt;/code&gt; 는 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule#imports&quot;&gt;NgModule.imports&lt;/a&gt;&lt;/code&gt; 특성으로 구성됩니다 . &lt;code&gt;ModuleInjector&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule#imports&quot;&gt;NgModule.imports&lt;/a&gt;&lt;/code&gt; 를 재귀 적으로 따라 가면 도달 할 수있는 모든 공급자 배열의 병합입니다 .</target>
        </trans-unit>
        <trans-unit id="1f96f976e8d7a5c24766b6b7e50deb746e168466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NORMAL&lt;/code&gt; indicates that the service worker is operating normally and is not in a degraded state.</source>
          <target state="translated">&lt;code&gt;NORMAL&lt;/code&gt; 은 서비스 워커가 정상적으로 작동하고 성능 저하 상태가 아님을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1a553c8c1e0f1256bb5c683c5f533d516baaab69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Native&lt;/code&gt;: Use the native encapsulation mechanism of the renderer.</source>
          <target state="translated">&lt;code&gt;Native&lt;/code&gt; : 렌더러의 기본 캡슐화 메커니즘을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f3a5e3f4930ea78cf244e968e47fe46c580ff22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgFor&lt;/code&gt; is a repeater directive&amp;mdash;a way to present a list of items. You define a block of HTML that defines how a single item should be displayed and then you tell Angular to use that block as a template for rendering each item in the list. The text assigned to &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is the instruction that guides the repeater process.</source>
          <target state="translated">&lt;code&gt;NgFor&lt;/code&gt; 는 항목 목록을 표시하는 방법 인 리피터 지시문입니다. 단일 항목을 표시하는 방법을 정의하는 HTML 블록을 정의한 다음 목록에서 각 항목을 렌더링하기위한 템플릿으로 해당 블록을 사용하도록 Angular에 지시합니다. &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 에 지정된 텍스트 는 리피터 프로세스를 안내하는 지시 사항입니다.</target>
        </trans-unit>
        <trans-unit id="5b636bb2ec20c55d61d572ce7293a10e0281fa0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgFor&lt;/code&gt; is implemented by the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; directive. Read more about the other &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; context values such as &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#even&quot;&gt;even&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf API reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NgFor&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; 지시어에 의해 구현됩니다 . &lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf API 참조&lt;/a&gt; 에서 &lt;code&gt;last&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#even&quot;&gt;even&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; 와 같은 다른 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; 컨텍스트 값 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="0d984f1f28ae62073830dd6c4483de7c9fdc94d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgFor&lt;/code&gt; is implemented by the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; directive. Read more about the other &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; context values such as &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;even&lt;/code&gt;, and &lt;code&gt;odd&lt;/code&gt; in the &lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf API reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NgFor&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; 지시문에 의해 구현됩니다 . &lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf API 참조&lt;/a&gt; 에서 &lt;code&gt;last&lt;/code&gt; , &lt;code&gt;even&lt;/code&gt; 및 &lt;code&gt;odd&lt;/code&gt; 와 같은 다른 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; 컨텍스트 값 에 대해 자세히 알아보세요 .</target>
        </trans-unit>
        <trans-unit id="712ff9f1b588beb4ed659a88fa0afe8b0c0ceb4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; means that Angular does no view encapsulation. Angular adds the CSS to the global styles. The scoping rules, isolations, and protections discussed earlier don't apply. This is essentially the same as pasting the component's styles into the HTML.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 은 Angular가 뷰 캡슐화를 수행하지 않음을 의미합니다. Angular는 CSS를 전역 스타일에 추가합니다. 앞에서 설명한 범위 지정 규칙, 격리 및 보호는 적용되지 않습니다. 이것은 본질적으로 컴포넌트의 스타일을 HTML에 붙여 넣는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bae81bfa8c96ded1470b7f407938ce4b208c7314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;: Do not provide any template or style encapsulation.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; : 템플릿 또는 스타일 캡슐화를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="165107a4089c1a1b040b3e9b60b6c485079e3994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; - keys are CSS classes that get added when the expression given in the value evaluates to a truthy value, otherwise they are removed.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; -키는 값에 지정된 표현식이 정확한 값으로 평가 될 때 추가되는 CSS 클래스이며, 그렇지 않으면 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="c4cb2a72d35a10e13def1872d86a55f2195ffb95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;ArrayBuffer&lt;/code&gt; 인 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bf4d12dc292b8039d5bc07650d478c202bc2bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; :는 &lt;code&gt;Observable&lt;/code&gt; 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 이 AS 응답 본체와 요청, &lt;code&gt;ArrayBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d982f70e2ecc6519d17bafd926521958c4a1bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;ArrayBuffer&lt;/code&gt; 인 요청에 대한 모든 &lt;code&gt;HTTPevents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bc34288f847500d445f0148d634cdce80beec7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of tall &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; :는 &lt;code&gt;Observable&lt;/code&gt; 높이의 &lt;code&gt;HttpEvents&lt;/code&gt; 이 AS 응답 본체와 요청, &lt;code&gt;ArrayBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deec97c496233f58a2e396c1012255c3b0dc4bca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as an array of &lt;code&gt;HTTPEvents&lt;/code&gt; for the request.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; :는 &lt;code&gt;Observable&lt;/code&gt; 의 배열로서 반응 체와 반응, &lt;code&gt;HTTPEvents&lt;/code&gt; 요청에 대한.</target>
        </trans-unit>
        <trans-unit id="b1a247af8c0467a2b0a416f7835d655c5d6906e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;Blob&lt;/code&gt; 인 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="2053a17b08e96e7c946365f8963439502ee66194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;Blob&lt;/code&gt; 인 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="7528aeb421a26c5f8a0a2d88de375b21c85d9bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;Blob&lt;/code&gt; 인 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="49b8d6aee32d2407704b46c3751b9192b495d43d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with the response body as &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;Blob&lt;/code&gt; 인 요청에 대한 모든 &lt;code&gt;HTTPevents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d774a577e8e69c3ad503de62f0167b491dd3a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Blob&lt;/code&gt; 유형의 응답 본문을 사용하여 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="3d65bbaf2a5d12f559144c5aedca5309b59a2946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문을 &lt;code&gt;Blob&lt;/code&gt; 으로하여 응답을 &lt;code&gt;Observable&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81946f7e044b9fc7811fe16e543d41477818b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="61375af1e7e153a72e45302d68adc01e2eddba03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1e57133f6a2bae86c18553cb76202dcae9af70b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문을 가진 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c22f76194108fea4611d285cb6bb858fe30cfd72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HTTPevents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="10516d7e59757763c8e525f33eae89f78b695850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HttpEvents&lt;/code&gt; for the request with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="999865ddc055a67532cd5a43f27381e220eb47c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문을 사용하여 응답을 &lt;code&gt;Observable&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac3c8940e935968513a065c1d2fa226686d4cfea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body of type &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;R&lt;/code&gt; 유형의 응답 본문을 가진 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="78ad5923035843dba2df1789cda511b211fe5340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a stream of &lt;code&gt;HTTPEvents&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt; :는 &lt;code&gt;Observable&lt;/code&gt; 의 스트림으로서 반응 체와 반응의 &lt;code&gt;HTTPEvents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97295d31395e923948cb6ce35b45ba5227b50a05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="aa3a17932ce78aadbc92fd72c3b79d8f209af272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request , with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문을 가진 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c4810028c7771bfe4049b2062839791c3e638f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c1f1b3a29133d22cd886f9798b4d489dd725c570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문을 가진 요청에 대한 모든 &lt;code&gt;HTTPevents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff15e6463dc74bc0cc8a08905e324ce7a8f45cfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="31567e918b3934136935c1abbc25190a3ce1e12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 응답을 &lt;code&gt;Observable&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e9480e7909e0b8bb2434f62f343f684a811826f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문을 사용하여 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b2a90cd9585416b77751ede1dca889f386ed36e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt;: An observable of the event stream.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt; : 이벤트 스트림을 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="340ee407e8b98ce7900c6878cd0b94e02a8705d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt;: An observable of the response events.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt; : 응답 이벤트를 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de9d45f7a1e9a6f604b8db530e4d363f97fcb63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 이며 문자열 유형의 응답 본문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad861968b282d83afe21cb084251f5287d6d82d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the reques, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 문자열 유형의 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="32c241fc869fd2d5deaae60d5104e08f3597a049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청 유형에 대한 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HttpEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="aa79542140f01a77e7b3c90d678c0e3b136f7434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all HttpEvents for the request, with a response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청 유형에 대한 응답 본문이있는 요청에 대한 모든 HttpEvents 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="36d27c2a28893ad0184b48943830aad57de18fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all HttpEvents for the request, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청에 대한 모든 HttpEvents 의 &lt;code&gt;Observable&lt;/code&gt; 이며 문자열 유형의 응답 본문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="06fbd05a596b12679e56bbd8651d63118a281b4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 문자열 유형의 응답 본문을 사용하여 요청에 대한 모든 &lt;code&gt;HTTPEvents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="174cb7df8e420614e3c330510298f004be0e4dc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt;for the request, with a response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청 유형에 대한 응답 본문이있는 요청에 대한 모든 &lt;code&gt;HTTPevents&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="bbfc5dfa9135a6d079de1dd356abcc88d1a0dceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 응답 유형이 string 인 응답 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d789a2edcf2b14334d98440997f9d66063060339" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;ArrayBuffer&lt;/code&gt; 인 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ab4d3667d17b7d5ca532c8eb85367935172d67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;ArrayBuffer&lt;/code&gt; 인 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f84f434f99dc2fd359d5b14879fb2bb82db189f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; :는 &lt;code&gt;Observable&lt;/code&gt; 의 &lt;code&gt;HTTPResponse&lt;/code&gt; AS를 응답 본체와, &lt;code&gt;ArrayBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9222f9a6e6d165b23d3ce1564c2829fa056cbf02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;ArrayBuffer&lt;/code&gt; 인 전체 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57ed3ecf1b0fa0c84a83f8c762fff960daead3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;Blob&lt;/code&gt; 인 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="2cb604dbca87712299b220c8a64f1fd78fd05eae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;Blob&lt;/code&gt; 인 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="634080094c6a9cb53cf0753d69f0b27b87dee980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body as a blob.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : 응답 본문이 blob 인 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="3cc10c704be17305266d227a38050c84d4154229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Blob&lt;/code&gt; 유형의 응답 본문이 있는 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a36a18309cffa5df67d86aba55827db02d1d079a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="82029bbdc249ee1c6bd0da8f4868d4c154560c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이있는 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="06b7b31694b12047020ff85d5e5f4cf8b25f4d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of type 'Object`.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : 요청 유형이 'Object'인 응답 본문이있는 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="f176cae387098701caa2db811ed22c28aad6b8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문을 가진 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d82c556e00c0f026f377013b87070364553ab2d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이있는 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="64b94d5fb2e554705f8d80378f4009d7daa2c78c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이 있는 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1d1400880225a0e92606ab04cbcbab83d0b764ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이 있는 전체 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="e212dc6f1b0d169c286e89bb737e5671333e24ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이 있는 전체 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="e16bba95e94d8fd1b0e083cd7b4497fa9456b747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt; : 응답 유형이 &lt;code&gt;R&lt;/code&gt; 인 전체 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ff21d981b9a2d6ef4774977062973441ef92680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the given type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 주어진 유형의 응답 본문을 가진 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93b1cd962b51da06c058a99f2a2eeb76ccaa617c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ecbf330ee98845ae4a51dbfc10754611a91444fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a responmse body of the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a48dffe13a8fb09c2adba5a7606ac925a56ac92e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문을 가진 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5130b18aaebbd0ce194feeb4078e67e5cf526d89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5b65cb7ea5bc5ef4470cb29dc873fa8718aebcd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문을 가진 요청 에 대한 전체 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9bc9beb23b805b2f2d736a5b78e5a1f6b4deec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청 유형 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 이며 문자열 유형의 응답 본문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e917e6ab1c23bb852553c763bdb35fc4da68808e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 이며 문자열 유형의 응답 본문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d05a1a8f3402a58292b15bb9dcf80f97f71a99c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 응답 유형이 string 인 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="967b5b88cbece296352fa9565f0cec35b8885330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 요청 유형에 대한 응답 본문이 문자열 인 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="38e692ab46cb6b07072a3fc70424c1dd812223fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the HTTP response, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 문자열 형식의 응답 본문이있는 HTTP 응답 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ebd9188a8c08920b2c113a3162e879d9e0b9b5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt; : 전체 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 이며 문자열 유형의 응답 본문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f592cae7c8362cbb66f2bd0bf6a2a8d58ff5df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;ArrayBuffer&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;ArrayBuffer&amp;gt;&lt;/code&gt; : 응답 본문을 &lt;code&gt;ArrayBuffer&lt;/code&gt; 로 &lt;code&gt;Observable&lt;/code&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a41a3174678dfc0b51e5ee3b1919490b59c8bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;ArrayBuffer&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;ArrayBuffer&amp;gt;&lt;/code&gt; : 응답 본문을 &lt;code&gt;ArrayBuffer&lt;/code&gt; 로 사용하여 응답을 &lt;code&gt;Observable&lt;/code&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="48f2740abd224046529e08b3f5d81cd0dcb2a074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt; : 응답 본문을 &lt;code&gt;Blob&lt;/code&gt; 으로 &lt;code&gt;Observable&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8daee6e3cb9b7ddd0a8f58b3920b9e05ae05824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt; : 응답 본문을 &lt;code&gt;Blob&lt;/code&gt; 으로하여 응답을 &lt;code&gt;Observable&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e1386a706c832fb9aa5907869352f9d63ceb798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt; : 응답 본문이 &lt;code&gt;Blob&lt;/code&gt; 인 응답 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="7fb4e8b9d50f15ef117ea42fbca3bd5dd0239b57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문이 있는 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c48317b4d0851634c136553f5835254d3c3254f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response as a JSON object.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt; : JSON 객체로 응답 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d97a761230146184aca434651a8573a2be6bb646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response body as a JSON object.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt; : JSON 객체로 응답 본문을 &lt;code&gt;Observable&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dd77146f2ac45c42b7a71c267746986cf6b3d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response object, with response body as an object.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt; : 응답 본문을 객체로 사용하여 응답 객체를 &lt;code&gt;Observable&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6285c5a18345b8a2ad75af645e0e18ed0d2f1a26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a JSON object.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt; : 응답 본문을 JSON 객체로 사용하여 응답을 &lt;code&gt;Observable&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="a519e247a743792c90bf9a09f1cbc83380a0b35e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt; : &lt;code&gt;Object&lt;/code&gt; 유형의 응답 본문을 사용하여 응답을 &lt;code&gt;Observable&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="daec76bfa6bbd9cb42119b6e16418798de623b59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;R&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;R&amp;gt;&lt;/code&gt; : 응답 유형이 &lt;code&gt;R&lt;/code&gt; 인 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="cc43e93ed325c99c62e971bf5b32de94417b0d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the given type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 요청 에 대한 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 이며 지정된 유형의 응답 본문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="193d64efc25c5d9f269891de8162966c19ad35d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 요청에 대한 응답 본문이있는 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c32732d45dc1ae6092dd40ac114c1f7312e45f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of the given type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 요청 에 대한 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 이며 지정된 유형의 응답 본문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e4c959cfa4556bc05f0a4d95a098a52c56fb86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with a response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문을 가진 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="4bbcc3a28dfbad56ae2f8aade370af3a3c0dcce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with a response body of the given type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 지정된 유형의 응답 본문이있는 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="3125734b7c1affe1a7cdecf61c88f20587565207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문 이있는 &lt;code&gt;HTTPResponse&lt;/code&gt; 의 &lt;code&gt;Observable&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c9efa6c500dd7fcd1b1d599afc1d812a4070dd7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 요청 된 유형 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69c784cff7b4c5ea3a12916047fe615f659393ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response object, with response body in the requested type.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt; : 요청 된 유형의 응답 본문이있는 응답 객체 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2b63f3c217f95624f492c78f633ae0214eb8a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;any&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the reuested response, wuth body of type &lt;code&gt;any&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;any&amp;gt;&lt;/code&gt; :는 &lt;code&gt;Observable&lt;/code&gt; reuested 응답의 유형 wuth 본체 &lt;code&gt;any&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a917e9237805c222d203d3fbd1e0cea19ef29194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with a response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt; : 문자열 유형의 응답 본문이있는 응답 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="771f12a31343008ffc25baa1c0a4c4864b863e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type string.</source>
          <target state="translated">&lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt; : 문자열 유형의 응답 본문이있는 응답 의 &lt;code&gt;Observable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6e978afd48eab72d129bdff12c88dacb8b548f75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable.subscribe()&lt;/code&gt; is the critical difference.</source>
          <target state="translated">&lt;code&gt;Observable.subscribe()&lt;/code&gt; 는 중요한 차이점입니다.</target>
        </trans-unit>
        <trans-unit id="320b050eb7ecbbcdf33038ae4eff7617ebdf4418" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&lt;/code&gt; is one of the key classes in the &lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;RxJS library&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Observable&lt;/code&gt; 은 &lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;RxJS 라이브러리&lt;/a&gt; 의 핵심 클래스 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="886e56966287010cbc5ff52e34ce73237aea864f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ProfileEditor&lt;/code&gt; allows you to manage the form control instances for the &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; controls within the form group instance.</source>
          <target state="translated">&lt;code&gt;ProfileEditor&lt;/code&gt; 를 사용하면 양식 그룹 인스턴스 내의 &lt;code&gt;firstName&lt;/code&gt; 및 &lt;code&gt;lastName&lt;/code&gt; 제어에 대한 양식 제어 인스턴스를 관리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="55ea9a44e25164ca7502f6a28f9a0aac1588f957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&amp;gt; | Observable&amp;lt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&amp;gt;&lt;/code&gt;: A promise or observable that resolves a map of validation errors if validation fails, otherwise null.</source>
          <target state="translated">&lt;code&gt;Promise&amp;lt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&amp;gt; | Observable&amp;lt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&amp;gt;&lt;/code&gt; : 유효성 검사에 실패하면 유효성 검사 오류 맵을 해결하는 약속 또는 관찰 가능, 그렇지 않으면 null입니다.</target>
        </trans-unit>
        <trans-unit id="d8d326e1960b8ea578bee65725f1adf262b501fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;PushSubscription&amp;gt;&lt;/code&gt;: A Promise that resolves to the new subscription object.</source>
          <target state="translated">&lt;code&gt;Promise&amp;lt;PushSubscription&amp;gt;&lt;/code&gt; : 새 구독 개체로 확인되는 약속입니다.</target>
        </trans-unit>
        <trans-unit id="ad7e2ec990d825955192d30186738c9317d4dd25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;any&amp;gt;&lt;/code&gt;: The asynchronous result of the developer-defined function.</source>
          <target state="translated">&lt;code&gt;Promise&amp;lt;any&amp;gt;&lt;/code&gt; : 개발자 정의 함수의 비동기 결과.</target>
        </trans-unit>
        <trans-unit id="5ffe110e7d577c9b41aa63c3e48bbca812cfc111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;: A Promise that resolves to 'true' when navigation succeeds, to 'false' when navigation fails, or is rejected on error.</source>
          <target state="translated">&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt; : 탐색에 성공하면 'true'로, 탐색에 실패하면 'false'로, 또는 오류에 의해 거부되는 약속.</target>
        </trans-unit>
        <trans-unit id="6a8ce8e644a31136f2fe030014a8046e569d204f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;: A Promise that resolves to &lt;code&gt;true&lt;/code&gt; when navigation succeeds, to &lt;code&gt;false&lt;/code&gt; when navigation fails, or is rejected on error.</source>
          <target state="translated">&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt; : 탐색이 성공하면 &lt;code&gt;true&lt;/code&gt; 로 , 탐색이 실패하면 &lt;code&gt;false&lt;/code&gt; 로 , 오류 시 거부 되는 Promise입니다 .</target>
        </trans-unit>
        <trans-unit id="2ea029792a17001a25a012ff80cf75f314c256b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;: A Promise that is resolved when the operation succeeds, or is rejected if there is no active subscription or the unsubscribe operation fails.</source>
          <target state="translated">&lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt; : 작업이 성공할 때 해결되거나 활성 구독이 없거나 구독 취소 작업이 실패하면 거부되는 약속입니다.</target>
        </trans-unit>
        <trans-unit id="22757c423c0e67a167dd88240b7589b07db58223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Readonly&amp;lt;[string, string]&amp;gt;&lt;/code&gt;: An array of localized era strings. For example, &lt;code&gt;[AD, BC]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Readonly&amp;lt;[string, string]&amp;gt;&lt;/code&gt; : 지역화 된 시대 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[AD, BC]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ac8c0a9894537c38a21ed3037ad0c8e8a4f82f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Readonly&amp;lt;[string, string]&amp;gt;&lt;/code&gt;: An array of localized period strings. For example, &lt;code&gt;[AM, PM]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Readonly&amp;lt;[string, string]&amp;gt;&lt;/code&gt; : 지역화 된 기간 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[AM, PM]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="175a03abf2f04bbab0d2e421a81839d9675d324e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReadonlyArray&amp;lt;string&amp;gt;&lt;/code&gt;: An array of localized name strings. For example, &lt;code&gt;[January, February, ...]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ReadonlyArray&amp;lt;string&amp;gt;&lt;/code&gt; : 지역화 된 이름 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[January, February, ...]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="4d455d1142f838b79e4a82261bb1da1a5054a1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReadonlyArray&amp;lt;string&amp;gt;&lt;/code&gt;: An array of localized name strings. For example,&lt;code&gt;[Sunday, Monday, ... Saturday]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ReadonlyArray&amp;lt;string&amp;gt;&lt;/code&gt; : 지역화 된 이름 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[Sunday, Monday, ... Saturday]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="75c95f1a0c1accf567b891f10ecb2e5e3fbdd2f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt; objects created with the &lt;code&gt;g&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; flags that are passed into &lt;code&gt;Validators.pattern&lt;/code&gt; can produce different results on the same input when validations are run consecutively. This is due to how the behavior of &lt;code&gt;RegExp.prototype.test&lt;/code&gt; is specified in &lt;a href=&quot;https://tc39.es/ecma262/#sec-regexpbuiltinexec&quot;&gt;ECMA-262&lt;/a&gt; (&lt;code&gt;RegExp&lt;/code&gt; preserves the index of the last match when the global or sticky flag is used). Due to this behavior, it is recommended that when using &lt;code&gt;Validators.pattern&lt;/code&gt; you &lt;strong&gt;do not&lt;/strong&gt; pass in a &lt;code&gt;RegExp&lt;/code&gt; object with either the global or sticky flag enabled.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;Validators.pattern&lt;/code&gt; 에 전달되는 &lt;code&gt;g&lt;/code&gt; 또는 &lt;code&gt;y&lt;/code&gt; 플래그로 생성 된 RegExp 개체 는 유효성 검사가 연속적으로 실행될 때 동일한 입력에 대해 다른 결과를 생성 할 수 있습니다. 이는 &lt;code&gt;RegExp.prototype.test&lt;/code&gt; 의 동작이 &lt;a href=&quot;https://tc39.es/ecma262/#sec-regexpbuiltinexec&quot;&gt;ECMA-262&lt;/a&gt; 에서 지정되는 방식 때문입니다 ( &lt;code&gt;RegExp&lt;/code&gt; 는 전역 또는 고정 플래그가 사용될 때 마지막 일치의 인덱스를 유지합니다). 이 동작으로 인해 &lt;code&gt;Validators.pattern&lt;/code&gt; 을 사용할 때 전역 또는 고정 플래그가 활성화 된 &lt;code&gt;RegExp&lt;/code&gt; 개체를 전달 &lt;strong&gt;하지 않는&lt;/strong&gt; 것이 좋습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9af91523c636eb2447ac991b912925007841cf16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Resolve&lt;/code&gt;: pre-fetching component data</source>
          <target state="translated">&lt;code&gt;Resolve&lt;/code&gt; : 컴포넌트 데이터 프리 페치</target>
        </trans-unit>
        <trans-unit id="fa4b6598d8fe33d86f02fbc1bbf998deeb2acacd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAFE_MODE&lt;/code&gt;: the service worker cannot guarantee the safety of using cached data. Either an unexpected error occurred or all cached versions are invalid. All traffic will be served from the network, running as little service worker code as possible.</source>
          <target state="translated">&lt;code&gt;SAFE_MODE&lt;/code&gt; : 서비스 워커는 캐시 된 데이터 사용의 안전을 보장 할 수 없습니다. 예기치 않은 오류가 발생했거나 모든 캐시 된 버전이 유효하지 않습니다. 모든 트래픽은 가능한 적은 서비스 작업자 코드를 실행하여 네트워크에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="53f577944b0a9dfccb843de2ccdec4b6e6e49c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; implements the &lt;code&gt;&lt;a href=&quot;../api/router/preloadingstrategy&quot;&gt;PreloadingStrategy&lt;/a&gt;&lt;/code&gt;, which has one method, &lt;code&gt;preload()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; 는 &lt;code&gt;preload()&lt;/code&gt; 메서드 하나가 있는 &lt;code&gt;&lt;a href=&quot;../api/router/preloadingstrategy&quot;&gt;PreloadingStrategy&lt;/a&gt;&lt;/code&gt; 를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="965b3c71bb518c1981f8fe6c858a5e2140b7671c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; implements the &lt;code&gt;&lt;a href=&quot;../api/router/preloadingstrategy&quot;&gt;PreloadingStrategy&lt;/a&gt;&lt;/code&gt;, which has one method, &lt;code&gt;preload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; 는 &lt;code&gt;preload&lt;/code&gt; 메소드를 가지고 있는 &lt;code&gt;&lt;a href=&quot;../api/router/preloadingstrategy&quot;&gt;PreloadingStrategy&lt;/a&gt;&lt;/code&gt; 를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="128d1880da853d264a8192f9ea8c9b09cd89bd4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ShadowDom&lt;/code&gt; view encapsulation only works on browsers that have native support for shadow DOM (see &lt;a href=&quot;https://caniuse.com/#feat=shadowdomv1&quot;&gt;Shadow DOM v1&lt;/a&gt; on the &lt;a href=&quot;http://caniuse.com&quot;&gt;Can I use&lt;/a&gt; site). The support is still limited, which is why &lt;code&gt;Emulated&lt;/code&gt; view encapsulation is the default mode and recommended in most cases.</source>
          <target state="translated">&lt;code&gt;ShadowDom&lt;/code&gt; 보기 캡슐화는 &lt;a href=&quot;https://caniuse.com/#feat=shadowdomv1&quot;&gt;Shadow DOM&lt;/a&gt; 을 기본적으로 지원하는 브라우저에서만 작동합니다 ( &lt;a href=&quot;http://caniuse.com&quot;&gt;사용할 수있는&lt;/a&gt; 사이트 의 Shadow DOM v1 참조 ). 지원은 여전히 ​​제한적이므로 &lt;code&gt;Emulated&lt;/code&gt; 뷰 캡슐화가 기본 모드이며 대부분의 경우 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="4628b5b2936173d1db2ec3cdf34c291634684521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ShadowDom&lt;/code&gt; view encapsulation uses the browser's native shadow DOM implementation (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM&quot;&gt;Shadow DOM&lt;/a&gt; on the &lt;a href=&quot;https://developer.mozilla.org&quot;&gt;MDN&lt;/a&gt; site) to attach a shadow DOM to the component's host element, and then puts the component view inside that shadow DOM. The component's styles are included within the shadow DOM.</source>
          <target state="translated">&lt;code&gt;ShadowDom&lt;/code&gt; 의 보기 캡슐화는 브라우저의 기본 그림자 DOM 구현 (참조 사용 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM&quot;&gt;그림자 DOM을&lt;/a&gt; 온 &lt;a href=&quot;https://developer.mozilla.org&quot;&gt;MDN의&lt;/a&gt; 구성 요소의 호스트 요소에 그림자 DOM을 연결하는 사이트), 그리고 그 그림자 DOM 내부의 구성 요소보기를 넣습니다. 구성 요소의 스타일은 Shadow DOM에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a3fb2f91be9622c238137bf3ba2f1ecda29f6a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ShadowDom&lt;/code&gt;: Use modern &lt;a href=&quot;https://w3c.github.io/webcomponents/spec/shadow/&quot;&gt;Shadow DOM&lt;/a&gt; and create a ShadowRoot for component's host element.</source>
          <target state="translated">&lt;code&gt;ShadowDom&lt;/code&gt; : 최신 &lt;a href=&quot;https://w3c.github.io/webcomponents/spec/shadow/&quot;&gt;Shadow DOM&lt;/a&gt; 을 사용하고 구성 요소의 호스트 요소에 대한 ShadowRoot를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="175148b0e52be6df9d1312e8ad33097f1f699818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedModule&lt;/code&gt; is a conventional name for an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; with the components, directives, and pipes that you use everywhere in your app. This module should consist entirely of &lt;code&gt;declarations&lt;/code&gt;, most of them exported.</source>
          <target state="translated">&lt;code&gt;SharedModule&lt;/code&gt; 은 앱의 어느 곳에서나 사용하는 구성 요소, 지시문 및 파이프가 있는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 의 일반적인 이름입니다 . 이 모듈은 전적으로 &lt;code&gt;declarations&lt;/code&gt; 으로 구성되어야 하며 대부분 선언 됩니다 .</target>
        </trans-unit>
        <trans-unit id="e72b91d9d64570604773f76d058bd7452fb43cc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SubscriptionLike&lt;/code&gt;: Subscribed events.</source>
          <target state="translated">&lt;code&gt;SubscriptionLike&lt;/code&gt; : 구독 이벤트.</target>
        </trans-unit>
        <trans-unit id="600f5697186a8ebbd8bffc0888d3491c5bd22475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T | null&lt;/code&gt;: Component instance associated with the element or &lt;code&gt;null&lt;/code&gt; if there is no component associated with it.</source>
          <target state="translated">&lt;code&gt;T | null&lt;/code&gt; : 요소와 연결된 구성 요소 인스턴스 또는 연결된 구성 요소가 없으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3a140e8a496ec3a3e0c073d932c2f9d48c14902a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T | null&lt;/code&gt;: Component instance whose view owns the DOM element or null if the element is not part of a component view.</source>
          <target state="translated">&lt;code&gt;T | null&lt;/code&gt; : 뷰가 DOM 요소를 소유하는 구성 요소 인스턴스 또는 요소가 구성 요소 뷰의 일부가 아닌 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="c8e51fe2abc8f924a0a61cc7cc7d93adc9762434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T | null&lt;/code&gt;: Instance of the component that is around the element or null if the element isn't inside any component.</source>
          <target state="translated">&lt;code&gt;T | null&lt;/code&gt; : 요소 주변에있는 구성 요소의 인스턴스 또는 요소가 구성 요소 내부에 없으면 null입니다.</target>
        </trans-unit>
        <trans-unit id="2ac216f979452a0495e636dc9e34f4ec59226a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T-DRY&lt;/code&gt; (Try to be &lt;code&gt;DRY&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;T-DRY&lt;/code&gt; (수보십시오 &lt;code&gt;DRY&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0a911efc75ec4c18afcbc9211c8534c257e4555d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;: The instance from the injector if defined, otherwise the &lt;code&gt;notFoundValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; : 정의 된 경우 인젝터에서 인스턴스, 그렇지 않으면 &lt;code&gt;notFoundValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cb6a77af2cda10f6238bbd6cf4d3be97cc71b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateRef&lt;/code&gt; and &lt;code&gt;ViewContainerRef&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TemplateRef&lt;/code&gt; 및 &lt;code&gt;ViewContainerRef&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35a508049889acdb3103e90015f9489eb4a1ad0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestBed.createComponent()&lt;/code&gt; creates an instance of the &lt;code&gt;BannerComponent&lt;/code&gt;, adds a corresponding element to the test-runner DOM, and returns a &lt;a href=&quot;testing#component-fixture&quot;&gt;&lt;code&gt;ComponentFixture&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TestBed.createComponent()&lt;/code&gt; 는 &lt;code&gt;BannerComponent&lt;/code&gt; 의 인스턴스를 작성 하고 해당 요소를 테스트 실행기 DOM에 추가 한 후 &lt;a href=&quot;testing#component-fixture&quot;&gt; &lt;code&gt;ComponentFixture&lt;/code&gt; 를&lt;/a&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b73f82ae68c4ddace6ba5b827cf334d542a80682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestBed.createComponent()&lt;/code&gt; creates an instance of the &lt;code&gt;BannerComponent&lt;/code&gt;, adds a corresponding element to the test-runner DOM, and returns a &lt;a href=&quot;testing-components-basics#component-fixture&quot;&gt;&lt;code&gt;ComponentFixture&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TestBed.createComponent()&lt;/code&gt; 는 &lt;code&gt;BannerComponent&lt;/code&gt; 의 인스턴스를 만들고 테스트 실행기 DOM에 해당 요소를 추가하고 &lt;a href=&quot;testing-components-basics#component-fixture&quot;&gt; &lt;code&gt;ComponentFixture&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7e9f963fc99c15f88cdc768a6aa6fc293c919302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestBed&lt;/code&gt; class summary</source>
          <target state="translated">&lt;code&gt;TestBed&lt;/code&gt; 클래스 요약</target>
        </trans-unit>
        <trans-unit id="75c15418d4e613d73dab6292eadb3e0cd2b76a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextboxQuestion&lt;/code&gt; supports multiple HTML5 types such as text, email, and url via the &lt;code&gt;type&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;TextboxQuestion&lt;/code&gt; 은 &lt;code&gt;type&lt;/code&gt; 속성을 통해 text, email 및 url과 같은 여러 HTML5 유형을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="bbb662938b936af9994cdba140666a87ddfac0da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserContext&lt;/code&gt; in turn depends on both &lt;code&gt;LoggerService&lt;/code&gt; and &lt;code&gt;UserService&lt;/code&gt;, another service that gathers information about a particular user.</source>
          <target state="translated">&lt;code&gt;UserContext&lt;/code&gt; 는 특정 사용자에 대한 정보를 수집하는 다른 서비스 인 &lt;code&gt;LoggerService&lt;/code&gt; 및 &lt;code&gt;UserService&lt;/code&gt; 모두에 따라 달라집니다 .</target>
        </trans-unit>
        <trans-unit id="82fdd512a31e2caeba3770317943fe85d57f9cce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewEncapsulation.Native&lt;/code&gt; has been removed. Angular previously supported a view encapsulation mode &lt;code&gt;ViewEncapsulaion.Native&lt;/code&gt; that was based on the v0 Shadow DOM Draft APIs. These APIs have been superceded by the final Shadow DOM APIs, which are enabled via &lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt;. For background information about this change, see &lt;a href=&quot;https://developers.google.com/web/updates/2019/07/web-components-time-to-upgrade&quot;&gt;Web Components update: more time to upgrade to v1 APIs&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ViewEncapsulation.Native&lt;/code&gt; 가 제거되었습니다. 각도는 이전에 볼 캡슐화 모드 지원 &lt;code&gt;ViewEncapsulaion.Native&lt;/code&gt; V0 그림자 DOM 초안 API를 기반으로했다. 이러한 API는 &lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt; 을 통해 활성화되는 최종 Shadow DOM API로 대체되었습니다 . 이 변경 사항에 대한 배경 정보는 &lt;a href=&quot;https://developers.google.com/web/updates/2019/07/web-components-time-to-upgrade&quot;&gt;웹 구성 요소 업데이트 : v1 API로 업그레이드하는 데 더 많은 시간을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d7a3675faa7376ffc994d60623798ba236d1cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VillainService&lt;/code&gt; is a singleton with respect to &lt;code&gt;VillainsListComponent&lt;/code&gt; because that is where it is declared. As long as &lt;code&gt;VillainsListComponent&lt;/code&gt; does not get destroyed it will be the same instance of &lt;code&gt;VillainService&lt;/code&gt; but if there are multilple instances of &lt;code&gt;VillainsListComponent&lt;/code&gt;, then each instance of &lt;code&gt;VillainsListComponent&lt;/code&gt; will have its own instance of &lt;code&gt;VillainService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VillainService&lt;/code&gt; 는 &lt;code&gt;VillainsListComponent&lt;/code&gt; 와 관련하여 싱글 톤입니다 . 만큼 &lt;code&gt;VillainsListComponent&lt;/code&gt; 이 파괴되지 않습니다 그것의 동일한 인스턴스 될 것 &lt;code&gt;VillainService&lt;/code&gt; 만의 multilple 인스턴스가있는 경우 &lt;code&gt;VillainsListComponent&lt;/code&gt; 를 , 다음의 각 인스턴스 &lt;code&gt;VillainsListComponent&lt;/code&gt; 은 의 자체 인스턴스해야합니다 &lt;code&gt;VillainService&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="81d4e60486861745a063ecfa7a542fd955138f05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; syntax for two-way data binding.</source>
          <target state="translated">&lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; 양방향 데이터 바인딩을위한 [( ngModel )] 구문.</target>
        </trans-unit>
        <trans-unit id="25769304915377a27af47b79cfbaa50985810fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt;: Two-way binding</source>
          <target state="translated">&lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; : 양방향 바인딩</target>
        </trans-unit>
        <trans-unit id="c55fdb4c2c1f561b26d112fdb44dffa2c4c7b7be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;, &lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;]&lt;/code&gt;: The range of day values, &lt;code&gt;[startDay, endDay]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[&lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;, &lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;]&lt;/code&gt; : 일 값 범위 &lt;code&gt;[startDay, endDay]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ef00cc9c9a38e53f380bc610baa56eb24f423c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[attribute=value]&lt;/code&gt;: Select by attribute name and value.</source>
          <target state="translated">&lt;code&gt;[attribute=value]&lt;/code&gt; : 속성 이름과 값으로 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c0e2695d09ee01b75c95ae4ebf6f56ff3650a3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[attribute]&lt;/code&gt;: Select by attribute name.</source>
          <target state="translated">&lt;code&gt;[attribute]&lt;/code&gt; : 속성 이름으로 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f8c0a19321926b2ca6348060bdb55f0bfb7fae93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[hero]=&quot;selectedHero&quot;&lt;/code&gt; is an Angular &lt;a href=&quot;../guide/property-binding&quot;&gt;property binding&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[hero]=&quot;selectedHero&quot;&lt;/code&gt; 는 Angular &lt;a href=&quot;../guide/property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="981077324f89b35e73c0c305facc766b011303d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[hero]=&quot;selectedHero&quot;&lt;/code&gt; is an Angular &lt;a href=&quot;../guide/template-syntax#property-binding&quot;&gt;property binding&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[hero]=&quot;selectedHero&quot;&lt;/code&gt; 는 Angular &lt;a href=&quot;../guide/template-syntax#property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7e2168029e02ba93f77c4132dce9ea0a455dfc7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[number, number]&lt;/code&gt;: A position in screen coordinates (a tuple with x and y values).</source>
          <target state="translated">&lt;code&gt;[number, number]&lt;/code&gt; : 화면 좌표의 위치 (x 및 y 값을 가진 튜플).</target>
        </trans-unit>
        <trans-unit id="7b51a6313ad1d821395f0a6e2abde7e0d0a55abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[prefixKey] &quot;expression&quot;
    (let-prefixKey=&quot;export&quot;)&lt;/code&gt;  Notice that the &lt;code&gt;prefix&lt;/code&gt; is added to the &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[prefixKey] &quot;expression&quot; (let-prefixKey=&quot;export&quot;)&lt;/code&gt; 통지를하는 것이 &lt;code&gt;prefix&lt;/code&gt; 받는 추가 &lt;code&gt;key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="943a403280fa32d76ea8de74863e4dda3d4fafa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[string, string]&lt;/code&gt;: An array of localized era strings. For example, &lt;code&gt;[AD, BC]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[string, string]&lt;/code&gt; : 지역화 된 시대 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[AD, BC]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b77f0294935d596f9ac5cfe95a0b4c5e3d33de93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[string, string]&lt;/code&gt;: An array of localized period strings. For example, &lt;code&gt;[AM, PM]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[string, string]&lt;/code&gt; : 현지화 된 기간 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[AM, PM]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="f4ed4795313114963e18caab75c8c6b26e990912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addHero()&lt;/code&gt; differs from &lt;code&gt;updateHero()&lt;/code&gt; in two ways:</source>
          <target state="translated">&lt;code&gt;addHero()&lt;/code&gt; 는 &lt;code&gt;updateHero()&lt;/code&gt; 와 두 가지면에서 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="64c5f1b08cce1c261a6815016a66e0b81f1fcb81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; - The size of the entire app.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; - 전체 응용 프로그램의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="bd512f9e9548625a99f4ffff5cc1750ad86b0944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allScript&lt;/code&gt; - The size of all scripts.</source>
          <target state="translated">&lt;code&gt;allScript&lt;/code&gt; - 모든 스크립트의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="249a33bba6c4d8b1574ee4eb9ffb84c655e64ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt; : Run on every execution. By default, guards and resolvers run only when the matrix parameters of the route change.</source>
          <target state="translated">&lt;code&gt;always&lt;/code&gt; : 모든 실행에서 실행 기본적으로 가드 및 리졸버는 경로의 매트릭스 매개 변수가 변경 될 때만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="a7f449e748fc1233b1b63cc8bece1d46f91e8640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt; - The size of any file.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; - 파일 크기</target>
        </trans-unit>
        <trans-unit id="080cbb4c036bd6938407740610ba18144893e9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The modified element.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; : 수정 된 요소</target>
        </trans-unit>
        <trans-unit id="83ef77912807893b5ef66342d55d466189be199c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The new element.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; : 새로운 요소.</target>
        </trans-unit>
        <trans-unit id="ed88af26e88454716dc136bfa3563149b1eb2445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The parent node, or null if there is no parent. For WebWorkers, always returns true. This is because the check is synchronous, and the caller can't rely on checking for null.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; : 부모 노드이거나 부모가없는 경우 null입니다. WebWorkers의 경우 항상 true를 리턴합니다. 이는 검사가 동기식이고 호출자가 널 검사에 의존 할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f1d1491d3123541787d7b4f64427edfa343fdacf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The root element.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; : 루트 요소</target>
        </trans-unit>
        <trans-unit id="610e513b973f2fa4ded91b1d1fd3446c1e3d061c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The sibling node, or null if there is no sibling. For WebWorkers, always returns a value. This is because the check is synchronous, and the caller can't rely on checking for null.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; : 형제 노드이거나 형제가없는 경우 null입니다. WebWorkers의 경우 항상 값을 반환합니다. 이는 검사가 동기식이고 호출자가 널 검사에 의존 할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="efd185f1e55e06a53d31c0d1f421c181e4ffcf79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: a factory function that can be used to register the component in an AngularJS module.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; : AngularJS 모듈에 컴포넌트를 등록하는 데 사용할 수있는 팩토리 함수입니다.</target>
        </trans-unit>
        <trans-unit id="4ce9e2e457575c3316876dc5c178f35235a330e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: error data for that particular error. If the control or error is not present, null is returned.</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; : 해당 특정 오류에 대한 오류 데이터. 제어 또는 오류가 없으면 널이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c2a39528555600550d67cd8c7fac676129244987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyComponentStyle&lt;/code&gt; - This size of any one component stylesheet.</source>
          <target state="translated">&lt;code&gt;anyComponentStyle&lt;/code&gt; - 하나의 구성 요소 스타일 시트 크기입니다.</target>
        </trans-unit>
        <trans-unit id="f49e823e2ab788e802dfc06a0d5348e53a0d07b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyScript&lt;/code&gt; - The size of any one script.</source>
          <target state="translated">&lt;code&gt;anyScript&lt;/code&gt; - 하나의 스크립트 크기.</target>
        </trans-unit>
        <trans-unit id="2c3100b81401afb949faac69e139bf9fa0ed980c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app-product-list&lt;/code&gt; (purple box) is the product list that you modified in the previous section.</source>
          <target state="translated">&lt;code&gt;app-product-list&lt;/code&gt; (보라색 상자)는 이전 섹션에서 수정 한 제품 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2e58891e688e83e8eab6a528e23b03efb92b7747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app-root&lt;/code&gt; (orange box) is the application shell. This is the first component to load and the parent of all other components. You can think of it as the base page.</source>
          <target state="translated">&lt;code&gt;app-root&lt;/code&gt; (주황색 상자)는 응용 프로그램 셸입니다. 이것은 가장 먼저로드되는 구성 요소이며 다른 모든 구성 요소의 부모입니다. 이를 기본 페이지로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99641bce8501c79b2b0ebc50e2dfdb718aa23d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app-top-bar&lt;/code&gt; (blue background) is the store name and checkout button.</source>
          <target state="translated">&lt;code&gt;app-top-bar&lt;/code&gt; (파란색 배경)는 상점 이름 및 결제 버튼입니다.</target>
        </trans-unit>
        <trans-unit id="4364e86ff66da5973bbdd38d513ecdac23c5c4f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.css&lt;/code&gt;&amp;mdash; the component's private CSS styles.</source>
          <target state="translated">&lt;code&gt;app.component.css&lt;/code&gt; &amp;mdash; 구성 요소의 전용 CSS 스타일입니다.</target>
        </trans-unit>
        <trans-unit id="3996c432977f8ea861ef77d32c59ee39a60674b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.html&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; in a separate template to display a birthday.</source>
          <target state="translated">&lt;code&gt;app.component.html&lt;/code&gt; 은 별도의 템플릿에서 &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; 를 사용 하여 생일을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="aba00be702a9139005b7cf907b3a9feb661a8ebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.html&lt;/code&gt;&amp;mdash; the component template, written in HTML.</source>
          <target state="translated">&lt;code&gt;app.component.html&lt;/code&gt; &amp;mdash; HTML로 작성된 구성 요소 템플릿.</target>
        </trans-unit>
        <trans-unit id="4b9a5bed3c3ab2bc271b8f49169a5c3ba57cdeee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.ts&lt;/code&gt; defines the app's root component, which uses the PopupService to add the pop-up to the DOM at run time. When the app runs, the root component's constructor converts PopupComponent to a custom element.</source>
          <target state="translated">&lt;code&gt;app.component.ts&lt;/code&gt; 는 PopupService를 사용하여 런타임에 DOM에 팝업을 추가하는 앱의 루트 구성 요소를 정의합니다. 앱이 실행되면 루트 구성 요소의 생성자가 PopupComponent를 사용자 지정 요소로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4fe7378523c0851920dd543fae23906d06334eab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.ts&lt;/code&gt;&amp;mdash; the component class code, written in TypeScript.</source>
          <target state="translated">&lt;code&gt;app.component.ts&lt;/code&gt; &amp;mdash; TypeScript로 작성된 구성 요소 클래스 코드입니다.</target>
        </trans-unit>
        <trans-unit id="13e3ead2644c27bf3e7d9c2a94ca6c8a41a9ee14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.module.ts&lt;/code&gt; adds the PopupComponent in the module's &lt;code&gt;entryComponents&lt;/code&gt; list, to exclude it from compilation and avoid startup warnings or errors.</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; 는 모듈의 &lt;code&gt;entryComponents&lt;/code&gt; 목록 에 PopupComponent를 추가하여 컴파일에서 제외하고 시작 경고 나 오류를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="181b279a7e7e6f486c1513f2f69281e3083a0424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.module.ts&lt;/code&gt; defines the application's root module. In it you identify the external modules you'll use in the application and declare the components that belong to this module, such as the &lt;code&gt;HeroFormComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; 는 응용 프로그램의 루트 모듈을 정의합니다. 여기에서 애플리케이션에서 사용할 외부 모듈을 식별하고이 모듈에 속하는 컴포넌트 (예 : &lt;code&gt;HeroFormComponent&lt;/code&gt; ) 를 선언하십시오 .</target>
        </trans-unit>
        <trans-unit id="7de6a7b76e0302ef8f8bbc7747bd55e3acc1525f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncValidator&lt;/code&gt;: A single async validator or array of async validator functions</source>
          <target state="translated">&lt;code&gt;asyncValidator&lt;/code&gt; : 단일 비동기 유효성 검사기 또는 비동기 유효성 검사기 함수 배열</target>
        </trans-unit>
        <trans-unit id="78278295ce081af52d2e634c950d66b6593c12f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncValidators&lt;/code&gt;: A single async validator or array of async validator functions</source>
          <target state="translated">&lt;code&gt;asyncValidators&lt;/code&gt; : 단일 비동기 유효성 검사기 또는 비동기 유효성 검사기 함수 배열</target>
        </trans-unit>
        <trans-unit id="248e4ad585c886808ce5bc61d9848e7a41c1ced6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bazel build [targets]&lt;/code&gt;: Compile the default output artifacts of the given targets.</source>
          <target state="translated">&lt;code&gt;bazel build [targets]&lt;/code&gt; : 주어진 대상의 기본 출력 결과물을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="e3408ff9388227c58531226b1d9ea1f3270ac76d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bazel run [&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;]&lt;/code&gt;: Compile the program represented by target, and then run it.</source>
          <target state="translated">&lt;code&gt;bazel run [&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;]&lt;/code&gt; : target으로 표시되는 프로그램을 컴파일 한 후 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f8536e8d20e50dcbc097bb83ccd92af0581325a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bazel test [targets]&lt;/code&gt;: For whichever &lt;code&gt;*_test&lt;/code&gt; targets are found in the patterns, run the tests.</source>
          <target state="translated">&lt;code&gt;bazel test [targets]&lt;/code&gt; : 패턴에서 &lt;code&gt;*_test&lt;/code&gt; 대상이 발견되면 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a008a9716e4238a05bc0f8f012dfaae54f8c57eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindToController: {}&lt;/code&gt;. Component inputs and outputs should be bound to the controller instead of using the &lt;code&gt;$&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bindToController: {}&lt;/code&gt; . 구성 요소 입력 및 출력은 &lt;code&gt;$&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; 를 사용하는 대신 컨트롤러에 바인딩되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9efdd13423d2bba7b2ca3cfe28a737ed29b26ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindToController: {}&lt;/code&gt;. Component inputs and outputs should be bound to the controller instead of using the &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bindToController: {}&lt;/code&gt; . 구성 요소 입력 및 출력은 &lt;code&gt;$scope&lt;/code&gt; 를 사용하는 대신 컨트롤러에 바인딩되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f497babe6a22740fb9ac7d86a523f20e4893ad1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindToController&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;bindToController&lt;/code&gt; : 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="5abfd76a6d95df31580853b5c9622c772f88a777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingProperty&lt;/code&gt; specifies the DOM property the event handler is attached to.</source>
          <target state="translated">&lt;code&gt;bindingProperty&lt;/code&gt; 는 이벤트 핸들러가 첨부 된 DOM 특성을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2a14bafc8cff39cccd9b76ef0503c471fb058212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingProperty&lt;/code&gt; specifies the DOM property where the value is read from.</source>
          <target state="translated">&lt;code&gt;bindingProperty&lt;/code&gt; 는 값을 읽을 DOM 특성을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="81cc83b3f12b2063c1e38db3106dfd89b432c105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the animation has started, false otherwise.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; : 애니메이션이 시작되면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="227365fdbd25edbc4dc7fe9e3ffe3f8d42912dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the given URL path is equal to the current normalized path, false otherwise.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; : 주어진 URL 경로가 현재 정규화 된 경로와 같으면 True, 그렇지 않으면 false</target>
        </trans-unit>
        <trans-unit id="b28ca9c1e0b4234538eb13f92b97f4a6f36a4d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the header exists, false otherwise.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; : 헤더가 존재하면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="2c32adeda863ed45e26de4d059eb6ac5713f4029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the map contains the given parameter, false otherwise.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; :지도에 지정된 매개 변수가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="68b2e3880d2d7e3aa5cc6656bd8c67144fb3044e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the parameter has one or more values, false if it has no value or is not present.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; : 매개 변수에 하나 이상의 값이 있으면 true이고, 값이 없거나 존재하지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="fda1b6bf727795564750d221d43e2b29793e70d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: false for disabled controls, true otherwise.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; : 비활성화 된 컨트롤의 경우 false, 그렇지 않으면 true</target>
        </trans-unit>
        <trans-unit id="2a8511884e4ca678180a0046045f88b98585d30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: whether the given error is present in the control at the given path.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; : 주어진 경로의 컨트롤에 주어진 오류가 있는지 여부.</target>
        </trans-unit>
        <trans-unit id="e0fcff2f4d4dd0e5b8624d7c0a97e0fa14c8a33a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bootstrap&lt;/code&gt;: The &lt;a href=&quot;entry-components&quot;&gt;entry component&lt;/a&gt; that Angular creates and inserts into the &lt;code&gt;index.html&lt;/code&gt; host web page, thereby bootstrapping the app. This entry component, &lt;code&gt;AppComponent&lt;/code&gt;, appears in both the &lt;code&gt;declarations&lt;/code&gt; and the &lt;code&gt;bootstrap&lt;/code&gt; arrays.</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; : Angular가 &lt;code&gt;index.html&lt;/code&gt; 호스트 웹 페이지 를 만들고 삽입 하여 앱을 부트 스트랩하는 &lt;a href=&quot;entry-components&quot;&gt;항목 구성 요소&lt;/a&gt; 입니다 . 이 엔트리 컴포넌트 &lt;code&gt;AppComponent&lt;/code&gt; 는 &lt;code&gt;declarations&lt;/code&gt; 과 &lt;code&gt;bootstrap&lt;/code&gt; 배열 모두에 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="b308dc64e4337b46d9517ecf2e60542cf0b6b14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bootstrap&lt;/code&gt;: The main application view, called the &lt;em&gt;root component&lt;/em&gt;, which hosts all other app views. Only the &lt;em&gt;root NgModule&lt;/em&gt; should set the &lt;code&gt;bootstrap&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; : &lt;em&gt;루트 구성 요소&lt;/em&gt; 라고하는 기본 응용 프로그램보기는 다른 모든 응용 프로그램보기를 호스팅합니다. &lt;em&gt;루트 NgModule&lt;/em&gt; 만 &lt;code&gt;bootstrap&lt;/code&gt; 특성을 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="115e8c43e18e668c7fdfa2cffb5e522d52900d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bootstrap&lt;/code&gt;: The root &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; factory to use for bootstraping the app when rendering on the server. For the example app, it is &lt;code&gt;AppServerModule&lt;/code&gt;. It's the bridge between the Universal server-side renderer and the Angular application.</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; : 서버에서 렌더링 할 때 앱을 부트 스트랩하는 데 사용할 루트 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 팩토리입니다. 예제 앱의 경우 &lt;code&gt;AppServerModule&lt;/code&gt; 입니다. Universal 서버 측 렌더러와 Angular 애플리케이션 사이의 다리입니다.</target>
        </trans-unit>
        <trans-unit id="d8e98f9e6d6350457f27c5a238d16463b9167e6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferTime&lt;/code&gt;, &lt;code&gt;concatMap&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;mergeMap&lt;/code&gt;, &lt;code&gt;scan&lt;/code&gt;, &lt;code&gt;switchMap&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bufferTime&lt;/code&gt; , &lt;code&gt;concatMap&lt;/code&gt; , &lt;code&gt;map&lt;/code&gt; , &lt;code&gt;mergeMap&lt;/code&gt; , &lt;code&gt;scan&lt;/code&gt; , &lt;code&gt;switchMap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcd54cd69e545951370b7b56b968e24304a34373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundle&lt;/code&gt; - The size of a specific bundle.</source>
          <target state="translated">&lt;code&gt;bundle&lt;/code&gt; - 특정 번들의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="385e1f353c508d0fec12b98f9e9214e3283a5cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children&lt;/code&gt; - an array of child nodes (&lt;em&gt;header node only&lt;/em&gt;).</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; - 자식 노드의 배열 ( &lt;em&gt;헤더 노드 만&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="55143cd71a8ea88db6c03b0427ac2bc347d1034d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="5f371005076c32e358f595f72b3fd693d6a0656b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt;- code snippets can be styled with the CSS classes &lt;code&gt;no-box&lt;/code&gt;, &lt;code&gt;code-shell&lt;/code&gt;, and &lt;code&gt;avoid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 코드 스 니펫은 CSS 클래스 &lt;code&gt;no-box&lt;/code&gt; , &lt;code&gt;code-shell&lt;/code&gt; 및 &lt;code&gt;avoid&lt;/code&gt; 로 스타일을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="090112e53789f1e202cdc6c3e33483de9d1744a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aff69b69128819a84c4c70e33411bead72813a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt;&lt;code&gt;security&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt;&lt;code&gt;security&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed9d1eef55f7e0638dd32a0105fac64f08aebdfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;click&lt;/code&gt;, &lt;code&gt;deleteRequest&lt;/code&gt;, and &lt;code&gt;myClick&lt;/code&gt; in the following:</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 다음에서 , &lt;code&gt;deleteRequest&lt;/code&gt; 및 &lt;code&gt;myClick&lt;/code&gt; 을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="6569c713b472fb9a9515f0decd6345ee81f65944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client-project&lt;/code&gt; takes the name of your client application.</source>
          <target state="translated">&lt;code&gt;client-project&lt;/code&gt; 는 클라이언트 애플리케이션의 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3d46a9e3470e521eb5d17ff2e7079447c56b1476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt;: Show the code (such as &lt;code&gt;USD&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; : 코드를 표시합니다 (예 : &lt;code&gt;USD&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="81c1e14f7570575032aa9526f131244ad6d8e15c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;colspan&lt;/code&gt; and &lt;code&gt;colSpan&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;colspan&lt;/code&gt; 과 &lt;code&gt;colSpan&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
