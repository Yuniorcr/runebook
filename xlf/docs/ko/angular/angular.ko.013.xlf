<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="e5e0f702aaedc7c6972e3f110daca7a5c9158ba4" translate="yes" xml:space="preserve">
          <source>Resets the AngularJS global.</source>
          <target state="translated">AngularJS 전역을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="24870e46baceb970fb4534665e32255537cb71ad" translate="yes" xml:space="preserve">
          <source>Resets the animation to its initial state.</source>
          <target state="translated">애니메이션을 초기 상태로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="f88538bfab67e9e0c356b616aae226ae3cd472d3" translate="yes" xml:space="preserve">
          <source>Resets the configuration used for navigation and generating links.</source>
          <target state="translated">탐색 및 링크 생성에 사용되는 구성을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="a2e089372be38def35d12038d312cf7cff0d8d32" translate="yes" xml:space="preserve">
          <source>Resets the control with an initial value, or an object that defines the initial value and disabled state.</source>
          <target state="translated">초기 값 또는 초기 값과 비활성화 된 상태를 정의하는 개체로 컨트롤을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="2fc7a98a9e0f85b5443a219c186d8c82560d9d55" translate="yes" xml:space="preserve">
          <source>Resets the control with the provided value if the control is present.</source>
          <target state="translated">컨트롤이있는 경우 제공된 값으로 컨트롤을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="88702bd4bf3be248ab185b7feda16df52da79cb4" translate="yes" xml:space="preserve">
          <source>Resets the control. Abstract method (implemented in sub-classes).</source>
          <target state="translated">컨트롤을 리셋합니다. 추상 메소드 (서브 클래스에서 구현 됨).</target>
        </trans-unit>
        <trans-unit id="47d4885ef343770c40754fe962fcb8b1c56741ff" translate="yes" xml:space="preserve">
          <source>Resets the form control, marking it &lt;code&gt;pristine&lt;/code&gt; and &lt;code&gt;untouched&lt;/code&gt;, and setting the value to null.</source>
          <target state="translated">&lt;code&gt;pristine&lt;/code&gt; 하고 &lt;code&gt;untouched&lt;/code&gt; 것으로 표시하여 양식 컨트롤을 재설정합니다. 하고 값을 null로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="49b3b6784361c44d2330bc9200cfd2ef02593400" translate="yes" xml:space="preserve">
          <source>Resets the form to an initial value and resets its submitted status.</source>
          <target state="translated">양식을 초기 값으로 재설정하고 제출 된 상태를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="8635aa5d179c8df3b57e1c64dc526685d61d9a09" translate="yes" xml:space="preserve">
          <source>Resets the route configuration used for navigation and generating links.</source>
          <target state="translated">탐색 및 링크 생성에 사용되는 경로 구성을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="dafdd49549d0718ea3f265ce0ffd382b7fb22c19" translate="yes" xml:space="preserve">
          <source>Resolution modifiers</source>
          <target state="translated">해상도 수정 자</target>
        </trans-unit>
        <trans-unit id="968f15ecf972446f10f7693c33b8940e1ebae3cc" translate="yes" xml:space="preserve">
          <source>Resolution modifiers and dependency injection</source>
          <target state="translated">해결 수정 자 및 종속성 주입</target>
        </trans-unit>
        <trans-unit id="14dbb4b1816b9410c76c9b483c0fc6b476ef2cfe" translate="yes" xml:space="preserve">
          <source>Resolution modifiers fall into three categories:</source>
          <target state="translated">해상도 수정자는 세 가지 범주로 분류됩니다.</target>
        </trans-unit>
        <trans-unit id="1630633b28570d9d271f0a3fa1bc084637a5dc40" translate="yes" xml:space="preserve">
          <source>Resolution rules</source>
          <target state="translated">해결 규칙</target>
        </trans-unit>
        <trans-unit id="22899a486866313817a37fb316724b0f36c6dd4c" translate="yes" xml:space="preserve">
          <source>Resolution works upward through the injector hierarchy, so the children of this class must configure their own providers or be prepared for a null result.</source>
          <target state="translated">해결 방법은 인젝터 계층 구조를 통해 위쪽으로 작동하므로이 클래스의 자식은 자신의 공급자를 구성하거나 null 결과를 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="5428d801dbf9cd5af8724c4449af2204a7e74318" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning a body plus additional HTTP information (such as response headers) if provided. If the request specifies an expected body type, the body is converted into the requested type. Otherwise, the body is converted to &lt;code&gt;JSON&lt;/code&gt; by default.</source>
          <target state="translated">제공되는 경우 본문과 추가 HTTP 정보 (예 : 응답 헤더)를 반환하여 요청을 해결하십시오. 요청이 예상 본문 유형을 지정하면 본문이 요청 된 유형으로 변환됩니다. 그렇지 않으면 기본적으로 본문이 &lt;code&gt;JSON&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec9648af2c97466d258a342886ddfc8487fe626a" translate="yes" xml:space="preserve">
          <source>Resolve the request by returning an &lt;code&gt;ErrorEvent&lt;/code&gt; (e.g. simulating a network failure).</source>
          <target state="translated">&lt;code&gt;ErrorEvent&lt;/code&gt; 를 리턴하여 요청을 해결하십시오 (예 : 네트워크 장애 시뮬레이션).</target>
        </trans-unit>
        <trans-unit id="d892b45b3568820b7637e88a421da7e3b9cc005a" translate="yes" xml:space="preserve">
          <source>Resolve vendor packages sourcemaps.</source>
          <target state="translated">공급 업체 패키지 소스 맵을 해결하십시오.</target>
        </trans-unit>
        <trans-unit id="3d067fa7b0e7b927dc5fd2ddc95419173701aa0c" translate="yes" xml:space="preserve">
          <source>ResolveData</source>
          <target state="translated">ResolveData</target>
        </trans-unit>
        <trans-unit id="0c6389bb51f19b41d7378625dbb8022c3608c006" translate="yes" xml:space="preserve">
          <source>ResolveEnd</source>
          <target state="translated">ResolveEnd</target>
        </trans-unit>
        <trans-unit id="61ef5fa48b634f6d35231db0ce74b2fbff781bcd" translate="yes" xml:space="preserve">
          <source>ResolveStart</source>
          <target state="translated">ResolveStart</target>
        </trans-unit>
        <trans-unit id="5774b1f7e7d5d970b2d71e03c9494d4b8f646425" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveFactory</source>
          <target state="translated">ResolvedReflectiveFactory</target>
        </trans-unit>
        <trans-unit id="a33073e17765ddd6137810adff34b548ac033389" translate="yes" xml:space="preserve">
          <source>ResolvedReflectiveProvider</source>
          <target state="translated">ResolvedReflectiveProvider</target>
        </trans-unit>
        <trans-unit id="47ecade1ed39b604db07f2373e6d2388db12b9e7" translate="yes" xml:space="preserve">
          <source>Resolvers</source>
          <target state="translated">Resolvers</target>
        </trans-unit>
        <trans-unit id="bfe1a0e94ea746eafa78ec55cb8711bfc94f9062" translate="yes" xml:space="preserve">
          <source>Resolvers run after all &lt;a href=&quot;glossary#route-guard&quot;&gt;route guards&lt;/a&gt; for a route tree have been executed and have succeeded.</source>
          <target state="translated">라우트 트리에 대한 모든 &lt;a href=&quot;glossary#route-guard&quot;&gt;라우트 가드&lt;/a&gt; 가 실행되고 성공한 후에 해석기가 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="2cbbc4d20999a3f6dc525713838585739e52f19f" translate="yes" xml:space="preserve">
          <source>Resolves a provider and instantiates an object in the context of the injector.</source>
          <target state="translated">공급자를 확인하고 인젝터 컨텍스트에서 객체를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="4d65d65ebb9a014dd0b1ffdc2fc18917fd546aa6" translate="yes" xml:space="preserve">
          <source>Resolves an array of providers and creates a child injector from those providers.</source>
          <target state="translated">일련의 제공자를 해결하고 해당 제공자로부터 하위 인젝터를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="133dc4fc3c58923b511ab9aab828422616aa2955" translate="yes" xml:space="preserve">
          <source>Resolves an array of providers and creates an injector from those providers.</source>
          <target state="translated">공급자 배열을 확인하고 해당 공급자로부터 인젝터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4ea3553ce5bf8ff8ec93b1408a6326001dd61a7f" translate="yes" xml:space="preserve">
          <source>Resolving components</source>
          <target state="translated">구성 요소 해결</target>
        </trans-unit>
        <trans-unit id="d0219d329381baa83142136f635a82c4e071a9fc" translate="yes" xml:space="preserve">
          <source>Resource integrity</source>
          <target state="translated">자원 무결성</target>
        </trans-unit>
        <trans-unit id="d832a936b20576702f35880811528f109e51f99a" translate="yes" xml:space="preserve">
          <source>Resource summary</source>
          <target state="translated">자원 요약</target>
        </trans-unit>
        <trans-unit id="bd57ec5d9ee117948f22ac564cc950b30780e89a" translate="yes" xml:space="preserve">
          <source>Respond after Angular checks the component's views and child views / the view that a directive is in.</source>
          <target state="translated">Angular가 구성 요소의 뷰와 자식 뷰 / 지시문이있는 뷰를 확인한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="5e6147cc808e464f708de4c3e6ba00e2d62308cb" translate="yes" xml:space="preserve">
          <source>Respond after Angular checks the component's views and child views, or the view that contains the directive.</source>
          <target state="translated">Angular가 구성 요소의 뷰와 하위 뷰 또는 지시문이 포함 된 뷰를 확인한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="e936a7bd475a12d703444639409d79b8a6628dcd" translate="yes" xml:space="preserve">
          <source>Respond after Angular checks the content projected into the directive or component.</source>
          <target state="translated">Angular가 지시문 또는 구성 요소에 투영 된 내용을 확인한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="8ce617e949ef71813ce0b5c86b7a2fb093fce20e" translate="yes" xml:space="preserve">
          <source>Respond after Angular checks the content projected into the directive/component.</source>
          <target state="translated">Angular가 지시문 / 컴포넌트로 투영 된 내용을 확인한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="9307f131727a562a45c85e015889d049d009de3e" translate="yes" xml:space="preserve">
          <source>Respond after Angular initializes the component's views and child views / the view that a directive is in.</source>
          <target state="translated">Angular가 구성 요소의 뷰와 자식 뷰 / 지시문이있는 뷰를 초기화 한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="deb457ce9cca288ec70b4314eee6b8e5f9702f75" translate="yes" xml:space="preserve">
          <source>Respond after Angular initializes the component's views and child views, or the view that contains the directive.</source>
          <target state="translated">Angular가 구성 요소의 뷰와 자식 뷰 또는 지시문이 포함 된 뷰를 초기화 한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="58086f3e148bc7d281f43f112937024655cefd84" translate="yes" xml:space="preserve">
          <source>Respond after Angular projects external content into the component's view / the view that a directive is in.</source>
          <target state="translated">Angular가 외부 컨텐츠를 컴포넌트의 뷰 / 지시문이있는 뷰에 투영 한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="acfdf67caeb059502a0a386b76dd00af43b7d6c1" translate="yes" xml:space="preserve">
          <source>Respond after Angular projects external content into the component's view, or into the view that a directive is in.</source>
          <target state="translated">Angular가 외부 콘텐츠를 구성 요소의보기 또는 지시문이있는보기에 투영 한 후 응답합니다.</target>
        </trans-unit>
        <trans-unit id="163ffc3925407a10fb3865f4c4d29b01c19d1ded" translate="yes" xml:space="preserve">
          <source>Respond to a native HTML button-click event by adding to the model data.</source>
          <target state="translated">모델 데이터에 추가하여 기본 HTML 버튼 클릭 이벤트에 응답합니다.</target>
        </trans-unit>
        <trans-unit id="2a3bd814c62a455d9ccfb943e5a63b43a9255976" translate="yes" xml:space="preserve">
          <source>Respond to form submission</source>
          <target state="translated">양식 제출에 응답</target>
        </trans-unit>
        <trans-unit id="89f782df51b16552bf179c97c446085eb344c5c9" translate="yes" xml:space="preserve">
          <source>Respond to user-initiated events</source>
          <target state="translated">사용자가 시작한 이벤트에 응답</target>
        </trans-unit>
        <trans-unit id="4eaecaeb805bcbd8415185dfcb6db0cb7b4d9b2e" translate="yes" xml:space="preserve">
          <source>Respond when Angular (re)sets data-bound input properties. The method receives a &lt;code&gt;&lt;a href=&quot;../api/core/simplechanges&quot;&gt;SimpleChanges&lt;/a&gt;&lt;/code&gt; object of current and previous property values.</source>
          <target state="translated">Angular가 데이터 바인딩 된 입력 속성을 설정할 때 응답합니다. 이 메소드는 &lt;code&gt;&lt;a href=&quot;../api/core/simplechanges&quot;&gt;SimpleChanges&lt;/a&gt;&lt;/code&gt; 를 받습니다. 현재 및 이전 특성 값 오브젝트를 합니다.</target>
        </trans-unit>
        <trans-unit id="67eb173cff9363504d125e7e8c81e5182cdf1d4b" translate="yes" xml:space="preserve">
          <source>Respond when Angular sets or resets data-bound input properties. The method receives a &lt;code&gt;&lt;a href=&quot;../api/core/simplechanges&quot;&gt;SimpleChanges&lt;/a&gt;&lt;/code&gt; object of current and previous property values.</source>
          <target state="translated">Angular가 데이터 바인딩 된 입력 속성을 설정하거나 재설정 할 때 응답합니다. 이 메서드는 현재 및 이전 속성 값 의 &lt;code&gt;&lt;a href=&quot;../api/core/simplechanges&quot;&gt;SimpleChanges&lt;/a&gt;&lt;/code&gt; 개체를 받습니다 .</target>
        </trans-unit>
        <trans-unit id="e95078f0c91e9393d002aeaafde3fb53cdb53339" translate="yes" xml:space="preserve">
          <source>Responding to events is an aspect of Angular's &lt;a href=&quot;glossary#unidirectional-data-flow&quot;&gt;unidirectional data flow&lt;/a&gt;. You can change anything in your application during a single event loop.</source>
          <target state="translated">이벤트에 응답하는 것은 Angular의 &lt;a href=&quot;glossary#unidirectional-data-flow&quot;&gt;단방향 데이터 흐름&lt;/a&gt; 의 한 측면입니다 . 단일 이벤트 루프 동안 애플리케이션의 모든 것을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6b04ed2778b312513975eefa4d5ac492dbdc14a" translate="yes" xml:space="preserve">
          <source>Responding to events is the other side of Angular's &quot;unidirectional data flow&quot;. You're free to change anything, anywhere, during this turn of the event loop.</source>
          <target state="translated">이벤트에 응답하는 것은 Angular의 &quot;단방향 데이터 흐름&quot;의 다른 측면입니다. 이벤트 루프가 바뀌는 동안 언제 어디서나 자유롭게 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="968f631d353392b6578bfa12a59637a8f0658f7c" translate="yes" xml:space="preserve">
          <source>Responding to lifecycle events</source>
          <target state="translated">라이프 사이클 이벤트에 응답</target>
        </trans-unit>
        <trans-unit id="d7361b7d522b4c126173cda5db0c669fcf8d7703" translate="yes" xml:space="preserve">
          <source>Responding to projected content changes</source>
          <target state="translated">예상되는 콘텐츠 변경에 대응</target>
        </trans-unit>
        <trans-unit id="1173e0093f8bd769cdaa4a1cb29b032b7d8dedcf" translate="yes" xml:space="preserve">
          <source>Responding to view changes</source>
          <target state="translated">보기 변경에 응답</target>
        </trans-unit>
        <trans-unit id="cadc8ba3f8c3565f8ae3845707ee78a887998339" translate="yes" xml:space="preserve">
          <source>Response status code.</source>
          <target state="translated">응답 상태 코드</target>
        </trans-unit>
        <trans-unit id="7bccfde2ef651a8a21201453065d89f83adc9118" translate="yes" xml:space="preserve">
          <source>Responsive programming</source>
          <target state="translated">반응 형 프로그래밍</target>
        </trans-unit>
        <trans-unit id="e49a1201aa7733e36c9eb54f0c6d3a26062abc49" translate="yes" xml:space="preserve">
          <source>Restart Visual Studio for this change to take effect.</source>
          <target state="translated">이 변경 사항을 적용하려면 Visual Studio를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="6a1243be2dc6f4eeadda410956468fc78ab8f71b" translate="yes" xml:space="preserve">
          <source>Restarts the paused animation.</source>
          <target state="translated">일시 정지 된 애니메이션을 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="cf9e9d257bad84fdf95e70e5b90b4d2375ce9383" translate="yes" xml:space="preserve">
          <source>Restore the original property name and specify the selector as the alias in the argument to &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">원래 특성 이름을 복원하고 선택기를 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 인수에서 별명으로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0354ba02b6aac3ec3eef44ddd86df8189ebfae2" translate="yes" xml:space="preserve">
          <source>Restore the packages required for an Angular application as follows:</source>
          <target state="translated">다음과 같이 Angular 애플리케이션에 필요한 패키지를 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="c2d8b8b0213f8ae7b0b3ce6d0cac81aa0c7ad8a0" translate="yes" xml:space="preserve">
          <source>Retrieve a nested control</source>
          <target state="translated">중첩 된 컨트롤 검색</target>
        </trans-unit>
        <trans-unit id="fe3034a9450e4fd9e1a0f26ee4be433e8c28f684" translate="yes" xml:space="preserve">
          <source>Retrieve a service from the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; injector.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 인젝터 에서 서비스를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="374a915c9c6e4a7c2f4f19b1ff8158ded7daf2c6" translate="yes" xml:space="preserve">
          <source>Retrieve shipping prices</source>
          <target state="translated">운송 가격 검색</target>
        </trans-unit>
        <trans-unit id="6e60d8309938e7eecec71ec75f3b1c3429843864" translate="yes" xml:space="preserve">
          <source>Retrieve the platform &lt;a href=&quot;injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt;, which is the parent injector for every Angular application on the page and provides singleton providers.</source>
          <target state="translated">플랫폼 &lt;a href=&quot;injector&quot;&gt; &lt;code&gt;Injector&lt;/code&gt; &lt;/a&gt; 검색페이지의 모든 Angular 애플리케이션에 대한 상위 인젝터 인 싱글 톤 제공자를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="1551f884016735858002ed6043e29f6a760221a8" translate="yes" xml:space="preserve">
          <source>Retrieves Gregorian-calendar eras for the given locale.</source>
          <target state="translated">주어진 로케일에 대한 그레고리력 달력 시대를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="759ae5bcebdeb0c2538cece17e2e89d51dae031b" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag element in the current HTML document.</source>
          <target state="translated">현재 HTML 문서에서 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그 요소를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="7f10b66481bdad1b243d60d3e182472d7bfdbcfc" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;code&gt;Key&lt;/code&gt; for a token.</source>
          <target state="translated">토큰 의 &lt;code&gt;Key&lt;/code&gt; 를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="34319cc099a07e678992d688ed020d30f60b4b2c" translate="yes" xml:space="preserve">
          <source>Retrieves a child control given the control's name or path.</source>
          <target state="translated">컨트롤 이름 또는 경로가 지정된 자식 컨트롤을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ae5144326bad8531ea2fb176b17a4849bb4a3894" translate="yes" xml:space="preserve">
          <source>Retrieves a list of event listeners associated with a DOM element. The list does include host listeners, but it does not include event listeners defined outside of the Angular context (e.g. through &lt;code&gt;addEventListener&lt;/code&gt;).</source>
          <target state="translated">DOM 요소와 연관된 이벤트 리스너 목록을 검색합니다. 목록에는 호스트 리스너가 포함되어 있지만 Angular 컨텍스트 외부에서 정의 된 이벤트 리스너는 포함되지 않습니다 (예 : &lt;code&gt;addEventListener&lt;/code&gt; 를 통해 ).</target>
        </trans-unit>
        <trans-unit id="761d03e0e6c17d316500c60c4c6821e177d80ae3" translate="yes" xml:space="preserve">
          <source>Retrieves a list of values for a given header.</source>
          <target state="translated">주어진 헤더의 값 목록을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="bbea70a1e06d051a6bb63cf8ca188f3fbc62e9a1" translate="yes" xml:space="preserve">
          <source>Retrieves a localized date-time formatting string.</source>
          <target state="translated">현지화 된 날짜-시간 형식 문자열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b31984cdceb74e639f64bf5d67e87310637ab11a" translate="yes" xml:space="preserve">
          <source>Retrieves a localized date-value formating string.</source>
          <target state="translated">현지화 된 날짜-값 형식 문자열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d5c5b75774b1acfadcec9aeb4898b6ce9acc5d3e" translate="yes" xml:space="preserve">
          <source>Retrieves a localized number symbol that can be used to replace placeholders in number formats.</source>
          <target state="translated">자리 표시자를 숫자 형식으로 바꾸는 데 사용할 수있는 지역화 된 숫자 기호를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="e4afa2f09e73234f05d9a30ec69982d8fe3288cb" translate="yes" xml:space="preserve">
          <source>Retrieves a localized time-value formatting string.</source>
          <target state="translated">현지화 된 시간 값 형식 문자열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="2e3323dd7414749f8d77e0028f1994cb174626dd" translate="yes" xml:space="preserve">
          <source>Retrieves a map of the search parameters of the current URL, or changes a search part and returns a reference to its own instance.</source>
          <target state="translated">현재 URL의 검색 매개 변수 맵을 검색하거나 검색 파트를 변경하고 자체 인스턴스에 대한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="43bb4b0c77a6b2c564933dc19ee2061db1ed4c5b" translate="yes" xml:space="preserve">
          <source>Retrieves a number format for a given locale.</source>
          <target state="translated">주어진 로케일에 대한 숫자 형식을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="771df18529481ff15849a9d7ddb9b6291caf1886" translate="yes" xml:space="preserve">
          <source>Retrieves a set of &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag elements in the current HTML document.</source>
          <target state="translated">현재 HTML 문서에서 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그 요소 집합을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="59840f4c275f15ebc98c7c128700716d4fa13123" translate="yes" xml:space="preserve">
          <source>Retrieves a single value for a parameter.</source>
          <target state="translated">매개 변수의 단일 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="1fc00103d827bd0718443dea2be46902911aabf8" translate="yes" xml:space="preserve">
          <source>Retrieves a view from this container.</source>
          <target state="translated">이 컨테이너로부터 뷰를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="183f4366f47108e67dfa5c77f7df24d44ff1a73b" translate="yes" xml:space="preserve">
          <source>Retrieves all root components associated with a DOM element, directive or component instance. Root components are those which have been bootstrapped by Angular.</source>
          <target state="translated">DOM 요소, 지시문 또는 구성 요소 인스턴스와 관련된 모든 루트 구성 요소를 검색합니다. 루트 구성 요소는 Angular에 의해 부트 스트랩 된 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="921c5cd6e13be403741607c9a6a8a8fc698b06f5" translate="yes" xml:space="preserve">
          <source>Retrieves all the parameters for this body.</source>
          <target state="translated">이 본문의 모든 매개 변수를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="49aabbbb83ddb68c554e3bcedddbf800ba6ccf20" translate="yes" xml:space="preserve">
          <source>Retrieves all values for a parameter.</source>
          <target state="translated">매개 변수의 모든 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="fcb5bc7d546426f69876d059ad9f1f6658fb76a0" translate="yes" xml:space="preserve">
          <source>Retrieves all values regardless of disabled status. The &lt;code&gt;value&lt;/code&gt; property is the best way to get the value of the group, because it excludes disabled controls in the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">비활성화 된 상태에 관계없이 모든 값을 검색합니다. &lt;code&gt;value&lt;/code&gt; 가 비활성화 컨트롤을 제외하기 때문에 속성은 그룹의 가치를 얻을 수있는 가장 좋은 방법입니다 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="610af66a1c7386eba201d9da266d9b2314545446" translate="yes" xml:space="preserve">
          <source>Retrieves an &lt;code&gt;&lt;a href=&quot;../injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; associated with an element, component or directive instance.</source>
          <target state="translated">요소, 구성 요소 또는 지시문 인스턴스와 연결된 &lt;code&gt;&lt;a href=&quot;../injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="7d96b32824c0562195ac7bcd240d2526966e2962" translate="yes" xml:space="preserve">
          <source>Retrieves an &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; associated with an element, component or directive instance.</source>
          <target state="translated">요소, 구성 요소 또는 지시문 인스턴스와 연결된 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="0233421cc8c238d0baef18d39a3b5c801b7e9359" translate="yes" xml:space="preserve">
          <source>Retrieves an instance from the injector based on the provided token.</source>
          <target state="translated">제공된 토큰을 기반으로 인젝터에서 인스턴스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f7648f3241ae9728aac920d98d4f628a56cdcfc2" translate="yes" xml:space="preserve">
          <source>Retrieves day period strings for the given locale.</source>
          <target state="translated">지정된 로케일에 대한 일 기간 문자열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="c69701613c7a6f2b8fc0e33c2071a6d08c53987d" translate="yes" xml:space="preserve">
          <source>Retrieves days of the week for the given locale, using the Gregorian calendar.</source>
          <target state="translated">Gregorian 달력을 사용하여 지정된 로케일의 요일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="8b6e2193bb9c1faa6e1b10c89353668e41290f4c" translate="yes" xml:space="preserve">
          <source>Retrieves directive instances associated with a given DOM element. Does not include component instances.</source>
          <target state="translated">주어진 DOM 요소와 연관된 지시문 인스턴스를 검색합니다. 구성 요소 인스턴스를 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9cd2a990521280448109f6112aa17ead29a5e9a3" translate="yes" xml:space="preserve">
          <source>Retrieves locale-specific day periods, which indicate roughly how a day is broken up in different languages. For example, for &lt;code&gt;en-US&lt;/code&gt;, periods are morning, noon, afternoon, evening, and midnight.</source>
          <target state="translated">로케일 별 요일을 검색합니다.이 기간은 대략 하루가 다른 언어로 구분되는 방법을 나타냅니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 기간은 아침, 정오, 오후, 저녁 및 자정입니다.</target>
        </trans-unit>
        <trans-unit id="e4341e9b84ebabd54adf9c40729d89ceb817f828" translate="yes" xml:space="preserve">
          <source>Retrieves locale-specific rules used to determine which day period to use when more than one period is defined for a locale.</source>
          <target state="translated">로캘에 대해 둘 이상의 기간이 정의되어있을 때 사용할 요일을 결정하는 데 사용되는 로캘 별 규칙을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="139b8a80b6456695bfda926af85cce4de373a98f" translate="yes" xml:space="preserve">
          <source>Retrieves months of the year for the given locale, using the Gregorian calendar.</source>
          <target state="translated">그레고리력을 사용하여 주어진 로케일에 대한 한 달의 월을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d3b4fe984adca488d5bb367adae37368c938c8ea" translate="yes" xml:space="preserve">
          <source>Retrieves multiple values for a parameter.</source>
          <target state="translated">매개 변수에 대한 여러 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="7fa568dde95d020fbbe65c4ceea686e2aef3f151" translate="yes" xml:space="preserve">
          <source>Retrieves or creates a set of &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag elements in the current HTML document. In searching for an existing tag, Angular attempts to match the &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;property&lt;/code&gt; attribute values in the provided tag definition, and verifies that all other attribute values are equal.</source>
          <target state="translated">현재 HTML 문서에서 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그 요소 집합을 검색하거나 만듭니다 . 기존 태그를 검색 할 때 Angular 는 제공된 태그 정의 의 &lt;code&gt;name&lt;/code&gt; 또는 &lt;code&gt;property&lt;/code&gt; 속성 값 을 일치시키고 다른 모든 속성 값이 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a5061406e7df71fd4eae903fdf71723bd2f4610a" translate="yes" xml:space="preserve">
          <source>Retrieves or creates a specific &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag element in the current HTML document. In searching for an existing tag, Angular attempts to match the &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;property&lt;/code&gt; attribute values in the provided tag definition, and verifies that all other attribute values are equal. If an existing element is found, it is returned and is not modified in any way.</source>
          <target state="translated">현재 HTML 문서에서 특정 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그 요소를 검색하거나 만듭니다 . 기존 태그를 검색 할 때 Angular 는 제공된 태그 정의 의 &lt;code&gt;name&lt;/code&gt; 또는 &lt;code&gt;property&lt;/code&gt; 속성 값 을 일치시키고 다른 모든 속성 값이 동일한 지 확인합니다. 기존 요소가 발견되면 반환되며 어떤 방식으로도 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11384cb47fa71db153744a21bb91feffc9eed5b8" translate="yes" xml:space="preserve">
          <source>Retrieves or sets Angular configuration values in the angular.json file for the workspace.</source>
          <target state="translated">작업 공간에 대한 angular.json 파일에서 각도 구성 값을 검색하거나 설정합니다.</target>
        </trans-unit>
        <trans-unit id="64fc1c3c5ab326d44ee862649cd530e5b0f034c5" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; for a provided &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; 지시문 인스턴스에 대한 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="a14cefdec7112880169c738b257d0cdef4aa1c19" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance from the provided &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; directive</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; 지시문 에서 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="857bfe34f804b376c4100e7f79c3822348a10ef5" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance from the provided &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 지시문 에서 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="c20189eb6ea92602b11183790e2daf2706956fd9" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for a provided &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directive instance</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; 지시문 인스턴스에 대한 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="1d9fe655bc1e0283a5974ff054d61675885eb489" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for a provided &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive instance</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 지시문 인스턴스에 대한 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="20f7f3c9a2a4edae8c048198268325ad25c35d34" translate="yes" xml:space="preserve">
          <source>Retrieves the compilation zone in which event listeners are registered.</source>
          <target state="translated">이벤트 리스너가 등록 된 컴파일 영역을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a746b3f8cf21cde6f99e24bce8062cba77e1f12d" translate="yes" xml:space="preserve">
          <source>Retrieves the component instance associated with a given DOM element.</source>
          <target state="translated">지정된 DOM 요소와 연결된 구성 요소 인스턴스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b50f7231391de68e87fb2b50902568b0124fb9e6" translate="yes" xml:space="preserve">
          <source>Retrieves the component instance whose view contains the DOM element.</source>
          <target state="translated">뷰에 DOM 요소가 포함 된 구성 요소 인스턴스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f8f2bd5d77b9db94cfb7f5319e8a3257e4c83af4" translate="yes" xml:space="preserve">
          <source>Retrieves the currency symbol for a given currency code.</source>
          <target state="translated">주어진 통화 코드에 대한 통화 기호를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="5806329413fd4f21a5cd984c534e19c8dd168fb7" translate="yes" xml:space="preserve">
          <source>Retrieves the current URL, or sets a new URL. When setting a URL, changes the path, search, and hash, and returns a reference to its own instance.</source>
          <target state="translated">현재 URL을 검색하거나 새 URL을 설정합니다. URL을 설정하면 경로, 검색 및 해시가 변경되고 자체 인스턴스에 대한 참조가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e020da059b0a040883a447b090b56f7e72bd5648" translate="yes" xml:space="preserve">
          <source>Retrieves the current XSRF token to use with the next outgoing request.</source>
          <target state="translated">다음 발신 요청에 사용할 현재 XSRF 토큰을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="58bdd9a469d9c5b25c8393ef8b4bfb7f15681c60" translate="yes" xml:space="preserve">
          <source>Retrieves the current hash fragment, or changes the hash fragment and returns a reference to its own instance.</source>
          <target state="translated">현재 해시 조각을 검색하거나 해시 조각을 변경하고 자체 인스턴스에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45657691c71f3a0ff9fdfdd4bcc5f1abf0c7d297" translate="yes" xml:space="preserve">
          <source>Retrieves the current scroll position.</source>
          <target state="translated">현재 스크롤 위치를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="75e71300ec0108bcfba45e11a916d4f92d9c8d6c" translate="yes" xml:space="preserve">
          <source>Retrieves the default currency code for the given locale.</source>
          <target state="translated">지정된 로케일에 대한 기본 통화 코드를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="c9f49dc23897d127bbc17e6a168050e9f96ecb77" translate="yes" xml:space="preserve">
          <source>Retrieves the factory object that creates a component of the given type.</source>
          <target state="translated">지정된 타입의 컴퍼넌트를 작성하는 팩토리 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9ebaebb21d9d18e9af0163dd793e7fe72d897edb" translate="yes" xml:space="preserve">
          <source>Retrieves the first day of the week for the given locale.</source>
          <target state="translated">지정된 로케일의 요일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="8ae45081e622febad31f8ed85b968d270bf36ceb" translate="yes" xml:space="preserve">
          <source>Retrieves the first value for a parameter.</source>
          <target state="translated">매개 변수의 첫 번째 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="3d3592812e6856a080eca08bb6b67c878ea5bc14" translate="yes" xml:space="preserve">
          <source>Retrieves the first value of a given header.</source>
          <target state="translated">주어진 헤더의 첫 번째 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a4c43d930f970e2c6055e607634aacd3cec66756" translate="yes" xml:space="preserve">
          <source>Retrieves the full URL representation with all segments encoded according to rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986에&lt;/a&gt; 지정된 규칙에 따라 인코딩 된 모든 세그먼트로 전체 URL 표현을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="407fc52934030d55ddda71eb58e5f88c2246598b" translate="yes" xml:space="preserve">
          <source>Retrieves the full URL representation with all segments encoded according to rules specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a8be6ecdcdb56a19f63ba210a6d13b82c8880f" translate="yes" xml:space="preserve">
          <source>Retrieves the history state object when called without any parameter.</source>
          <target state="translated">매개 변수없이 호출 될 때 히스토리 상태 오브젝트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="c816dbafc4f15f2ec3a7dbade2cdc9833bff2937" translate="yes" xml:space="preserve">
          <source>Retrieves the host element of a component or directive instance. The host element is the DOM element that matched the selector of the directive.</source>
          <target state="translated">구성 요소 또는 지시문 인스턴스의 호스트 요소를 검색합니다. 호스트 요소는 지시문의 선택자와 일치하는 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="dead837ae7fcd6ab527bd7eb247527b5ae9d074f" translate="yes" xml:space="preserve">
          <source>Retrieves the locale ID from the currently loaded locale. The loaded locale could be, for example, a global one rather than a regional one.</source>
          <target state="translated">현재로드 된 로캘에서 로캘 ID를 검색합니다. 예를 들어로드 된 로캘은 지역이 아닌 전역이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef1e76786847837b6af76cc2626ac659ff2920f3" translate="yes" xml:space="preserve">
          <source>Retrieves the name of the currency for the main country corresponding to a given locale. For example, 'US Dollar' for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">주어진 로케일에 해당하는 주요 국가의 통화 이름을 검색합니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 'US Dollar'입니다 .</target>
        </trans-unit>
        <trans-unit id="748144714bf77f5c191a79ab06e7c45f9ad4c60d" translate="yes" xml:space="preserve">
          <source>Retrieves the names of the headers.</source>
          <target state="translated">헤더의 이름을 얻어 온다.</target>
        </trans-unit>
        <trans-unit id="7fc9d99dd7eb470d81297030d81296a4a92ae22d" translate="yes" xml:space="preserve">
          <source>Retrieves the path of the current URL, or changes the path and returns a reference to its own instance.</source>
          <target state="translated">현재 URL의 경로를 검색하거나 경로를 변경하고 자체 인스턴스에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3c81f7dcbe5169aeff7244f1a43658193ac83375" translate="yes" xml:space="preserve">
          <source>Retrieves the platform &lt;a href=&quot;injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt;, which is the parent injector for every Angular application on the page and provides singleton providers.</source>
          <target state="translated">페이지의 모든 Angular 애플리케이션에 대한 상위 인젝터이고 싱글 톤 공급자를 제공 하는 플랫폼 &lt;a href=&quot;injector&quot;&gt; &lt;code&gt;Injector&lt;/code&gt; 를&lt;/a&gt; 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="e31c3a2964b5c9c919c6f14f2afd1b0990ed7cca" translate="yes" xml:space="preserve">
          <source>Retrieves the plural function used by ICU expressions to determine the plural case to use for a given locale.</source>
          <target state="translated">주어진 로케일에 사용할 복수의 경우를 결정하기 위해 ICU 표현식에서 사용하는 복수 함수를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="c91ea86c47a114bcf4885dfccd4fb65102725b63" translate="yes" xml:space="preserve">
          <source>Retrieves the port of the current URL.</source>
          <target state="translated">현재 URL의 포트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="c732a0916aa023a6d1c0ef2497bec847b0143674" translate="yes" xml:space="preserve">
          <source>Retrieves the previously stored route</source>
          <target state="translated">이전에 저장된 경로를 검색합니다</target>
        </trans-unit>
        <trans-unit id="442fa94d1a746daef063d744439a280d970906c5" translate="yes" xml:space="preserve">
          <source>Retrieves the protocol of the current URL.</source>
          <target state="translated">현재 URL의 프로토콜을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a6b1bdb6527e17b45bea10a8051132a2bd7f9680" translate="yes" xml:space="preserve">
          <source>Retrieves the symbol used to represent the currency for the main country corresponding to a given locale. For example, '$' for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">지정된 로케일에 해당하는 주요 국가의 통화를 나타내는 데 사용되는 기호를 검색합니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 '$'입니다 .</target>
        </trans-unit>
        <trans-unit id="62b68e8fb05412bf928ee5018a77ed0f3a06f950" translate="yes" xml:space="preserve">
          <source>Retrieves the top-level ancestor of this control.</source>
          <target state="translated">이 컨트롤의 최상위 조상을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="aa096fc3d535b8aa4a5cd260e0000df20e6199a1" translate="yes" xml:space="preserve">
          <source>Retrieves the writing direction of a specified locale</source>
          <target state="translated">지정된 로케일의 쓰기 방향을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="37608000b3ed339e5f16bc764f6dd90e645eb5ec" translate="yes" xml:space="preserve">
          <source>Retry failed observable</source>
          <target state="translated">재시도 실패 관찰 가능</target>
        </trans-unit>
        <trans-unit id="fabe33d8df71778e413a5b2f3b1605aafd78a7ce" translate="yes" xml:space="preserve">
          <source>Retrying</source>
          <target state="translated">Retrying</target>
        </trans-unit>
        <trans-unit id="e045d3f68ecb2a9ab179cd5ccc4f9ed2f53d881e" translate="yes" xml:space="preserve">
          <source>Retrying a failed request</source>
          <target state="translated">실패한 요청 재시도</target>
        </trans-unit>
        <trans-unit id="2b12e698acb1ba6c903d19be957084057546e7da" translate="yes" xml:space="preserve">
          <source>Return a multi-valued &lt;em&gt;Observable&lt;/em&gt;</source>
          <target state="translated">다중 값 &lt;em&gt;Observable&lt;/em&gt; 반환&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce6401b54c472b21ebf87282fd3536bba146d90a" translate="yes" xml:space="preserve">
          <source>Return the proper type</source>
          <target state="translated">올바른 유형을 반환</target>
        </trans-unit>
        <trans-unit id="22f166f3a8097155522fa6cde793c082c126720e" translate="yes" xml:space="preserve">
          <source>Return to the &lt;code&gt;HeroesComponent&lt;/code&gt; class and import the &lt;code&gt;Hero&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 클래스로 돌아가서 &lt;code&gt;Hero&lt;/code&gt; 클래스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d5c7a31e6e610ac65c6e1046943edec7852d030d" translate="yes" xml:space="preserve">
          <source>Return to the &lt;code&gt;HeroesComponent&lt;/code&gt; class and import the &lt;code&gt;Hero&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 클래스로 돌아가 &lt;code&gt;Hero&lt;/code&gt; 인터페이스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="15b6eaab57754d7857b019549606807cc75c7efc" translate="yes" xml:space="preserve">
          <source>Return to the &lt;code&gt;HeroesRoutingModule&lt;/code&gt; and look at the route definitions again. The route to &lt;code&gt;HeroDetailComponent&lt;/code&gt; has a twist.</source>
          <target state="translated">&lt;code&gt;HeroesRoutingModule&lt;/code&gt; 로 돌아가서 경로 정의를 다시보십시오. &lt;code&gt;HeroDetailComponent&lt;/code&gt; 로의 경로 는 비틀기입니다.</target>
        </trans-unit>
        <trans-unit id="44956ac8ae9e2a4ecdd27ce6aab1d1f27cd178db" translate="yes" xml:space="preserve">
          <source>Return to the &lt;code&gt;HeroesRoutingModule&lt;/code&gt; and look at the route definitions again. The route to &lt;code&gt;HeroDetailComponent&lt;/code&gt; has an &lt;code&gt;:id&lt;/code&gt; token in the path.</source>
          <target state="translated">&lt;code&gt;HeroesRoutingModule&lt;/code&gt; 로 돌아가 경로 정의를 다시 확인합니다. 에 경로 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 는 있다 &lt;code&gt;:id&lt;/code&gt; 경로에 토큰을.</target>
        </trans-unit>
        <trans-unit id="d828ca0e9ea08d243356f92ea703a0ba729ddea9" translate="yes" xml:space="preserve">
          <source>Return whether the fixture is currently stable or has async tasks that have not been completed yet.</source>
          <target state="translated">조명기가 현재 안정적인지 또는 아직 완료되지 않은 비동기 작업이 있는지 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4c759e5b7434f36b33273928816a482d35d7ae45" translate="yes" xml:space="preserve">
          <source>Returning an empty &lt;code&gt;Observable&lt;/code&gt; in at least one resolver will cancel navigation.</source>
          <target state="translated">하나 이상의 리졸버에서 빈 &lt;code&gt;Observable&lt;/code&gt; 을 반환하면 탐색이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="4f7f8ef619ada81c9d3cf6aeb7128033828f387d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt;, meaning the route (and its subtree) is never reattached</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 이는 경로 (및 해당 하위 트리)가 다시 연결되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c5b458c171adb7e063484cc6b26a1ed9e3534891" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;null&lt;/code&gt; because this strategy does not store routes for later re-use.</source>
          <target state="translated">이 전략은 나중에 다시 사용할 수 있도록 경로를 저장하지 않기 때문에 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="31b6f2f8afa5084907c64e977c2d29807c5f1dba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the parameter name is in the map of parameters.</source>
          <target state="translated">매개 변수 이름이 매개 변수 맵에있는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="e7fae1bc71a80df0916fab59d3d0bbce1c99c55e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;string array&lt;/code&gt; of all parameter names in the map.</source>
          <target state="translated">지도에서 모든 매개 변수 이름 의 &lt;code&gt;string array&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7520d0246b1dfaa57f4cc1d151a9755d344138b6" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;string array&lt;/code&gt; of the parameter name value if found, or an empty &lt;code&gt;array&lt;/code&gt; if the parameter name value is not in the map. Use &lt;code&gt;getAll&lt;/code&gt; when a single parameter could have multiple values.</source>
          <target state="translated">발견되면 매개 변수 이름 값 의 &lt;code&gt;string array&lt;/code&gt; 을 리턴 하거나 매개 변수 이름 값이 맵에없는 경우 빈 &lt;code&gt;array&lt;/code&gt; 리턴합니다 . 단일 매개 변수가 여러 값을 가질 수있는 경우 &lt;code&gt;getAll&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a91ed815e83b0baac8a01854847d1a2378041552" translate="yes" xml:space="preserve">
          <source>Returns a copy of the internal results list as an Array.</source>
          <target state="translated">내부 결과 목록의 복사본을 배열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d94ca68c67198e9c4776c6a119c3aa618fe59259" translate="yes" xml:space="preserve">
          <source>Returns a map of the controls in this group.</source>
          <target state="translated">이 그룹 내의 컨트롤의 맵을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="959930affcf789b6e0419b438b108c876ce24526" translate="yes" xml:space="preserve">
          <source>Returns a multicasting observable of value changes for the control that emits every time the value of the control changes in the UI or programmatically. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤 값이 UI에서 또는 프로그래밍 방식으로 변경 될 때마다 발생하는 컨트롤의 값 변경을 관찰 할 수있는 멀티 캐스팅을 반환합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="107e276d96d6a102543f8a62f23d1155e5db586a" translate="yes" xml:space="preserve">
          <source>Returns a multicasting observable that emits a validation status whenever it is calculated for the control. If the control is not present, null is returned.</source>
          <target state="translated">컨트롤에 대해 계산 될 때마다 유효성 검사 상태를 내보내는 멀티 캐스팅 옵저버 블을 반환합니다. 컨트롤이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0b5430f1be00035d6dee74ab2e3497caa992ed62" translate="yes" xml:space="preserve">
          <source>Returns a promise that resolves when the fixture is stable.</source>
          <target state="translated">조명기가 안정되면 해결되는 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4990550a08319f4434935356f6d9efd0e58668c9" translate="yes" xml:space="preserve">
          <source>Returns a promise that:</source>
          <target state="translated">다음과 같은 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="52e96dc5a87562d263feafd81826e132f1a6efb4" translate="yes" xml:space="preserve">
          <source>Returns a singleton of the applicable &lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">적용 가능한 &lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 의 싱글 톤을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="84a0c6c0b16f831f58261673f0839d1959956241" translate="yes" xml:space="preserve">
          <source>Returns a singleton of the applicable &lt;code&gt;&lt;a href=&quot;testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">적용 가능한 &lt;code&gt;&lt;a href=&quot;testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 의 싱글 톤을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="148785c2479c7d9bb554065d713c6abe6c6dbadf" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../core/eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; for the given channel To publish methods to that channel just call next on the returned emitter</source>
          <target state="translated">주어진 채널에 대한 &lt;a href=&quot;../core/eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; 를 반환합니다 . 해당 채널에 메소드를 게시하려면 반환 된 이미 터에서 next를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="8da5a597db4bc0f6ec432a9d9308d95e9da35a38" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../core/eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; that emits every time a message is received on the given channel.</source>
          <target state="translated">주어진 채널에서 메시지가 수신 될 때마다 발생 하는 &lt;a href=&quot;../core/eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="90379e6b0f9012973ae986c17060828570e063d4" translate="yes" xml:space="preserve">
          <source>Returns an Observable that indicates when the application is stable or unstable.</source>
          <target state="translated">응용 프로그램이 안정적이거나 불안정한시기를 나타내는 Observable을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="94f380f019818c117dba9d43f8f18d8684669847" translate="yes" xml:space="preserve">
          <source>Returns an array representing the path to this group. Because this directive always lives at the top level of a form, it always an empty array.</source>
          <target state="translated">이 그룹의 경로를 나타내는 배열을 반환합니다. 이 지시문은 항상 양식의 최상위 수준에 있으므로 항상 빈 배열입니다.</target>
        </trans-unit>
        <trans-unit id="155d431da9d62a873f6e850ade436194b95b0387" translate="yes" xml:space="preserve">
          <source>Returns an array representing the path to this group. Because this directive always lives at the top level of a form, it is always an empty array.</source>
          <target state="translated">이 그룹의 경로를 나타내는 배열을 반환합니다. 이 지시문은 항상 양식의 최상위 수준에 있으므로 항상 빈 배열입니다.</target>
        </trans-unit>
        <trans-unit id="f6d76c18c8d505994d64d4ac83ecb037c821a791" translate="yes" xml:space="preserve">
          <source>Returns an array that represents the path from the top-level form to this control. Each index is the string name of the control on that level.</source>
          <target state="translated">최상위 폼에서이 컨트롤까지의 경로를 나타내는 배열을 반환합니다. 각 인덱스는 해당 수준에있는 컨트롤의 문자열 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d7dc6abf14f7c3babccf1b5a4b5d11ce5140e839" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; bound to this directive.</source>
          <target state="translated">이 지시문에 바인딩 된 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5771aa76009ea706ab69759b85ab117539a0d369" translate="yes" xml:space="preserve">
          <source>Returns the NgModuleFactory with the given id, if it exists and has been loaded. Factories for modules that do not specify an &lt;code&gt;id&lt;/code&gt; cannot be retrieved. Throws if the module cannot be found.</source>
          <target state="translated">주어진 ID를 가진 NgModuleFactory가 존재하고로드 된 경우 리턴합니다. &lt;code&gt;id&lt;/code&gt; 지정하지 않은 모듈의 팩토리는 검색 할 수 없습니다. 모듈을 찾을 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4ca0a50c3fca2082549a468a831472549928a58e" translate="yes" xml:space="preserve">
          <source>Returns the `returnValue for easy chaining.</source>
          <target state="translated">쉬운 연결을 위해`returnValue를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99a0772abc4a4d0560ed052027a50bba8faf5e56" translate="yes" xml:space="preserve">
          <source>Returns the current AngularJS global.</source>
          <target state="translated">현재 AngularJS 전역을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76896ee5aa447a015d1e3f770970df9c761b3ade" translate="yes" xml:space="preserve">
          <source>Returns the current DOM state.</source>
          <target state="translated">현재 DOM 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="753260ce89f96150978ce985c1ec5d9fc096332a" translate="yes" xml:space="preserve">
          <source>Returns the current platform.</source>
          <target state="translated">현재 플랫폼을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f1f1938d52f24273bce914cac464ee8c71448af" translate="yes" xml:space="preserve">
          <source>Returns the id for a given NgModule, if one is defined and known to the compiler.</source>
          <target state="translated">주어진 NgModule에 대한 ID를 정의하고 컴파일러에 알려면 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b10fb7efe60ef00eeec26c4d14d82b60e5a735d4" translate="yes" xml:space="preserve">
          <source>Returns the index of a view within the current container.</source>
          <target state="translated">현재 컨테이너 내에서보기의 색인을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="685d7793c2fdea82bda03d49834ca1a2e0281e80" translate="yes" xml:space="preserve">
          <source>Returns the number of attached views.</source>
          <target state="translated">첨부 된 뷰 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1ef218ddce71b26d809cb3b0e2d34d40cd637345" translate="yes" xml:space="preserve">
          <source>Returns the parameter name value (a &lt;code&gt;string&lt;/code&gt;) if present, or &lt;code&gt;null&lt;/code&gt; if the parameter name is not in the map. Returns the &lt;em&gt;first&lt;/em&gt; element if the parameter value is actually an array of values.</source>
          <target state="translated">매개 변수 이름 값 ( &lt;code&gt;string&lt;/code&gt; )이있는 경우, 또는 매개 변수 이름이 맵에없는 경우 &lt;code&gt;null&lt;/code&gt; 합니다. 매개 변수 값이 실제로 값의 배열 인 경우 &lt;em&gt;첫 번째&lt;/em&gt; 요소를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="56169a9aadf5ff2fb7cce3834b9ce80696412608" translate="yes" xml:space="preserve">
          <source>Returns the plural case based on the locale</source>
          <target state="translated">로케일을 기준으로 복수의 경우를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="380fa1bcd2c42d43ef67a91e7e808a5c6a02a351" translate="yes" xml:space="preserve">
          <source>Returns the underlying value of a wrapped value. Returns the given &lt;code&gt;value&lt;/code&gt; when it is not wrapped.</source>
          <target state="translated">래핑 된 값의 기본 값을 반환합니다. 주어진 &lt;code&gt;value&lt;/code&gt; 이 랩핑되지 않은 경우 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="be33dbe40b70d725fc736336ed93bc44951949b4" translate="yes" xml:space="preserve">
          <source>Returns this directive's instance.</source>
          <target state="translated">이 지시어의 인스턴스를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="6999fc4f6198357cb6702a6d5d603be1e88a50c5" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;value&lt;/code&gt; is a wrapped value.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 이 랩핑 된 값 이면 true를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="008d0baad2c265e5ce875e3fb51b3563dfe0270b" translate="yes" xml:space="preserve">
          <source>Returns whether Angular is in development mode. After called once, the value is locked and won't change any more.</source>
          <target state="translated">Angular가 개발 모드에 있는지 여부를 반환합니다. 한 번 호출 된 후에는 값이 잠겨 더 이상 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f7bd63a593c3d72343e636b6d30b6ff265ede31" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a browser platform.</source>
          <target state="translated">플랫폼 ID가 브라우저 플랫폼을 나타내는 지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eb3463ef7bb918e571033006cb5089f8007bed2a" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a server platform.</source>
          <target state="translated">플랫폼 ID가 서버 플랫폼을 나타내는 지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="46426546a60f23d30856828ec8bb98be50c537f6" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a web worker UI platform.</source>
          <target state="translated">플랫폼 ID가 웹 워커 UI 플랫폼을 나타내는 지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="db5ca9aee883ef6771887d8b2142f20e27df50d3" translate="yes" xml:space="preserve">
          <source>Returns whether a platform id represents a web worker app platform.</source>
          <target state="translated">플랫폼 ID가 웹 워커 앱 플랫폼을 나타내는 지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4592d84dc5f348a42136d673c6cf56e3cb917f21" translate="yes" xml:space="preserve">
          <source>Returns whether the form submission has been triggered.</source>
          <target state="translated">양식 제출이 트리거되었는지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="13d8a61dbec9f4a394bb72cab30c218c8f502ff6" translate="yes" xml:space="preserve">
          <source>Returns whether the url is activated</source>
          <target state="translated">URL 활성화 여부를 반환</target>
        </trans-unit>
        <trans-unit id="d131e2f1096212e8297448fa2a3ed3b14b0c08c0" translate="yes" xml:space="preserve">
          <source>Reusable animations</source>
          <target state="translated">재사용 가능한 애니메이션</target>
        </trans-unit>
        <trans-unit id="044ca545eb2790a6c6ef1fd11130e60d404007a5" translate="yes" xml:space="preserve">
          <source>Reusable code and schematics</source>
          <target state="translated">재사용 가능한 코드 및 회로도</target>
        </trans-unit>
        <trans-unit id="cdf3c28993ba188302f523414ecc593429b1a686" translate="yes" xml:space="preserve">
          <source>Revamp performance dashboards to detect regressions</source>
          <target state="translated">회귀를 감지하도록 성능 대시 보드 개선</target>
        </trans-unit>
        <trans-unit id="dcde9cd4b8296466e3bd34183c7111e2ff6a7e48" translate="yes" xml:space="preserve">
          <source>Reveal the Karma browser window (hidden earlier).</source>
          <target state="translated">Karma 브라우저 창을 표시합니다 (이전에 숨겨 짐).</target>
        </trans-unit>
        <trans-unit id="2fadbb2812b2ef573463a8821875c656982feba6" translate="yes" xml:space="preserve">
          <source>Reveal the Karma browser window. See &lt;a href=&quot;testing#set-up-testing&quot;&gt;Set up testing&lt;/a&gt; if you need help with this step.</source>
          <target state="translated">Karma 브라우저 창을 표시합니다. 이 단계에서 도움이 필요한 경우 &lt;a href=&quot;testing#set-up-testing&quot;&gt;테스트 설정을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="8d055d38f5c0a3e0c9db1044bf7ba2ca31ae0847" translate="yes" xml:space="preserve">
          <source>Reverse the routing modules and see for yourself that a click of the heroes link results in &quot;Page not found&quot;. Learn about inspecting the runtime router configuration &lt;a href=&quot;router#inspect-config&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">라우팅 모듈을 바꾸고 영웅 링크를 클릭하면 &quot;페이지를 찾을 수 없음&quot;이 표시됩니다. &lt;a href=&quot;router#inspect-config&quot;&gt;아래&lt;/a&gt; 에서 런타임 라우터 구성 검사에 대해 학습하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab87a2a165fb0ae265656dcc434b0c19b2fe3740" translate="yes" xml:space="preserve">
          <source>Reverse the routing modules to see a click of the heroes link resulting in &quot;Page not found&quot;. Learn about inspecting the runtime router configuration &lt;a href=&quot;router-tutorial-toh#inspect-config&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&quot;페이지를 찾을 수 없음&quot;이 표시되는 Heroes 링크를 클릭하려면 라우팅 모듈을 반대로하십시오. &lt;a href=&quot;router-tutorial-toh#inspect-config&quot;&gt;아래&lt;/a&gt; 에서 런타임 라우터 구성 검사에 대해 알아 봅니다 .</target>
        </trans-unit>
        <trans-unit id="054c451fddff5ab1c73024637e3aa243ccc3e918" translate="yes" xml:space="preserve">
          <source>Revise &lt;code&gt;app.component.html&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;app.component.html&lt;/code&gt; 수정</target>
        </trans-unit>
        <trans-unit id="02b9eaf6252456b99032585c41f9d8bb1199db0a" translate="yes" xml:space="preserve">
          <source>Revise &lt;code&gt;app.module.ts&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;app.module.ts&lt;/code&gt; 수정</target>
        </trans-unit>
        <trans-unit id="526efb66db2ed167a4361d6919a391c5e8861941" translate="yes" xml:space="preserve">
          <source>Revise the &lt;code&gt;AppComponent.color&lt;/code&gt; so that it has no initial value.</source>
          <target state="translated">초기 값이 없도록 &lt;code&gt;AppComponent.color&lt;/code&gt; 를 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="90064e65aa99ac5cce9d9fb931b5f9de258a5143" translate="yes" xml:space="preserve">
          <source>Revise the &lt;code&gt;AuthGuard&lt;/code&gt; to call it.</source>
          <target state="translated">&lt;code&gt;AuthGuard&lt;/code&gt; 를 수정하여 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="4195f90e6b177d112979e0ab6b8bb6978db0b081" translate="yes" xml:space="preserve">
          <source>Revise the &lt;code&gt;AuthGuard&lt;/code&gt; to call the &lt;code&gt;AuthService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AuthService&lt;/code&gt; 를 호출 하도록 &lt;code&gt;AuthGuard&lt;/code&gt; 를 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="26c2d280dfd9eceafc07a023851436a827c57010" translate="yes" xml:space="preserve">
          <source>Revise the directive's &lt;code&gt;onMouseEnter&lt;/code&gt; so that it first tries to highlight with the &lt;code&gt;highlightColor&lt;/code&gt;, then with the &lt;code&gt;defaultColor&lt;/code&gt;, and falls back to &quot;red&quot; if both properties are undefined.</source>
          <target state="translated">지시문의 &lt;code&gt;onMouseEnter&lt;/code&gt; 를 수정하여 먼저 highlightColor로 &lt;code&gt;highlightColor&lt;/code&gt; 한 다음 &lt;code&gt;defaultColor&lt;/code&gt; 로 강조 표시를 시도하고 두 특성이 모두 정의되지 않은 경우 &quot;빨간색&quot;으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="f4b9468f3ca81acd7916f78b3184fbdd2f9b032c" translate="yes" xml:space="preserve">
          <source>Rewrite the URL path</source>
          <target state="translated">URL 경로를 다시 작성하십시오</target>
        </trans-unit>
        <trans-unit id="61565bd0e6e1bd53d31bf12590488a389f290fc4" translate="yes" xml:space="preserve">
          <source>Rewriting the above code in a more verbose form explicitly shows the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">더 자세한 형식으로 위 코드를 다시 작성하면 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 이 명시 적으로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="ff2b7e955e8e3ee77790a5f99ac615d0d89017c9" translate="yes" xml:space="preserve">
          <source>Right click on the &lt;code&gt;app&lt;/code&gt; folder and use the &lt;code&gt;Angular Generator&lt;/code&gt; to generate a new component named &lt;code&gt;product-alerts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 폴더를 마우스 오른쪽 단추로 클릭 하고 &lt;code&gt;Angular Generator&lt;/code&gt; 를 사용하여 &lt;code&gt;product-alerts&lt;/code&gt; 라는 새 구성 요소를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1ac4fa529eb471b4d529106c0ecc1e6492ceced" translate="yes" xml:space="preserve">
          <source>Right click on the &lt;code&gt;app&lt;/code&gt; folder, choose &lt;code&gt;Angular Generator&lt;/code&gt;, and choose &lt;code&gt;Service&lt;/code&gt;. Name the new service &lt;code&gt;cart&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 폴더를 마우스 오른쪽 버튼으로 클릭 하고 &lt;code&gt;Angular Generator&lt;/code&gt; 를 선택한 다음 &lt;code&gt;Service&lt;/code&gt; 를 선택하십시오 . 새 서비스 &lt;code&gt;cart&lt;/code&gt; 이름을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b38eb08b4e9b126b47e4c9b2dac9d90a0a2170e" translate="yes" xml:space="preserve">
          <source>Right-click on each folder/file to be included in the project and select &lt;code&gt;Include in Project&lt;/code&gt;. Minimally, include the following folder/files:</source>
          <target state="translated">프로젝트에 포함 할 각 폴더 / 파일을 마우스 오른쪽 버튼으로 클릭하고 프로젝트에 &lt;code&gt;Include in Project&lt;/code&gt; 선택 하십시오 . 최소한 다음 폴더 / 파일을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="af3d65a7fc6146f3237ed2ba0c1702cc3f2cfa8b" translate="yes" xml:space="preserve">
          <source>Right-click on the &lt;code&gt;package.json&lt;/code&gt; file in Solution Explorer and select &lt;code&gt;Restore Packages&lt;/code&gt;. This uses &lt;code&gt;npm&lt;/code&gt; to install all of the packages defined in the &lt;code&gt;package.json&lt;/code&gt; file. It may take some time.</source>
          <target state="translated">솔루션 탐색기에서 &lt;code&gt;package.json&lt;/code&gt; 파일을 마우스 오른쪽 단추로 클릭하고 패키지 &lt;code&gt;Restore Packages&lt;/code&gt; 선택하십시오 . &lt;code&gt;npm&lt;/code&gt; 을 사용 하여 &lt;code&gt;package.json&lt;/code&gt; 파일에 정의 된 모든 패키지를 설치 합니다. 시간이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62c4306cd3d91e61f92eb219481d69f51fd86eca" translate="yes" xml:space="preserve">
          <source>Rob Dodson A11ycasts</source>
          <target state="translated">롭 도슨 A11ycasts</target>
        </trans-unit>
        <trans-unit id="11801df8662ff6cb03d3ec956162a9ae45e07ec3" translate="yes" xml:space="preserve">
          <source>Romanian Moldova</source>
          <target state="translated">루마니아 몰도바</target>
        </trans-unit>
        <trans-unit id="3a593226d64bb0f629617ebbd9d9b558d1265feb" translate="yes" xml:space="preserve">
          <source>Root elements of views attached to this container become siblings of the anchor element in the rendered view.</source>
          <target state="translated">이 컨테이너에 연결된 뷰의 루트 요소는 렌더링 된 뷰에서 앵커 요소의 형제가됩니다.</target>
        </trans-unit>
        <trans-unit id="e47076d8d44d0636716eca3a4ce2f4a2364642cd" translate="yes" xml:space="preserve">
          <source>RootRenderer</source>
          <target state="translated">RootRenderer</target>
        </trans-unit>
        <trans-unit id="0a21008d94a300dca90d49e6f81806911c386525" translate="yes" xml:space="preserve">
          <source>Routable &lt;code&gt;HeroDetailComponent&lt;/code&gt;</source>
          <target state="translated">라우팅 가능한 &lt;code&gt;HeroDetailComponent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4999528efe0f94f8f66b1dc05aad8ebaaae7b2be" translate="yes" xml:space="preserve">
          <source>Route</source>
          <target state="translated">Route</target>
        </trans-unit>
        <trans-unit id="1d098dadd2a113fca5483b7269eb8f8172a27581" translate="yes" xml:space="preserve">
          <source>Route Parameters</source>
          <target state="translated">경로 매개 변수</target>
        </trans-unit>
        <trans-unit id="a7d651a4081ec28bbb3827186b131c16ffdafd61" translate="yes" xml:space="preserve">
          <source>Route Parameters: Required or optional?</source>
          <target state="translated">경로 매개 변수 : 필수 또는 선택적?</target>
        </trans-unit>
        <trans-unit id="f7703ca8a8a1b64003243cb67412a89d0756e3fd" translate="yes" xml:space="preserve">
          <source>Route configuration</source>
          <target state="translated">경로 구성</target>
        </trans-unit>
        <trans-unit id="499e5b634c4acbd565b49089a1753cf91ed6160e" translate="yes" xml:space="preserve">
          <source>Route definition with a parameter</source>
          <target state="translated">매개 변수를 사용한 경로 정의</target>
        </trans-unit>
        <trans-unit id="48744980d12723784f78d6415e753bd38bd0c070" translate="yes" xml:space="preserve">
          <source>Route order</source>
          <target state="translated">경로 순서</target>
        </trans-unit>
        <trans-unit id="e8c7957c2f6af29f6e000acdb1ecf10f28014310" translate="yes" xml:space="preserve">
          <source>Route parameter: Required or optional?</source>
          <target state="translated">경로 매개 변수 : 필수 또는 선택적?</target>
        </trans-unit>
        <trans-unit id="ffcf6e62e2c4a177e419066b138fdcaa35cda4e0" translate="yes" xml:space="preserve">
          <source>Route parameters are always strings. The JavaScript (+) operator converts the string to a number, which is what a hero &lt;code&gt;id&lt;/code&gt; should be.</source>
          <target state="translated">경로 매개 변수는 항상 문자열입니다. JavaScript (+) 연산자는 문자열을 숫자로 변환하여 영웅 &lt;code&gt;id&lt;/code&gt; 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a5803d04896dd976baad68c703c000d522220eb6" translate="yes" xml:space="preserve">
          <source>Route parameters in the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 서비스의 경로 매개 변수</target>
        </trans-unit>
        <trans-unit id="2479c58d67b8cd75d2188ae0aa2e09aca7c40eea" translate="yes" xml:space="preserve">
          <source>Route parameters in the &lt;code&gt;ActivatedRoute&lt;/code&gt; service</source>
          <target state="translated">&lt;code&gt;ActivatedRoute&lt;/code&gt; 서비스의 경로 매개 변수</target>
        </trans-unit>
        <trans-unit id="ea847c00bd3793d8ac2f5beff4d6e6dfc6339b61" translate="yes" xml:space="preserve">
          <source>Route path used to produce the app shell.</source>
          <target state="translated">앱 셸을 생성하는 데 사용되는 경로 경로입니다.</target>
        </trans-unit>
        <trans-unit id="65c5554802bc7472e99bd212541606612e95f453" translate="yes" xml:space="preserve">
          <source>Route preloading strategies in Angular</source>
          <target state="translated">Angular에서 경로 사전로드 전략</target>
        </trans-unit>
        <trans-unit id="dd52984ae7cba778f43a4c8d28beaf1c717ad4d5" translate="yes" xml:space="preserve">
          <source>Route transition animations</source>
          <target state="translated">경로 전환 애니메이션</target>
        </trans-unit>
        <trans-unit id="09fff3e25be843063267f1e8f915631364d59683" translate="yes" xml:space="preserve">
          <source>Route-level code-splitting in Angular</source>
          <target state="translated">Angular에서 경로 수준 코드 분할</target>
        </trans-unit>
        <trans-unit id="5369c785771dbed629e0bdf458c7f8a9127c1ebf" translate="yes" xml:space="preserve">
          <source>Route.loadChildren</source>
          <target state="translated">Route.loadChildren</target>
        </trans-unit>
        <trans-unit id="7901b862ff6361dfa04c68c7e02a4b36b0029d38" translate="yes" xml:space="preserve">
          <source>Route.runGuardsAndResolvers</source>
          <target state="translated">Route.runGuardsAndResolvers</target>
        </trans-unit>
        <trans-unit id="a7f31fddbede90c80d136613062966d1cc17320e" translate="yes" xml:space="preserve">
          <source>RouteConfigLoadEnd</source>
          <target state="translated">RouteConfigLoadEnd</target>
        </trans-unit>
        <trans-unit id="4a3acc4aa66be0088e4aedf186f06a6e2a4a7fd5" translate="yes" xml:space="preserve">
          <source>RouteConfigLoadStart</source>
          <target state="translated">RouteConfigLoadStart</target>
        </trans-unit>
        <trans-unit id="651242926c2a26c9ff9c97b8deebf5c0afac4e67" translate="yes" xml:space="preserve">
          <source>RouteReuseStrategy</source>
          <target state="translated">RouteReuseStrategy</target>
        </trans-unit>
        <trans-unit id="63e278b608d3674f2e449e497ecf9dd31645873b" translate="yes" xml:space="preserve">
          <source>Routed</source>
          <target state="translated">Routed</target>
        </trans-unit>
        <trans-unit id="4aa7fc049dba10afd5fd43ca9108a77413a97dac" translate="yes" xml:space="preserve">
          <source>Routed NgModules</source>
          <target state="translated">라우팅 된 NgModules</target>
        </trans-unit>
        <trans-unit id="e75c1d493b3ae15785f39094208de3b1a3b676b0" translate="yes" xml:space="preserve">
          <source>Routed NgModules rarely have providers because you load a routed NgModule only when needed (such as for routing). Services listed in the NgModules' &lt;code&gt;provider&lt;/code&gt; array would not be available because the root injector wouldn&amp;rsquo;t know about the lazy-loaded NgModule. If you include providers, the lifetime of the provided services should be the same as the lifetime of the NgModule. Don't provide app-wide &lt;a href=&quot;singleton-services&quot;&gt;singleton services&lt;/a&gt; in a routed NgModule or in an NgModule that the routed NgModule imports.</source>
          <target state="translated">라우팅 된 NgModule은 필요할 때만 (예 : 라우팅을 위해) 라우팅 된 NgModule을로드하기 때문에 공급자가 거의 없습니다. NgModules의 &lt;code&gt;provider&lt;/code&gt; 배열에 나열된 서비스 는 루트 인젝터가 지연로드 된 NgModule에 대해 알지 못하기 때문에 사용할 수 없습니다. 공급자를 포함하는 경우 제공된 서비스의 수명은 NgModule의 수명과 동일해야합니다. 라우팅 된 NgModule 또는 라우팅 된 NgModule이 가져 오는 NgModule에서 앱 전체의 &lt;a href=&quot;singleton-services&quot;&gt;싱글 톤 서비스&lt;/a&gt; 를 제공하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="71069e45ec292c555a106707f1f656c0d2d0d637" translate="yes" xml:space="preserve">
          <source>Routed apps must fallback to &lt;code&gt;index.html&lt;/code&gt;</source>
          <target state="translated">라우팅 된 앱은 &lt;code&gt;index.html&lt;/code&gt; 로 대체되어야합니다.</target>
        </trans-unit>
        <trans-unit id="016472215ceed1c743e0daedc118bddb67baf72a" translate="yes" xml:space="preserve">
          <source>Routed components</source>
          <target state="translated">라우팅 된 구성 요소</target>
        </trans-unit>
        <trans-unit id="ba3e918a9570b90eae58cfc534854c396cf8bc2d" translate="yes" xml:space="preserve">
          <source>Routed components are also &lt;em&gt;entry components&lt;/em&gt; because they need to be loaded dynamically. The router creates them and drops them into the DOM near a &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">라우팅 된 구성 요소는 동적으로로드되어야하기 때문에 &lt;em&gt;시작 구성 요소&lt;/em&gt; 이기도 합니다. 라우터는이를 생성하여 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 근처의 DOM에 드롭합니다 .</target>
        </trans-unit>
        <trans-unit id="67cf95f70f44822205bdd673b9c8ccba20a8b833" translate="yes" xml:space="preserve">
          <source>Routed feature modules are domain feature modules whose top components are the targets of router navigation routes.</source>
          <target state="translated">라우팅 된 기능 모듈은 최상위 구성 요소가 라우터 탐색 경로의 대상인 도메인 기능 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="0b8c586773a94229d06c71a6421bc2882dc9bd64" translate="yes" xml:space="preserve">
          <source>Routed feature modules don&amp;rsquo;t export anything because their components never appear in the template of an external component.</source>
          <target state="translated">라우팅 된 피쳐 모듈은 해당 컴포넌트가 외부 컴포넌트의 템플릿에 나타나지 않기 때문에 아무것도 내 보내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1528a93bc369086753839625569731cae3802abb" translate="yes" xml:space="preserve">
          <source>Routed feature modules rarely have providers for reasons explained in &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Feature Modules&lt;/a&gt;. When they do, the lifetime of the provided services should be the same as the lifetime of the module. Don't provide application-wide singleton services in a routed feature module or in a module that the routed module imports.</source>
          <target state="translated">라우팅 된 기능 모듈에는 &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;지연 로딩 기능 모듈에&lt;/a&gt; 설명 된 이유로 제공자가 거의 없습니다 . 제공되는 서비스의 수명은 모듈의 수명과 같아야합니다. 라우팅 된 기능 모듈 또는 라우팅 된 모듈이 가져 오는 모듈에서 응용 프로그램 전체의 싱글 톤 서비스를 제공하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9968997d4112da7fb44dfb5f2b8a732c4648e672" translate="yes" xml:space="preserve">
          <source>Routed feature modules.</source>
          <target state="translated">라우팅 된 기능 모듈.</target>
        </trans-unit>
        <trans-unit id="6dcf16e1c5d3e9fd2ae4a4d54c174448fe43e1b6" translate="yes" xml:space="preserve">
          <source>Router</source>
          <target state="translated">Router</target>
        </trans-unit>
        <trans-unit id="20a71bbc03edf5ed5e64fa04419f0992b0abf45f" translate="yes" xml:space="preserve">
          <source>Router API</source>
          <target state="translated">라우터 API</target>
        </trans-unit>
        <trans-unit id="c9caa7dc0a815255ed3e9e6e4c26d73162fe1719" translate="yes" xml:space="preserve">
          <source>Router Event</source>
          <target state="translated">라우터 이벤트</target>
        </trans-unit>
        <trans-unit id="0f73a17a1f2a2bbb638de3d832df5e594dea5d16" translate="yes" xml:space="preserve">
          <source>Router Part</source>
          <target state="translated">라우터 부분</target>
        </trans-unit>
        <trans-unit id="dcd501405ccdc31c12450e33bbcc37be8e594d7a" translate="yes" xml:space="preserve">
          <source>Router Reference</source>
          <target state="translated">라우터 참조</target>
        </trans-unit>
        <trans-unit id="e327a89af2b96123ec62cb19a044d66dbef61ea5" translate="yes" xml:space="preserve">
          <source>Router events</source>
          <target state="translated">라우터 이벤트</target>
        </trans-unit>
        <trans-unit id="3bd5a8b8c83786c470caad73590858dee7d5dc5f" translate="yes" xml:space="preserve">
          <source>Router events summary</source>
          <target state="translated">라우터 이벤트 요약</target>
        </trans-unit>
        <trans-unit id="8a2ff01e8d822bdcc5b80e3844cb3328940e0bc1" translate="yes" xml:space="preserve">
          <source>Router events that allow you to track the lifecycle of the router.</source>
          <target state="translated">라우터의 수명주기를 추적 할 수있는 라우터 이벤트.</target>
        </trans-unit>
        <trans-unit id="6017508132ac5f836b7e891d8656cb8599343258" translate="yes" xml:space="preserve">
          <source>Router imports</source>
          <target state="translated">라우터 수입</target>
        </trans-unit>
        <trans-unit id="f7cba59fb6d500f4c6efd266eb03148e4f419021" translate="yes" xml:space="preserve">
          <source>Router links</source>
          <target state="translated">라우터 링크</target>
        </trans-unit>
        <trans-unit id="efde38948f0e8b7ecdf1331fdf1efbaf203568f6" translate="yes" xml:space="preserve">
          <source>Router outlet</source>
          <target state="translated">라우터 콘센트</target>
        </trans-unit>
        <trans-unit id="9d2a3315ff18f8570b687d4bb382c506cc531c4f" translate="yes" xml:space="preserve">
          <source>Router services (which these tests are stubbing).</source>
          <target state="translated">라우터 서비스 (이러한 테스트는 스터 빙)</target>
        </trans-unit>
        <trans-unit id="ee0d84f55e2c594e65051a4a6aed998f72e72531" translate="yes" xml:space="preserve">
          <source>Router setup factory function used for testing.</source>
          <target state="translated">테스트에 사용되는 라우터 설정 공장 기능.</target>
        </trans-unit>
        <trans-unit id="f6ed7eec84cc6256be56b3e80ba06058f932282d" translate="yes" xml:space="preserve">
          <source>Router state</source>
          <target state="translated">라우터 상태</target>
        </trans-unit>
        <trans-unit id="45968a78380cdd9e62f5cdcda9b99b5197c57eb8" translate="yes" xml:space="preserve">
          <source>Router terminology</source>
          <target state="translated">라우터 용어</target>
        </trans-unit>
        <trans-unit id="6730e09875e0646c71842237e12f551236a5fcfc" translate="yes" xml:space="preserve">
          <source>Router tutorial</source>
          <target state="translated">라우터 튜토리얼</target>
        </trans-unit>
        <trans-unit id="d30126adb8e6f3273c590876535f06e5615b8906" translate="yes" xml:space="preserve">
          <source>Router tutorial: tour of heroes</source>
          <target state="translated">라우터 튜토리얼 : 영웅 둘러보기</target>
        </trans-unit>
        <trans-unit id="8453ef4bcd0e4dd39e7c11a2cd0fd98e018a3097" translate="yes" xml:space="preserve">
          <source>Router#createUrlTree</source>
          <target state="translated">Router#createUrlTree</target>
        </trans-unit>
        <trans-unit id="7aadea953aab730bd25907e8e77a4d4d3b75d32d" translate="yes" xml:space="preserve">
          <source>Router#navigateByUrl</source>
          <target state="translated">Router#navigateByUrl</target>
        </trans-unit>
        <trans-unit id="2260442b446faec6e93544c9f54ab2f50b2c867c" translate="yes" xml:space="preserve">
          <source>Router.createUrlTree() method</source>
          <target state="translated">Router.createUrlTree () 메서드</target>
        </trans-unit>
        <trans-unit id="375931ad77fd0bdd1629c69c9b3dfcf50f1500cb" translate="yes" xml:space="preserve">
          <source>Router.navigate() method</source>
          <target state="translated">Router.navigate () 메서드</target>
        </trans-unit>
        <trans-unit id="8be8d6c5f663a441b86c3a254d7be04128670f87" translate="yes" xml:space="preserve">
          <source>Router.navigateByUrl() method</source>
          <target state="translated">Router.navigateByUrl () 메서드</target>
        </trans-unit>
        <trans-unit id="7ed498920d3d30c48ee73d35a767061f7470f0a1" translate="yes" xml:space="preserve">
          <source>RouterEvent</source>
          <target state="translated">RouterEvent</target>
        </trans-unit>
        <trans-unit id="de2af4888e9ea0db85af2b74ffcb4e933535817f" translate="yes" xml:space="preserve">
          <source>RouterLink</source>
          <target state="translated">RouterLink</target>
        </trans-unit>
        <trans-unit id="22f41d0285deb0c22c1f7b8bc0b124bbdf5a91af" translate="yes" xml:space="preserve">
          <source>RouterLink will use these to generate this link: &lt;code&gt;/user/bob#education?debug=true&lt;/code&gt;.</source>
          <target state="translated">: RouterLink이 링크를 생성하려면 다음을 사용합니다 &lt;code&gt;/user/bob#education?debug=true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f548535b52b73d8247bd413d36d6c374315f70ca" translate="yes" xml:space="preserve">
          <source>RouterLinkActive</source>
          <target state="translated">RouterLinkActive</target>
        </trans-unit>
        <trans-unit id="583ae049dc2a1f98b793a44f668ad4211c1c8243" translate="yes" xml:space="preserve">
          <source>RouterLinkWithHref</source>
          <target state="translated">RouterLinkWithHref</target>
        </trans-unit>
        <trans-unit id="5ee5a5dcbfcc25b7a813db81db77cd1ebb6b8f13" translate="yes" xml:space="preserve">
          <source>RouterModule</source>
          <target state="translated">RouterModule</target>
        </trans-unit>
        <trans-unit id="ec1b3ce9eaffb47220d9b1c9f74485c9408bfb28" translate="yes" xml:space="preserve">
          <source>RouterModule can be imported multiple times: once per lazily-loaded bundle. Since the router deals with a global shared resource--location, we cannot have more than one router service active.</source>
          <target state="translated">RouterModule은 느리게로드 된 번들 당 한 번 여러 번 가져올 수 있습니다. 라우터는 글로벌 공유 리소스 위치를 처리하므로 둘 이상의 라우터 서비스를 활성화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0592a75851949d90289ede09a175698e2722afc3" translate="yes" xml:space="preserve">
          <source>RouterOutlet</source>
          <target state="translated">RouterOutlet</target>
        </trans-unit>
        <trans-unit id="19d6508f53c453a3665e5ade65163da34fad0dc5" translate="yes" xml:space="preserve">
          <source>RouterPreloader</source>
          <target state="translated">RouterPreloader</target>
        </trans-unit>
        <trans-unit id="c97a89eca6604d8270d9752e65f96c8d8339fd21" translate="yes" xml:space="preserve">
          <source>RouterState</source>
          <target state="translated">RouterState</target>
        </trans-unit>
        <trans-unit id="ebb7712b3bab6ecbd40eec79304b637403efc465" translate="yes" xml:space="preserve">
          <source>RouterStateSnapshot</source>
          <target state="translated">RouterStateSnapshot</target>
        </trans-unit>
        <trans-unit id="b4aede4f66327196edebd30c01396287d034b92d" translate="yes" xml:space="preserve">
          <source>RouterTestingModule</source>
          <target state="translated">RouterTestingModule</target>
        </trans-unit>
        <trans-unit id="cce3fb79322fa3b3b21dd212219e00ad73809850" translate="yes" xml:space="preserve">
          <source>RouterUpgradeInitializer</source>
          <target state="translated">RouterUpgradeInitializer</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="a0789358a4f46e2ebe563bed4a6980b2fc661fa6" translate="yes" xml:space="preserve">
          <source>Routes provided by feature modules are combined together into their imported module's routes by the router. This allows you to continue defining the feature module routes without modifying the main route configuration.</source>
          <target state="translated">기능 모듈에서 제공 한 경로는 라우터를 통해 가져온 모듈의 경로로 결합됩니다. 이를 통해 기본 경로 구성을 수정하지 않고 기능 모듈 경로를 계속 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="066004a8923150ca5d1c931074d51e29a6e5247a" translate="yes" xml:space="preserve">
          <source>RoutesRecognized</source>
          <target state="translated">RoutesRecognized</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="3d82d49f8f491e637994cdce0498148fd7c6ad99" translate="yes" xml:space="preserve">
          <source>Routing &amp;amp; Navigation</source>
          <target state="translated">라우팅 및 탐색</target>
        </trans-unit>
        <trans-unit id="1fc2da089a69dcd229e6acdefe8ee5a0c6c78c69" translate="yes" xml:space="preserve">
          <source>Routing NgModules</source>
          <target state="translated">NgModules 라우팅</target>
        </trans-unit>
        <trans-unit id="966c1b407d21895e6ef97921a5cf41b56fa4a5e4" translate="yes" xml:space="preserve">
          <source>Routing allows you to display specific views of your application depending on the URL path. To add this functionality to your sample application, you need to update the &lt;code&gt;app.module.ts&lt;/code&gt; file to use the module, &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;. You import this module from &lt;code&gt;@angular/router&lt;/code&gt;.</source>
          <target state="translated">라우팅을 사용하면 URL 경로에 따라 애플리케이션의 특정보기를 표시 할 수 있습니다. 샘플 응용 프로그램에이 기능을 추가하려면 업데이트해야 &lt;code&gt;app.module.ts&lt;/code&gt; 의 모듈을 사용하는 파일을 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 . 이 모듈은 &lt;code&gt;@angular/router&lt;/code&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="bd47aa764713f13755c52969584e41a29ba07917" translate="yes" xml:space="preserve">
          <source>Routing and Navigation guide</source>
          <target state="translated">라우팅 및 내비게이션 가이드</target>
        </trans-unit>
        <trans-unit id="e5f2c27428e81339d66bbee40518d1704f5b98bd" translate="yes" xml:space="preserve">
          <source>Routing and focus management</source>
          <target state="translated">라우팅 및 포커스 관리</target>
        </trans-unit>
        <trans-unit id="a4ad2be3fe4f2c3262a7832eaafd772969077143" translate="yes" xml:space="preserve">
          <source>Routing and navigation</source>
          <target state="translated">라우팅 및 탐색</target>
        </trans-unit>
        <trans-unit id="91939be2e26369bf8167a77a45f757571d014176" translate="yes" xml:space="preserve">
          <source>Routing component</source>
          <target state="translated">라우팅 구성 요소</target>
        </trans-unit>
        <trans-unit id="4d2855daa195cb06e0cf06083900dbb98e02d3ba" translate="yes" xml:space="preserve">
          <source>Routing enables users to navigate between different routes in an application. When a user navigates from one route to another, the Angular router maps the URL path to a relevant component and displays its view. Animating this route transition can greatly enhance the user experience.</source>
          <target state="translated">라우팅을 통해 사용자는 응용 프로그램에서 서로 다른 경로를 탐색 할 수 있습니다. 사용자가 한 경로에서 다른 경로로 탐색하면 Angular 라우터는 URL 경로를 관련 구성 요소에 매핑하고 해당보기를 표시합니다. 이 경로 전환에 애니메이션을 적용하면 사용자 경험을 크게 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bc09fa9752467a5b8e84dc1d99f00641b999ff7" translate="yes" xml:space="preserve">
          <source>Routing is handled differently in Angular.</source>
          <target state="translated">라우팅은 Angular에서 다르게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="2be76514099a45153e077cc16d4fc1397a976264" translate="yes" xml:space="preserve">
          <source>Routing is pretty complicated. Testing the &lt;code&gt;DashboardComponent&lt;/code&gt; seemed daunting in part because it involves the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, which it injects together with the &lt;code&gt;HeroService&lt;/code&gt;.</source>
          <target state="translated">라우팅은 매우 복잡합니다. &lt;code&gt;DashboardComponent&lt;/code&gt; 를 테스트하는 것은 &lt;code&gt;HeroService&lt;/code&gt; 와 함께 주입되는 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 를 포함하기 때문에 부분적으로 어려워 보였다 .</target>
        </trans-unit>
        <trans-unit id="437a31b77c6561cb8b327ca8e6cc18ebab53ee9d" translate="yes" xml:space="preserve">
          <source>Routing makes more sense when there are multiple views. So far there's only the heroes view.</source>
          <target state="translated">뷰가 여러 개인 경우 라우팅이 더 적합합니다. 지금까지는 영웅의 견해 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="7283c74453c37be2f7673c78a56bf357906cde32" translate="yes" xml:space="preserve">
          <source>Routing modules.</source>
          <target state="translated">라우팅 모듈.</target>
        </trans-unit>
        <trans-unit id="989d13ef7b3bed68cad24dff15cf0484f141edd6" translate="yes" xml:space="preserve">
          <source>Routing to a named outlet has revealed a previously hidden router truth: you can target multiple outlets with multiple routes in the same &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">명명 된 콘센트로 라우팅하면 이전에 숨겨진 라우터 사실이 밝혀졌습니다 . 동일한 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 지시문 에서 여러 경로를 가진 여러 콘센트를 대상으로 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="909c5e44c727e12fae26e0de19c17a0b3238b5cd" translate="yes" xml:space="preserve">
          <source>Routing to a named outlet has revealed a router feature: you can target multiple outlets with multiple routes in the same &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">명명 된 콘센트로 라우팅하면 라우터 기능이 드러났습니다 . 동일한 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 지시문 에서 여러 경로가있는 여러 콘센트를 대상으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35265d9ad61662d4c22afdbe7b3e60a1533d30cd" translate="yes" xml:space="preserve">
          <source>Rule of One</source>
          <target state="translated">하나의 규칙</target>
        </trans-unit>
        <trans-unit id="772eb00dd2d7149616211e31f68e2e17f450fa35" translate="yes" xml:space="preserve">
          <source>Rules are used in &lt;code&gt;BUILD.bazel&lt;/code&gt; files, which are markers for the packages in your workspace. Each &lt;code&gt;BUILD.bazel&lt;/code&gt; file declares a separate package to Bazel, though you can have more coarse-grained distributions so that the packages you publish (for example, to &lt;code&gt;npm&lt;/code&gt;) can be made up of many Bazel packages.</source>
          <target state="translated">규칙은 &lt;code&gt;BUILD.bazel&lt;/code&gt; 파일 에서 사용되며 , 이는 작업 공간의 패키지에 대한 마커입니다. 각 &lt;code&gt;BUILD.bazel&lt;/code&gt; 파일은 Bazel에 별도의 패키지를 선언하지만 게시 한 패키지 (예 : &lt;code&gt;npm&lt;/code&gt; )를 여러 Bazel 패키지로 구성 할 수 있도록 더 세분화 된 배포판을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71150ad576e31493950dd9c1983b975e6ab15dfe" translate="yes" xml:space="preserve">
          <source>Rules can collect option values from the caller and inject them into templates. The options available to your rules, with their allowed values and defaults, are defined in the schematic's JSON schema file, &lt;code&gt;&amp;lt;schematic&amp;gt;/schema.json&lt;/code&gt;. You can define variable or enumerated data types for the schema using TypeScript interfaces.</source>
          <target state="translated">규칙은 호출자로부터 옵션 값을 수집하여 템플릿에 삽입 할 수 있습니다. 허용되는 값과 기본값을 사용하여 규칙에 사용할 수있는 옵션은 회로도의 JSON 스키마 파일 &lt;code&gt;&amp;lt;schematic&amp;gt;/schema.json&lt;/code&gt; 에 정의되어 있습니다. TypeScript 인터페이스를 사용하여 스키마에 대한 변수 또는 열거 데이터 유형을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cd4c81e8a8508bdb9ab46b2a8539038203683b1" translate="yes" xml:space="preserve">
          <source>Rules can make use of utilities provided with the &lt;code&gt;@schematics/angular&lt;/code&gt; package. Look for helper functions for working with modules, dependencies, TypeScript, AST, JSON, Angular CLI workspaces and projects, and more.</source>
          <target state="translated">규칙은 &lt;code&gt;@schematics/angular&lt;/code&gt; 패키지 와 함께 제공된 유틸리티를 사용할 수 있습니다 . 모듈, 종속성, TypeScript, AST, JSON, Angular CLI 작업 공간 및 프로젝트 등을 다루는 데 도움이되는 도우미 기능을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="afdb076e5357d52f8b34a4a2605c9258f10ac2d8" translate="yes" xml:space="preserve">
          <source>Run build when files change.</source>
          <target state="translated">파일이 변경되면 빌드를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="2ca51db9e9e1bd32babcf957fa7954b5b34775f8" translate="yes" xml:space="preserve">
          <source>Run change detection through the test fixture.</source>
          <target state="translated">테스트 픽스처를 통해 변경 감지를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="068294f6f29824851c58dd179d6c0cef35231534" translate="yes" xml:space="preserve">
          <source>Run for 200ms, with no delay. Use a standard curve to start slow, accelerate in the middle, and then decelerate slowly at the end: &lt;code&gt;'0.2s ease-in-out'&lt;/code&gt;</source>
          <target state="translated">지연없이 200ms 동안 실행하십시오. 표준 곡선을 사용하여 느리게 시작하고 중간에서 가속 한 다음 끝에서 느리게 감속합니다 : &lt;code&gt;'0.2s ease-in-out'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a45e0b0ecf30a3dcbd716cbe310b10e2f09ae9f4" translate="yes" xml:space="preserve">
          <source>Run or download the example app: live example.</source>
          <target state="translated">예제 앱을 실행하거나 다운로드하십시오 : 라이브 예제.</target>
        </trans-unit>
        <trans-unit id="060c6cb96d711efbd8f9f02251ab492610eefafb" translate="yes" xml:space="preserve">
          <source>Run or restart &lt;code&gt;ng serve&lt;/code&gt; to see Bootstrap 4 working in your app.</source>
          <target state="translated">&lt;code&gt;ng serve&lt;/code&gt; 를 실행하거나 다시 시작 하면 앱에서 Bootstrap 4가 작동 하는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46352351f791855d3c2f65ee42412454aeae6f9c" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;ng generate component &amp;lt;component-name&amp;gt;&lt;/code&gt; command, where &lt;code&gt;&amp;lt;component-name&amp;gt;&lt;/code&gt; is the name of your new component.</source>
          <target state="translated">(가) 실행 &lt;code&gt;ng generate component &amp;lt;component-name&amp;gt;&lt;/code&gt; 명령, &lt;code&gt;&amp;lt;component-name&amp;gt;&lt;/code&gt; 새 구성 요소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b93ab635af3e75616e92de8c93680fabeb103110" translate="yes" xml:space="preserve">
          <source>Run the CLI command &lt;code&gt;ng new&lt;/code&gt; and provide the name &lt;code&gt;angular-tour-of-heroes&lt;/code&gt;, as shown here:</source>
          <target state="translated">다음과 같이 CLI 명령 &lt;code&gt;ng new&lt;/code&gt; 를 실행하고 &lt;code&gt;angular-tour-of-heroes&lt;/code&gt; 이름을 제공 하십시오.</target>
        </trans-unit>
        <trans-unit id="82cab9a40307d67c94e3b9c3212e8c81c9b2b965" translate="yes" xml:space="preserve">
          <source>Run the CLI command &lt;code&gt;ng new&lt;/code&gt; and provide the name &lt;code&gt;my-app&lt;/code&gt;, as shown here:</source>
          <target state="translated">다음과 같이 CLI 명령 &lt;code&gt;ng new&lt;/code&gt; 를 실행하고 이름을 &lt;code&gt;my-app&lt;/code&gt; 로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="cb6abee295cd8ce51ba0ce7cf4dadde76da56b77" translate="yes" xml:space="preserve">
          <source>Run the TypeScript type checker in a forked process.</source>
          <target state="translated">분기 된 프로세스에서 TypeScript 형식 검사기를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="637cf7b01da961672ed3929c7fc2277c4154b503" translate="yes" xml:space="preserve">
          <source>Run the app again. In the &lt;em&gt;Dashboard&lt;/em&gt;, enter some text in the search box. If you enter characters that match any existing hero names, you'll see something like this.</source>
          <target state="translated">앱을 다시 실행하십시오. 에서 &lt;em&gt;대시 보드&lt;/em&gt; , 검색 상자에 텍스트를 입력합니다. 기존 영웅 이름과 일치하는 문자를 입력하면 다음과 같은 내용이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3de566c3ff5513c110b440043fe78a3e0bdf40a0" translate="yes" xml:space="preserve">
          <source>Run the app and confirm that the background color appears when the mouse hovers over the &lt;code&gt;p&lt;/code&gt; and disappears as it moves out.</source>
          <target state="translated">앱을 실행하고 마우스를 &lt;code&gt;p&lt;/code&gt; 위로 가져 가면 사라질 때 배경색이 나타나는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="e525fb203c5383105962baca5f1146f5282c4d9b" translate="yes" xml:space="preserve">
          <source>Run the app and confirm that the background color appears when the pointer hovers over the paragraph element and disappears as the pointer moves out.</source>
          <target state="translated">앱을 실행하고 포인터를 단락 요소 위로 가져 가면 배경색이 나타나고 포인터가 밖으로 이동하면 사라지는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="be0cc4c6edcb8734c3bd94a463ba473cf3f5ab60" translate="yes" xml:space="preserve">
          <source>Run the app.</source>
          <target state="translated">앱을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9e860059aa575ffd52495d7de9023b9ac264f3f7" translate="yes" xml:space="preserve">
          <source>Run the application</source>
          <target state="translated">애플리케이션 실행</target>
        </trans-unit>
        <trans-unit id="4aca6ffb9543fd259073ab5c7da3efa763512ace" translate="yes" xml:space="preserve">
          <source>Run the application again and click the &lt;strong&gt;New Hero&lt;/strong&gt; button.</source>
          <target state="translated">애플리케이션을 다시 실행하고 &lt;strong&gt;New Hero&lt;/strong&gt; 버튼을 클릭 합니다.</target>
        </trans-unit>
        <trans-unit id="d716cb59d6cea855b3933093654ccc42fc8b8a40" translate="yes" xml:space="preserve">
          <source>Run the application again, click the &lt;em&gt;New Hero&lt;/em&gt; button, and the form clears. The &lt;em&gt;required&lt;/em&gt; bars to the left of the input box are red, indicating invalid &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;power&lt;/code&gt; properties. That's understandable as these are required fields. The error messages are hidden because the form is pristine; you haven't changed anything yet.</source>
          <target state="translated">응용 프로그램을 다시 실행하고 &lt;em&gt;New Hero&lt;/em&gt; 버튼을 클릭 하면 양식이 지워집니다. &lt;em&gt;필요한&lt;/em&gt; 입력 상자의 왼쪽에있는 바는 무효 나타내는 빨간색 &lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;power&lt;/code&gt; 특성을. 필수 필드이므로 이해할 수 있습니다. 양식이 깨끗하기 때문에 오류 메시지가 숨겨져 있습니다. 아직 아무것도 변경하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="2573ed62ad7d1665057774ad153817189547f479" translate="yes" xml:space="preserve">
          <source>Run the application now. Notice that the button is enabled&amp;mdash;although it doesn't do anything useful yet.</source>
          <target state="translated">지금 애플리케이션을 실행하십시오. 아직 유용한 기능은 없지만 버튼이 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccff4707e86630517864110df9f9d8d84e3a7aea" translate="yes" xml:space="preserve">
          <source>Run the explorer to generate a graphical representation of one of the bundles. The following example displays the graph for the &lt;em&gt;main&lt;/em&gt; bundle.</source>
          <target state="translated">탐색기를 실행하여 번들 중 하나의 그래픽 표현을 생성하십시오. 다음 예제는 &lt;em&gt;기본&lt;/em&gt; 번들에 대한 그래프를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="f0bc9f3b3c3bc1f4e68429d60ce154eff1b5501e" translate="yes" xml:space="preserve">
          <source>Run the following command:</source>
          <target state="translated">다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="91f519c31bd6a0275e49b9f9319667b681d0c23e" translate="yes" xml:space="preserve">
          <source>Run the live example.</source>
          <target state="translated">라이브 예제를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c363909a1a4ae97e6614091f5308fcf694b28bc0" translate="yes" xml:space="preserve">
          <source>Run the schematic</source>
          <target state="translated">회로도 실행</target>
        </trans-unit>
        <trans-unit id="93221d2ef90f52a4ee749e7679f58a5ea7e54d50" translate="yes" xml:space="preserve">
          <source>RunGuardsAndResolvers</source>
          <target state="translated">RunGuardsAndResolvers</target>
        </trans-unit>
        <trans-unit id="b755fe8892c1c8fa77922a9a282da57394e1660d" translate="yes" xml:space="preserve">
          <source>Running Angular applications in platform-webworker</source>
          <target state="translated">platform-webworker에서 Angular 애플리케이션 실행</target>
        </trans-unit>
        <trans-unit id="88f4704cfe8a8379ae32d750db89124b2126ff33" translate="yes" xml:space="preserve">
          <source>Running Angular itself in a Web Worker via &lt;a href=&quot;../api/platform-webworker&quot;&gt;&lt;strong&gt;@angular/platform-webworker&lt;/strong&gt;&lt;/a&gt; is not yet supported in Angular CLI.</source>
          <target state="translated">&lt;a href=&quot;../api/platform-webworker&quot;&gt;&lt;strong&gt;@ angular / platform-webworker&lt;/strong&gt;&lt;/a&gt; 를 통해 웹 워커에서 Angular 자체를 실행하는 것은 아직 Angular CLI에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d022659880a5b5d608d3ca2061805a65346cddd" translate="yes" xml:space="preserve">
          <source>Running Bazel directly</source>
          <target state="translated">Bazel을 직접 실행</target>
        </trans-unit>
        <trans-unit id="c74de0e486190406c0501daed0200699a38ec14f" translate="yes" xml:space="preserve">
          <source>Running a schematic</source>
          <target state="translated">회로도 실행</target>
        </trans-unit>
        <trans-unit id="520572e2119d340adf652ad6df921c669212541c" translate="yes" xml:space="preserve">
          <source>Running functions via &lt;a href=&quot;ngzone#runOutsideAngular&quot;&gt;runOutsideAngular&lt;/a&gt; allows you to escape Angular's zone and do work that doesn't trigger Angular change-detection or is subject to Angular's error handling.</source>
          <target state="translated">&lt;a href=&quot;ngzone#runOutsideAngular&quot;&gt;runOutsideAngular&lt;/a&gt; 를 통해 함수를 실행 하면 Angular의 영역을 벗어나 Angular 변경 감지를 트리거하지 않거나 Angular의 오류 처리 대상인 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c44c7092a26c675e6572669144a2ed64977f62e2" translate="yes" xml:space="preserve">
          <source>Running functions via &lt;code&gt;run&lt;/code&gt; allows you to reenter Angular zone from a task that was executed outside of the Angular zone (typically started via &lt;a href=&quot;ngzone#runOutsideAngular&quot;&gt;runOutsideAngular&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 을 통해 기능을 실행 하면 Angular 영역 외부에서 실행 된 작업 (일반적으로 &lt;a href=&quot;ngzone#runOutsideAngular&quot;&gt;runOutsideAngular&lt;/a&gt; 를 통해 시작된 작업)에서 Angular 영역을 다시 입력 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee7663696b0e0e61c405cea96e9445a285d3239c" translate="yes" xml:space="preserve">
          <source>Running the app right now would be disappointing.</source>
          <target state="translated">지금 앱을 실행하면 실망 스러울 것입니다.</target>
        </trans-unit>
        <trans-unit id="6cb3ce553429da57e5d6a8fa60b52b2af78a0159" translate="yes" xml:space="preserve">
          <source>Running the builder</source>
          <target state="translated">빌더 실행</target>
        </trans-unit>
        <trans-unit id="34a1e236990fcff7d4ff82e8c01d2ce5546ab753" translate="yes" xml:space="preserve">
          <source>Running this command will:</source>
          <target state="translated">이 명령을 실행하면 :</target>
        </trans-unit>
        <trans-unit id="5536dbbbf1685d7f1ec11e3d89da93713a9a853b" translate="yes" xml:space="preserve">
          <source>Running your library schematic</source>
          <target state="translated">라이브러리 회로도 실행</target>
        </trans-unit>
        <trans-unit id="6d08db9cc6b0634cbd7b872dcdb0e43f2f5c493e" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;checkNoChanges&lt;/code&gt; afterwards to confirm that there are no circular updates unless called as &lt;code&gt;detectChanges(false)&lt;/code&gt;;</source>
          <target state="translated">실행 &lt;code&gt;checkNoChanges&lt;/code&gt; 이후로 호출하지 않는 한 원형 업데이트가 없음을 확인하려면 &lt;code&gt;detectChanges(false)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="a5805ebbe053a268555d93fb6afa8949ae1a2e76" translate="yes" xml:space="preserve">
          <source>Runs an Architect target with an optional custom builder configuration defined in your project.</source>
          <target state="translated">프로젝트에 정의 된 선택적 사용자 정의 빌더 구성으로 Architect 대상을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="06ee928b58c238ec91de63dcbeda8f16eeca0f19" translate="yes" xml:space="preserve">
          <source>Runs in the &quot;resolve&quot; phase whether or not there is anything to resolve. In future, may change to only run when there are things to be resolved.</source>
          <target state="translated">해결해야 할 것이 있는지 여부에 관계없이 &quot;해결&quot;단계에서 실행됩니다. 앞으로 해결해야 할 사항이있을 때만 실행되도록 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c3805133cfd2c50cabc772626bb4a1f9bfe50cb" translate="yes" xml:space="preserve">
          <source>Runs linting tools on Angular app code in a given project folder.</source>
          <target state="translated">주어진 프로젝트 폴더의 Angular 앱 코드에서 Linting 도구를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e80216a55b72dd7626d8f6819dd8623ef7b521da" translate="yes" xml:space="preserve">
          <source>Runs the animation, invoking the &lt;code&gt;onStart()&lt;/code&gt; callback.</source>
          <target state="translated">&lt;code&gt;onStart()&lt;/code&gt; 콜백을 호출하여 애니메이션을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="db2f64f36a84fd02a516364d8873861a655c8763" translate="yes" xml:space="preserve">
          <source>Runs the body of a test (&lt;code&gt;it&lt;/code&gt;) or setup (&lt;code&gt;beforeEach&lt;/code&gt;) function within a special &lt;em&gt;async test zone&lt;/em&gt;. See &lt;a href=&quot;testing#async&quot;&gt;discussion above&lt;/a&gt;.</source>
          <target state="translated">특수한 &lt;em&gt;비동기 테스트 영역&lt;/em&gt; 내에서 테스트 본문 ( &lt;code&gt;it&lt;/code&gt; ) 또는 setup ( &lt;code&gt;beforeEach&lt;/code&gt; ) 기능을 실행합니다 . &lt;a href=&quot;testing#async&quot;&gt;위의 토론을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cc7f5f0b76b1087a2d81bf85a047a68b4a23c0d" translate="yes" xml:space="preserve">
          <source>Runs the body of a test (&lt;code&gt;it&lt;/code&gt;) or setup (&lt;code&gt;beforeEach&lt;/code&gt;) function within a special &lt;em&gt;async test zone&lt;/em&gt;. See &lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt;discussion above&lt;/a&gt;.</source>
          <target state="translated">특수 &lt;em&gt;비동기 테스트 영역&lt;/em&gt; 내에서 테스트 ( &lt;code&gt;it&lt;/code&gt; ) 또는 설정 ( &lt;code&gt;beforeEach&lt;/code&gt; ) 함수 의 본문을 실행합니다 . &lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt;위의 설명을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66426f5378dd8c3c56529bb9fa6742e2f707f261" translate="yes" xml:space="preserve">
          <source>Runs the body of a test (&lt;code&gt;it&lt;/code&gt;) within a special &lt;em&gt;fakeAsync test zone&lt;/em&gt;, enabling a linear control flow coding style. See &lt;a href=&quot;testing#fake-async&quot;&gt;discussion above&lt;/a&gt;.</source>
          <target state="translated">특별한 &lt;em&gt;fakeAsync 테스트 영역&lt;/em&gt; 내에서 테스트 본문 ( &lt;code&gt;it&lt;/code&gt; )을 실행하여 선형 제어 흐름 코딩 스타일을 가능하게합니다. &lt;a href=&quot;testing#fake-async&quot;&gt;위의 토론을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b594e55285f7fae5374f7bdb196d0160bdf78dda" translate="yes" xml:space="preserve">
          <source>Runs the body of a test (&lt;code&gt;it&lt;/code&gt;) within a special &lt;em&gt;fakeAsync test zone&lt;/em&gt;, enabling a linear control flow coding style. See &lt;a href=&quot;testing-components-scenarios#fake-async&quot;&gt;discussion above&lt;/a&gt;.</source>
          <target state="translated">특별한 &lt;em&gt;fakeAsync 테스트 영역&lt;/em&gt; 내에서 테스트 본문 ( &lt;code&gt;it&lt;/code&gt; )을 실행하여 선형 제어 흐름 코딩 스타일을 활성화합니다. &lt;a href=&quot;testing-components-scenarios#fake-async&quot;&gt;위의 설명을&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f279977f6a600b2a77a14b7fa87a91d0bbcbc7af" translate="yes" xml:space="preserve">
          <source>Runs unit tests in a project.</source>
          <target state="translated">프로젝트에서 단위 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="b9a6c428e8da60b4332f8fcc9b0d3aadfadb4b16" translate="yes" xml:space="preserve">
          <source>RxJS itself is out-of-scope for this guide. You will find many learning resources on the web. While you can get by with a minimum of RxJS knowledge, you'll want to grow your RxJS skills over time in order to use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; effectively.</source>
          <target state="translated">RxJS 자체는이 가이드에서 다루지 않습니다. 웹에서 많은 학습 자료를 찾을 수 있습니다. 최소한의 RxJS 지식을 습득 할 수는 있지만 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 를 효과적으로 사용하려면 시간이 지남에 따라 RxJS 기술을 발전시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="63add1cf7412a34b1bd0a199c5c0a5d6be0fa591" translate="yes" xml:space="preserve">
          <source>RxJS marble testing is a rich subject, beyond the scope of this guide. Learn about it on the web, starting with the &lt;a href=&quot;https://github.com/ReactiveX/rxjs/blob/master/doc/writing-marble-tests.md&quot;&gt;official documentation&lt;/a&gt;.</source>
          <target state="translated">RxJS 대리석 테스트는이 가이드의 범위를 벗어난 풍부한 주제입니다. &lt;a href=&quot;https://github.com/ReactiveX/rxjs/blob/master/doc/writing-marble-tests.md&quot;&gt;공식 문서로&lt;/a&gt; 시작하여 웹에서 이에 대해 학습하십시오 .</target>
        </trans-unit>
        <trans-unit id="0754d78342e40ef1817d2459db2abe40531af646" translate="yes" xml:space="preserve">
          <source>RxJS marble testing is a rich subject, beyond the scope of this guide. Learn about it on the web, starting with the &lt;a href=&quot;https://rxjs.dev/guide/testing/marble-testing&quot;&gt;official documentation&lt;/a&gt;.</source>
          <target state="translated">RxJS marble 테스트는이 가이드의 범위를 넘어서는 풍부한 주제입니다. &lt;a href=&quot;https://rxjs.dev/guide/testing/marble-testing&quot;&gt;공식 문서로&lt;/a&gt; 시작하여 웹에서 이에 대해 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="0c161d37db267e411afa5a63bd2755e5294c2239" translate="yes" xml:space="preserve">
          <source>RxJS offers a number of functions that can be used to create new observables. These functions can simplify the process of creating observables from things such as events, timers, promises, and so on. For example:</source>
          <target state="translated">RxJS는 새로운 옵저버 블을 생성하는 데 사용할 수있는 다양한 기능을 제공합니다. 이러한 기능은 이벤트, 타이머, 약속 등과 같은 것에서 관찰 가능 항목을 만드는 프로세스를 단순화 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fcfb95e11f5a9e52ecd66d149daed58beca52f9e" translate="yes" xml:space="preserve">
          <source>RxJS provides an implementation of the &lt;code&gt;Observable&lt;/code&gt; type, which is needed until the type becomes part of the language and until browsers support it. The library also provides utility functions for creating and working with observables. These utility functions can be used for:</source>
          <target state="translated">RxJS는 &lt;code&gt;Observable&lt;/code&gt; 유형 의 구현을 제공 하는데, 이는 유형이 언어의 일부가 될 때까지 그리고 브라우저가이를 지원할 때까지 필요합니다. 라이브러리는 또한 Observable을 만들고 작업하기위한 유틸리티 기능을 제공합니다. 다음과 같은 유틸리티 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3f1a0acb4630b109bc0abf73818fcc48717aa7d" translate="yes" xml:space="preserve">
          <source>RxJS provides many operators, but only a handful are used frequently. For a list of operators and usage samples, visit the &lt;a href=&quot;https://rxjs.dev/api&quot;&gt;RxJS API Documentation&lt;/a&gt;.</source>
          <target state="translated">RxJS는 많은 연산자를 제공하지만 소수만이 자주 사용됩니다. 연산자 및 사용 샘플 목록을 보려면 &lt;a href=&quot;https://rxjs.dev/api&quot;&gt;RxJS API 설명서를&lt;/a&gt; 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="df59735e1f2bd92c7fb70f7764a21bb0a207582b" translate="yes" xml:space="preserve">
          <source>SS</source>
          <target state="translated">SS</target>
        </trans-unit>
        <trans-unit id="b38be4f8d0467acb52033ff641fdc2b896e52703" translate="yes" xml:space="preserve">
          <source>SSL certificate to use for serving HTTPS.</source>
          <target state="translated">HTTPS를 제공하는 데 사용할 SSL 인증서.</target>
        </trans-unit>
        <trans-unit id="9a5588894fcf581ebe6497562988cd7feb2876c3" translate="yes" xml:space="preserve">
          <source>SSL key to use for serving HTTPS.</source>
          <target state="translated">HTTPS를 제공하는 데 사용할 SSL 키.</target>
        </trans-unit>
        <trans-unit id="f5dc67c95488406f9e5455fba66d7b49725070cd" translate="yes" xml:space="preserve">
          <source>SSS</source>
          <target state="translated">SSS</target>
        </trans-unit>
        <trans-unit id="1389bc012ad13d4e4fd809171cae7c776c03a884" translate="yes" xml:space="preserve">
          <source>SVG in templates</source>
          <target state="translated">템플릿의 SVG</target>
        </trans-unit>
        <trans-unit id="424dd4565e3b50faee0307759cb623a23456af2c" translate="yes" xml:space="preserve">
          <source>Safari</source>
          <target state="translated">Safari</target>
        </trans-unit>
        <trans-unit id="654ea656d6b4a1b77ee4a9f8c58427ac1cd42e1c" translate="yes" xml:space="preserve">
          <source>Safe navigation expressions.</source>
          <target state="translated">안전한 탐색 표현.</target>
        </trans-unit>
        <trans-unit id="c3a689e5e4fdf8a84824cbf8db47dadf479f9ee7" translate="yes" xml:space="preserve">
          <source>SafeHtml</source>
          <target state="translated">SafeHtml</target>
        </trans-unit>
        <trans-unit id="3b9602cb12ba7d8d9172830e98703194c0f5f35c" translate="yes" xml:space="preserve">
          <source>SafeResourceUrl</source>
          <target state="translated">SafeResourceUrl</target>
        </trans-unit>
        <trans-unit id="32c9ddebe8802286b892932a1253a6883a5d27f1" translate="yes" xml:space="preserve">
          <source>SafeScript</source>
          <target state="translated">SafeScript</target>
        </trans-unit>
        <trans-unit id="66a9d796469043ce4e8c9f413fc74451f0edd8e2" translate="yes" xml:space="preserve">
          <source>SafeStyle</source>
          <target state="translated">SafeStyle</target>
        </trans-unit>
        <trans-unit id="a9a58f7350454fb97fee80777aeeecda3ac5a112" translate="yes" xml:space="preserve">
          <source>SafeUrl</source>
          <target state="translated">SafeUrl</target>
        </trans-unit>
        <trans-unit id="fe0e468f0d671df302c65e3991ddbc1287c461d6" translate="yes" xml:space="preserve">
          <source>SafeValue</source>
          <target state="translated">SafeValue</target>
        </trans-unit>
        <trans-unit id="43353e14dbcb8e80cd7de577088954ae2fe4183e" translate="yes" xml:space="preserve">
          <source>Safety Worker</source>
          <target state="translated">안전 작업자</target>
        </trans-unit>
        <trans-unit id="83ea4a33eded731820f9ed2cab289cceb2ffa443" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;compiler#compileModuleAsync&quot;&gt;compileModuleAsync&lt;/a&gt; but also creates ComponentFactories for all components.</source>
          <target state="translated">&lt;a href=&quot;compiler#compileModuleAsync&quot;&gt;compileModuleAsync&lt;/a&gt; 와 동일 하지만 모든 구성 요소에 대해 ComponentFactories를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="3ab72c2293eda192b1469daf984ee9b4f3522711" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;compiler#compileModuleSync&quot;&gt;compileModuleSync&lt;/a&gt; but also creates ComponentFactories for all components.</source>
          <target state="translated">&lt;a href=&quot;compiler#compileModuleSync&quot;&gt;compileModuleSync&lt;/a&gt; 와 동일 하지만 모든 구성 요소에 대해 ComponentFactories를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="3076d49e8e296db46255699f246a79cbbfbfd49a" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;run&lt;/code&gt;, except that synchronous errors are caught and forwarded via &lt;code&gt;onError&lt;/code&gt; and not rethrown.</source>
          <target state="translated">동일 &lt;code&gt;run&lt;/code&gt; 하는 동기 오류를 제외하고는 붙잡고을 통해 전달 &lt;code&gt;onError&lt;/code&gt; 와 슬로우 다시 없습니다.</target>
        </trans-unit>
        <trans-unit id="b38da251ae5d47355bb40f015aa834d549bdcc5f" translate="yes" xml:space="preserve">
          <source>Same behavior, but rename to avoid confusion.</source>
          <target state="translated">동일한 동작이지만 혼동을 피하기 위해 이름을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="1e2ea47ad59cb266a9c7000bf8c7f8e1f9dd573f" translate="yes" xml:space="preserve">
          <source>Same behavior, but type safe.</source>
          <target state="translated">동일한 동작이지만 형식이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="1a3f90a927f6f13042f9b8f668894b5569d73f34" translate="yes" xml:space="preserve">
          <source>Same options for &lt;a href=&quot;navigationextras#queryParamsHandling&quot;&gt;NavigationExtras#queryParamsHandling&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;navigationextras#queryParamsHandling&quot;&gt;NavigationExtras # queryParamsHandling과&lt;/a&gt; 동일한 옵션입니다 .</target>
        </trans-unit>
        <trans-unit id="090e9abe187cd6a83d810a486180ec8236c48b6f" translate="yes" xml:space="preserve">
          <source>Sample HTTP requests for the &lt;a href=&quot;../../../tutorial/toh-pt0&quot;&gt;Tour of Heroes&lt;/a&gt; application.</source>
          <target state="translated">&lt;a href=&quot;../../../tutorial/toh-pt0&quot;&gt;Tour of Heroes&lt;/a&gt; 애플리케이션에 대한 샘플 HTTP 요청 .</target>
        </trans-unit>
        <trans-unit id="e5fc85c2cdd85928f428444cb0fcdf4bcd3bf6ff" translate="yes" xml:space="preserve">
          <source>Sample app</source>
          <target state="translated">샘플 앱</target>
        </trans-unit>
        <trans-unit id="5d9825f926c0692f1aeadfc7a1f61febb0934c7d" translate="yes" xml:space="preserve">
          <source>Sanitization and security contexts</source>
          <target state="translated">위생 및 보안 컨텍스트</target>
        </trans-unit>
        <trans-unit id="c669cc888c3767ae8b08a6cdfee9dbb0e765d931" translate="yes" xml:space="preserve">
          <source>Sanitization example</source>
          <target state="translated">위생 예</target>
        </trans-unit>
        <trans-unit id="8c1d5da09eb7e684d008c50bf4884555fe94eaf4" translate="yes" xml:space="preserve">
          <source>Sanitizer</source>
          <target state="translated">Sanitizer</target>
        </trans-unit>
        <trans-unit id="3663e4df2ef6c760a2646c87fe941424a764e038" translate="yes" xml:space="preserve">
          <source>Sanitizer is used by the views to sanitize potentially dangerous values.</source>
          <target state="translated">살균제는 잠재적으로 위험한 값을 살균하기 위해보기에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f5b5c1eec6e00aa9e3ba4aba106c4cc62d24b23e" translate="yes" xml:space="preserve">
          <source>Sanitizes a value for use in the given SecurityContext.</source>
          <target state="translated">주어진 SecurityContext에서 사용할 값을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="61f3c2e40ee80ba1dea2268150fce69f2e809dc8" translate="yes" xml:space="preserve">
          <source>Save the form data.</source>
          <target state="translated">양식 데이터를 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="01194c80a7142ec0533577f1e422c7201b178399" translate="yes" xml:space="preserve">
          <source>Saving form data</source>
          <target state="translated">양식 데이터 저장</target>
        </trans-unit>
        <trans-unit id="dedb2a11d087c5cd07e9dc0db0227dd089e8d32c" translate="yes" xml:space="preserve">
          <source>Say Goodbye to AngularJS</source>
          <target state="translated">AngularJS와 작별 인사</target>
        </trans-unit>
        <trans-unit id="b5436b63227a77ff1285c2fce651209ecc06da9a" translate="yes" xml:space="preserve">
          <source>Say you have a simple Angular component that shows information about a hero:</source>
          <target state="translated">영웅에 대한 정보를 보여주는 간단한 Angular 구성 요소가 있다고 가정 해보십시오.</target>
        </trans-unit>
        <trans-unit id="2bfb7e53e1ff83964ea3a05d84b64626b4b2ea9e" translate="yes" xml:space="preserve">
          <source>Say you have an &lt;code&gt;ng-app&lt;/code&gt; driven bootstrap such as this one:</source>
          <target state="translated">다음 과 같은 &lt;code&gt;ng-app&lt;/code&gt; 구동 부트 스트랩 이 있다고 가정 해보십시오 .</target>
        </trans-unit>
        <trans-unit id="94b03c70b196c58604c0a7faf7218bf6901b8e0c" translate="yes" xml:space="preserve">
          <source>Scalability</source>
          <target state="translated">Scalability</target>
        </trans-unit>
        <trans-unit id="ad06d494c8e6be5f7e5ec99d9bb1edf29af41863" translate="yes" xml:space="preserve">
          <source>Scenario: multiple edit sessions</source>
          <target state="translated">시나리오 : 여러 편집 세션</target>
        </trans-unit>
        <trans-unit id="1222b28c663e7e6973c3ec9287cc49452331f85e" translate="yes" xml:space="preserve">
          <source>Scenario: service isolation</source>
          <target state="translated">시나리오 : 서비스 격리</target>
        </trans-unit>
        <trans-unit id="362fc37b86ad4d41b105bec3c934be8884bd0a32" translate="yes" xml:space="preserve">
          <source>Scenario: specialized providers</source>
          <target state="translated">시나리오 : 전문 공급자</target>
        </trans-unit>
        <trans-unit id="e006e25ba99d01bb2c3c98a9cbbf511138b509c1" translate="yes" xml:space="preserve">
          <source>Schedule and run</source>
          <target state="translated">일정 및 실행</target>
        </trans-unit>
        <trans-unit id="604b75d1a0f16fd6b69aec0a759682d8e3f2847d" translate="yes" xml:space="preserve">
          <source>SchemaMetadata</source>
          <target state="translated">SchemaMetadata</target>
        </trans-unit>
        <trans-unit id="1f2ad639e825ea1bd5e221f4066dc8999024ca21" translate="yes" xml:space="preserve">
          <source>Schematic &lt;em&gt;prompts&lt;/em&gt; introduce user interaction into schematic execution. You can configure schematic options to display a customizable question to the user. The prompts are displayed before the execution of the schematic, which then uses the response as the value for the option. This allows users to direct the operation of the schematic without requiring in-depth knowledge of the full spectrum of available options.</source>
          <target state="translated">회로도 &lt;em&gt;프롬프트&lt;/em&gt; 는 회로도 실행에 사용자 상호 작용을 도입합니다. 사용자에게 사용자 정의 가능한 질문을 표시하도록 회로도 옵션을 구성 할 수 있습니다. 회로도를 실행하기 전에 프롬프트가 표시되고 응답은 옵션 값으로 사용됩니다. 이를 통해 사용자는 사용 가능한 전체 옵션에 대한 심층적 인 지식 없이도 회로도 작동을 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e60a8b4f0091f9f0d6ff8fb8281502b828c676e1" translate="yes" xml:space="preserve">
          <source>Schematic commands</source>
          <target state="translated">회로도 명령</target>
        </trans-unit>
        <trans-unit id="969c2a6039f399323cbb3f93adb2b47880e1daa8" translate="yes" xml:space="preserve">
          <source>Schematic prompts</source>
          <target state="translated">회로도 프롬프트</target>
        </trans-unit>
        <trans-unit id="e39f8e0fc7d8b46ffd0595cbc7264b989c06246d" translate="yes" xml:space="preserve">
          <source>Schematic variable definition.</source>
          <target state="translated">회로도 변수 정의.</target>
        </trans-unit>
        <trans-unit id="eccbbf8908b1659d9bc0f1cb2357d8412c775fbb" translate="yes" xml:space="preserve">
          <source>Schematic variables.</source>
          <target state="translated">회로도 변수.</target>
        </trans-unit>
        <trans-unit id="c9414319b44a81908bce4d6afcd2a5a854ada3be" translate="yes" xml:space="preserve">
          <source>Schematics</source>
          <target state="translated">Schematics</target>
        </trans-unit>
        <trans-unit id="ccc733e31ebdc2e1661ecdf1a2fc2c6e1e84f3db" translate="yes" xml:space="preserve">
          <source>Schematics CLI</source>
          <target state="translated">회로도 CLI</target>
        </trans-unit>
        <trans-unit id="e4f48d15a3291b7ff46ddcfb61d4430b8fb891e5" translate="yes" xml:space="preserve">
          <source>Schematics are part of the Angular ecosystem. The &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; uses schematics to apply transforms to a web-app project. You can modify these schematics, and define new ones to do things like update your code to fix breaking changes in a dependency, for example, or to add a new configuration option or framework to an existing project.</source>
          <target state="translated">회로도는 Angular 생태계의 일부입니다. &lt;a href=&quot;glossary#cli&quot;&gt;각도 CLI는&lt;/a&gt; 웹 응용 프로그램 프로젝트에 변환을 적용하는 회로도를 사용합니다. 이러한 회로도를 수정하고, 새로운 회로도를 정의하여 코드를 업데이트하여 종속성의 주요 변경 사항을 수정하거나 기존 프로젝트에 새 구성 옵션 또는 프레임 워크를 추가하는 등의 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58b0823baeca8f1960291235e2953eec43adebb1" translate="yes" xml:space="preserve">
          <source>Schematics come with their own command-line tool. Using Node 6.9 or above, install the Schematics CLI globally:</source>
          <target state="translated">회로도에는 자체 명령 줄 도구가 제공됩니다. Node 6.9 이상을 사용하여 Schematics CLI를 전체적으로 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="371fa93a3003b12a06158af7fcc1e40fd3929bfa" translate="yes" xml:space="preserve">
          <source>Schematics come with their own command-line tool. Using Node 6.9 or above, install the Schematics command line tool globally:</source>
          <target state="translated">회로도에는 자체 명령 줄 도구가 제공됩니다. Node 6.9 이상을 사용하여 Schematics 명령 행 도구를 전체적으로 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="2da3222f078061dc3193a0ae60f714d5fb5a5ed3" translate="yes" xml:space="preserve">
          <source>Schematics concepts</source>
          <target state="translated">회로도 개념</target>
        </trans-unit>
        <trans-unit id="a5364a057dcc3a879255154b260244d602c2f8af" translate="yes" xml:space="preserve">
          <source>Schematics for Libraries</source>
          <target state="translated">라이브러리의 회로도</target>
        </trans-unit>
        <trans-unit id="703afe1af703a4287d47833b1368855b2d826bdc" translate="yes" xml:space="preserve">
          <source>Schematics for libraries</source>
          <target state="translated">라이브러리 회로도</target>
        </trans-unit>
        <trans-unit id="650e45a519b32d0d1d4f0ffa5f694333bc0fcb26" translate="yes" xml:space="preserve">
          <source>Schematics for the Angular CLI</source>
          <target state="translated">Angular CLI의 회로도</target>
        </trans-unit>
        <trans-unit id="90e835be18685450037ec8dc15bb803b1fecb6c1" translate="yes" xml:space="preserve">
          <source>Schematics that are included in the &lt;code&gt;@schematics/angular&lt;/code&gt; collection are run by default by the commands &lt;code&gt;ng generate&lt;/code&gt; and &lt;code&gt;ng add&lt;/code&gt;. The package contains named schematics that configure the options that are available to the CLI for &lt;code&gt;ng generate&lt;/code&gt; sub-commands, such as &lt;code&gt;ng generate component&lt;/code&gt; and &lt;code&gt;ng generate service&lt;/code&gt;. The subcommands for &lt;code&gt;ng generate&lt;/code&gt; are shorthand for the corresponding schematic. You can specify a particular schematic (or collection of schematics) to generate, using the long form:</source>
          <target state="translated">&lt;code&gt;@schematics/angular&lt;/code&gt; 컬렉션에 포함 된 회로도는 기본적으로 &lt;code&gt;ng generate&lt;/code&gt; 및 &lt;code&gt;ng add&lt;/code&gt; 명령으로 실행됩니다 . 이 패키지에는 &lt;code&gt;ng generate component&lt;/code&gt; 및 &lt;code&gt;ng generate service&lt;/code&gt; 와 같은 &lt;code&gt;ng generate&lt;/code&gt; 하위 명령에 대해 CLI에서 사용할 수있는 옵션을 구성하는 명명 된 회로도가 포함되어 있습니다 . &lt;code&gt;ng generate&lt;/code&gt; 의 하위 명령 은 해당 회로도의 약어입니다. 긴 형식을 사용하여 생성 할 특정 회로도 (또는 회로도 모음)를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5094fad8f709419a1f61b790a07c4c6e1a94112" translate="yes" xml:space="preserve">
          <source>Scope of these guidelines</source>
          <target state="translated">이 지침의 범위</target>
        </trans-unit>
        <trans-unit id="d825c6e7ff747f7a43af04604d0038c6390663eb" translate="yes" xml:space="preserve">
          <source>Scopes must be strictly nested and are analogous to stack frames, but do not have to follow the stack frames. Instead it is recommended that they follow logical nesting. You may want to use &lt;a href=&quot;http://google.github.io/tracing-framework/instrumenting-code.html#custom-events&quot;&gt;Event Signatures&lt;/a&gt; as they are defined in WTF.</source>
          <target state="translated">범위는 반드시 중첩되어야하며 스택 프레임과 유사하지만 스택 프레임을 따를 필요는 없습니다. 대신 논리적 중첩을 따르는 것이 좋습니다. WTF에 정의 된대로 &lt;a href=&quot;http://google.github.io/tracing-framework/instrumenting-code.html#custom-events&quot;&gt;이벤트 서명&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="090a3c807816bef76a7b19c9a37c7de92b0eaa5e" translate="yes" xml:space="preserve">
          <source>Scroll</source>
          <target state="translated">Scroll</target>
        </trans-unit>
        <trans-unit id="3821a575a41bcb0264cca8aaf7ea5bfed2300253" translate="yes" xml:space="preserve">
          <source>Scrolls to a specified position.</source>
          <target state="translated">지정된 위치로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="cdb6d39647f259246def752bfa65b6f9f17a390a" translate="yes" xml:space="preserve">
          <source>Scrolls to an anchor element.</source>
          <target state="translated">앵커 요소로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="28abc0313db18cdefc86ad4f714f70bdb310a3dd" translate="yes" xml:space="preserve">
          <source>Search by name</source>
          <target state="translated">이름으로 검색</target>
        </trans-unit>
        <trans-unit id="147eedb8fd2b7b5458f86464bebc1d6f5586bf94" translate="yes" xml:space="preserve">
          <source>Search for &lt;a href=&quot;api?type=const&quot;&gt;Constants in API documentation&lt;/a&gt; to find more built-in tokens.</source>
          <target state="translated">더 많은 내장 토큰을 찾으려면 &lt;a href=&quot;api?type=const&quot;&gt;API 문서에서 상수를&lt;/a&gt; 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="08583e53fde056ce085f8f7ad7cbf37ed9157b4c" translate="yes" xml:space="preserve">
          <source>Search for requests that match the given parameter, without any expectations.</source>
          <target state="translated">주어진 매개 변수와 일치하는 요청을 예상하지 않고 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="802a9d493d035d23a9ab024d6a12f94682fd4026" translate="yes" xml:space="preserve">
          <source>Search the web for more details about Jasmine and Karma configuration.</source>
          <target state="translated">Jasmine 및 Karma 구성에 대한 자세한 내용은 웹을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="fbd0089e26e7521865fc4f8ba73e0e9c366de562" translate="yes" xml:space="preserve">
          <source>Search the web to learn more.</source>
          <target state="translated">자세한 내용은 웹을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="2a4bcae654f264daf22579fb462bf0bae302a057" translate="yes" xml:space="preserve">
          <source>Second</source>
          <target state="translated">Second</target>
        </trans-unit>
        <trans-unit id="d4bfbde37b796b3072d2e5b4af58b251ebe7a683" translate="yes" xml:space="preserve">
          <source>Second step of the Tour of Heroes example application. For more information, see &lt;a href=&quot;../tutorial/toh-pt2&quot;&gt;Display a selection list&lt;/a&gt;.</source>
          <target state="translated">Tour of Heroes 예제 애플리케이션의 두 번째 단계입니다. 자세한 내용 &lt;a href=&quot;../tutorial/toh-pt2&quot;&gt;은 선택 목록 표시를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05b3b867f3308524cfcca1ad20ea32361f33b5b0" translate="yes" xml:space="preserve">
          <source>Second string for comparison</source>
          <target state="translated">비교를위한 두 번째 문자열</target>
        </trans-unit>
        <trans-unit id="025de599ea0a6262eeb4ea073413e273d0ea875b" translate="yes" xml:space="preserve">
          <source>Secondary</source>
          <target state="translated">Secondary</target>
        </trans-unit>
        <trans-unit id="0090b2e8c3b3dbd13cc4b1eff7399ac4982efc36" translate="yes" xml:space="preserve">
          <source>Secondary route navigation: merging routes during navigation</source>
          <target state="translated">보조 경로 탐색 : 탐색 중 경로 병합</target>
        </trans-unit>
        <trans-unit id="d121995492d64204de97419bd678ddd753a48602" translate="yes" xml:space="preserve">
          <source>Secondary routes</source>
          <target state="translated">보조 노선</target>
        </trans-unit>
        <trans-unit id="fde05d3f3a99675b9caef67745eff532e079ae0c" translate="yes" xml:space="preserve">
          <source>Secondary routes look like primary routes and you configure them the same way. They differ in a few key respects.</source>
          <target state="translated">보조 경로는 기본 경로처럼 보이고 동일한 방식으로 구성합니다. 몇 가지 주요 측면에서 다릅니다.</target>
        </trans-unit>
        <trans-unit id="cb1802250d264a47e2ed4089ebb6eaa12357b27d" translate="yes" xml:space="preserve">
          <source>Secondary section heading</source>
          <target state="translated">보조 섹션 제목</target>
        </trans-unit>
        <trans-unit id="7ff5a6dafd806f6d95302657c480d07703b64604" translate="yes" xml:space="preserve">
          <source>Sections</source>
          <target state="translated">Sections</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="420f8a7e7fa60602bd00c1120fbeb8ee91756678" translate="yes" xml:space="preserve">
          <source>Security risk</source>
          <target state="translated">보안 위험</target>
        </trans-unit>
        <trans-unit id="75bda12774e119cf736360ccdeb270bd009f2a98" translate="yes" xml:space="preserve">
          <source>Security: XSRF protection</source>
          <target state="translated">보안 : XSRF 보호</target>
        </trans-unit>
        <trans-unit id="ff92d47bbbf75d573d4b7f6ecd4609bd0e9052ff" translate="yes" xml:space="preserve">
          <source>SecurityContext</source>
          <target state="translated">SecurityContext</target>
        </trans-unit>
        <trans-unit id="e7810d7050870999862eb700f56286a61f57171c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../guide/bootstrapping&quot;&gt;&quot;Bootstrapping&quot;&lt;/a&gt; and &lt;a href=&quot;../../guide/entry-components&quot;&gt;&quot;Entry components&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guide/bootstrapping&quot;&gt;&quot;부트 스트래핑&quot;&lt;/a&gt; 및 &lt;a href=&quot;../../guide/entry-components&quot;&gt;&quot;항목 구성 요소&quot;를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d8e741327286d6d409fa66197306b2e9693ddaf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../guide/deprecations&quot;&gt;Angular deprecation policy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guide/deprecations&quot;&gt;Angular 지원 중단 정책을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="fda20d0026cc214d8aecdf193f720779b13bcbbb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt; for more about CLI build options and what they do.</source>
          <target state="translated">CLI 빌드 옵션 및 해당 기능에 대한 자세한 내용은 &lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fce80250e18186fec1a10b29c5231259f0c74b4c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;component#encapsulation&quot;&gt;encapsulation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;component#encapsulation&quot;&gt;캡슐화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e1791fb160e797a8f6b0d43e600aef3663e0b62" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#entryComponents&quot;&gt;&lt;code&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecations#entryComponents&quot;&gt; &lt;code&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="f68e49a3aa8e10a94906bd1287686ef3ce6b2fdd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#entryComponents&quot;&gt;&lt;code&gt;entryComponents&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecations#entryComponents&quot;&gt; &lt;code&gt;entryComponents&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="fde687c61cc2f67abe8427525ccbb7e9c5b55f41" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#http&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deprecations#http&quot;&gt;아래를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88ab9cbda5653ec945d26c4134d08e822f587d82" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#i18n-pipes&quot;&gt;Pipes&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecations#i18n-pipes&quot;&gt;파이프&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="3a740448cbd65deba0b9f6b484912e52a30db1ad" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#ngform&quot;&gt;ngForm&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deprecations#ngform&quot;&gt;ngForm을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f4a7efd970db9e737c1fc3a4527070de9c20c37" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecations#reflectiveinjector&quot;&gt; &lt;code&gt;ReflectiveInjector&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="871e386735b07dc956709f343dad1b667ef85183" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#webworker-apps&quot;&gt;platform-webworker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deprecations#webworker-apps&quot;&gt;platform-webworker를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1746855dcf143ae329bbf9a473356327be11e727" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#wrapped-value&quot;&gt;removing &lt;code&gt;WrappedValue&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecations#wrapped-value&quot;&gt; &lt;code&gt;WrappedValue&lt;/code&gt; &lt;/a&gt; 제거를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f71c4f89e36020da5e93934f1435aa406a8d6a23" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deprecations#wtf&quot;&gt;Web Tracing Framework&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecations#wtf&quot;&gt;웹 추적 프레임 워크&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="43bd192a13e9c4793df648557f077670a7462630" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#angular-element&quot;&gt;Angular element&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glossary#angular-element&quot;&gt;각도 요소를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebdd5980f3db24eedbf589f721c18fb3347d2134" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#class-decorator&quot;&gt;class decorator&lt;/a&gt;, &lt;a href=&quot;glossary#class-field-decorator&quot;&gt;class field decorator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glossary#class-decorator&quot;&gt;클래스 데코레이터&lt;/a&gt; , &lt;a href=&quot;glossary#class-field-decorator&quot;&gt;클래스 필드 데코레이터를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f1341694f2963b73abc061b0e699b5eaef5f6c2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#cli-config&quot;&gt;workspace configuration&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;glossary#cli-config&quot;&gt;작업 공간 구성&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="6ef53b103c2504568a2522db0ec692844cf26d26" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#custom-element&quot;&gt;custom element&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glossary#custom-element&quot;&gt;사용자 정의 요소를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="373b7586829118f4444b7e73738c97f95b77fe0e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;glossary#ecma&quot;&gt;ECMAScript&lt;/a&gt;, &lt;a href=&quot;glossary#typescript&quot;&gt;TypeScript&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glossary#ecma&quot;&gt;ECMAScript&lt;/a&gt; , &lt;a href=&quot;glossary#typescript&quot;&gt;TypeScript를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d68b10b9142888a09da7c925539ce570195d6804" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;guide/component-interaction&quot;&gt;Component Interaction&lt;/a&gt; for more information about listening for events from child components, reading child properties or invoking child methods, and using a service for bi-directional communication between components.</source>
          <target state="translated">자식 구성 요소에서 이벤트 수신, 자식 속성 읽기 또는 자식 메서드 호출, 구성 요소 간 양방향 통신 서비스 사용에 대한 자세한 내용은 &lt;a href=&quot;guide/component-interaction&quot;&gt;구성 요소 상호 작용&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e7f22fad065c3e1f9b4f0fc47d11cadb5bff074" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;guide/component-interaction&quot;&gt;Component Interaction&lt;/a&gt; for more information about passing data from a parent to child component, intercepting and acting upon a value from the parent, and detecting and acting on changes to input property values.</source>
          <target state="translated">상위에서 하위 구성 요소로 데이터를 전달하고 상위에서 값을 가로 채서 조치하고 입력 특성 값의 변경 사항을 감지하여 조치하는 데 대한 자세한 정보는 &lt;a href=&quot;guide/component-interaction&quot;&gt;컴포넌트 상호 작용&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1320d63453d99bdaf6db1d37d5b39a953ccf8039" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#cache-refresh&quot;&gt;Using interceptors to request multiple values&lt;/a&gt; for more about the &lt;code&gt;withRefresh&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;withRefresh&lt;/code&gt; 옵션 에 대한 자세한 내용은 &lt;a href=&quot;http#cache-refresh&quot;&gt;인터셉터를 사용하여 여러 값 요청을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="5e07cb2961cc6a28ac48cc8c06efe0cd8122658d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;http://cldr.unicode.org/index/cldr-spec/plural-rules&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;http://cldr.unicode.org/index/cldr-spec/plural-rules를&lt;/a&gt; 참조 하십시오</target>
        </trans-unit>
        <trans-unit id="84ff708cfec4225c8805ca252cf51150ee5467b6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Array.filter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Array.filter를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0b639f087a824df95ea8389e9ad529fcadb7ddf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot;&gt;Array.find&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot;&gt;Array.find를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc03b9137b41fe34c8de5449f8c9d7c85281ca9a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;Array.forEach&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;Array를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6fcf856080efdaf7ecc49f5da7833c185aff1a03" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Array.map&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Array.map을&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="24e084e8e8490a4b66a1c13060c8799b6f245811" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot;&gt;Array.reduce&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot;&gt;Array.reduce를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4e7cdd492f483451b7a638d7cd47eff1bd62c5a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.some&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.some&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="c3dffe4fde2bb769f7a483a0f60b6656cf9de405" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.bazel.build/versions/master/query-how-to.html&quot;&gt;https://docs.bazel.build/versions/master/query-how-to.html&lt;/a&gt; for more details on &lt;code&gt;bazel &lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bazel &lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;https://docs.bazel.build/versions/master/query-how-to.html&quot;&gt;https://docs.bazel.build/versions/master/query-how-to.html&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4be240a9669a0c991e7b3acdd1fe2dc9a3ee2d42" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ivy&quot;&gt;Angular Ivy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ivy&quot;&gt;Angular Ivy를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97ef4b528c2d94313c75ada965b517dd89b49fe6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ngplural&quot;&gt;&lt;code&gt;NgPlural&lt;/code&gt;&lt;/a&gt; for more details and example.</source>
          <target state="translated">자세한 내용과 예는 &lt;a href=&quot;ngplural&quot;&gt; &lt;code&gt;NgPlural&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="28085ff802c246b48f5171b0d47bf3463877e5ba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;router#createUrlTree&quot;&gt;createUrlTree&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;router#createUrlTree&quot;&gt;createUrlTree&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b33a84a9a6ba3ffa4c448ba6e0e4a35bd7ac5e12" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;service-worker-config#assetgroups&quot;&gt;assetGroups&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;service-worker-config#assetgroups&quot;&gt;assetGroups&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bb2f0a6425e2a9d3501a8680ffed17e9f7ec951d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;setup-local&quot;&gt;Local Environment Setup&lt;/a&gt; for information about the required versions and installation of &lt;code&gt;Node.js&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node.js&lt;/code&gt; 및 &lt;code&gt;npm&lt;/code&gt; 의 필수 버전 및 설치에 대한 정보는 &lt;a href=&quot;setup-local&quot;&gt;로컬 환경 설정&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3729608a50a57e0a30b44c88ac519321cf4c2aa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;updating&quot;&gt;Keeping Up-to-Date&lt;/a&gt; for more information about updating your Angular projects to the most recent version.</source>
          <target state="translated">Angular 프로젝트를 최신 버전으로 업데이트하는 방법에 대한 자세한 내용은 최신 상태 &lt;a href=&quot;updating&quot;&gt;유지를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8e6c7b01d745d85ffb3acd5024b83653609ada8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;upgrade&quot;&gt;AngularJS에서 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="185b5dec111cdc1f73cc6d2e102c5a0cb7d68728" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;urlcreationoptions#queryParamsHandling&quot;&gt;UrlCreationOptions#queryParamsHandling&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;urlcreationoptions#queryParamsHandling&quot;&gt;UrlCreationOptions # queryParamsHandling을&lt;/a&gt; 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="0f1bec5ec8258940ff8ccf46c9bbe3dc1f64ff6c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;defaulturlserializer&quot;&gt;DefaultUrlSerializer&lt;/a&gt;&lt;/code&gt; for an example of a URL serializer.</source>
          <target state="translated">URL 시리얼 라이저의 예는 &lt;code&gt;&lt;a href=&quot;defaulturlserializer&quot;&gt;DefaultUrlSerializer&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86061a06305cac0e282f79e07bb04c0e3358893c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;defaultvalueaccessor&quot;&gt;DefaultValueAccessor&lt;/a&gt;&lt;/code&gt; for how to implement one.</source>
          <target state="translated">구현 방법에 대해서는 &lt;code&gt;&lt;a href=&quot;defaultvalueaccessor&quot;&gt;DefaultValueAccessor&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="138d389dd7a925fd91c820fa0f794714cb6a453c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator for an example of providing a binding name.</source>
          <target state="translated">바인딩 이름을 제공하는 예는 &lt;code&gt;&lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 데코레이터를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="47eb911785d48a60185a7ec31d4d8588cad6e6bd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6c4fea18069448d8237854e4e3c5a17cbee9b73e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b20fef1640eb8dc2082434b20a559330568ea1a5" translate="yes" xml:space="preserve">
          <source>See DomSanitizer for more details on security in Angular applications.</source>
          <target state="translated">각도 애플리케이션의 보안에 대한 자세한 내용은 DomSanitizer를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b10a33a9759f8a47cb90543774563be4f296671c" translate="yes" xml:space="preserve">
          <source>See a complete exampled of the schematic rule function.</source>
          <target state="translated">회로도 규칙 함수의 전체 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="9c4439eca1fddc276ca91de31606982dcfa703e7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#custom-element&quot;&gt;custom element&lt;/a&gt;, which provides an easier path with the same result.</source>
          <target state="translated">동일한 결과로 더 쉬운 경로를 제공하는 &lt;a href=&quot;glossary#custom-element&quot;&gt;custom element&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41f5b22dc31edf8387e734a0d82f6abd7d358014" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#dynamic-components&quot;&gt;dynamic component loading&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glossary#dynamic-components&quot;&gt;동적 구성 요소 로딩&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a23c5bfb888ea92d238b5f0c0a5e5aebe25f25a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#schematic&quot;&gt;schematic&lt;/a&gt;.</source>
          <target state="translated">또한 &lt;a href=&quot;glossary#schematic&quot;&gt;도식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d53453313efe3618a28a4af66e763cbdda299c2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#schematics-cli&quot;&gt;Schematics CLI&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glossary#schematics-cli&quot;&gt;회로도 CLI&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7fe6f0ebf80f3f795ed53c96022ee2b4c03ba43" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;glossary#service&quot;&gt;service&lt;/a&gt;, &lt;a href=&quot;glossary#di&quot;&gt;dependency injection&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glossary#service&quot;&gt;서비스&lt;/a&gt; , &lt;a href=&quot;glossary#di&quot;&gt;종속성 주입을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9883e8f0d3adafce63d75307e699a63bfa599ebd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://www.youtube.com/watch?v=ez3R0Gi4z5A&amp;amp;t=368s&quot;&gt;Chuck Jazdzewski's presentation&lt;/a&gt; on the Angular Language Service from &lt;a href=&quot;https://www.ng-conf.org/&quot;&gt;ng-conf&lt;/a&gt; 2017.</source>
          <target state="translated">&lt;a href=&quot;https://www.ng-conf.org/&quot;&gt;ng-conf&lt;/a&gt; 2017 의 Angular Language Service에 대한 &lt;a href=&quot;https://www.youtube.com/watch?v=ez3R0Gi4z5A&amp;amp;t=368s&quot;&gt;Chuck Jazdzewski의 프레젠테이션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffc701bd0c67b5d759ab439b8de536ccc0be67e8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;service-worker-intro&quot;&gt;Service Worker and PWA&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-intro&quot;&gt;서비스 워커 및 PWA&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91b8fbcfe94a2300571efea327e03e3297312e7d" translate="yes" xml:space="preserve">
          <source>See also Dave Smith's easy-to-understand &lt;a href=&quot;https://www.youtube.com/watch?v=9inczw6qtpY&quot;&gt;talk on XSRF at AngularConnect 2016&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.youtube.com/watch?v=9inczw6qtpY&quot;&gt;AngularConnect 2016에서 XSRF에&lt;/a&gt; 대한 Dave Smith의 이해하기 쉬운 대화를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60c626340520b8deb2d38bbb5164185ffdc66501" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../api/common/app_base_href&quot;&gt;&lt;em&gt;APP_BASE_HREF&lt;/em&gt;&lt;/a&gt; alternative.</source>
          <target state="translated">&lt;a href=&quot;../api/common/app_base_href&quot;&gt;&lt;em&gt;APP_BASE_HREF&lt;/em&gt;&lt;/a&gt; 대안 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0102cd370235bc46937617695d55c895f25bc97" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;template-expression-operators#safe-navigation-operator&quot;&gt;safe navigation operator&lt;/a&gt; below.</source>
          <target state="translated">아래 의 &lt;a href=&quot;template-expression-operators#safe-navigation-operator&quot;&gt;안전 내비게이션 연산자도&lt;/a&gt; 참조하세요.</target>
        </trans-unit>
        <trans-unit id="4051d78d3c362996fa25fceccc4530848ab2fd65" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;template-syntax#safe-navigation-operator&quot;&gt;safe navigation operator&lt;/a&gt; below.</source>
          <target state="translated">아래 &lt;a href=&quot;template-syntax#safe-navigation-operator&quot;&gt;안전 탐색 연산자&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f71e224a8e5c89a59c6fa5e674c9f17b8333d98a" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;upgrademodule#examples&quot;&gt;examples&lt;/a&gt; below.</source>
          <target state="translated">아래 의 &lt;a href=&quot;upgrademodule#examples&quot;&gt;예도&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="d0ae54d1dea88599488204c1375625a3ba575174" translate="yes" xml:space="preserve">
          <source>See an example of using a &lt;a href=&quot;router-tutorial-toh#resolve-guard&quot;&gt;resolve guard&lt;/a&gt; to retrieve dynamic data.</source>
          <target state="translated">&lt;a href=&quot;router-tutorial-toh#resolve-guard&quot;&gt;해결 가드&lt;/a&gt; 를 사용하여 동적 데이터를 검색 하는 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="76f17ec29c44eaaa1b53307359db0f6605142fac" translate="yes" xml:space="preserve">
          <source>See details and example in &lt;a href=&quot;lifecycle-hooks#aftercontent&quot;&gt;Responding to changes in content&lt;/a&gt; in this document.</source>
          <target state="translated">이 문서의 &lt;a href=&quot;lifecycle-hooks#aftercontent&quot;&gt;내용 변경에 응답&lt;/a&gt; 에서 자세한 내용과 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="840e90f48f8b7818a57a65e0290166691ae10a1f" translate="yes" xml:space="preserve">
          <source>See details and example in &lt;a href=&quot;lifecycle-hooks#aftercontent&quot;&gt;Responding to projected content changes&lt;/a&gt; in this document.</source>
          <target state="translated">이 문서의 &lt;a href=&quot;lifecycle-hooks#aftercontent&quot;&gt;예상 콘텐츠 변경&lt;/a&gt; 에 응답 에서 자세한 내용과 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d494b7108b3076a002730236bca35608f2cacca5" translate="yes" xml:space="preserve">
          <source>See details and example in &lt;a href=&quot;lifecycle-hooks#afterview&quot;&gt;Responding to view changes&lt;/a&gt; in this document.</source>
          <target state="translated">이 문서의 &lt;a href=&quot;lifecycle-hooks#afterview&quot;&gt;변경 사항보기&lt;/a&gt; 에 응답 에서 세부 정보 및 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7a85463a1744945edfa4b6048b29941a2635134" translate="yes" xml:space="preserve">
          <source>See how Angular calls the &lt;code&gt;ngOnChanges()&lt;/code&gt; hook with a &lt;code&gt;&lt;a href=&quot;../api/core/querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt; object every time one of the component input properties changes. Shows how to interpret the &lt;code&gt;&lt;a href=&quot;../api/core/querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">구성 요소 입력 특성 중 하나가 &lt;code&gt;&lt;a href=&quot;../api/core/querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt; 될 때마다 Angular가 변경 오브젝트 와 함께 &lt;code&gt;ngOnChanges()&lt;/code&gt; 후크를 호출하는 방법을 참조하십시오 . &lt;code&gt;&lt;a href=&quot;../api/core/querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt; 객체 를 해석하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="194d7b196403c87ea066bc5c7b4896735981af7e" translate="yes" xml:space="preserve">
          <source>See it run</source>
          <target state="translated">실행 참조</target>
        </trans-unit>
        <trans-unit id="a745bdc83646a70d932883de3c439b948ef90f4e" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;guide/workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;guide/workspace-config&quot;&gt;작업 공간 구성&lt;/a&gt; 에 대한 자세한 내용을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3254ebd02f25e6c7906d918d3d3f5afade78214" translate="yes" xml:space="preserve">
          <source>See more about the &lt;a href=&quot;guide/file-structure&quot;&gt;Workspace file structure&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;guide/file-structure&quot;&gt;작업 공간 파일 구조&lt;/a&gt; 에 대한 자세한 내용을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bc0a0464d33548528e141211b4a60cdaa51e2cb0" translate="yes" xml:space="preserve">
          <source>See more...</source>
          <target state="translated">더보기...</target>
        </trans-unit>
        <trans-unit id="cb6b2c00da89e3d19c34764e404c22026f7adb91" translate="yes" xml:space="preserve">
          <source>See our &lt;a href=&quot;static-query-migration&quot;&gt;dedicated migration guide for static queries&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;static-query-migration&quot;&gt;정적 쿼리에 대한 전용 마이그레이션 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0bb6ec054137942546c7ed20600ceef38755f755" translate="yes" xml:space="preserve">
          <source>See the  for a working example containing the code snippets in this guide.</source>
          <target state="translated">이 가이드의 코드 스 니펫이 포함 된 작동 예제는를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eab88b514907ae61c46e873f6cd0ba9e91f0c742" translate="yes" xml:space="preserve">
          <source>See the  of the code in this cookbook.</source>
          <target state="translated">이 요리 책의 코드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3e976d74d82e09e61d208b2551645e8f0c0ee8b8" translate="yes" xml:space="preserve">
          <source>See the .</source>
          <target state="translated">를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="703afc407e28537f8117d5af1ca5b74c585bebe7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../guide/i18n#merge&quot;&gt;i18n guide&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../guide/i18n#merge&quot;&gt;i18n 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4bfd83fc6c51f15909a805f30410b163ed8390ea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../guide/i18n#missing-translation&quot;&gt;i18n guide&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../guide/i18n#missing-translation&quot;&gt;i18n 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a2eafec19a4437862205f97e51b0441285a1a5e0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../guide/i18n#setting-up-locale&quot;&gt;i18n guide&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../guide/i18n#setting-up-locale&quot;&gt;i18n 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cd6cfaa9a55708c419bb102eab62106deb945961" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;binding-syntax#html-attribute-vs-dom-property&quot;&gt;Binding syntax&lt;/a&gt; guide for more background on the difference between attributes and properties.</source>
          <target state="translated">속성과 속성의 차이점에 대한 자세한 배경 정보 는 &lt;a href=&quot;binding-syntax#html-attribute-vs-dom-property&quot;&gt;바인딩 구문&lt;/a&gt; 가이드를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="8f838634255c8c690b694b3a242a06b3f0641fd0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;cli&quot;&gt;CLI command reference&lt;/a&gt; and &lt;a href=&quot;build&quot;&gt;Building and serving Angular apps&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;cli&quot;&gt;CLI 명령 참조&lt;/a&gt; 및 &lt;a href=&quot;build&quot;&gt;Angular 앱 빌드 및 제공&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="86d2cb75152fccbb2c9997ee86f0e7259f1b92c2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;creating-libraries&quot;&gt;Creating Libraries&lt;/a&gt; guide for more on how to compile or bundle your Angular library. When you use the tools integrated into the Angular CLI or &lt;code&gt;ng-packagr&lt;/code&gt;, your library will always be built the right way automatically.</source>
          <target state="translated">Angular 라이브러리를 컴파일하거나 번들링하는 방법에 대한 자세한 내용은 &lt;a href=&quot;creating-libraries&quot;&gt;라이브러리 생성&lt;/a&gt; 가이드를 참조하세요. Angular CLI 또는 &lt;code&gt;ng-packagr&lt;/code&gt; 에 통합 된 도구를 사용하면 라이브러리가 항상 올바른 방식으로 자동으로 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="4be11d46da8eddd97ee7679e70b105f31f2aa40c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;deployment#configuration-table&quot;&gt;configuration table&lt;/a&gt; below for the configurations for enabling differential loading.</source>
          <target state="translated">차동 로딩을 활성화하기위한 구성은 아래 &lt;a href=&quot;deployment#configuration-table&quot;&gt;구성 표를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="96b3bcfdf95d7437073f983c13336b30c0879a23" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;docs-style-guide#anchors&quot;&gt;&quot;Anchors&quot;&lt;/a&gt; section for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;docs-style-guide#anchors&quot;&gt;&quot;앵커&quot;&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="523803ef999afba78e6262a840da0aa1af129a0b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;forms-overview#setup-the-form-model&quot;&gt;Form model setup&lt;/a&gt; section below for an introduction to how these control instances are created and managed with reactive and template-driven forms. Further details are provided in the &lt;a href=&quot;forms-overview#data-flow-in-forms&quot;&gt;data flow section&lt;/a&gt; of this guide.</source>
          <target state="translated">반응 형 및 템플릿 기반 양식으로 이러한 컨트롤 인스턴스를 만들고 관리하는 방법에 대한 소개는 아래 &lt;a href=&quot;forms-overview#setup-the-form-model&quot;&gt;양식 모델 설정&lt;/a&gt; 섹션을 참조하십시오 . 자세한 내용은 이 안내서 의 &lt;a href=&quot;forms-overview#data-flow-in-forms&quot;&gt;데이터 흐름 섹션&lt;/a&gt; 에 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc174f4023e0a1078f35b3cae03161d5901c64a3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;glossary&quot;&gt;Angular Glossary&lt;/a&gt; for basic definitions of important Angular terms and usage.</source>
          <target state="translated">중요한 Angular 용어 및 사용법에 대한 기본 정의 는 &lt;a href=&quot;glossary&quot;&gt;Angular 용어집&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3998ec04034a9afd602566cacf01686de60924c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/angular-workspace&quot;&gt;complete schema&lt;/a&gt; for &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;angular.json&lt;/code&gt; 의 &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/angular-workspace&quot;&gt;전체 스키마&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="36b15b0ac2409a516f94ecb0ef72e07ae67a5814" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-global-styles&quot;&gt;CLI wiki&lt;/a&gt; to learn more.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-global-styles&quot;&gt;CLI 위키&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c6618fffb24e5628ae5e9c23ffe287e2276cb1a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;browserslist repo&lt;/a&gt; for more examples of how to target specific browsers and versions.</source>
          <target state="translated">특정 브라우저 및 버전을 타겟팅하는 방법에 대한 자세한 예 는 &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;브라우저 목록 저장소&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4536cc0769515848a890e86feb11c61edb0e25e2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;router&quot;&gt;Routing&lt;/a&gt; page for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;router&quot;&gt;라우팅&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bebc5d4b80787fe6d28e7b156a7e0ade258d5d97" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;static-query-migration&quot;&gt;dedicated migration guide for static queries&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;static-query-migration&quot;&gt;정적 쿼리에 대한 전용 마이그레이션 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d54ecac8ced81720a42266f2b9d870dbd98d7b4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;styleguide#decorate-input-and-output-properties&quot;&gt;Decorate input and output properties&lt;/a&gt; section of the &lt;a href=&quot;styleguide&quot;&gt;Style Guide&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;styleguide&quot;&gt;스타일 가이드&lt;/a&gt; 의 &lt;a href=&quot;styleguide#decorate-input-and-output-properties&quot;&gt;입력 및 출력 속성 꾸미기&lt;/a&gt; 섹션을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="eaa391d4eaa0994839fcde094ca0c1fd99b3fef3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;template-syntax#html-attribute-vs-dom-property&quot;&gt;Template Syntax&lt;/a&gt; guide for more background on the difference between attributes and properties.</source>
          <target state="translated">속성과 속성의 차이점에 대한 자세한 배경 은 &lt;a href=&quot;template-syntax#html-attribute-vs-dom-property&quot;&gt;템플릿 구문&lt;/a&gt; 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3423f7494ab4d778fe7402401d9702184916bbc" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;user-input&quot;&gt;User Input&lt;/a&gt; guide for more information about listening for DOM events with an event binding and updating a corresponding component property.</source>
          <target state="translated">참고 항목 &lt;a href=&quot;user-input&quot;&gt;사용자 입력&lt;/a&gt; 이벤트가 바인딩 및 해당 구성 요소 속성을 업데이트하는 DOM 이벤트를 수신에 대한 자세한 내용은 가이드.</target>
        </trans-unit>
        <trans-unit id="b3c44f421b71db485fb82450b13af9502948005c" translate="yes" xml:space="preserve">
          <source>See the &lt;span name=&quot;i18n&quot;&gt;i18n Example&lt;/span&gt; for a simple example of an AOT-compiled app, translated into French.</source>
          <target state="translated">프랑스어로 번역 된 AOT 컴파일 된 앱의 간단한 예제 는 &lt;span name=&quot;i18n&quot;&gt;i18n 예제&lt;/span&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="33de9167a5d8eafd2f6dff3b865b6b6200731ef8" translate="yes" xml:space="preserve">
          <source>See the &lt;span name=&quot;template-syntax&quot;&gt;Template syntax&lt;/span&gt; for the syntax and code snippets in this guide.</source>
          <target state="translated">이 가이드의 구문 및 코드 조각 은 &lt;span name=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/span&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3648048d11d2b2387d45bf4734bd28177f5e4931" translate="yes" xml:space="preserve">
          <source>See the live example for a working example containing the code snippets in this guide.</source>
          <target state="translated">이 가이드의 코드 스 니펫이 포함 된 작동 예제는 라이브 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="df4be97d199f808d0d4c95d24915617a5578496e" translate="yes" xml:space="preserve">
          <source>See the live example for all of the syntax and code snippets in this guide.</source>
          <target state="translated">이 가이드의 모든 구문 및 코드 조각에 대한 라이브 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bd6473f64e1d57a8fb3c2051580d3b7b07293f8f" translate="yes" xml:space="preserve">
          <source>See the workspace schema for additional customizations for schematic options.</source>
          <target state="translated">회로도 옵션에 대한 추가 사용자 정의는 작업 공간 스키마를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b61cfd1be505a73b5096299f1c87b5be1558f319" translate="yes" xml:space="preserve">
          <source>See these two classes for more.</source>
          <target state="translated">자세한 내용은이 두 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e1559cb4f6928d64480787e467f96e49b44b941" translate="yes" xml:space="preserve">
          <source>See what polyfills you might need in the &lt;a href=&quot;../guide/browser-support&quot;&gt;browser support guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guide/browser-support&quot;&gt;브라우저 지원 안내서&lt;/a&gt; 에서 필요한 폴리 필을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9866b44abce919f71b98fa4b35babe857b362349" translate="yes" xml:space="preserve">
          <source>Select &lt;code&gt;dist/my-project-name&lt;/code&gt; as the public directory.</source>
          <target state="translated">공용 디렉토리로 &lt;code&gt;dist/my-project-name&lt;/code&gt; 을 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="3afe008efb1b2d7a3cccda57e9fe1a00412e0b53" translate="yes" xml:space="preserve">
          <source>Select &lt;strong&gt;Tools&lt;/strong&gt; &amp;gt; &lt;strong&gt;Developer Tools&lt;/strong&gt; (from the Chrome menu located at the top right corner).</source>
          <target state="translated">오른쪽 상단에있는 Chrome 메뉴에서 &lt;strong&gt;도구&lt;/strong&gt; &amp;gt; &lt;strong&gt;개발자 도구를&lt;/strong&gt; 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="272bb72a4f337f9ff7776a5a0bc02264f5ae811e" translate="yes" xml:space="preserve">
          <source>Select a crisis and the application takes you to a crisis editing screen. The &lt;em&gt;Crisis Detail&lt;/em&gt; appears in a child component on the same page, beneath the list.</source>
          <target state="translated">위기를 선택하면 애플리케이션이 위기 편집 화면으로 이동합니다. &lt;em&gt;위기의 상세&lt;/em&gt; 목록 아래, 같은 페이지에 아이 컴퍼넌트에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="50d40cec1f7b8f7a101609d2857c4810b242321a" translate="yes" xml:space="preserve">
          <source>Select among alternative text messages</source>
          <target state="translated">대체 문자 메시지 중에서 선택</target>
        </trans-unit>
        <trans-unit id="8afee43201734724acd1ed8d813493db708a03a8" translate="yes" xml:space="preserve">
          <source>Select one hero and the app takes you to a hero editing screen.</source>
          <target state="translated">영웅 하나를 선택하면 앱이 영웅 편집 화면으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="995459faa031db1ac236b4da374b4330a6311773" translate="yes" xml:space="preserve">
          <source>Select the &lt;code&gt;ASP.NET Web Application&lt;/code&gt; template, give the project a name, and click OK.</source>
          <target state="translated">&lt;code&gt;ASP.NET Web Application&lt;/code&gt; 템플릿을 선택하고 프로젝트 이름을 지정한 다음 확인을 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="e6c81843b717b7614f0a47ae900485011ad57cff" translate="yes" xml:space="preserve">
          <source>Select the &lt;code&gt;Hosting&lt;/code&gt; option on the first prompt.</source>
          <target state="translated">첫 번째 프롬프트 에서 &lt;code&gt;Hosting&lt;/code&gt; 옵션을 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="75079fc1a45a87d174498425b3e96c2bca16a530" translate="yes" xml:space="preserve">
          <source>Select the desired ASP.NET 4.5.2 template and click OK.</source>
          <target state="translated">원하는 ASP.NET 4.5.2 템플릿을 선택하고 확인을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="683878a567372e3758de6c2c02c467b8a09c8df0" translate="yes" xml:space="preserve">
          <source>Select the project you previously created on Firebase.</source>
          <target state="translated">Firebase에서 이전에 생성 한 프로젝트를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="2091f609b2db3bac89c2347642413fd097e77ad8" translate="yes" xml:space="preserve">
          <source>Select the styles for the component's template. In most cases, you define the styles for your component's template in a separate file.</source>
          <target state="translated">구성 요소 템플릿의 스타일을 선택합니다. 대부분의 경우 별도의 파일에서 구성 요소 템플릿의 스타일을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0306e76de68e6dea7e839b5961dd31842ec1d82d" translate="yes" xml:space="preserve">
          <source>SelectControlValueAccessor</source>
          <target state="translated">SelectControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="c780e4dd3573852b9db0b1910dfce072d6bf3220" translate="yes" xml:space="preserve">
          <source>SelectMultipleControlValueAccessor</source>
          <target state="translated">SelectMultipleControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="dbfb8bcc93418a71312c156f806f37a3e00a43a5" translate="yes" xml:space="preserve">
          <source>Selector for all</source>
          <target state="translated">모두를위한 선택기</target>
        </trans-unit>
        <trans-unit id="65a7975cc5125897d86930adc5a2c3718963faa3" translate="yes" xml:space="preserve">
          <source>Selector references</source>
          <target state="translated">선택기 참조</target>
        </trans-unit>
        <trans-unit id="4df28d2cb8a74e0553a8b501f660f7fd482671ed" translate="yes" xml:space="preserve">
          <source>Selectors</source>
          <target state="translated">Selectors</target>
        </trans-unit>
        <trans-unit id="52a837d8797d4f84798dfca97cb2f902259bd2e2" translate="yes" xml:space="preserve">
          <source>Selectors are &lt;strong&gt;not required&lt;/strong&gt; for &lt;em&gt;routed components&lt;/em&gt; due to the components are dynamically inserted when the page is rendered, but are useful for identifying and targeting them in your HTML element tree.</source>
          <target state="translated">선택기되어 &lt;strong&gt;필요하지 않습니다&lt;/strong&gt; 에 대한 &lt;em&gt;라우팅 구성 요소&lt;/em&gt; 로 인해 페이지가 렌더링 될 때 동적으로 삽입되어있는 구성 요소 만 확인하고 HTML 요소 트리를 대상으로하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6a6c57488cde9ae0a7c30cfaa44f717c988f97c4" translate="yes" xml:space="preserve">
          <source>Selectors are not required for routed components because components are dynamically inserted when the page is rendered. However, they are useful for identifying and targeting them in your HTML element tree.</source>
          <target state="translated">페이지가 렌더링 될 때 구성 요소가 동적으로 삽입되기 때문에 라우팅 된 구성 요소에는 선택기가 필요하지 않습니다. 그러나 HTML 요소 트리에서 식별하고 대상을 지정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="09f6abf2755c30468942061cf910c26315d31fa5" translate="yes" xml:space="preserve">
          <source>Selects a subset of items from the defined collection, based on the filter criteria.</source>
          <target state="translated">필터 기준에 따라 정의 된 컬렉션에서 항목의 하위 집합을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="25a9f3928fbced8e2080b3db3ee9dbc01ff2bd0e" translate="yes" xml:space="preserve">
          <source>Selects up to the first parameter (2) number of items from the collection starting (optionally) at the beginning index (0).</source>
          <target state="translated">시작 색인 (0)에서 시작하여 선택적으로 컬렉션에서 첫 번째 매개 변수 (2)의 항목 수를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="d27eb5d81cb75de714a2807a624ee3f9c38e362c" translate="yes" xml:space="preserve">
          <source>Selects: &lt;code&gt;&lt;a href=&quot;selectcontrolvalueaccessor&quot;&gt;SelectControlValueAccessor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">선택 : &lt;code&gt;&lt;a href=&quot;selectcontrolvalueaccessor&quot;&gt;SelectControlValueAccessor&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e102517374a81d4e2f92c28774a0b02079ebacf4" translate="yes" xml:space="preserve">
          <source>Self</source>
          <target state="translated">Self</target>
        </trans-unit>
        <trans-unit id="a36acbed10afbb9e5a669f2b42c260fd386aa8a5" translate="yes" xml:space="preserve">
          <source>Send a message from &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; 에서 메시지 보내기</target>
        </trans-unit>
        <trans-unit id="119600cc9addb52c8411bb9fe964a8991edb44cb" translate="yes" xml:space="preserve">
          <source>Send the &lt;code&gt;id&lt;/code&gt; with an object that contains an &lt;em&gt;optional&lt;/em&gt;&lt;code&gt;id&lt;/code&gt; parameter. For demonstration purposes, there's an extra junk parameter (&lt;code&gt;foo&lt;/code&gt;) in the object that the &lt;code&gt;HeroListComponent&lt;/code&gt; should ignore. Here's the revised navigation statement:</source>
          <target state="translated">&lt;em&gt;선택적 &lt;/em&gt; &lt;code&gt;id&lt;/code&gt; 매개 변수 가 포함 된 객체와 함께 &lt;code&gt;id&lt;/code&gt; 를 보냅니다 . 데모 목적으로 &lt;code&gt;HeroListComponent&lt;/code&gt; 에서 무시해야 할 추가 정크 매개 변수 ( &lt;code&gt;foo&lt;/code&gt; )가 오브젝트에 있습니다. 수정 된 탐색 설명은 다음과 같습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e48682937c112f584e659901064e80328c28d5f7" translate="yes" xml:space="preserve">
          <source>Send the &lt;code&gt;id&lt;/code&gt; with an object that contains an optional &lt;code&gt;id&lt;/code&gt; parameter. For demonstration purposes, there's an extra junk parameter (&lt;code&gt;foo&lt;/code&gt;) in the object that the &lt;code&gt;HeroListComponent&lt;/code&gt; should ignore. Here's the revised navigation statement:</source>
          <target state="translated">선택적 &lt;code&gt;id&lt;/code&gt; 매개 변수 가 포함 된 개체와 함께 &lt;code&gt;id&lt;/code&gt; 를 보냅니다 . 데모 목적으로 &lt;code&gt;HeroListComponent&lt;/code&gt; 가 무시 해야하는 객체에 추가 정크 매개 변수 ( &lt;code&gt;foo&lt;/code&gt; )가 있습니다. 수정 된 탐색 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="072547be8c6747695adbb07bdf037ce01f8e52db" translate="yes" xml:space="preserve">
          <source>Sending a request for every keystroke could be expensive. It's better to wait until the user stops typing and then send a request. That's easy to implement with RxJS operators, as shown in this excerpt.</source>
          <target state="translated">모든 키 입력에 대한 요청을 보내는 것은 비용이 많이들 수 있습니다. 사용자가 입력을 멈출 때까지 기다렸다가 요청을 보내는 것이 좋습니다. 이 발췌 부분에서 볼 수 있듯이 RxJS 연산자로 쉽게 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7f8bac0c43a95d4b6f1fb613d7ad9f9388e733f" translate="yes" xml:space="preserve">
          <source>Sending data to a child component</source>
          <target state="translated">하위 구성 요소에 데이터 보내기</target>
        </trans-unit>
        <trans-unit id="a935783024a28e30c323b46939555cb577aa051e" translate="yes" xml:space="preserve">
          <source>Sending data to a parent component</source>
          <target state="translated">상위 구성 요소에 데이터 보내기</target>
        </trans-unit>
        <trans-unit id="db9bd831c6b9635b6dc3fe01be9918c9b2647045" translate="yes" xml:space="preserve">
          <source>Sending data to a server</source>
          <target state="translated">서버로 데이터 보내기</target>
        </trans-unit>
        <trans-unit id="d0fae25b4df92f4a2af6e1b5c517a289ac53291a" translate="yes" xml:space="preserve">
          <source>Sending data to the server</source>
          <target state="translated">서버로 데이터 전송</target>
        </trans-unit>
        <trans-unit id="fbc4087dcaf07d22c764d5cc84471b63b54d30e0" translate="yes" xml:space="preserve">
          <source>Sends an &lt;code&gt;HTTPRequest&lt;/code&gt; and returns a stream of &lt;code&gt;HTTPEvents&lt;/code&gt;.</source>
          <target state="translated">전송 &lt;code&gt;HTTPRequest&lt;/code&gt; 반환의 스트림 &lt;code&gt;HTTPEvents&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="fdd289e370bd5cc575f48a16947d05c144ec474b" translate="yes" xml:space="preserve">
          <source>Sep</source>
          <target state="translated">Sep</target>
        </trans-unit>
        <trans-unit id="d3f2c137b1c31435de9ffb869cd5f14f5f8be665" translate="yes" xml:space="preserve">
          <source>Separate &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; bindings are an improvement over binding to the element's native properties, but you can streamline the binding with a single declaration using the &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; syntax:</source>
          <target state="translated">별도의 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 바인딩은 요소의 고유 속성에 대한 바인딩보다 개선되었지만 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; 구문을 사용하여 단일 선언으로 바인딩을 간소화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b760724fe18bef99d65097e60d8040459cf0aa04" translate="yes" xml:space="preserve">
          <source>Separate file names with dots and dashes</source>
          <target state="translated">점과 대시로 파일 이름 분리</target>
        </trans-unit>
        <trans-unit id="863c49aa45c96f6cc56cd2270446ad6b1da56b02" translate="yes" xml:space="preserve">
          <source>Separate your services into their own module.</source>
          <target state="translated">서비스를 자체 모듈로 분리하십시오.</target>
        </trans-unit>
        <trans-unit id="02c3a26290b8da44311bd86131f30ae5b141c561" translate="yes" xml:space="preserve">
          <source>Separates routing concerns from other application concerns.</source>
          <target state="translated">라우팅 문제를 다른 응용 프로그램 문제와 분리합니다.</target>
        </trans-unit>
        <trans-unit id="1c542e79c9b4257e640ccf72974d61fd590a5c26" translate="yes" xml:space="preserve">
          <source>September</source>
          <target state="translated">September</target>
        </trans-unit>
        <trans-unit id="095703d35ea4a63084c4a73ec92a2db3f8aac8b0" translate="yes" xml:space="preserve">
          <source>Sequence and frequency of all lifecycle events</source>
          <target state="translated">모든 라이프 사이클 이벤트의 순서 및 빈도</target>
        </trans-unit>
        <trans-unit id="eef188ee59e5270d06bf25801bee04042af6b8f9" translate="yes" xml:space="preserve">
          <source>Sequential vs. parallel animations</source>
          <target state="translated">순차적 대 병렬 애니메이션</target>
        </trans-unit>
        <trans-unit id="3b821c1a25e558762f20edbc0fe2487778411c6a" translate="yes" xml:space="preserve">
          <source>Serbian Latin</source>
          <target state="translated">세르비아어 라틴어</target>
        </trans-unit>
        <trans-unit id="3b0975425046a88f8aed9ad1020d304b9d262f95" translate="yes" xml:space="preserve">
          <source>Serialize the current state of the store to JSON.</source>
          <target state="translated">상점의 현재 상태를 JSON으로 직렬화하십시오.</target>
        </trans-unit>
        <trans-unit id="e0097562a9b5d36057a43961cbfa13bd0e259e50" translate="yes" xml:space="preserve">
          <source>SerializerTypes</source>
          <target state="translated">SerializerTypes</target>
        </trans-unit>
        <trans-unit id="f2c63d0a0bc928d9f052b2c1898434640be02869" translate="yes" xml:space="preserve">
          <source>Serializes a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; into a string</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; 를 문자열로 직렬화</target>
        </trans-unit>
        <trans-unit id="33c2a827715d0f8388ccd11e1d655706167f3ff0" translate="yes" xml:space="preserve">
          <source>Serializes and deserializes a URL string into a URL tree.</source>
          <target state="translated">URL 문자열을 URL 트리로 직렬화하고 역 직렬화합니다.</target>
        </trans-unit>
        <trans-unit id="fc06ec834c7da5d34024e74977610caf3fda6cd5" translate="yes" xml:space="preserve">
          <source>Serializes and parses URL parameter keys and values to encode and decode them. If you pass URL query parameters without encoding, the query parameters can be misinterpreted at the receiving end.</source>
          <target state="translated">URL 매개 변수 키 및 값을 직렬화하고 구문 분석하여 인코딩 및 디코딩합니다. 인코딩하지 않고 URL 쿼리 매개 변수를 전달하면받는 쪽에서 쿼리 매개 변수가 잘못 해석 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e41cbec8815a9fb51b7c4241e53ac35a4c8b6414" translate="yes" xml:space="preserve">
          <source>Serializes the body to an encoded string, where key-value pairs (separated by &lt;code&gt;=&lt;/code&gt;) are separated by &lt;code&gt;&amp;amp;&lt;/code&gt;s.</source>
          <target state="translated">본문을 인코딩 된 문자열로 직렬화합니다. 여기서 키-값 쌍 ( &lt;code&gt;=&lt;/code&gt; 으로 구분)은 &lt;code&gt;&amp;amp;&lt;/code&gt; s 로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="45392ea5611ee85d2b55866e135d8f5f02337e65" translate="yes" xml:space="preserve">
          <source>Serve the application</source>
          <target state="translated">응용 프로그램을 제공</target>
        </trans-unit>
        <trans-unit id="9d38d6df0105cea4e757adca112367e1bf9dfd55" translate="yes" xml:space="preserve">
          <source>Serve the application.</source>
          <target state="translated">응용 프로그램을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="5db53f196e443ef4900a6ccc944eb20e7cf35355" translate="yes" xml:space="preserve">
          <source>Serve using HTTPS.</source>
          <target state="translated">HTTPS를 사용하여 게재하십시오.</target>
        </trans-unit>
        <trans-unit id="7d1f92cbe260f59d03f01fb122ff265d3997553d" translate="yes" xml:space="preserve">
          <source>Server communication</source>
          <target state="translated">서버 통신</target>
        </trans-unit>
        <trans-unit id="03336908d63670602a10d87bc0dad160c17a03c5" translate="yes" xml:space="preserve">
          <source>Server configuration</source>
          <target state="translated">서버 구성</target>
        </trans-unit>
        <trans-unit id="ec1b7b12e854e57e61933f9af3c1b264e928e8c3" translate="yes" xml:space="preserve">
          <source>Server-side Rendering (SSR): An intro to Angular Universal</source>
          <target state="translated">서버 측 렌더링 (SSR) : Angular Universal 소개</target>
        </trans-unit>
        <trans-unit id="b5b672463f37d2e7aaa9ad2979024241353e8fbd" translate="yes" xml:space="preserve">
          <source>Server-side XSS protection</source>
          <target state="translated">서버 측 XSS 보호</target>
        </trans-unit>
        <trans-unit id="edb74f27419e21310f21479c52a5a0f86f121538" translate="yes" xml:space="preserve">
          <source>Server-side rendering (SSR) with Angular Universal</source>
          <target state="translated">Angular Universal을 사용한 서버 측 렌더링 (SSR)</target>
        </trans-unit>
        <trans-unit id="130354b2f12f682cce2462cea9237e2bebb5d52a" translate="yes" xml:space="preserve">
          <source>ServerModule</source>
          <target state="translated">ServerModule</target>
        </trans-unit>
        <trans-unit id="e5ece8a754403830b630fdabc7b1a6c765a0f3b7" translate="yes" xml:space="preserve">
          <source>ServerTestingModule</source>
          <target state="translated">ServerTestingModule</target>
        </trans-unit>
        <trans-unit id="7af36030afa6970f296c1d9f8d32147e521635b0" translate="yes" xml:space="preserve">
          <source>ServerTransferStateModule</source>
          <target state="translated">ServerTransferStateModule</target>
        </trans-unit>
        <trans-unit id="97fa8e54c99b3ddeea4d0b566f02ed4d33038933" translate="yes" xml:space="preserve">
          <source>Servers often return data in the form of a stream. Streams are useful because they make it easy to transform the returned data and make modifications to the way you request that data. The Angular HTTP client, &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, is a built-in way to fetch data from external APIs and provide them to your app as a stream.</source>
          <target state="translated">서버는 종종 데이터를 스트림 형태로 반환합니다. 스트림은 반환 된 데이터를 쉽게 변환하고 해당 데이터를 요청하는 방식을 수정하기 때문에 유용합니다. Angular HTTP 클라이언트 인 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 는 외부 API에서 데이터를 가져와 앱에 스트림으로 제공하는 기본 제공 방법입니다.</target>
        </trans-unit>
        <trans-unit id="059140132898cd7cf2f8b4b198375177de7805f9" translate="yes" xml:space="preserve">
          <source>Serves as the base non-VE container for NgClass.</source>
          <target state="translated">NgClass의 기본 비 VE 컨테이너 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="ddca72b8be0f68f5a85d55134bf184f4ceaa75d7" translate="yes" xml:space="preserve">
          <source>Serves as the base non-VE container for NgStyle.</source>
          <target state="translated">NgStyle의 기본 비 VE 컨테이너 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">Service</target>
        </trans-unit>
        <trans-unit id="666232dcc13e8601d4d366f0e05461a1777c660e" translate="yes" xml:space="preserve">
          <source>Service NgModules</source>
          <target state="translated">서비스 NgModules</target>
        </trans-unit>
        <trans-unit id="2f7c1a556cb9dc184d3f119890e63b3d15bff0c5" translate="yes" xml:space="preserve">
          <source>Service Tests</source>
          <target state="translated">서비스 테스트</target>
        </trans-unit>
        <trans-unit id="cff8d9d0a8cd813b37012657954cd47c344b89ce" translate="yes" xml:space="preserve">
          <source>Service Worker Communication</source>
          <target state="translated">서비스 근로자 커뮤니케이션</target>
        </trans-unit>
        <trans-unit id="6d3c72c33eb3cdd4644a15bb18b9dccf91e3bd36" translate="yes" xml:space="preserve">
          <source>Service Worker Configuration</source>
          <target state="translated">서비스 워커 구성</target>
        </trans-unit>
        <trans-unit id="7ca188360dd52bb36aa771a8bb3eb10987f312be" translate="yes" xml:space="preserve">
          <source>Service Worker Safety</source>
          <target state="translated">서비스 근로자 안전</target>
        </trans-unit>
        <trans-unit id="e280573377e87f6266bc4ef9191689933cdace95" translate="yes" xml:space="preserve">
          <source>Service Worker in Production</source>
          <target state="translated">생산 서비스 노동자</target>
        </trans-unit>
        <trans-unit id="2f27aaeadb9c93beb5c8a9639fd6f1acfc2516e3" translate="yes" xml:space="preserve">
          <source>Service classes</source>
          <target state="translated">서비스 클래스</target>
        </trans-unit>
        <trans-unit id="e51c82bbb85ff024a89d22ed23103f1a7e9f323f" translate="yes" xml:space="preserve">
          <source>Service classes.</source>
          <target state="translated">서비스 클래스.</target>
        </trans-unit>
        <trans-unit id="cd986fdd77fb1edb07840a69c86a7af558f6555a" translate="yes" xml:space="preserve">
          <source>Service examples</source>
          <target state="translated">서비스 예</target>
        </trans-unit>
        <trans-unit id="3706f59ee7865182e26fc8a0a76067f8707b62ab" translate="yes" xml:space="preserve">
          <source>Service feature modules.</source>
          <target state="translated">서비스 기능 모듈.</target>
        </trans-unit>
        <trans-unit id="d5fde19c78186a28f22af3d019e5c7269e315a39" translate="yes" xml:space="preserve">
          <source>Service modules provide utility services such as data access and messaging. Ideally, they consist entirely of providers and have no declarations. Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; is a good example of a service module.</source>
          <target state="translated">서비스 모듈은 데이터 액세스 및 메시징과 같은 유틸리티 서비스를 제공합니다. 이상적으로는 전적으로 공급자로 구성되며 선언이 없습니다. Angular의 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 은 서비스 모듈의 좋은 예입니다.</target>
        </trans-unit>
        <trans-unit id="46e198ac9a6441be2e9cc7951fa8f3ed4907acfe" translate="yes" xml:space="preserve">
          <source>Service names</source>
          <target state="translated">서비스 이름</target>
        </trans-unit>
        <trans-unit id="1e017a1ef928ee7b12f386a906bd610ffe8ae04b" translate="yes" xml:space="preserve">
          <source>Service worker and caching of app resources</source>
          <target state="translated">서비스 워커 및 앱 리소스 캐싱</target>
        </trans-unit>
        <trans-unit id="d098b164425fcb1b7d22832466e0ba8e40520886" translate="yes" xml:space="preserve">
          <source>Service worker communication</source>
          <target state="translated">서비스 근로자 커뮤니케이션</target>
        </trans-unit>
        <trans-unit id="ea75d3c49227a2deabf9e084b013c0a6696444b7" translate="yes" xml:space="preserve">
          <source>Service worker communication guide</source>
          <target state="translated">서비스 워커 커뮤니케이션 가이드</target>
        </trans-unit>
        <trans-unit id="213e711f52a371405007d940340a810da2cec071" translate="yes" xml:space="preserve">
          <source>Service worker configuration</source>
          <target state="translated">서비스 워커 구성</target>
        </trans-unit>
        <trans-unit id="1a95e38073e2323975c4e77f63c0aa4646408c33" translate="yes" xml:space="preserve">
          <source>Service worker in action: a tour</source>
          <target state="translated">행동하는 서비스 기사 : 둘러보기</target>
        </trans-unit>
        <trans-unit id="47c66d180e31b1cc93e9ad75212e0e3e19f310ee" translate="yes" xml:space="preserve">
          <source>Service worker in production</source>
          <target state="translated">생산 서비스 노동자</target>
        </trans-unit>
        <trans-unit id="ade1379af8a87a9d51d05ff28dafbe574ceb984f" translate="yes" xml:space="preserve">
          <source>Service worker updates</source>
          <target state="translated">서비스 워커 업데이트</target>
        </trans-unit>
        <trans-unit id="f1a171133ce6596d2e430d1bd9ae7f5bb45aa66f" translate="yes" xml:space="preserve">
          <source>Service worker versionedFiles</source>
          <target state="translated">서비스 워커 버전 파일</target>
        </trans-unit>
        <trans-unit id="5e6526c00f376a58521de24f68551dd520efff44" translate="yes" xml:space="preserve">
          <source>Service workers augment the traditional web deployment model and empower applications to deliver a user experience with the reliability and performance on par with natively-installed code. Adding a service worker to an Angular application is one of the steps for turning an application into a &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;Progressive Web App&lt;/a&gt; (also known as a PWA).</source>
          <target state="translated">서비스 작업자는 기존 웹 배포 모델을 보강하고 응용 프로그램에 권한을 부여하여 기본적으로 설치된 코드와 비교하여 안정성과 성능으로 사용자 경험을 제공합니다. 서비스 워커를 Angular 응용 프로그램에 추가하는 것은 응용 프로그램을 &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;Progressive Web App&lt;/a&gt; (PWA라고도 함)로 전환하는 단계 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="05d9d31cda49f702ca155a823fabe52cfd7b0d78" translate="yes" xml:space="preserve">
          <source>Service workers function as a network proxy. They intercept all outgoing HTTP requests made by the application and can choose how to respond to them. For example, they can query a local cache and deliver a cached response if one is available. Proxying isn't limited to requests made through programmatic APIs, such as &lt;code&gt;fetch&lt;/code&gt;; it also includes resources referenced in HTML and even the initial request to &lt;code&gt;index.html&lt;/code&gt;. Service worker-based caching is thus completely programmable and doesn't rely on server-specified caching headers.</source>
          <target state="translated">서비스 워커는 네트워크 프록시로 작동합니다. 그들은 응용 프로그램에서 보낸 모든 나가는 HTTP 요청을 가로 채고 응답 방법을 선택할 수 있습니다. 예를 들어, 로컬 캐시를 쿼리하고 캐시 된 응답이있는 경우이를 전달할 수 있습니다. 프록 싱은 &lt;code&gt;fetch&lt;/code&gt; 와 같은 프로그래밍 방식 API를 통한 요청에만 국한되지 않습니다 . 또한 HTML에서 참조되는 리소스 및 &lt;code&gt;index.html&lt;/code&gt; 에 대한 초기 요청도 포함합니다 . 따라서 서비스 작업자 기반 캐싱은 완전히 프로그래밍 가능하며 서버 지정 캐싱 헤더에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a84dec1de2b44f33c58b7e0f7e1b6a3aa3370a9c" translate="yes" xml:space="preserve">
          <source>Service workers in Angular</source>
          <target state="translated">Angular의 서비스 근로자</target>
        </trans-unit>
        <trans-unit id="fbe47937f29ddbaa88baab42e70ae59b890c12cb" translate="yes" xml:space="preserve">
          <source>ServiceMessageBroker</source>
          <target state="translated">ServiceMessageBroker</target>
        </trans-unit>
        <trans-unit id="cf408ba8f4f4e39affef2df94bc39449009cdbfe" translate="yes" xml:space="preserve">
          <source>ServiceMessageBrokerFactory</source>
          <target state="translated">ServiceMessageBrokerFactory</target>
        </trans-unit>
        <trans-unit id="22547292247ba751d19d43d00fed2e196c575dc7" translate="yes" xml:space="preserve">
          <source>ServiceWorkerModule</source>
          <target state="translated">ServiceWorkerModule</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="dc81df13273d226b0e1cb8e0b9492326f4cc0a8f" translate="yes" xml:space="preserve">
          <source>Services and controllers can be turned into &lt;em&gt;classes&lt;/em&gt;. That way they'll be a step closer to becoming Angular service and component classes, which will make life easier after the upgrade.</source>
          <target state="translated">서비스와 컨트롤러는 &lt;em&gt;클래스&lt;/em&gt; 로 전환 될 수 있습니다 . 이렇게하면 Angular 서비스 및 구성 요소 클래스가되는 데 한 걸음 더 다 가서 업그레이드 후 더 쉽게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6f38e4a46ab4366026c2b9fabca761864ce2181" translate="yes" xml:space="preserve">
          <source>Services and dependency injection</source>
          <target state="translated">서비스 및 의존성 주입</target>
        </trans-unit>
        <trans-unit id="bf09e534549dcc8fe685b9331521e2a2810d51c1" translate="yes" xml:space="preserve">
          <source>Services are a great way to share information among classes that &lt;em&gt;don't know each other&lt;/em&gt;. You'll create a &lt;code&gt;MessageService&lt;/code&gt; and inject it in two places.</source>
          <target state="translated">서비스는 &lt;em&gt;서로 모르는&lt;/em&gt; 클래스간에 정보를 공유 할 수있는 좋은 방법 입니다. &lt;code&gt;MessageService&lt;/code&gt; 를 만들고 두 곳에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="04795178e6ef84113f6ba4f86e592ec8793c6edb" translate="yes" xml:space="preserve">
          <source>Services are a great way to share information among classes that &lt;em&gt;don't know each other&lt;/em&gt;. You'll create a &lt;code&gt;MessageService&lt;/code&gt; and inject it in two places:</source>
          <target state="translated">서비스는 &lt;em&gt;서로를 모르는&lt;/em&gt; 클래스간에 정보를 공유 할 수있는 좋은 방법 입니다. &lt;code&gt;MessageService&lt;/code&gt; 를 작성하여 다음 두 곳에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="03d8aac425a91514530a541229c6232f51e72c37" translate="yes" xml:space="preserve">
          <source>Services are an integral part of Angular applications. In Angular, a service is an instance of a class that can be made available to any part of your application using Angular's &lt;a href=&quot;../guide/glossary#dependency-injection-di&quot;&gt;dependency injection system&lt;/a&gt;.</source>
          <target state="translated">서비스는 Angular 응용 프로그램의 필수 부분입니다. Angular에서 서비스는 Angular의 &lt;a href=&quot;../guide/glossary#dependency-injection-di&quot;&gt;의존성 주입 시스템을&lt;/a&gt; 사용하여 애플리케이션의 모든 부분에서 사용할 수있는 클래스의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="e568a7928b70256ba4fef870fdbd817ddbbf02c6" translate="yes" xml:space="preserve">
          <source>Services are an integral part of Angular applications. In Angular, a service is an instance of a class that you can make available to any part of your application using Angular's &lt;a href=&quot;../guide/glossary#dependency-injection-di&quot;&gt;dependency injection system&lt;/a&gt;.</source>
          <target state="translated">서비스는 Angular 애플리케이션의 필수적인 부분입니다. Angular에서 서비스는 Angular의 &lt;a href=&quot;../guide/glossary#dependency-injection-di&quot;&gt;종속성 주입 시스템을&lt;/a&gt; 사용하여 애플리케이션의 모든 부분에서 사용할 수있는 클래스의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="287e789611aae413d7c2761283ceeec6b7ea8297" translate="yes" xml:space="preserve">
          <source>Services are often the easiest files to unit test. Here are some synchronous and asynchronous unit tests of the &lt;code&gt;ValueService&lt;/code&gt; written without assistance from Angular testing utilities.</source>
          <target state="translated">서비스는 종종 단위 테스트에 가장 쉬운 파일입니다. 다음은 Angular 테스트 유틸리티의 도움없이 작성된 &lt;code&gt;ValueService&lt;/code&gt; 의 동기 및 비동기 단위 테스트입니다 .</target>
        </trans-unit>
        <trans-unit id="9305c2ae51bc6317f3b7e0f08420dbb9a45604bc" translate="yes" xml:space="preserve">
          <source>Services are singletons</source>
          <target state="translated">서비스는 싱글 톤입니다</target>
        </trans-unit>
        <trans-unit id="839cb93496558a535f12b31d66bf5a34f34d95c6" translate="yes" xml:space="preserve">
          <source>Services are singletons &lt;em&gt;within the scope of an injector&lt;/em&gt;. That is, there is at most one instance of a service in a given injector.</source>
          <target state="translated">서비스는 &lt;em&gt;인젝터 범위 내의&lt;/em&gt; 싱글 톤 입니다. 즉, 주어진 인젝터에는 최대 하나의 서비스 인스턴스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a288e60c8f7e7e905223f6ac8c505dcde6c5c899" translate="yes" xml:space="preserve">
          <source>Services are the place where you share data between parts of your application. For the online store, the cart service is where you store your cart data and methods.</source>
          <target state="translated">서비스는 응용 프로그램의 일부간에 데이터를 공유하는 장소입니다. 온라인 상점의 경우 카트 서비스는 카트 데이터 및 방법을 저장하는 곳입니다.</target>
        </trans-unit>
        <trans-unit id="1a2effe45976526a6c2870605e8ffd3001bd45af" translate="yes" xml:space="preserve">
          <source>Services can be used to share data across components:</source>
          <target state="translated">서비스를 사용하여 구성 요소간에 데이터를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="762de451edb00a9b20f3307ccbb3c3d98d62cdf8" translate="yes" xml:space="preserve">
          <source>Services can depend on other services. For example, here's a &lt;code&gt;HeroService&lt;/code&gt; that depends on the &lt;code&gt;Logger&lt;/code&gt; service, and also uses &lt;code&gt;BackendService&lt;/code&gt; to get heroes. That service in turn might depend on the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service to fetch heroes asynchronously from a server.</source>
          <target state="translated">서비스는 다른 서비스에 의존 할 수 있습니다. 예를 들어 다음 은 &lt;code&gt;Logger&lt;/code&gt; 서비스 에 의존 하는 &lt;code&gt;HeroService&lt;/code&gt; 입니다. 또한 &lt;code&gt;BackendService&lt;/code&gt; 를 사용 하여 영웅을 가져옵니다. 이 서비스 는 서버에서 비동기 적으로 영웅을 가져 오기 위해 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 서비스 에 의존 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="401c0f41762eda8ff2cea4cff5e794d5e393d21b" translate="yes" xml:space="preserve">
          <source>Services can have their own dependencies. &lt;code&gt;HeroService&lt;/code&gt; is very simple and doesn't have any dependencies of its own. Suppose, however, that you want it to report its activities through a logging service. You can apply the same &lt;em&gt;constructor injection&lt;/em&gt; pattern, adding a constructor that takes a &lt;code&gt;Logger&lt;/code&gt; parameter.</source>
          <target state="translated">서비스에는 자체 종속성이있을 수 있습니다. &lt;code&gt;HeroService&lt;/code&gt; 는 매우 간단하며 자체 종속성이 없습니다. 그러나 로깅 서비스를 통해 활동을보고하려고한다고 가정하십시오. &lt;code&gt;Logger&lt;/code&gt; 매개 변수를 사용 하는 생성자를 추가 하여 동일한 &lt;em&gt;생성자 주입&lt;/em&gt; 패턴을 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="827e3e37481ca564382603de24f2e8a86efa9fd1" translate="yes" xml:space="preserve">
          <source>Services often depend on other services that Angular injects into the constructor. In many cases, it's easy to create and &lt;em&gt;inject&lt;/em&gt; these dependencies by hand while calling the service's constructor.</source>
          <target state="translated">서비스는 종종 Angular가 생성자에 주입하는 다른 서비스에 의존합니다. 대부분의 경우 서비스 생성자를 호출하는 동안 이러한 종속성을 손 으로 만들고 &lt;em&gt;주입하는&lt;/em&gt; 것이 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="3aee7269d5419be2872cc98e6def16b7c3d10a8f" translate="yes" xml:space="preserve">
          <source>Services should declare their own providers (rather than declaring providers in the NgModule or a component), so that they are &lt;em&gt;tree-shakable&lt;/em&gt;. This allows the compiler to leave the service out of the bundle if it never gets injected into the application that imports the library. For more about this, see &lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;Tree-shakable providers&lt;/a&gt;.</source>
          <target state="translated">서비스는 NgModule 또는 구성 요소의 공급자를 선언하지 않고 자체 공급자를 선언하여 &lt;em&gt;트리&lt;/em&gt; 를 사용할 수 있도록해야 합니다. 이를 통해 라이브러리를 가져 오는 응용 프로그램에 서비스가 주입되지 않으면 컴파일러가 서비스를 번들에서 벗어날 수 있습니다. 이에 대한 자세한 내용은 &lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;Tree-shakable provider를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e82dfcf33341cfc227b80e32c5ea22e95b6eb8ea" translate="yes" xml:space="preserve">
          <source>Services that need other services</source>
          <target state="translated">다른 서비스가 필요한 서비스</target>
        </trans-unit>
        <trans-unit id="f848b0572f2356254f8426cf9aadf6c21acafad6" translate="yes" xml:space="preserve">
          <source>Services with dependencies</source>
          <target state="translated">종속성이있는 서비스</target>
        </trans-unit>
        <trans-unit id="875fd6861e3347ad594641b3f4346b9a8c43fa36" translate="yes" xml:space="preserve">
          <source>Serving static files safely</source>
          <target state="translated">정적 파일을 안전하게 제공</target>
        </trans-unit>
        <trans-unit id="01d38b48a65d5fbee3c3b1c260d84db7448d9f37" translate="yes" xml:space="preserve">
          <source>Serving with &lt;code&gt;http-server&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;http-server&lt;/code&gt; 와 함께 제공</target>
        </trans-unit>
        <trans-unit id="86c970f3006b576d2d0a47af8ac8ee2ec477387f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;localize&quot;&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to disable localization and not generate any locale-specific versions.</source>
          <target state="translated">설정 &lt;code&gt;&quot;localize&quot;&lt;/code&gt; 에 &lt;code&gt;false&lt;/code&gt; 해제 현지화되지는 로케일 특정 버전을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="dca520877a8e3af563ef6581114161f8314f588a" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;localize&quot;&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for &lt;em&gt;all&lt;/em&gt; the locales previously defined in the build configuration.</source>
          <target state="translated">설정 &lt;code&gt;&quot;localize&quot;&lt;/code&gt; 에 &lt;code&gt;true&lt;/code&gt; 에 대한 &lt;em&gt;모든&lt;/em&gt; 로케일는 이전에 빌드 구성에 정의.</target>
        </trans-unit>
        <trans-unit id="d0ff66f483f24b4d7be74d05257ab4a2e3f6ca8d" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;localize&quot;&lt;/code&gt; to an array of a subset of the previously-defined locale identifiers to build only those locale versions.</source>
          <target state="translated">설정 &lt;code&gt;&quot;localize&quot;&lt;/code&gt; 만 로케일 버전을 구축하기 이전에 정의 된 로케일 식별자의 부분 집합의 배열.</target>
        </trans-unit>
        <trans-unit id="7fbc66c9f3ca189a68e828fbb9c3c748b20efcd4" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;[attr.colspan]&lt;/code&gt; equal to an expression.</source>
          <target state="translated">&lt;code&gt;[attr.colspan]&lt;/code&gt; 을 식과 동일하게 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="1198b9a3872f9d441829a6cfe59c3ed94712b377" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;bootstrap: AppServerModuleNgFactory&lt;/code&gt; in the &lt;code&gt;ngExpressEngine&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;ngExpressEngine&lt;/code&gt; 호출 에서 &lt;code&gt;bootstrap: AppServerModuleNgFactory&lt;/code&gt; 를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="f17c419e71b4e98023c7e72ce693f22d6afc01e1" translate="yes" xml:space="preserve">
          <source>Set a breakpoint in the test.</source>
          <target state="translated">테스트에서 중단 점을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="738cb3afa0421966b35119f3c60bb9e54dc062c6" translate="yes" xml:space="preserve">
          <source>Set a collection of style values using an expression that returns key-value pairs.</source>
          <target state="translated">키-값 쌍을 반환하는 표현식을 사용하여 스타일 값 모음을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="69b4a6a1b9b3546b5c8cee5617c41058437ce5e3" translate="yes" xml:space="preserve">
          <source>Set a custom id for persistence and maintenance</source>
          <target state="translated">지속성 및 유지 관리를위한 사용자 지정 ID 설정</target>
        </trans-unit>
        <trans-unit id="86c2a8c055de05a1bd2f84270398f0dbff8d26c6" translate="yes" xml:space="preserve">
          <source>Set animation timings, styles, keyframes, and transitions.</source>
          <target state="translated">애니메이션 타이밍, 스타일, 키 프레임 및 전환을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="471487a1a43d8d54584532e4c1207f67ffaa2bdf" translate="yes" xml:space="preserve">
          <source>Set default headers</source>
          <target state="translated">기본 헤더 설정</target>
        </trans-unit>
        <trans-unit id="6a1e913063fd838570145b2ec28de7d24f805b48" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;../api/core/locale_id&quot;&gt;&lt;code&gt;LOCALE_ID&lt;/code&gt;&lt;/a&gt; token. The following example sets the value of &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;fr&lt;/code&gt; (French):</source>
          <target state="translated">&lt;a href=&quot;../api/core/locale_id&quot;&gt; &lt;code&gt;LOCALE_ID&lt;/code&gt; &lt;/a&gt; 토큰을 설정합니다 . 다음 예에서는 &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 값 을 &lt;code&gt;fr&lt;/code&gt; (프랑스어)로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="56d8bce48f1e5ed84bb4cf4b7454b851a30fa5d8" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;core/gettestability&quot;&gt;&lt;code&gt;GetTestability&lt;/code&gt;&lt;/a&gt; implementation used by the Angular testing framework.</source>
          <target state="translated">Angular 테스트 프레임 워크에서 사용 하는 &lt;a href=&quot;core/gettestability&quot;&gt; &lt;code&gt;GetTestability&lt;/code&gt; &lt;/a&gt; 구현을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="552e9310253e5b69ac0c8293430d68334ec09c09" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;gettestability&quot;&gt;&lt;code&gt;GetTestability&lt;/code&gt;&lt;/a&gt; implementation used by the Angular testing framework.</source>
          <target state="translated">Angular 테스트 프레임 워크에서 사용 하는 &lt;a href=&quot;gettestability&quot;&gt; &lt;code&gt;GetTestability&lt;/code&gt; &lt;/a&gt; 구현을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="054a7c89e7547798aa16254c5f250a3a4ad3110c" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; string to load the &lt;code&gt;CrisisCenterModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CrisisCenterModule&lt;/code&gt; 을로드 하도록 &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 문자열을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f573bd4f8c31617c5a64f08af3a4efaa8e4eb7d" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;compilerOptions&lt;/code&gt; to &lt;code&gt;es5&lt;/code&gt;.</source>
          <target state="translated">설정 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;compilerOptions&lt;/code&gt; 에 &lt;code&gt;es5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="750f6c8de781b0a9bfdf9aecda1c404e9719facb" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;data.preload&lt;/code&gt; flag in the &lt;code&gt;crisis-center&lt;/code&gt; route in the &lt;code&gt;AppRoutingModule&lt;/code&gt;.</source>
          <target state="translated">설정 &lt;code&gt;data.preload&lt;/code&gt; 의 에 플래그를 &lt;code&gt;crisis-center&lt;/code&gt; 의 경로 &lt;code&gt;AppRoutingModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df48a75aa513e829f95a6edae1444061ad7f8aa4" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;loadChildren&lt;/code&gt; string to load the &lt;code&gt;CrisisCenterModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CrisisCenterModule&lt;/code&gt; 을로드 하도록 &lt;code&gt;loadChildren&lt;/code&gt; 문자열을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ed1853de8296b7907b26010ea61d0d0b14baf64" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;providedIn&lt;/code&gt; property of the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; to &lt;code&gt;&quot;root&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 의 &lt;code&gt;providedIn&lt;/code&gt; 속성 을 &lt;code&gt;&quot;root&quot;&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="55875d634ce533933ff366c19098dc27280143e9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;shippingCosts&lt;/code&gt; property using the &lt;code&gt;getShippingPrices()&lt;/code&gt; method from cart service.</source>
          <target state="translated">카트 서비스 의 &lt;code&gt;getShippingPrices()&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;shippingCosts&lt;/code&gt; 특성을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="47052b3a1ded676028cf0f9850874fd157fa342b" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;shippingCosts&lt;/code&gt; property using the &lt;code&gt;getShippingPrices()&lt;/code&gt; method from the cart service.</source>
          <target state="translated">장바구니 서비스에서 &lt;code&gt;getShippingPrices()&lt;/code&gt; 메서드를 사용하여 &lt;code&gt;shippingCosts&lt;/code&gt; 속성을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="b16b24857617917dc691c200f30eae236f5825e1" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;updateOn&lt;/code&gt; option to &lt;code&gt;'blur'&lt;/code&gt; to update on the blur &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;updateOn&lt;/code&gt; &lt;code&gt;event&lt;/code&gt; 를 업데이트 하려면 updateOn 옵션을 &lt;code&gt;'blur'&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="64745b07552e13c9c61a550ec430816d59d4545f" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;updateOn&lt;/code&gt; option to &lt;code&gt;'submit'&lt;/code&gt; to update on a submit &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">제출 &lt;code&gt;event&lt;/code&gt; 에서 업데이트 하려면 &lt;code&gt;updateOn&lt;/code&gt; 옵션을 &lt;code&gt;'submit'&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="643460427f8dc3513c9eff9596a85daae5e1255a" translate="yes" xml:space="preserve">
          <source>Set the CSS &lt;em&gt;attribute selector&lt;/em&gt; that identifies the directive when applied to an element in a template.</source>
          <target state="translated">템플리트의 요소에 적용될 때 지시문을 식별 하는 CSS &lt;em&gt;속성 선택기&lt;/em&gt; 를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e4c0854883b7166fb5c76f18fdd788456cb90b6" translate="yes" xml:space="preserve">
          <source>Set the complete value for the form group</source>
          <target state="translated">양식 그룹의 전체 값을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="3d106312dcdcec010586e075d6c26577e1d33160" translate="yes" xml:space="preserve">
          <source>Set the font of the containing element to the result of an expression.</source>
          <target state="translated">포함하는 요소의 글꼴을 표현식의 결과로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="08a6bf6ca8a531b700e00d9483de23606b228acf" translate="yes" xml:space="preserve">
          <source>Set the items using the cart service's &lt;code&gt;getItems()&lt;/code&gt; method. (You defined this method &lt;a href=&quot;https://angular.io/start/start/data#generate-cart-service&quot;&gt;when you generated &lt;code&gt;cart.service.ts&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">카트 서비스의 &lt;code&gt;getItems()&lt;/code&gt; 메소드를 사용하여 항목을 설정하십시오 . ( &lt;a href=&quot;https://angular.io/start/start/data#generate-cart-service&quot;&gt; &lt;code&gt;cart.service.ts&lt;/code&gt; &lt;/a&gt; 를 생성 할 때이 방법을 정의했습니다 .)</target>
        </trans-unit>
        <trans-unit id="c913cf4a49b61ba6a255b6d18ba11d54d1f44f8d" translate="yes" xml:space="preserve">
          <source>Set the items using the cart service's &lt;code&gt;getItems()&lt;/code&gt; method. Recall that you defined this method &lt;a href=&quot;https://angular.io/start/start/start-data#generate-cart-service&quot;&gt;when you generated &lt;code&gt;cart.service.ts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">장바구니 서비스의 &lt;code&gt;getItems()&lt;/code&gt; 메서드를 사용하여 항목을 설정합니다 . &lt;a href=&quot;https://angular.io/start/start/start-data#generate-cart-service&quot;&gt; &lt;code&gt;cart.service.ts&lt;/code&gt; &lt;/a&gt; 를 생성 할 때이 메서드를 정의했음을 기억 하십시오 .</target>
        </trans-unit>
        <trans-unit id="50ad64b7d37e4ccb6b540e90cd0c3f10f634201c" translate="yes" xml:space="preserve">
          <source>Set the new value for the input to &lt;em&gt;Red&lt;/em&gt;, and dispatch the &quot;input&quot; event on the form input element.</source>
          <target state="translated">입력의 새 값을 &lt;em&gt;Red로&lt;/em&gt; 설정하고 양식 입력 요소에서 &quot;input&quot;이벤트를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="bae9fdb83bd247d251685df2b94426ce39765a6b" translate="yes" xml:space="preserve">
          <source>Set the proxy configuration file to &lt;code&gt;proxy.conf.js&lt;/code&gt; (instead of &lt;code&gt;proxy.conf.json&lt;/code&gt;), and specify configuration files as in the following example.</source>
          <target state="translated">프록시 구성 파일을 &lt;code&gt;proxy.conf.js&lt;/code&gt; on 대신 &lt;code&gt;proxy.conf.json&lt;/code&gt; 설정하고 다음 예제와 같이 구성 파일을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="2520a4a20a770223794dbe482bd062cd28c97b3f" translate="yes" xml:space="preserve">
          <source>Set the router to compose HTML5 browser URLs.</source>
          <target state="translated">라우터가 HTML5 브라우저 URL을 작성하도록 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5a84d65dd973fc39a2aa90cadd09c17ec915561a" translate="yes" xml:space="preserve">
          <source>Set the source locale manually</source>
          <target state="translated">수동으로 소스 로케일 설정</target>
        </trans-unit>
        <trans-unit id="dece8573c3fa34cb3d93f7729f8d90e971614b31" translate="yes" xml:space="preserve">
          <source>Set the title of the current HTML document.</source>
          <target state="translated">현재 HTML 문서의 제목을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="cb1f4eb94fb2add08c2048ba41248f137bd52b32" translate="yes" xml:space="preserve">
          <source>Set the updateOn property for all controls in a form array</source>
          <target state="translated">양식 배열의 모든 컨트롤에 대해 updateOn 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="3926d1813cf37caf94ee3a8384a5fde2db026aa4" translate="yes" xml:space="preserve">
          <source>Set the updateOn property for all controls in a form group</source>
          <target state="translated">양식 그룹의 모든 컨트롤에 대해 updateOn 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="27f14c9a108c4c2368f8e2a7f390858f90f8e047" translate="yes" xml:space="preserve">
          <source>Set the value corresponding to a key.</source>
          <target state="translated">키에 해당하는 값을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a798734ef7e53b4ea12d96417cb4571dae5b053c" translate="yes" xml:space="preserve">
          <source>Set the value of an attribute directly with an &lt;strong&gt;attribute binding&lt;/strong&gt;. This is the only exception to the rule that a binding sets a target property and the only binding that creates and sets an attribute.</source>
          <target state="translated">&lt;strong&gt;속성 바인딩을&lt;/strong&gt; 사용하여 &lt;strong&gt;속성&lt;/strong&gt; 값을 직접 설정하십시오 . 바인딩이 대상 속성을 설정하는 규칙과 속성을 만들고 설정하는 유일한 바인딩은 예외입니다.</target>
        </trans-unit>
        <trans-unit id="254ca05987dfc9294af58db7ae1faf489fcf3c04" translate="yes" xml:space="preserve">
          <source>Set the values for the controls in the form array</source>
          <target state="translated">양식 배열에서 컨트롤 값을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ad7256a72229358f8f1fff2d736e08ee67e29e4b" translate="yes" xml:space="preserve">
          <source>Set the width of the containing element to a pixel value returned by an expression.</source>
          <target state="translated">포함하는 요소의 너비를 표현식에서 리턴 한 픽셀 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a9b9fa97a9536da22e35167aab455d8ba3bdcf67" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;true&lt;/code&gt; when you want the fixture to detect changes automatically.</source>
          <target state="translated">조명기가 자동으로 변경을 감지하도록하려면 이것을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a90835fe79ccd2570de94f05d1889c0923d56316" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; if you are using TypeScript's &lt;code&gt;--outFile&lt;/code&gt; option, because the metadata files are not valid for this style of TypeScript output. However, we do not recommend using &lt;code&gt;--outFile&lt;/code&gt; with Angular. Use a bundler, such as &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;, instead.</source>
          <target state="translated">메타 데이터 파일이이 유형의 TypeScript 출력에 유효하지 않으므로 TypeScript의 &lt;code&gt;--outFile&lt;/code&gt; 옵션을 사용하는 경우 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 그러나 Angular에는 &lt;code&gt;--outFile&lt;/code&gt; 을 사용하지 않는 것이 좋습니다 . 대신 &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; 과 같은 번 들러 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e380ce578de81eeac21b4cb893328ae5bc78b83a" translate="yes" xml:space="preserve">
          <source>Set up an app</source>
          <target state="translated">앱 설정</target>
        </trans-unit>
        <trans-unit id="bda7e96787a89877d8fdebbf6da139aeb613ff36" translate="yes" xml:space="preserve">
          <source>Set up continuous integration</source>
          <target state="translated">지속적인 통합 설정</target>
        </trans-unit>
        <trans-unit id="3c3bbc8e614a21bc15426359627dde34be082adf" translate="yes" xml:space="preserve">
          <source>Set up redirects</source>
          <target state="translated">리디렉션 설정</target>
        </trans-unit>
        <trans-unit id="6579b9b9275cf13075aebbcd7aa923cc01d1f327" translate="yes" xml:space="preserve">
          <source>Set up testing</source>
          <target state="translated">테스트 설정</target>
        </trans-unit>
        <trans-unit id="cb42dd6a3cc3c8004aae58d885663b83df29f707" translate="yes" xml:space="preserve">
          <source>Set up the UI</source>
          <target state="translated">UI 설정</target>
        </trans-unit>
        <trans-unit id="89d6ff37f332c1500fe38f269eb3664b72e48057" translate="yes" xml:space="preserve">
          <source>Set up the component</source>
          <target state="translated">구성 요소 설정</target>
        </trans-unit>
        <trans-unit id="8a484bbbf20cb3883bac475b7937379c5388df93" translate="yes" xml:space="preserve">
          <source>Set up the component after Angular sets the input properties. Constructors should do no more than set the initial local variables to simple values.</source>
          <target state="translated">Angular가 입력 속성을 설정 한 후 구성 요소를 설정합니다. 생성자는 초기 지역 변수를 단순한 값으로 설정하는 것 이상을 수행해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="d2e162d9db64b0698e4b22345a7f83bb0a91200d" translate="yes" xml:space="preserve">
          <source>Set up the component to be able to use the cart service.</source>
          <target state="translated">카트 서비스를 사용할 수 있도록 구성 요소를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6e7e0cbb51939113b1621b21fba7c90fa7c6e0f6" translate="yes" xml:space="preserve">
          <source>Set up the component to be able to use the cart service. (This is the same way you set up the product details component to use the cart service, above.)</source>
          <target state="translated">카트 서비스를 사용할 수 있도록 구성 요소를 설정하십시오. (위의 카트 서비스를 사용하도록 제품 세부 사항 구성 요소를 설정하는 것과 동일한 방법입니다.)</target>
        </trans-unit>
        <trans-unit id="df44c5c40fedfcfaa9b61252fc1e75b7e4f01ca6" translate="yes" xml:space="preserve">
          <source>Set up the new product alerts component to receive a product as input:</source>
          <target state="translated">제품을 입력으로 수신하도록 새 제품 경보 구성 요소를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ede5f7c82c5d89346f5d1512d578f9ce634f5795" translate="yes" xml:space="preserve">
          <source>Set up your environment</source>
          <target state="translated">환경 설정</target>
        </trans-unit>
        <trans-unit id="b549d363bd3fe30c03af25da4c9fffb7bd845170" translate="yes" xml:space="preserve">
          <source>Set up your environment.</source>
          <target state="translated">환경을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8ffd5ac8c69b341adc77658d1521202e6a7a3af4" translate="yes" xml:space="preserve">
          <source>Set whether the fixture should autodetect changes.</source>
          <target state="translated">조명기가 변경 사항을 자동 감지해야하는지 여부를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b227d5a952b1c47332083790ad263bc1da265b17" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;animatetimings&quot;&gt;AnimateTimings&lt;/a&gt;&lt;/code&gt; for the parent animation. A string in the format &quot;duration [delay][easing]&quot;.</source>
          <target state="translated">부모 애니메이션에 대한 &lt;code&gt;&lt;a href=&quot;animatetimings&quot;&gt;AnimateTimings&lt;/a&gt;&lt;/code&gt; 를 설정 합니다. &quot;duration [delay] [easing]&quot;형식의 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4e44e02e61a4d878b167f4125c5c23c79a43f22c" translate="yes" xml:space="preserve">
          <source>Sets AnimationStyles for the parent animation. A function call to either &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; that returns a collection of CSS style entries to be applied to the parent animation. When null, uses the styles from the destination state. This is useful when describing an animation step that will complete an animation; see &quot;Animating to the final state&quot; in &lt;code&gt;transitions()&lt;/code&gt;.</source>
          <target state="translated">부모 애니메이션의 AnimationStyles를 설정합니다. 부모 애니메이션에 적용 할 CSS 스타일 항목 모음을 반환하는 &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 대한 함수 호출 입니다. null의 경우, 목적지 상태의 스타일을 사용합니다. 이것은 애니메이션을 완성 할 애니메이션 단계를 설명 할 때 유용합니다. &lt;code&gt;transitions()&lt;/code&gt; &quot;최종 상태로 애니메이션&quot;을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eee73d6992a2fe8ba0db9c96625781e26477dfad" translate="yes" xml:space="preserve">
          <source>Sets a new value for the form control.</source>
          <target state="translated">폼 컨트롤의 새 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a20d959f0b210975fdf07b42d7c4fd5e4620519a" translate="yes" xml:space="preserve">
          <source>Sets a specific element property.</source>
          <target state="translated">특정 요소 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a121f641721bb9e0761bf738a12aa240427f80a2" translate="yes" xml:space="preserve">
          <source>Sets a time-delay for initiating an animation action. A number and optional time unit, such as &quot;1s&quot; or &quot;10ms&quot; for one second and 10 milliseconds, respectively.The default unit is milliseconds. Default value is 0, meaning no delay.</source>
          <target state="translated">애니메이션 작업을 시작하기위한 시간 지연을 설정합니다. 1 초 및 10 밀리 초 동안 각각 &quot;1s&quot;또는 &quot;10ms&quot;와 같은 숫자 및 선택적 시간 단위입니다. 기본 단위는 밀리 초입니다. 기본값은 0이며 지연이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a932f4c7dd055e4cb8d562239ee85515c3dbb28b" translate="yes" xml:space="preserve">
          <source>Sets errors on a form control when running validations manually, rather than automatically.</source>
          <target state="translated">유효성 검사를 자동이 아닌 수동으로 실행할 때 양식 컨트롤에 오류를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0b6dd7ecdc8f413643674f0078a939de32e67a6c" translate="yes" xml:space="preserve">
          <source>Sets or modifies a value for a given header in a clone of the original instance. If the header already exists, its value is replaced with the given value in the returned object.</source>
          <target state="translated">원본 인스턴스의 복제본에서 지정된 헤더의 값을 설정하거나 수정합니다. 헤더가 이미 존재하면 그 값은 반환 된 객체에서 주어진 값으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="2397a9be73764c91657ed2e8e9331d801f9f1ac9" translate="yes" xml:space="preserve">
          <source>Sets or overrides the provider for &lt;code&gt;MyService&lt;/code&gt; to the &lt;code&gt;MyMockService&lt;/code&gt; class.</source>
          <target state="translated">설정하거나 재 지정을위한 공급자 &lt;code&gt;MyService&lt;/code&gt; 받는 &lt;code&gt;MyMockService&lt;/code&gt; 의 클래스를.</target>
        </trans-unit>
        <trans-unit id="8017647d64f5622a2a2e980cc3fd8b7b73b0a18b" translate="yes" xml:space="preserve">
          <source>Sets or overrides the provider for &lt;code&gt;MyService&lt;/code&gt; to the &lt;code&gt;myFactory&lt;/code&gt; factory function.</source>
          <target state="translated">설정하거나 재 지정을위한 공급자 &lt;code&gt;MyService&lt;/code&gt; 받는 &lt;code&gt;myFactory&lt;/code&gt; 공장 기능.</target>
        </trans-unit>
        <trans-unit id="5359678b08dbb9c8698f03c822c55282927884df" translate="yes" xml:space="preserve">
          <source>Sets or overrides the provider for &lt;code&gt;MyValue&lt;/code&gt; to the value &lt;code&gt;41&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MyValue&lt;/code&gt; 의 제공자를 값 &lt;code&gt;41&lt;/code&gt; 로 설정하거나 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="de7ff004dc80e320200e1a7704be95ad1bbacd64" translate="yes" xml:space="preserve">
          <source>Sets query parameters to the URL.</source>
          <target state="translated">쿼리 매개 변수를 URL로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e6a02cc1912fbe5b1eaee5d99857f16a7dc50a8c" translate="yes" xml:space="preserve">
          <source>Sets the &quot;checked&quot; property on the input element.</source>
          <target state="translated">입력 요소에서 &quot;checked&quot;속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="da002d54c6d3246f2cdc1e6a3aa0c856a808fe84" translate="yes" xml:space="preserve">
          <source>Sets the &quot;checked&quot; property value on the radio input element.</source>
          <target state="translated">라디오 입력 요소의 &quot;checked&quot;속성 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3135786e97ae04b89cdca47774eb2c8edccf52d1" translate="yes" xml:space="preserve">
          <source>Sets the &quot;disabled&quot; property on the input element.</source>
          <target state="translated">입력 요소에서 &quot;disabled&quot;속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="21de3dd20a3bc2401e77a6b61d51fc64c7090752" translate="yes" xml:space="preserve">
          <source>Sets the &quot;disabled&quot; property on the range input element.</source>
          <target state="translated">범위 입력 요소에서 &quot;disabled&quot;속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4591735c1a7f3a834fcd4ccb9df9dabaae88da9d" translate="yes" xml:space="preserve">
          <source>Sets the &quot;disabled&quot; property on the select input element.</source>
          <target state="translated">선택 입력 요소에서 &quot;disabled&quot;속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e141bb2dc2ee921e5386bed1af4e8e3ceecc01ac" translate="yes" xml:space="preserve">
          <source>Sets the &quot;value&quot; on the radio input element and unchecks it.</source>
          <target state="translated">라디오 입력 요소에 &quot;값&quot;을 설정하고 선택을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="9ce200a8d28d8ee1a9c60de06da13e10e7074909" translate="yes" xml:space="preserve">
          <source>Sets the &quot;value&quot; property on one or of more of the select's options.</source>
          <target state="translated">선택 옵션 중 하나 이상에 &quot;value&quot;속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="83772bc6068280e41ba7718047fa8cc1aa198140" translate="yes" xml:space="preserve">
          <source>Sets the &quot;value&quot; property on the input element.</source>
          <target state="translated">입력 요소에서 &quot;value&quot;속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="edf6aa35e9c21401ffafce113e4d71886ad823b7" translate="yes" xml:space="preserve">
          <source>Sets the &quot;value&quot; property on the input element. The &quot;selectedIndex&quot; property is also set if an ID is provided on the option element.</source>
          <target state="translated">입력 요소에서 &quot;value&quot;속성을 설정합니다. 옵션 요소에 ID가 제공된 경우 &quot;selectedIndex&quot;특성도 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="eba26ff48c5ca9a72408acad91118c751f9fb4bf" translate="yes" xml:space="preserve">
          <source>Sets the async validators that are active on this control. Calling this overwrites any existing async validators.</source>
          <target state="translated">이 컨트롤에서 활성화 된 비동기 유효성 검사기를 설정합니다. 이것을 호출하면 기존의 비동기 유효성 검사기를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="90149f8a604649d36656caedeaa2fa7f404a5cbc" translate="yes" xml:space="preserve">
          <source>Sets the default analytics enablement status for the project.</source>
          <target state="translated">프로젝트의 기본 분석 사용 상태를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4f39aa7fa5866f335458aa91128888edd8ab9b33" translate="yes" xml:space="preserve">
          <source>Sets the hash fragment for the URL.</source>
          <target state="translated">URL의 해시 조각을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="747797a1e092ad0fdf7555d5c08c92feda60fbfe" translate="yes" xml:space="preserve">
          <source>Sets the new value for the provided &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; 지시문 의 새 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="662f5566c96ab5084f833c91a0950acff27445a7" translate="yes" xml:space="preserve">
          <source>Sets the new value for the provided &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; 지시문 의 새 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="102090bbaec19cd5f3966d9344b4a79b6858332d" translate="yes" xml:space="preserve">
          <source>Sets the new value for the view model and emits an &lt;code&gt;ngModelChange&lt;/code&gt; event.</source>
          <target state="translated">뷰 모델의 새 값을 설정하고 &lt;code&gt;ngModelChange&lt;/code&gt; 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b8e4c683062158b6619cbd07649de6532a660474" translate="yes" xml:space="preserve">
          <source>Sets the parent of the control</source>
          <target state="translated">컨트롤의 부모를 설정합니다</target>
        </trans-unit>
        <trans-unit id="14122933f8102c879cfceea80628ab8dd8faba10" translate="yes" xml:space="preserve">
          <source>Sets the position of the animation.</source>
          <target state="translated">애니메이션의 위치를 ​​설정합니다.</target>
        </trans-unit>
        <trans-unit id="412ed66fceed305048c738bcb94b3d3f6db83ad5" translate="yes" xml:space="preserve">
          <source>Sets the synchronous validators that are active on this control. Calling this overwrites any existing sync validators.</source>
          <target state="translated">이 컨트롤에서 활성화 된 동기 유효성 검사기를 설정합니다. 이것을 호출하면 기존 동기화 유효성 검사기를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="a39e5878ffe7a1538d240efe308693b6c7032fa8" translate="yes" xml:space="preserve">
          <source>Sets the value for this &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="bae1f83b15a4a110189a04bd1602ff39e37141b1" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. It accepts an array that matches the structure of the control.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 의 값을 설정합니다 . 컨트롤의 구조와 일치하는 배열을받습니다.</target>
        </trans-unit>
        <trans-unit id="3afcf3e790c4814a63e533925614fde272d17fbb" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. It accepts an object that matches the structure of the group, with control names as keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 값을 설정합니다 . 제어 이름을 키로 사용하여 그룹 구조와 일치하는 오브젝트를 승인합니다.</target>
        </trans-unit>
        <trans-unit id="d877d338ad8214880ec5d5a6a2e8b72b9e12d07d" translate="yes" xml:space="preserve">
          <source>Sets the value of the control. Abstract method (implemented in sub-classes).</source>
          <target state="translated">컨트롤 값을 설정합니다. 추상 메소드 (서브 클래스에서 구현 됨).</target>
        </trans-unit>
        <trans-unit id="3c9ce752c38de71c889aa96e373a758daa13e1cc" translate="yes" xml:space="preserve">
          <source>Sets up a location change listener to trigger &lt;code&gt;history.pushState&lt;/code&gt;. Works around the problem that &lt;code&gt;onPopState&lt;/code&gt; does not trigger &lt;code&gt;history.pushState&lt;/code&gt;. Must be called &lt;em&gt;after&lt;/em&gt; calling &lt;code&gt;UpgradeModule.bootstrap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;history.pushState&lt;/code&gt; 를 트리거하도록 위치 변경 리스너를 설정합니다 . &lt;code&gt;onPopState&lt;/code&gt; 가 &lt;code&gt;history.pushState&lt;/code&gt; 를 트리거하지 않는 문제를 해결합니다 . &lt;code&gt;UpgradeModule.bootstrap&lt;/code&gt; 을 호출 &lt;em&gt;한 후&lt;/em&gt; 호출 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="daf2524202488a197baa7074fe2881fdd0894d6c" translate="yes" xml:space="preserve">
          <source>Sets up a new channel on the MessageBus. MUST be called before calling from or to on the channel. If runInZone is true then the source will emit events inside the angular zone and the sink will buffer messages and send only once the zone exits. if runInZone is false then the source will emit events inside the global zone and the sink will send messages immediately.</source>
          <target state="translated">MessageBus에서 새 채널을 설정합니다. 채널에서 또는 채널로 전화하기 전에 호출해야합니다. runInZone이 true이면 소스는 각도 영역 내에서 이벤트를 생성하고 싱크는 메시지를 버퍼링하고 영역이 종료 된 후에 만 ​​전송합니다. runInZone이 false이면 소스는 전역 영역 내에서 이벤트를 생성하고 싱크는 즉시 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="28c37f243460c3ab848efad572037128c4095293" translate="yes" xml:space="preserve">
          <source>Sets up a new channel on the MessageBusSink. MUST be called before calling to on the channel. If runInZone is true the sink will buffer messages and send only once the zone exits. if runInZone is false the sink will send messages immediately.</source>
          <target state="translated">MessageBusSink에서 새 채널을 설정합니다. 채널을 호출하기 전에 호출해야합니다. runInZone이 true이면 싱크는 메시지를 버퍼링하고 영역이 종료 된 후에 만 ​​보냅니다. runInZone이 false이면 싱크가 즉시 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b713eca28144e3fd698b33f57e28971b26441d0c" translate="yes" xml:space="preserve">
          <source>Sets up a new channel on the MessageBusSource. MUST be called before calling from on the channel. If runInZone is true then the source will emit events inside the angular zone. if runInZone is false then the source will emit events inside the global zone.</source>
          <target state="translated">MessageBusSource에서 새 채널을 설정합니다. 채널에서 전화하기 전에 호출해야합니다. runInZone이 true이면 소스는 각도 영역 내에서 이벤트를 생성합니다. runInZone이 false이면 소스는 전역 영역 내에서 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="989aad70fad315523dddb686f431b61c4e1b979e" translate="yes" xml:space="preserve">
          <source>Sets up the location change listener and performs the initial navigation.</source>
          <target state="translated">위치 변경 리스너를 설정하고 초기 탐색을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e10ece235de8b79fbe9c667a5131988df7fc209c" translate="yes" xml:space="preserve">
          <source>Sets up the location change listener.</source>
          <target state="translated">위치 변경 리스너를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="205afce43cad32498bb9a3bc662a26afa4e3ca36" translate="yes" xml:space="preserve">
          <source>Sets up the location change listener. This listener detects navigations triggered from outside the Router (the browser back/forward buttons, for example) and schedules a corresponding Router navigation so that the correct events, guards, etc. are triggered.</source>
          <target state="translated">위치 변경 리스너를 설정합니다. 이 리스너는 라우터 외부에서 트리거 된 탐색 (예 : 브라우저 뒤로 / 앞으로 버튼)을 감지하고 해당 라우터 탐색을 예약하여 올바른 이벤트, 가드 등이 트리거되도록합니다.</target>
        </trans-unit>
        <trans-unit id="eedef89effaf95d3c7936187c744860cfa4d0c66" translate="yes" xml:space="preserve">
          <source>Sets up the router to be used for testing.</source>
          <target state="translated">테스트에 사용될 라우터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="11e0bea59e56f79670c39861d395c39c9a59d397" translate="yes" xml:space="preserve">
          <source>Sets up two-way data binding. Equivalent to: &lt;code&gt;&amp;lt;my-cmp [title]=&quot;name&quot; (titleChange)=&quot;name=$event&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">양방향 데이터 바인딩을 설정합니다. 당량 : &lt;code&gt;&amp;lt;my-cmp [title]=&quot;name&quot; (titleChange)=&quot;name=$event&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="322618b01fbc93843d536e6e318e602cfb8f3088" translate="yes" xml:space="preserve">
          <source>Setting a directive property</source>
          <target state="translated">지시문 속성 설정</target>
        </trans-unit>
        <trans-unit id="61300d1359b01277088d2e4991e1b6c261f41bb2" translate="yes" xml:space="preserve">
          <source>Setting an element property to a component property value</source>
          <target state="translated">요소 속성을 구성 요소 속성 값으로 설정</target>
        </trans-unit>
        <trans-unit id="f9790c0d7a22a58d04f45c751dcf9f71773fa624" translate="yes" xml:space="preserve">
          <source>Setting and handling query params and fragments</source>
          <target state="translated">쿼리 매개 변수 및 조각 설정 및 처리</target>
        </trans-unit>
        <trans-unit id="6eb4c2d4d3750170085044ec1482b24d0a60b397" translate="yes" xml:space="preserve">
          <source>Setting component inputs</source>
          <target state="translated">컴포넌트 입력 설정</target>
        </trans-unit>
        <trans-unit id="9b61d85a28211ede363fbf6ab2d3304348a6ae46" translate="yes" xml:space="preserve">
          <source>Setting component outputs</source>
          <target state="translated">컴포넌트 출력 설정</target>
        </trans-unit>
        <trans-unit id="240b24b6f77b8611ddfa6d99cfaf853d60bd53a0" translate="yes" xml:space="preserve">
          <source>Setting default headers</source>
          <target state="translated">기본 헤더 설정</target>
        </trans-unit>
        <trans-unit id="418beebb985e8d40774763fdd4f9e8a6047b5b90" translate="yes" xml:space="preserve">
          <source>Setting the document title</source>
          <target state="translated">문서 제목 설정</target>
        </trans-unit>
        <trans-unit id="6adccaaf3a1a74092599876b43886dd7c2349874" translate="yes" xml:space="preserve">
          <source>Setting the ngModel &lt;code&gt;name&lt;/code&gt; attribute through options</source>
          <target state="translated">옵션을 통해 ngModel &lt;code&gt;name&lt;/code&gt; 속성 설정</target>
        </trans-unit>
        <trans-unit id="df5671cc8514926f1d118740d49af3cc59b3c235" translate="yes" xml:space="preserve">
          <source>Setting the ngModel name attribute through options</source>
          <target state="translated">옵션을 통한 ngModel 이름 속성 설정</target>
        </trans-unit>
        <trans-unit id="9ad7e9cc45b2ce82143e70a6114cab19d4c5156f" translate="yes" xml:space="preserve">
          <source>Setting the route parameters in the list view</source>
          <target state="translated">목록보기에서 경로 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="7f58893d60ced0e9cf83b19c13175a67bcd2a2bd" translate="yes" xml:space="preserve">
          <source>Setting the update options</source>
          <target state="translated">업데이트 옵션 설정</target>
        </trans-unit>
        <trans-unit id="52af24b7e1b67d0d1c334ca5f76c85ff390ef098" translate="yes" xml:space="preserve">
          <source>Setting up for a multi-project workspace</source>
          <target state="translated">다중 프로젝트 작업 공간 설정</target>
        </trans-unit>
        <trans-unit id="9f3325c52da2ea3c8972f31f4131a4ae537caa04" translate="yes" xml:space="preserve">
          <source>Setting up redirects</source>
          <target state="translated">리디렉션 설정</target>
        </trans-unit>
        <trans-unit id="dbfb79dca5a3fa6f5492dcb0dbd760074c0a616b" translate="yes" xml:space="preserve">
          <source>Setting up the Local Environment and Workspace</source>
          <target state="translated">로컬 환경 및 작업 공간 설정</target>
        </trans-unit>
        <trans-unit id="a92460642bfc0b8de2d56759cd22220ee95e6fa3" translate="yes" xml:space="preserve">
          <source>Setting up the form model</source>
          <target state="translated">양식 모델 설정</target>
        </trans-unit>
        <trans-unit id="8443258e83de665f4843f0d35c245ef220860202" translate="yes" xml:space="preserve">
          <source>Setting up the local environment and workspace</source>
          <target state="translated">로컬 환경 및 작업 공간 설정</target>
        </trans-unit>
        <trans-unit id="2f9b39324341c8d17a913e140595007f008b9a69" translate="yes" xml:space="preserve">
          <source>Setting up the locale of your app</source>
          <target state="translated">앱의 로캘 설정</target>
        </trans-unit>
        <trans-unit id="bf92cdb1f24b3bc305daef4fba6298e671c01c69" translate="yes" xml:space="preserve">
          <source>Setting up wildcard routes</source>
          <target state="translated">와일드 카드 경로 설정</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="3069b76decca4de1953abdd5da5d348417b5f47f" translate="yes" xml:space="preserve">
          <source>Setup (form model)</source>
          <target state="translated">설치 (양식 모델)</target>
        </trans-unit>
        <trans-unit id="317611c1fcbb4bcd2392365bc7cfce35166d7f65" translate="yes" xml:space="preserve">
          <source>Setup a callback function for your AngularJS bundle.</source>
          <target state="translated">AngularJS 번들에 대한 콜백 기능을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6569f8ceb2ac4c362c3c6ed73c3ed4ed88e2ae63" translate="yes" xml:space="preserve">
          <source>Setup for Upgrading from AngularJS</source>
          <target state="translated">AngularJS에서 업그레이드하기위한 설정</target>
        </trans-unit>
        <trans-unit id="88c9e8680f0eada3df07f5f64399544f7b8e9890" translate="yes" xml:space="preserve">
          <source>Setup for server communication</source>
          <target state="translated">서버 통신 설정</target>
        </trans-unit>
        <trans-unit id="a43450ab9095e06dfb67d8b8f806b213439ea944" translate="yes" xml:space="preserve">
          <source>Setup for testing</source>
          <target state="translated">테스트 설정</target>
        </trans-unit>
        <trans-unit id="3d0a06972587e76262044a2d73946f27e1438607" translate="yes" xml:space="preserve">
          <source>Setup for upgrading from AngularJS</source>
          <target state="translated">AngularJS에서 업그레이드하기위한 설정</target>
        </trans-unit>
        <trans-unit id="4d358b8c957d01b496bfc95e71038f36f44873ed" translate="yes" xml:space="preserve">
          <source>Setup in reactive forms</source>
          <target state="translated">반응 형 설정</target>
        </trans-unit>
        <trans-unit id="e012efc5a4a9b0e21f2a00936b3667bbd9f54242" translate="yes" xml:space="preserve">
          <source>Setup in template-driven forms</source>
          <target state="translated">템플릿 기반 양식으로 설정</target>
        </trans-unit>
        <trans-unit id="b8b72bc707512b6783016d0be2f6adc84ec50c6c" translate="yes" xml:space="preserve">
          <source>Setup of form model</source>
          <target state="translated">양식 모델 설정</target>
        </trans-unit>
        <trans-unit id="db2e8af4bcf86370e056007702c205f71c33ef32" translate="yes" xml:space="preserve">
          <source>Setup with module imports</source>
          <target state="translated">모듈 가져 오기로 설정</target>
        </trans-unit>
        <trans-unit id="18272a259bf7d280b0ab91fe4bc2e08ba6fb586c" translate="yes" xml:space="preserve">
          <source>Setup, build, and deployment configuration</source>
          <target state="translated">설정, 빌드 및 배포 구성</target>
        </trans-unit>
        <trans-unit id="05aa7a7c44d7458d5d570cc0e3017095400b4a7d" translate="yes" xml:space="preserve">
          <source>Share information across HTML elements using &lt;a href=&quot;template-reference-variables&quot;&gt;template reference variables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;template-reference-variables&quot;&gt;템플릿 참조 변수를&lt;/a&gt; 사용하여 HTML 요소간에 정보를 공유 합니다 .</target>
        </trans-unit>
        <trans-unit id="5346a85c4699994813d2e863322e902611969b97" translate="yes" xml:space="preserve">
          <source>Share information across HTML elements using template reference variables.</source>
          <target state="translated">템플릿 참조 변수를 사용하여 HTML 요소에서 정보를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="ab04c254355ee15b0d61dd39f23e2d299fb5f9df" translate="yes" xml:space="preserve">
          <source>Share this URL with a friend or colleague.</source>
          <target state="translated">이 URL을 친구 나 동료와 공유하십시오.</target>
        </trans-unit>
        <trans-unit id="7af3838e8ea6ac8d686935f882e1db1eaa0a1b28" translate="yes" xml:space="preserve">
          <source>Share your application</source>
          <target state="translated">응용 프로그램 공유</target>
        </trans-unit>
        <trans-unit id="50d0d8dd11a959484cb838e05c14b2e51b64c68d" translate="yes" xml:space="preserve">
          <source>Shared</source>
          <target state="translated">Shared</target>
        </trans-unit>
        <trans-unit id="6c955e415c6efbd79acfd9033cccb8b117f58e4f" translate="yes" xml:space="preserve">
          <source>Shared NgModules</source>
          <target state="translated">공유 NgModules</target>
        </trans-unit>
        <trans-unit id="9e018da0c4562eeaed26a34afac5a4e1340ac223" translate="yes" xml:space="preserve">
          <source>Shared NgModules should not include providers, nor should any of its imported or re-exported NgModules include providers.</source>
          <target state="translated">공유 된 NgModules에는 공급자가 포함되어서는 안되며, 가져 오거나 다시 내보내는 NgModules에 공급자가 포함되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="6f17cb939aa9fc37636c921723119fbcfd9f5ca7" translate="yes" xml:space="preserve">
          <source>Shared feature module</source>
          <target state="translated">공유 기능 모듈</target>
        </trans-unit>
        <trans-unit id="e387c96cf6c24ae5e9b8d657798469f0a1d4311e" translate="yes" xml:space="preserve">
          <source>Sharing Modules</source>
          <target state="translated">공유 모듈</target>
        </trans-unit>
        <trans-unit id="0ca497323801be615939563d3466ec1459dc916b" translate="yes" xml:space="preserve">
          <source>Sharing data between child and parent directives and components</source>
          <target state="translated">하위 및 상위 지시문 및 구성 요소간에 데이터 공유</target>
        </trans-unit>
        <trans-unit id="57b675a67a457e9d6bcf8377fa9044efbd89d353" translate="yes" xml:space="preserve">
          <source>Sharing modules</source>
          <target state="translated">모듈 공유</target>
        </trans-unit>
        <trans-unit id="0fe7d82f25a3015040a206e54f9c1d3a9717c4c4" translate="yes" xml:space="preserve">
          <source>Short</source>
          <target state="translated">Short</target>
        </trans-unit>
        <trans-unit id="10d6a094ec382ffc7598dae6966c496f706027f4" translate="yes" xml:space="preserve">
          <source>Short Form</source>
          <target state="translated">짧은 형식</target>
        </trans-unit>
        <trans-unit id="7fd3c0e136d11edf17bca2d957fe2ddaeba002c5" translate="yes" xml:space="preserve">
          <source>Short localized GMT format</source>
          <target state="translated">현지화 된 짧은 GMT 형식</target>
        </trans-unit>
        <trans-unit id="879d7ba413f699e986e20c3d3d898c08a3a9caf7" translate="yes" xml:space="preserve">
          <source>Short specific non location format (fallback to O)</source>
          <target state="translated">짧은 특정 비 위치 형식 (O로 폴백)</target>
        </trans-unit>
        <trans-unit id="5137dbab0b2003506a287bb55dc82e8e48713edb" translate="yes" xml:space="preserve">
          <source>Shorthand for &quot;--configuration=production&quot;. When true, sets the build configuration to the production target. By default, the production target is set up in the workspace configuration such that all builds make use of bundling, limited tree-shaking, and also limited dead code elimination.</source>
          <target state="translated">&quot;--configuration = production&quot;의 줄임말입니다. true 인 경우 빌드 구성을 프로덕션 대상으로 설정합니다. 기본적으로 프로덕션 대상은 모든 빌드가 번들링, 제한된 트리 쉐이킹 및 제한된 데드 코드 제거를 사용하도록 작업 공간 구성에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="60047bb09af867b84694f1ab1edd98f509d3f2ea" translate="yes" xml:space="preserve">
          <source>Shorthand form with &quot;then&quot; and &quot;else&quot; blocks:</source>
          <target state="translated">&quot;then&quot;및 &quot;else&quot;블록이있는 속기 양식 :</target>
        </trans-unit>
        <trans-unit id="48b3b304ee8a75837d7e1a2198272bba7db1b706" translate="yes" xml:space="preserve">
          <source>Shorthand syntax</source>
          <target state="translated">속기 구문</target>
        </trans-unit>
        <trans-unit id="ad6e919a37c2bb15acd1a3c92bceed37af0032e9" translate="yes" xml:space="preserve">
          <source>Shortly, you'll extend the &lt;code&gt;AdminDashboardComponent&lt;/code&gt; to inject this service and display its &lt;code&gt;preloadedModules&lt;/code&gt; array.</source>
          <target state="translated">곧 &lt;code&gt;AdminDashboardComponent&lt;/code&gt; 를 확장 하여이 서비스를 주입하고 &lt;code&gt;preloadedModules&lt;/code&gt; 배열을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="41078447ba168b4151c1f22c7d612b9d43abb567" translate="yes" xml:space="preserve">
          <source>Should I add application-wide providers to the root &lt;code&gt;AppModule&lt;/code&gt; or the root &lt;code&gt;AppComponent&lt;/code&gt;?</source>
          <target state="translated">루트 &lt;code&gt;AppModule&lt;/code&gt; 또는 루트 &lt;code&gt;AppComponent&lt;/code&gt; 에 응용 프로그램 전체 공급자를 추가해야합니까 ?</target>
        </trans-unit>
        <trans-unit id="c55683c58f4cac80dad4e0811c2a2aedcd1ec133" translate="yes" xml:space="preserve">
          <source>Should I add other providers to a module or a component?</source>
          <target state="translated">모듈이나 구성 요소에 다른 공급자를 추가해야합니까?</target>
        </trans-unit>
        <trans-unit id="2eca7c86d3882f8da12c2dee981a83d967d0bef1" translate="yes" xml:space="preserve">
          <source>Should I import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;?</source>
          <target state="translated">나는 가져와야합니다 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="ba5ab6cd6ad45ecc5b3b9258f0733e39ba06685a" translate="yes" xml:space="preserve">
          <source>Show All Hide All</source>
          <target state="translated">모두 표시 모두 숨기기</target>
        </trans-unit>
        <trans-unit id="cab0c5a6f3fc25fcac95ae963c3ff4294993bfe6" translate="yes" xml:space="preserve">
          <source>Show AllHide All</source>
          <target state="translated">모두 표시 모두 숨기기</target>
        </trans-unit>
        <trans-unit id="fccf702863dd22db4e76b732d70874d208f4f0f0" translate="yes" xml:space="preserve">
          <source>Show a descriptive error message after the user interacted with the form and the validation failed.</source>
          <target state="translated">사용자가 양식과 상호 작용하고 유효성 검사에 실패한 후 설명이 포함 된 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="98ed9e62ac83f8affb24bdfb771d4c78acfc46cc" translate="yes" xml:space="preserve">
          <source>Show a warning when deploy-url/base-href use unsupported serve path values.</source>
          <target state="translated">deploy-url / base-href가 지원되지 않는 서브 경로 값을 사용할 때 경고를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="fee47023d6c1d39db9bc276ae03a1833249f3ca3" translate="yes" xml:space="preserve">
          <source>Show a warning when the --hmr option is enabled.</source>
          <target state="translated">--hmr 옵션이 활성화되면 경고를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="595aa38adc2f8b9fed110d5bfa2f70ca86323d2f" translate="yes" xml:space="preserve">
          <source>Show and hide validation error messages</source>
          <target state="translated">유효성 검사 오류 메시지 표시 및 숨기기</target>
        </trans-unit>
        <trans-unit id="d1d3bf017782ea688647aff234d3d9891460821f" translate="yes" xml:space="preserve">
          <source>Show and hide validation-error messages.</source>
          <target state="translated">유효성 검사 오류 메시지를 표시하고 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="d525989db2de63003e9d7ac134ab8213bd3059a2" translate="yes" xml:space="preserve">
          <source>Show circular dependency warnings on builds.</source>
          <target state="translated">빌드시 순환 종속성 경고를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="2a04fec163fa9ffa3e3c2220918566a6b06b6544" translate="yes" xml:space="preserve">
          <source>Show messages</source>
          <target state="translated">메시지 표시</target>
        </trans-unit>
        <trans-unit id="8a3b3f0ec02882cf9ff19ba873f1d8f3c0815823" translate="yes" xml:space="preserve">
          <source>Show or hide the error message by binding properties of the &lt;code&gt;name&lt;/code&gt; control to the message &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element's &lt;code&gt;hidden&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 컨트롤의 속성을 메시지 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 요소의 &lt;code&gt;hidden&lt;/code&gt; 속성 에 바인딩하여 오류 메시지를 표시하거나 숨 깁니다 .</target>
        </trans-unit>
        <trans-unit id="116bdf02eaa47b1dc3191504a363e4dec2a90998" translate="yes" xml:space="preserve">
          <source>Show output text.</source>
          <target state="translated">출력 텍스트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1d1c6ac7f305d28e5a2c67c497211de8cbcd51aa" translate="yes" xml:space="preserve">
          <source>Show the &lt;code&gt;HeroDetailComponent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; 표시</target>
        </trans-unit>
        <trans-unit id="937c9e3d88b032267b4ce7212d8f4a304d4bd484" translate="yes" xml:space="preserve">
          <source>Show the &lt;code&gt;HeroesComponent&lt;/code&gt; view</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; 보기 표시</target>
        </trans-unit>
        <trans-unit id="fbe16ce7506b8430e45fd2d6aa176fdb23bdf664" translate="yes" xml:space="preserve">
          <source>Show the first page quickly</source>
          <target state="translated">첫 페이지를 빠르게 표시</target>
        </trans-unit>
        <trans-unit id="d46fb55d5ef3f5ca69002f78750e89cc11f12836" translate="yes" xml:space="preserve">
          <source>Show the first page quickly with a &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/first-contentful-paint&quot;&gt;first-contentful paint (FCP)&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/first-contentful-paint&quot;&gt;FCP (First Contentful Paint)로&lt;/a&gt; 첫 페이지를 빠르게 표시</target>
        </trans-unit>
        <trans-unit id="3ac4c102351575a38b297d787d9721977a54ee21" translate="yes" xml:space="preserve">
          <source>Show the hero</source>
          <target state="translated">영웅을 보여</target>
        </trans-unit>
        <trans-unit id="0b09aa05d4dbcc3294f3d100b839df79351491b8" translate="yes" xml:space="preserve">
          <source>Show the hero object</source>
          <target state="translated">영웅 개체 표시</target>
        </trans-unit>
        <trans-unit id="c75dd76780712202bd0adeba943f333c0a6b3e23" translate="yes" xml:space="preserve">
          <source>Show/hide vs. &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 대 표시 / 숨기기</target>
        </trans-unit>
        <trans-unit id="cef936621fc4177f5bc8e6ee413ffd5eaf576c1d" translate="yes" xml:space="preserve">
          <source>Showing an alternative template using &lt;code&gt;else&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 를 사용하여 대체 템플릿 표시</target>
        </trans-unit>
        <trans-unit id="45143a2ebe5a96d7ce5da2ddfd0ac908f7561a03" translate="yes" xml:space="preserve">
          <source>Showing an array property with &lt;strong&gt;*ngFor&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;* ngFor를 사용&lt;/strong&gt; 하여 배열 속성 표시&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44957916405bf69ccfa14f773068cbb0880a98b4" translate="yes" xml:space="preserve">
          <source>Showing component properties with interpolation</source>
          <target state="translated">보간으로 구성 요소 특성 표시</target>
        </trans-unit>
        <trans-unit id="2a15b53f83d98c4a71991f1f90c66bebe097321d" translate="yes" xml:space="preserve">
          <source>Shows a help message for this command in the console.</source>
          <target state="translated">콘솔에서이 명령에 대한 도움말 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c18ddd73fb20cfba052873f17a4ecdd50f58abc4" translate="yes" xml:space="preserve">
          <source>Shows how to project external content into a component and how to distinguish projected content from a component's view children. Demonstrates the &lt;code&gt;ngAfterContentInit()&lt;/code&gt; and &lt;code&gt;ngAfterContentChecked()&lt;/code&gt; hooks.</source>
          <target state="translated">외부 콘텐츠를 구성 요소에 투영하는 방법과 투영 된 콘텐츠를 구성 요소의보기 하위 항목과 구별하는 방법을 보여줍니다. &lt;code&gt;ngAfterContentInit()&lt;/code&gt; 및 &lt;code&gt;ngAfterContentChecked()&lt;/code&gt; 후크를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="479f16fa7274887e86eb0096b93900ffb1452759" translate="yes" xml:space="preserve">
          <source>Shows how to project external content into a component and how to distinguish projected content from a component's view children. Demonstrates the &lt;code&gt;ngAfterContentInit&lt;/code&gt; and &lt;code&gt;ngAfterContentChecked&lt;/code&gt; hooks.</source>
          <target state="translated">외부 컨텐츠를 구성 요소로 투영하는 방법 및 투영 된 컨텐츠를 구성 요소의 뷰 하위와 구별하는 방법을 보여줍니다. &lt;code&gt;ngAfterContentInit&lt;/code&gt; 및 &lt;code&gt;ngAfterContentChecked&lt;/code&gt; 후크를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="366715a435c688e54c027c7b5fe2430b97975815" translate="yes" xml:space="preserve">
          <source>Shows how you can use lifecycle hooks with a custom directive. The &lt;code&gt;SpyDirective&lt;/code&gt; implements the &lt;code&gt;ngOnInit()&lt;/code&gt; and &lt;code&gt;ngOnDestroy()&lt;/code&gt; hooks, and uses them to watch and report when an element goes in or out of the current view.</source>
          <target state="translated">사용자 지정 지시문과 함께 수명주기 후크를 사용하는 방법을 보여줍니다. &lt;code&gt;SpyDirective&lt;/code&gt; 구현 &lt;code&gt;ngOnInit()&lt;/code&gt; 및 &lt;code&gt;ngOnDestroy()&lt;/code&gt; 요소가 또는 현재보기를 벗어나면 후크 및 사용 그들을보고보고하고자한다.</target>
        </trans-unit>
        <trans-unit id="467a2f65761b5e438e533e0ff7175b70e673c62d" translate="yes" xml:space="preserve">
          <source>Shows what Angular means by a &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;. Demonstrates the &lt;code&gt;ngAfterViewInit()&lt;/code&gt; and &lt;code&gt;ngAfterViewChecked()&lt;/code&gt; hooks.</source>
          <target state="translated">Angular가 &lt;a href=&quot;glossary#view&quot;&gt;뷰로&lt;/a&gt; 의미하는 바를 보여줍니다 . &lt;code&gt;ngAfterViewInit()&lt;/code&gt; 및 &lt;code&gt;ngAfterViewChecked()&lt;/code&gt; 후크를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b76af8097f5f260b3980092d825c8c219994a49b" translate="yes" xml:space="preserve">
          <source>Shows what Angular means by a &lt;em&gt;view&lt;/em&gt;. Demonstrates the &lt;code&gt;ngAfterViewInit&lt;/code&gt; and &lt;code&gt;ngAfterViewChecked&lt;/code&gt; hooks.</source>
          <target state="translated">&lt;em&gt;뷰가&lt;/em&gt; Angular의 의미를 보여줍니다 . &lt;code&gt;ngAfterViewInit&lt;/code&gt; 및 &lt;code&gt;ngAfterViewChecked&lt;/code&gt; 후크를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="197f7cb6804fc98916b8c143af535692e5856899" translate="yes" xml:space="preserve">
          <source>Shut down &lt;code&gt;http-server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;http-server&lt;/code&gt; 를 종료 하십시오 .</target>
        </trans-unit>
        <trans-unit id="80c188a60dfe5e25b9e86ad3e1121715c6fefc2a" translate="yes" xml:space="preserve">
          <source>Sign for negative numbers. Example: -23</source>
          <target state="translated">음수에 서명하십시오. 예 : -23</target>
        </trans-unit>
        <trans-unit id="8f61988069ac7f7f4c5d04d0c6276c643329b712" translate="yes" xml:space="preserve">
          <source>Sign for percentage (out of 100). Example: 23.4%</source>
          <target state="translated">백분율에 대한 부호 (100 개 중). 예 : 23.4 %</target>
        </trans-unit>
        <trans-unit id="e35928f49dad3847e8aa9453d2820a74b253e2a9" translate="yes" xml:space="preserve">
          <source>Sign for permille (out of 1000). Example: 23.4&amp;permil;</source>
          <target state="translated">permille에 서명하십시오 (1000 개 중). 예 : 23.4 &amp;permil;</target>
        </trans-unit>
        <trans-unit id="9a1a477292686ab46d2883534ba2c37ca337a194" translate="yes" xml:space="preserve">
          <source>Sign for positive numbers. Example: +23</source>
          <target state="translated">양수 부호. 예 : +23</target>
        </trans-unit>
        <trans-unit id="2c4b77279f9c3a8d8d6ce565db42f31dc1ebcaaa" translate="yes" xml:space="preserve">
          <source>Sign up for a firebase account on &lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase&lt;/a&gt;.</source>
          <target state="translated">에 중포 기지 계정에 가입 &lt;a href=&quot;https://firebase.google.com/&quot;&gt;중포 기지&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="597aee51bf1323c5684a20b90d36ad9cbffd87c2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;assetGroups&lt;/code&gt;, every data group has a &lt;code&gt;name&lt;/code&gt; which uniquely identifies it.</source>
          <target state="translated">&lt;code&gt;assetGroups&lt;/code&gt; 와 유사하게 모든 데이터 그룹에는 고유하게 식별 하는 &lt;code&gt;name&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fd958e5fcafb24cbe43b49f4da58ce49f0d6f36" translate="yes" xml:space="preserve">
          <source>Similarly, if you add &lt;code&gt;&amp;lt;base href='/my/app'/&amp;gt;&lt;/code&gt; to the document and call &lt;code&gt;location.go('/foo')&lt;/code&gt;, the browser's URL will become &lt;code&gt;example.com/my/app/foo&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 &lt;code&gt;&amp;lt;base href='/my/app'/&amp;gt;&lt;/code&gt; 를 문서에 추가하고 &lt;code&gt;location.go('/foo')&lt;/code&gt; 를 호출 하면 브라우저의 URL이 &lt;code&gt;example.com/my/app/foo&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="f189f386b7b426e71d26c8b27902b7db21a20e11" translate="yes" xml:space="preserve">
          <source>Similarly, if you add &lt;code&gt;&amp;lt;base href='/my/app/'/&amp;gt;&lt;/code&gt; to the document and call &lt;code&gt;location.go('/foo')&lt;/code&gt;, the browser's URL will become &lt;code&gt;example.com/my/app/foo&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 &lt;code&gt;&amp;lt;base href='/my/app/'/&amp;gt;&lt;/code&gt; 를 문서에 추가하고 &lt;code&gt;location.go('/foo')&lt;/code&gt; 를 호출 하면 브라우저의 URL은 &lt;code&gt;example.com/my/app/foo&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="3ce6436140defa30b543c86237b650bfff348619" translate="yes" xml:space="preserve">
          <source>Similarly, if your library code depends on a service, that service needs to be migrated.</source>
          <target state="translated">마찬가지로 라이브러리 코드가 서비스에 의존하는 경우 해당 서비스를 마이그레이션해야합니다.</target>
        </trans-unit>
        <trans-unit id="fab82cd8c27f1b8cc74de2679b3ed8ed4b241092" translate="yes" xml:space="preserve">
          <source>Similarly, without mouse or keyboard events, a server-side app can't rely on a user clicking a button to show a component. The app must determine what to render based solely on the incoming client request. This is a good argument for making the app &lt;a href=&quot;router&quot;&gt;routable&lt;/a&gt;.</source>
          <target state="translated">마찬가지로, 마우스 또는 키보드 이벤트가 없으면 서버 측 앱은 사용자가 버튼을 클릭하여 구성 요소를 표시 할 수 없습니다. 앱은 들어오는 클라이언트 요청만을 기반으로 렌더링 할 대상을 결정해야합니다. 이것은 앱을 &lt;a href=&quot;router&quot;&gt;라우팅 가능&lt;/a&gt; 하게 만드는 좋은 주장입니다 .</target>
        </trans-unit>
        <trans-unit id="2cae9cec2b6c68d96f8336a324d888f726582b3e" translate="yes" xml:space="preserve">
          <source>Similarly, you can add a prompt to allow the user to decide whether the schematic will use color when executing its hello action. The schema with both prompts would be as follows.</source>
          <target state="translated">마찬가지로, hello 동작을 실행할 때 회로도에서 색상을 사용할지 여부를 결정할 수있는 프롬프트를 추가 할 수 있습니다. 두 프롬프트가 모두있는 스키마는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="7efef6f32b9aee814f5e770483cd5c591105998c" translate="yes" xml:space="preserve">
          <source>Simple Configuration</source>
          <target state="translated">간단한 구성</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">간단한 예</target>
        </trans-unit>
        <trans-unit id="60607597b489cd2185394b7c6a6087b71ccc8b61" translate="yes" xml:space="preserve">
          <source>Simple as this is, you decide to add a test to confirm that component actually displays the right content where you think it should.</source>
          <target state="translated">이 방법은 간단하기 때문에 테스트를 추가하여 구성 요소가 실제로 원하는 위치에 올바른 내용을 표시하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="494dd9e99d48bafc3b98a35ff05944ed91b634e5" translate="yes" xml:space="preserve">
          <source>Simple deployment options</source>
          <target state="translated">간단한 배포 옵션</target>
        </trans-unit>
        <trans-unit id="19e643b42346b00691c93efb8f021c573d8605fe" translate="yes" xml:space="preserve">
          <source>Simple form validation</source>
          <target state="translated">간단한 양식 검증</target>
        </trans-unit>
        <trans-unit id="e5c3ae4da7e11d3fa7d67487f95d2ce84a38ba79" translate="yes" xml:space="preserve">
          <source>Simple form with expanded syntax:</source>
          <target state="translated">확장 된 구문의 간단한 양식 :</target>
        </trans-unit>
        <trans-unit id="d5334c5e164751baa720ada75302e4392b7ad9d7" translate="yes" xml:space="preserve">
          <source>Simple form with shorthand syntax:</source>
          <target state="translated">속기 구문이있는 간단한 양식 :</target>
        </trans-unit>
        <trans-unit id="4b80d81a8d2b3bc5c4a4d9cc396c5845bbf61518" translate="yes" xml:space="preserve">
          <source>SimpleChange</source>
          <target state="translated">SimpleChange</target>
        </trans-unit>
        <trans-unit id="e1500412a75fd0228298e32cacbe1fdf64be2796" translate="yes" xml:space="preserve">
          <source>SimpleChanges</source>
          <target state="translated">SimpleChanges</target>
        </trans-unit>
        <trans-unit id="7e746b9782ec7ce9bb91bd6b5f03eb84bb7be5a7" translate="yes" xml:space="preserve">
          <source>Simplicity</source>
          <target state="translated">Simplicity</target>
        </trans-unit>
        <trans-unit id="17d6c93a379d84d285dd16d26cf93e30fa3e3016" translate="yes" xml:space="preserve">
          <source>Simplified Angular mental model with optional NgModules</source>
          <target state="translated">NgModules 옵션이있는 단순화 된 Angular mental 모델</target>
        </trans-unit>
        <trans-unit id="83ce935d34fce63b53340c34a2dd9b66f03f6976" translate="yes" xml:space="preserve">
          <source>Simulate a data server</source>
          <target state="translated">데이터 서버 시뮬레이션</target>
        </trans-unit>
        <trans-unit id="b1c23ba04df4a3b9f6db352b18230ce0d349d205" translate="yes" xml:space="preserve">
          <source>Simulate an update by adding a button to the template to update the user profile on demand.</source>
          <target state="translated">요청시 사용자 프로필을 업데이트하기 위해 버튼을 템플릿에 추가하여 업데이트를 시뮬레이션하십시오.</target>
        </trans-unit>
        <trans-unit id="6e969b818a3d3ee8b114032d6d34b6219a27cb74" translate="yes" xml:space="preserve">
          <source>Simulates the asynchronous passage of time for the timers in the fakeAsync zone by draining the macrotask queue until it is empty. The returned value is the milliseconds of time that would have been elapsed.</source>
          <target state="translated">매크로 작업 대기열이 비워 질 때까지 매크로 작업 대기열을 비워서 fakeAsync 영역의 타이머에 대한 비동기 시간 통과를 시뮬레이션합니다. 리턴 된 값은 경과 된 시간 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="84da2c8a5ac23d25052a8266f6eced994831d26b" translate="yes" xml:space="preserve">
          <source>Simulates the asynchronous passage of time for the timers in the fakeAsync zone.</source>
          <target state="translated">fakeAsync 영역에서 타이머의 비동기 시간 통과를 시뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="f067c24deb3c684333a746de5b20658653805d4b" translate="yes" xml:space="preserve">
          <source>Simulates the passage of time and the completion of pending asynchronous activities by flushing both &lt;em&gt;timer&lt;/em&gt; and &lt;em&gt;micro-task&lt;/em&gt; queues within the &lt;em&gt;fakeAsync test zone&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;fakeAsync 테스트 영역&lt;/em&gt; 내에서 &lt;em&gt;타이머&lt;/em&gt; 및 &lt;em&gt;마이크로 태스크&lt;/em&gt; 대기열을 모두 &lt;em&gt;비워&lt;/em&gt; 시간의 경과와 보류중인 비동기 활동의 완료를 시뮬레이션합니다 .</target>
        </trans-unit>
        <trans-unit id="728eba54e4626c0dc386906cba6f1dec9f58eda8" translate="yes" xml:space="preserve">
          <source>Simulating a network issue</source>
          <target state="translated">네트워크 문제 시뮬레이션</target>
        </trans-unit>
        <trans-unit id="bea220091dd81c417fd19dd60bade9820a9a4bbf" translate="yes" xml:space="preserve">
          <source>Since 9.0.0 with Ivy, the &lt;code&gt;entryComponents&lt;/code&gt; property is no longer necessary. See &lt;a href=&quot;deprecations#entryComponents&quot;&gt;deprecations guide&lt;/a&gt;.</source>
          <target state="translated">Ivy가 포함 된 9.0.0부터 &lt;code&gt;entryComponents&lt;/code&gt; 속성이 더 이상 필요하지 않습니다. &lt;a href=&quot;deprecations#entryComponents&quot;&gt;지원 중단 가이드를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="9f13f6cb98b59d4bdcc50fbb661817a2a9b07c2c" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; can't do anything with an &lt;code&gt;Observable&lt;/code&gt;, use the pipe character (&lt;code&gt;|&lt;/code&gt;) followed by &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt;. This identifies Angular's &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; and subscribes to an &lt;code&gt;Observable&lt;/code&gt; automatically so you won't have to do so in the component class.</source>
          <target state="translated">이후 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 가 으로 아무것도 할 수 없습니다 &lt;code&gt;Observable&lt;/code&gt; , 파이프 문자를 사용하여 ( &lt;code&gt;|&lt;/code&gt; ) 다음에 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; . 이것은 Angular의 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; 를 식별 하고 &lt;code&gt;Observable&lt;/code&gt; 을 자동으로 구독 하므로 컴포넌트 클래스에서 그렇게 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5b7b5254fc84b183cac494e5bc843bf74e5ef462" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; can't do anything with an &lt;code&gt;Observable&lt;/code&gt;, use the pipe character (&lt;code&gt;|&lt;/code&gt;) followed by &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt;. This identifies Angular's &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; and subscribes to an &lt;code&gt;Observable&lt;/code&gt; automatically so you won't have to do so in the component class.</source>
          <target state="translated">이후 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 가 으로 아무것도 할 수 없습니다 &lt;code&gt;Observable&lt;/code&gt; , 파이프 문자를 사용하여 ( &lt;code&gt;|&lt;/code&gt; ) 다음에 &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; . 이것은 Angular의 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; 를 식별 하고 &lt;code&gt;Observable&lt;/code&gt; 을 자동으로 구독 하므로 구성 요소 클래스에서 그렇게 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ccc511f20164ec8b3ea1363b14ef6d787beae9b6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;AppRoutingModule&lt;/code&gt; already imports &lt;code&gt;HeroesComponent&lt;/code&gt;, you can use it in the &lt;code&gt;routes&lt;/code&gt; array:</source>
          <target state="translated">이후 &lt;code&gt;AppRoutingModule&lt;/code&gt; 은 이미 수입 &lt;code&gt;HeroesComponent&lt;/code&gt; 을 , 당신은 그것을 사용할 수있는 &lt;code&gt;routes&lt;/code&gt; 배열 :</target>
        </trans-unit>
        <trans-unit id="962544e4463cecaa2a5eccd0846f17ac5676aa3d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;HostComponent&lt;/code&gt; has &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; in its constructor, no matter what the parent of &lt;code&gt;HostComponent&lt;/code&gt; might have as a &lt;code&gt;flower.emoji&lt;/code&gt; value, the &lt;code&gt;HostComponent&lt;/code&gt; will use &lt;code&gt;🌼&lt;/code&gt; (yellow flower).</source>
          <target state="translated">이후 &lt;code&gt;HostComponent&lt;/code&gt; 이 있다 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 생성자에서, 더의 부모는 중요하지 &lt;code&gt;HostComponent&lt;/code&gt; 는 A와있을 수 있습니다 &lt;code&gt;flower.emoji&lt;/code&gt; , 값 &lt;code&gt;HostComponent&lt;/code&gt; 이 사용 &lt;code&gt;🌼&lt;/code&gt; (노란 꽃).</target>
        </trans-unit>
        <trans-unit id="8eba2538800c3e511cee8a08468f0162648b015b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;ngOnInit()&lt;/code&gt; is only called once per component instantiation, you can detect when the route parameters change from &lt;em&gt;within the same instance&lt;/em&gt; using the observable &lt;code&gt;paramMap&lt;/code&gt; property.</source>
          <target state="translated">이후 &lt;code&gt;ngOnInit()&lt;/code&gt; 한 번만 구성 요소 인스턴스마다 호출되는 경로 매개 변수에서 변경할 때, 당신은 감지 할 수있는 &lt;em&gt;동일한 인스턴스 내에서&lt;/em&gt; 관찰하여 &lt;code&gt;paramMap&lt;/code&gt; 의 속성을.</target>
        </trans-unit>
        <trans-unit id="1c1acbcf4a03f4f6cb03e96d8e61627a3240b9ef" translate="yes" xml:space="preserve">
          <source>Since TypeScript is a superset of ECMAScript 2015, which in turn is a superset of ECMAScript 5, &quot;switching&quot; to TypeScript doesn't necessarily require anything more than installing the TypeScript compiler and renaming files from &lt;code&gt;*.js&lt;/code&gt; to &lt;code&gt;*.ts&lt;/code&gt;. But just doing that is not hugely useful or exciting, of course. Additional steps like the following can give us much more bang for the buck:</source>
          <target state="translated">TypeScript는 ECMAScript 2015의 수퍼 세트이며, ECMAScript 5의 수퍼 세트이므로 TypeScript 로의 &quot;전환&quot;에는 반드시 TypeScript 컴파일러를 설치하고 파일 이름을 &lt;code&gt;*.js&lt;/code&gt; 에서 &lt;code&gt;*.ts&lt;/code&gt; 로 바꾸는 것 외에 다른 것이 필요하지 않습니다 . 그러나 그렇게하는 것은 물론 매우 유용하거나 흥미롭지는 않습니다. 다음과 같은 추가 단계를 통해 비용을 크게 절감 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d21c28003ca8b1b8412e24d7649ecd469232e98" translate="yes" xml:space="preserve">
          <source>Since WebStorm 2019.1, the &lt;code&gt;@angular/language-service&lt;/code&gt; is not required anymore and should be removed from your &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">WebStorm 2019.1 이후 &lt;code&gt;@angular/language-service&lt;/code&gt; 는 더 이상 필요하지 않으며 &lt;code&gt;package.json&lt;/code&gt; 에서 제거해야합니다 .</target>
        </trans-unit>
        <trans-unit id="46c4eb1abae75523ff8d7c6616050a503945e28d" translate="yes" xml:space="preserve">
          <source>Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a serialized tree. UrlTree is a data structure that provides a lot of affordances in dealing with URLs</source>
          <target state="translated">라우터 상태는 트리이고 URL은 직렬화 된 상태 일 뿐이므로 URL은 직렬화 된 트리입니다. UrlTree는 URL을 처리 할 때 많은 여유를 제공하는 데이터 구조입니다</target>
        </trans-unit>
        <trans-unit id="bba2044862c3385a2d83d2b95012ec936c86053a" translate="yes" xml:space="preserve">
          <source>Since an Angular application can't be bootstrapped on the entire HTML document (&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag) it is not possible to bind to the &lt;code&gt;text&lt;/code&gt; property of the &lt;code&gt;HTMLTitleElement&lt;/code&gt; elements (representing the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tag). Instead, this service can be used to set and get the current title value.</source>
          <target state="translated">Angular 응용 프로그램은 전체 HTML 문서 ( &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 태그) 에서 부트 스트랩 할 수 없으므로 &lt;code&gt;HTMLTitleElement&lt;/code&gt; 요소 ( &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 태그를 나타냄)의 &lt;code&gt;text&lt;/code&gt; 속성에 바인딩 할 수 없습니다 . 대신이 서비스를 사용하여 현재 제목 값을 설정하고 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b4015d56f483550026621efe502a07ebdf32347" translate="yes" xml:space="preserve">
          <source>Since the HTML templates of Angular components will be loaded as well, you must help Karma out a bit so that it can route them to the right paths:</source>
          <target state="translated">Angular 컴포넌트의 HTML 템플릿도로드되기 때문에 올바른 경로로 라우팅 할 수 있도록 Karma를 약간 도와야합니다.</target>
        </trans-unit>
        <trans-unit id="3beea211f1804990fa205b0b8d4b2454da8609e2" translate="yes" xml:space="preserve">
          <source>Since the built-in validators won't always match the exact use case of your application, sometimes you'll want to create a custom validator.</source>
          <target state="translated">내장 된 유효성 검사기는 항상 응용 프로그램의 정확한 사용 사례와 일치하지는 않으므로 사용자 지정 유효성 검사기를 만드는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="06f43cc29ccce4b6c6c49a26d957d26e51ac324b" translate="yes" xml:space="preserve">
          <source>Since there is no safe navigation operator and &lt;code&gt;nullItem&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, JavaScript and Angular would throw a &lt;code&gt;null&lt;/code&gt; reference error and break the rendering process of Angular:</source>
          <target state="translated">안전한 탐색 연산자가없고 &lt;code&gt;nullItem&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이므로 JavaScript 및 Angular는 &lt;code&gt;null&lt;/code&gt; 참조 오류를 발생시키고 Angular의 렌더링 프로세스를 중단합니다.</target>
        </trans-unit>
        <trans-unit id="d4292af90c079ddd0bad097dd58e04a53ac8506a" translate="yes" xml:space="preserve">
          <source>Since this is an AngularJS template, you can still use other AngularJS directives on the element, even though it has Angular binding attributes on it. For example, you can easily make multiple copies of the component using &lt;code&gt;ng-repeat&lt;/code&gt;:</source>
          <target state="translated">이것은 AngularJS 템플릿이므로 Angular 바인딩 속성이 있어도 요소에 다른 AngularJS 지시문을 계속 사용할 수 있습니다. 예를 들어, &lt;code&gt;ng-repeat&lt;/code&gt; 를 사용하여 구성 요소를 여러 개 쉽게 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="120cc30a2082f2f50bfbc14791f6f4a45f14960f" translate="yes" xml:space="preserve">
          <source>Since version 9, Angular Ivy is the default rendering engine. If you haven't heard of Ivy, you can read more about it in the &lt;a href=&quot;ivy&quot;&gt;Angular Ivy guide&lt;/a&gt;.</source>
          <target state="translated">버전 9부터 Angular Ivy는 기본 렌더링 엔진입니다. Ivy에 대해 들어 보지 못했다면 &lt;a href=&quot;ivy&quot;&gt;Angular Ivy 가이드&lt;/a&gt; 에서 이에 대한 자세한 내용을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4f54ab1d843d6f199cc22382be08aad91e7faa7" translate="yes" xml:space="preserve">
          <source>Since you're going to be writing Angular code in TypeScript, it makes sense to bring in the TypeScript compiler even before you begin upgrading.</source>
          <target state="translated">TypeScript에서 Angular 코드를 작성하므로 업그레이드를 시작하기 전에 TypeScript 컴파일러를 가져 오는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b349521f8a5d735f2d1484bb3f738b4e8884f662" translate="yes" xml:space="preserve">
          <source>Single build</source>
          <target state="translated">단일 빌드</target>
        </trans-unit>
        <trans-unit id="a5b8565636523cbc8d6b4fc97a65c9df60070482" translate="yes" xml:space="preserve">
          <source>Single build w/Conditional Polyfills</source>
          <target state="translated">조건부 폴리 필이 포함 된 단일 빌드</target>
        </trans-unit>
        <trans-unit id="b23cb5386a2959de0427a93d7fcd9e28db7cea6f" translate="yes" xml:space="preserve">
          <source>Single build w/conditional polyfills for ES5 only</source>
          <target state="translated">ES5 전용 조건부 폴리 필이있는 단일 빌드</target>
        </trans-unit>
        <trans-unit id="ae2ae93da4d4e9b36efbb5c6e0a1d58cb53cb424" translate="yes" xml:space="preserve">
          <source>Single build, ES5 not required</source>
          <target state="translated">단일 빌드, ES5 필요 없음</target>
        </trans-unit>
        <trans-unit id="2a81189c98e2c0364ac2b41c34323d3e483469eb" translate="yes" xml:space="preserve">
          <source>Single class binding</source>
          <target state="translated">단일 클래스 바인딩</target>
        </trans-unit>
        <trans-unit id="1fb523a0b4b744c4edc13339d42faf4f9861e15c" translate="yes" xml:space="preserve">
          <source>Single responsibility</source>
          <target state="translated">단일 책임</target>
        </trans-unit>
        <trans-unit id="c3586f6186ad679877203d2156888a8af9eaa584" translate="yes" xml:space="preserve">
          <source>Single style binding</source>
          <target state="translated">단일 스타일 바인딩</target>
        </trans-unit>
        <trans-unit id="9b58b9795f944fc4a01feeffefbc3bd106df2d96" translate="yes" xml:space="preserve">
          <source>Single style binding with units</source>
          <target state="translated">단위가있는 단일 스타일 바인딩</target>
        </trans-unit>
        <trans-unit id="c4e0470b624e71a21eece402feb2b959eb1a8809" translate="yes" xml:space="preserve">
          <source>Singleton services</source>
          <target state="translated">싱글 톤 서비스</target>
        </trans-unit>
        <trans-unit id="42d31903af57f59fb2ad900f19ae37e3471f24b7" translate="yes" xml:space="preserve">
          <source>Sixth and final step of the Tour of Heroes example application. For more information, see &lt;a href=&quot;../tutorial/toh-pt6&quot;&gt;Get data from a server&lt;/a&gt;.</source>
          <target state="translated">Tour of Heroes 예제 애플리케이션의 여섯 번째이자 마지막 단계입니다. 자세한 내용 &lt;a href=&quot;../tutorial/toh-pt6&quot;&gt;은 서버에서 데이터 가져 오기를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5087b8ce7b49664f4457f35e41654c6d9ce03a21" translate="yes" xml:space="preserve">
          <source>Size*</source>
          <target state="translated">Size*</target>
        </trans-unit>
        <trans-unit id="589b1dba4f995e2f0cb716ee31ddaf7065df280e" translate="yes" xml:space="preserve">
          <source>Skip installing dependency packages.</source>
          <target state="translated">종속성 패키지 설치를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="60e0af83d452bdfc8e29942e8af2bc2cddc128ee" translate="yes" xml:space="preserve">
          <source>Skip the node that is requesting injection.</source>
          <target state="translated">주입을 요청하는 노드를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="275ea403ef1e8d6f4d8ca0f67913d7977992fb07" translate="yes" xml:space="preserve">
          <source>SkipSelf</source>
          <target state="translated">SkipSelf</target>
        </trans-unit>
        <trans-unit id="d146630209145a11dfca372720f62ac79a0f4f04" translate="yes" xml:space="preserve">
          <source>SlicePipe</source>
          <target state="translated">SlicePipe</target>
        </trans-unit>
        <trans-unit id="bfb9fc3d9e97f6ca55abf4fa8493e4cc86726842" translate="yes" xml:space="preserve">
          <source>Slides in the new view by animating the view with an easing function and duration.  This animation results in the &lt;code&gt;about&lt;/code&gt; view sliding from the left to right.</source>
          <target state="translated">여유 기능과 지속 시간으로 뷰에 애니메이션을 적용하여 새 뷰에서 슬라이드합니다. 이 애니메이션은 &lt;code&gt;about&lt;/code&gt; 뷰가 왼쪽에서 오른쪽으로 미끄러지는 결과를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b35160803242937e8123896c690c7d5ab471c973" translate="yes" xml:space="preserve">
          <source>Small functions</source>
          <target state="translated">작은 기능</target>
        </trans-unit>
        <trans-unit id="b37108b4eaa6fc62538c54def3b8931af9e3c84a" translate="yes" xml:space="preserve">
          <source>Smashing Magazine</source>
          <target state="translated">스매싱 매거진</target>
        </trans-unit>
        <trans-unit id="7a6aa5d0640936328c9339939e57443885436a50" translate="yes" xml:space="preserve">
          <source>So far, we've learned simple animations of single HTML elements. Angular also lets you animate coordinated sequences, such as an entire grid or list of elements as they enter and leave a page. You can choose to run multiple animations in parallel, or run discrete animations sequentially, one following another.</source>
          <target state="translated">지금까지 단일 HTML 요소의 간단한 애니메이션을 배웠습니다. Angular를 사용하면 전체 격자 선 또는 요소가 페이지에 들어오고 나가는 요소 목록과 같은 조정 된 시퀀스에 애니메이션을 적용 할 수 있습니다. 여러 애니메이션을 병렬로 실행하거나 개별 애니메이션을 순차적으로 실행하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b6d23d1781fe83c088bfda2556066367800b3d8" translate="yes" xml:space="preserve">
          <source>So instead, you'll update the empty path route in &lt;code&gt;app-routing.module.ts&lt;/code&gt; to redirect to &lt;code&gt;/superheroes&lt;/code&gt;.</source>
          <target state="translated">대신 &lt;code&gt;app-routing.module.ts&lt;/code&gt; 에서 빈 경로 경로를 업데이트하여 &lt;code&gt;/superheroes&lt;/code&gt; 로 리디렉션합니다 .</target>
        </trans-unit>
        <trans-unit id="bb0fb574accf6c56d426a9e2dd7ba1d2736f6193" translate="yes" xml:space="preserve">
          <source>So normally a hybrid application begins life as an AngularJS application, and it is AngularJS that processes the root template, e.g. the index.html. Angular then steps into the picture when an Angular component is used somewhere in an AngularJS template. That component's template will then be managed by Angular, and it may contain any number of Angular components and directives.</source>
          <target state="translated">따라서 일반적으로 하이브리드 응용 프로그램은 AngularJS 응용 프로그램으로 시작되며 index.html과 같은 루트 템플릿을 처리하는 것은 AngularJS입니다. 그런 다음 Angular는 AngularJS 템플릿 어딘가에 Angular 구성 요소가 사용될 때 그림으로 들어갑니다. 그런 다음 해당 구성 요소의 템플릿은 Angular에서 관리하며 원하는 수의 Angular 구성 요소와 지시문이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9aa54b0dbadeeee6325c29cf3df6a0f16f99ee9b" translate="yes" xml:space="preserve">
          <source>So, you can write an Angular component and then use it from AngularJS code. This is useful when you start to migrate from lower-level components and work your way up. But in some cases it is more convenient to do things in the opposite order: To start with higher-level components and work your way down. This too can be done using the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt;. You can &lt;em&gt;upgrade&lt;/em&gt; AngularJS component directives and then use them from Angular.</source>
          <target state="translated">따라서 Angular 구성 요소를 작성한 다음 AngularJS 코드에서 사용할 수 있습니다. 이는 하위 수준의 구성 요소에서 마이그레이션을 시작하고 작업을 진행할 때 유용합니다. 그러나 어떤 경우에는 반대 순서로 작업을 수행하는 것이 더 편리합니다. 더 높은 수준의 구성 요소로 시작하여 작업을 중단하십시오. 이것도 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; 을 사용하여 수행 할 수 있습니다 . 당신은 할 수 있습니다 &lt;em&gt;업그레이드&lt;/em&gt; AngularJS와 구성 요소 지시를 한 후 각도에서 그들을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="1efeadc04499eead6d39865529e89114c0a9412e" translate="yes" xml:space="preserve">
          <source>Some Angular libraries, such as &lt;code&gt;@angular/router&lt;/code&gt; and &lt;code&gt;@ngrx/store&lt;/code&gt;, implement APIs that return a type called &lt;code&gt;&lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&lt;/code&gt; (typically via a method named &lt;code&gt;forRoot()&lt;/code&gt;). This type represents an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; along with additional providers. Angular version 9 deprecates use of &lt;code&gt;&lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&lt;/code&gt; without an explicitly generic type, where the generic type refers to the type of the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. In a future version of Angular, the generic will no longer be optional.</source>
          <target state="translated">&lt;code&gt;@angular/router&lt;/code&gt; 및 &lt;code&gt;@ngrx/store&lt;/code&gt; 와 같은 일부 Angular 라이브러리 는 &lt;code&gt;&lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&lt;/code&gt; 라는 유형을 반환하는 API를 구현합니다 (일반적으로 &lt;code&gt;forRoot()&lt;/code&gt; 라는 메서드를 통해 ). 이 유형은 추가 공급자와 함께 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 을 나타냅니다 . Angular 버전 9 는 명시 적으로 제네릭 형식이없는 &lt;code&gt;&lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&lt;/code&gt; 사용을 중단합니다 . 여기서 제네릭 형식은 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 형식을 참조합니다 . Angular의 향후 버전에서는 제네릭이 더 이상 선택 사항이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="2633258ffd3e68e79b7b1908dfbf24b90bb423a4" translate="yes" xml:space="preserve">
          <source>Some DOM properties don't have corresponding attributes; for example, &lt;code&gt;textContent&lt;/code&gt;.</source>
          <target state="translated">일부 DOM 속성에는 해당 속성이 없습니다. 예를 들어, &lt;code&gt;textContent&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6ae4edc8a260d4601ea726f435b0a2e18cdf39f4" translate="yes" xml:space="preserve">
          <source>Some HTML attributes don't have corresponding properties; for example, &lt;code&gt;aria-*&lt;/code&gt;.</source>
          <target state="translated">일부 HTML 속성에는 해당 속성이 없습니다. 예를 들어, &lt;code&gt;aria-*&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0c991dbf4394dac4f496aa181829243968713642" translate="yes" xml:space="preserve">
          <source>Some NgModules and their services should be loaded only once by the root &lt;code&gt;AppModule&lt;/code&gt;. Importing the module a second time by lazy loading a module could &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;produce errant behavior&lt;/a&gt; that may be difficult to detect and diagnose.</source>
          <target state="translated">일부 NgModules 및 해당 서비스는 루트 &lt;code&gt;AppModule&lt;/code&gt; 에 의해 한 번만로드되어야합니다 . 모듈을 느리게로드하여 두 번째로 모듈을 가져 오면 감지 및 진단이 어려운 &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;잘못된 동작&lt;/a&gt; 이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5ada9a0db0dd28905ee48dc3d4fd05c604c6200" translate="yes" xml:space="preserve">
          <source>Some additional options can only be set through the configuration file, either by direct editing or with the &lt;a href=&quot;cli/config&quot;&gt;&lt;code&gt;ng config&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">일부 추가 옵션은 직접 편집하거나 &lt;a href=&quot;cli/config&quot;&gt; &lt;code&gt;ng config&lt;/code&gt; &lt;/a&gt; 명령 을 사용하여 구성 파일을 통해서만 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05f75196c5ccd5dff003febc77598f3649dbab45" translate="yes" xml:space="preserve">
          <source>Some additional options can only be set through the configuration file, either by direct editing or with the &lt;code&gt;ng &lt;a href=&quot;../api/router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; command. These include &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;styles&lt;/code&gt;, and &lt;code&gt;scripts&lt;/code&gt; objects that provide runtime-global resources to include in the project. Resources in CSS, such as images and fonts, are automatically written and fingerprinted at the root of the output folder.</source>
          <target state="translated">일부 추가 옵션은 직접 편집하거나 &lt;code&gt;ng &lt;a href=&quot;../api/router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; 명령 을 사용하여 구성 파일을 통해서만 설정할 수 있습니다 . 여기에는 프로젝트에 포함 할 런타임 전역 리소스를 제공하는 &lt;code&gt;assets&lt;/code&gt; , &lt;code&gt;styles&lt;/code&gt; 및 &lt;code&gt;scripts&lt;/code&gt; 객체가 포함됩니다. 이미지 및 글꼴과 같은 CSS의 리소스는 출력 폴더의 루트에 자동으로 쓰여지고 지문이 찍 힙니다.</target>
        </trans-unit>
        <trans-unit id="3f6094930e8f2015c8d482cc0ef515411555eb30" translate="yes" xml:space="preserve">
          <source>Some additional options can only be set through the configuration file, either by direct editing or with the &lt;code&gt;ng config&lt;/code&gt; command. These include &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;styles&lt;/code&gt;, and &lt;code&gt;scripts&lt;/code&gt; objects that provide runtime-global resources to include in the project. Resources in CSS, such as images and fonts, are automatically written and fingerprinted at the root of the output folder.</source>
          <target state="translated">일부 추가 옵션은 직접 편집하거나 &lt;code&gt;ng config&lt;/code&gt; 명령 을 사용하여 구성 파일을 통해서만 설정할 수 있습니다 . 여기에는 프로젝트에 포함 할 런타임 전역 리소스를 제공하는 &lt;code&gt;assets&lt;/code&gt; , &lt;code&gt;styles&lt;/code&gt; 및 &lt;code&gt;scripts&lt;/code&gt; 개체가 포함됩니다. 이미지 및 글꼴과 같은 CSS의 리소스는 출력 폴더의 루트에 자동으로 작성되고 지문이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="a5b94075e4789af051517d68dc6a061a026bd244" translate="yes" xml:space="preserve">
          <source>Some applications will be easier to upgrade than others, and there are many ways to make it easier for yourself. It is possible to prepare and align AngularJS applications with Angular even before beginning the upgrade process. These preparation steps are all about making the code more decoupled, more maintainable, and better aligned with modern development tools. That means in addition to making the upgrade easier, you will also improve the existing AngularJS applications.</source>
          <target state="translated">일부 응용 프로그램은 다른 응용 프로그램보다 업그레이드하기가 쉬울뿐만 아니라 더 쉽게 만들 수있는 방법이 많이 있습니다. 업그레이드 프로세스를 시작하기 전에도 AngularJS 애플리케이션을 Angular에 준비하고 정렬 할 수 있습니다. 이러한 준비 단계는 모두 코드를 분리하고 유지 관리가 용이하며 최신 개발 도구와 잘 맞도록 만드는 것입니다. 즉, 업그레이드가 쉬워 질뿐만 아니라 기존 AngularJS 응용 프로그램도 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="d4c4b530fecc515d6dcb4d6c84aa1cccde0771d7" translate="yes" xml:space="preserve">
          <source>Some code examples display a file that has one or more similarly named companion files. For example, &lt;code&gt;hero.component.ts&lt;/code&gt; and &lt;code&gt;hero.component.html&lt;/code&gt;.</source>
          <target state="translated">일부 코드 예는 하나 이상의 유사한 이름의 컴패니언 파일이있는 파일을 표시합니다. 예를 들어 &lt;code&gt;hero.component.ts&lt;/code&gt; 및 &lt;code&gt;hero.component.html&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c175426c0f368bc13a5e0cb52347003a8ea23739" translate="yes" xml:space="preserve">
          <source>Some developers may not be able to add the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; element, perhaps because they don't have access to &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; or the &lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="translated">일부 개발자는 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;index.html&lt;/code&gt; 에 액세스 할 수 없으므로 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 요소 를 추가 하지 못할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="893e585286fde4fa67e702c66e778c6f757b99b4" translate="yes" xml:space="preserve">
          <source>Some developers prefer Visual Studio as their Integrated Development Environment (IDE).</source>
          <target state="translated">일부 개발자는 Visual Studio를 IDE (Integrated Development Environment)로 선호합니다.</target>
        </trans-unit>
        <trans-unit id="d13fc2a3eeb5b4b864ff86abf2468a36d19d3307" translate="yes" xml:space="preserve">
          <source>Some developers skip the Routing Module (for example, &lt;code&gt;AppRoutingModule&lt;/code&gt;) when the configuration is simple and merge the routing configuration directly into the companion module (for example, &lt;code&gt;AppModule&lt;/code&gt;).</source>
          <target state="translated">일부 개발자 는 구성이 단순 할 때 라우팅 모듈 (예 : &lt;code&gt;AppRoutingModule&lt;/code&gt; ) 을 건너 뛰고 라우팅 구성을 컴패니언 모듈 (예 : &lt;code&gt;AppModule&lt;/code&gt; )에 직접 병합합니다 .</target>
        </trans-unit>
        <trans-unit id="15e8996042079667946cb054dc04c4083ffa20a1" translate="yes" xml:space="preserve">
          <source>Some developers skip the routing module when the configuration is minimal and merge the routing configuration directly into the companion module (for example, &lt;code&gt;AppModule&lt;/code&gt;).</source>
          <target state="translated">일부 개발자는 구성이 최소 일 때 라우팅 모듈을 건너 뛰고 라우팅 구성을 동반 모듈 (예 : &lt;code&gt;AppModule&lt;/code&gt; )에 직접 병합합니다 .</target>
        </trans-unit>
        <trans-unit id="68c82fc9e96cd5bf4503daf934cdae5d3ee2859c" translate="yes" xml:space="preserve">
          <source>Some developers want the message to display only when the user makes an invalid change. Hiding the message while the control is &quot;pristine&quot; achieves that goal. You'll see the significance of this choice when you add a new hero to the form.</source>
          <target state="translated">일부 개발자는 사용자가 잘못 변경 한 경우에만 메시지가 표시되기를 원합니다. 제어가 &quot;원시&quot;상태 인 동안 메시지를 숨기면 해당 목표를 달성 할 수 있습니다. 폼에 새로운 영웅을 추가 할 때이 선택의 중요성을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e98114d74a4f635cc3af1651be1c7c12e084f73" translate="yes" xml:space="preserve">
          <source>Some devices don't support JavaScript or execute JavaScript so poorly that the user experience is unacceptable. For these cases, you may require a server-rendered, no-JavaScript version of the app. This version, however limited, may be the only practical alternative for people who otherwise couldn't use the app at all.</source>
          <target state="translated">일부 장치는 JavaScript를 지원하지 않거나 JavaScript를 제대로 실행하지 않아 사용자 경험이 허용되지 않습니다. 이 경우 서버에서 렌더링 한 자바 스크립트가없는 앱 버전이 필요할 수 있습니다. 그러나이 버전은 제한적이지만 앱을 전혀 사용할 수없는 사람들을위한 실질적인 대안 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67aaf2c208d248384694dacec3e3cb24b1e785ed" translate="yes" xml:space="preserve">
          <source>Some environments or platforms, like &lt;code&gt;@angular/platform-server&lt;/code&gt; used in &lt;a href=&quot;universal&quot;&gt;Server-side Rendering&lt;/a&gt;, don't support Web Workers. You have to provide a fallback mechanism to perform the computations that the worker would perform to ensure your application will work in these environments.</source>
          <target state="translated">&lt;code&gt;@angular/platform-server&lt;/code&gt; &lt;a href=&quot;universal&quot;&gt;측 렌더링에&lt;/a&gt; 사용되는 @ angular / platform-server 와 같은 일부 환경 또는 플랫폼 은 웹 워커를 지원하지 않습니다. 작업자가 응용 프로그램이 이러한 환경에서 작동하는지 확인하기 위해 수행 할 계산을 수행하려면 대체 메커니즘을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="554ddc57adc28eacf9f4d47865ff05f1d813d51b" translate="yes" xml:space="preserve">
          <source>Some environments or platforms, such as &lt;code&gt;@angular/platform-server&lt;/code&gt; used in &lt;a href=&quot;universal&quot;&gt;Server-side Rendering&lt;/a&gt;, don't support web workers. To ensure that your application will work in these environments, you must provide a fallback mechanism to perform the computations that the worker would otherwise perform.</source>
          <target state="translated">&lt;code&gt;@angular/platform-server&lt;/code&gt; &lt;a href=&quot;universal&quot;&gt;측 렌더링에&lt;/a&gt; 사용되는 @ angular / platform-server 와 같은 일부 환경 또는 플랫폼 은 웹 작업자를 지원하지 않습니다. 애플리케이션이 이러한 환경에서 작동하는지 확인하려면 작업자가 수행 할 계산을 수행하는 대체 메커니즘을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="f459a965438f121077b36b8f5d98ed13ae2fa699" translate="yes" xml:space="preserve">
          <source>Some features of Angular may require additional polyfills.</source>
          <target state="translated">Angular의 일부 기능에는 추가 폴리 필이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="652cb417856953b2c85d53c33fd537306ae11936" translate="yes" xml:space="preserve">
          <source>Some legacy browsers still download both bundles, but only execute the appropriate scripts based on the attributes mentioned above. You can read more on the issue &lt;a href=&quot;https://github.com/philipwalton/webpack-esnext-boilerplate/issues/1&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">일부 레거시 브라우저는 여전히 두 번들을 모두 다운로드하지만 위에서 언급 한 속성을 기반으로 적절한 스크립트 만 실행합니다. 이 문제에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/philipwalton/webpack-esnext-boilerplate/issues/1&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5e683afd923f066295eb3ba18175aa6261d14ea" translate="yes" xml:space="preserve">
          <source>Some legal HTML doesn't make much sense in a template. The &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; elements have no useful role. Pretty much everything else is fair game.</source>
          <target state="translated">일부 합법적 인 HTML은 템플릿에서 의미가 없습니다. &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 요소는 유용한 역할이 없다. 그 밖의 모든 것은 공정한 게임입니다.</target>
        </trans-unit>
        <trans-unit id="70841f86386fe39f91e58b3488f2560c0f72b3dc" translate="yes" xml:space="preserve">
          <source>Some modules, like &lt;code&gt;AppModule&lt;/code&gt;, must be loaded from the start. But others can and should be lazy loaded. The &lt;code&gt;AdminModule&lt;/code&gt;, for example, is needed by a few authorized users, so you should only load it when requested by the right people.</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; 과 같은 일부 모듈 은 처음부터로드해야합니다. 그러나 다른 사람들은 게으른 짐을 싣고 갈 수 있어야합니다. &lt;code&gt;AdminModule&lt;/code&gt; 은 올바른 사람의 요청이있을 때, 예를 들어, 몇 권한이있는 사용자가 필요로한다, 그래서 당신은 단지 그것을로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="a75dabef18d29e986ef8c7578bdf7c0413bbe653" translate="yes" xml:space="preserve">
          <source>Some noteworthy observations:</source>
          <target state="translated">몇 가지 주목할만한 관찰 :</target>
        </trans-unit>
        <trans-unit id="9b39c71b1e1a2ca83607b09ace431ca3689d5eab" translate="yes" xml:space="preserve">
          <source>Some observations:</source>
          <target state="translated">일부 관찰 :</target>
        </trans-unit>
        <trans-unit id="1b0a04594ac4a3d21846af15796e99cea045e104" translate="yes" xml:space="preserve">
          <source>Some of the ES2015+ operators</source>
          <target state="translated">ES2015 + 운영자 중 일부</target>
        </trans-unit>
        <trans-unit id="b203713cf339db71c76ab99e8f1e0222e72c6fd8" translate="yes" xml:space="preserve">
          <source>Some of the metadata is in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorators that you added to your component classes. Other critical metadata is in &lt;a href=&quot;../guide/ngmodules&quot;&gt;&lt;code&gt;@NgModule&lt;/code&gt;&lt;/a&gt; decorators.</source>
          <target state="translated">일부 메타 데이터는 구성 요소 클래스에 추가 한 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 데코레이터에 있습니다. 다른 중요한 메타 데이터는 &lt;a href=&quot;../guide/ngmodules&quot;&gt; &lt;code&gt;@NgModule&lt;/code&gt; &lt;/a&gt; 데코레이터에 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ca7eafca0814a09897297fcb967e74feb1a8c5c" translate="yes" xml:space="preserve">
          <source>Some pipes require at least one parameter and allow more optional parameters, such as &lt;a href=&quot;../api/common/slicepipe&quot;&gt;&lt;code&gt;SlicePipe&lt;/code&gt;&lt;/a&gt;. For example, &lt;code&gt;{{ slice:1:5 }}&lt;/code&gt; creates a new array or string containing a subset of the elements starting with element &lt;code&gt;1&lt;/code&gt; and ending with element &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">일부 파이프에는 하나 이상의 매개 변수가 필요하며 &lt;a href=&quot;../api/common/slicepipe&quot;&gt; &lt;code&gt;SlicePipe&lt;/code&gt; &lt;/a&gt; 와 같은 더 많은 선택적 매개 변수를 허용 합니다. 예를 들어 &lt;code&gt;{{ slice:1:5 }}&lt;/code&gt; 는 요소 &lt;code&gt;1&lt;/code&gt; 로 시작 하고 요소 &lt;code&gt;5&lt;/code&gt; 로 끝나는 요소의 하위 집합을 포함하는 새 배열 또는 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3ef85858173e182deb1f6adc35fffb5ed7ebfcb3" translate="yes" xml:space="preserve">
          <source>Some scripts extend other libraries; for instance with JQuery plugins:</source>
          <target state="translated">일부 스크립트는 다른 라이브러리를 확장합니다. 예를 들어 JQuery 플러그인의 경우 :</target>
        </trans-unit>
        <trans-unit id="b9f04f496af857d2db0e0d672068b333364f9fdf" translate="yes" xml:space="preserve">
          <source>Some style binding styles have a unit extension. The following example conditionally sets the font size in &amp;ldquo;em&amp;rdquo; and &amp;ldquo;%&amp;rdquo; units.</source>
          <target state="translated">일부 스타일 바인딩 스타일에는 단위 확장이 있습니다. 다음 예는 조건부로 글꼴 크기를 &quot;em&quot;및 &quot;%&quot;단위로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="dac94c3fff12a3118ac01f1350e23e35a6e6f3b7" translate="yes" xml:space="preserve">
          <source>Some types of information naturally fall into the same group. A name and address are typical examples of such nested groups, and are used in the following examples.</source>
          <target state="translated">일부 유형의 정보는 자연스럽게 동일한 그룹에 속합니다. 이름과 주소는 이러한 중첩 그룹의 일반적인 예이며 다음 예에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="87ee9cc01ce8a12a1e228d485f58807d2d64a01c" translate="yes" xml:space="preserve">
          <source>Someday you'll want to repeat a block of HTML but only when a particular condition is true. You'll &lt;em&gt;try&lt;/em&gt; to put both an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; and an &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; on the same host element. Angular won't let you. You may apply only one &lt;em&gt;structural&lt;/em&gt; directive to an element.</source>
          <target state="translated">언젠가는 특정 조건이 참일 때만 HTML 블록을 반복하고 싶을 것입니다. 당신은거야 &lt;em&gt;시도&lt;/em&gt; 모두 넣어 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 을 동일한 호스트 요소. 각도는 당신을 못하게합니다. 하나의 &lt;em&gt;구조&lt;/em&gt; 지시문 만 요소에 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="316a04d4ec28a74ba7bea0248d980616d0fe6cba" translate="yes" xml:space="preserve">
          <source>Something could go wrong on the client-side such as a network error that prevents the request from completing successfully or an exception thrown in an RxJS operator. These errors produce JavaScript &lt;code&gt;ErrorEvent&lt;/code&gt; objects.</source>
          <target state="translated">요청이 성공적으로 완료되지 못하게하는 네트워크 오류 또는 RxJS 운영자에서 발생한 예외와 같이 클라이언트 측에서 문제가 발생할 수 있습니다. 이러한 오류는 JavaScript &lt;code&gt;ErrorEvent&lt;/code&gt; 객체를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="dfbcabd470eab905a90fa0ceb3a9288d47b1c007" translate="yes" xml:space="preserve">
          <source>Sometimes &quot;breaking changes&quot;, such as the removal of support for select APIs and features, are necessary to innovate and stay current with new best practices, changing dependencies, or changes in the (web) platform itself.</source>
          <target state="translated">새로운 모범 사례, 종속성 변경 또는 (웹) 플랫폼 자체의 변경 사항으로 혁신하고 최신 상태를 유지하려면 선택 API 및 기능에 대한 지원 제거와 같은 &quot;속성 변경&quot;이 필요한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="49de1568c1ef3cb993b95f0727727351d8338828" translate="yes" xml:space="preserve">
          <source>Sometimes a binding expression triggers a type error during &lt;a href=&quot;aot-compiler&quot;&gt;AOT compilation&lt;/a&gt; and it is not possible or difficult to fully specify the type. To silence the error, you can use the &lt;code&gt;$any()&lt;/code&gt; cast function to cast the expression to the &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/basic-types.html#any&quot;&gt;&lt;code&gt;any&lt;/code&gt; type&lt;/a&gt; as in the following example:</source>
          <target state="translated">때로는 바인딩 표현식이 &lt;a href=&quot;aot-compiler&quot;&gt;AOT 컴파일&lt;/a&gt; 중 유형 오류를 트리거하고 유형 을 완전히 지정하는 것이 불가능하거나 어렵습니다. 오류를 침묵시키기 위해 다음 예제와 같이 &lt;code&gt;$any()&lt;/code&gt; 캐스트 함수를 사용하여 표현식을 &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/basic-types.html#any&quot;&gt; &lt;code&gt;any&lt;/code&gt; 유형&lt;/a&gt; 으로 캐스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc6b864140e3a50e2f17dd053dd59c9477f4c259" translate="yes" xml:space="preserve">
          <source>Sometimes a binding expression triggers a type error during &lt;a href=&quot;aot-compiler&quot;&gt;AOT compilation&lt;/a&gt; and it is not possible or difficult to fully specify the type. To silence the error, you can use the &lt;code&gt;$any()&lt;/code&gt; cast function to cast the expression to the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/basic-types.html#any&quot;&gt;&lt;code&gt;any&lt;/code&gt; type&lt;/a&gt; as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c0dd5f849dcef145063af39357c83c47ffec85" translate="yes" xml:space="preserve">
          <source>Sometimes a service depends on other services, which may depend on yet other services. The dependency injection framework resolves these nested dependencies in the correct order. At each step, the consumer of dependencies declares what it requires in its constructor, and lets the framework provide them.</source>
          <target state="translated">때로는 서비스가 다른 서비스에 의존하고 다른 서비스에 의존 할 수도 있습니다. 종속성 주입 프레임 워크는 이러한 중첩 된 종속성을 올바른 순서로 해결합니다. 각 단계에서 종속성 소비자는 생성자에 필요한 것을 선언하고 프레임 워크에서이를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d6ab589ef42dcecb24ea98bba5d742b803712e16" translate="yes" xml:space="preserve">
          <source>Sometimes an app needs to display a view or a portion of a view only under specific circumstances.</source>
          <target state="translated">경우에 따라 앱은 특정 상황에서만보기 또는보기의 일부를 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c3f8101fc2112170a72478fb7f231c9aa240796" translate="yes" xml:space="preserve">
          <source>Sometimes applications genuinely need to include executable code, display an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; from some URL, or construct potentially dangerous URLs. To prevent automatic sanitization in any of these situations, you can tell Angular that you inspected a value, checked how it was generated, and made sure it will always be secure. But &lt;em&gt;be careful&lt;/em&gt;. If you trust a value that might be malicious, you are introducing a security vulnerability into your application. If in doubt, find a professional security reviewer.</source>
          <target state="translated">때로는 응용 프로그램에서 실행 코드를 포함 하거나 일부 URL에서 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 을 표시 하거나 잠재적으로 위험한 URL을 구성 해야하는 경우가 있습니다 . 이러한 상황에서 자동 살균을 방지하기 위해 Angular에 값을 검사하고 생성 방법을 확인한 후 항상 안전한지 확인할 수 있습니다. 그러나 &lt;em&gt;조심하십시오&lt;/em&gt; . 악의적 일 수있는 값을 신뢰하면 응용 프로그램에 보안 취약점이 발생하는 것입니다. 의심스러운 경우 전문 보안 검토자를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="e0cab9b66ded5e80fee20b0576feaa22af6aee16" translate="yes" xml:space="preserve">
          <source>Sometimes applications transfer large amounts of data and those transfers can take a long time. File uploads are a typical example. Give the users a better experience by providing feedback on the progress of such transfers.</source>
          <target state="translated">응용 프로그램이 많은 양의 데이터를 전송하는 데 시간이 오래 걸릴 수 있습니다. 파일 업로드가 일반적인 예입니다. 이러한 전송 진행 상황에 대한 피드백을 제공하여 사용자에게 더 나은 경험을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="0fa843eaf77ab35d3a87331e39c72a10ecce1ac3" translate="yes" xml:space="preserve">
          <source>Sometimes applications transfer large amounts of data and those transfers can take a long time. File uploads are a typical example. You can give the users a better experience by providing feedback on the progress of such transfers.</source>
          <target state="translated">때로는 응용 프로그램이 많은 양의 데이터를 전송하고 이러한 전송에 오랜 시간이 걸릴 수 있습니다. 파일 업로드가 일반적인 예입니다. 이러한 전송의 진행 상황에 대한 피드백을 제공하여 사용자에게 더 나은 경험을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf2e10c43e5e90800b73756ce07244bbcedd633f" translate="yes" xml:space="preserve">
          <source>Sometimes however, &lt;code&gt;null&lt;/code&gt; values in the property path may be OK under certain circumstances, especially when the value starts out null but the data arrives eventually.</source>
          <target state="translated">그러나 특정 상황에서, 특히 값이 null로 시작하지만 데이터가 결국 도착하는 경우 속성 경로의 &lt;code&gt;null&lt;/code&gt; 값이 정상일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afbfcf85cb461260370ada65947a3ffc928e7abf" translate="yes" xml:space="preserve">
          <source>Sometimes it's easier to provide a ready-made object rather than ask the injector to create it from a class. To inject an object you have already created, configure the injector with the &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; option</source>
          <target state="translated">때로는 인젝터에게 클래스에서 객체를 만들도록 요청하는 것보다 기성품을 제공하는 것이 더 쉽습니다. 이미 생성 한 객체를 주입하려면 &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 옵션을 사용하여 주입기를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="af4c946ca4b238dda6b20f8f5cefc678c3698fac" translate="yes" xml:space="preserve">
          <source>Sometimes it's easier to provide a ready-made object rather than ask the injector to create it from a class. To inject an object you have already created, configure the injector with the &lt;code&gt;useValue&lt;/code&gt; option</source>
          <target state="translated">때로는 인젝터에게 클래스에서 생성하도록 요청하는 것보다 기성품 객체를 제공하는 것이 더 쉽습니다. 이미 생성 한 객체를 주입하려면 &lt;code&gt;useValue&lt;/code&gt; 옵션으로 주입기를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="916f97cf23387473c8f6e5644aca380547c981d1" translate="yes" xml:space="preserve">
          <source>Sometimes it's useful to apply styles based on some condition &lt;em&gt;outside&lt;/em&gt; of a component's view. For example, a CSS theme class could be applied to the document &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element, and you want to change how your component looks based on that.</source>
          <target state="translated">때로는 구성 요소의 관점을 &lt;em&gt;벗어나는&lt;/em&gt; 조건에 따라 스타일을 적용하는 것이 유용합니다 . 예를 들어 CSS 테마 클래스를 document &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 요소에 적용 할 수 있으며이를 기반으로 구성 요소의 모양을 변경하려고합니다.</target>
        </trans-unit>
        <trans-unit id="5c406639534428eae74420bbaf69bc64d5bb3873" translate="yes" xml:space="preserve">
          <source>Sometimes refers to a &lt;a href=&quot;glossary#dependency-injection&quot;&gt;dependency-injection&lt;/a&gt; binding between a &lt;a href=&quot;glossary#token&quot;&gt;token&lt;/a&gt; and a dependency &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt;.</source>
          <target state="translated">때때로 &lt;a href=&quot;glossary#token&quot;&gt;토큰&lt;/a&gt; 과 종속성 &lt;a href=&quot;glossary#provider&quot;&gt;공급자&lt;/a&gt; 간의 &lt;a href=&quot;glossary#dependency-injection&quot;&gt;종속성 주입&lt;/a&gt; 바인딩을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="69b074830e6cab0ff01b67d758028410dfc9766f" translate="yes" xml:space="preserve">
          <source>Sometimes the error is transient and goes away automatically if you try again. For example, network interruptions are common in mobile scenarios, and trying again can produce a successful result.</source>
          <target state="translated">때때로 오류는 일시적이며 다시 시도하면 자동으로 사라집니다. 예를 들어 네트워크 중단은 모바일 시나리오에서 일반적이며 다시 시도하면 성공적인 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38e29bbe034f4e55ccadca72413de5d634c48c4e" translate="yes" xml:space="preserve">
          <source>Sometimes the error is transient and will go away automatically if you try again. For example, network interruptions are common in mobile scenarios, and trying again may produce a successful result.</source>
          <target state="translated">때때로 오류는 일시적이며 다시 시도하면 자동으로 사라집니다. 예를 들어, 모바일 시나리오에서 네트워크 중단이 일반적이며 다시 시도하면 성공적인 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad442d3fdd67eb4c192c8f3016404b07efc76dfc" translate="yes" xml:space="preserve">
          <source>Sometimes the public name of an input/output property should be different from the internal name. While it is a best practice to avoid this situation, Angular does offer a solution.</source>
          <target state="translated">때때로 입 / 출력 특성의 공개 이름이 내부 이름과 달라야합니다. 이러한 상황을 피하는 것이 가장 좋은 방법이지만 Angular는 솔루션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c9af7e5c88e4113c8c33d69789e6b44b2076d8a8" translate="yes" xml:space="preserve">
          <source>Sometimes the section header text makes for an unattractive anchor. &lt;a href=&quot;docs-style-guide#ugly-long-section-header-anchors&quot;&gt;This one&lt;/a&gt; is pretty bad.</source>
          <target state="translated">때로는 섹션 헤더 텍스트가 매력없는 앵커를 만듭니다. &lt;a href=&quot;docs-style-guide#ugly-long-section-header-anchors&quot;&gt;이것은&lt;/a&gt; 꽤 나쁘다.</target>
        </trans-unit>
        <trans-unit id="702dc630e2eb660555ad17d2dca417ea51a38304" translate="yes" xml:space="preserve">
          <source>Sometimes there are differences between the name of property and an attribute.</source>
          <target state="translated">속성 이름과 속성이 다른 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="25dbb2d1d64aace8914c9a8f3da6a2dc60d4e5c5" translate="yes" xml:space="preserve">
          <source>Sometimes using the appropriate native element requires a container element. For example, the native &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element cannot have children, so any custom text entry components need to wrap an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with additional elements. While you might just include the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; in your custom component's template, this makes it impossible for users of the component to set arbitrary properties and attributes to the input element. Instead, you can create a container component that uses content projection to include the native control in the component's API.</source>
          <target state="translated">때때로 적절한 기본 요소를 사용하려면 컨테이너 요소가 필요합니다. 예를 들어, 기본 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 요소는 하위를 가질 수 없으므로 모든 사용자 정의 텍스트 입력 구성 요소는 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 을 추가 요소 로 랩핑해야합니다 . 사용자 정의 구성 요소의 템플릿에 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 을 포함시킬 수도 있지만 이로 인해 구성 요소 사용자는 입력 요소에 임의의 속성 및 특성을 설정할 수 없습니다. 대신 컨텐츠 프로젝션을 사용하여 컴포넌트의 API에 기본 제어를 포함하는 컨테이너 컴포넌트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ac07b67807f6a8d2a6a6fd612490e48e4e04483" translate="yes" xml:space="preserve">
          <source>Sometimes you don't know the value of a dimensional style property until runtime. For example, elements often have widths and heights that depend on their content and the screen size. These properties are often challenging to animate using CSS.</source>
          <target state="translated">때로는 런타임까지 차원 스타일 속성의 값을 모릅니다. 예를 들어 요소에는 종종 내용과 화면 크기에 따라 너비와 높이가 있습니다. 이러한 속성은 종종 CSS를 사용하여 애니메이션을 적용하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="4ed6a463490243dcb2def9121489505c9fc9f592" translate="yes" xml:space="preserve">
          <source>Sometimes you need to clear the request body rather than replace it. If you set the cloned request body to &lt;code&gt;undefined&lt;/code&gt;, Angular assumes you intend to leave the body as is. That is not what you want. If you set the cloned request body to &lt;code&gt;null&lt;/code&gt;, Angular knows you intend to clear the request body.</source>
          <target state="translated">때로는 요청 본문을 바꾸지 않고 지워야 할 때가 있습니다. 복제 된 요청 본문을 &lt;code&gt;undefined&lt;/code&gt; 로 설정하면 Angular는 본문을 그대로 둡니다. 그것은 당신이 원하는 것이 아닙니다. 복제 된 요청 본문을 &lt;code&gt;null&lt;/code&gt; 로 설정하면 Angular는 요청 본문을 지우려고합니다.</target>
        </trans-unit>
        <trans-unit id="6f278cc3a4181160f4e1effb537c25bf3810fd64" translate="yes" xml:space="preserve">
          <source>Sometimes you need to clear the request body rather than replace it. To do this, set the cloned request body to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">때때로 요청 본문을 바꾸지 않고 지워야합니다. 이렇게하려면 복제 된 요청 본문을 &lt;code&gt;null&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="e989b7f389257a85d64fa80446bff97e952260a5" translate="yes" xml:space="preserve">
          <source>Sometimes you need to create a dependent value dynamically, based on information you won't have until run time. For example, you might need information that changes repeatedly in the course of the browser session. Also, your injectable service might not have independent access to the source of the information.</source>
          <target state="translated">때로는 런타임까지 보유하지 않은 정보를 기반으로 종속 값을 동적으로 작성해야합니다. 예를 들어, 브라우저 세션 중에 반복적으로 변경되는 정보가 필요할 수 있습니다. 또한, 귀하의 주사 서비스는 정보 출처에 대한 독립적 인 액세스 권한이 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7259258829117230ab23109501a352812f52835c" translate="yes" xml:space="preserve">
          <source>Sometimes you want multiple instances of a service at &lt;em&gt;the same level&lt;/em&gt; of the component hierarchy.</source>
          <target state="translated">때로는 &lt;em&gt;동일한 수준&lt;/em&gt; 의 구성 요소 계층 에서 여러 서비스 인스턴스를 원할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="06c4fd63af0dc746f3373b72a6f8a9279dddac9e" translate="yes" xml:space="preserve">
          <source>Sometimes you want to display an example of bad code or bad design.</source>
          <target state="translated">잘못된 코드 나 잘못된 디자인의 예를 표시하려는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="58384f972d1140a2bfdf724d347902aee2ee9a06" translate="yes" xml:space="preserve">
          <source>Sometimes, a feature of your application requires accessing a part of a route, such as a query parameter or a fragment. The Tour of Heroes app at this stage in the tutorial uses a list view in which you can click on a hero to see details. The router uses an &lt;code&gt;id&lt;/code&gt; to show the correct hero's details.</source>
          <target state="translated">경우에 따라 애플리케이션의 기능을 사용하려면 쿼리 매개 변수 또는 조각과 같은 경로의 일부에 액세스해야합니다. 튜토리얼의이 단계에있는 Tour of Heroes 앱은 영웅을 클릭하여 세부 정보를 볼 수있는 목록보기를 사용합니다. 라우터는 &lt;code&gt;id&lt;/code&gt; 를 사용 하여 올바른 영웅의 세부 정보를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e5d4f7b24f7f6d8872f71da1476619f69e40c15a" translate="yes" xml:space="preserve">
          <source>Sometimes, instead of starting an independent execution for each subscriber, you want each subscription to get the same values&amp;mdash;even if values have already started emitting. This might be the case with something like an observable of clicks on the document object.</source>
          <target state="translated">경우에 따라 각 구독자에 대해 독립적 인 실행을 시작하는 대신 값이 이미 방출되기 시작한 경우에도 각 구독이 동일한 값을 갖기를 원할 수 있습니다. 이것은 문서 객체를 클릭하는 것과 같은 경우 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38c10fcb09c207c1bb5c55d3634b3b93a859ff8a" translate="yes" xml:space="preserve">
          <source>Soon you can load Angular dependencies into the application via &lt;code&gt;index.html&lt;/code&gt;, but first you need to do some directory path adjustments. You'll need to load files from &lt;code&gt;node_modules&lt;/code&gt; and the project root instead of from the &lt;code&gt;/app&lt;/code&gt; directory as you've been doing to this point.</source>
          <target state="translated">곧 &lt;code&gt;index.html&lt;/code&gt; 을 통해 Angular 의존성을 응용 프로그램에로드 할 수 있지만 먼저 디렉토리 경로 조정을 수행해야합니다. 이 시점에서했던 것처럼 &lt;code&gt;/app&lt;/code&gt; 디렉토리 대신 &lt;code&gt;node_modules&lt;/code&gt; 및 프로젝트 루트 에서 파일을로드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="22a35fbebff47762d94faae1d7babdf97b0736bf" translate="yes" xml:space="preserve">
          <source>Source code</source>
          <target state="translated">소스 코드</target>
        </trans-unit>
        <trans-unit id="dccd6b0b6b5b1186e6e30c2ae5229fdc4632e9fd" translate="yes" xml:space="preserve">
          <source>Source code markup</source>
          <target state="translated">소스 코드 마크 업</target>
        </trans-unit>
        <trans-unit id="51944448d51ed63f8b71259f667d572991b13a0b" translate="yes" xml:space="preserve">
          <source>Source file for tests.</source>
          <target state="translated">테스트를위한 소스 파일.</target>
        </trans-unit>
        <trans-unit id="2dfaa0d2d97365cc092010384e37e8702618042b" translate="yes" xml:space="preserve">
          <source>Source files for the root-level application project.</source>
          <target state="translated">루트 수준 응용 프로그램 프로젝트의 소스 파일</target>
        </trans-unit>
        <trans-unit id="8f07d985745ff117e05b2075b0685a36ecb5d3ea" translate="yes" xml:space="preserve">
          <source>Special characters used as literal characters are quoted with ASCII single quotes.</source>
          <target state="translated">리터럴 문자로 사용되는 특수 문자는 ASCII 작은 따옴표로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="de1804c7376bec7423909217dcd1d995f5f20d41" translate="yes" xml:space="preserve">
          <source>Special injection tokens (such as &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt;) return a new instance whenever they are requested (previously, instances of special tokens were shared if requested on the same node). This primarily affects tests that do identity comparison of these objects.</source>
          <target state="translated">특수 주입 토큰 (예 : &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; )은 요청 될 때마다 새 인스턴스를 반환합니다 (이전에는 동일한 노드에서 요청 된 경우 특수 토큰의 인스턴스가 공유 됨). 이것은 주로 이러한 개체의 ID 비교를 수행하는 테스트에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="8c0463acdb13c9f21299a5b72807ab9eac6c7981" translate="yes" xml:space="preserve">
          <source>Special selectors</source>
          <target state="translated">스페셜 셀렉터</target>
        </trans-unit>
        <trans-unit id="91c85cdd186d333f7a6d24ee61f9dcffbee3f1f5" translate="yes" xml:space="preserve">
          <source>Special values &lt;code&gt;:enter&lt;/code&gt; and &lt;code&gt;:leave&lt;/code&gt; initiate a transition on the entry and exit states, equivalent to &quot;void =&amp;gt; &lt;em&gt;&quot; and &quot;&lt;/em&gt; =&amp;gt; void&quot;.</source>
          <target state="translated">특수 값 &lt;code&gt;:enter&lt;/code&gt; 및 &lt;code&gt;:leave&lt;/code&gt; 는 &quot;void =&amp;gt; &lt;em&gt;&quot;및 &quot;&lt;/em&gt; =&amp;gt; void&quot; 에 해당하는 진입 및 종료 상태에서 전환을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="715adef1813fe743fd692801c9c30a164332f285" translate="yes" xml:space="preserve">
          <source>Special values &lt;code&gt;:increment&lt;/code&gt; and &lt;code&gt;:decrement&lt;/code&gt; initiate a transition when a numeric value has increased or decreased in value.</source>
          <target state="translated">특수 값 &lt;code&gt;:increment&lt;/code&gt; 및 &lt;code&gt;:decrement&lt;/code&gt; 는 숫자 값이 증가하거나 감소 할 때 전환을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="9f76f08c178d6051f1685c03b043bda781f3484e" translate="yes" xml:space="preserve">
          <source>Special values for state-change expressions</source>
          <target state="translated">상태 변경 표현식의 특수 값</target>
        </trans-unit>
        <trans-unit id="7cd288dd75d4289419a0f8f2f0190edc346f7e75" translate="yes" xml:space="preserve">
          <source>Specifically, it is as if the list of modules whose exported components, directives, or pipes are referenced by the component templates were declared in this module.</source>
          <target state="translated">특히, 내 보낸 구성 요소, 지시문 또는 파이프가 구성 요소 템플리트에 의해 참조되는 모듈 목록이이 모듈에서 선언 된 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2717d7b1b2fd8ea21373e31cb1ec1e02439892f8" translate="yes" xml:space="preserve">
          <source>Specifically, the &lt;code&gt;strict&lt;/code&gt; flag does the following:</source>
          <target state="translated">특히 &lt;code&gt;strict&lt;/code&gt; 플래그는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="d85c52f52591e014091971f46f808ca788e841cc" translate="yes" xml:space="preserve">
          <source>Specifically, the classes and functions in the &lt;code&gt;&lt;a href=&quot;../static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; module allow the following:</source>
          <target state="translated">특히 &lt;code&gt;&lt;a href=&quot;../static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; 모듈 의 클래스와 함수 는 다음을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="89c41b5f000ca9eae0da038c4c2562fc146ec362" translate="yes" xml:space="preserve">
          <source>Specifically, this guide showed how you can achieve better performance and greater flexibility in your hybrid apps by using &lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule()&lt;/a&gt; instead of &lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;.</source>
          <target state="translated">특히이 가이드는 &lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt; 대신 &lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule ()&lt;/a&gt; 을 사용하여 하이브리드 앱에서 더 나은 성능과 유연성을 달성하는 방법을 보여주었습니다 .</target>
        </trans-unit>
        <trans-unit id="f206880225dd3a28e161e67b013fb9818d73a109" translate="yes" xml:space="preserve">
          <source>Specifies a CSS selector that identifies this directive within a template. Supported selectors include &lt;code&gt;element&lt;/code&gt;, &lt;code&gt;[attribute]&lt;/code&gt;, &lt;code&gt;.class&lt;/code&gt;, and &lt;code&gt;:not()&lt;/code&gt;.</source>
          <target state="translated">템플릿 내에서이 지시문을 식별하는 CSS 선택기를 지정합니다. 지원되는 선택기는 &lt;code&gt;element&lt;/code&gt; , &lt;code&gt;[attribute]&lt;/code&gt; , &lt;code&gt;.class&lt;/code&gt; 및 &lt;code&gt;:not()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69f74f0128ed8b3251b4e7dbf826710d5ebfa149" translate="yes" xml:space="preserve">
          <source>Specifies a group of animation steps (&lt;em&gt;inner animations&lt;/em&gt;) to be run in parallel. Animation continues only after all inner animation steps have completed. Used within &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;().&lt;/code&gt;</source>
          <target state="translated">병렬로 실행할 애니메이션 단계 그룹 ( &lt;em&gt;내부 애니메이션&lt;/em&gt; )을 지정합니다 . 모든 내부 애니메이션 단계가 완료된 후에 만 ​​애니메이션이 계속됩니다. &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;().&lt;/code&gt; () 내에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="37d60de96062cbae9258cdcb3c7d3e4639f09f03" translate="yes" xml:space="preserve">
          <source>Specifies a list of animation steps that are run sequentially, one by one.</source>
          <target state="translated">순차적으로 실행되는 애니메이션 단계 목록을 하나씩 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0a61ad296416ad71ea36b7350e3ccd9473acb817" translate="yes" xml:space="preserve">
          <source>Specifies a root URI to use for relative navigation.</source>
          <target state="translated">상대 탐색에 사용할 루트 URI를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3ea0d046f01ef562b736f121145dd2adf0bff4e1" translate="yes" xml:space="preserve">
          <source>Specifies all files that are exported from your library.</source>
          <target state="translated">라이브러리에서 내 보낸 모든 파일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1f2d828d5052d8a7df9d1b71c02c8ee6706c1716" translate="yes" xml:space="preserve">
          <source>Specifies automatic styling.</source>
          <target state="translated">자동 스타일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="925486f914ee11e233011df33c896811ae05e9a4" translate="yes" xml:space="preserve">
          <source>Specifies if the component should have a selector or not.</source>
          <target state="translated">구성 요소에 선택기가 있어야하는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4e63f8d58d9e06fe7c9f1ca62427243631385899" translate="yes" xml:space="preserve">
          <source>Specifies if the style will contain &lt;code&gt;:host { display: block; }&lt;/code&gt;.</source>
          <target state="translated">스타일에 다음을 포함할지 여부를 지정합니다 &lt;code&gt;:host { display: block; }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b4d15d3b0fa85381e492f8e06134b83d9633ed1" translate="yes" xml:space="preserve">
          <source>Specifies intentionally untracked files that &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; should ignore.</source>
          <target state="translated">&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git이&lt;/a&gt; 의도적으로 추적 할 수없는 파일을 지정합니다 이 무시해야 할 합니다.</target>
        </trans-unit>
        <trans-unit id="1c4579f6d96179d8d72c82764857237e1344ee2a" translate="yes" xml:space="preserve">
          <source>Specifies that an injector should retrieve a dependency from any injector until reaching the host element of the current component. (Only used with Element Injector)</source>
          <target state="translated">인젝터가 현재 구성 요소의 호스트 요소에 도달 할 때까지 인젝터에서 종속성을 검색하도록 지정합니다. (요소 인젝터에만 사용)</target>
        </trans-unit>
        <trans-unit id="70628f74250e312617f8dd39119a36898f311c4f" translate="yes" xml:space="preserve">
          <source>Specifies the file that serves as the index page to satisfy navigation requests. Usually this is &lt;code&gt;/index.html&lt;/code&gt;.</source>
          <target state="translated">탐색 요청을 충족시키기 위해 색인 페이지 역할을하는 파일을 지정합니다. 보통 이것은 &lt;code&gt;/index.html&lt;/code&gt; 입니다 입니다.</target>
        </trans-unit>
        <trans-unit id="c169d352e8435a1a1b43ccb67e78bb0b7f197345" translate="yes" xml:space="preserve">
          <source>Specifies the source language of the application.</source>
          <target state="translated">응용 프로그램의 소스 언어를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cb5267a9c8320157ef37cd6e0c2ee7a7697a32bb" translate="yes" xml:space="preserve">
          <source>Specifies the timing information for a transition. Optional values for &lt;code&gt;delay&lt;/code&gt; and &lt;code&gt;easing&lt;/code&gt;. Can contain &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; calls within.</source>
          <target state="translated">전환의 타이밍 정보를 지정합니다. &lt;code&gt;delay&lt;/code&gt; 및 &lt;code&gt;easing&lt;/code&gt; 대한 선택적 값 . &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 포함 할 수 있음 ()안에 호출을 .</target>
        </trans-unit>
        <trans-unit id="814f5ed3722cd882c0f058a454546be0a851ad7d" translate="yes" xml:space="preserve">
          <source>Specifies which interfaces to implement.</source>
          <target state="translated">구현할 인터페이스를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1d57a0ecfe43d67c820becfb47bc0cc48e6b5942" translate="yes" xml:space="preserve">
          <source>Specify a custom ID in the &lt;code&gt;i18n&lt;/code&gt; attribute by using the prefix &lt;code&gt;@@&lt;/code&gt;. The following example defines the custom ID &lt;code&gt;introductionHeader&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;@@&lt;/code&gt; 접두사를 사용하여 &lt;code&gt;i18n&lt;/code&gt; 속성에 사용자 지정 ID를 지정합니다 . 다음 예제는 사용자 정의 ID &lt;code&gt;introductionHeader&lt;/code&gt; 헤더를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="2c8208ca8d458a9a175183f6d3cdd09c842cffe3" translate="yes" xml:space="preserve">
          <source>Specify the &lt;code&gt;colspan&lt;/code&gt; attribute by using the following syntax: &lt;code&gt;[attr.colspan]&lt;/code&gt;.</source>
          <target state="translated">다음 구문을 사용하여 &lt;code&gt;colspan&lt;/code&gt; 속성을 지정하십시오 . &lt;code&gt;[attr.colspan]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94b04a35d9f8198258d4e5b072123fc9fa3773c4" translate="yes" xml:space="preserve">
          <source>Specify the Angular compiler factory, a &lt;code&gt;&lt;a href=&quot;../api/core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt;, and a default Angular testing module. Alternatives for non-browser platforms are available in the general form &lt;code&gt;@angular/platform-&amp;lt;platform_name&amp;gt;/testing/&amp;lt;platform_name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Angular 컴파일러 팩토리, &lt;code&gt;&lt;a href=&quot;../api/core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt; 및 기본 Angular 테스트 모듈을 지정하십시오. 브라우저 이외의 플랫폼에 대한 대안은 일반적인 형식 &lt;code&gt;@angular/platform-&amp;lt;platform_name&amp;gt;/testing/&amp;lt;platform_name&amp;gt;&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="049d07a25e5107f551eab17ee6450a18789d0a4f" translate="yes" xml:space="preserve">
          <source>Specify the translation format explicitly with the &lt;code&gt;--format&lt;/code&gt; command option, as shown in the following examples:</source>
          <target state="translated">다음 예와 같이 &lt;code&gt;--format&lt;/code&gt; 명령 옵션을 사용하여 변환 형식을 명시 적으로 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="c7688d94c2c9f024c6438a1ed2da81f50ba210dd" translate="yes" xml:space="preserve">
          <source>Specify the warning level in the &lt;code&gt;options&lt;/code&gt; section for the &lt;code&gt;build&lt;/code&gt; target of your Angular CLI configuration file (&lt;code&gt;angular.json&lt;/code&gt;). The following example shows how to set the warning level to &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">Angular CLI 구성 파일 ( &lt;code&gt;angular.json&lt;/code&gt; ) 의 &lt;code&gt;build&lt;/code&gt; 대상에 대한 &lt;code&gt;options&lt;/code&gt; 섹션 에서 경고 수준을 지정합니다 . 다음 예는 경고 수준을 &lt;code&gt;error&lt;/code&gt; 로 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a91d275563c32961db5d9ea664f838500f4de564" translate="yes" xml:space="preserve">
          <source>Specifying a component's CSS selector</source>
          <target state="translated">구성 요소의 CSS 선택기 지정</target>
        </trans-unit>
        <trans-unit id="45db01e54fd08808e99ccb82fd3a69995f8c5c9d" translate="yes" xml:space="preserve">
          <source>Specifying a factory for the Angular module</source>
          <target state="translated">각도 모듈의 팩토리 지정</target>
        </trans-unit>
        <trans-unit id="f15a20bd69412412cf58085208b100b0b82f6cde" translate="yes" xml:space="preserve">
          <source>Specifying a relative route</source>
          <target state="translated">상대 경로 지정</target>
        </trans-unit>
        <trans-unit id="ac30704104b1ce04b760d62c7dbe8a11f568ece5" translate="yes" xml:space="preserve">
          <source>Specifying the response type is a declaration to TypeScript that it should expect your response to be of the given type. This is a build-time check and doesn't guarantee that the server will actually respond with an object of this type. It is up to the server to ensure that the type specified by the server API is returned.</source>
          <target state="translated">응답 유형을 지정하면 응답이 주어진 유형이 될 것으로 예상하는 TypeScript에 대한 선언입니다. 이것은 빌드 타임 검사이며 서버가 실제로이 유형의 객체로 응답한다고 보장하지 않습니다. 서버 API에 의해 지정된 유형이 리턴되는지 확인하는 것은 서버에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d0b4281e241a05274b35025708ae53c463fe49d" translate="yes" xml:space="preserve">
          <source>Specifying the response type is a declaration to TypeScript that it should treat your response as being of the given type. This is a build-time check and doesn't guarantee that the server will actually respond with an object of this type. It is up to the server to ensure that the type specified by the server API is returned.</source>
          <target state="translated">응답 유형을 지정하는 것은 응답을 주어진 유형으로 처리해야한다는 TypeScript에 대한 선언입니다. 이것은 빌드 시간 검사이며 서버가 실제로이 유형의 개체로 응답 할 것이라고 보장하지 않습니다. 서버 API에 지정된 유형이 리턴되는지 확인하는 것은 서버의 몫입니다.</target>
        </trans-unit>
        <trans-unit id="2d2cb022bc3d26bd1407c4aa787d5e46e1ad4c3b" translate="yes" xml:space="preserve">
          <source>Speed</source>
          <target state="translated">Speed</target>
        </trans-unit>
        <trans-unit id="478546c897993667cb89aebf80ea5bdb5df8f985" translate="yes" xml:space="preserve">
          <source>Spotlight on pathMatch</source>
          <target state="translated">pathMatch 스포트라이트</target>
        </trans-unit>
        <trans-unit id="9fce3fbfe49053a5128e436f7b26e30fb85d8bbb" translate="yes" xml:space="preserve">
          <source>Spread in literal array</source>
          <target state="translated">리터럴 배열로 확산</target>
        </trans-unit>
        <trans-unit id="e08660b7e6bd062c7b3c878071df21183ee9e7e3" translate="yes" xml:space="preserve">
          <source>Sprinkle some CSS classes for styling (you'll add the CSS styles shortly).</source>
          <target state="translated">스타일링을 위해 일부 CSS 클래스를 뿌린다 (CSS 스타일을 곧 추가 할 것이다).</target>
        </trans-unit>
        <trans-unit id="c4aff31a83bb2341093ada54047bcaf1e353b0b5" translate="yes" xml:space="preserve">
          <source>Spy</source>
          <target state="translated">Spy</target>
        </trans-unit>
        <trans-unit id="17f316034349b8045f94526199f11b875c7892e2" translate="yes" xml:space="preserve">
          <source>SpyLocation</source>
          <target state="translated">SpyLocation</target>
        </trans-unit>
        <trans-unit id="926ee2fe71735cd2fb34b65100e0f2541ec8d6a8" translate="yes" xml:space="preserve">
          <source>SpyNgModuleFactoryLoader</source>
          <target state="translated">SpyNgModuleFactoryLoader</target>
        </trans-unit>
        <trans-unit id="ad594f8eb8b706a77d5b72fcb52f7c4176a2498f" translate="yes" xml:space="preserve">
          <source>Spying &lt;code&gt;OnInit&lt;/code&gt; and &lt;code&gt;OnDestroy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OnInit&lt;/code&gt; 및 &lt;code&gt;OnDestroy&lt;/code&gt; 감시</target>
        </trans-unit>
        <trans-unit id="01a86ab8d916a588cd67adfcc533b8392050f4aa" translate="yes" xml:space="preserve">
          <source>Stable Release</source>
          <target state="translated">안정적인 출시</target>
        </trans-unit>
        <trans-unit id="c54e8d606d901ea1d2b7420bc669f85bda9ba570" translate="yes" xml:space="preserve">
          <source>StackBlitz creates a starter Angular app with a top bar&amp;mdash;containing the store name and checkout icon&amp;mdash;and the title for a product list.</source>
          <target state="translated">StackBlitz는 상점 이름 및 체크 아웃 아이콘이 포함 된 상단 표시 줄과 제품 목록의 제목이있는 스타터 Angular 앱을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="75c3592ee5216b4760722432c72530052e7228ee" translate="yes" xml:space="preserve">
          <source>StackBlitz is continually improving, so there may be slight differences in generated code, but the app's behavior will be the same.</source>
          <target state="translated">StackBlitz는 지속적으로 개선되므로 생성 된 코드에 약간의 차이가있을 수 있지만 앱의 동작은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9f3d51394bf6c911f7cc1bdd2d89cdbffa0e1a62" translate="yes" xml:space="preserve">
          <source>StackBlitz projects are public by default, allowing you to share your Angular app via the project URL. Keep in mind that this is a great way to share ideas and prototypes, but it is not intended for production hosting.</source>
          <target state="translated">StackBlitz 프로젝트는 기본적으로 공개되어 있으므로 프로젝트 URL을 통해 Angular 앱을 공유 할 수 있습니다. 아이디어와 프로토 타입을 공유 할 수있는 좋은 방법이지만 프로덕션 호스팅을위한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="dc38ad881be5858e30b64c3c2517a2a445c83d47" translate="yes" xml:space="preserve">
          <source>StackBlitz tip: Any time the preview refreshes, the cart is cleared. If you make changes to the app, the page refreshes, and you'll need to buy products again to populate the cart.</source>
          <target state="translated">StackBlitz 팁 : 미리보기를 새로 고칠 때마다 카트가 지워집니다. 앱을 변경하면 페이지가 새로 고쳐지고 장바구니를 채우려면 제품을 다시 구매해야합니다.</target>
        </trans-unit>
        <trans-unit id="e9f8f218f56861847d444538920794efcd272142" translate="yes" xml:space="preserve">
          <source>StackBlitz tip: Any time the preview refreshes, the cart is cleared. If you make changes to the app, the page refreshes, so you'll need to buy products again to populate the cart.</source>
          <target state="translated">StackBlitz 팁 : 미리보기가 새로 고쳐질 때마다 카트가 지워집니다. 앱을 변경하면 페이지가 새로 고쳐 지므로 장바구니를 채우려면 제품을 다시 구매해야합니다.</target>
        </trans-unit>
        <trans-unit id="3bdc77830eb317ca046038051340028ce397d5b1" translate="yes" xml:space="preserve">
          <source>StackBlitz tips</source>
          <target state="translated">StackBlitz 팁</target>
        </trans-unit>
        <trans-unit id="2839c407622223dee69071a7cb7a3304fbcac575" translate="yes" xml:space="preserve">
          <source>Staggers the starting time for animations for multiple elements.</source>
          <target state="translated">여러 요소의 애니메이션 시작 시간을 비틀어 놓습니다.</target>
        </trans-unit>
        <trans-unit id="10306aeb9ffa26e1ac21d26c6556b58df4d0c0a1" translate="yes" xml:space="preserve">
          <source>Standard markdown processors don't allow you to put markdown &lt;em&gt;within&lt;/em&gt; HTML tags. But the Angular documentation markdown processor &lt;strong&gt;supports markdown within HTML&lt;/strong&gt;, as long as you follow one rule:</source>
          <target state="translated">표준 마크 다운 프로세서에서는 HTML 태그 &lt;em&gt;내에&lt;/em&gt; 마크 다운을 넣을 수 없습니다 . 그러나 Angular documentation markdown processor &lt;strong&gt;는 HTML 내에서 markdown을 지원합니다&lt;/strong&gt; 하나의 규칙을 따르는 한 .</target>
        </trans-unit>
        <trans-unit id="effd4c04f415988a30d340e6b2349d536c76c08c" translate="yes" xml:space="preserve">
          <source>Start Protractor's Element Explorer for debugging.</source>
          <target state="translated">디버깅을 위해 각도기의 요소 탐색기를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="71b5afd2ee1799bf22dd9a125e16126cf1502a02" translate="yes" xml:space="preserve">
          <source>Start by adding a &lt;code&gt;searchHeroes()&lt;/code&gt; method to the &lt;code&gt;HeroService&lt;/code&gt;.</source>
          <target state="translated">추가하는 것으로 써 시작 &lt;code&gt;searchHeroes()&lt;/code&gt; 받는 방법을 &lt;code&gt;HeroService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9055f4745fc865882af1cd7ec2d306b457f907a1" translate="yes" xml:space="preserve">
          <source>Start by creating an &lt;a href=&quot;../api/common/http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/common/http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt; 를 작성하여 시작하십시오. .</target>
        </trans-unit>
        <trans-unit id="d1925f507e24371ecd98f89acdb423a02aae9e34" translate="yes" xml:space="preserve">
          <source>Start by creating an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; called &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; 이라는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 을 작성하여 시작하십시오. .</target>
        </trans-unit>
        <trans-unit id="a58464a049fd2ed3e1ad8fca48612e82dbe15c28" translate="yes" xml:space="preserve">
          <source>Start by importing &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; 클래스 를 가져 와서 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="6637113a3228737f2c681bb3420d290f5b963e05" translate="yes" xml:space="preserve">
          <source>Start by installing the &lt;code&gt;jasmine-marbles&lt;/code&gt; npm package. Then import the symbols you need.</source>
          <target state="translated">&lt;code&gt;jasmine-marbles&lt;/code&gt; 을 설치하여 시작하십시오. npm 패키지 . 그런 다음 필요한 기호를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a8b0ce20d4e8ff37c74c89fa788e16baef48db23" translate="yes" xml:space="preserve">
          <source>Start by reviewing this simplified version of the &lt;em&gt;heroes&lt;/em&gt; feature from the &lt;a href=&quot;../tutorial/index&quot;&gt;The Tour of Heroes&lt;/a&gt;. This simple version doesn't use DI; we'll walk through converting it to do so.</source>
          <target state="translated">&lt;a href=&quot;../tutorial/index&quot;&gt;The Tour of Heroes&lt;/a&gt; 에서이 단순화 된 &lt;em&gt;영웅&lt;/em&gt; 기능 버전을 검토하여 시작하십시오. . 이 간단한 버전은 DI를 사용하지 않습니다. 이를 변환하는 과정을 안내합니다.</target>
        </trans-unit>
        <trans-unit id="5a1a87886971a124aeae2d6c54174da5e34c0c86" translate="yes" xml:space="preserve">
          <source>Start immediately, run for 200ms. Use an acceleration curve to start slow and end at full velocity: &lt;code&gt;'0.2s ease-in'&lt;/code&gt;</source>
          <target state="translated">즉시 시작하고 200ms 동안 실행하십시오. 가속 곡선을 사용하여 느리게 시작하고 최고 속도로 끝냅니다 : &lt;code&gt;'0.2s ease-in'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc884840849b57fddf09b1e9436fe58fac3fb2a8" translate="yes" xml:space="preserve">
          <source>Start typing in the &lt;strong&gt;Name&lt;/strong&gt; input box.</source>
          <target state="translated">&lt;strong&gt;이름&lt;/strong&gt; 입력 상자에 입력을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="ce250aa26d33d7c5c114a7c6c755abad38181cf7" translate="yes" xml:space="preserve">
          <source>Start with &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; belonging to &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; and end with &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">로 시작하는 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 에 속하는 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 와 끝 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d59ad7f5c13a049bdc4c7c7f8907c7aa1f3bc02" translate="yes" xml:space="preserve">
          <source>Start with the production build:</source>
          <target state="translated">프로덕션 빌드로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="53d44630589c13031529640133eaedbc02bcff93" translate="yes" xml:space="preserve">
          <source>Starting with version 9.x of the &lt;a href=&quot;https://github.com/ng-packagr/ng-packagr/blob/master/README.md&quot;&gt;ng-packagr&lt;/a&gt; tool, you can configure the tool to automatically copy assets into your library package as part of the build process. You can use this feature when your library needs to publish optional theming files, Sass mixins, or documentation (like a changelog).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ng-packagr/ng-packagr/blob/master/README.md&quot;&gt;ng-packagr&lt;/a&gt; 도구 버전 9.x부터 빌드 프로세스의 일부로 자산을 라이브러리 패키지에 자동으로 복사하도록 도구를 구성 할 수 있습니다. 라이브러리가 선택적 테마 파일, Sass 믹스 인 또는 문서 (변경 로그 등)를 게시해야 할 때이 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1fb982ed171075bc061a33df44eef72f2d297ee" translate="yes" xml:space="preserve">
          <source>Starts a reusable animation that is created using the &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 함수를 사용하여 만든 재사용 가능한 애니메이션을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="b05ed52a184ffa9eda578912108330e7d07be5d4" translate="yes" xml:space="preserve">
          <source>Starts a reusable animation that is created using the &lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 함수를 사용하여 만든 재사용 가능한 애니메이션을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="6369528d29c83929c81fac4e7cf94669d79c139a" translate="yes" xml:space="preserve">
          <source>State-change functions</source>
          <target state="translated">상태 변경 기능</target>
        </trans-unit>
        <trans-unit id="8ff5a026360d2098037ad7db2df57536e397aac4" translate="yes" xml:space="preserve">
          <source>StateKey</source>
          <target state="translated">StateKey</target>
        </trans-unit>
        <trans-unit id="5d710413c45bc52e313ef389d6c972d2731bdeaf" translate="yes" xml:space="preserve">
          <source>Statement best practices</source>
          <target state="translated">성명 모범 사례</target>
        </trans-unit>
        <trans-unit id="41c67fd6a75ac70825dab8295a0f3c1da04d6958" translate="yes" xml:space="preserve">
          <source>Statement context</source>
          <target state="translated">진술 문맥</target>
        </trans-unit>
        <trans-unit id="32da3f61c0c194f415c6c857f58dd76daedf1e04" translate="yes" xml:space="preserve">
          <source>Statement guidelines</source>
          <target state="translated">명세서 지침</target>
        </trans-unit>
        <trans-unit id="ea3359c5b7b75f5e302fc470c725d7f9f42d3db8" translate="yes" xml:space="preserve">
          <source>Statements can refer only to what's in the statement context, which is typically the component instance. For example, &lt;code&gt;deleteHero()&lt;/code&gt; of &lt;code&gt;(click)=&quot;deleteHero()&quot;&lt;/code&gt; is a method of the component in the following snippet.</source>
          <target state="translated">문은 일반적으로 구성 요소 인스턴스 인 문 컨텍스트의 내용 만 참조 할 수 있습니다. 예를 들어 &lt;code&gt;deleteHero()&lt;/code&gt; 의 &lt;code&gt;(click)=&quot;deleteHero()&quot;&lt;/code&gt; 다음 코드의 구성 방법이다.</target>
        </trans-unit>
        <trans-unit id="5bda550203ce990230acde72575f07b909a31ee5" translate="yes" xml:space="preserve">
          <source>Statements have a context&amp;mdash;a particular part of the application to which the statement belongs.</source>
          <target state="translated">문에는 문이 속한 응용 프로그램의 특정 부분 인 컨텍스트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="05b7c4db9ffd154c34751be6979e1586dfeb5e3d" translate="yes" xml:space="preserve">
          <source>Static attributes set directly in the HTML of a template will override any conflicting host attributes set by directives or components (previously, static host attributes set by directives / components would override static template attributes if conflicting).</source>
          <target state="translated">템플릿의 HTML에 직접 설정된 정적 속성은 지시문 또는 구성 요소에 의해 설정된 충돌 호스트 속성을 재정의합니다 (이전에는 지시문 / 구성 요소에 의해 설정된 정적 호스트 속성이 충돌하는 경우 정적 템플릿 속성을 재정의 함).</target>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="translated">정적 메소드</target>
        </trans-unit>
        <trans-unit id="9fd2157337067beb4c27d4c77db4f118810de715" translate="yes" xml:space="preserve">
          <source>Static methods implemented by the &lt;code&gt;TestBedViewEngine&lt;/code&gt; and &lt;code&gt;TestBedRender3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TestBedViewEngine&lt;/code&gt; 및 &lt;code&gt;TestBedRender3&lt;/code&gt; 에 의해 구현 된 정적 메소드</target>
        </trans-unit>
        <trans-unit id="f693c8e57f56be518aade11355181f9181d63004" translate="yes" xml:space="preserve">
          <source>Static properties</source>
          <target state="translated">정적 속성</target>
        </trans-unit>
        <trans-unit id="4d1fa18513355c13c4b84cba89268f806425402e" translate="yes" xml:space="preserve">
          <source>StaticClassProvider</source>
          <target state="translated">StaticClassProvider</target>
        </trans-unit>
        <trans-unit id="419c921fa3db1c4990ca792260ce2f73c78c574d" translate="yes" xml:space="preserve">
          <source>StaticClassSansProvider</source>
          <target state="translated">StaticClassSansProvider</target>
        </trans-unit>
        <trans-unit id="f9ae247c7028a2e77634367f12d2edb442752ade" translate="yes" xml:space="preserve">
          <source>StaticProvider</source>
          <target state="translated">StaticProvider</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
