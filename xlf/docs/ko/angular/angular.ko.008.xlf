<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="bc3538d0e01fab1a96b015d871befd4a7a613a0f" translate="yes" xml:space="preserve">
          <source>Example 1: an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;</source>
          <target state="translated">예 1 : &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">실시 예 2</target>
        </trans-unit>
        <trans-unit id="c208d29c3a351702191cb12e42073c3aa92627a0" translate="yes" xml:space="preserve">
          <source>Example 2: a disabled button</source>
          <target state="translated">예 2 : 비활성화 된 버튼</target>
        </trans-unit>
        <trans-unit id="115e72d033a5d29cdf0b22ab6d79b83ce19f039c" translate="yes" xml:space="preserve">
          <source>Example Input Values</source>
          <target state="translated">입력 값 예</target>
        </trans-unit>
        <trans-unit id="f190c0373d03310809073d92f082eb8d1d07c49f" translate="yes" xml:space="preserve">
          <source>Example URLs:</source>
          <target state="translated">URL 예 :</target>
        </trans-unit>
        <trans-unit id="64675219f6669783f53ac9c46b6042ac0e46004c" translate="yes" xml:space="preserve">
          <source>Example Value</source>
          <target state="translated">예제 값</target>
        </trans-unit>
        <trans-unit id="7039ac7707efb335a98c12c3a2c84c943ba9b684" translate="yes" xml:space="preserve">
          <source>Example app structure</source>
          <target state="translated">앱 구조 예</target>
        </trans-unit>
        <trans-unit id="6dbe7c12acff1a0a7d7daadf46e173b960486b3e" translate="yes" xml:space="preserve">
          <source>Example applications</source>
          <target state="translated">예제 애플리케이션</target>
        </trans-unit>
        <trans-unit id="23197357f47cd7e9bcf255c1cd16f93e563c65f5" translate="yes" xml:space="preserve">
          <source>Example as TypeScript Decorator</source>
          <target state="translated">TypeScript Decorator와 같은 예</target>
        </trans-unit>
        <trans-unit id="c96a08d329d79a2b34cde16eedb321e8c9af503a" translate="yes" xml:space="preserve">
          <source>Example of bad code</source>
          <target state="translated">잘못된 코드의 예</target>
        </trans-unit>
        <trans-unit id="0edfaaea0352e467e77e2d8e3cc50c76e32a8be0" translate="yes" xml:space="preserve">
          <source>Example patterns:</source>
          <target state="translated">패턴 예 :</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="003cb62ea56f8a36ffee819f126d05f79c0725ab" translate="yes" xml:space="preserve">
          <source>Example: A Popup Service</source>
          <target state="translated">예 : 팝업 서비스</target>
        </trans-unit>
        <trans-unit id="09d0ce43ac10b8ef3a0e2a262cbbd56d1d6de622" translate="yes" xml:space="preserve">
          <source>Example: Applying two formats by chaining pipes</source>
          <target state="translated">예 : 파이프를 연결하여 두 가지 형식 적용</target>
        </trans-unit>
        <trans-unit id="5341714c149febad292004a1083fa91109f79478" translate="yes" xml:space="preserve">
          <source>Example: Formatting a date</source>
          <target state="translated">예 : 날짜 형식 지정</target>
        </trans-unit>
        <trans-unit id="8387cef7fab899dea39564e70e1b77a58bdb770e" translate="yes" xml:space="preserve">
          <source>Example: Transforming a value exponentially</source>
          <target state="translated">예 : 값을 기하 급수적으로 변환</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="8a5c84373e05e765edba8087863e2d37b82fce37" translate="yes" xml:space="preserve">
          <source>Examples are given in &lt;code&gt;en-US&lt;/code&gt; locale.</source>
          <target state="translated">예는 &lt;code&gt;en-US&lt;/code&gt; 로켈로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1a7d33f1e6ba692996c2f56fc305909ff9aba274" translate="yes" xml:space="preserve">
          <source>Examples of such scoped &lt;code&gt;HeroService&lt;/code&gt; singletons appear throughout the accompanying sample code, including &lt;code&gt;HeroBiosComponent&lt;/code&gt;, &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt;, and &lt;code&gt;HeroesBaseComponent&lt;/code&gt;. Each of these components has its own &lt;code&gt;HeroService&lt;/code&gt; instance managing its own independent collection of heroes.</source>
          <target state="translated">범위가 지정된 &lt;code&gt;HeroService&lt;/code&gt; 싱글 톤의 예는 &lt;code&gt;HeroBiosComponent&lt;/code&gt; , &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; 및 &lt;code&gt;HeroesBaseComponent&lt;/code&gt; 를 포함하여 샘플 코드 전체에 나타납니다 . 이러한 각 구성 요소에는 자체 독립적 인 영웅 모음을 관리하는 자체 &lt;code&gt;HeroService&lt;/code&gt; 인스턴스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="838e028f3df9fbbcfff682bd27b456678e438def" translate="yes" xml:space="preserve">
          <source>Execute specs whose names match the pattern, which is internally compiled to a RegExp.</source>
          <target state="translated">내부적으로 RegExp로 컴파일 된 패턴과 이름이 일치하는 사양을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3f48849cd5523c2b69943155168b9778d339d47f" translate="yes" xml:space="preserve">
          <source>Executes a queried inner animation element within an animation sequence.</source>
          <target state="translated">애니메이션 시퀀스 내에서 쿼리 된 내부 애니메이션 요소를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="61fe7283501d71d99c4ec0fd7a0535276f539aee" translate="yes" xml:space="preserve">
          <source>Executes the &lt;code&gt;fn&lt;/code&gt; function synchronously in Angular's parent zone and returns value returned by the function.</source>
          <target state="translated">Angular의 부모 영역에서 &lt;code&gt;fn&lt;/code&gt; 함수를 동 기적으로 실행하고 함수에서 반환 한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c46f1081e2a78d1668459efc5a4bfbdd070dbc68" translate="yes" xml:space="preserve">
          <source>Executes the &lt;code&gt;fn&lt;/code&gt; function synchronously within the Angular zone and returns value returned by the function.</source>
          <target state="translated">각도 영역 내 에서 &lt;code&gt;fn&lt;/code&gt; 함수를 동 기적으로 실행하고 함수가 반환 한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d5ccdb0421f01b4d923f1b0285c7aef4a7e41120" translate="yes" xml:space="preserve">
          <source>Executes the &lt;code&gt;fn&lt;/code&gt; function synchronously within the Angular zone as a task and returns value returned by the function.</source>
          <target state="translated">Angular 영역 내 에서 &lt;code&gt;fn&lt;/code&gt; 함수를 작업으로 동 기적으로 실행하고 함수에서 반환 한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="14cc91675585ad5953e8dc0628dacd93df3a1453" translate="yes" xml:space="preserve">
          <source>Existing &lt;code&gt;token&lt;/code&gt; to return. (Equivalent to &lt;code&gt;injector.get(&lt;a href=&quot;existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;)&lt;/code&gt;)</source>
          <target state="translated">기존 &lt;code&gt;token&lt;/code&gt; 을 반환합니다. ( &lt;code&gt;injector.get(&lt;a href=&quot;existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ef39195d79100e0a275c9f6e2f9223f4fc09340c" translate="yes" xml:space="preserve">
          <source>Existing &lt;code&gt;token&lt;/code&gt; to return. (Equivalent to &lt;code&gt;injector.get(useExisting)&lt;/code&gt;)</source>
          <target state="translated">반환 할 기존 &lt;code&gt;token&lt;/code&gt; 입니다. ( &lt;code&gt;injector.get(useExisting)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="320f39c06ef464dd0024c09f761558945533dc7d" translate="yes" xml:space="preserve">
          <source>ExistingProvider</source>
          <target state="translated">ExistingProvider</target>
        </trans-unit>
        <trans-unit id="cc2dec566751219059d9f8763a354f8762f0a111" translate="yes" xml:space="preserve">
          <source>ExistingSansProvider</source>
          <target state="translated">ExistingSansProvider</target>
        </trans-unit>
        <trans-unit id="4c4dcf4591979506d035a6ac9394f2530bb0a00e" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given URL, and return its mock.</source>
          <target state="translated">주어진 URL과 일치하는 단일 요청이 작성되어 모의 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="09745b035a7bff7b32ffdade443909f9f0114f0d" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given condition, and return its mock.</source>
          <target state="translated">주어진 조건과 일치하는 단일 요청이 이루어졌으며 모의를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a6eb24a59dddd06afae77ef7bb648d8870f43d27" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given parameters, and return its mock.</source>
          <target state="translated">주어진 매개 변수와 일치하는 단일 요청이 이루어졌으며 모의 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0b87e12001cb43938518503996b08243ca0cf034" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given predicate function, and return its mock.</source>
          <target state="translated">주어진 술어 함수와 일치하는 단일 요청이 작성되었으며 모의를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f422cf2a93648f51c72b81baaadce94d4f9a23f5" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given URL.</source>
          <target state="translated">주어진 URL과 일치하는 요청이 없을 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="e8d12406299d4ed82875bbb2f88105f188e80475" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given condition.</source>
          <target state="translated">주어진 조건과 일치하는 요청이 없을 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="ba3b284a816662d49b2560b24229c09966daf2d1" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given parameters.</source>
          <target state="translated">주어진 매개 변수와 일치하는 요청이 작성되지 않았을 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="4efe1b49671948d5bd952bb7856f5548f402044a" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given predicate function.</source>
          <target state="translated">주어진 술어 함수와 일치하는 요청이 작성되지 않았을 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="c36ea39d115e54d57c3e4f6133d6e9fe7be806a9" translate="yes" xml:space="preserve">
          <source>Expecting and answering requests</source>
          <target state="translated">요청 예상 및 응답</target>
        </trans-unit>
        <trans-unit id="0d113a5dec63637c0ea24bb949a1452cadd75bd8" translate="yes" xml:space="preserve">
          <source>Experienced developers agree that components should be cheap and safe to construct.</source>
          <target state="translated">숙련 된 개발자는 구성 요소를 저렴하고 안전하게 구성 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6d79bd8554e5a6e5e29f39873b7262a75b37e699" translate="yes" xml:space="preserve">
          <source>Experiment with these possibilities at your leisure.</source>
          <target state="translated">여가 시간에 이러한 가능성을 시험해보십시오.</target>
        </trans-unit>
        <trans-unit id="3ce628bd2e4cc1e453d4ba8b9ab47f34a24d260e" translate="yes" xml:space="preserve">
          <source>Explicit, created in component class</source>
          <target state="translated">명시 적, 구성 요소 클래스에서 생성됨</target>
        </trans-unit>
        <trans-unit id="80c09ed1f416c30ad57128663f3768f47a74d272" translate="yes" xml:space="preserve">
          <source>Explicitly call &lt;a href=&quot;../api/core/changedetectorref#detectchanges&quot;&gt;&lt;code&gt;ChangeDetectorRef.detectChanges()&lt;/code&gt;&lt;/a&gt; to force the update.</source>
          <target state="translated">강제로 업데이트하려면 &lt;a href=&quot;../api/core/changedetectorref#detectchanges&quot;&gt; &lt;code&gt;ChangeDetectorRef.detectChanges()&lt;/code&gt; &lt;/a&gt; 를 명시 적으로 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="151cc3279d56b07805e6451e1fc2e21759b64665" translate="yes" xml:space="preserve">
          <source>Explore Angular's inventory of built-in pipes in the &lt;a href=&quot;api?type=pipe&quot;&gt;API Reference&lt;/a&gt;. Try writing a custom pipe and perhaps contributing it to the community.</source>
          <target state="translated">&lt;a href=&quot;api?type=pipe&quot;&gt;API Reference&lt;/a&gt; 에서 Angular의 내장 파이프 인벤토리를 살펴보십시오 . 사용자 정의 파이프를 작성하여 커뮤니티에 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="0b142311de0506d50c14f42d89ab5fba534af5e4" translate="yes" xml:space="preserve">
          <source>Explore the options and combinations on your own.</source>
          <target state="translated">직접 옵션과 조합을 탐색하십시오.</target>
        </trans-unit>
        <trans-unit id="8b8bee1bb624226f4402d695d2a30ce6ea26ede4" translate="yes" xml:space="preserve">
          <source>Explore the translated example app</source>
          <target state="translated">번역 된 예제 앱 살펴보기</target>
        </trans-unit>
        <trans-unit id="e2f8ba18099b12842f93d8420df1de465b8b78d8" translate="yes" xml:space="preserve">
          <source>Exponential backoff</source>
          <target state="translated">지수 백 오프</target>
        </trans-unit>
        <trans-unit id="4e81c81e62d9821e35d6968289a5da62123f95a5" translate="yes" xml:space="preserve">
          <source>Exponential backoff is a technique in which you retry an API after failure, making the time in between retries longer after each consecutive failure, with a maximum number of retries after which the request is considered to have failed. This can be quite complex to implement with promises and other methods of tracking AJAX calls. With observables, it is very easy:</source>
          <target state="translated">지수 백 오프는 실패 후 API를 다시 시도하여 요청이 실패한 것으로 간주되는 최대 재시도 횟수와 함께 각 연속 실패 후 재시도 시간을 길게하는 기술입니다. 이것은 AJAX 호출을 추적하는 약속 및 기타 방법으로 구현하기가 매우 복잡 할 수 있습니다. 관찰 가능 항목을 사용하면 매우 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="b2d600564a4eeee05a74ffc3d3b30646d2efbd86" translate="yes" xml:space="preserve">
          <source>Export &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable&lt;/a&gt; classes that components in &lt;em&gt;other&lt;/em&gt; NgModules are able to reference in their templates. These are your &lt;em&gt;public&lt;/em&gt; classes. If you don't export a declarable class, it stays &lt;em&gt;private&lt;/em&gt;, visible only to other components declared in this NgModule.</source>
          <target state="translated">내보내기 &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;으로 신고&lt;/a&gt; 구성 요소 것을 클래스를 &lt;em&gt;다른&lt;/em&gt; NgModules 자신의 템플릿에서 참조 할 수 있습니다. 이들은 당신의 &lt;em&gt;공개&lt;/em&gt; 수업입니다. 선언 가능한 클래스를 내 보내지 않으면 이 NgModule에 선언 된 다른 구성 요소에서만 볼 수있는 &lt;em&gt;private로&lt;/em&gt; 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3f8b89ece198f478a08332010ebd982d8d15de3" translate="yes" xml:space="preserve">
          <source>Export it from the file where you wrote it.</source>
          <target state="translated">작성한 파일에서 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="01d9a0ac1caef5b7463f6a6cc45c04c774154790" translate="yes" xml:space="preserve">
          <source>Exported declarations are the module's &lt;em&gt;public API&lt;/em&gt;. A component in another module can &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;use&lt;/a&gt;&lt;em&gt;this&lt;/em&gt; module's &lt;code&gt;UserComponent&lt;/code&gt; if it imports this module and this module exports &lt;code&gt;UserComponent&lt;/code&gt;.</source>
          <target state="translated">내 보낸 선언은 모듈의 &lt;em&gt;공용 API&lt;/em&gt; 입니다. 다른 모듈의 구성 요소는 수 &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;사용 &lt;/a&gt;&lt;em&gt;이&lt;/em&gt; 모듈의 &lt;code&gt;UserComponent&lt;/code&gt; 을 은이 모듈이 모듈 수출을 수입하는 경우 &lt;code&gt;UserComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="9e7c4c507448f86f52a7f79a35434aa602954321" translate="yes" xml:space="preserve">
          <source>Exports &lt;code&gt;&lt;a href=&quot;../browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; with additional &lt;a href=&quot;../../../guide/glossary#provider&quot;&gt;dependency-injection providers&lt;/a&gt; for use with animations. See &lt;a href=&quot;../../../guide/animations&quot;&gt;Animations&lt;/a&gt;.</source>
          <target state="translated">수출은 &lt;code&gt;&lt;a href=&quot;../browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 추가로 &lt;a href=&quot;../../../guide/glossary#provider&quot;&gt;의존성 주입 제공자&lt;/a&gt; 애니메이션과 함께 사용하기에 적합합니다. &lt;a href=&quot;../../../guide/animations&quot;&gt;애니메이션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b48d98d31db3b67ff452be710bcaa0679dddb978" translate="yes" xml:space="preserve">
          <source>Exports &lt;code&gt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; with additional &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;dependency-injection providers&lt;/a&gt; for use with animations. See &lt;a href=&quot;../../guide/animations&quot;&gt;Animations&lt;/a&gt;.</source>
          <target state="translated">수출은 &lt;code&gt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 추가로 &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;의존성 주입 제공자&lt;/a&gt; 애니메이션과 함께 사용하기에 적합합니다. &lt;a href=&quot;../../guide/animations&quot;&gt;애니메이션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="316709e9e82751f5c087b35a27f43016b8c09df7" translate="yes" xml:space="preserve">
          <source>Exports a constant named &lt;code&gt;slideInAnimation&lt;/code&gt; set to an animation trigger named &lt;code&gt;routeAnimation&lt;/code&gt;.</source>
          <target state="translated">이름이 &lt;code&gt;slideInAnimation&lt;/code&gt; 인 상수를 routeAnimation 이라는 애니메이션 트리거로 내 &lt;code&gt;routeAnimation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41502da065d88fa29c02515549f2ef881718d2ef" translate="yes" xml:space="preserve">
          <source>Exports a constant named &lt;code&gt;slideInAnimation&lt;/code&gt; set to an animation trigger named &lt;em&gt;&lt;code&gt;routeAnimation&lt;/code&gt;&lt;/em&gt;;</source>
          <target state="translated">&lt;code&gt;slideInAnimation&lt;/code&gt; 세트 의 상수를 routeAnimation 이라는 애니메이션 트리거로 내 &lt;em&gt; &lt;code&gt;routeAnimation&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b3015612e62943ffe8d3d9bd16015f003caf27a4" translate="yes" xml:space="preserve">
          <source>Exports all the basic Angular directives and pipes, such as &lt;code&gt;&lt;a href=&quot;common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;common/decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt;, and so on. Re-exported by &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;common/decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt; 등과 같은 모든 기본 각도 지시문 및 파이프를 내 보냅니다 . 에 의해 다시는-수출 &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 루트에 자동으로 포함되어, &lt;code&gt;AppModule&lt;/code&gt; 당신이 CLI와 새로운 응용 프로그램 만들 때 &lt;code&gt;new&lt;/code&gt; 명령 .</target>
        </trans-unit>
        <trans-unit id="2694c141ab9c7bb5e48066c90e9cad70c5d09313" translate="yes" xml:space="preserve">
          <source>Exports all the basic Angular directives and pipes, such as &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt;, and so on. Re-exported by &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt; 등과 같은 모든 기본 각도 지시문 및 파이프를 내 보냅니다 . CLI &lt;code&gt;new&lt;/code&gt; 명령 으로 새 앱을 만들 때 루트 &lt;code&gt;AppModule&lt;/code&gt; 에 자동으로 포함 되는 &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 으로 다시 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="6795e3188c42a45041eef8aa7e1f578ba6e66b5a" translate="yes" xml:space="preserve">
          <source>Exports required infrastructure for all Angular apps. Included by default in all Angular apps created with the CLI &lt;code&gt;new&lt;/code&gt; command. Re-exports &lt;code&gt;&lt;a href=&quot;../common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt;, making their exports and providers available to all apps.</source>
          <target state="translated">모든 Angular 앱에 필요한 인프라를 내 보냅니다. CLI &lt;code&gt;new&lt;/code&gt; 명령으로 생성 된 모든 Angular 앱에 기본적으로 포함됩니다 . &lt;code&gt;&lt;a href=&quot;../common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt; 을 다시 내 보내서 모든 앱에서 내보내기 및 공급자를 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="1658cf2c7cfb18562b2e6455248a43094677b401" translate="yes" xml:space="preserve">
          <source>Exports required infrastructure for all Angular apps. Included by default in all Angular apps created with the CLI &lt;code&gt;new&lt;/code&gt; command. Re-exports &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt;, making their exports and providers available to all apps.</source>
          <target state="translated">모든 Angular 앱에 필요한 인프라를 내 보냅니다. CLI &lt;code&gt;new&lt;/code&gt; 명령으로 생성 된 모든 Angular 앱에 기본적으로 포함됩니다 . &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt; 을 다시 내 보내서 모든 앱에서 내보내기 및 공급자를 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="f2ba8fed8d15900671cce4edf095bd055d04eaf8" translate="yes" xml:space="preserve">
          <source>Exports the required infrastructure and directives for reactive forms, making them available for import by NgModules that import this module.</source>
          <target state="translated">반응 양식에 필요한 인프라와 지시문을 내보내이 모듈을 가져 오는 NgModules가 가져올 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="cf940b173d6f27a08c3413c736e512605c260d5a" translate="yes" xml:space="preserve">
          <source>Exports the required providers and directives for template-driven forms, making them available for import by NgModules that import this module.</source>
          <target state="translated">템플릿 기반 양식에 필요한 공급자 및 지시문을 내보내이 모듈을 가져 오는 NgModules에서 가져올 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="54ca0296387f3de05c9edda3ac42e8892fc955b4" translate="yes" xml:space="preserve">
          <source>Exposes a set of functions in the global namespace which are useful for debugging the current state of your application. These functions are exposed via the global &lt;code&gt;ng&lt;/code&gt; &quot;namespace&quot; variable automatically when you import from &lt;code&gt;@angular/core&lt;/code&gt; and run your application in development mode. These functions are not exposed when the application runs in a production mode.</source>
          <target state="translated">애플리케이션의 현재 상태를 디버깅하는 데 유용한 전역 네임 스페이스의 함수 집합을 노출합니다. 이러한 함수는 &lt;code&gt;@angular/core&lt;/code&gt; 에서 가져오고 개발 모드에서 애플리케이션을 실행할 때 전역 &lt;code&gt;ng&lt;/code&gt; &quot;네임 스페이스&quot;변수를 통해 자동으로 노출 됩니다. 이러한 기능은 애플리케이션이 프로덕션 모드에서 실행될 때 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a41b115841e5fbc7cf1b18afb3b83dcc3891f13" translate="yes" xml:space="preserve">
          <source>Expression binding</source>
          <target state="translated">발현 결합</target>
        </trans-unit>
        <trans-unit id="1c2f7d3b6d050a5090df922638bfad2dec21b4cc" translate="yes" xml:space="preserve">
          <source>Expression context</source>
          <target state="translated">표현 문맥</target>
        </trans-unit>
        <trans-unit id="251f6bb4517daac85b87bb0755a86fb3c179c9de" translate="yes" xml:space="preserve">
          <source>Expression form not supported</source>
          <target state="translated">지원되지 않는 표현 양식</target>
        </trans-unit>
        <trans-unit id="7ea5c0a470ed5a320359df1794918f299c3b7f04" translate="yes" xml:space="preserve">
          <source>Expression guidelines</source>
          <target state="translated">표현 지침</target>
        </trans-unit>
        <trans-unit id="5be453a082738df0fbb95e05d3e768fb61344326" translate="yes" xml:space="preserve">
          <source>Expression syntax limitations</source>
          <target state="translated">식 구문 제한</target>
        </trans-unit>
        <trans-unit id="7b223b9fc21308f80b1f8910f97dd7bff5c30ac0" translate="yes" xml:space="preserve">
          <source>Expression: &lt;code&gt;&amp;lt;comp [name]=&quot;username&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">식 : &lt;code&gt;&amp;lt;comp [name]=&quot;username&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67424e47eeb543e15096b4627ceaf8f617ded945" translate="yes" xml:space="preserve">
          <source>Expressions should finish quickly or the user experience may drag, especially on slower devices. Consider caching values when their computation is expensive.</source>
          <target state="translated">식이 빨리 끝나거나 특히 느린 장치에서 사용자 환경이 드래그 될 수 있습니다. 계산이 비쌀 때 값을 캐싱하는 것을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="655f8acf112128c4c1e62e2d49df9d368e294885" translate="yes" xml:space="preserve">
          <source>Extend the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; tag with a template reference variable that you can use to access the input box's Angular control from within the template. In the example, the variable is &lt;code&gt;#name=&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">템플릿 내에서 입력 상자의 각도 컨트롤에 액세스하는 데 사용할 수있는 템플릿 참조 변수로 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 태그를 확장합니다 . 이 예에서 변수는 &lt;code&gt;#name=&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4e67701453b98c6aa13406f479207d8dbab6eeea" translate="yes" xml:space="preserve">
          <source>Extend the &lt;code&gt;AuthGuard&lt;/code&gt; to protect when navigating between the &lt;code&gt;admin&lt;/code&gt; routes. Open &lt;code&gt;auth.guard.ts&lt;/code&gt; and add the &lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt; interface to the imported tokens from the router package.</source>
          <target state="translated">&lt;code&gt;admin&lt;/code&gt; 경로 사이를 탐색 할 때 보호 하도록 &lt;code&gt;AuthGuard&lt;/code&gt; 를 확장하십시오 . 열기 &lt;code&gt;auth.guard.ts&lt;/code&gt; 과 추가 &lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt; 을 라우터 패키지에서 가져온 토큰 인터페이스를.</target>
        </trans-unit>
        <trans-unit id="78dcf13062dfaf21c3fb6554eca5eab8f3b3813c" translate="yes" xml:space="preserve">
          <source>Extend this base class to implement custom rendering. By default, Angular renders a template into DOM. You can use custom rendering to intercept rendering calls, or to render to something other than DOM.</source>
          <target state="translated">이 기본 클래스를 확장하여 사용자 정의 렌더링을 구현하십시오. 기본적으로 Angular는 템플릿을 DOM으로 렌더링합니다. 사용자 정의 렌더링을 사용하여 렌더링 호출을 가로 채거나 DOM 이외의 것으로 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc92ca4b94985f880635d936b5ae59b3e5edc4c2" translate="yes" xml:space="preserve">
          <source>Extended interactions between a data service and the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; can be complex and difficult to mock with spies.</source>
          <target state="translated">데이터 서비스와 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 간의 확장 된 상호 작용은 복잡하고 스파이로 조롱하기가 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4b3d3f612756476d4263e5f1895884842554514" translate="yes" xml:space="preserve">
          <source>Extending Angular</source>
          <target state="translated">각도 확장</target>
        </trans-unit>
        <trans-unit id="8b211f855a434be61c61a4c8dba34349d28c811e" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; for Angular by adding the &lt;code&gt;&lt;a href=&quot;eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt; 메소드를 추가하여 &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; for Angular를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="b00704a4bc3bd1958bd32d42d165473bd4d96c45" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; for Angular by adding the &lt;code&gt;emit()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;emit()&lt;/code&gt; 메서드를 추가하여 Angular 용 &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="dfc0709b546a7a92e728bffa766a855dff062384" translate="yes" xml:space="preserve">
          <source>Extensibility through NgModule imports is a primary goal of the NgModule system. Merging NgModule providers into the application injector makes it easy for a module library to enrich the entire application with new services. By adding the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; once, every application component can make HTTP requests.</source>
          <target state="translated">NgModule 수입을 통한 확장 성은 NgModule 시스템의 주요 목표입니다. NgModule 제공자를 애플리케이션 인젝터에 병합하면 모듈 라이브러리가 새로운 서비스로 전체 애플리케이션을 쉽게 보강 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 을 한 번 추가하면 모든 응용 프로그램 구성 요소가 HTTP 요청을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="941a3f639b19a9b73ed93ee36698dac421a92539" translate="yes" xml:space="preserve">
          <source>External and global style files</source>
          <target state="translated">외부 및 전역 스타일 파일</target>
        </trans-unit>
        <trans-unit id="cd2719608556dde4078df78ee0be11633fc025a7" translate="yes" xml:space="preserve">
          <source>Extra HTML tags in i18n translations that are not present in the source template itself will be rendered as plain text (previously, these tags would render as HTML).</source>
          <target state="translated">소스 템플릿 자체에없는 i18n 번역의 추가 HTML 태그는 일반 텍스트로 렌더링됩니다 (이전에는 이러한 태그가 HTML로 렌더링 됨).</target>
        </trans-unit>
        <trans-unit id="c2dba996d324b0c203c96719673d909e6e8ef0d1" translate="yes" xml:space="preserve">
          <source>ExtraOptions</source>
          <target state="translated">ExtraOptions</target>
        </trans-unit>
        <trans-unit id="c497511fc2cd2096d641946b084c9ea21b6e36e7" translate="yes" xml:space="preserve">
          <source>Extract CSS from global styles into '.css' files instead of '.js'.</source>
          <target state="translated">전역 스타일에서 CSS를 '.js'대신 '.css'파일로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="f4c7ceadda503dc9b045dfbe183ee849d4cde2dd" translate="yes" xml:space="preserve">
          <source>Extract all licenses in a separate file.</source>
          <target state="translated">모든 라이센스를 별도의 파일로 추출하십시오.</target>
        </trans-unit>
        <trans-unit id="2d497a65ab08388cae16fc3633cb443f795a662b" translate="yes" xml:space="preserve">
          <source>Extract css from global styles into css files instead of js ones.</source>
          <target state="translated">전역 스타일에서 CSS를 CSS 대신 CSS 파일로 추출하십시오.</target>
        </trans-unit>
        <trans-unit id="edcdeca05b2685d5d99bdabc04cc42c9b1caa148" translate="yes" xml:space="preserve">
          <source>Extract templates and styles to their own files</source>
          <target state="translated">템플릿과 스타일을 자신의 파일로 추출</target>
        </trans-unit>
        <trans-unit id="fbf4a03e0810426f0735a9f354fd8e8fa7711591" translate="yes" xml:space="preserve">
          <source>Extract the &lt;code&gt;id&lt;/code&gt; from the route</source>
          <target state="translated">경로 에서 &lt;code&gt;id&lt;/code&gt; 를 추출</target>
        </trans-unit>
        <trans-unit id="264fdaa93431a7bc1ddb2c5f37762583f253762b" translate="yes" xml:space="preserve">
          <source>Extract the &lt;code&gt;id&lt;/code&gt; route parameter</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 경로 매개 변수 추출</target>
        </trans-unit>
        <trans-unit id="caa2c6130efe73ad6e3c198eabb749d7f8636289" translate="yes" xml:space="preserve">
          <source>Extract the source language file</source>
          <target state="translated">소스 언어 파일 추출</target>
        </trans-unit>
        <trans-unit id="71b1b86ebc85d12dee5fceed6512d0a9de6c0462" translate="yes" xml:space="preserve">
          <source>Extracting localizable text into a file that you can send out to be translated.</source>
          <target state="translated">현지화 가능한 텍스트를 파일로 추출하여 번역하기 위해 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07271f756965cd3fc145c36cc34b953de23f0be0" translate="yes" xml:space="preserve">
          <source>Extracts i18n messages from source code.</source>
          <target state="translated">소스 코드에서 i18n 메시지를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="27865d88125d0d3c86f80a0d8ec5973e323d2f1a" translate="yes" xml:space="preserve">
          <source>Extracts the part of the URL that should be handled by the router. The rest of the URL will remain untouched.</source>
          <target state="translated">라우터에서 처리해야하는 URL 부분을 추출합니다. 나머지 URL은 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9fb4f1d17ef878fbfbe96076658397ad86bd5264" translate="yes" xml:space="preserve">
          <source>FILES</source>
          <target state="translated">FILES</target>
        </trans-unit>
        <trans-unit id="5ec4d531411beddc087228583dbee8c24ec275c5" translate="yes" xml:space="preserve">
          <source>Facilitate web crawlers (SEO)</source>
          <target state="translated">웹 크롤러 촉진 (SEO)</target>
        </trans-unit>
        <trans-unit id="0cff306d02212a5fb8b4278c3cb5a0c5adaa8578" translate="yes" xml:space="preserve">
          <source>Facilitate web crawlers through &lt;a href=&quot;https://static.googleusercontent.com/media/www.google.com/en//webmasters/docs/search-engine-optimization-starter-guide.pdf&quot;&gt;search engine optimization (SEO)&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://static.googleusercontent.com/media/www.google.com/en//webmasters/docs/search-engine-optimization-starter-guide.pdf&quot;&gt;검색 엔진 최적화 (SEO)를&lt;/a&gt; 통한 웹 크롤러 촉진</target>
        </trans-unit>
        <trans-unit id="22360fe45691380a6abe3870500a10494004451a" translate="yes" xml:space="preserve">
          <source>Factory function which can return an instance of an object represented by a key.</source>
          <target state="translated">키로 표시되는 객체의 인스턴스를 반환 할 수있는 팩토리 함수입니다.</target>
        </trans-unit>
        <trans-unit id="9db5e3ce04fe9341654a228ff462554c1799f4b0" translate="yes" xml:space="preserve">
          <source>Factory functions must be exported, named functions. The AOT compiler does not support lambda expressions (&quot;arrow functions&quot;) for factory functions.</source>
          <target state="translated">팩토리 함수는 이름이 지정된 함수로 내 보내야합니다. AOT 컴파일러는 팩토리 함수에 대한 람다 식 ( &quot;화살표 함수&quot;)을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c3623fa8d663dbe5f5fc0902ec6339381d8c3a8" translate="yes" xml:space="preserve">
          <source>Factory method that returns an instance of the $locationShim</source>
          <target state="translated">$ locationShim의 인스턴스를 반환하는 팩토리 메소드</target>
        </trans-unit>
        <trans-unit id="3881c8ff14ca5b27a9e6003fc51568bda04676ec" translate="yes" xml:space="preserve">
          <source>Factory providers</source>
          <target state="translated">공장 공급자</target>
        </trans-unit>
        <trans-unit id="bd15eb5e476a7673ffd19497be46407f1482aeca" translate="yes" xml:space="preserve">
          <source>Factory providers: &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">팩토리 프로 바이더 : &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfe1c0bca89a9b0b5e57589aa7b665ef1d397915" translate="yes" xml:space="preserve">
          <source>Factory providers: &lt;code&gt;useFactory&lt;/code&gt;</source>
          <target state="translated">팩토리 공급자 : &lt;code&gt;useFactory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d28d31751c9ae2080733690359256390a562cf2d" translate="yes" xml:space="preserve">
          <source>Factory used to create new strategies for each NgElement instance.</source>
          <target state="translated">각 NgElement 인스턴스에 대해 새로운 전략을 만드는 데 사용되는 팩토리.</target>
        </trans-unit>
        <trans-unit id="57ed3e29bc0b10573d967d11e5e31aca1f76bac8" translate="yes" xml:space="preserve">
          <source>FactoryProvider</source>
          <target state="translated">FactoryProvider</target>
        </trans-unit>
        <trans-unit id="704269b7abb2943ffc9b1a4c538f6a50b5f6a9e3" translate="yes" xml:space="preserve">
          <source>FactorySansProvider</source>
          <target state="translated">FactorySansProvider</target>
        </trans-unit>
        <trans-unit id="140f278d5afda10341fae9ebc6cec13da6d7d5de" translate="yes" xml:space="preserve">
          <source>Fail-safe</source>
          <target state="translated">Fail-safe</target>
        </trans-unit>
        <trans-unit id="c771b9357d9ed785767364181303bab73d06c8a7" translate="yes" xml:space="preserve">
          <source>Failed requests can be retried easily.</source>
          <target state="translated">실패한 요청은 쉽게 재 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60e796c101570c158dc15bfc77cbfa969a98202a" translate="yes" xml:space="preserve">
          <source>Fallback configuration examples</source>
          <target state="translated">대체 구성 예</target>
        </trans-unit>
        <trans-unit id="8db6a2f1d3b7e19e518ffa8979d7ad15359af460" translate="yes" xml:space="preserve">
          <source>Fast</source>
          <target state="translated">Fast</target>
        </trans-unit>
        <trans-unit id="60c9c25d0ab3ef513b6c03ee0367410eadc6bb16" translate="yes" xml:space="preserve">
          <source>Faster apps by inlining critical styles in Universal applications</source>
          <target state="translated">유니버설 애플리케이션에 중요한 스타일을 삽입하여 더 빠른 앱</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="d15ce705a0760aa0d74e8b742b908052209ab42b" translate="yes" xml:space="preserve">
          <source>Feature (for routing)</source>
          <target state="translated">기능 (라우팅 용)</target>
        </trans-unit>
        <trans-unit id="e0e655b7b96f5679636a195d016f1315d474dbc2" translate="yes" xml:space="preserve">
          <source>Feature Module</source>
          <target state="translated">기능 모듈</target>
        </trans-unit>
        <trans-unit id="ae73d39983f27537395a45d0ca6a07cf131b0a2f" translate="yes" xml:space="preserve">
          <source>Feature Modules</source>
          <target state="translated">기능 모듈</target>
        </trans-unit>
        <trans-unit id="bb5acf03a7329b562675669cb070d3d9ad06b7fd" translate="yes" xml:space="preserve">
          <source>Feature area routes rarely (if ever) cross with routes of other features.</source>
          <target state="translated">피처 영역 경로는 다른 피처의 경로와 거의 교차하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="02f821fca6279d01d9f480f97f0900a9651fa152" translate="yes" xml:space="preserve">
          <source>Feature modules</source>
          <target state="translated">기능 모듈</target>
        </trans-unit>
        <trans-unit id="a38902e95440d30cb0d4dfb2fcfecf803cecd865" translate="yes" xml:space="preserve">
          <source>Feature modules are NgModules for the purpose of organizing code.</source>
          <target state="translated">기능 모듈은 코드 구성을위한 NgModules입니다.</target>
        </trans-unit>
        <trans-unit id="c8e5aeaa7dd1fd777c6a3b8e55cdf8ce15e9ca39" translate="yes" xml:space="preserve">
          <source>Feature modules are modules you create around specific application business domains, user workflows, and utility collections. They support your app by containing a particular feature, such as routes, services, widgets, etc. To conceptualize what a feature module might be in your app, consider that if you would put the files related to a certain functionality, like a search, in one folder, that the contents of that folder would be a feature module that you might call your &lt;code&gt;SearchModule&lt;/code&gt;. It would contain all of the components, routing, and templates that would make up the search functionality.</source>
          <target state="translated">기능 모듈은 특정 애플리케이션 비즈니스 도메인, 사용자 워크 플로우 및 유틸리티 콜렉션을 중심으로 작성하는 모듈입니다. 경로, 서비스, 위젯 등과 같은 특정 기능을 포함하여 앱을 지원합니다. 앱에서 기능 모듈이 무엇인지 개념화하려면 검색과 같은 특정 기능과 관련된 파일을 넣을 경우, 한 폴더에서 해당 폴더의 내용이 &lt;code&gt;SearchModule&lt;/code&gt; 을 호출 할 수있는 기능 모듈이됩니다. 됩니다. 검색 기능을 구성하는 모든 구성 요소, 라우팅 및 템플릿이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2d370eb3e0cb88f60b0ad36c32be6367b1bc12b1" translate="yes" xml:space="preserve">
          <source>Feature modules vs. root modules</source>
          <target state="translated">기능 모듈과 루트 모듈</target>
        </trans-unit>
        <trans-unit id="30d433e3dc5c7d9c3c2476cf88fcc2993919b275" translate="yes" xml:space="preserve">
          <source>Feature, AppModule</source>
          <target state="translated">기능, AppModule</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="7386694791e5d866f123cf883931b4babba599e3" translate="yes" xml:space="preserve">
          <source>Features and APIs that were deprecated in v6 or earlier are candidates for removal in version 9 or any later major version. For information about Angular's deprecation and removal practices, see &lt;a href=&quot;releases#deprecation-practices&quot;&gt;Angular Release Practices&lt;/a&gt;.</source>
          <target state="translated">v6 또는 이전 버전에서 더 이상 사용되지 않는 기능 및 API는 버전 9 이상의 주요 버전에서 제거 될 수 있습니다. Angular의 지원 중단 및 제거 방법에 대한 자세한 내용은 &lt;a href=&quot;releases#deprecation-practices&quot;&gt;Angular Release Practices를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f696c341a16b560bb35a009009cb86e21273954" translate="yes" xml:space="preserve">
          <source>Feb 06, 2020</source>
          <target state="translated">2020 년 2 월 06 일</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">Feedback</target>
        </trans-unit>
        <trans-unit id="09051c1f9086308637f6293f73473c42514dca6c" translate="yes" xml:space="preserve">
          <source>Feel free to unsubscribe anyway. It is harmless and never a bad practice.</source>
          <target state="translated">어쨌든 구독을 취소하십시오. 무해하고 결코 나쁜 습관이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d7b8f7b8afaa214c58f7a34291b2fd711807ee31" translate="yes" xml:space="preserve">
          <source>Fetch data before navigating</source>
          <target state="translated">탐색하기 전에 데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="d2a01ccdcf7f8842874a563f805737c9e9eccfb1" translate="yes" xml:space="preserve">
          <source>Field type</source>
          <target state="translated">필드 타입</target>
        </trans-unit>
        <trans-unit id="7bb1e1aab7ba791ae458f5de6bbd0ae6590c24f7" translate="yes" xml:space="preserve">
          <source>Fifth step of the Tour of Heroes example application. For more information, see &lt;a href=&quot;../tutorial/toh-pt5&quot;&gt;Add in-app navigation with routing&lt;/a&gt;.</source>
          <target state="translated">Tour of Heroes 예제 애플리케이션의 다섯 번째 단계입니다. 자세한 내용 &lt;a href=&quot;../tutorial/toh-pt5&quot;&gt;은 라우팅을 사용하여 인앱 탐색 추가를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a7bacddabcb51aadc74fbff493e38108014e9d5" translate="yes" xml:space="preserve">
          <source>Figure 1 shows how, in reactive forms, the form model is the source of truth; it provides the value and status of the form element at any given point in time, through the &lt;code&gt;[formControl]&lt;/code&gt; directive on the input element.</source>
          <target state="translated">그림 1은 반응 형에서 양식 모델이 어떻게 진실의 원천이되는지 보여줍니다. 입력 요소 의 &lt;code&gt;[formControl]&lt;/code&gt; 지시문을 통해 주어진 시점에서 양식 요소의 값과 상태를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="2aabcfc2668a910cfcd432d597ea7e5c171cf855" translate="yes" xml:space="preserve">
          <source>File Name</source>
          <target state="translated">파일 이름</target>
        </trans-unit>
        <trans-unit id="6e75764f6be72d64faaa7cd05889744083a1ffec" translate="yes" xml:space="preserve">
          <source>File Names</source>
          <target state="translated">파일 이름</target>
        </trans-unit>
        <trans-unit id="2d334eb4e2ffc4a7b13f835350407bcaeabdf12f" translate="yes" xml:space="preserve">
          <source>File structure conventions</source>
          <target state="translated">파일 구조 규칙</target>
        </trans-unit>
        <trans-unit id="af061a864642ff7ae1378bf154035b76878e7427" translate="yes" xml:space="preserve">
          <source>File structure, configuration, and dependencies</source>
          <target state="translated">파일 구조, 구성 및 종속성</target>
        </trans-unit>
        <trans-unit id="d8e22f8227ce02443a1edaaa12b696d7cbf01c92" translate="yes" xml:space="preserve">
          <source>File templates and snippets</source>
          <target state="translated">파일 템플릿 및 스 니펫</target>
        </trans-unit>
        <trans-unit id="063edefb4c2d1701a0ed78694d38ac8c815553ef" translate="yes" xml:space="preserve">
          <source>Files at the top level of &lt;code&gt;src/&lt;/code&gt; support testing and running your application. Subfolders contain the application source and application-specific configuration.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; 의 최상위 레벨에있는 파일은 응용 프로그램 테스트 및 실행을 지원합니다. 하위 폴더에는 응용 프로그램 소스 및 응용 프로그램 별 구성이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2581c717d3705e36d5ae42648104d74ef10e9967" translate="yes" xml:space="preserve">
          <source>Files in that folder, such as &lt;code&gt;src/style-paths/_variables.scss&lt;/code&gt;, can be imported from anywhere in your project without the need for a relative path:</source>
          <target state="translated">해당 폴더의 파일 (예 : &lt;code&gt;src/style-paths/_variables.scss&lt;/code&gt; )을 상대 경로없이 프로젝트의 어느 곳에서나 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6230bbabc49370876e25014799db0c6c42172a85" translate="yes" xml:space="preserve">
          <source>Files inside &lt;code&gt;src/&lt;/code&gt; &quot;belong&quot; to your app. Add new Typescript, HTML and CSS files inside the &lt;code&gt;src/&lt;/code&gt; directory, most of them inside &lt;code&gt;src/app&lt;/code&gt;, unless told to do otherwise.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; 내부의 파일이 앱에 &quot;포함&quot;됩니다. 내부에 새로운 타이프 라이터, HTML 및 CSS 파일을 추가 &lt;code&gt;src/&lt;/code&gt; 내부 디렉토리 대부분을 &lt;code&gt;src/app&lt;/code&gt; 달리 할 말하지 않는 한,.</target>
        </trans-unit>
        <trans-unit id="93b86013967961de693f58926e9367d098d2436a" translate="yes" xml:space="preserve">
          <source>Files outside &lt;code&gt;src/&lt;/code&gt; concern building, deploying, and testing your app. They include configuration files and external dependencies.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; 외의 파일 은 앱을 빌드, 배포 및 테스트합니다. 구성 파일 및 외부 종속성이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8e7b503470f31aa4ba3e1eb4f0c06d4336be101d" translate="yes" xml:space="preserve">
          <source>Files to exclude from linting.</source>
          <target state="translated">보푸라기에서 제외 할 파일.</target>
        </trans-unit>
        <trans-unit id="eb8f826c74af1c4e8b030a3ffa7a58e9214f5b1a" translate="yes" xml:space="preserve">
          <source>Files to include in linting.</source>
          <target state="translated">보푸라기에 포함될 파일.</target>
        </trans-unit>
        <trans-unit id="cd9a5554356141790a82e86864449b480ac00a5e" translate="yes" xml:space="preserve">
          <source>Filipino</source>
          <target state="translated">Filipino</target>
        </trans-unit>
        <trans-unit id="e8f5b7dc089747a4157273eab897b73c8e3f284f" translate="yes" xml:space="preserve">
          <source>Filter animation example</source>
          <target state="translated">필터 애니메이션 예</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="9b0ee140852ac450ad6053b54418dea6211f531b" translate="yes" xml:space="preserve">
          <source>Filtering and especially sorting are expensive operations. The user experience can degrade severely for even moderate-sized lists when Angular calls these pipe methods many times per second. &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt; have often been abused in AngularJS apps, leading to complaints that Angular itself is slow. That charge is fair in the indirect sense that AngularJS prepared this performance trap by offering &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt; in the first place.</source>
          <target state="translated">필터링 및 특히 정렬은 비용이 많이 드는 작업입니다. Angular가 이러한 파이프 메서드를 초당 여러 번 호출하면 중간 크기의 목록에서도 사용자 환경이 심각하게 저하 될 수 있습니다. &lt;code&gt;filter&lt;/code&gt; 및 &lt;code&gt;orderBy&lt;/code&gt; 는 종종 AngularJS 앱에서 악용되어 Angular 자체가 느리다는 불만을 야기합니다. AngularJS가 &lt;code&gt;filter&lt;/code&gt; 와 &lt;code&gt;orderBy&lt;/code&gt; 를 처음 에 제공함으로써 이러한 성능 함정을 준비했다는 간접적 인 의미에서 이러한 책임은 공정합니다 .</target>
        </trans-unit>
        <trans-unit id="9e87f3431466c092c7183f3e099c67b1fc572eed" translate="yes" xml:space="preserve">
          <source>Filtering request URLs</source>
          <target state="translated">요청 URL 필터링</target>
        </trans-unit>
        <trans-unit id="9abf0754128b4f71327ecb4a6bd618b08cb61dcb" translate="yes" xml:space="preserve">
          <source>Filtering streams</source>
          <target state="translated">필터링 스트림</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="841d791c3a7198d7e6ba6397710459d775ed9052" translate="yes" xml:space="preserve">
          <source>Filters/pipes</source>
          <target state="translated">Filters/pipes</target>
        </trans-unit>
        <trans-unit id="06779fd25acbc603a9bd6406d87a230939736eea" translate="yes" xml:space="preserve">
          <source>Final ad banner</source>
          <target state="translated">최종 광고 배너</target>
        </trans-unit>
        <trans-unit id="b812ef08eb0be951600892b8e2bf336c9d92c93a" translate="yes" xml:space="preserve">
          <source>Final app</source>
          <target state="translated">최종 앱</target>
        </trans-unit>
        <trans-unit id="c95c48f17753442181cc82b3983b3c08478efff3" translate="yes" xml:space="preserve">
          <source>Final code review</source>
          <target state="translated">최종 코드 검토</target>
        </trans-unit>
        <trans-unit id="f46cb47bf9a0adc86c8ac38dba064e1d91fdcb22" translate="yes" xml:space="preserve">
          <source>Final setup and tests</source>
          <target state="translated">최종 설정 및 테스트</target>
        </trans-unit>
        <trans-unit id="ae46b591c407d86033096dfd0bcfee30c0486784" translate="yes" xml:space="preserve">
          <source>Final thoughts</source>
          <target state="translated">마지막 생각들</target>
        </trans-unit>
        <trans-unit id="4cef14b8b04cb3c50ec7df190ada6f1ad74b814c" translate="yes" xml:space="preserve">
          <source>Finally, bootstrap the &lt;code&gt;AppModule&lt;/code&gt; in &lt;code&gt;app/main.ts&lt;/code&gt;. This file has been configured as the application entrypoint in &lt;code&gt;systemjs.config.js&lt;/code&gt;, so it is already being loaded by the browser.</source>
          <target state="translated">마지막으로 &lt;code&gt;app/main.ts&lt;/code&gt; 에서 &lt;code&gt;AppModule&lt;/code&gt; 을 부트 스트랩하십시오 . 이 파일은 &lt;code&gt;systemjs.config.js&lt;/code&gt; 에서 애플리케이션 진입 점으로 구성 되었으므로 브라우저에서 이미로드 중입니다.</target>
        </trans-unit>
        <trans-unit id="8cefc5f3cabe0ea72b2a2073202c61d828592c62" translate="yes" xml:space="preserve">
          <source>Finally, display an instance of the form in the &lt;code&gt;AppComponent&lt;/code&gt; shell.</source>
          <target state="translated">마지막으로 &lt;code&gt;AppComponent&lt;/code&gt; 셸에 폼의 인스턴스를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="dd499b8ded3996759fb45ad0ef6860245639edf3" translate="yes" xml:space="preserve">
          <source>Finally, from &lt;code&gt;index.html&lt;/code&gt;, remove all references to AngularJS scripts and jQuery. When you're done, this is what it should look like:</source>
          <target state="translated">마지막으로 &lt;code&gt;index.html&lt;/code&gt; 에서 AngularJS 스크립트 및 jQuery에 대한 모든 참조를 제거하십시오. 완료되면 다음과 같이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5a0259c749fca2e9b33bd242db1b258ce408c109" translate="yes" xml:space="preserve">
          <source>Finally, kick off the whole process, by bootstraping your top level Angular &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">마지막으로 최상위 Angular &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 을 부트 스트랩하여 전체 프로세스를 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f5dcff9e3e40c297f9a2469f9d67baa2a5b4842" translate="yes" xml:space="preserve">
          <source>Finally, revisit both of the component tests when you switch to the Angular router. For the details component, provide a mock of Angular &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; object instead of using the AngularJS &lt;code&gt;$routeParams&lt;/code&gt;.</source>
          <target state="translated">마지막으로 Angular 라우터로 전환 할 때 두 구성 요소 테스트를 모두 다시 방문하십시오. 세부 사항 컴포넌트 의 경우 AngularJS &lt;code&gt;$routeParams&lt;/code&gt; 대신 Angular &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 오브젝트 의 모형을 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="4270c1b28f19e0dc4576a96f91d31a39cbc8c57d" translate="yes" xml:space="preserve">
          <source>Finally, the rule factory must return a rule.</source>
          <target state="translated">마지막으로 규칙 팩토리는 규칙을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3f3588d5a318073d8770cabe8b8356205db6a84" translate="yes" xml:space="preserve">
          <source>Finally, the server returns the rendered page to the client.</source>
          <target state="translated">마지막으로 서버는 렌더링 된 페이지를 클라이언트에 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1888b8a1c59ae1c4c42740747f0691eb7a40faaa" translate="yes" xml:space="preserve">
          <source>Finally, update the product list component to receive output from the product alerts component.</source>
          <target state="translated">마지막으로 제품 알림 구성 요소에서 출력을 받도록 제품 목록 구성 요소를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="d2307f9b99deb8de24da0878bde936ef2a11e271" translate="yes" xml:space="preserve">
          <source>Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.</source>
          <target state="translated">마지막으로 RouterLinkActive 지시문을 RouterLink의 상위 항목에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3e1d9bc243d1e42b5cab907612678c6d025611d" translate="yes" xml:space="preserve">
          <source>Finally, you can bind to a specific class name. Angular adds the class when the template expression evaluates to truthy. It removes the class when the expression is falsy.</source>
          <target state="translated">마지막으로 특정 클래스 이름에 바인딩 할 수 있습니다. Angular는 템플릿 표현식이 진실로 평가 될 때 클래스를 추가합니다. 표현식이 잘못된 경우 클래스를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="9f8e28a14842dd8a21fd4417e69d8929246f2eb3" translate="yes" xml:space="preserve">
          <source>Finally, you should add some npm scripts in &lt;code&gt;package.json&lt;/code&gt; to compile the TypeScript files to JavaScript (based on the &lt;code&gt;tsconfig.json&lt;/code&gt; configuration file):</source>
          <target state="translated">마지막으로, &lt;code&gt;tsconfig.json&lt;/code&gt; 구성 파일을 기반으로 TypeScript 파일을 JavaScript로 컴파일하려면 &lt;code&gt;package.json&lt;/code&gt; 에 일부 npm 스크립트를 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fc68dbba7d47e62aa4d6bec04a624372cc2d728b" translate="yes" xml:space="preserve">
          <source>Find a parent by its class interface</source>
          <target state="translated">클래스 인터페이스로 부모 찾기</target>
        </trans-unit>
        <trans-unit id="19572de919c02ddeb5074d287366d16ac151d4e6" translate="yes" xml:space="preserve">
          <source>Find a parent component of known type</source>
          <target state="translated">알려진 유형의 상위 구성 요소 찾기</target>
        </trans-unit>
        <trans-unit id="a2ea659f3e398cb1397f96d2e04f71ac6ae5eba4" translate="yes" xml:space="preserve">
          <source>Find a parent in a tree with &lt;code&gt;@SkipSelf()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@SkipSelf()&lt;/code&gt; 를 사용하여 트리에서 부모 찾기</target>
        </trans-unit>
        <trans-unit id="9068048060804561844b51f37075db176ef3392e" translate="yes" xml:space="preserve">
          <source>Find out how much code you're testing</source>
          <target state="translated">테스트중인 코드의 양을 확인하세요.</target>
        </trans-unit>
        <trans-unit id="6888669f18c56df1d694cf79843c2e4b00c6059a" translate="yes" xml:space="preserve">
          <source>Find out more in the &lt;a href=&quot;../guide/animations&quot;&gt;animations guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guide/animations&quot;&gt;애니메이션 안내서&lt;/a&gt; 에서 자세한 내용을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5804ca617365de337f619c9afc81454ab7c97f7" translate="yes" xml:space="preserve">
          <source>Find out more in the &lt;a href=&quot;../guide/forms-overview&quot;&gt;Forms Overview&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guide/forms-overview&quot;&gt;양식 개요&lt;/a&gt; 에서 자세한 내용을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1f7853d2e5b874c8499b3a8977fbd15328d107c" translate="yes" xml:space="preserve">
          <source>Find providers by name</source>
          <target state="translated">이름으로 공급자 찾기</target>
        </trans-unit>
        <trans-unit id="90ac0cee96d91541ca1bd28dfc35a71280d5beec" translate="yes" xml:space="preserve">
          <source>Find testability of a node in the Tree</source>
          <target state="translated">트리에서 노드의 테스트 가능성 찾기</target>
        </trans-unit>
        <trans-unit id="2ba4f7019a119d1c278150f603171c988560b7cb" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/network-performance/reference#throttling&quot;&gt;Network Throttling&lt;/a&gt; dropdown on the far right of the menu bar.</source>
          <target state="translated">메뉴 표시 줄의 오른쪽 끝에 있는 &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/network-performance/reference#throttling&quot;&gt;네트워크 조절&lt;/a&gt; 드롭 다운을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="4e5f4621355c6bff62bda1359ee32eebff1a583e" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; tag for &lt;em&gt;Name&lt;/em&gt; and update it like this:</source>
          <target state="translated">&lt;em&gt;이름&lt;/em&gt; 의 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 태그를 찾아서 다음 과 같이 업데이트하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9332c09462bd82787a8db4c4b69ead156169ceb8" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; tag next to the &lt;strong&gt;Name&lt;/strong&gt; label.</source>
          <target state="translated">&lt;strong&gt;이름&lt;/strong&gt; 레이블 옆에 있는 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 태그를 찾으십시오 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2bbe5210ef2d786fc3ededbe956159663446c80" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;getHeroes&lt;/code&gt; method and replace it with the following code (shown side-by-side with the previous version for comparison)</source>
          <target state="translated">&lt;code&gt;getHeroes&lt;/code&gt; 메소드를 찾아서 다음 코드로 바꾸십시오 (비교를 위해 이전 버전과 나란히 표시됨)</target>
        </trans-unit>
        <trans-unit id="910dec36e9d395b1a239c2cce267478bbbb83541" translate="yes" xml:space="preserve">
          <source>Find the header for your page. For example, a guide page that describes an Angular feature is probably a child of the &lt;code&gt;Fundamentals&lt;/code&gt; header.</source>
          <target state="translated">페이지의 헤더를 찾으십시오. 예를 들어 Angular 피처를 설명하는 가이드 페이지는 &lt;code&gt;Fundamentals&lt;/code&gt; 헤더 의 자식 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e66577055c6ddf016c5f26c4b7258884b805c8a" translate="yes" xml:space="preserve">
          <source>Find the way back</source>
          <target state="translated">돌아 오는 길 찾기</target>
        </trans-unit>
        <trans-unit id="0d7801dbbf5469288357290bb162caf0067841ca" translate="yes" xml:space="preserve">
          <source>Find this example in &lt;span name=&quot;dependency-injection-in-action&quot;&gt;live code&lt;/span&gt; and confirm that the three &lt;code&gt;HeroBioComponent&lt;/code&gt; instances have their own cached hero data.</source>
          <target state="translated">&lt;span name=&quot;dependency-injection-in-action&quot;&gt;라이브 코드&lt;/span&gt; 에서이 예제를 찾아 3 개의 &lt;code&gt;HeroBioComponent&lt;/code&gt; 인스턴스에 자체 캐시 된 영웅 데이터가 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f36f5acbf34ac69639274bcce5d1e810ae127fca" translate="yes" xml:space="preserve">
          <source>Finding the current version of Angular</source>
          <target state="translated">Angular의 현재 버전 찾기</target>
        </trans-unit>
        <trans-unit id="a410edc016bc1e604c19b7f4a7ebcb201ee6cc63" translate="yes" xml:space="preserve">
          <source>Finds one or more inner elements within the current element that is being animated within a sequence. Use with &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">시퀀스 내에서 애니메이션이 적용되는 현재 요소 내에서 하나 이상의 내부 요소를 찾습니다. &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="577fef4c15c29c2eed55b75361375e09cbaa0af3" translate="yes" xml:space="preserve">
          <source>Finds one or more inner elements within the current element that is being animated within a sequence. Use with &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">시퀀스 내에서 애니메이션이 적용되는 현재 요소 내에서 하나 이상의 내부 요소를 찾습니다. &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="353aec05ef3a3f9483fe393d93648f628a744b2e" translate="yes" xml:space="preserve">
          <source>Fine tune control</source>
          <target state="translated">미세 조정 제어</target>
        </trans-unit>
        <trans-unit id="5f133c80f125f45ee0dbdf789783d6285b5c326c" translate="yes" xml:space="preserve">
          <source>Firebase hosting</source>
          <target state="translated">Firebase 호스팅</target>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="968dba49182e0be459fe515125d03648ade8af6c" translate="yes" xml:space="preserve">
          <source>First ensure that the service to be downgraded is provided in an &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; that will be part of the upgrade application. For example, let's assume we have defined &lt;code&gt;HeroesService&lt;/code&gt;</source>
          <target state="translated">먼저 다운 그레이드 할 서비스가 업그레이드 응용 프로그램의 일부가 될 &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 에서 제공되는지 확인하십시오 . 예를 들어 &lt;code&gt;HeroesService&lt;/code&gt; 를 정의 했다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="aa13eff7c345cc62b2731261d890c5269c439d82" translate="yes" xml:space="preserve">
          <source>First import the &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt; and add it to the &lt;code&gt;imports&lt;/code&gt; array:</source>
          <target state="translated">먼저 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt; 을 가져 와서 &lt;code&gt;imports&lt;/code&gt; 배열에 추가하십시오 :</target>
        </trans-unit>
        <trans-unit id="7736c4139c1008cb150702a52ff58ca39d3683e8" translate="yes" xml:space="preserve">
          <source>First step of the Tour of Heroes example application. For more information, see &lt;a href=&quot;../tutorial/toh-pt1&quot;&gt;The hero editor&lt;/a&gt;.</source>
          <target state="translated">Tour of Heroes 예제 애플리케이션의 첫 번째 단계입니다. 자세한 내용 &lt;a href=&quot;../tutorial/toh-pt1&quot;&gt;은 Hero 편집기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="55ec6779573313fe242323b78b075f04a155c1c4" translate="yes" xml:space="preserve">
          <source>First string for comparison</source>
          <target state="translated">비교를위한 첫 번째 문자열</target>
        </trans-unit>
        <trans-unit id="01e119ef3e252a37cc72a2fdfd6760ca6763b655" translate="yes" xml:space="preserve">
          <source>First we must create a directive that will wrap the validator function. We provide it as the validator using the &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; token. If you are not sure why, or you do not fully understand the syntax, revisit the previous &lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;section&lt;/a&gt;.</source>
          <target state="translated">먼저 유효성 검사기 함수를 래핑 할 지시문을 만들어야합니다. &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 토큰을 사용하여 유효성 검사기로 제공합니다 . 이유를 잘 모르거나 구문을 완전히 이해하지 못하면 이전 &lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;섹션을&lt;/a&gt; 다시 방문 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c224c3de52b6310e67cad9019284eef1dbe6d21" translate="yes" xml:space="preserve">
          <source>First we retrieve the child controls by calling the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;'s &lt;a href=&quot;../api/forms/abstractcontrol#get&quot;&gt;get&lt;/a&gt; method. Then we simply compare the values of the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alterEgo&lt;/code&gt; controls.</source>
          <target state="translated">먼저 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 &lt;a href=&quot;../api/forms/abstractcontrol#get&quot;&gt;get&lt;/a&gt; 메소드를 호출하여 자식 컨트롤을 검색합니다 . 그런 다음 단순히 &lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;alterEgo&lt;/code&gt; 컨트롤 의 값을 비교 합니다.</target>
        </trans-unit>
        <trans-unit id="6c9d5cfff1d8258e5ca5251b7474441553db359a" translate="yes" xml:space="preserve">
          <source>First you extend the router import statement to include the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service symbol:</source>
          <target state="translated">먼저 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 서비스 기호 를 포함하도록 라우터 가져 오기 문을 확장하십시오 .</target>
        </trans-unit>
        <trans-unit id="006f3b6fcf861b0234e3eb24d6b99a89daf9bdae" translate="yes" xml:space="preserve">
          <source>First you surround that fragment in the source file with a named &lt;em&gt;docregion&lt;/em&gt; as described &lt;a href=&quot;docs-style-guide#source-code-markup&quot;&gt;below&lt;/a&gt;. Then you reference that &lt;em&gt;docregion&lt;/em&gt; in the &lt;code&gt;region&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; like this</source>
          <target state="translated">먼저 당신은 이름과 소스 파일이 조각을 둘러싸고 &lt;em&gt;docregion&lt;/em&gt; 설명 &lt;a href=&quot;docs-style-guide#source-code-markup&quot;&gt;아래&lt;/a&gt; . 그런 다음 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 의 &lt;code&gt;region&lt;/code&gt; 속성 에서 해당 &lt;em&gt;docregion&lt;/em&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="e38156d4774c97193b83dc70c370d862e8a4f69b" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;AppRoutingModule&lt;/code&gt; imports &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; so the app can have routing functionality. The next import, &lt;code&gt;HeroesComponent&lt;/code&gt;, will give the Router somewhere to go once you configure the routes.</source>
          <target state="translated">먼저 &lt;code&gt;AppRoutingModule&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 를 가져 와서 앱이 라우팅 기능을 가질 수 있도록합니다. 다음 임포트 인 &lt;code&gt;HeroesComponent&lt;/code&gt; 는 라우트를 구성하면 라우터가 이동할 곳을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4fa3397063608fa99c181a29835aaf19ff75226e" translate="yes" xml:space="preserve">
          <source>First, be sure to import &lt;code&gt;&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; in the child component class:</source>
          <target state="translated">먼저, 하위 컴포넌트 클래스에서 &lt;code&gt;&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 를 가져와야합니다 .</target>
        </trans-unit>
        <trans-unit id="56f9dfae7fe63b98aad45e38a0217d3cd8feb04f" translate="yes" xml:space="preserve">
          <source>First, create an &lt;code&gt;AnimalService&lt;/code&gt; with an &lt;code&gt;emoji&lt;/code&gt; property of 🐳 (whale):</source>
          <target state="translated">먼저, 만들 &lt;code&gt;AnimalService&lt;/code&gt; 와 &lt;code&gt;emoji&lt;/code&gt; (고래) 🐳의 속성을 :</target>
        </trans-unit>
        <trans-unit id="c9e7758b50d1db77a7de19f37f3c0dc57b86cfaa" translate="yes" xml:space="preserve">
          <source>First, ensure that &lt;code&gt;src/index.html&lt;/code&gt; is set as the start page. Right-click &lt;code&gt;index.html&lt;/code&gt; in Solution Explorer and select option &lt;code&gt;Set As Start Page&lt;/code&gt;.</source>
          <target state="translated">먼저 &lt;code&gt;src/index.html&lt;/code&gt; 이 시작 페이지로 설정되어 있는지 확인 하십시오. 솔루션 탐색기에서 &lt;code&gt;index.html&lt;/code&gt; 을 마우스 오른쪽 단추로 클릭 하고 옵션을 &lt;code&gt;Set As Start Page&lt;/code&gt; 선택 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae7e8a21e0061c3f6ae332c0c24236a55a9878ac" translate="yes" xml:space="preserve">
          <source>First, extend the router import statement to include the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service symbol:</source>
          <target state="translated">먼저 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 서비스 기호 를 포함하도록 라우터 가져 오기 문을 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="434b74b7d6a69af33016985bf3339ff3f5aea095" translate="yes" xml:space="preserve">
          <source>First, import the &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt; and add it to the &lt;code&gt;imports&lt;/code&gt; array:</source>
          <target state="translated">먼저 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt; 을 가져 와서 &lt;code&gt;imports&lt;/code&gt; 배열에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="77fd009fcc36ce5b9f47a2278d871b75447aefc1" translate="yes" xml:space="preserve">
          <source>First, import the following members in the component you want to navigate from.</source>
          <target state="translated">먼저 탐색 할 구성 요소에서 다음 멤버를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fcd358a07ec06cfd9f03f3dce181ba1549395226" translate="yes" xml:space="preserve">
          <source>First, import the schematics definitions you will need. The Schematics framework offers many utility functions to create and use rules when running a schematic.</source>
          <target state="translated">먼저 필요한 회로도 정의를 가져옵니다. Schematics 프레임 워크는 회로도를 실행할 때 규칙을 작성하고 사용하기위한 많은 유틸리티 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d87ce0595d0d8921c001ee9447f191878b1ada86" translate="yes" xml:space="preserve">
          <source>First, it sets the &lt;code&gt;currentAdIndex&lt;/code&gt; by taking whatever it currently is plus one, dividing that by the length of the &lt;code&gt;AdItem&lt;/code&gt; array, and using the &lt;em&gt;remainder&lt;/em&gt; as the new &lt;code&gt;currentAdIndex&lt;/code&gt; value. Then, it uses that value to select an &lt;code&gt;adItem&lt;/code&gt; from the array.</source>
          <target state="translated">먼저, 상기 설정 &lt;code&gt;currentAdIndex&lt;/code&gt; 가 현재 분할 번 더한 무엇을 취함으로써 그 길이만큼의 &lt;code&gt;AdItem&lt;/code&gt; 의 배열과 사용 &lt;em&gt;나머지&lt;/em&gt; 새 등 &lt;code&gt;currentAdIndex&lt;/code&gt; 의 값. 그런 다음 해당 값을 사용 하여 배열에서 &lt;code&gt;adItem&lt;/code&gt; 을 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="14157ae1fec131fa629d1b92aee617e08eeb5f90" translate="yes" xml:space="preserve">
          <source>First, remove the &lt;code&gt;ng-app&lt;/code&gt; attribute from &lt;code&gt;index.html&lt;/code&gt;. Then import &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt;, and override its &lt;code&gt;ngDoBootstrap&lt;/code&gt; method:</source>
          <target state="translated">먼저 &lt;code&gt;index.html&lt;/code&gt; 에서 &lt;code&gt;ng-app&lt;/code&gt; 속성을 제거하십시오 . 그런 다음 &lt;code&gt;AppModule&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 을 가져오고 &lt;code&gt;ngDoBootstrap&lt;/code&gt; 메소드를 대체하십시오 .</target>
        </trans-unit>
        <trans-unit id="b845f5994781cbb37e79a231e7de156b52c5e2fe" translate="yes" xml:space="preserve">
          <source>First, set up the checkout form model. Defined in the component class, the form model is the source of truth for the status of the form.</source>
          <target state="translated">먼저 결제 양식 모델을 설정합니다. 구성 요소 클래스에 정의 된 양식 모델은 양식 상태에 대한 진실의 소스입니다.</target>
        </trans-unit>
        <trans-unit id="13ba5cc308cd8a4055d4553f319b826982eac734" translate="yes" xml:space="preserve">
          <source>First, use the child's selector, here &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt;, as a directive within the parent component template. Then, use &lt;a href=&quot;template-syntax#property-binding&quot;&gt;property binding&lt;/a&gt; to bind the property in the child to the property of the parent.</source>
          <target state="translated">먼저 자식 선택기 (여기서는 &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; )를 부모 구성 요소 템플릿 내의 지시문으로 사용하십시오. 그런 다음 &lt;a href=&quot;template-syntax#property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 을 사용 하여 자식의 속성을 부모의 속성에 바인딩하십시오.</target>
        </trans-unit>
        <trans-unit id="9647450b7ff56001720b551df6dcc0a33e9ca5a8" translate="yes" xml:space="preserve">
          <source>First, you have to import references to the &lt;code&gt;&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; decorator and the &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;&lt;/code&gt; lifecycle hook.</source>
          <target state="translated">먼저 &lt;code&gt;&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; 데코레이터 및 &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;&lt;/code&gt; 수명주기 후크에 대한 참조를 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="025340734ec5d57ee79e8d037ce0de5cd9fffa35" translate="yes" xml:space="preserve">
          <source>First, you'll set up the checkout form model. The form model is the source of truth for the status of the form and is defined in the component class.</source>
          <target state="translated">먼저 결제 양식 모델을 설정합니다. 양식 모델은 양식의 상태에 대한 진실의 원천이며 구성 요소 클래스에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b3c920d85163b18d2227d8f537cf1e61cb153fd" translate="yes" xml:space="preserve">
          <source>Fixed a bug in the router where the arguments for &lt;code&gt;future&lt;/code&gt; and &lt;code&gt;curr&lt;/code&gt; snapshots were reversed in the call to &lt;code&gt;shouldReuseRoute&lt;/code&gt; when processing child routes. Usually this ordering mistake doesn't matter because most implementations of &lt;a href=&quot;../api/router/routereusestrategy#shouldReuseRoute&quot;&gt;&lt;code&gt;shouldReuseRoute&lt;/code&gt;&lt;/a&gt; just do an equality comparison between &lt;code&gt;future&lt;/code&gt; and &lt;code&gt;curr&lt;/code&gt;. However, some implementations actually do rely on values specifically on one of the two and will need to be updated. See &lt;a href=&quot;https://github.com/angular/angular/pull/26949&quot;&gt;PR 26949&lt;/a&gt;.</source>
          <target state="translated">하위 경로를 처리 할 때 &lt;code&gt;shouldReuseRoute&lt;/code&gt; 에 대한 호출에서 &lt;code&gt;future&lt;/code&gt; 및 &lt;code&gt;curr&lt;/code&gt; 스냅 샷에 대한 인수 가 반전 된 라우터의 버그를 수정했습니다 . 대부분의 &lt;a href=&quot;../api/router/routereusestrategy#shouldReuseRoute&quot;&gt; &lt;code&gt;shouldReuseRoute&lt;/code&gt; &lt;/a&gt; 구현은 &lt;code&gt;future&lt;/code&gt; 와 &lt;code&gt;curr&lt;/code&gt; 간의 동등성 비교를 수행 하기 때문에 일반적으로이 순서 지정 실수는 중요하지 않습니다 . 그러나 일부 구현은 실제로 두 가지 중 하나의 값에 의존하므로 업데이트해야합니다. &lt;a href=&quot;https://github.com/angular/angular/pull/26949&quot;&gt;PR 26949를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f85d85326853baf05275197db6d10fd7ad94a38d" translate="yes" xml:space="preserve">
          <source>Fixes linting errors (may overwrite linted files).</source>
          <target state="translated">린트 오류를 ​​수정합니다 (린트 된 파일을 덮어 쓸 수 있음).</target>
        </trans-unit>
        <trans-unit id="845cf578b2efea633be3f3f6070c477978db19d2" translate="yes" xml:space="preserve">
          <source>Fixture for debugging and testing a component.</source>
          <target state="translated">컴포넌트 디버깅 및 테스트를위한 픽스쳐</target>
        </trans-unit>
        <trans-unit id="47027d345cd1b888dd24d533746624ba383f61c3" translate="yes" xml:space="preserve">
          <source>Flag to prevent building an app shell.</source>
          <target state="translated">앱 셸을 빌드하지 못하게하는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="c38db9c9703b1880f1fb4cc292db33fcfd41bfef" translate="yes" xml:space="preserve">
          <source>Flags for renderer-specific style modifiers.</source>
          <target state="translated">렌더러 특정 스타일 수정 자에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="23f8b52bc03b06820d6fbf3a3116fc3217e1c3d2" translate="yes" xml:space="preserve">
          <source>Flags for style variations to remove, if set. ???</source>
          <target state="translated">제거 된 스타일 변형에 대한 플래그입니다 (설정된 경우). ???</target>
        </trans-unit>
        <trans-unit id="7419f582323423b571d0e8104b85663f8483a737" translate="yes" xml:space="preserve">
          <source>Flags for style variations. No flags are set by default.</source>
          <target state="translated">스타일 변형에 대한 플래그. 기본적으로 플래그가 설정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="79c9e13ab7d502c6c70eca7c038f62d6c49fda0d" translate="yes" xml:space="preserve">
          <source>Flat</source>
          <target state="translated">Flat</target>
        </trans-unit>
        <trans-unit id="aef62e073c9538aa87c8c38c1a8bf61bded98e36" translate="yes" xml:space="preserve">
          <source>Floating images</source>
          <target state="translated">플로팅 이미지</target>
        </trans-unit>
        <trans-unit id="13f80ff3ae7d009b1e01b88f21afe2491230965e" translate="yes" xml:space="preserve">
          <source>Floating within a subsection</source>
          <target state="translated">하위 섹션 내에 떠있는</target>
        </trans-unit>
        <trans-unit id="3f72320cb9eb3892311c36e1201deb897716e20a" translate="yes" xml:space="preserve">
          <source>Flush any pending microtasks.</source>
          <target state="translated">보류중인 마이크로 태스크를 모두 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="1313760637068e67ab353348deb675e763580ff0" translate="yes" xml:space="preserve">
          <source>FlyingHeroesPipe</source>
          <target state="translated">FlyingHeroesPipe</target>
        </trans-unit>
        <trans-unit id="99407d81116edc10941a2ff4ec9acfbf36986d2a" translate="yes" xml:space="preserve">
          <source>FnArg</source>
          <target state="translated">FnArg</target>
        </trans-unit>
        <trans-unit id="674038e3b673c8e05950f1b1b8076bd2888c3b23" translate="yes" xml:space="preserve">
          <source>Focus on the &lt;code&gt;overrideComponent&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;overrideComponent&lt;/code&gt; 메소드 에 중점을 둡니다 .</target>
        </trans-unit>
        <trans-unit id="be96b0e964115bda6f5295db5f73a0974e889ff3" translate="yes" xml:space="preserve">
          <source>Focus on the binding syntax: &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]=&quot;...&quot;&lt;/code&gt;.</source>
          <target state="translated">바인딩 구문에 중점을 둡니다 : &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]=&quot;...&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba0c349131fd653362da503d9138988c231e9862" translate="yes" xml:space="preserve">
          <source>Focus on the component's template.</source>
          <target state="translated">컴포넌트 템플릿에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="f18ba6e3dca6a56b206e311fd8d02d70252a5f8a" translate="yes" xml:space="preserve">
          <source>Focus on the constructor parameters.</source>
          <target state="translated">생성자 매개 변수에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="99a92a1737d6303412bc431ba1e6ab979fe2f4f1" translate="yes" xml:space="preserve">
          <source>Focus on the following three TypeScript (&lt;code&gt;.ts&lt;/code&gt;) files in the &lt;strong&gt;&lt;code&gt;/src&lt;/code&gt;&lt;/strong&gt; folder.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;/src&lt;/code&gt; &lt;/strong&gt; 폴더 에있는 다음 세 가지 TypeScript ( &lt;code&gt;.ts&lt;/code&gt; ) 파일에 중점을 둡니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a846cc83c7322e6b47e27db868c9dc21caecc84c" translate="yes" xml:space="preserve">
          <source>Focus on the spy.</source>
          <target state="translated">스파이에 집중하십시오.</target>
        </trans-unit>
        <trans-unit id="f75aee18c2edafe7ea1d576022a1b8458bd9dd44" translate="yes" xml:space="preserve">
          <source>Focus on the template:</source>
          <target state="translated">템플릿에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="8b610be124aa3a40ce1b39d37fc11b0b04c6263e" translate="yes" xml:space="preserve">
          <source>Foldable</source>
          <target state="translated">Foldable</target>
        </trans-unit>
        <trans-unit id="57b7ec24a9b1313c299b9748f089e1707332463e" translate="yes" xml:space="preserve">
          <source>Foldable syntax</source>
          <target state="translated">접이식 구문</target>
        </trans-unit>
        <trans-unit id="8545108042043a15c515d62cdfb13f4185ac9c95" translate="yes" xml:space="preserve">
          <source>Follow the AngularJS Style Guide</source>
          <target state="translated">AngularJS 스타일 가이드를 따르십시오</target>
        </trans-unit>
        <trans-unit id="11c7ef116d47d698a7592c21c0ecd9f0b8006417" translate="yes" xml:space="preserve">
          <source>Follow the instructions in &lt;a href=&quot;setup-local&quot;&gt;Local Environment Setup&lt;/a&gt; to create a starter Angular app using the CLI command &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CLI 명령 &lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; 를&lt;/a&gt; 사용하여 starter Angular 앱을 작성하려면 &lt;a href=&quot;setup-local&quot;&gt;로컬 환경 설정&lt;/a&gt; 의 지시 사항을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="cbba88aeff252999f7189b7c5791e6b635b7d58f" translate="yes" xml:space="preserve">
          <source>Follow the prompts to select the &lt;code&gt;Firebase&lt;/code&gt; project you are creating for hosting.</source>
          <target state="translated">안내에 따라 호스팅 할 &lt;code&gt;Firebase&lt;/code&gt; 프로젝트 를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="9290916a8ada6d592efd89d4b0ce3854336f1797" translate="yes" xml:space="preserve">
          <source>Follow these steps:</source>
          <target state="translated">다음과 같이하세요:</target>
        </trans-unit>
        <trans-unit id="80fc20b87aee155bca3d86ee5c873949fa8a32e0" translate="yes" xml:space="preserve">
          <source>Follow this convention when you write similar modules with configurable service providers.</source>
          <target state="translated">구성 가능한 서비스 제공자로 유사한 모듈을 작성할 때이 규칙을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="ac5a22ef48584da5d4a3bf95e83238cf1a90ec1c" translate="yes" xml:space="preserve">
          <source>Following is all the code discussed in this page.</source>
          <target state="translated">다음은이 페이지에서 설명한 모든 코드입니다.</target>
        </trans-unit>
        <trans-unit id="528abf3dd48bf1a361c849a3e5d23ed3a8e477b4" translate="yes" xml:space="preserve">
          <source>Following the same pattern as with the &lt;code&gt;FlowerService&lt;/code&gt;, inject the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;AppComponent&lt;/code&gt; class:</source>
          <target state="translated">와 동일 패턴에 따라 &lt;code&gt;FlowerService&lt;/code&gt; 분사, &lt;code&gt;AnimalService&lt;/code&gt; 에서 &lt;code&gt;AppComponent&lt;/code&gt; 의 클래스를 :</target>
        </trans-unit>
        <trans-unit id="28f59b43a2e986c305127840c478d30a5aaa678d" translate="yes" xml:space="preserve">
          <source>Fonts optimization requires internet access. When enabled, render blocking requests will be reduced by inlining external Google fonts and icons CSS definitions in the application's HTML index file.</source>
          <target state="translated">글꼴 최적화에는 인터넷 액세스가 필요합니다. 사용하도록 설정하면 애플리케이션의 HTML 색인 파일에 외부 Google 글꼴 및 아이콘 CSS 정의를 삽입하여 렌더링 차단 요청이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="954d922028bc7e30f824816d4fa2677158b0313f" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;glossary#universal&quot;&gt;Universal&lt;/a&gt;, you can reduce the code rendered in the HTML page by setting styles optimization to &lt;code&gt;true&lt;/code&gt; and styles source maps to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;glossary#universal&quot;&gt;유니버설&lt;/a&gt; , 당신은에 스타일 최적화를 설정하여 HTML 페이지에서 렌더링 코드를 줄일 수있는 &lt;code&gt;true&lt;/code&gt; 과 스타일 소스지도 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="535b9d0a128d217ab7a761117b90df97816a242a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; pipe format options, see &lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; 파이프 형식 옵션을 참조 &lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01162b62b308e6eea867c12d8bc4942259834c93" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, 'M/d/yy, h:mm a'&lt;code&gt;(Example:&lt;/code&gt;6/15/15, 9:03 AM`)</source>
          <target state="translated">들면 &lt;code&gt;en-US&lt;/code&gt; , 'M / D / YY, H : mm A를' &lt;code&gt;(Example:&lt;/code&gt; 6/15/15, 9시 3분 AM`)</target>
        </trans-unit>
        <trans-unit id="87cbdf03fb63d9818c63c6f32dd96510ce36f71a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; (Example: &lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt;)</source>
          <target state="translated">들면 &lt;code&gt;en-US&lt;/code&gt; , &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; (예 : &lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="47a340ba156cb83b332286d4232b3c377581b441" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss a zzzz'&lt;/code&gt; (Example: &lt;code&gt;Monday, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt;)</source>
          <target state="translated">들면 &lt;code&gt;en-US&lt;/code&gt; , &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss a zzzz'&lt;/code&gt; (예 : &lt;code&gt;Monday, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8125fcff305766783603f665ed203f09c7127e92" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'MMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (Example: &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt;)</source>
          <target state="translated">들면 &lt;code&gt;en-US&lt;/code&gt; , &lt;code&gt;'MMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (예 : &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a999087c962b65b5fc80f20398fc3055db57375e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'MMM d, y, h:mm:ss a'&lt;/code&gt; (Example: &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt;)</source>
          <target state="translated">들면 &lt;code&gt;en-US&lt;/code&gt; , &lt;code&gt;'MMM d, y, h:mm:ss a'&lt;/code&gt; (예 : &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bb6b5a9d378e0fa8d1fc57f33040f3883a3465f0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; (Example: &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt;)</source>
          <target state="translated">들면 &lt;code&gt;en-US&lt;/code&gt; , &lt;code&gt;'MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; (예 : &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0e8309126010d75a393ad3baa830a71b505879c9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'MMMM d, y, h:mm:ss a z'&lt;/code&gt; (Example: &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt;)</source>
          <target state="translated">들면 &lt;code&gt;en-US&lt;/code&gt; , &lt;code&gt;'MMMM d, y, h:mm:ss a z'&lt;/code&gt; (예 : &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="615c1a0449b23b9b11bdc05ef40763586f9c816e" translate="yes" xml:space="preserve">
          <source>For AOT compilation, include the &lt;code&gt;--aot&lt;/code&gt; option with the &lt;code&gt;ng build&lt;/code&gt; or &lt;code&gt;ng serve&lt;/code&gt; command:</source>
          <target state="translated">AOT 컴파일의 경우 &lt;code&gt;--aot&lt;/code&gt; 옵션을 &lt;code&gt;ng build&lt;/code&gt; 또는 &lt;code&gt;ng serve&lt;/code&gt; 명령 과 함께 포함하십시오 .</target>
        </trans-unit>
        <trans-unit id="366254ac553179e02b799a6f00c72532a5afc495" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;, the values of enabled controls as an array.</source>
          <target state="translated">A에 대한 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 의 값을 배열로 제어 할 수 있었다.</target>
        </trans-unit>
        <trans-unit id="fed41b2d73d63d1a8ff91591ee7067e07e3bd040" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, the current value.</source>
          <target state="translated">A의 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , 현재 값.</target>
        </trans-unit>
        <trans-unit id="0c133008b01e0d9e64b77e4e0277f5fc75d7f1f4" translate="yes" xml:space="preserve">
          <source>For a complete description of the NgModule metadata properties, see &lt;a href=&quot;ngmodule-api&quot;&gt;Using the NgModule metadata&lt;/a&gt;.</source>
          <target state="translated">NgModule 메타 데이터 속성에 대한 전체 설명은 NgModule 메타 데이터 &lt;a href=&quot;ngmodule-api&quot;&gt;사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f43b85c1829894944e92d8aa96dd451f69c98e7b" translate="yes" xml:space="preserve">
          <source>For a complete list of built-in pipes, see the &lt;a href=&quot;../api/common#pipes&quot;&gt;pipes API documentation&lt;/a&gt;.</source>
          <target state="translated">내장 파이프의 전체 목록은 &lt;a href=&quot;../api/common#pipes&quot;&gt;pipes API 문서를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="8a4deee0bdf8c15ca3196a32013eae0eedb59494" translate="yes" xml:space="preserve">
          <source>For a complete list of locales supported by Angular, see &lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales&quot;&gt;the Angular repository&lt;/a&gt;.</source>
          <target state="translated">Angular가 지원하는 로케일의 전체 목록은 &lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales&quot;&gt;Angular 저장소를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f85eb5b33c42136f7f1e0ea2567c82a8da57cb1" translate="yes" xml:space="preserve">
          <source>For a demonstration of the syntax and code snippets in this section, see the &lt;span name=&quot;binding-syntax&quot;&gt;binding syntax example&lt;/span&gt;.</source>
          <target state="translated">이 섹션의 구문 및 코드 스 니펫에 대한 데모는 &lt;span name=&quot;binding-syntax&quot;&gt;바인딩 구문 예제를&lt;/span&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0db23d1180e42942344c6da322408ea0d6dccba7" translate="yes" xml:space="preserve">
          <source>For a demonstration of the syntax and code snippets in this section, see the &lt;span name=&quot;template-reference-variables&quot;&gt;template reference variables example&lt;/span&gt;.</source>
          <target state="translated">이 섹션의 구문 및 코드 스 니펫에 대한 데모는 &lt;span name=&quot;template-reference-variables&quot;&gt;템플리트 참조 변수 예제를 참조&lt;/span&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b37874a6cbfb3027c0ab76729338e5dbcb431c0b" translate="yes" xml:space="preserve">
          <source>For a demonstration of the syntax and code snippets in this section, see the &lt;span name=&quot;two-way-binding&quot;&gt;two-way binding example&lt;/span&gt;.</source>
          <target state="translated">이 섹션의 구문 및 코드 스 니펫에 대한 데모는 &lt;span name=&quot;two-way-binding&quot;&gt;양방향 바인딩 예제를&lt;/span&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a34954312c37d216e0ffa8bd3419794239b563f" translate="yes" xml:space="preserve">
          <source>For a detailed explanation the build process, see &lt;a href=&quot;build&quot;&gt;Building and serving Angular apps&lt;/a&gt;. This build process works for translation files in the &lt;code&gt;.xlf&lt;/code&gt; format or in another format that Angular understands, such as &lt;code&gt;.xtb&lt;/code&gt;.</source>
          <target state="translated">빌드 프로세스에 대한 자세한 설명은 &lt;a href=&quot;build&quot;&gt;Angular 앱 빌드 및 제공을&lt;/a&gt; 참조하세요 . 이 빌드 프로세스는 &lt;code&gt;.xlf&lt;/code&gt; 형식 또는 Angular가 이해하는 다른 형식 (예 : &lt;code&gt;.xtb&lt;/code&gt; )의 번역 파일에 대해 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="0907856c006b39c30ec9fba9037965fae1b76a6c" translate="yes" xml:space="preserve">
          <source>For a development build, the output produced by &lt;code&gt;ng build&lt;/code&gt; is simpler and easier to debug, allowing you to rely less on sourcemaps of compiled code.</source>
          <target state="translated">개발 빌드의 경우 &lt;code&gt;ng build&lt;/code&gt; 로 생성 된 출력 이 더 간단하고 디버깅하기 쉬워 컴파일 된 코드의 소스 맵에 덜 의존 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dca82a3371da568933815b1a8dcec9ba11807d39" translate="yes" xml:space="preserve">
          <source>For a disabled &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, the values of all controls as an object with a key-value pair for each member of the group.</source>
          <target state="translated">비활성화 된 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 경우 모든 컨트롤의 값은 그룹의 각 멤버에 대한 키-값 쌍이있는 개체로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fb5cd3f455660d8e4c7eded02e274eefa1025c99" translate="yes" xml:space="preserve">
          <source>For a fuller introduction to Angular's template syntax, see &lt;a href=&quot;guide/architecture-components#template-syntax&quot;&gt;Introduction to components and templates&lt;/a&gt;.</source>
          <target state="translated">Angular의 템플릿 구문에 대한 자세한 &lt;a href=&quot;guide/architecture-components#template-syntax&quot;&gt;소개는 컴포넌트 및 템플릿 소개를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="21a3f0180e64a088986c38175afc3804ead850f8" translate="yes" xml:space="preserve">
          <source>For a library compiled without &lt;code&gt;strictNullChecks&lt;/code&gt;, its declaration files will not indicate whether a field can be &lt;code&gt;null&lt;/code&gt; or not. For situations where the library handles &lt;code&gt;null&lt;/code&gt; correctly, this is problematic, as the compiler will check a nullable value against the declaration files which omit the &lt;code&gt;null&lt;/code&gt; type. As such, the compiler produces a type-check error because it adheres to &lt;code&gt;strictNullChecks&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strictNullChecks&lt;/code&gt; 없이 컴파일 된 라이브러리 의 경우 선언 파일은 필드가 &lt;code&gt;null&lt;/code&gt; 일 수 있는지 여부를 나타내지 않습니다. 라이브러리가 &lt;code&gt;null&lt;/code&gt; 을 올바르게 처리하는 상황의 경우 컴파일러가 &lt;code&gt;null&lt;/code&gt; 유형 을 생략하는 선언 파일에 대해 nullable 값을 확인하므로 문제가됩니다 . 따라서 컴파일러는 &lt;code&gt;strictNullChecks&lt;/code&gt; 를 준수하기 때문에 유형 검사 오류를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="45a561ba7c1c51805ef39bb6a87cdaafee124e29" translate="yes" xml:space="preserve">
          <source>For a list of DOM events, see: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/Events&lt;/a&gt;.</source>
          <target state="translated">DOM 이벤트 목록은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/Events를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd3b687881cef64a0161bee4d801855af9d8521a" translate="yes" xml:space="preserve">
          <source>For a list of language codes, see &lt;a href=&quot;https://www.loc.gov/standards/iso639-2/&quot;&gt;ISO 639-2&lt;/a&gt;.</source>
          <target state="translated">언어 코드 목록은 &lt;a href=&quot;https://www.loc.gov/standards/iso639-2/&quot;&gt;ISO 639-2를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b34018802d350c96ec51dd65107c66e3816e190" translate="yes" xml:space="preserve">
          <source>For a more complete example and discussion, see &lt;a href=&quot;../../guide/lifecycle-hooks#defining-custom-change-detection&quot;&gt;Defining custom change detection&lt;/a&gt;.</source>
          <target state="translated">더 완전한 예와 논의는 &lt;a href=&quot;../../guide/lifecycle-hooks#defining-custom-change-detection&quot;&gt;사용자 정의 변경 감지 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2dd5f6af9f382ca67ac129bad7cd5aa1a0565560" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion of the differences and their implications, see &lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;Upgrading for Performance&lt;/a&gt;.</source>
          <target state="translated">차이점과 그 의미에 대한 자세한 내용은 &lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;성능 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc66a61178ac7b88b12368f21d5b48b2c671f9ef" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion of these concepts, see &lt;a href=&quot;architecture-components&quot;&gt;Introduction to components&lt;/a&gt;.</source>
          <target state="translated">이러한 개념에 대한 자세한 내용은 &lt;a href=&quot;architecture-components&quot;&gt;구성 요소 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c337b01d15862c6742dfaef9e2e117a14e2fd2dd" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;architecture-modules&quot;&gt;Introduction to modules&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;architecture-modules&quot;&gt;모듈 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="586ff2e84338f7def76edce5c6f12aee801fda77" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;architecture-services&quot;&gt;Introduction to services and DI&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;architecture-services&quot;&gt;서비스 및 DI 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4cd5e4bd0778cad7950bd52a42ef74913046ae2" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;router&quot;&gt;Routing and navigation&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;router&quot;&gt;라우팅 및 탐색을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a73e93b07219a0df7b025b0a73e4e86089de6972" translate="yes" xml:space="preserve">
          <source>For a more detailed look at different techniques and concepts surrounding SSR, please check out this &lt;a href=&quot;https://developers.google.com/web/updates/2019/02/rendering-on-the-web&quot;&gt;article&lt;/a&gt;.</source>
          <target state="translated">SSR을 둘러싼 다양한 기술과 개념에 대한 자세한 내용은이 &lt;a href=&quot;https://developers.google.com/web/updates/2019/02/rendering-on-the-web&quot;&gt;기사&lt;/a&gt; 를 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="750cd369db6afa2ea7217c34574571bcfa6f38c2" translate="yes" xml:space="preserve">
          <source>For a more strikingly visual effect, hide the data entry area and display something else.</source>
          <target state="translated">보다 눈에 띄는 시각적 효과를 얻으려면 데이터 입력 영역을 숨기고 다른 것을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="fbf4f4c32708274e1458286aced4e7bebc31551d" translate="yes" xml:space="preserve">
          <source>For a more thorough introduction to the fundamental concepts and terminology of Angular single-page app architecture and design principles, read the &lt;a href=&quot;architecture&quot;&gt;Angular Concepts&lt;/a&gt; section.</source>
          <target state="translated">Angular 단일 페이지 앱 아키텍처 및 디자인 원칙의 기본 개념과 용어에 대한 자세한 소개는 &lt;a href=&quot;architecture&quot;&gt;Angular 개념&lt;/a&gt; 섹션을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="2022eb522814df1f6325470271058257eb784f7a" translate="yes" xml:space="preserve">
          <source>For a multi-project workspace, application-specific end-to-end tests are in the project root, under &lt;code&gt;projects/project-name/e2e/&lt;/code&gt;.</source>
          <target state="translated">다중 프로젝트 작업 공간의 경우 애플리케이션 특정 엔드 투 엔드 테스트는 프로젝트 루트의 &lt;code&gt;projects/project-name/e2e/&lt;/code&gt; 아래에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c8a4e5ce7ca87cad38cdc266c34765f3cdeb6a6" translate="yes" xml:space="preserve">
          <source>For a newly created Angular application, the default &lt;code&gt;browserslist&lt;/code&gt; looks like this:</source>
          <target state="translated">새로 작성된 Angular 애플리케이션의 경우 기본 &lt;code&gt;browserslist&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c247355b9325393b8179bfd98128011fbe1693db" translate="yes" xml:space="preserve">
          <source>For a production build, your configuration determines which bundles are created for deployment of your application. When needed, the &lt;code&gt;index.html&lt;/code&gt; file is also modified during the build process to include script tags that enable differential loading, as shown in the following example.</source>
          <target state="translated">프로덕션 빌드의 경우 구성에 따라 애플리케이션 배포를 위해 생성되는 번들이 결정됩니다. 필요한 경우 다음 예제에 표시된대로 차등로드를 가능하게하는 스크립트 태그를 포함하도록 &lt;code&gt;index.html&lt;/code&gt; 파일도 빌드 프로세스 중에 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="30a03f66c5fbc0ab53ccc165e51d54b263f55130" translate="yes" xml:space="preserve">
          <source>For a sample app using the app-wide singleton service that this page describes, see the  showcasing all the documented features of NgModules.</source>
          <target state="translated">이 페이지에서 설명하는 앱 전체 싱글 톤 서비스를 사용하는 샘플 앱에 대해서는 NgModules의 모든 문서화 된 기능 표시를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="81c70c1467ee563fc554cbd57f1ad105403d7b92" translate="yes" xml:space="preserve">
          <source>For a server that supports a cookie-based XSRF protection system, use directly to configure XSRF protection with the correct cookie and header names.</source>
          <target state="translated">쿠키 기반 XSRF 보호 시스템을 지원하는 서버의 경우 올바른 쿠키 및 헤더 이름으로 XSRF 보호를 직접 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="92ef30ec204c92904139cd32d14c7f56b8daa6a7" translate="yes" xml:space="preserve">
          <source>For a service, instead of using &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt;, specify &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; on the service's &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator, which makes the service automatically available to the whole application and thus singleton by default.</source>
          <target state="translated">서비스의 경우 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 를 사용하는 대신 서비스의 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 데코레이터에서 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; 를 지정하십시오 . 그러면 서비스가 전체 애플리케이션에서 자동으로 사용 가능하므로 기본적으로 싱글 톤이됩니다.</target>
        </trans-unit>
        <trans-unit id="a6d061778e48acf24bc98d5b4a6e3b6d0a66d145" translate="yes" xml:space="preserve">
          <source>For a service, instead of using &lt;code&gt;forRoot()&lt;/code&gt;, specify &lt;code&gt;providedIn: 'root'&lt;/code&gt; on the service's &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator, which makes the service automatically available to the whole application and thus singleton by default.</source>
          <target state="translated">서비스의 경우 &lt;code&gt;forRoot()&lt;/code&gt; 를 사용하는 대신 서비스의 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt; () 데코레이터에서 &lt;code&gt;providedIn: 'root'&lt;/code&gt; 를 지정 하면 서비스가 전체 애플리케이션에서 자동으로 사용 가능해 지므로 기본적으로 싱글 톤이됩니다.</target>
        </trans-unit>
        <trans-unit id="e8211f18ec4be55c727117b3cb53d82d2e117ab5" translate="yes" xml:space="preserve">
          <source>For a single-application workspace, the &lt;code&gt;src/&lt;/code&gt; subfolder of the workspace contains the source files (application logic, data, and assets) for the root application. For a multi-project workspace, additional projects in the &lt;code&gt;projects/&lt;/code&gt; folder contain a &lt;code&gt;project-name/src/&lt;/code&gt; subfolder with the same structure.</source>
          <target state="translated">단일 응용 프로그램 작업 영역의 경우 작업 영역의 &lt;code&gt;src/&lt;/code&gt; 하위 폴더에는 루트 응용 프로그램의 소스 파일 (응용 프로그램 논리, 데이터 및 자산)이 포함됩니다. 다중 프로젝트 작업 공간의 경우 &lt;code&gt;projects/&lt;/code&gt; 폴더 의 추가 프로젝트 에는 동일한 구조 의 &lt;code&gt;project-name/src/&lt;/code&gt; 하위 폴더가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="11cb4bf6c661d8cdd71002583f1d273c15f3e9b8" translate="yes" xml:space="preserve">
          <source>For a summary of the classes and directives provided by &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive forms API&lt;/a&gt; section below.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 에서 제공하는 클래스 및 지시문에 대한 요약은 아래 의 &lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive Forms API&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bb8ae356358a94ecbb64f29fb84254dceecc6626" translate="yes" xml:space="preserve">
          <source>For a template-driven form, you must create a directive to wrap the validator function. You provide that directive as the validator using the &lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;&lt;code&gt;NG_VALIDATORS&lt;/code&gt; token&lt;/a&gt;, as shown in the following example.</source>
          <target state="translated">템플릿 기반 양식의 경우 유효성 검사기 함수를 래핑하는 지시문을 만들어야합니다. 다음 예와 같이 &lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt; &lt;code&gt;NG_VALIDATORS&lt;/code&gt; 토큰을&lt;/a&gt; 사용하여 해당 지시문을 유효성 검사기로 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="1aeb7084240197448ee7922cc65cd19b115f0503" translate="yes" xml:space="preserve">
          <source>For a use case in which &lt;code&gt;TestBed.get()&lt;/code&gt; does not work, see the &lt;a href=&quot;testing#component-override&quot;&gt;&lt;em&gt;Override component providers&lt;/em&gt;&lt;/a&gt; section that explains when and why you must get the service from the component's injector instead.</source>
          <target state="translated">&lt;code&gt;TestBed.get()&lt;/code&gt; 이 작동하지 않는 유스 케이스의 경우 컴포넌트 인젝터에서 서비스 를 가져와야 하는시기와 이유를 설명하는 &lt;a href=&quot;testing#component-override&quot;&gt;&lt;em&gt;컴포넌트 제공자 대체&lt;/em&gt;&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8fc0a65b899aea0220155a1ec617b728b1744ef4" translate="yes" xml:space="preserve">
          <source>For a use case in which &lt;code&gt;TestBed.inject()&lt;/code&gt; does not work, see the &lt;a href=&quot;testing-components-scenarios#component-override&quot;&gt;&lt;em&gt;Override component providers&lt;/em&gt;&lt;/a&gt; section that explains when and why you must get the service from the component's injector instead.</source>
          <target state="translated">&lt;code&gt;TestBed.inject()&lt;/code&gt; 가 작동하지 않는 사용 사례 는 구성 요소의 인젝터에서 서비스 를 가져와야 하는시기와 이유를 설명하는 &lt;a href=&quot;testing-components-scenarios#component-override&quot;&gt;&lt;em&gt;구성 요소 공급자 재정의&lt;/em&gt;&lt;/a&gt; 섹션을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="a56e67dc7e67f63fd67f62752b90970cdfa316a7" translate="yes" xml:space="preserve">
          <source>For a working app showcasing the resolution modifiers that this section covers, see the &lt;span name=&quot;resolution-modifiers&quot;&gt;resolution modifiers example&lt;/span&gt;.</source>
          <target state="translated">이 섹션에서 다루는 해상도 수정자를 보여주는 작동하는 앱에 대해서는 &lt;span name=&quot;resolution-modifiers&quot;&gt;해상도 수정 자 예제를&lt;/span&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="31cc9ea09af54d7f2b7e02f088ca897d46a68bda" translate="yes" xml:space="preserve">
          <source>For a working example of the final version of the app, see the .</source>
          <target state="translated">앱의 최종 버전에 대한 작업 예제는.</target>
        </trans-unit>
        <trans-unit id="b4d3ace35db801146c90ad64f7e68f94dffe96e6" translate="yes" xml:space="preserve">
          <source>For accessibility, always set the &lt;code&gt;alt&lt;/code&gt; attribute with a meaningful description of the image.</source>
          <target state="translated">접근성을 위해 항상 이미지에 대한 의미있는 설명으로 &lt;code&gt;alt&lt;/code&gt; 속성을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="08c197fce1dfb8440b4fadb4a18a680eb4703951" translate="yes" xml:space="preserve">
          <source>For additional guidelines and instructions on preparing an application for AOT compilation, see &lt;a href=&quot;https://medium.com/sparkles-blog/angular-writing-aot-friendly-applications-7b64c8afbe3f&quot;&gt;Angular: Writing AOT-friendly applications&lt;/a&gt;.</source>
          <target state="translated">AOT 컴파일을위한 응용 프로그램 준비에 대한 추가 지침 및 지침은 &lt;a href=&quot;https://medium.com/sparkles-blog/angular-writing-aot-friendly-applications-7b64c8afbe3f&quot;&gt;Angular : AOT 친화적 응용 프로그램 작성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="915ed4227574f9e2660dbb56bb954f7e639602af" translate="yes" xml:space="preserve">
          <source>For additional options you can use when creating a component, see &lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt; in the API Reference.</source>
          <target state="translated">구성 요소를 만들 때 사용할 수있는 추가 옵션 은 API 참조의 &lt;a href=&quot;../api/core/component&quot;&gt;구성&lt;/a&gt; 요소를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d02c51c70344581110641be00d5525e6d5b83bbc" translate="yes" xml:space="preserve">
          <source>For additional recommendations and examples, see:</source>
          <target state="translated">추가 권장 사항 및 예는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ebc01cb72ab6fadd0e63d60001602e9cca6326d8" translate="yes" xml:space="preserve">
          <source>For all services, a library should use &lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;tree-shakable providers&lt;/a&gt;, providing dependencies at the root level rather than in component constructors.</source>
          <target state="translated">모든 서비스에 대해 라이브러리는 구성 요소 생성자가 아닌 루트 수준에서 종속성을 제공하는 &lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;트리 쉐이킹 가능 공급자를&lt;/a&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="95665310eee117159928a1f4cb894a3a7cd28c82" translate="yes" xml:space="preserve">
          <source>For an architectural overview of components, see &lt;a href=&quot;architecture-components&quot;&gt;Introduction to components and templates&lt;/a&gt;.</source>
          <target state="translated">구성 요소의 아키텍처 개요는 구성 &lt;a href=&quot;architecture-components&quot;&gt;요소 및 템플릿 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5f519be37c93f048158115b0ff95a3f9cb7a9d2" translate="yes" xml:space="preserve">
          <source>For an enabled &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, the values of enabled controls as an object with a key-value pair for each member of the group.</source>
          <target state="translated">활성화 된 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 경우 활성화 된 컨트롤의 값은 그룹의 각 멤버에 대한 키-값 쌍이있는 객체로 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="35fcfc95bf3f643ffc0e8e4b7a7a3e3d173e2e42" translate="yes" xml:space="preserve">
          <source>For an example app showcasing all the techniques that NgModules related pages cover, see the live example. For explanations on the individual techniques, visit the relevant NgModule pages under the NgModules section.</source>
          <target state="translated">NgModules 관련 페이지에서 다루는 모든 기술을 보여주는 예제 앱은 라이브 예제를 참조하십시오. 개별 기술에 대한 설명은 NgModules 섹션의 관련 NgModule 페이지를 방문하십시오.</target>
        </trans-unit>
        <trans-unit id="9439fadc0091afb2c4f7db52e6361412bc108c20" translate="yes" xml:space="preserve">
          <source>For an existing application, you have to manually add the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; and defining a &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; within your application.</source>
          <target state="translated">기존 응용 프로그램의 경우 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 을 수동으로 추가하고 응용 프로그램 내에서 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 정의 해야합니다.</target>
        </trans-unit>
        <trans-unit id="0dfb27895771ef6dca5967dbe2c4298ec82610d4" translate="yes" xml:space="preserve">
          <source>For an extended example, see &lt;a href=&quot;../../guide/dependency-injection-in-action#optional&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="translated">확장 된 예는 &lt;a href=&quot;../../guide/dependency-injection-in-action#optional&quot;&gt;&quot;종속성 주입 안내서&quot;를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbba5915671a316c7a339feaa343882d79960f93" translate="yes" xml:space="preserve">
          <source>For an in-depth introduction to issues and techniques for designing accessible applications, see the &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility&quot;&gt;Accessibility&lt;/a&gt; section of the Google's &lt;a href=&quot;https://developers.google.com/web/fundamentals/&quot;&gt;Web Fundamentals&lt;/a&gt;.</source>
          <target state="translated">액세스 가능한 애플리케이션을 설계하기위한 문제 및 기술에 대한 자세한 소개 는 Google &lt;a href=&quot;https://developers.google.com/web/fundamentals/&quot;&gt;웹 기본 사항&lt;/a&gt; 의 &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility&quot;&gt;접근성&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c59c3af65c0c6abf18cb803abe77a775b6440430" translate="yes" xml:space="preserve">
          <source>For an introduction to Angular with a ready-made app, see &lt;a href=&quot;start&quot;&gt;Getting Started&lt;/a&gt;. For a more in-depth experience of building an Angular app, see the &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes&lt;/a&gt; tutorial. Both guide you through using component classes and templates.</source>
          <target state="translated">미리 만들어진 앱이있는 Angular에 대한 소개는 &lt;a href=&quot;start&quot;&gt;시작하기를&lt;/a&gt; 참조하십시오 . Angular 앱 빌드에 대한보다 심층적 인 경험은 &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes&lt;/a&gt; 튜토리얼을 참조하십시오 . 둘 다 구성 요소 클래스와 템플릿을 사용하는 방법을 안내합니다.</target>
        </trans-unit>
        <trans-unit id="20e4fa49f3a933e1cf34214398c9fac00acb226b" translate="yes" xml:space="preserve">
          <source>For an overview and details about routing, see &lt;a href=&quot;router&quot;&gt;In-app navigation: routing to views&lt;/a&gt;.</source>
          <target state="translated">라우팅에 대한 개요 및 세부 정보는 &lt;a href=&quot;router&quot;&gt;인앱 탐색 :보기로 라우팅을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="02d5c37942e06265530fb10df1a081ea18901c63" translate="yes" xml:space="preserve">
          <source>For any dependency that you need in your app, you must register a provider with the app's injector, so that the injector can use the provider to create new instances. For a service, the provider is typically the service class itself.</source>
          <target state="translated">앱에 필요한 모든 종속성에 대해 인젝터가 제공자를 사용하여 새 인스턴스를 작성할 수 있도록 앱의 인젝터에 제공자를 등록해야합니다. 서비스의 경우 공급자는 일반적으로 서비스 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="c67701d2786cd41dfd846c64df92980c5c8977f5" translate="yes" xml:space="preserve">
          <source>For any unmatched cardinality, use &lt;code&gt;other {{{minutes}} minutes ago}&lt;/code&gt;. You can use HTML markup and &lt;a href=&quot;glossary#interpolation&quot;&gt;interpolations&lt;/a&gt; such as &lt;code&gt;{{{minutes}}&lt;/code&gt; with the &lt;code&gt;plural&lt;/code&gt; clause in expressions.</source>
          <target state="translated">일치하지 않는 카디널리티의 경우 &lt;code&gt;other {{{minutes}} minutes ago}&lt;/code&gt; 합니다. 표현식 에서 &lt;code&gt;plural&lt;/code&gt; 절 과 함께 &lt;code&gt;{{{minutes}}&lt;/code&gt; 와 같은 HTML 마크 업 및 &lt;a href=&quot;glossary#interpolation&quot;&gt;보간을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4cc9bd9ca012eb99d48275d26071684014874aee" translate="yes" xml:space="preserve">
          <source>For applications that do not use the Angular service worker, refreshing now would display Chrome's Internet disconnected page that says &quot;There is no Internet connection&quot;.</source>
          <target state="translated">Angular 서비스 워커를 사용하지 않는 애플리케이션의 경우 이제 새로 고침하면 &quot;인터넷에 연결되어 있지 않습니다&quot;라는 Chrome의 인터넷 연결 해제 페이지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4e085192902c042727c03a5e288669b2ed78933e" translate="yes" xml:space="preserve">
          <source>For applications that use a module loader, TypeScript imports and exports (which are really ECMAScript 2015 imports and exports) can be used to organize code into modules.</source>
          <target state="translated">모듈 로더를 사용하는 응용 프로그램의 경우 TypeScript 가져 오기 및 내보내기 (실제로 ECMAScript 2015 가져 오기 및 내보내기)를 사용하여 코드를 모듈로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82065dd0d194076720bd160e9ef4ea6f38ae23b4" translate="yes" xml:space="preserve">
          <source>For apps that run in the browser, import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; in the root &lt;code&gt;AppModule&lt;/code&gt; because it provides services that are essential to launch and run a browser app. &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;&amp;rsquo;s providers are for the whole app so it should only be in the root module, not in feature modules. Feature modules only need the common directives in &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;; they don&amp;rsquo;t need to re-install app-wide providers.</source>
          <target state="translated">브라우저에서 실행되는 앱의 경우 브라우저 앱을 시작하고 실행하는 데 필요한 서비스를 제공하므로 루트 &lt;code&gt;AppModule&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 을 가져옵니다 . &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 의 제공자는 전체 앱에 대한 것이므로 기능 모듈이 아닌 루트 모듈에만 있어야합니다. 기능 모듈은 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 의 공통 지시문 만 필요합니다 . 앱 전체 공급자를 다시 설치할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="71739e2e72f69ca13115636123c21e230580b17e" translate="yes" xml:space="preserve">
          <source>For apps that use routing</source>
          <target state="translated">라우팅을 사용하는 앱의 경우</target>
        </trans-unit>
        <trans-unit id="d6454be884bb001961f7873a56e27650c1d20938" translate="yes" xml:space="preserve">
          <source>For block code snippets, we generally prefer to display code with the Angular documentation &lt;em&gt;code-example&lt;/em&gt; component represented by the &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; tag. The &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; tag has a &lt;code&gt;header&lt;/code&gt; attribute that you use to identify the file that the example comes from. The header should be used whenever possible to establish the context of the example. See &lt;a href=&quot;docs-style-guide#code-snippets-and-code-samples&quot;&gt;Code snippets and code examples&lt;/a&gt; for more details.</source>
          <target state="translated">블록 코드 스 니펫의 경우 일반적으로 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 태그 로 표시되는 Angular 문서 &lt;em&gt;코드 예제&lt;/em&gt; 구성 요소 와 함께 코드를 표시하는 것이 좋습니다. &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 태그는이 &lt;code&gt;header&lt;/code&gt; 당신이 예에서 제공하는 파일을 식별하는 데 사용하는 속성을. 헤더는 예제의 컨텍스트를 설정하기 위해 가능할 때마다 사용해야합니다. 자세한 내용은 &lt;a href=&quot;docs-style-guide#code-snippets-and-code-samples&quot;&gt;코드 스 니펫 및 코드 예제&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="71540f69257e7ef9f20551f9d8e74cdfb9693cc2" translate="yes" xml:space="preserve">
          <source>For cases where this is unavoidable, use the built-in Angular sanitization functions. Sanitize untrusted values with the &lt;a href=&quot;../api/platform-browser/domsanitizer#sanitize&quot;&gt;DomSanitizer.sanitize&lt;/a&gt; method and the appropriate &lt;code&gt;&lt;a href=&quot;../api/core/securitycontext&quot;&gt;SecurityContext&lt;/a&gt;&lt;/code&gt;. That function also accepts values that were marked as trusted using the &lt;code&gt;bypassSecurityTrust&lt;/code&gt;... functions, and will not sanitize them, as &lt;a href=&quot;security#bypass-security-apis&quot;&gt;described below&lt;/a&gt;.</source>
          <target state="translated">이것이 불가피한 경우에는 내장 각도 살균 기능을 사용하십시오. &lt;a href=&quot;../api/platform-browser/domsanitizer#sanitize&quot;&gt;DomSanitizer.sanitize&lt;/a&gt; 메소드 및 적절한 &lt;code&gt;&lt;a href=&quot;../api/core/securitycontext&quot;&gt;SecurityContext&lt;/a&gt;&lt;/code&gt; 로 신뢰할 수없는 값을 삭제하십시오 . 이 함수는 또한 &lt;code&gt;bypassSecurityTrust&lt;/code&gt; ... 함수를 사용하여 신뢰할 수있는 것으로 표시된 값을 허용하며 &lt;a href=&quot;security#bypass-security-apis&quot;&gt;아래 설명 된대로&lt;/a&gt; 삭제하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8a39b3875e189eb4ca0c89b960bcc8cb4271675d" translate="yes" xml:space="preserve">
          <source>For comparison, the demo shows both methods. One button adds the popup using the dynamic-loading method, and the other uses the custom element. You can see that the result is the same; only the preparation is different.</source>
          <target state="translated">비교를 위해 데모는 두 가지 방법을 모두 보여줍니다. 하나의 버튼은 동적 로딩 방법을 사용하여 팝업을 추가하고 다른 하나는 사용자 정의 요소를 사용합니다. 결과가 같다는 것을 알 수 있습니다. 준비 만 다릅니다.</target>
        </trans-unit>
        <trans-unit id="3f88f6bb41248fb25551d2f1b086cb4402c8d2aa" translate="yes" xml:space="preserve">
          <source>For complete syntax details of these classes and directives, see the API reference documentation for the &lt;a href=&quot;../api/forms&quot;&gt;Forms package&lt;/a&gt;.</source>
          <target state="translated">이러한 클래스 및 지시문의 전체 구문 세부 정보는 &lt;a href=&quot;../api/forms&quot;&gt;Forms 패키지에&lt;/a&gt; 대한 API 참조 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d74527bdd74a5664d4479e5a7e305e2b2fea8f27" translate="yes" xml:space="preserve">
          <source>For context, consider setting a &lt;em&gt;single&lt;/em&gt; style value with &lt;a href=&quot;attribute-binding#style-binding&quot;&gt;style binding&lt;/a&gt;, without &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">컨텍스트의 경우 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt; 없이 &lt;a href=&quot;attribute-binding#style-binding&quot;&gt;스타일 바인딩을&lt;/a&gt; 사용하여 &lt;em&gt;단일&lt;/em&gt; 스타일 값을 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="865a0de0e84df467f2e752ab54699a7f5954a151" translate="yes" xml:space="preserve">
          <source>For context, consider setting a &lt;em&gt;single&lt;/em&gt; style value with &lt;a href=&quot;template-syntax#style-binding&quot;&gt;style binding&lt;/a&gt;, without &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">컨텍스트의 경우 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt; 없이 &lt;a href=&quot;template-syntax#style-binding&quot;&gt;style binding을&lt;/a&gt; 사용하여 &lt;em&gt;단일&lt;/em&gt; 스타일 값을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bc830cbd7287563c25d1d3389827fb12f3a8001" translate="yes" xml:space="preserve">
          <source>For custom classes or interfaces used in components or service, check whether they depend on additional classes or interfaces that also need to be migrated.</source>
          <target state="translated">컴포넌트 또는 서비스에 사용되는 사용자 정의 클래스 또는 인터페이스의 경우 마이그레이션해야하는 추가 클래스 또는 인터페이스에 의존하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3c55a614865ad2c11b1723c5f48adafb226d2339" translate="yes" xml:space="preserve">
          <source>For data or logic that isn't associated with a specific view, and that you want to share across components, you create a &lt;em&gt;service&lt;/em&gt; class. A service class definition is immediately preceded by the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator. The decorator provides the metadata that allows other providers to be &lt;strong&gt;injected&lt;/strong&gt; as dependencies into your class.</source>
          <target state="translated">특정 뷰와 관련이없고 구성 요소간에 공유하려는 데이터 또는 논리의 경우 &lt;em&gt;서비스&lt;/em&gt; 클래스 를 만듭니다 . 서비스 클래스 정의 바로 앞에 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 데코레이터가 옵니다 . 데코레이터는 다른 공급자가 클래스에 종속성으로 &lt;strong&gt;주입&lt;/strong&gt; 될 수 있도록하는 메타 데이터를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ba3f9f9ba909015786f607f654afb1de87571018" translate="yes" xml:space="preserve">
          <source>For detailed information and guidance on updating your application, see the interactive &lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular Update Guide&lt;/a&gt;.</source>
          <target state="translated">애플리케이션 업데이트에 대한 자세한 정보 및 지침은 대화식 &lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular 업데이트 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3c0f77845d6547228c1544a3261cba4f83b3a74" translate="yes" xml:space="preserve">
          <source>For detailed usage information, see the &lt;a href=&quot;../../guide/router&quot;&gt;Routing Guide&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../guide/router&quot;&gt;라우팅 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1475c5e9774d7a4a828ca68604b8f34d2642f0e" translate="yes" xml:space="preserve">
          <source>For details about &lt;code&gt;tsconfig.json&lt;/code&gt;, see the official &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript wiki&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tsconfig.json&lt;/code&gt; 에 대한 자세한 내용은 공식 &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript 위키를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4bab4f7c1f186fde5dd33b6553841cab367c91c7" translate="yes" xml:space="preserve">
          <source>For details about changes between versions, and information about updating from previous releases, see the Releases tab on GitHub: &lt;a href=&quot;https://github.com/angular/angular-cli/releases&quot;&gt;https://github.com/angular/angular-cli/releases&lt;/a&gt;</source>
          <target state="translated">버전 간 변경 사항 및 이전 릴리스에서의 업데이트에 대한 자세한 내용은 GitHub의 릴리스 탭을 참조하십시오 : &lt;a href=&quot;https://github.com/angular/angular-cli/releases&quot;&gt;https://github.com/angular/angular-cli/releases&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e63b761bd397b9e0a41fef4446be9d3b1c81c47d" translate="yes" xml:space="preserve">
          <source>For details and examples of observables, see the &lt;a href=&quot;observables#using-observables-to-pass-values&quot;&gt;Observables Overview&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;observables#using-observables-to-pass-values&quot;&gt;Observable에&lt;/a&gt; 대한 자세한 내용과 예는 Observable 개요를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="23766cd9b30ec2bf351ff63c0849a0f6f387aa95" translate="yes" xml:space="preserve">
          <source>For details of these data structure and syntax, see the &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/schematics/README.md&quot;&gt;Schematics README&lt;/a&gt;.</source>
          <target state="translated">이러한 데이터 구조 및 구문에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/schematics/README.md&quot;&gt;회로도 README를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93b37340edf7cde32ae7341cddf3d85aac197396" translate="yes" xml:space="preserve">
          <source>For details of these data structures and syntax, see the &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/schematics/README.md&quot;&gt;Schematics README&lt;/a&gt;.</source>
          <target state="translated">이러한 데이터 구조 및 구문에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/schematics/README.md&quot;&gt;Schematics README를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50bba4b2e5141d8b8d63c6d75498a89b5c45b766" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;../../guide/deprecations#ngmodel-with-reactive-forms&quot;&gt;Deprecated features&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 더 이상 &lt;a href=&quot;../../guide/deprecations#ngmodel-with-reactive-forms&quot;&gt;사용되지 않는 기능을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="541fccad9c0f3d4d19e2c625af6f980747075926" translate="yes" xml:space="preserve">
          <source>For each aspect of style, the following table explains where to find the primary guidelines and what this Angular Documentation Style Guide offers.</source>
          <target state="translated">스타일의 각 측면에 대해 다음 표는 기본 지침을 찾을 수있는 위치와이 Angular Documentation Style Guide에서 제공하는 내용을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a0e64be003f64e5e53c53df41839088c920fc00a" translate="yes" xml:space="preserve">
          <source>For each component listed here, Angular creates a &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; and stores it in the &lt;code&gt;&lt;a href=&quot;componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">여기에 나열된 각 구성 요소에 대해, 각도는 생성 &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 과에 저장이 &lt;code&gt;&lt;a href=&quot;componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="add8347c026ab345310af632fb1bca00afd1317e" translate="yes" xml:space="preserve">
          <source>For each match:</source>
          <target state="translated">각 경기마다 :</target>
        </trans-unit>
        <trans-unit id="6b06187ade59dfe6abfc2250cd1459d4dbed3837" translate="yes" xml:space="preserve">
          <source>For each of these elements, use &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; to set the same initial style for the element. Make it invisible and use &lt;code&gt;transform&lt;/code&gt; to move it out of position so that it can slide into place.</source>
          <target state="translated">이러한 각 요소에 대해 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 을 사용하여 요소 의 동일한 초기 스타일을 설정하십시오. 그것을 보이지 않게하고 &lt;code&gt;transform&lt;/code&gt; 을 사용 하여 제자리로 밀어 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="296a1f382667ab3a9cb177eb53e0592ff7e4bf62" translate="yes" xml:space="preserve">
          <source>For each translation source file, there must be at least one language translation file for the resulting translation.</source>
          <target state="translated">각 번역 소스 파일마다 번역 결과에 대해 하나 이상의 언어 번역 파일이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f475cf41b7700ea33baa6ae4dbc1042f33b1e212" translate="yes" xml:space="preserve">
          <source>For elements entering or leaving a page (inserted or removed from the DOM), you can make the animations conditional. For example, use &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; with the animation trigger in the HTML template.</source>
          <target state="translated">DOM에 삽입 또는 제거 된 페이지에 들어가거나 나가는 요소의 경우 애니메이션을 조건부로 만들 수 있습니다. 예를 들어 HTML 템플릿에서 애니메이션 트리거와 함께 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="33c47e78379e5f8c12f7ffa6ef6ee132951e2a7d" translate="yes" xml:space="preserve">
          <source>For event binding, define the name of the target event within parenthesis and specify a template statement, in quotes, to the right of the equals. Angular then sets up an event handler for the target event. When the event is raised, the handler executes the template statement.</source>
          <target state="translated">이벤트 바인딩의 경우 괄호 안에 대상 이벤트의 이름을 정의하고 등호 오른쪽에 따옴표로 템플릿 명령문을 지정하십시오. 그런 다음 Angular는 대상 이벤트에 대한 이벤트 핸들러를 설정합니다. 이벤트가 발생하면 핸들러는 템플리트 명령문을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d7b7cbd57eaa134c7d6bdd77cb83b62a700f7de3" translate="yes" xml:space="preserve">
          <source>For event handling:</source>
          <target state="translated">이벤트 처리의 경우 :</target>
        </trans-unit>
        <trans-unit id="e9f25525aed49da6509dcc93159089fed66c4a10" translate="yes" xml:space="preserve">
          <source>For every Angular component you write, you may define not only an HTML template, but also the CSS styles that go with that template, specifying any selectors, rules, and media queries that you need.</source>
          <target state="translated">작성하는 모든 Angular 구성 요소에 대해 HTML 템플릿뿐만 아니라 해당 템플릿과 함께 제공되는 CSS 스타일을 정의하여 필요한 선택기, 규칙 및 미디어 쿼리를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="64846a4daf1651f79ed90a6fabbd80e4077eeb81" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&quot;&gt;ARIA&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;SVG&lt;/a&gt; are purely attributes. Neither ARIA nor SVG correspond to element properties and don't set element properties. In these cases, you must use attribute binding because there are no corresponding property targets.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&quot;&gt;ARIA&lt;/a&gt; 와 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;SVG&lt;/a&gt; 는 순전히 속성입니다. ARIA와 SVG는 요소 속성에 해당하지 않으며 요소 속성을 설정하지 않습니다. 이러한 경우 해당 속성 대상이 없기 때문에 특성 바인딩을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d6913e010e0058aed0de321b5d366d10bad9a9e" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/browser&quot;&gt;BrowserBuilder&lt;/a&gt; runs a &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; build for a browser target and &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/karma&quot;&gt;KarmaBuilder&lt;/a&gt; starts the Karma server and runs a webpack build for unit tests.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/browser&quot;&gt;BrowserBuilder는&lt;/a&gt; 실행 &lt;a href=&quot;https://webpack.js.org/&quot;&gt;웹팩&lt;/a&gt; 브라우저 대상에 대한 빌드를하고 &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/karma&quot;&gt;KarmaBuilder은&lt;/a&gt; 카르마 서버를 시작하고 단위 테스트에 대한 웹팩 빌드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="80491223b62ca89010c42d30ab7078fdf403f816" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;HeroListComponent&lt;/code&gt; has a &lt;code&gt;heroes&lt;/code&gt; property that holds an array of heroes. Its &lt;code&gt;selectHero()&lt;/code&gt; method sets a &lt;code&gt;selectedHero&lt;/code&gt; property when the user clicks to choose a hero from that list. The component acquires the heroes from a service, which is a TypeScript &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/classes.html#parameter-properties&quot;&gt;parameter property&lt;/a&gt; on the constructor. The service is provided to the component through the dependency injection system.</source>
          <target state="translated">예를 들어 &lt;code&gt;HeroListComponent&lt;/code&gt; 에는 여러 &lt;code&gt;heroes&lt;/code&gt; 을 보유하는 heroes 속성이 있습니다. 그 &lt;code&gt;selectHero()&lt;/code&gt; 메소드는 설정 &lt;code&gt;selectedHero&lt;/code&gt; 의 사용자가 클릭이 그 목록에서 영웅을 선택하는 속성을. 구성 요소는 생성자에서 TypeScript &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/classes.html#parameter-properties&quot;&gt;매개 변수 속성 인&lt;/a&gt; 서비스에서 영웅을 가져옵니다 . 서비스는 의존성 주입 시스템을 통해 컴포넌트에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c97fe9267c0fc6f8e4a6fc2563ffa220e6058388" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;{{today | &lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;}}&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; to display the current date in the format for the locale in &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;{{today | &lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;}}&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; 를 사용 하여 &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 의 로케일 형식으로 현재 날짜를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="b6aa917da6b6eeb1890dd5111f497f98b6683379" translate="yes" xml:space="preserve">
          <source>For example, Angular can inject &lt;code&gt;HeroListComponent&lt;/code&gt; with both the &lt;code&gt;HeroService&lt;/code&gt; provided in &lt;code&gt;HeroComponent&lt;/code&gt; and the &lt;code&gt;UserService&lt;/code&gt; provided in &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 각도는 주입 수 &lt;code&gt;HeroListComponent&lt;/code&gt; 을 양으로 &lt;code&gt;HeroService&lt;/code&gt; 제공 &lt;code&gt;HeroComponent&lt;/code&gt; 및 &lt;code&gt;UserService&lt;/code&gt; 제공 &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82d24ea45789f45e5fa4e90e30c668abcffbfce7" translate="yes" xml:space="preserve">
          <source>For example, a built-in builder for linting is defined in the package &lt;code&gt;@angular-devkit/build_angular:tslint&lt;/code&gt;, which uses the &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; tool to perform linting, with a configuration specified in a &lt;code&gt;tslint.json&lt;/code&gt; file.</source>
          <target state="translated">예를 들어, linting 용 내장 빌더는 &lt;code&gt;@angular-devkit/build_angular:tslint&lt;/code&gt; 패키지에 정의 되어 있으며 &lt;code&gt;tslint.json&lt;/code&gt; 파일에 지정된 구성으로 &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; 도구를 사용하여 linting 을 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="732fad8249ef09aa9ab6fe01f4372cc002fca1c2" translate="yes" xml:space="preserve">
          <source>For example, a transition of &lt;code&gt;open =&amp;gt; *&lt;/code&gt; applies when the element's state changes from open to anything else.</source>
          <target state="translated">예를 들어, 요소의 상태가 열린 상태에서 다른 것으로 바뀌면 &lt;code&gt;open =&amp;gt; *&lt;/code&gt; 의 전환이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="25f66f9c3ad7f2808ac5ea2976e1fc3d55ba5553" translate="yes" xml:space="preserve">
          <source>For example, an editing component that needs a private copy of a caching service should register the service with the component. Then each new instance of the component gets its own cached service instance. The changes that editor makes in its service don't touch the instances elsewhere in the application.</source>
          <target state="translated">예를 들어, 캐싱 서비스의 개인 복사본이 필요한 편집 구성 요소는 구성 요소에 서비스를 등록해야합니다. 그런 다음 구성 요소의 각 새 인스턴스는 자체 캐시 서비스 인스턴스를 가져옵니다. 에디터가 서비스에서 변경 한 내용은 애플리케이션의 다른 곳에서 인스턴스를 건드리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="739cb885493d2787dba9c93f52ae62f7f74aeac8" translate="yes" xml:space="preserve">
          <source>For example, consider the following component:</source>
          <target state="translated">예를 들어 다음 구성 요소를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="77309a0ead13cf82a0f2d21ff03d6d13581cbf6a" translate="yes" xml:space="preserve">
          <source>For example, consider the following function:</source>
          <target state="translated">예를 들어 다음 기능을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="dc3716dac11d8351ec07f6539fd77189eac41acb" translate="yes" xml:space="preserve">
          <source>For example, consider the following route configuration where the parent route has two children.</source>
          <target state="translated">예를 들어, 상위 라우트에 두 개의 하위가있는 다음 라우트 구성을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="163884b6df506f156f5b1d477193ccc54d78cbb8" translate="yes" xml:space="preserve">
          <source>For example, consider the following structural directive that takes the result of a template expression as an input.</source>
          <target state="translated">예를 들어 템플릿 표현식의 결과를 입력으로 사용하는 다음 구조 지시문을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="b4f0c5afbbac2af41a81085ea8ed62d709c36ddc" translate="yes" xml:space="preserve">
          <source>For example, for the default &lt;code&gt;en-US&lt;/code&gt; locale, the code &lt;code&gt;USD&lt;/code&gt; can be represented by the narrow symbol &lt;code&gt;$&lt;/code&gt; or the wide symbol &lt;code&gt;US$&lt;/code&gt;.</source>
          <target state="translated">예를 들어 기본 &lt;code&gt;en-US&lt;/code&gt; 로캘의 경우 &lt;code&gt;USD&lt;/code&gt; 코드 는 좁은 기호 &lt;code&gt;$&lt;/code&gt; 또는 넓은 기호 &lt;code&gt;US$&lt;/code&gt; 로 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fe7e7470440d10c52ecb62d35898eb8bd34b72a" translate="yes" xml:space="preserve">
          <source>For example, for the following &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 의 경우 :</target>
        </trans-unit>
        <trans-unit id="c8c075f684e624819ce3836008614ddc832ae598" translate="yes" xml:space="preserve">
          <source>For example, here is a template for the Tutorial's &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 다음은 Tutorial 's &lt;code&gt;HeroListComponent&lt;/code&gt; 의 템플리트 입니다.</target>
        </trans-unit>
        <trans-unit id="f7d374a42c5f5fe49eb168676c53d91a5eaeede6" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;&amp;lt;child-comp&amp;gt;&lt;/code&gt; is used in the template of &lt;code&gt;&amp;lt;app-comp&amp;gt;&lt;/code&gt; (i.e. a &lt;code&gt;&lt;a href=&quot;../viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;&amp;lt;app-comp&amp;gt;&lt;/code&gt;), calling &lt;code&gt;&lt;a href=&quot;nggetowningcomponent&quot;&gt;getOwningComponent&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;&amp;lt;child-comp&amp;gt;&lt;/code&gt; would return &lt;code&gt;&amp;lt;app-comp&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;&amp;lt;child-comp&amp;gt;&lt;/code&gt; 의 템플릿에 사용되는 &lt;code&gt;&amp;lt;app-comp&amp;gt;&lt;/code&gt; (즉, &lt;code&gt;&lt;a href=&quot;../viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&amp;lt;app-comp&amp;gt;&lt;/code&gt; ), 전화 &lt;code&gt;&lt;a href=&quot;nggetowningcomponent&quot;&gt;getOwningComponent&lt;/a&gt;&lt;/code&gt; 을 에 &lt;code&gt;&amp;lt;child-comp&amp;gt;&lt;/code&gt; 반환 &lt;code&gt;&amp;lt;app-comp&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2e19d8eb336050f68c2bb9a3922d55c9619e32e" translate="yes" xml:space="preserve">
          <source>For example, if a library uses the &lt;code&gt;public_api.ts&lt;/code&gt; file as the library index of the module, the &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;code&gt;files&lt;/code&gt; field would be &lt;code&gt;[&quot;public_api.ts&quot;]&lt;/code&gt;. The &lt;code&gt;flatModuleOutFile&lt;/code&gt; option could then be set to (for example) &lt;code&gt;&quot;index.js&quot;&lt;/code&gt;, which produces &lt;code&gt;index.d.ts&lt;/code&gt; and &lt;code&gt;index.metadata.json&lt;/code&gt; files. The &lt;code&gt;module&lt;/code&gt; field of the library's &lt;code&gt;package.json&lt;/code&gt; would be &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; and the &lt;code&gt;typings&lt;/code&gt; field would be &lt;code&gt;&quot;index.d.ts&quot;&lt;/code&gt;.</source>
          <target state="translated">예를 들어 라이브러리가 &lt;code&gt;public_api.ts&lt;/code&gt; 파일을 모듈의 라이브러리 색인으로 사용하는 경우 &lt;code&gt;tsconfig.json&lt;/code&gt; &lt;code&gt;files&lt;/code&gt; 필드는 &lt;code&gt;[&quot;public_api.ts&quot;]&lt;/code&gt; 입니다. &lt;code&gt;flatModuleOutFile&lt;/code&gt; 의 옵션은 다음 (예를 들어)로 설정 될 수있다 &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; 생산 &lt;code&gt;index.d.ts&lt;/code&gt; 및 &lt;code&gt;index.metadata.json&lt;/code&gt; 파일을. &lt;code&gt;module&lt;/code&gt; 라이브러리의 분야 &lt;code&gt;package.json&lt;/code&gt; 이 될 것이다 &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; 와 &lt;code&gt;typings&lt;/code&gt; 의 필드 것 &lt;code&gt;&quot;index.d.ts&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a7d61883c2231b9e61654a0869917789d9575c0" translate="yes" xml:space="preserve">
          <source>For example, if a library uses the &lt;code&gt;public_api.ts&lt;/code&gt; file as the library index of the module, the &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;code&gt;files&lt;/code&gt; field would be &lt;code&gt;[&quot;public_api.ts&quot;]&lt;/code&gt;. The &lt;code&gt;flatModuleOutFile&lt;/code&gt; options could then be set to (for example) &lt;code&gt;&quot;index.js&quot;&lt;/code&gt;, which produces &lt;code&gt;index.d.ts&lt;/code&gt; and &lt;code&gt;index.metadata.json&lt;/code&gt; files. The &lt;code&gt;module&lt;/code&gt; field of the library's &lt;code&gt;package.json&lt;/code&gt; would be &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; and the &lt;code&gt;typings&lt;/code&gt; field would be &lt;code&gt;&quot;index.d.ts&quot;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 라이브러리가 &lt;code&gt;public_api.ts&lt;/code&gt; 파일을 모듈의 라이브러리 색인으로 사용하는 경우 &lt;code&gt;tsconfig.json&lt;/code&gt; &lt;code&gt;files&lt;/code&gt; 필드는 &lt;code&gt;[&quot;public_api.ts&quot;]&lt;/code&gt; 입니다. &lt;code&gt;flatModuleOutFile&lt;/code&gt; 의 옵션은 다음 (예를 들어)로 설정 될 수있다 &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; 생산 &lt;code&gt;index.d.ts&lt;/code&gt; 및 &lt;code&gt;index.metadata.json&lt;/code&gt; 파일을. &lt;code&gt;module&lt;/code&gt; 라이브러리의 분야 &lt;code&gt;package.json&lt;/code&gt; 이 될 것이다 &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; 와 &lt;code&gt;typings&lt;/code&gt; 의 필드 것 &lt;code&gt;&quot;index.d.ts&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b81a21f01e25a665c1c9400ac1c5b89dc572aa7b" translate="yes" xml:space="preserve">
          <source>For example, if the French version of your application is served from &lt;a href=&quot;https://example.com/fr/&quot;&gt;https://example.com/fr/&lt;/a&gt;, configure the build for the French version as follows.</source>
          <target state="translated">예를 들어, 프랑스어 버전의 애플리케이션이 &lt;a href=&quot;https://example.com/fr/&quot;&gt;https://example.com/fr/&lt;/a&gt; 에서 제공되는 경우 다음과 같이 프랑스어 버전의 빌드를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="a33aa4930d3aff657073486b8fed408d9c29db44" translate="yes" xml:space="preserve">
          <source>For example, if you need the optional &lt;a href=&quot;http://caniuse.com/#feat=web-animation&quot;&gt;web animations polyfill&lt;/a&gt;, you could install it with &lt;code&gt;npm&lt;/code&gt;, using the following command (or the &lt;code&gt;yarn&lt;/code&gt; equivalent):</source>
          <target state="translated">예를 들어 선택적 &lt;a href=&quot;http://caniuse.com/#feat=web-animation&quot;&gt;웹 애니메이션 polyfill&lt;/a&gt; 이 필요한 경우 다음 명령 (또는 &lt;code&gt;yarn&lt;/code&gt; 등가)을 사용하여 &lt;code&gt;npm&lt;/code&gt; 으로 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95083c2fd11c6199fc648161739de794a4b15381" translate="yes" xml:space="preserve">
          <source>For example, if you want to display &quot;updated x minutes ago&quot; in English, you may want to display &quot;just now&quot;, &quot;one minute ago&quot;, or &quot;&lt;em&gt;x&lt;/em&gt; minutes ago&quot; (with &lt;em&gt;x&lt;/em&gt; as the actual number). Other languages might express this cardinality differently. The following example shows how to use a &lt;code&gt;plural&lt;/code&gt; clause to express these three options:</source>
          <target state="translated">예를 들어, &quot;업데이트 된 x 분 전&quot;을 영어로 표시하려는 경우 &quot;지금 바로&quot;, &quot;1 분 전&quot;또는 &quot; &lt;em&gt;x&lt;/em&gt; 분 전&quot;( 실제 숫자 는 &lt;em&gt;x 포함)&lt;/em&gt; 을 표시 할 수 있습니다. 다른 언어에서는이 카디널리티를 다르게 표현할 수 있습니다. 다음 예제는 이러한 세 가지 옵션을 표현 하기 위해 &lt;code&gt;plural&lt;/code&gt; 절을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c22fe616dc591e5618b6ef992b62f4f3ae8f9bf5" translate="yes" xml:space="preserve">
          <source>For example, imagine a hero detail AngularJS component directive with one input and one output:</source>
          <target state="translated">예를 들어, 하나의 입력과 하나의 출력을 가진 hero detail AngularJS 컴포넌트 지시어를 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="dea9c6dce500b3e0d200a2b15748917a4a901388" translate="yes" xml:space="preserve">
          <source>For example, imagine the following scenario:</source>
          <target state="translated">예를 들어 다음 시나리오를 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="9497ba845db03e6deeadaf9eeb58a4e88d893d5f" translate="yes" xml:space="preserve">
          <source>For example, import Angular's &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator from the &lt;code&gt;@angular/core&lt;/code&gt; library like this.</source>
          <target state="translated">예를 들어, &lt;code&gt;@angular/core&lt;/code&gt; 라이브러리 에서 Angular의 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 데코레이터를 이와 같이 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2c9480456f714aaa0550fa7da62cd14883843469" translate="yes" xml:space="preserve">
          <source>For example, in the following &lt;code&gt;SelfComponent&lt;/code&gt;, notice the injected &lt;code&gt;LeafService&lt;/code&gt; in the constructor.</source>
          <target state="translated">예를 들어, 다음 &lt;code&gt;SelfComponent&lt;/code&gt; 에서 생성자에 삽입 된 &lt;code&gt;LeafService&lt;/code&gt; 를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c5696ae2b929700754d98105e027963bf2785ee3" translate="yes" xml:space="preserve">
          <source>For example, in the following code the same custom ID &lt;code&gt;myId&lt;/code&gt; is defined for two different text elements:</source>
          <target state="translated">예를 들어 다음 코드에서는 두 개의 다른 텍스트 요소에 대해 동일한 사용자 지정 ID &lt;code&gt;myId&lt;/code&gt; 가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8428be5de3c94ec35c0505f75175025745d09917" translate="yes" xml:space="preserve">
          <source>For example, instead of creating a custom element for a new variety of button, you can create a component that uses an attribute selector with a native &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element. This most commonly applies to &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt;, but can be used with many other types of element.</source>
          <target state="translated">예를 들어, 다양한 새 버튼에 대한 사용자 정의 요소를 작성하는 대신 기본 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 요소 와 함께 속성 선택기를 사용하는 컴포넌트를 작성할 수 있습니다 . 이것은 가장 일반적으로 적용 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; 하지만, 요소의 많은 다른 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55b0f34dfe729d411d95a75e3e680366ac701172" translate="yes" xml:space="preserve">
          <source>For example, instead of creating a custom element for a new variety of button, you can create a component that uses an attribute selector with a native &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element. This most commonly applies to &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, but can be used with many other types of element.</source>
          <target state="translated">예를 들어 다양한 버튼에 대한 사용자 지정 요소를 만드는 대신 기본 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 요소 와 함께 속성 선택기를 사용하는 구성 요소를 만들 수 있습니다 . 이것은 가장 일반적으로 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 에 적용되지만 다른 많은 유형의 요소와 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc0eca467862c90d9efa8e862b3587a8516e1e51" translate="yes" xml:space="preserve">
          <source>For example, it is &lt;em&gt;OK&lt;/em&gt; to use a downgraded service in an upgraded component that is only used from a downgraded Angular component provided by the same Angular module as the injectable, but it is &lt;em&gt;not OK&lt;/em&gt; to use it in an AngularJS component that may be used independently of Angular or use it in a downgraded Angular component from a different module.</source>
          <target state="translated">예를 들어, 인 &lt;em&gt;OK&lt;/em&gt; 단지에서 사용되는 업그레이드 된 구성 요소의 하향 서비스를 사용하는 주사와 같은 각도 모듈에 의해 제공되는 각도 컴포넌트 하향 있지만는 &lt;em&gt;OK하지&lt;/em&gt; AngularJS와 성분 사용될 수 있음을 사용하여 Angular와 독립적으로 사용하거나 다른 모듈에서 다운 그레이드 된 Angular 구성 요소에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a530aeb597282a353eb4d4d6d60ae2538af8352d" translate="yes" xml:space="preserve">
          <source>For example, server-side applications can't reference browser-only global objects such as &lt;code&gt;window&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;navigator&lt;/code&gt;, or &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 서버 측 애플리케이션은 &lt;code&gt;window&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;navigator&lt;/code&gt; 또는 &lt;code&gt;location&lt;/code&gt; 과 같은 브라우저 전용 글로벌 오브젝트를 참조 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7a3073a3c95a0c75c3265361f53b8e883aa52c4b" translate="yes" xml:space="preserve">
          <source>For example, server-side applications can't reference browser-only global objects such as &lt;code&gt;window&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt;, &lt;code&gt;navigator&lt;/code&gt;, or &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="translated">예를 들어 서버 측 애플리케이션은 &lt;code&gt;window&lt;/code&gt; , &lt;code&gt;document&lt;/code&gt; , &lt;code&gt;navigator&lt;/code&gt; 또는 &lt;code&gt;location&lt;/code&gt; 과 같은 브라우저 전용 전역 개체를 참조 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="51c9d0d42d97cb3dc764d10dcc6d02499fe9694c" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;HeroService&lt;/code&gt; must hide &lt;em&gt;secret&lt;/em&gt; heroes from normal users. Only authorized users should see secret heroes.</source>
          <target state="translated">예를 들어 &lt;code&gt;HeroService&lt;/code&gt; 가 일반 사용자로부터 &lt;em&gt;비밀&lt;/em&gt; 영웅을 숨겨야 한다고 가정 하십시오 . 승인 된 사용자 만 비밀의 영웅을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b4cc94083c8a1f80c798bd5b2740e8280186eba" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a library named &lt;code&gt;d3&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;d3&lt;/code&gt; 이라는 라이브러리가 있다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="9cf9a7d912b31fc9ca8f7e31178ff59413bd7823" translate="yes" xml:space="preserve">
          <source>For example, suppose you want the code base to have a minimum of 80% code coverage. To enable this, open the &lt;a href=&quot;https://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt; test platform configuration file, &lt;code&gt;karma.conf.js&lt;/code&gt;, and add the following in the &lt;code&gt;coverageIstanbulReporter:&lt;/code&gt; key.</source>
          <target state="translated">예를 들어, 코드베이스가 최소 80 %의 코드 적용 범위를 갖기를 원한다고 가정하십시오. 이를 가능하게하려면 &lt;a href=&quot;https://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt; 테스트 플랫폼 구성 파일 &lt;code&gt;karma.conf.js&lt;/code&gt; 를 열고 &lt;code&gt;coverageIstanbulReporter:&lt;/code&gt; 키에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="50af682ddaaa55b01d052b01aa7cf905686b0845" translate="yes" xml:space="preserve">
          <source>For example, suppose you want to update the Angular Material library.</source>
          <target state="translated">예를 들어 Angular Material 라이브러리를 업데이트한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="8c1ddb2e15f1cddcbdbcc32d6cc7eb48668f91d9" translate="yes" xml:space="preserve">
          <source>For example, the &quot;serve&quot; target for a newly generated app has a predefined alternate configuration named &quot;production&quot;.</source>
          <target state="translated">예를 들어, 새로 생성 된 앱의 &quot;serve&quot;대상에는 &quot;production&quot;이라는 사전 정의 된 대체 구성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc73b8c8adf28b76d8cfa49ae3ca83692737c35f" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;https://material.angular.io/guide/schematics&quot;&gt;&lt;code&gt;@angular/material&lt;/code&gt;&lt;/a&gt; schematic tells the &lt;code&gt;add&lt;/code&gt; command to install and set up Angular Material and theming, and register new starter components that can be created with &lt;code&gt;ng generate&lt;/code&gt;. You can look at this one as an example and model for your own add schematic.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;https://material.angular.io/guide/schematics&quot;&gt; &lt;code&gt;@angular/material&lt;/code&gt; &lt;/a&gt; 스키 매틱은 &lt;code&gt;add&lt;/code&gt; 명령에 Angular Material 및 테마를 설치 및 설정하고 &lt;code&gt;ng generate&lt;/code&gt; 로 만들 수있는 새 시작 구성 요소를 등록하도록 지시합니다 . 이것을 자신의 추가 회로도의 예제 및 모델로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d9d77074ce47a9713707b5be8d6e8b7b21a5a67" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; implementation uses type-narrowing to ensure that the template is only instantiated if the input expression to &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; is truthy. To provide the specific type requirement, the &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; directive defines a &lt;a href=&quot;../api/common/ngif#static-properties&quot;&gt;static property &lt;code&gt;ngTemplateGuard_ngIf: 'binding'&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;binding&lt;/code&gt; value is a special case for a common kind of type-narrowing where the input expression is evaluated in order to satisfy the type requirement.</source>
          <target state="translated">예를 들어, &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 구현은 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 에 대한 입력 표현식 이 진실 인 경우에만 템플릿이 인스턴스화되도록 유형 축소를 사용합니다 . 특정 유형 요구 사항을 제공하기 위해 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 지시문은 &lt;a href=&quot;../api/common/ngif#static-properties&quot;&gt;정적 속성 &lt;code&gt;ngTemplateGuard_ngIf: 'binding'&lt;/code&gt; &lt;/a&gt; 정의합니다 . &lt;code&gt;binding&lt;/code&gt; 값은 상기 입력 표현이 입력 요구 사항을 충족하기 위해 평가 형 축소의 일반적인 종류의 특별한 경우이다.</target>
        </trans-unit>
        <trans-unit id="393506af74b2bea04fe484736e479a8151fdccd0" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;LibCardComponent&lt;/code&gt; now queries &lt;code&gt;LibHeaderToken&lt;/code&gt; rather than &lt;code&gt;LibHeaderComponent&lt;/code&gt;. The following example shows how the pattern allows &lt;code&gt;LibCardComponent&lt;/code&gt; to communicate with the &lt;code&gt;LibHeaderComponent&lt;/code&gt; without actually referring to &lt;code&gt;LibHeaderComponent&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;LibCardComponent&lt;/code&gt; 는 이제 &lt;code&gt;LibHeaderToken&lt;/code&gt; 대신 &lt;code&gt;LibHeaderComponent&lt;/code&gt; 쿼리합니다 . 패턴에서 허용 방법 다음 예제 프로그램 &lt;code&gt;LibCardComponent&lt;/code&gt; 가 와 통신 할 &lt;code&gt;LibHeaderComponent&lt;/code&gt; 실제로 참조하지 않고 &lt;code&gt;LibHeaderComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67592c68e2ac00ea2d43029031e1ca81f42456e3" translate="yes" xml:space="preserve">
          <source>For example, the Architect builder invoked by the &lt;code&gt;ng build&lt;/code&gt; command to compile a project uses a particular build tool, and has a default configuration whose values can be overridden on the command line. The &lt;code&gt;build&lt;/code&gt; target also defines an alternate configuration for a &quot;production&quot; build, that can be invoked with the &lt;code&gt;--prod&lt;/code&gt; flag on the &lt;code&gt;build&lt;/code&gt; command.</source>
          <target state="translated">예를 들어, 프로젝트를 컴파일하기 &lt;code&gt;ng build&lt;/code&gt; 명령으로 호출 된 Architect 빌더 는 특정 빌드 도구를 사용하며 명령 행에서 값을 대체 할 수있는 기본 구성을 갖습니다. &lt;code&gt;build&lt;/code&gt; 대상도 호출 할 수있는 &quot;생산&quot;빌드에 대한 대체 구성을 정의 &lt;code&gt;--prod&lt;/code&gt; 온 플래그 &lt;code&gt;build&lt;/code&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="456036b268aa96f0d5baa4b16b7b44a79b22f13f" translate="yes" xml:space="preserve">
          <source>For example, the collector can evaluate the expression &lt;code&gt;1 + 2 + 3 + 4&lt;/code&gt; and replace it with the result, &lt;code&gt;10&lt;/code&gt;. This process is called &lt;em&gt;folding&lt;/em&gt;. An expression that can be reduced in this manner is &lt;em&gt;foldable&lt;/em&gt;.</source>
          <target state="translated">예를 들어 콜렉터는 표현식 &lt;code&gt;1 + 2 + 3 + 4&lt;/code&gt; 평가하고 이를 결과 &lt;code&gt;10&lt;/code&gt; 으로 대체 할 수 있습니다 . 이 과정을 &lt;em&gt;접기&lt;/em&gt; 라고 합니다. 이런 식으로 줄일 수있는 표현은 &lt;em&gt;접을 수&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f7aeac99d50d45ab995bb01629c8d23060ea8aa" translate="yes" xml:space="preserve">
          <source>For example, the component might render first on the server as part of a strategy to make the application launch faster on poorly connected devices. The server-side renderer might not support the full HTML element API. If it doesn't support &lt;code&gt;querySelector&lt;/code&gt;, the previous test could fail.</source>
          <target state="translated">예를 들어, 연결이 제대로되지 않은 장치에서 응용 프로그램을 더 빨리 시작하기위한 전략의 일부로 구성 요소가 서버에서 먼저 렌더링 될 수 있습니다. 서버 측 렌더러가 전체 HTML 요소 API를 지원하지 않을 수 있습니다. &lt;code&gt;querySelector&lt;/code&gt; 를 지원하지 않으면 이전 테스트가 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb48f3cec557aac01648a938091dba4a6beb45dc" translate="yes" xml:space="preserve">
          <source>For example, the default asset paths can be represented in more detail using the following objects.</source>
          <target state="translated">예를 들어, 기본 자산 경로는 다음 객체를 사용하여 더 자세하게 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8255172101d39bb3c820960546e4442edf1ab2e9" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag displays a simple English language greeting, &quot;Hello i18n!&quot;</source>
          <target state="translated">예를 들어 다음 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 태그는 간단한 영어 인사말 &quot;Hello i18n!&quot;을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="ef9fd37dd42bb3ceaffed96656df1ed72a8779fa" translate="yes" xml:space="preserve">
          <source>For example, the following CLI command generates a &lt;code&gt;BannerComponent&lt;/code&gt; in the &lt;code&gt;app/banner&lt;/code&gt; folder (with inline template and styles):</source>
          <target state="translated">예를 들어 다음 CLI 명령 은 &lt;code&gt;app/banner&lt;/code&gt; 폴더에 인라인 템플릿 및 스타일 로 &lt;code&gt;BannerComponent&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="2dfbc385f5e6ab8f42e3708b03af4cef9163f33a" translate="yes" xml:space="preserve">
          <source>For example, the following code declares the target of &lt;code&gt;childItem&lt;/code&gt; in its component class, in this case &lt;code&gt;ItemDetailComponent&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 다음 코드의 대상 선언 &lt;code&gt;childItem&lt;/code&gt; 이 경우에, 그 구성 요소 클래스에 &lt;code&gt;ItemDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e517bddb93ce781c7476fd73f84439d73846cfb" translate="yes" xml:space="preserve">
          <source>For example, the following command automatically deploys a project to Firebase.</source>
          <target state="translated">예를 들어 다음 명령은 프로젝트를 Firebase에 자동으로 배포합니다.</target>
        </trans-unit>
        <trans-unit id="d8927bb5a286f843d8058d130909cac403f48606" translate="yes" xml:space="preserve">
          <source>For example, the following command generates an NgModule that can use routing.</source>
          <target state="translated">예를 들어 다음 명령은 라우팅을 사용할 수있는 NgModule을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fe01aacfb5897063089e409dc67dddc872264473" translate="yes" xml:space="preserve">
          <source>For example, the following excerpt of an &lt;code&gt;angular.json&lt;/code&gt; file sets the source locale to &lt;code&gt;en-US&lt;/code&gt; and provides the path to the &lt;code&gt;fr&lt;/code&gt; (French) locale translation file:</source>
          <target state="translated">예를 들어, &lt;code&gt;angular.json&lt;/code&gt; 파일 의 다음 발췌 부분은 소스 로케일을 &lt;code&gt;en-US&lt;/code&gt; 로 설정하고 &lt;code&gt;fr&lt;/code&gt; (프랑스어) 로케일 번역 파일 의 경로를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="50a00159e09a932ac5818449fcafa887279ed31b" translate="yes" xml:space="preserve">
          <source>For example, the service worker may not be able to retrieve a required resource, neither from the cache nor from the server. This could happen if a new version is deployed to the server and the service worker cache has been partially cleaned by the browser, removing some files of a previous app version but not all.</source>
          <target state="translated">예를 들어 서비스 워커가 캐시 나 서버에서 필요한 리소스를 검색하지 못할 수 있습니다. 새 버전이 서버에 배포되고 서비스 워커 캐시가 브라우저에 의해 부분적으로 정리되어 이전 앱 버전의 일부 파일 만 제거 된 경우 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da0b61ba544cc7d6caa5e9d00194681f6e850326" translate="yes" xml:space="preserve">
          <source>For example, the string &quot;1s 100ms ease-out&quot; specifies a duration of 1000 milliseconds, and delay of 100 ms, and the &quot;ease-out&quot; easing style, which decelerates near the end of the duration.</source>
          <target state="translated">예를 들어, 문자열 &quot;1s 100ms ease-out&quot;은 지속 시간이 1000 밀리 초이고 지연 시간이 100ms이며 지속 기간이 끝날 무렵에 감속되는 &quot;이완&quot;여유 스타일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a9d7730eccbd0e92f23996837e3a8f11bef70174" translate="yes" xml:space="preserve">
          <source>For example, the string &lt;code&gt;3d12h&lt;/code&gt; will cache content for up to three and a half days.</source>
          <target state="translated">예를 들어, 문자열 &lt;code&gt;3d12h&lt;/code&gt; 는 최대 3 일 반 동안 콘텐츠를 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="e4708f232b7a2d860945bf98f596301e9e4e5e00" translate="yes" xml:space="preserve">
          <source>For example, the string &lt;code&gt;5s30u&lt;/code&gt; will translate to five seconds and 30 milliseconds of network timeout.</source>
          <target state="translated">예를 들어, 문자열 &lt;code&gt;5s30u&lt;/code&gt; 는 5 초 및 30 밀리 초의 네트워크 시간 초과로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="202943b8fc3e80fba0634397ef0b316f14215b59" translate="yes" xml:space="preserve">
          <source>For example, to create a French translation file, follow these steps:</source>
          <target state="translated">예를 들어 프랑스어 번역 파일을 만들려면 다음 단계를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="8d6864b09909a8d7bd1794440def9f0c31acd333" translate="yes" xml:space="preserve">
          <source>For example, to create an observable equivalent to the &lt;code&gt;of(1, 2, 3)&lt;/code&gt; above, you could do something like this:</source>
          <target state="translated">예를 들어 위의 &lt;code&gt;of(1, 2, 3)&lt;/code&gt; 과 동등한 관찰 가능 객체를 만들려면 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e21a6e50d611a4b649e738293bcbf7e12410528" translate="yes" xml:space="preserve">
          <source>For example, to get a &lt;code&gt;name&lt;/code&gt; control nested within a &lt;code&gt;person&lt;/code&gt; sub-group:</source>
          <target state="translated">예를 들어 &lt;code&gt;person&lt;/code&gt; 하위 그룹 내에 중첩 된 &lt;code&gt;name&lt;/code&gt; 컨트롤 을 가져 오려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="2795d73c033ee5a4023bcbd6348118e04af1633f" translate="yes" xml:space="preserve">
          <source>For example, to use the &lt;a href=&quot;https://getbootstrap.com/docs/4.0/getting-started/introduction/&quot;&gt;Bootstrap 4&lt;/a&gt; library, first install the library and its dependencies using the npm package manager:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;https://getbootstrap.com/docs/4.0/getting-started/introduction/&quot;&gt;Bootstrap 4&lt;/a&gt; 라이브러리 를 사용하려면 먼저 npm 패키지 관리자를 사용하여 라이브러리 및 해당 종속성을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="006077040eb38468b8a356d61c048734a3075b00" translate="yes" xml:space="preserve">
          <source>For example, when binding a URL in an &lt;code&gt;&amp;lt;&lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; [href]=&quot;someValue&quot;&amp;gt;&lt;/code&gt; hyperlink, &lt;code&gt;someValue&lt;/code&gt; will be sanitized so that an attacker cannot inject e.g. a &lt;code&gt;javascript:&lt;/code&gt; URL that would execute code on the website.</source>
          <target state="translated">에서 URL 결합 예를 들어, &lt;code&gt;&amp;lt;&lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; [href]=&quot;someValue&quot;&amp;gt;&lt;/code&gt; 하이퍼 링크, &lt;code&gt;someValue&lt;/code&gt; 와는 매우 살균되도록 공격자 수없는 분사 예 &lt;code&gt;javascript:&lt;/code&gt; 웹 사이트에 코드를 실행할 것이다 URL.</target>
        </trans-unit>
        <trans-unit id="07794534a0ed0e77b8d075cb97347b76bcb7aa24" translate="yes" xml:space="preserve">
          <source>For example, when binding a URL in an &lt;code&gt;&amp;lt;a [href]=&quot;someValue&quot;&amp;gt;&lt;/code&gt; hyperlink, &lt;code&gt;someValue&lt;/code&gt; will be sanitized so that an attacker cannot inject e.g. a &lt;code&gt;javascript:&lt;/code&gt; URL that would execute code on the website.</source>
          <target state="translated">예를 들어, &lt;code&gt;&amp;lt;a [href]=&quot;someValue&quot;&amp;gt;&lt;/code&gt; 하이퍼 링크에 URL을 바인딩 할 때 &lt;code&gt;someValue&lt;/code&gt; 가 삭제되어 공격자가 웹 사이트에서 코드를 실행 하는 &lt;code&gt;javascript:&lt;/code&gt; URL 등을 삽입 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b388ee63c404c11c431ffc8a9f8669aaee012a90" translate="yes" xml:space="preserve">
          <source>For example, when bootstrapping an application, you can register many initializers using the same token.</source>
          <target state="translated">예를 들어, 응용 프로그램을 부트 스트랩 할 때 동일한 토큰을 사용하여 많은 이니셜 라이저를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3baf02df32b359fa08da6b749c56ce279b9c6172" translate="yes" xml:space="preserve">
          <source>For example, you can add the meaning that this &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag is a site header that needs to be translated the same way not only when used as a header, but also when referred to from another section of text:</source>
          <target state="translated">예를 들어,이 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 태그가 헤더로 사용될 때뿐만 아니라 다른 텍스트 섹션에서 참조 될 때도 동일한 방식으로 번역되어야하는 사이트 헤더 라는 의미를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c63512e47f4e0eb59f4eb999a84ea7e0803892b1" translate="yes" xml:space="preserve">
          <source>For example, you can create a new &lt;code&gt;HeroListComponent&lt;/code&gt; with a mock service that you can manipulate under test.</source>
          <target state="translated">예를 들어 테스트중인 조작 할 수있는 모의 서비스를 사용하여 새 &lt;code&gt;HeroListComponent&lt;/code&gt; 를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8ddf8e31fd2cd24dbe4fa042da0cd05fcfd17053" translate="yes" xml:space="preserve">
          <source>For example, you can use the following built-in tokens as hooks into the framework&amp;rsquo;s bootstrapping and initialization process. A provider object can associate any of these injection tokens with one or more callback functions that take app-specific initialization actions.</source>
          <target state="translated">예를 들어, 다음 기본 제공 토큰을 프레임 워크의 부트 스트랩 및 초기화 프로세스에 대한 후크로 사용할 수 있습니다. 공급자 객체는 이러한 주입 토큰을 앱별 초기화 작업을 수행하는 하나 이상의 콜백 함수와 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="227e297b37600eeafa53dd30d8eb145e25eb475b" translate="yes" xml:space="preserve">
          <source>For example, you cannot write something like this:</source>
          <target state="translated">예를 들어 다음과 같이 작성할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0404572146cc3cab885417686884732f1c08e1eb" translate="yes" xml:space="preserve">
          <source>For example, you could change the previous custom pipe example to use two-way data binding with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; to input the amount and boost factor, as shown in the following code example.</source>
          <target state="translated">예를 들어, 다음 코드 예제와 같이 이전 사용자 지정 파이프 예제를 변경하여 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 과의 양방향 데이터 바인딩을 사용 하여 양과 부스트 계수를 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6530568924d585f2b40d86e5a6d6c3b09418ac8d" translate="yes" xml:space="preserve">
          <source>For example, you could have an expression that invoked a property or method that had side effects. The expression could call something like &lt;code&gt;getFoo()&lt;/code&gt; where only you know what &lt;code&gt;getFoo()&lt;/code&gt; does. If &lt;code&gt;getFoo()&lt;/code&gt; changes something and you happen to be binding to that something, Angular may or may not display the changed value. Angular may detect the change and throw a warning error. As a best practice, stick to properties and to methods that return values and avoid side effects.</source>
          <target state="translated">예를 들어 부작용이있는 속성이나 메서드를 호출 한식이있을 수 있습니다. 표현은 같은 부를 수 &lt;code&gt;getFoo()&lt;/code&gt; 만이 알고 &lt;code&gt;getFoo()&lt;/code&gt; 수행합니다. 경우 &lt;code&gt;getFoo()&lt;/code&gt; 무엇인가를 변경하고 당신이 뭔가에 구속하는 일이, 각도는 또는 변경된 값을 표시하지 않을 수 있습니다. Angular는 변경 사항을 감지하고 경고 오류를 발생시킬 수 있습니다. 모범 사례로서 속성과 값을 반환하고 부작용을 피하는 메서드를 고수하십시오.</target>
        </trans-unit>
        <trans-unit id="a1343721229e7e188c70b76a4f95e58cac86554e" translate="yes" xml:space="preserve">
          <source>For example, you may have defined a class and used it as an injection token in a providers array but neglected to export that class.</source>
          <target state="translated">예를 들어, 클래스를 정의하고 공급자 배열에서 주입 토큰으로 사용했지만 해당 클래스를 내보내는 것을 무시했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a95056eee3d11f52730201526a72543e3338d239" translate="yes" xml:space="preserve">
          <source>For example, you may have set a providers &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; property to a locally defined function that you neglected to export.</source>
          <target state="translated">예를 들어, 공급자 &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 속성을 내 보내지 않은 로컬로 정의 된 함수로 설정했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a48ccdf1e4d465cd7b12d94a032be82a62ec1e1" translate="yes" xml:space="preserve">
          <source>For example, you may have set a providers &lt;code&gt;useFactory&lt;/code&gt; property to a locally defined function that you neglected to export.</source>
          <target state="translated">예를 들어 공급자 &lt;code&gt;useFactory&lt;/code&gt; 속성을 내 보내지 않은 로컬 정의 함수로 설정했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3c0aadf2ed6d001641bc13306f6ac7b0b287585" translate="yes" xml:space="preserve">
          <source>For example, you might decide to cache certain requests and responses to improve performance. You can delegate caching to an interceptor without disturbing your existing data services.</source>
          <target state="translated">예를 들어 성능 향상을 위해 특정 요청 및 응답을 캐시하기로 결정할 수 있습니다. 기존 데이터 서비스를 방해하지 않고 인터셉터에 캐싱을 위임 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e751c1896b9ea59e8e0965c8d8ab0167c1bd2f31" translate="yes" xml:space="preserve">
          <source>For example, you might have an Angular service called &lt;code&gt;Heroes&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;Heroes&lt;/code&gt; 라는 Angular 서비스가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="24fca8b61903d711384e8ca51c4fd0aeb8d16945" translate="yes" xml:space="preserve">
          <source>For filtering flying heroes, consider an &lt;em&gt;impure pipe&lt;/em&gt;.</source>
          <target state="translated">비행 영웅을 필터링하려면 &lt;em&gt;불순한 파이프를&lt;/em&gt; 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="a56d6b42d3843beb14525eb1fdcd50e555380dbb" translate="yes" xml:space="preserve">
          <source>For full details of these and other tools, see the &lt;a href=&quot;https://material.angular.io/cdk/a11y/overview&quot;&gt;Angular CDK accessibility overview&lt;/a&gt;.</source>
          <target state="translated">이러한 도구 및 기타 도구에 대한 자세한 내용은 &lt;a href=&quot;https://material.angular.io/cdk/a11y/overview&quot;&gt;Angular CDK 내게 필요한 옵션 개요를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c3da04950adb31c0e9528561719f0563708a66f" translate="yes" xml:space="preserve">
          <source>For further details, see &lt;a href=&quot;../guide/workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../guide/workspace-config&quot;&gt;작업 공간 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3306695213c81bbc3d56d315e3e1aeaaf7dc34ef" translate="yes" xml:space="preserve">
          <source>For general guidance on debugging and a list of minor changes associated with Ivy, see the &lt;a href=&quot;ivy-compatibility&quot;&gt;Ivy compatibility guide&lt;/a&gt;.</source>
          <target state="translated">디버깅에 대한 일반적인 지침 및 Ivy와 관련된 사소한 변경 사항 목록은 &lt;a href=&quot;ivy-compatibility&quot;&gt;Ivy 호환성 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b36de5c112631348d0b348bcbb31a5891c39f0e" translate="yes" xml:space="preserve">
          <source>For help with individual commands, use the &lt;code&gt;--help&lt;/code&gt; or &lt;code&gt;-h&lt;/code&gt; option with the command.</source>
          <target state="translated">개별 명령에 대한 도움말을 보려면 명령에 &lt;code&gt;--help&lt;/code&gt; 또는 &lt;code&gt;-h&lt;/code&gt; 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bdf3dbf173e582814eee93b694e96476b3193d6c" translate="yes" xml:space="preserve">
          <source>For help with opting out of Ivy, see the instructions &lt;a href=&quot;ivy#opting-out-of-angular-ivy&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Ivy 탈퇴에 대한 도움말은 &lt;a href=&quot;ivy#opting-out-of-angular-ivy&quot;&gt;여기&lt;/a&gt; 에서 지침을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="86f2ce0f795377b7a0b29bb81dd3283d86dbb647" translate="yes" xml:space="preserve">
          <source>For hypothetical examples such as illustrations of configuration options in a JSON file, you should still use The &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; tag with the &lt;code&gt;header&lt;/code&gt; attribute to identify the context.</source>
          <target state="translated">JSON 파일의 구성 옵션 그림과 같은 가상의 예제의 경우 &lt;code&gt;header&lt;/code&gt; 속성 과 함께 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 태그 를 사용하여 컨텍스트를 식별해야합니다.</target>
        </trans-unit>
        <trans-unit id="86123da84b4f870d2ef75b0f9ae9cd5b807e05bb" translate="yes" xml:space="preserve">
          <source>For information about Angular CDK and Angular Material deprecations, see the &lt;a href=&quot;https://github.com/angular/components/blob/master/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt;.</source>
          <target state="translated">Angular CDK 및 Angular Material 사용 중단에 대한 정보는 &lt;a href=&quot;https://github.com/angular/components/blob/master/CHANGELOG.md&quot;&gt;changelog를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3bced609aa41350a65338218df9289f52995c62" translate="yes" xml:space="preserve">
          <source>For information about Angular's deprecation and removal practices, see &lt;a href=&quot;releases#deprecation-practices&quot;&gt;Angular Release Practices&lt;/a&gt;.</source>
          <target state="translated">Angular의 지원 중단 및 제거 방법에 대한 자세한 내용은 &lt;a href=&quot;releases#deprecation-practices&quot;&gt;Angular 릴리스&lt;/a&gt; 방법을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="701f4b7981f107d65ba50aa05880028cb7034894" translate="yes" xml:space="preserve">
          <source>For information about CSRF at the Open Web Application Security Project (OWASP), see &lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29&quot;&gt;Cross-Site Request Forgery (CSRF)&lt;/a&gt; and &lt;a href=&quot;https://www.owasp.org/index.php/CSRF_Prevention_Cheat_Sheet&quot;&gt;Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet&lt;/a&gt;. The Stanford University paper &lt;a href=&quot;https://seclab.stanford.edu/websec/csrf/csrf.pdf&quot;&gt;Robust Defenses for Cross-Site Request Forgery&lt;/a&gt; is a rich source of detail.</source>
          <target state="translated">OWASP (Open Web Application Security Project)의 CSRF에 대한 정보는 CSRF ( &lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29&quot;&gt;Cross-Site Request Forgery)&lt;/a&gt; 및 CSRF ( &lt;a href=&quot;https://www.owasp.org/index.php/CSRF_Prevention_Cheat_Sheet&quot;&gt;Cross-Site Request Forgery) 예방 치트 시트를 참조하십시오&lt;/a&gt; . &lt;a href=&quot;https://seclab.stanford.edu/websec/csrf/csrf.pdf&quot;&gt;사이트 간 요청 위조에 대한&lt;/a&gt; Stanford University 논문의 강력한 방어 는 풍부한 세부 정보 소스입니다.</target>
        </trans-unit>
        <trans-unit id="a2cf14543e26d1b0e1e0f2335126cea8a8caa66e" translate="yes" xml:space="preserve">
          <source>For information about how the Angular CLI handles packages see the following guides:</source>
          <target state="translated">Angular CLI가 패키지를 처리하는 방법에 대한 정보는 다음 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0f291831cc0ce65674be94754322d757e2b548ab" translate="yes" xml:space="preserve">
          <source>For information about our versioning policy and practices&amp;mdash;including support and deprecation practices, as well as the release schedule&amp;mdash;see &lt;a href=&quot;releases&quot;&gt;Angular versioning and releases&lt;/a&gt;.</source>
          <target state="translated">릴리스 일정뿐만 아니라 지원 및 지원 중단 사례를 포함한 버전 관리 정책 및 관행에 대한 자세한 내용은 &lt;a href=&quot;releases&quot;&gt;각도 버전 관리 및 릴리스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5220e8f6a1f03b83915e5da98e7255405350b960" translate="yes" xml:space="preserve">
          <source>For information about specific version requirements, see the &lt;code&gt;engines&lt;/code&gt; key in the &lt;a href=&quot;https://unpkg.com/@angular/cli/package.json&quot;&gt;package.json&lt;/a&gt; file.</source>
          <target state="translated">특정 버전 요구 사항에 대한 자세한 내용은 &lt;a href=&quot;https://unpkg.com/@angular/cli/package.json&quot;&gt;package.json&lt;/a&gt; 파일 의 &lt;code&gt;engines&lt;/code&gt; 키를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eae0e5c59a3541a14b503b2a4d5cecd660bf5771" translate="yes" xml:space="preserve">
          <source>For instance &lt;code&gt;['/team', teamId, 'user', userName, {details: true}]&lt;/code&gt; means that we want to generate a link to &lt;code&gt;/team/11/user/bob;details=true&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;['/team', teamId, 'user', userName, {details: true}]&lt;/code&gt; 는 &lt;code&gt;/team/11/user/bob;details=true&lt;/code&gt; 에 대한 링크를 생성하려고 함을 의미 합니다 .</target>
        </trans-unit>
        <trans-unit id="cc3c5ecad11774911020f831e44bc9e139c75862" translate="yes" xml:space="preserve">
          <source>For instance, &lt;code&gt;&lt;a href=&quot;forwardref&quot;&gt;forwardRef&lt;/a&gt;&lt;/code&gt; is used when the &lt;code&gt;token&lt;/code&gt; which we need to refer to for the purposes of DI is declared, but not yet defined. It is also used when the &lt;code&gt;token&lt;/code&gt; which we use when creating a query is not yet defined.</source>
          <target state="translated">예를 들어, &lt;code&gt;&lt;a href=&quot;forwardref&quot;&gt;forwardRef&lt;/a&gt;&lt;/code&gt; 는 DI의 목적으로 참조해야하는 &lt;code&gt;token&lt;/code&gt; 이 선언되었지만 아직 정의되지 않은 경우에 사용됩니다. 쿼리를 만들 때 사용 하는 &lt;code&gt;token&lt;/code&gt; 이 아직 정의되지 않은 경우에도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7e37c9ce1affc33e83f25b7d7154d81e800947bf" translate="yes" xml:space="preserve">
          <source>For instance, &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; produces URLs like &lt;code&gt;&lt;a href=&quot;http://example.com#/foo&quot;&gt;http://example.com#/foo&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; produces &lt;code&gt;&lt;a href=&quot;http://example.com/foo&quot;&gt;http://example.com/foo&lt;/a&gt;&lt;/code&gt; as an equivalent URL.</source>
          <target state="translated">예를 들어 &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;http://example.com#/foo&quot;&gt;http://example.com#/foo&lt;/a&gt;&lt;/code&gt; 와 같은 URL을 생성 하고 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;http://example.com/foo&quot;&gt;http://example.com/foo&lt;/a&gt;&lt;/code&gt; 를 동등한 URL로 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="6055b44a38f88f4c957889644057f9b1f221cb1f" translate="yes" xml:space="preserve">
          <source>For instance, if the current url is &lt;code&gt;/user/(box//aux:team)&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 현재의 URL 인 경우 &lt;code&gt;/user/(box//aux:team)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f3d492765d65a0f3c73975be81507c9a1cba6c5" translate="yes" xml:space="preserve">
          <source>For instance, if you call &lt;code&gt;location.go('/foo')&lt;/code&gt;, the browser's URL will become &lt;code&gt;example.com#/foo&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;location.go('/foo')&lt;/code&gt; 를 호출 하면 브라우저의 URL이 &lt;code&gt;example.com#/foo&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="27aaad8b83676d93a0529ecbf18c1e23d1f6429a" translate="yes" xml:space="preserve">
          <source>For instance, if you provide an &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;'/my/app'&lt;/code&gt; and call &lt;code&gt;location.go('/foo')&lt;/code&gt;, the browser's URL will become &lt;code&gt;example.com/my/app/foo&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;'/my/app'&lt;/code&gt; 를 제공 하고 &lt;code&gt;location.go('/foo')&lt;/code&gt; 를 호출 하면 브라우저의 URL은 &lt;code&gt;example.com/my/app/foo&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="6c574522b5d0faecf6db7c658c386f4d734f0644" translate="yes" xml:space="preserve">
          <source>For instance, if you provide an &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;'/my/app/'&lt;/code&gt; and call &lt;code&gt;location.go('/foo')&lt;/code&gt;, the browser's URL will become &lt;code&gt;example.com/my/app/foo&lt;/code&gt;. To ensure all relative URIs resolve correctly, the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; and/or &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; should end with a &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">당신이 제공하는 경우 예를 들어, &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;'/my/app/'&lt;/code&gt; 와 통화 &lt;code&gt;location.go('/foo')&lt;/code&gt; , 브라우저의 URL이 될 것입니다 &lt;code&gt;example.com/my/app/foo&lt;/code&gt; . 모든 상대 URI가 제대로의 해결되도록하려면 &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; 및 / 또는 &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; 는 로 끝나야합니다 &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dae1fb6e3f2f55f859e189cf275d906d8b055a79" translate="yes" xml:space="preserve">
          <source>For instance, in the phone detail component spec, you can use ES2015 features like arrow functions and block-scoped variables and benefit from the type definitions of the AngularJS services you're consuming:</source>
          <target state="translated">예를 들어, 전화기 세부 구성 요소 사양에서 화살표 기능 및 블록 범위 변수와 같은 ES2015 기능을 사용하고 사용중인 AngularJS 서비스의 유형 정의를 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab978344d1e1b6148ef12f8d47b1a3c34578d91b" translate="yes" xml:space="preserve">
          <source>For instance, suppose you have an observable that makes an API request and maps to the response from the server. If the server returns an error or the value doesn&amp;rsquo;t exist, an error is produced. If you catch this error and supply a default value, your stream continues to process values rather than erroring out.</source>
          <target state="translated">예를 들어, API 요청을 작성하고 서버의 응답에 맵핑하는 관찰 가능 항목이 있다고 가정하십시오. 서버가 오류를 반환하거나 값이 존재하지 않으면 오류가 발생합니다. 이 오류를 발견하고 기본값을 제공하면 스트림에서 오류가 아닌 값을 계속 처리합니다.</target>
        </trans-unit>
        <trans-unit id="38b9a9017b740354544e1593b7fba7b1889452c5" translate="yes" xml:space="preserve">
          <source>For instance, to install typings for &lt;code&gt;jasmine&lt;/code&gt; you run &lt;code&gt;npm install @types/jasmine --save-dev&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;jasmine&lt;/code&gt; 에 입력 을 &lt;code&gt;npm install @types/jasmine --save-dev&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68e2d69ba0b28527a3d11e0255455974088f0bdc" translate="yes" xml:space="preserve">
          <source>For language plural rules, see &lt;a href=&quot;http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html&quot;&gt;CLDR plural rules&lt;/a&gt;.</source>
          <target state="translated">언어 복수 규칙은 &lt;a href=&quot;http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html&quot;&gt;CLDR 복수 규칙을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3142ac7682c447087c7bb930dcaf0d9a36edf434" translate="yes" xml:space="preserve">
          <source>For library projects generated with the CLI, the &lt;code&gt;prod&lt;/code&gt; configuration default is &lt;code&gt;false&lt;/code&gt; in version 9.</source>
          <target state="translated">CLI로 생성 된 라이브러리 프로젝트의 경우 버전 9에서 &lt;code&gt;prod&lt;/code&gt; 구성 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b6ca794e39c4d5d82471dd57b8aec2edb90eec07" translate="yes" xml:space="preserve">
          <source>For library projects generated with the CLI, the dev configuration default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">CLI로 생성 된 라이브러리 프로젝트의 경우 dev 구성 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="53450900d28528df93272d0c91263f304542a049" translate="yes" xml:space="preserve">
          <source>For loading the details of a single phone into the phone detail component.</source>
          <target state="translated">단일 전화기의 세부 사항을 전화기 세부 사항 구성 요소에로드합니다.</target>
        </trans-unit>
        <trans-unit id="1d590a93d1ae3053ab803edbe0f51bf6d8db8992" translate="yes" xml:space="preserve">
          <source>For loading the list of all phones into the phone list component.</source>
          <target state="translated">모든 전화 목록을 전화 목록 구성 요소에로드합니다.</target>
        </trans-unit>
        <trans-unit id="e95847f8698a025ef652972368513ade33eb21d8" translate="yes" xml:space="preserve">
          <source>For localization, you can use the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; to generate most of the boilerplate necessary to create files for translators, and to publish your app in multiple languages. After you have set up your app to use i18n, the CLI can help you with the following steps:</source>
          <target state="translated">현지화를 위해 &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; 를 사용하여 번역자 용 파일을 작성하고 여러 언어로 앱을 게시하는 데 필요한 상용구를 생성 할 수 있습니다. i18n을 사용하도록 앱을 설정하면 CLI가 다음 단계를 수행하도록 도와 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bdfea40bcf500a31f13b9bc539617f94889792b" translate="yes" xml:space="preserve">
          <source>For more about NgModules, see &lt;a href=&quot;ngmodules&quot;&gt;Organizing your app with NgModules&lt;/a&gt;.</source>
          <target state="translated">NgModules에 대한 자세한 내용은 NgModules로 &lt;a href=&quot;ngmodules&quot;&gt;앱 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f7790f93e8b73fbe836729c76c4b92a223f010e" translate="yes" xml:space="preserve">
          <source>For more about how the &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; command works, see &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/docs/specifications/update.md&quot;&gt;Update Command&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; 명령의 작동 방식에 대한 자세한 내용 은 &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/docs/specifications/update.md&quot;&gt;Update Command를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7012dc55ddf86f8e1cb714f62289a732da460783" translate="yes" xml:space="preserve">
          <source>For more about how the &lt;code&gt;ng update&lt;/code&gt; command works, see &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/docs/specifications/update.md&quot;&gt;Update Command&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ng update&lt;/code&gt; 명령이 작동 하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/docs/specifications/update.md&quot;&gt;업데이트 명령을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="efd9eaf4c706235863d54a110fd3b5d5cd497b1b" translate="yes" xml:space="preserve">
          <source>For more complete information on how &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; is used to construct target URIs, see the &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC&lt;/a&gt; section on transforming references.</source>
          <target state="translated">&lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; 를 사용하여 대상 URI를 구성 하는 방법에 대한 자세한 내용 은 참조 변환에 대한 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC&lt;/a&gt; 섹션을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="912b038c1b77176f84399bef3e1cfee27863c9b3" translate="yes" xml:space="preserve">
          <source>For more detail on how these work, see the previous sections on &lt;a href=&quot;template-syntax#input&quot;&gt;Input&lt;/a&gt; and &lt;a href=&quot;template-syntax#output&quot;&gt;Output&lt;/a&gt;. To see it in action, see the &lt;span name=&quot;inputs-outputs&quot;&gt;Inputs and Outputs Example&lt;/span&gt;.</source>
          <target state="translated">작동 방식에 대한 자세한 내용은 이전 섹션의 &lt;a href=&quot;template-syntax#input&quot;&gt;입력&lt;/a&gt; 및 &lt;a href=&quot;template-syntax#output&quot;&gt;출력을&lt;/a&gt; 참조하십시오 . 실제로 사용하려면 &lt;span name=&quot;inputs-outputs&quot;&gt;입력 및 출력 예를&lt;/span&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="817ec49fe835be920c9756e3ebba4f2ed83c6036" translate="yes" xml:space="preserve">
          <source>For more detail, including how to build your own custom directives, see &lt;a href=&quot;attribute-directives&quot;&gt;Attribute Directives&lt;/a&gt; and &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 지시문을 작성하는 방법을 포함하여 자세한 내용은 &lt;a href=&quot;attribute-directives&quot;&gt;특성 지시문&lt;/a&gt; 및 &lt;a href=&quot;structural-directives&quot;&gt;구조&lt;/a&gt; 지시문을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e189779c6fd202a0e50304bc10f229865ed3c8b7" translate="yes" xml:space="preserve">
          <source>For more detailed information on services, see the &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;Services&lt;/a&gt; chapter of the &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes tutorial&lt;/a&gt;.</source>
          <target state="translated">서비스에 대한 자세한 정보 는 &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes 학습서&lt;/a&gt; 의 &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;서비스&lt;/a&gt; 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ff70ff85a85dfbc47459e089f85be3b2926fddc" translate="yes" xml:space="preserve">
          <source>For more detailed information, see the &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt; section.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd4ecc8635e0be85c7897afd61378d70b90b6b28" translate="yes" xml:space="preserve">
          <source>For more details about how to create scripts to generate an app in multiple languages and how to set up Apache 2 and NGINX to serve them from different subdirectories, read &lt;a href=&quot;https://dev.to/angular/deploying-an-i18n-angular-app-with-angular-cli-2fb9&quot;&gt;this tutorial by Philippe Martin&lt;/a&gt;.</source>
          <target state="translated">여러 언어로 앱을 생성하는 스크립트를 작성하는 방법과 다른 서브 디렉토리에서 제공하도록 Apache 2 및 NGINX를 설정하는 방법에 대한 자세한 정보는 &lt;a href=&quot;https://dev.to/angular/deploying-an-i18n-angular-app-with-angular-cli-2fb9&quot;&gt;Philippe Martin의이 학습서를&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="f5c8671421c0d94295fc193343091c1ff553ea22" translate="yes" xml:space="preserve">
          <source>For more details and examples on downgrading Angular components to AngularJS components please visit the &lt;a href=&quot;../../../guide/upgrade#using-angular-components-from-angularjs-code&quot;&gt;Upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Angular 구성 요소를 AngularJS 구성 요소로 다운 그레이드하는 방법에 대한 자세한 내용과 예제는 &lt;a href=&quot;../../../guide/upgrade#using-angular-components-from-angularjs-code&quot;&gt;업그레이드 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41392c8a8ac6697970a5dcaa180c8d729b9b32eb" translate="yes" xml:space="preserve">
          <source>For more details of what these look like and how to create them, see:</source>
          <target state="translated">이러한 모양 및 생성 방법에 대한 자세한 내용은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a39023825136d186ad9b299f76ef4290b9c122ec" translate="yes" xml:space="preserve">
          <source>For more details on &lt;code&gt;pathMatch&lt;/code&gt; see &lt;a href=&quot;router-tutorial-toh#pathmatch&quot;&gt;Spotlight on &lt;code&gt;pathMatch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 자세한 내용은 &lt;code&gt;pathMatch&lt;/code&gt; 볼 &lt;a href=&quot;router-tutorial-toh#pathmatch&quot;&gt;에 스포트 라이트를 &lt;code&gt;pathMatch&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ef0eba5fb7aae6b3476d97afd599d01fa9968a9" translate="yes" xml:space="preserve">
          <source>For more details on how a library project is structured you can refer the &lt;a href=&quot;file-structure#library-project-files&quot;&gt;Library Project Files&lt;/a&gt;</source>
          <target state="translated">라이브러리 프로젝트 구성 방법에 대한 자세한 내용은 &lt;a href=&quot;file-structure#library-project-files&quot;&gt;라이브러리 프로젝트 파일을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e0afb9b1639c6b7db83d3921966353475d7605c" translate="yes" xml:space="preserve">
          <source>For more details on how a library project is structured, refer to the &lt;a href=&quot;file-structure#library-project-files&quot;&gt;Library project files&lt;/a&gt; section of the &lt;a href=&quot;file-structure&quot;&gt;Project File Structure guide&lt;/a&gt;.</source>
          <target state="translated">라이브러리 프로젝트의 구조에 대한 자세한 내용 은 &lt;a href=&quot;file-structure&quot;&gt;프로젝트 파일 구조 가이드&lt;/a&gt; 의 &lt;a href=&quot;file-structure#library-project-files&quot;&gt;라이브러리 프로젝트 파일&lt;/a&gt; 섹션을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="ada7f6da9294e4c6d791dd9a0e5489db9a0be9b5" translate="yes" xml:space="preserve">
          <source>For more details on how to use &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; see &lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;Upgrading for Performance&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 사용 방법에 대한 자세한 내용 &lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;은 성능 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="78f4d0c22be01be28b6d0944e470a26d5823dfc5" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&quot;종속성 주입 안내서&quot;를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70d1fffe15b1f2e36ca7f113920e6fe75c98a33b" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt;MDN HTMLTableCellElement&lt;/a&gt; documentation.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt;MDN HTMLTableCellElement&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cefa1996491841c464ce6d8b900601e8930a2e82" translate="yes" xml:space="preserve">
          <source>For more in-depth information on the implementation, see the &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts&quot;&gt;Angular Language Service API&lt;/a&gt;.</source>
          <target state="translated">구현에 대한 자세한 정보는 &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts&quot;&gt;Angular Language Service API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="30ff6b08098db1b6b08de05417be2e5685863841" translate="yes" xml:space="preserve">
          <source>For more information TypeScript configuration files, see the official &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript wiki&lt;/a&gt; For details about configuration inheritance, see the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends&quot;&gt;Configuration inheritance with extends&lt;/a&gt; section.</source>
          <target state="translated">TypeScript 구성 파일에 대한 자세한 내용은 공식 &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript 위키&lt;/a&gt; 를 참조하십시오. &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends&quot;&gt;구성 상속&lt;/a&gt; 에 대한 자세한 내용은 확장을 사용한 구성 상속 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c9e3433a19bc46e93bbdc630b233fcab6b1c9a2" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;package.json&lt;/code&gt; and polyfill packages, see &lt;a href=&quot;npm-packages&quot;&gt;Workspace npm dependencies&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; 및 polyfill 패키지 에 대한 자세한 내용 은 &lt;a href=&quot;npm-packages&quot;&gt;Workspace npm 종속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="571c1a07f9b9eb717ea03c74bcc70570fb6aa857" translate="yes" xml:space="preserve">
          <source>For more information about Angular browser support, see &lt;a href=&quot;browser-support&quot;&gt;Browser Support&lt;/a&gt;.</source>
          <target state="translated">각도 브라우저 지원에 대한 자세한 내용은 &lt;a href=&quot;browser-support&quot;&gt;브라우저 지원을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51b8c9575a716c1e47999ff03076035e7329d207" translate="yes" xml:space="preserve">
          <source>For more information about Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;../guide/http&quot;&gt;Client-Server Interaction&lt;/a&gt; guide.</source>
          <target state="translated">Angular의 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;../guide/http&quot;&gt;클라이언트-서버 상호 작용&lt;/a&gt; 가이드를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="b83bc230f5f7ebae3640de4b47c95fd664eb9cd9" translate="yes" xml:space="preserve">
          <source>For more information about Unicode locale identifiers, see the &lt;a href=&quot;http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers&quot;&gt;CLDR core spec&lt;/a&gt;.</source>
          <target state="translated">유니 코드 로캘 식별자에 대한 자세한 내용은 &lt;a href=&quot;http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers&quot;&gt;CLDR 핵심 사양을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="78841bd0bb58922e17fdaa94b801397143a15d5e" translate="yes" xml:space="preserve">
          <source>For more information about browser support, see the &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/#browser_support&quot;&gt;browser support&lt;/a&gt; section of &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers: an Introduction&lt;/a&gt;, Jake Archibald's &lt;a href=&quot;https://jakearchibald.github.io/isserviceworkerready/&quot;&gt;Is Serviceworker ready?&lt;/a&gt;, and &lt;a href=&quot;http://caniuse.com/#feat=serviceworkers&quot;&gt;Can I Use&lt;/a&gt;.</source>
          <target state="translated">브라우저 지원에 대한 자세한 정보 는 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;서비스 작업자 : 소개&lt;/a&gt; 의 Jake Archibald ' &lt;a href=&quot;https://jakearchibald.github.io/isserviceworkerready/&quot;&gt;s Serviceworker가 준비 되었습니까?&lt;/a&gt; 의 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/#browser_support&quot;&gt;브라우저 지원&lt;/a&gt; 섹션을 참조하십시오 . , &lt;a href=&quot;http://caniuse.com/#feat=serviceworkers&quot;&gt;사용할 수&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="24f2585c0836152206284cf4cff3db56510414ea" translate="yes" xml:space="preserve">
          <source>For more information about components and how they interact with templates, see &lt;a href=&quot;guide/architecture-components&quot;&gt;Introduction to Components&lt;/a&gt;.</source>
          <target state="translated">컴포넌트 및 컴포넌트와 템플리트와 상호 작용하는 방법에 대한 자세한 정보는 컴포넌트 &lt;a href=&quot;guide/architecture-components&quot;&gt;소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="236e2ef1974979ffd7d8a223a6a77807f766066b" translate="yes" xml:space="preserve">
          <source>For more information about how Google handles security issues, see &lt;a href=&quot;https://www.google.com/about/appsecurity/&quot;&gt;Google's security philosophy&lt;/a&gt;.</source>
          <target state="translated">Google이 보안 문제를 처리하는 방법에 대한 자세한 내용은 &lt;a href=&quot;https://www.google.com/about/appsecurity/&quot;&gt;Google의 보안 철학을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcb995baca1ba9ed6fd26e278f74ed47277fc0fc" translate="yes" xml:space="preserve">
          <source>For more information about how the TypeScript configuration affects compilation, see &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular Compiler Options&lt;/a&gt; and &lt;a href=&quot;template-typecheck&quot;&gt;Template Type Checking&lt;/a&gt;.</source>
          <target state="translated">TypeScript 구성이 컴파일에 미치는 영향에 대한 자세한 내용은 &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular 컴파일러 옵션&lt;/a&gt; 및 &lt;a href=&quot;template-typecheck&quot;&gt;템플릿 유형 검사를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9336b64fe980ca2f27772eea821799db1477d587" translate="yes" xml:space="preserve">
          <source>For more information about input type narrowing, see &lt;a href=&quot;template-typecheck#input-setter-coercion&quot;&gt;Input setter coercion&lt;/a&gt; and &lt;a href=&quot;structural-directives#directive-type-checks&quot;&gt;Improving template type checking for custom directives&lt;/a&gt;.</source>
          <target state="translated">입력 유형 축소에 대한 자세한 내용은 &lt;a href=&quot;template-typecheck#input-setter-coercion&quot;&gt;입력 setter 강제&lt;/a&gt; 및 &lt;a href=&quot;structural-directives#directive-type-checks&quot;&gt;사용자 지정 지시문에 대한 템플릿 유형 검사 개선을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8717f80b31662b078793e6ecb8c9984573a4f57a" translate="yes" xml:space="preserve">
          <source>For more information about lifecycles, see &lt;a href=&quot;lifecycle-hooks&quot;&gt;Hooking into the component lifecycle&lt;/a&gt;.</source>
          <target state="translated">수명주기에 대한 자세한 내용은 &lt;a href=&quot;lifecycle-hooks&quot;&gt;구성 요소 수명주기에 연결을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbad9d8c402d32f04f249b30fb2a443d26c8dae6" translate="yes" xml:space="preserve">
          <source>For more information about pluralization categories, see &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Choosing-Plural-Category-Names&quot;&gt;Choosing plural category names&lt;/a&gt; in the CLDR - Unicode Common Locale Data Repository.</source>
          <target state="translated">복수화 카테고리에 대한 자세한 정보는 CLDR- 유니 코드 공통 로케일 데이터 저장소에서 &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Choosing-Plural-Category-Names&quot;&gt;복수 카테고리 이름 선택을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9964a9dc9a78ceda93aaa2a631966ffc6fd1170f" translate="yes" xml:space="preserve">
          <source>For more information about polyfills, see &lt;a href=&quot;https://www.webcomponents.org/polyfills&quot;&gt;polyfill documentation&lt;/a&gt;.</source>
          <target state="translated">폴리 필에 대한 자세한 내용은 폴리 &lt;a href=&quot;https://www.webcomponents.org/polyfills&quot;&gt;필 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29d25633303fc78f9607c68e2bdf3c741da7b7ac" translate="yes" xml:space="preserve">
          <source>For more information about providers and lazy-loaded routed NgModules, see &lt;a href=&quot;providers#limiting-provider-scope-by-lazy-loading-modules&quot;&gt;Limiting provider scope&lt;/a&gt;.</source>
          <target state="translated">공급자 및 지연로드 라우팅 된 NgModules에 대한 자세한 내용은 &lt;a href=&quot;providers#limiting-provider-scope-by-lazy-loading-modules&quot;&gt;공급자 범위 제한을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6b6aadb5ef721ae5451ab50edf27d49f587116f" translate="yes" xml:space="preserve">
          <source>For more information about routing, see the following topics:</source>
          <target state="translated">라우팅에 대한 자세한 내용은 다음 항목을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d350f1532969099e56068a5d118f77bf4cc913d5" translate="yes" xml:space="preserve">
          <source>For more information about rules and utility methods, see &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/schematics#provided-rules&quot;&gt;Provided Rules&lt;/a&gt;.</source>
          <target state="translated">규칙 및 유틸리티 방법에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/schematics#provided-rules&quot;&gt;제공된 규칙을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="03cbb1e65c44554cf14a341ae94bf0b620b95b32" translate="yes" xml:space="preserve">
          <source>For more information about service workers in general, see &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers: an Introduction&lt;/a&gt;.</source>
          <target state="translated">일반적으로 서비스 워커에 대한 자세한 내용은 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;서비스 워커 : 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b9e3cb67377ec7473047edb3662f139d750629a" translate="yes" xml:space="preserve">
          <source>For more information about services, see &lt;a href=&quot;../guide/architecture-services&quot;&gt;Introduction to Services and Dependency Injection&lt;/a&gt;.</source>
          <target state="translated">서비스에 대한 자세한 내용은 서비스 &lt;a href=&quot;../guide/architecture-services&quot;&gt;소개 및 종속성 주입을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="90f304817a574dd3b93fbb1931e98aa85432d6ea" translate="yes" xml:space="preserve">
          <source>For more information about template input variables, see &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">템플릿 입력 변수에 대한 자세한 내용은 &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;구조 지시문을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf8c2198549329bb7dfaa0f1a4ceb280d07afff9" translate="yes" xml:space="preserve">
          <source>For more information about the Angular Router, see &lt;a href=&quot;../guide/router&quot;&gt;Routing &amp;amp; Navigation&lt;/a&gt;.</source>
          <target state="translated">Angular Router에 대한 자세한 내용은 &lt;a href=&quot;../guide/router&quot;&gt;Routing &amp;amp; Navigation을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf7f0f7f896a271fc989b9cb322f11d5d7c62a96" translate="yes" xml:space="preserve">
          <source>For more information about the Angular files generated by &lt;code&gt;ng new&lt;/code&gt;, see &lt;a href=&quot;file-structure&quot;&gt;Workspace and Project File Structure&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ng new&lt;/code&gt; 로 생성 된 Angular 파일에 대한 자세한 내용 은 &lt;a href=&quot;file-structure&quot;&gt;작업 공간 및 프로젝트 파일 구조를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52e6ac022078001a32995d871b8d2865025cbf63" translate="yes" xml:space="preserve">
          <source>For more information about the attacks and mitigations described below, see &lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_Guide_Project&quot;&gt;OWASP Guide Project&lt;/a&gt;.</source>
          <target state="translated">아래 설명 된 공격 및 완화에 대한 자세한 내용은 &lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_Guide_Project&quot;&gt;OWASP 가이드 프로젝트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6be97dad894b1a23556e4ce27d58b024db4a0eb4" translate="yes" xml:space="preserve">
          <source>For more information about the full capabilities of Angular's template syntax, see &lt;a href=&quot;guide/template-syntax&quot;&gt;Template Syntax&lt;/a&gt;.</source>
          <target state="translated">각도의 템플릿 구문의 전체 기능에 대한 자세한 내용은 &lt;a href=&quot;guide/template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bfb2ab6f46537090db78c8c58f8a51ce516a0922" translate="yes" xml:space="preserve">
          <source>For more information about the npm package format, see the &lt;a href=&quot;https://goo.gl/jB3GVv&quot;&gt;Angular Package Format spec&lt;/a&gt;.</source>
          <target state="translated">npm 패키지 형식에 대한 자세한 내용은 &lt;a href=&quot;https://goo.gl/jB3GVv&quot;&gt;Angular 패키지 형식 사양을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="dcb31425e1ffdf501edbef7fbf14e28f10e3577e" translate="yes" xml:space="preserve">
          <source>For more information about type-checking options, and about improvements to template type checking in version 9 and above, see &lt;a href=&quot;template-typecheck&quot;&gt;Template type checking&lt;/a&gt;.</source>
          <target state="translated">및 버전 9 이상에서 템플릿 유형 검사에 대한 개선 사항에 대한 유형 검사 옵션에 대한 자세한 내용은 &lt;a href=&quot;template-typecheck&quot;&gt;템플릿 유형 검사를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74fc37bf8585f335d9717920574f7eae721aca6f" translate="yes" xml:space="preserve">
          <source>For more information about using &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;http&quot;&gt;HttpClient guide&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; 사용에 대한 자세한 내용은 &lt;a href=&quot;http&quot;&gt;HttpClient 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="386ad298bea4b0e435d841329d791530a7524e88" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngif#ngIfElse&quot;&gt;ngIfElse&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;../api/common/ngif&quot;&gt;API documentation about NgIf&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/ngif#ngIfElse&quot;&gt;ngIfElse&lt;/a&gt;&lt;/code&gt; 에 대한 자세한 내용은 NgIf에 대한 &lt;a href=&quot;../api/common/ngif&quot;&gt;API 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8321d54465c08609e6f9e06ff80d381b79117be2" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;ngIfElse&lt;/code&gt;, see the &lt;a href=&quot;../api/common/ngif&quot;&gt;API documentation about NgIf&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;ngIfElse&lt;/code&gt; 에 대한 자세한 내용은 NgIf에 대한 &lt;a href=&quot;../api/common/ngif&quot;&gt;API 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f3458d4ed3e020fa73f228043be23211460b611" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter API documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter API 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05beb7f7c6d3b64d67d1a432a8304f888a8cf09e" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;ngOnInit()&lt;/code&gt;, see &lt;a href=&quot;../guide/lifecycle-hooks&quot;&gt;Lifecycle hooks&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngOnInit()&lt;/code&gt; 에 대한 자세한 정보는 &lt;a href=&quot;../guide/lifecycle-hooks&quot;&gt;라이프 사이클 후크를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f185be688fdab6f10dcf39ed8cac95b298927682" translate="yes" xml:space="preserve">
          <source>For more information on Angular dependency injection, see the &lt;a href=&quot;dependency-injection-providers&quot;&gt;DI Providers&lt;/a&gt; and &lt;a href=&quot;dependency-injection-in-action&quot;&gt;DI in Action&lt;/a&gt; guides.</source>
          <target state="translated">각도 의존성 주입에 대한 자세한 내용은 &lt;a href=&quot;dependency-injection-providers&quot;&gt;DI 공급자&lt;/a&gt; 및 &lt;a href=&quot;dependency-injection-in-action&quot;&gt;DI 작업&lt;/a&gt; 가이드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="730302ee5a734f817027f2bf006e032d293b1565" translate="yes" xml:space="preserve">
          <source>For more information on JavaScript modules, see &lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;JavaScript/ECMAScript modules&lt;/a&gt;.</source>
          <target state="translated">JavaScript 모듈에 대한 자세한 내용은 &lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;JavaScript / ECMAScript 모듈을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff27f98155df9560762be8e0a01925036e0e246e" translate="yes" xml:space="preserve">
          <source>For more information on NgModules, see:</source>
          <target state="translated">NgModules에 대한 자세한 내용은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ebcd4a7b0acb00083960a9b91df95bb32d787e0" translate="yes" xml:space="preserve">
          <source>For more information on choosing a selector, see &lt;a href=&quot;component-overview#specifying-a-components-css-selector&quot;&gt;Specifying a component's selector&lt;/a&gt;.</source>
          <target state="translated">선택기 선택에 대한 자세한 내용 &lt;a href=&quot;component-overview#specifying-a-components-css-selector&quot;&gt;은 구성 요소 선택기 지정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4252a145748c0f6e85a3cc615e3b8077846161e7" translate="yes" xml:space="preserve">
          <source>For more information on defining a component's template, see &lt;a href=&quot;component-overview#defining-a-components-template&quot;&gt;Defining a component's template&lt;/a&gt;.</source>
          <target state="translated">구성 요소 템플릿 정의에 대한 자세한 내용은 구성 요소 템플릿 &lt;a href=&quot;component-overview#defining-a-components-template&quot;&gt;정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cecbc1c40f8a61edd4c42f950d7355d77dcc8282" translate="yes" xml:space="preserve">
          <source>For more information on how event binding works, see &lt;a href=&quot;event-binding-concepts&quot;&gt;How event binding works&lt;/a&gt;.</source>
          <target state="translated">이벤트 작품을 바인딩하는 방법에 대한 자세한 내용은 &lt;a href=&quot;event-binding-concepts&quot;&gt;이벤트 작품을 바인딩하는 방법&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f01541207c41e42439383fd580aac8c2f0ece404" translate="yes" xml:space="preserve">
          <source>For more information on how to publish libraries see &lt;a href=&quot;creating-libraries#publishing-your-library&quot;&gt;Publishing your Library&lt;/a&gt;.</source>
          <target state="translated">라이브러리 참조 게시하는 방법에 대한 자세한 내용은 &lt;a href=&quot;creating-libraries#publishing-your-library&quot;&gt;라이브러리를 게시&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57fdf07c80db57f529b49d5e717affd9c35a3d1d" translate="yes" xml:space="preserve">
          <source>For more information on injector hierarchy and scoping, see &lt;a href=&quot;providers&quot;&gt;Providers&lt;/a&gt; and the &lt;a href=&quot;dependency-injection&quot;&gt;DI Guide&lt;/a&gt;.</source>
          <target state="translated">인젝터 계층 및 범위 지정에 대한 자세한 정보는 &lt;a href=&quot;providers&quot;&gt;제공자&lt;/a&gt; 및 &lt;a href=&quot;dependency-injection&quot;&gt;DI 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9e1b3573a165b5d7cefe2220edbaaaf19255dfd" translate="yes" xml:space="preserve">
          <source>For more information on installing Node.js, see &lt;a href=&quot;http://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt;. If you are unsure what version of Node.js runs on your system, run &lt;code&gt;node -v&lt;/code&gt; in a terminal window.</source>
          <target state="translated">Node.js 설치에 대한 자세한 정보는 &lt;a href=&quot;http://nodejs.org&quot;&gt;nodejs.org를&lt;/a&gt; 참조하십시오 . 시스템에서 실행되는 Node.js의 버전이 확실하지 않은 경우 터미널 창에서 &lt;code&gt;node -v&lt;/code&gt; 를 실행 합니다 .</target>
        </trans-unit>
        <trans-unit id="82df1d2ef5dc58c9518688898eb4e09aa451d393" translate="yes" xml:space="preserve">
          <source>For more information on lazy loading and preloading see the dedicated guide &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy loading NgModules&lt;/a&gt;.</source>
          <target state="translated">지연로드 및 사전로드에 대한 자세한 내용은 전용 가이드 &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;지연로드 NgModules를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e05dca144c4ee9dd62b4f6e1e1ff04b908916b57" translate="yes" xml:space="preserve">
          <source>For more information on listening for events, see &lt;a href=&quot;event-binding&quot;&gt;Event binding&lt;/a&gt;.</source>
          <target state="translated">이벤트 수신에 대한 자세한 내용은 &lt;a href=&quot;event-binding&quot;&gt;이벤트 바인딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81c534993810f308b62b4817239b03fdf30981b3" translate="yes" xml:space="preserve">
          <source>For more information on modules, see &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">모듈에 대한 자세한 내용은 &lt;a href=&quot;ngmodules&quot;&gt;NgModules를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="39452ffd652d163dc4e0fa8775c0130ecde8f80a" translate="yes" xml:space="preserve">
          <source>For more information on modules, see the &lt;a href=&quot;architecture#modules&quot;&gt;Modules&lt;/a&gt; section of the &lt;a href=&quot;architecture&quot;&gt;Architecture Overview&lt;/a&gt;.</source>
          <target state="translated">모듈에 대한 자세한 내용 은 &lt;a href=&quot;architecture&quot;&gt;아키텍처 개요&lt;/a&gt; 의 &lt;a href=&quot;architecture#modules&quot;&gt;모듈&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59a2f7df762f4c8870c636622125b80a62704314" translate="yes" xml:space="preserve">
          <source>For more information on property binding, see the &lt;a href=&quot;property-binding&quot;&gt;Property binding&lt;/a&gt; page.</source>
          <target state="translated">속성 바인딩에 대한 자세한 내용은 &lt;a href=&quot;property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 페이지를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="07e059ddbe4be008aaf0428ed61a37ef6ebcdbc0" translate="yes" xml:space="preserve">
          <source>For more information on property binding, see the &lt;a href=&quot;template-syntax#property-binding&quot;&gt;Property binding&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">속성 바인딩에 대한 자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4303215dc54be8669fc83391e15f7d9149e1ccff" translate="yes" xml:space="preserve">
          <source>For more information on providers and the bootstrap process, see &lt;a href=&quot;dependency-injection#bootstrap&quot;&gt;Dependency Injection&lt;/a&gt;.</source>
          <target state="translated">공급자 및 부트 스트랩 프로세스에 대한 자세한 내용은 &lt;a href=&quot;dependency-injection#bootstrap&quot;&gt;종속성 주입을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="17c52481091a39cfa252e5b04af6908465d2bb83" translate="yes" xml:space="preserve">
          <source>For more information on routing, see &lt;a href=&quot;router#basic-route&quot;&gt;Defining a basic route&lt;/a&gt; in the &lt;a href=&quot;router&quot;&gt;Routing &amp;amp; Navigation&lt;/a&gt; page.</source>
          <target state="translated">라우팅에 대한 자세한 내용 은 &lt;a href=&quot;router&quot;&gt;라우팅 및 탐색&lt;/a&gt; 페이지 에서 &lt;a href=&quot;router#basic-route&quot;&gt;기본 경로 정의를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="5a8dd2a9dd16c5cd2521045ec3553f71dc3ecef4" translate="yes" xml:space="preserve">
          <source>For more information on routing, see the &lt;a href=&quot;router#router-link&quot;&gt;RouterLink binding&lt;/a&gt; section of the &lt;a href=&quot;router&quot;&gt;Routing &amp;amp; Navigation&lt;/a&gt; page.</source>
          <target state="translated">라우팅에 대한 자세한 내용 은 &lt;a href=&quot;router&quot;&gt;라우팅 및 탐색&lt;/a&gt; 페이지 의 &lt;a href=&quot;router#router-link&quot;&gt;RouterLink 바인딩&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="acef023a437d3107cbd19bd598396e92466ffacd" translate="yes" xml:space="preserve">
          <source>For more information on style binding, see the &lt;a href=&quot;attribute-binding#style-binding&quot;&gt;Style binding&lt;/a&gt; section of the &lt;a href=&quot;attribute-binding&quot;&gt;Attribute binding&lt;/a&gt; page.</source>
          <target state="translated">스타일 바인딩에 대한 자세한 내용 은 &lt;a href=&quot;attribute-binding&quot;&gt;속성 바인딩&lt;/a&gt; 페이지 의 &lt;a href=&quot;attribute-binding#style-binding&quot;&gt;스타일 바인딩&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="794dd6e4bcfee67b081b6f8fe8556f70c59633f8" translate="yes" xml:space="preserve">
          <source>For more information on style binding, see the &lt;a href=&quot;template-syntax#style-binding&quot;&gt;Style binding&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">스타일 바인딩에 대한 자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#style-binding&quot;&gt;스타일 바인딩&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fb14e202dba47a39b777f365944dea8b76f99745" translate="yes" xml:space="preserve">
          <source>For more information on styling components, see &lt;a href=&quot;component-styles&quot;&gt;Component styles&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;component-styles&quot;&gt;구성 요소 스타일&lt;/a&gt; 지정에 대한 자세한 내용은 구성 요소 스타일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="622ee34b9f415a34e4ca9699123d7c7b9c994775" translate="yes" xml:space="preserve">
          <source>For more information on templates, see &lt;a href=&quot;template-syntax&quot;&gt;Template syntax&lt;/a&gt;.</source>
          <target state="translated">템플릿에 대한 자세한 내용은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c30b04fe7f32dfdadff87cbb4e8025359204a143" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; directive, see &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;NgStyle&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; 지시문 에 대한 자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;NgStyle&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0f67316713aa8205401761ca53e9ba7b61d09666" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; directive, see the &lt;a href=&quot;built-in-directives#ngStyle&quot;&gt;NgStyle&lt;/a&gt; section of the &lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt; page.</source>
          <target state="translated">온 자세한 내용은 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; 의 지시어는 참조 &lt;a href=&quot;built-in-directives#ngStyle&quot;&gt;NgStyle의&lt;/a&gt; 의 섹션 &lt;a href=&quot;built-in-directives&quot;&gt;내장 지시&lt;/a&gt; 페이지를.</target>
        </trans-unit>
        <trans-unit id="8952f7b930f6e954e3b60a48a8cbcaedd9b31542" translate="yes" xml:space="preserve">
          <source>For more information on the acceptable range for each of these numbers and other details see your native internationalization library.</source>
          <target state="translated">이러한 각 숫자의 허용 범위 및 기타 세부 사항에 대한 자세한 정보는 자국어 국제화 라이브러리를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ee57eb4e63029e0581a4a99825f0c72b34f92c05" translate="yes" xml:space="preserve">
          <source>For more information on two-way binding with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;built-in-directives#ngModel&quot;&gt;NgModel&amp;mdash;Two-way binding to form elements with &lt;code&gt;[(ngModel)]&lt;/code&gt;&lt;/a&gt; section of the &lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 을 사용한 양방향 바인딩에 대한 자세한 내용 &lt;a href=&quot;built-in-directives&quot;&gt;은 기본 제공 지시문&lt;/a&gt; 페이지 의 &lt;a href=&quot;built-in-directives#ngModel&quot;&gt; &lt;code&gt;[(ngModel)]&lt;/code&gt; &lt;/a&gt; 섹션을 사용하여 요소를 형성하기 위한 NgModel&amp;mdash; 양방향 바인딩을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dd88bdbd389d58114d341cf8d34f28359dc62a54" translate="yes" xml:space="preserve">
          <source>For more information on two-way binding with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;template-syntax#ngModel&quot;&gt;NgModel&amp;mdash;Two-way binding to form elements with &lt;code&gt;[(ngModel)]&lt;/code&gt;&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 을 사용한 양방향 바인딩에 대한 자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#ngModel&quot;&gt; &lt;code&gt;[(ngModel)]&lt;/code&gt; &lt;/a&gt; 섹션을 사용하여 요소를 형성 하는 NgModel&amp;mdash; 양방향 바인딩을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c2411c58d0f671afde9c66f46c77933f7e200d4a" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;attribute-binding&quot;&gt;Attribute, class, and style bindings&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;attribute-binding&quot;&gt;속성, 클래스 및 스타일 바인딩&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="99d287becb11b19affa20313753722427b8a4c4b" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;workspace-config&quot;&gt;작업 공간 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f71f227fdc76e4766dd657ee660649c4c6081d63" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;property-binding&quot;&gt;Property binding&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 페이지를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="02e0e635864a1fe70f19368b65adc1eaa90a0cba" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;router#activated-route&quot;&gt;Getting route information&lt;/a&gt; section of the &lt;a href=&quot;router&quot;&gt;Router guide&lt;/a&gt;.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;router&quot;&gt;라우터 가이드&lt;/a&gt; 의 &lt;a href=&quot;router#activated-route&quot;&gt;경로 정보 얻기&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="10968353b5aa385ae26af5f3b92c0f4f65a140ed" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;router#activated-route&quot;&gt;Router guide&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;router#activated-route&quot;&gt;라우터 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8a289a1d967f8d205c8f5814a3cc02a8c2ffaf8" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;template-syntax#other-bindings&quot;&gt;Attribute, class, and style bindings&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#other-bindings&quot;&gt;속성, 클래스 및 스타일 바인딩&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="769195363ef40e5cc39446645a5fac8af82ad174" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;template-syntax#property-binding&quot;&gt;Property binding&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#property-binding&quot;&gt;속성 바인딩&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ceeaa7f67571176fe63836b370c6a9296401536e" translate="yes" xml:space="preserve">
          <source>For more information with a working example, see the &lt;a href=&quot;router-tutorial-toh#milestone-5-route-guards&quot;&gt;routing tutorial section on route guards&lt;/a&gt;.</source>
          <target state="translated">작업 예제에 대한 자세한 내용 &lt;a href=&quot;router-tutorial-toh#milestone-5-route-guards&quot;&gt;은 경로 보호에&lt;/a&gt; 대한 라우팅 자습서 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd2e08bb8716ea5a577912e9913752b7efea7289" translate="yes" xml:space="preserve">
          <source>For more information with a working example, see the &lt;a href=&quot;router-tutorial-toh#preloading-background-loading-of-feature-areas&quot;&gt;routing tutorial section on preloading&lt;/a&gt;.</source>
          <target state="translated">작업 예제에 대한 자세한 내용 &lt;a href=&quot;router-tutorial-toh#preloading-background-loading-of-feature-areas&quot;&gt;은 미리로드에&lt;/a&gt; 대한 라우팅 자습서 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ad6b4e720e85666693541a6437ca7c180df2ef6" translate="yes" xml:space="preserve">
          <source>For more information, refer to &lt;a href=&quot;styleguide#file-tree&quot;&gt;this folder and file structure example.&lt;/a&gt;</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;styleguide#file-tree&quot;&gt;이 폴더 및 파일 구조 예제를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d2a41c7e3c796f9e2c894a9039e362a5b0903ca" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../guide/browser-support&quot;&gt;Browser Support&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../guide/browser-support&quot;&gt;브라우저 지원을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f3dc28bd501a5350cf9ed9793b9c5dd2dcfef70" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../guide/elements&quot;&gt;Angular Elements Overview&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../guide/elements&quot;&gt;각도 요소 개요를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3da5dc400360468fb0e1202b31268e48759f8137" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../guide/universal&quot;&gt;Server-side Rendering: An intro to Angular Universal&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../guide/universal&quot;&gt;서버 측 렌더링 : Angular Universal 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="42ffd5f9d2a4e70c577c23245862d32768a8e840" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;ajs-quick-reference#filters-pipes&quot;&gt;Filters/pipes&lt;/a&gt; below.</source>
          <target state="translated">자세한 내용은 아래의 &lt;a href=&quot;ajs-quick-reference#filters-pipes&quot;&gt;필터 / 파이프를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="74bb82b6fb25ae18e173857402063be64c8b3ff1" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;architecture#components&quot;&gt;Architecture Overview&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;architecture#components&quot;&gt;아키텍처 개요를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="95ce115584d7fcff4f126746b479be76d1ab3404" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;built-in-directives#ngSwitch&quot;&gt;The NgSwitch directives&lt;/a&gt; section of the &lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;built-in-directives#ngSwitch&quot;&gt;NgSwitch 지시문&lt;/a&gt; 의 섹션 &lt;a href=&quot;built-in-directives&quot;&gt;내장 지시&lt;/a&gt; 페이지를.</target>
        </trans-unit>
        <trans-unit id="f3f7da9f4b2ed38024f3075baf394b62bfebf75c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;component-styles#deprecated-deep--and-ng-deep&quot;&gt;/deep/, &amp;gt;&amp;gt;&amp;gt;, and ::ng-deep&lt;/a&gt; in the Component Styles guide.</source>
          <target state="translated">자세한 내용 은 구성 요소 스타일 안내서에서 &lt;a href=&quot;component-styles#deprecated-deep--and-ng-deep&quot;&gt;/ deep /, &amp;gt;&amp;gt;&amp;gt; 및 :: ng-deep&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="910e6c9f9471fae61f362d6475c1608582103bfa" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;entry-components&quot;&gt;Entry Components&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;entry-components&quot;&gt;입력 구성 요소를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="647d992d00106f995eb13d466d01fe417cfe65cf" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;feature-modules&quot;&gt;Feature Modules&lt;/a&gt; and &lt;a href=&quot;module-types&quot;&gt;Module Types&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;feature-modules&quot;&gt;기능 모듈&lt;/a&gt; 및 &lt;a href=&quot;module-types&quot;&gt;모듈 유형을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e65514d22eada34ea7b89a6ac9d12c8e55cfaada" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;file-structure&quot;&gt;Project File Structure&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;file-structure&quot;&gt;프로젝트 파일 구조를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f9218549d8779c7011a94db6914ce5a34a35b02" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;file-structure&quot;&gt;Workspace and Project File Structure&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;file-structure&quot;&gt;작업 공간 및 프로젝트 파일 구조를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88a7c699d9f401cabad96d14c386c540d56f272c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;file-structure&quot;&gt;Workspace and project file structure&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;file-structure&quot;&gt;작업 공간 및 프로젝트 파일 구조를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="61925bb6327cd5e1406c0ce1f5c086e01c47cf5a" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;form-validation&quot;&gt;Form Validation&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;form-validation&quot;&gt;양식 유효성 검사를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3759746ed1e1fa5e80f65859aa178d1f09e1ad1e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://autoprefixer.github.io/&quot;&gt;Autoprefixer documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://autoprefixer.github.io/&quot;&gt;자동 접두사 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d347d2199555de02a94c02fec3073a412a4f0995" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;lifecycle-hooks#content-projection&quot;&gt;Responding to changes in content&lt;/a&gt;.</source>
          <target state="translated">자세한 &lt;a href=&quot;lifecycle-hooks#content-projection&quot;&gt;내용은 콘텐츠 변경에 응답을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd8ac232ee0667f9ad348999ea89abd8c513a96f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;ngmodule-vs-jsmodule&quot;&gt;JavaScript Modules vs. NgModules&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;ngmodule-vs-jsmodule&quot;&gt;JavaScript 모듈과 NgModules를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffc85b5be8ec62000eb01feeeeb30858b38867de" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;ngmodules&quot;&gt;NgModules를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3bacaa09ba02cc1ce65095dcd8b2994f774ff5a" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;router&quot;&gt;Routing and Navigation&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;router&quot;&gt;라우팅 및 탐색을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="28d7da8c96ca8c10b7825011250effd25ef6ac50" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;schematics&quot;&gt;Schematics&lt;/a&gt; and &lt;a href=&quot;creating-libraries#integrating-with-the-cli&quot;&gt;Integrating Libraries with the CLI&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;schematics&quot;&gt;회로도&lt;/a&gt; 및 &lt;a href=&quot;creating-libraries#integrating-with-the-cli&quot;&gt;라이브러리와 CLI 통합을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="faf78994c8191e68393eb8590f1621ac1a34d996" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;service-worker-config#assetgroups&quot;&gt;Service Worker Configuration&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;service-worker-config#assetgroups&quot;&gt;서비스 워커 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3cb457dd4fe6b961a9c5d6d0ef8b39b976b5d6f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;structural-directives&quot;&gt;구조 지시문을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e72ee8c0272a1b8689787af6c58eaa81e5346b14" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;The NgSwitch directives&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 &lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;의 NgSwitch 지시문&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="554b553aa497caea9085de0edefb3cfda2675bac" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;template-typecheck&quot;&gt;Template type checking guide&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;template-typecheck&quot;&gt;템플릿 유형 검사 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8f1d4de7f1fc3885fd915873481df8c0921c29a" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;workspace-config&quot;&gt;작업 공간 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="feacd759d802327f6bf7203cee38b5e8d2c13c24" translate="yes" xml:space="preserve">
          <source>For more information, see Web Component documentation for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Creating_custom_events&quot;&gt;Creating custom events&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Creating_custom_events&quot;&gt;사용자 정의 이벤트 작성을&lt;/a&gt; 위한 웹 컴포넌트 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8d5851cb623be46e85825bee69058823d2cf024" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;architecture#components&quot;&gt;Components&lt;/a&gt; section of the &lt;a href=&quot;architecture&quot;&gt;Architecture Overview&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;architecture&quot;&gt;아키텍처 개요&lt;/a&gt; 페이지 의 &lt;a href=&quot;architecture#components&quot;&gt;구성 요소&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9562f2baea93ad760f4f07698ee700193ef683f3" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;architecture#dependency-injection&quot;&gt;Dependency injection&lt;/a&gt; section of the &lt;a href=&quot;architecture&quot;&gt;Architecture Overview&lt;/a&gt;.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;architecture&quot;&gt;아키텍처 개요&lt;/a&gt; 의 &lt;a href=&quot;architecture#dependency-injection&quot;&gt;종속성 주입&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c12faa4c7f50171417faf485adc4db4bf9b2f3fa" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;built-in-directives#microsyntax&quot;&gt;ngFor micro-syntax&lt;/a&gt; section of the &lt;a href=&quot;built-in-directives&quot;&gt;Built-in Directives&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;built-in-directives#microsyntax&quot;&gt;기본 제공 &lt;/a&gt;&lt;a href=&quot;built-in-directives&quot;&gt;지시문&lt;/a&gt; 페이지 의 ngFor 마이크로 구문 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4e5dc6de3e5e8e07ada84ea2b37ea4e5cddbf480" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;deployment#differential-loading&quot;&gt;Deployment&lt;/a&gt; guide.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;deployment#differential-loading&quot;&gt;배포&lt;/a&gt; 가이드를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="a30335ec49dd934b64fb8a20d55bd3792f284dc7" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;event-binding&quot;&gt;Event binding&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;event-binding&quot;&gt;이벤트 바인딩&lt;/a&gt; 페이지를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="4e897a0d9749db6b4e9a381af9d22e7733f38b78" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API#Interfaces&quot;&gt;MDN Interfaces documentation&lt;/a&gt; which has API docs for all the standard DOM elements and their properties. Comparing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; attributes&lt;/a&gt; attributes to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; properties&lt;/a&gt; provides a helpful example for differentiation. In particular, you can navigate from the attributes page to the properties via &quot;DOM interface&quot; link, and navigate the inheritance hierarchy up to &lt;code&gt;HTMLTableCellElement&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 모든 표준 DOM 요소 및 해당 속성에 대한 API 문서가 있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API#Interfaces&quot;&gt;MDN 인터페이스 설명서&lt;/a&gt; 를 참조하십시오 . 비교 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 속성을&lt;/a&gt; 받는 특성을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 속성은&lt;/a&gt; 차별화를위한 유용한 예제를 제공합니다. 특히, &quot;DOM 인터페이스&quot;링크를 통해 속성 페이지에서 특성으로 탐색하고 상속 계층을 &lt;code&gt;HTMLTableCellElement&lt;/code&gt; 까지 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92a654315b18fc9d9ce2b3617fdc86b2eb17786c" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API#Interfaces&quot;&gt;MDN Interfaces documentation&lt;/a&gt; which has API docs for all the standard DOM elements and their properties. Comparing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; attributes&lt;/a&gt; to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; properties&lt;/a&gt; provides a helpful example for differentiation. In particular, you can navigate from the attributes page to the properties via &quot;DOM interface&quot; link, and navigate the inheritance hierarchy up to &lt;code&gt;HTMLTableCellElement&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 모든 표준 DOM 요소 및 해당 속성에 대한 API 문서가 있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API#Interfaces&quot;&gt;MDN 인터페이스 문서&lt;/a&gt; 를 참조하세요 . 비교 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 속성을&lt;/a&gt; 받는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 속성은&lt;/a&gt; 차별화를위한 유용한 예제를 제공합니다. 특히 속성 페이지에서 &quot;DOM 인터페이스&quot;링크를 통해 속성으로 이동하고 상속 계층 구조를 &lt;code&gt;HTMLTableCellElement&lt;/code&gt; 까지 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cc2dd3553dd60cfafd23d0f7c3bcbdbcd65cd08" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript Handbook&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript Handbook을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bde673d22460d32d96859a37e7d2bad591977de" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;interpolation&quot;&gt;Interpolation&lt;/a&gt; guide.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;interpolation&quot;&gt;보간&lt;/a&gt; 가이드를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="44a555ff769d815cc3aa790bcef685ef9b5657cd" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;template-reference-variables&quot;&gt;Template reference variable&lt;/a&gt; guide.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;template-reference-variables&quot;&gt;템플릿 참조 변수&lt;/a&gt; 가이드를 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="e41e0a5e60e15529ca5490506b25bc9d5d510d6f" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;template-syntax#event-binding&quot;&gt;Event binding&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#event-binding&quot;&gt;이벤트 바인딩&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d74a1bd0b2c736fe8616be8256dd3c4c3aff5eb0" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;template-syntax#interpolation&quot;&gt;Interpolation&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#interpolation&quot;&gt;보간&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f81eb224215358882f713669daaa0a505a0494b1" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;template-syntax#microsyntax&quot;&gt;ngFor micro-syntax&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 페이지 의 &lt;a href=&quot;template-syntax#microsyntax&quot;&gt;ngFor 마이크로 구문&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f41491a9bc619bc06a138dc6be2c2f60b631649c" translate="yes" xml:space="preserve">
          <source>For more information, see the XSSI section of this &lt;a href=&quot;https://security.googleblog.com/2011/05/website-security-for-webmasters.html&quot;&gt;Google web security blog post&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 &lt;a href=&quot;https://security.googleblog.com/2011/05/website-security-for-webmasters.html&quot;&gt;Google 웹 보안 블로그 게시물&lt;/a&gt; 의 XSSI 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b3a041e7e67d85d817c91582c81d8e8a9f22482" translate="yes" xml:space="preserve">
          <source>For more information, see the usage notes for &lt;a href=&quot;../api/forms/formcontroldirective#use-with-ngmodel&quot;&gt;&lt;code&gt;FormControlDirective&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/forms/formcontrolname#use-with-ngmodel&quot;&gt;&lt;code&gt;FormControlName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../api/forms/formcontroldirective#use-with-ngmodel&quot;&gt; &lt;code&gt;FormControlDirective&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../api/forms/formcontrolname#use-with-ngmodel&quot;&gt; &lt;code&gt;FormControlName&lt;/code&gt; &lt;/a&gt; 의 사용 정보를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb1b9eb393e6ee99baf5d52bbb3bbc1d37842c77" translate="yes" xml:space="preserve">
          <source>For more on NgModules you're likely to see frequently in apps, see &lt;a href=&quot;frequent-ngmodules&quot;&gt;Frequently Used Modules&lt;/a&gt;.</source>
          <target state="translated">NgModules에 대한 자세한 내용은 앱에서 &lt;a href=&quot;frequent-ngmodules&quot;&gt;자주&lt;/a&gt; 볼 수 있습니다 ( 자주 사용하는 모듈)를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8446196464e268c008d3d3157078edc2eb7a2ad8" translate="yes" xml:space="preserve">
          <source>For more on browser URL styles, see &lt;a href=&quot;router#browser-url-styles&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt; and browser URL styles&lt;/a&gt;.</source>
          <target state="translated">브라우저 URL 스타일에 대한 자세한 내용은 &lt;a href=&quot;router#browser-url-styles&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; 및 브라우저 URL 스타일을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="c7e4611ebab16c5cdd03b3e589a81a8f80eb9350" translate="yes" xml:space="preserve">
          <source>For more on form validation, visit the &lt;a href=&quot;form-validation&quot;&gt;Form Validation&lt;/a&gt; guide.</source>
          <target state="translated">양식 검증에 대한 자세한 내용은 &lt;a href=&quot;form-validation&quot;&gt;양식 검증&lt;/a&gt; 안내서를 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="666e64d5996e9b26f42c2196557076d536186936" translate="yes" xml:space="preserve">
          <source>For more on how to use two-way binding in forms, see Angular &lt;a href=&quot;template-syntax#ngModel&quot;&gt;NgModel&lt;/a&gt;.</source>
          <target state="translated">양식에서 양방향 바인딩을 사용하는 방법에 대한 자세한 내용은 Angular &lt;a href=&quot;template-syntax#ngModel&quot;&gt;NgModel을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="809ad89220646ba891d89d96783aa3e684e961d1" translate="yes" xml:space="preserve">
          <source>For more on the design considerations and intentions, see &lt;a href=&quot;https://github.com/angular/vscode-ng-language-service/wiki/Design&quot;&gt;design documentation here&lt;/a&gt;.</source>
          <target state="translated">디자인 고려 사항 및 의도에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/angular/vscode-ng-language-service/wiki/Design&quot;&gt;여기에서 디자인 설명서를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f278974e8aa6767eefc9593cf1e0b5499272b44b" translate="yes" xml:space="preserve">
          <source>For more usage information, see the &lt;a href=&quot;../guide/service-worker-intro&quot;&gt;Service Workers&lt;/a&gt; guide.</source>
          <target state="translated">자세한 사용법은 &lt;a href=&quot;../guide/service-worker-intro&quot;&gt;Service Workers&lt;/a&gt; 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab92685c5e50a5b9a7e3884b2e99d733f6442437" translate="yes" xml:space="preserve">
          <source>For now, focus on &lt;em&gt;Barry&lt;/em&gt;'s constructor.</source>
          <target state="translated">지금은 &lt;em&gt;Barry&lt;/em&gt; 의 생성자 에 중점을 둡니다 .</target>
        </trans-unit>
        <trans-unit id="2d8ea80142bc374361cb613dc3fb6f35beb28443" translate="yes" xml:space="preserve">
          <source>For now, it is not recommended to publish Ivy libraries to NPM because Ivy generated code is not backward compatible with View Engine, so apps using View Engine will not be able to consume them. Furthermore, the internal Ivy instructions are not yet stable, which can potentially break consumers using a different Angular version from the one used to build the library.</source>
          <target state="translated">현재로서는 Ivy 생성 코드가 View Engine과 역 호환되지 않으므로 Ivy 라이브러리를 NPM에 게시하지 않는 것이 좋습니다. 따라서 View Engine을 사용하는 앱은이를 사용할 수 없습니다. 또한 내부 Ivy 명령어는 아직 안정적이지 않아 라이브러리를 빌드하는 데 사용 된 것과 다른 Angular 버전을 사용하는 소비자를 잠재적으로 손상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a468f4514fb514114981b2143412a3d0c505947" translate="yes" xml:space="preserve">
          <source>For one minute, use &lt;code&gt;=1 {one minute}&lt;/code&gt;.</source>
          <target state="translated">1 분 동안 &lt;code&gt;=1 {one minute}&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="59100ae08d659db33b88f25209e8830fe8afa97e" translate="yes" xml:space="preserve">
          <source>For one thing, TypeScript is a superset of ES2015. Any app that has previously been written in ES5 - like the PhoneCat example has - can with TypeScript start incorporating all of the JavaScript features that are new to ES2015. These include things like &lt;code&gt;let&lt;/code&gt;s and &lt;code&gt;const&lt;/code&gt;s, arrow functions, default function parameters, and destructuring assignments.</source>
          <target state="translated">우선 TypeScript는 ES2015의 상위 집합입니다. PhoneCat 예제와 같이 이전에 ES5로 작성된 모든 앱은 TypeScript를 사용하여 ES2015에 새로 도입 된 모든 JavaScript 기능을 통합 할 수 있습니다. 여기에는 &lt;code&gt;let&lt;/code&gt; 및 &lt;code&gt;const&lt;/code&gt; , 화살표 기능, 기본 기능 매개 변수 및 할당 지정 취소 와 같은 항목이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="f03c29e27c6c18bf79682cff783ba6a44d092067" translate="yes" xml:space="preserve">
          <source>For our example builder, we expect the &lt;code&gt;options&lt;/code&gt; value to be a &lt;code&gt;JsonObject&lt;/code&gt; with two keys: a &lt;code&gt;command&lt;/code&gt; that is a string, and an &lt;code&gt;args&lt;/code&gt; array of string values.</source>
          <target state="translated">예제 빌더의 경우 &lt;code&gt;options&lt;/code&gt; 값 은 두 개의 키 ( 문자열 인 &lt;code&gt;command&lt;/code&gt; 및 문자열 값 의 &lt;code&gt;args&lt;/code&gt; 배열) 가있는 &lt;code&gt;JsonObject&lt;/code&gt; 가 될 것으로 예상 합니다.</target>
        </trans-unit>
        <trans-unit id="ac11e83a712be720c89c59c4c2dd72286d9a33e6" translate="yes" xml:space="preserve">
          <source>For performance reasons, Angular only runs async validators if all sync validators pass. Each must complete before errors are set.</source>
          <target state="translated">성능상의 이유로 Angular는 모든 동기화 유효성 검사기가 통과하는 경우에만 비동기 유효성 검사기를 실행합니다. 각각은 오류가 설정되기 전에 완료되어야합니다.</target>
        </trans-unit>
        <trans-unit id="56f7c93c7f59e5f9168a4708eb3d38dde1a88f3d" translate="yes" xml:space="preserve">
          <source>For performance reasons, no comparable pipe exists in Angular. Do all your filtering in the component. If you need the same filtering code in several templates, consider building a custom pipe.</source>
          <target state="translated">성능상의 이유로 Angular에는 유사한 파이프가 없습니다. 구성 요소에서 모든 필터링을 수행하십시오. 여러 템플릿에 동일한 필터링 코드가 필요한 경우 사용자 지정 파이프를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="b53efe89cb24b2f51ff65079bc39c73f64f531fe" translate="yes" xml:space="preserve">
          <source>For performance reasons, no comparable pipe exists in Angular. Instead, use component code to order or sort results. If you need the same ordering or sorting code in several templates, consider building a custom pipe.</source>
          <target state="translated">성능상의 이유로 Angular에는 유사한 파이프가 없습니다. 대신 구성 요소 코드를 사용하여 결과를 정렬하거나 정렬하십시오. 여러 템플릿에서 동일한 주문 또는 정렬 코드가 필요한 경우 사용자 지정 파이프를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="5068e7ff50c8b38b8c331c0d5f43808c17db59a9" translate="yes" xml:space="preserve">
          <source>For performance reasons, the Stackblitz does not start right away. The reader sees an image instead. Clicking the image starts the sometimes-slow process of launching the embedded Stackblitz within an iframe on the page.</source>
          <target state="translated">성능상의 이유로 Stackblitz는 바로 시작되지 않습니다. 독자는 대신 이미지를 봅니다. 이미지를 클릭하면 페이지의 iframe 내에서 임베디드 Stackblitz를 시작하는 느리게 진행되는 프로세스가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4960e870d39261ecd536d1eac263c0f8fe1003c5" translate="yes" xml:space="preserve">
          <source>For positional properties with a numeric value, define a unit by providing the value as a string, in quotes, with the appropriate suffix:</source>
          <target state="translated">숫자 값이있는 위치 특성의 경우 적절한 접미어를 사용하여 값을 따옴표로 묶은 문자열로 제공하여 단위를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="4bcb0ca83da156d6555dbcdf2d6aae37ce332bed" translate="yes" xml:space="preserve">
          <source>For production apps you want to load the smallest code possible. The code should contain only the classes that you actually need and exclude components that are never used. For this reason, the Angular compiler only generates code for components which are reachable from the &lt;code&gt;entryComponents&lt;/code&gt;; This means that adding more references to &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; does not imply that they will necessarily be included in the final bundle.</source>
          <target state="translated">프로덕션 앱의 경우 가능한 가장 작은 코드를로드하려고합니다. 코드에는 실제로 필요한 클래스 만 포함해야하며 절대 사용되지 않은 구성 요소는 제외해야합니다. 이러한 이유로 Angular 컴파일러는 &lt;code&gt;entryComponents&lt;/code&gt; 에서 접근 할 수있는 컴포넌트에 대한 코드 만 생성합니다 . 이것은 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; 대한 참조를 더 추가 한다고해서 반드시 최종 번들에 포함된다는 것을 의미하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="8dbcbcd001d95d25a4ecf8eb8f00936e4bab529d" translate="yes" xml:space="preserve">
          <source>For production builds, you can use configuration composition to execute both configurations:</source>
          <target state="translated">프로덕션 빌드의 경우 구성 구성을 사용하여 두 구성을 모두 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e270ff1b337da62176ea2fcde372a35480e5c1ae" translate="yes" xml:space="preserve">
          <source>For production builds, you define a separate &lt;code&gt;production-fr&lt;/code&gt; build configuration in the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="translated">프로덕션 빌드의 경우 CLI 구성 파일 &lt;code&gt;angular.json&lt;/code&gt; 에 별도의 &lt;code&gt;production-fr&lt;/code&gt; 빌드 구성 을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c9d8157e0abf506f44806175c23d88246ace003" translate="yes" xml:space="preserve">
          <source>For resources already in the cache, the &lt;code&gt;updateMode&lt;/code&gt; determines the caching behavior when a new version of the app is discovered. Any resources in the group that have changed since the previous version are updated in accordance with &lt;code&gt;updateMode&lt;/code&gt;.</source>
          <target state="translated">캐시에 이미있는 리소스의 경우 &lt;code&gt;updateMode&lt;/code&gt; 는 새 버전의 앱이 검색 될 때 캐싱 동작을 결정합니다. 이전 버전 이후 변경된 그룹의 모든 자원은 &lt;code&gt;updateMode&lt;/code&gt; 에 따라 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3769e9ead05944db64dff6a941316a57ddc27ca" translate="yes" xml:space="preserve">
          <source>For simple updates, the CLI command &lt;a href=&quot;cli/update&quot;&gt;&lt;code&gt;ng update&lt;/code&gt;&lt;/a&gt; is all you need. Without additional arguments, &lt;a href=&quot;cli/update&quot;&gt;&lt;code&gt;ng update&lt;/code&gt;&lt;/a&gt; lists the updates that are available to you and provides recommended steps to update your application to the most current version.</source>
          <target state="translated">간단한 업데이트의 경우 CLI 명령 &lt;a href=&quot;cli/update&quot;&gt; &lt;code&gt;ng update&lt;/code&gt; &lt;/a&gt; 만 있으면됩니다. 추가 인수없이 &lt;a href=&quot;cli/update&quot;&gt; &lt;code&gt;ng update&lt;/code&gt; &lt;/a&gt; 는 사용 가능한 업데이트를 나열하고 응용 프로그램을 최신 버전으로 업데이트하기위한 권장 단계를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="48fa4cabfb7a2025145527cba1031b87da1fa980" translate="yes" xml:space="preserve">
          <source>For step-by-step instructions on how to update to the latest Angular release (and leverage our automated migration tools to do so), use the interactive update guide at &lt;a href=&quot;https://update.angular.io&quot;&gt;update.angular.io&lt;/a&gt;.</source>
          <target state="translated">최신 Angular 릴리스로 업데이트하는 방법에 대한 단계별 지침 (자동 마이그레이션 도구 활용)은 &lt;a href=&quot;https://update.angular.io&quot;&gt;update.angular.io&lt;/a&gt; 의 대화 형 업데이트 가이드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="898c1b8e7d6b6eb8479ce9ce66a1cae8125ad696" translate="yes" xml:space="preserve">
          <source>For step-by-step instructions on how to update to the latest Angular release, use the interactive update guide at &lt;a href=&quot;https://update.angular.io&quot;&gt;update.angular.io&lt;/a&gt;.</source>
          <target state="translated">최신 Angular 릴리스로 업데이트하는 방법에 대한 단계별 지침은 &lt;a href=&quot;https://update.angular.io&quot;&gt;update.angular.io&lt;/a&gt; 의 대화식 업데이트 안내서를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7e0f32120f476265451193f4e74a60c10bf9309" translate="yes" xml:space="preserve">
          <source>For step-by-step instructions, continue with this section. If you can set it up on your own, skip ahead to &lt;a href=&quot;hierarchical-dependency-injection#modify-visibility&quot;&gt;Modifying service availability&lt;/a&gt;.</source>
          <target state="translated">단계별 지침은이 섹션을 계속하십시오. 직접 설정할 수 있으면 &lt;a href=&quot;hierarchical-dependency-injection#modify-visibility&quot;&gt;서비스 가용성 수정으로&lt;/a&gt; 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="85bc8ff1d58fc1fdd8cbbba3a9815fc69137efd2" translate="yes" xml:space="preserve">
          <source>For submodules and lazy loaded submodules the module should be used as follows:</source>
          <target state="translated">하위 모듈 및 지연로드 된 하위 모듈의 경우 다음과 같이 모듈을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="90f37f88122e994465e881ad8b0b5425c391046f" translate="yes" xml:space="preserve">
          <source>For terminal input and output, put the content between &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; tags, set the CSS class to &lt;code&gt;code-shell&lt;/code&gt;, and set the language attribute to &lt;code&gt;sh&lt;/code&gt; as in this example.</source>
          <target state="translated">터미널 입력 및 출력의 경우 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 태그 사이에 내용을 넣고 CSS 클래스를 &lt;code&gt;code-shell&lt;/code&gt; 로 설정하고 language 속성을 이 예에서와 같이 &lt;code&gt;sh&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="376030cbe16b576d00e5145f2e5c14f0d5298340" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;@routeAnimation&lt;/code&gt; transitions to key off states, provide it with the &lt;code&gt;data&lt;/code&gt; from the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; is exposed as an &lt;code&gt;outlet&lt;/code&gt; template variable, so you bind a reference to the router outlet. This example uses a variable of &lt;code&gt;routerOutlet&lt;/code&gt;.</source>
          <target state="translated">를 들어 &lt;code&gt;@routeAnimation&lt;/code&gt; 의 오프 상태 키 전환은 그것을 제공하는 &lt;code&gt;data&lt;/code&gt; 로부터 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 은 int로서 노출되는 &lt;code&gt;outlet&lt;/code&gt; 가 출구 라우터에 대한 참조를 결합하므로, 템플릿 변수. 이 예에서는 &lt;code&gt;routerOutlet&lt;/code&gt; 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="67f3b4a3f79c70fd90d2e8b510bd8b8154ea4632" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;@routeAnimation&lt;/code&gt; transitions to key off states, you'll need to provide it with the &lt;code&gt;data&lt;/code&gt; from the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; is exposed as an &lt;code&gt;outlet&lt;/code&gt; template variable, so you bind a reference to the router outlet. A variable of &lt;code&gt;routerOutlet&lt;/code&gt; is an ideal choice.</source>
          <target state="translated">를 들어 &lt;code&gt;@routeAnimation&lt;/code&gt; 의 오프 상태 키 전환, 당신은 그것을 제공해야합니다 &lt;code&gt;data&lt;/code&gt; 로부터 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 은 int로서 노출되는 &lt;code&gt;outlet&lt;/code&gt; 가 출구 라우터에 대한 참조를 결합하므로, 템플릿 변수. &lt;code&gt;routerOutlet&lt;/code&gt; 의 변수 는 이상적인 선택입니다.</target>
        </trans-unit>
        <trans-unit id="d28868014417fb01c0acf4d2adc0344d6a4f70c1" translate="yes" xml:space="preserve">
          <source>For the DOM this means using modern &lt;a href=&quot;https://w3c.github.io/webcomponents/spec/shadow/&quot;&gt;Shadow DOM&lt;/a&gt; and creating a ShadowRoot for Component's Host Element.</source>
          <target state="translated">DOM의 경우 이는 최신 &lt;a href=&quot;https://w3c.github.io/webcomponents/spec/shadow/&quot;&gt;Shadow DOM을 사용&lt;/a&gt; 하고 구성 요소의 호스트 요소에 대한 ShadowRoot를 생성하는 것을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="e5ae481bd22e6b320de4e085ee12b07ea1dc6599" translate="yes" xml:space="preserve">
          <source>For the HTML to be interpreted, bind it to an HTML property such as &lt;code&gt;innerHTML&lt;/code&gt;. But binding a value that an attacker might control into &lt;code&gt;innerHTML&lt;/code&gt; normally causes an XSS vulnerability. For example, code contained in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag is executed:</source>
          <target state="translated">HTML을 해석하려면 &lt;code&gt;innerHTML&lt;/code&gt; 과 같은 HTML 속성에 바인딩하십시오 . 그러나 침입자가 &lt;code&gt;innerHTML&lt;/code&gt; 에 제어 할 수있는 값을 바인딩하면 일반적으로 XSS 취약점이 발생합니다. 예를 들어 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그에 포함 된 코드 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="24a71fc43d5b7fbd4911209fa7facf6b131f2bc1" translate="yes" xml:space="preserve">
          <source>For the PhoneCat app, we can install the necessary type definitions by running the following command:</source>
          <target state="translated">PhoneCat 앱의 경우 다음 명령을 실행하여 필요한 유형 정의를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a7d83dc6496a6d0ac88a4d647d71e5177d3d4c8" translate="yes" xml:space="preserve">
          <source>For the checkout process, users need to be able to submit the form data (their name and address). When the order is submitted, the form should reset and the cart should clear.</source>
          <target state="translated">체크 아웃 프로세스의 경우 사용자는 양식 데이터 (이름과 주소)를 제출할 수 있어야합니다. 주문이 제출되면 양식이 재설정되고 장바구니가 지워 져야합니다.</target>
        </trans-unit>
        <trans-unit id="8e9ff0abe3354846a4deefb72e44db8e1daff1d2" translate="yes" xml:space="preserve">
          <source>For the checkout process, users need to submit their name and address. When they submit their order, the form should reset and the cart should clear.</source>
          <target state="translated">결제 과정에서 사용자는 이름과 주소를 제출해야합니다. 주문을 제출하면 양식이 재설정되고 장바구니가 지워집니다.</target>
        </trans-unit>
        <trans-unit id="e0609d80faf45de9bf263a0466a261fa7e511724" translate="yes" xml:space="preserve">
          <source>For the completed router app, see the  for the final source code.</source>
          <target state="translated">완성 된 라우터 앱은 최종 소스 코드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="783cec887aa0f06499c3a51fe1160be6c320bcee" translate="yes" xml:space="preserve">
          <source>For the component specs, you can mock out the &lt;code&gt;Phone&lt;/code&gt; service itself, and have it provide canned phone data. You use Angular's component unit testing APIs for both components.</source>
          <target state="translated">구성 요소 사양의 경우 &lt;code&gt;Phone&lt;/code&gt; 서비스 자체를 모방하여 통조림 전화 데이터를 제공 할 수 있습니다. 두 구성 요소 모두에 Angular의 구성 요소 단위 테스트 API를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f5ff113fbd1cbc6504a499782fa6ead9f4792b2e" translate="yes" xml:space="preserve">
          <source>For the example app used in NgModules-related topics, see the .</source>
          <target state="translated">NgModules 관련 항목에 사용 된 예제 앱은.</target>
        </trans-unit>
        <trans-unit id="d78c5c7228da73d53e133d40ca1802d017f6597e" translate="yes" xml:space="preserve">
          <source>For the final sample app using the provider that this page describes, see the live example.</source>
          <target state="translated">이 페이지에서 설명하는 제공자를 사용하는 최종 샘플 앱은 라이브 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="27b235dc45afd6facbd3b5c02a18555412a410e6" translate="yes" xml:space="preserve">
          <source>For the final sample app with a feature module that this page describes, see the live example.</source>
          <target state="translated">이 페이지에서 설명하는 기능 모듈이 포함 된 최종 샘플 앱은 라이브 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4246d4ee6a09e032ca56da78e4f5689248f80123" translate="yes" xml:space="preserve">
          <source>For the final sample app with two lazy-loaded modules that this page describes, see the live example.</source>
          <target state="translated">이 페이지에서 설명하는 두 개의 지연로드 모듈이있는 최종 샘플 앱은 라이브 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="011abc43c1e79dde8618a68e913802e5d5ea7e13" translate="yes" xml:space="preserve">
          <source>For the following template HTML, a directive with an &lt;code&gt;input[type=text]&lt;/code&gt; selector, would be instantiated only on the &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">다음 템플릿 HTML의 경우 &lt;code&gt;input[type=text]&lt;/code&gt; 선택기가 있는 지시문 은 &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; 요소 에서만 인스턴스화됩니다 .</target>
        </trans-unit>
        <trans-unit id="a49847962d6b00ebefae493d9c5a99b8fc8a1214" translate="yes" xml:space="preserve">
          <source>For the most part, you specify the modules in the same way you would for a regular app. Then, you use the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; helpers to let the two frameworks know about assets they can use from each other. This is known as &quot;upgrading&quot; and &quot;downgrading&quot;.</source>
          <target state="translated">대부분의 경우 일반 앱과 같은 방식으로 모듈을 지정합니다. 그런 다음 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; 도우미를 사용하여 두 프레임 워크가 서로 사용할 수있는 자산에 대해 알 수 있도록합니다. 이것을 &quot;업그레이드&quot;및 &quot;다운 그레이드&quot;라고합니다.</target>
        </trans-unit>
        <trans-unit id="3621652a4036fadd7c8b6400eb8f40d09aabefb8" translate="yes" xml:space="preserve">
          <source>For the profile form, add two form control instances with the names &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;.</source>
          <target state="translated">프로파일 양식의 경우 이름이 &lt;code&gt;firstName&lt;/code&gt; 및 &lt;code&gt;lastName&lt;/code&gt; 인 두 개의 양식 제어 인스턴스를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc5e36aeebbe0344b14712c1ecb8297b3ef39916" translate="yes" xml:space="preserve">
          <source>For the purpose of this Getting Started guide, we have provided shipping data in &lt;code&gt;assets/shipping.json&lt;/code&gt;. You'll use this data to add shipping prices for items in the cart.</source>
          <target state="translated">이 시작 안내서의 목적 상 운송 데이터를 &lt;code&gt;assets/shipping.json&lt;/code&gt; . 이 데이터를 사용하여 카트에있는 품목의 운송 가격을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8c9229b8fa26bd78232a9371294d26967a24811f" translate="yes" xml:space="preserve">
          <source>For the reasons &lt;a href=&quot;http#always-subscribe&quot;&gt;explained above&lt;/a&gt;, the caller (&lt;code&gt;HeroesComponent.update()&lt;/code&gt; in this case) must &lt;code&gt;subscribe()&lt;/code&gt; to the observable returned from the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#put&quot;&gt;HttpClient.put()&lt;/a&gt;&lt;/code&gt; in order to initiate the request.</source>
          <target state="translated">&lt;a href=&quot;http#always-subscribe&quot;&gt;위에서 설명한&lt;/a&gt; 이유로 , 호출자 ( 이 경우 &lt;code&gt;HeroesComponent.update()&lt;/code&gt; 는 요청을 시작하기 위해 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#put&quot;&gt;HttpClient.put()&lt;/a&gt;&lt;/code&gt; 에서 반환 된 Observable에 &lt;code&gt;subscribe()&lt;/code&gt; 를 등록 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f7526169f97cef44fd9d28453a2c4f92aa87dd28" translate="yes" xml:space="preserve">
          <source>For the sample app that the testing guides describe, see the &lt;span name=&quot;testing&quot;&gt;sample app&lt;/span&gt;.</source>
          <target state="translated">테스트 가이드에서 설명하는 &lt;span name=&quot;testing&quot;&gt;샘플 앱&lt;/span&gt; 은 &lt;span name=&quot;testing&quot;&gt;샘플 앱을&lt;/span&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="444c2bd4f3f3d5ec53c8e5e84869f66e9f86edb7" translate="yes" xml:space="preserve">
          <source>For the sample app that the testing guides describe, see the sample app.</source>
          <target state="translated">테스트 가이드에서 설명하는 샘플 앱은 샘플 앱을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="a03da81bfe7bb158872f5168f532376828a894c4" translate="yes" xml:space="preserve">
          <source>For the sample app that this page describes, see the live example.</source>
          <target state="translated">이 페이지에서 설명하는 샘플 앱은 라이브 예제를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="5aaeba71e2783e9ee1659df65aaa38fb1f3deaf4" translate="yes" xml:space="preserve">
          <source>For the sample app used in this topic, see the live example.</source>
          <target state="translated">이 주제에 사용 된 샘플 앱은 라이브 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="68d620c3a6443b6cece35aadad712c05dcf3abe3" translate="yes" xml:space="preserve">
          <source>For the simplest deployment, create a production build and copy the output directory to a web server.</source>
          <target state="translated">가장 간단한 배치를 위해 프로덕션 빌드를 작성하고 출력 디렉토리를 웹 서버에 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="5f463665c3fbe66638a2f525eaed7b4dd6b3ab80" translate="yes" xml:space="preserve">
          <source>For the tests featured in the testing guides, see &lt;span name=&quot;testing&quot;&gt;tests&lt;/span&gt;.</source>
          <target state="translated">테스트 가이드에 등장하는 시험을 참조 &lt;span name=&quot;testing&quot;&gt;테스트를&lt;/span&gt; .</target>
        </trans-unit>
        <trans-unit id="63ae96609fab93d01d54d604802e8f62e8ffac68" translate="yes" xml:space="preserve">
          <source>For the tests features in the testing guides, see &lt;span name=&quot;testing&quot;&gt;tests&lt;/span&gt;.</source>
          <target state="translated">테스트 가이드의 테스트 기능은 &lt;span name=&quot;testing&quot;&gt;tests를&lt;/span&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="3edfb95514167d5a866779f9beeaeecb7dd96e8d" translate="yes" xml:space="preserve">
          <source>For the tests features in the testing guides, see tests.</source>
          <target state="translated">테스트 가이드의 테스트 기능은 테스트를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="6178140b72e1eb2891987094c1ff5dc3ae74a205" translate="yes" xml:space="preserve">
          <source>For these reasons, it is often wise to add a custom anchor explicitly, just above the heading or text to which it applies, using the special  syntax like this.</source>
          <target state="translated">이러한 이유로 특수 구문을 적용하는 경우 제목이나 텍스트 바로 위에 커스텀 앵커를 명시 적으로 추가하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="995de1a292785f871b9317fc5c47cd53dd4acfc9" translate="yes" xml:space="preserve">
          <source>For this example:</source>
          <target state="translated">이 예의 경우 :</target>
        </trans-unit>
        <trans-unit id="a770b911a46d350f3eb2b359435ba2cfd4ac37a5" translate="yes" xml:space="preserve">
          <source>For this reason, a pure pipe is preferable when you can live with the change detection strategy. When you can't, you &lt;em&gt;can&lt;/em&gt; use the impure pipe.</source>
          <target state="translated">이러한 이유로 변경 감지 전략에 따라 살 수있는 순수한 파이프가 바람직합니다. 할 수 없으면 불순한 파이프를 사용할 &lt;em&gt;수&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac37798a4a70e1f85210fd15db9c6dfee94ab938" translate="yes" xml:space="preserve">
          <source>For this reason, an app that depends on a library should only use TypeScript path mappings that point to the &lt;em&gt;built library&lt;/em&gt;. TypeScript path mappings should &lt;em&gt;not&lt;/em&gt; point to the library source &lt;code&gt;.ts&lt;/code&gt; files.</source>
          <target state="translated">이러한 이유로 라이브러리에 의존하는 앱은 &lt;em&gt;빌드 된 라이브러리&lt;/em&gt; 를 가리키는 TypeScript 경로 매핑 만 사용해야 &lt;em&gt;합니다&lt;/em&gt; . TypeScript 경로 매핑은 라이브러리 소스 &lt;code&gt;.ts&lt;/code&gt; 파일을 가리켜 서는 &lt;em&gt;안됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="dd652a08d07c569d08ac9b4f50521d84f4d549cb" translate="yes" xml:space="preserve">
          <source>For this to work, the next step is to add a component with a selector that matches &lt;code&gt;&amp;lt;app-hero-search&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이를 위해 다음 단계는 &lt;code&gt;&amp;lt;app-hero-search&amp;gt;&lt;/code&gt; 와 일치하는 선택기를 사용하여 구성 요소를 추가하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="ad2d1061c30e5b7515108e951a1ae81de24c0d96" translate="yes" xml:space="preserve">
          <source>For two-way data binding to work, the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; property must use the pattern, &lt;code&gt;inputChange&lt;/code&gt;, where &lt;code&gt;input&lt;/code&gt; is the name of the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property. For example, if the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property is &lt;code&gt;size&lt;/code&gt;, the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; property must be &lt;code&gt;sizeChange&lt;/code&gt;.</source>
          <target state="translated">양방향 데이터 바인딩이 작동하려면 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 속성이 &lt;code&gt;inputChange&lt;/code&gt; 패턴을 사용해야합니다 . 여기서 &lt;code&gt;input&lt;/code&gt; 은 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 속성 의 이름입니다 . 예를 들어 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 속성이 &lt;code&gt;size&lt;/code&gt; 인 경우 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 속성은 &lt;code&gt;sizeChange&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="73fd3829ac0294e631bc961c07b7af3f5fd156f7" translate="yes" xml:space="preserve">
          <source>For unit tests, on the other hand, more conversion work is needed. Effectively they need to be &lt;em&gt;upgraded&lt;/em&gt; along with the production code.</source>
          <target state="translated">반면 단위 테스트의 경우 더 많은 변환 작업이 필요합니다. 효과적으로 프로덕션 코드와 함께 &lt;em&gt;업그레이드&lt;/em&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4db7aafcf80332b7971a6009a17f922fd8d2bbbc" translate="yes" xml:space="preserve">
          <source>For usage information, see the &lt;a href=&quot;../../guide/http&quot;&gt;HTTP Client&lt;/a&gt; guide.</source>
          <target state="translated">사용법 정보는 &lt;a href=&quot;../../guide/http&quot;&gt;HTTP 클라이언트&lt;/a&gt; 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1462977c8cabafbedbb937df9ad22fe6ed4e2d10" translate="yes" xml:space="preserve">
          <source>For usage of the &lt;code&gt;$location&lt;/code&gt; service as a provider in AngularJS, you need to downgrade the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim&quot;&gt;$locationShim&lt;/a&gt;&lt;/code&gt; using a factory provider.</source>
          <target state="translated">AngularJS에서 제공자로 &lt;code&gt;$location&lt;/code&gt; 서비스 를 사용하려면 팩토리 제공자를 사용하여 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim&quot;&gt;$locationShim&lt;/a&gt;&lt;/code&gt; 을 다운 그레이드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b3f008aa69c94844a642116e9f1207516b29be1f" translate="yes" xml:space="preserve">
          <source>For you, it was as simple as this:</source>
          <target state="translated">당신에게 이것은 다음과 같이 간단했습니다.</target>
        </trans-unit>
        <trans-unit id="48369007d3f7f59614d092b1c684d61ba5812bc3" translate="yes" xml:space="preserve">
          <source>For your first test you'd like to see that the screen displays the default &lt;code&gt;title&lt;/code&gt;. Your instinct is to write a test that immediately inspects the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; like this:</source>
          <target state="translated">첫 번째 테스트의 경우 화면에 기본 &lt;code&gt;title&lt;/code&gt; 표시됩니다 . 본능은 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 을 다음 과 같이 즉시 검사하는 테스트를 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="84bc66cdec03cf10019b4d3fce1e3ba0e20a5db9" translate="yes" xml:space="preserve">
          <source>For zero minutes, use &lt;code&gt;=0 {just now}&lt;/code&gt;.</source>
          <target state="translated">0 분 동안 &lt;code&gt;=0 {just now}&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1458e99654a53b5bd6ae889d0452297902af0238" translate="yes" xml:space="preserve">
          <source>Forcing update activation</source>
          <target state="translated">업데이트 활성화 강제</target>
        </trans-unit>
        <trans-unit id="a000f1d6f154430aec1ad171641e381159427eda" translate="yes" xml:space="preserve">
          <source>Foreign functions or foreign constants in decorator metadata aren't statically resolvable (previously, you could import a constant or function from another compilation unit, like a library, and use that constant/function in your &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; definition).</source>
          <target state="translated">데코레이터 메타 데이터의 외부 함수 또는 외부 상수는 정적으로 확인할 수 없습니다 (이전에는 라이브러리와 같은 다른 컴파일 단위에서 상수 또는 함수를 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; @ NgModule 정의 에서 해당 상수 / 함수를 사용할 수 있었습니다 ).</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="6382cef0237d5c54061c2f361e9006517f0b7f44" translate="yes" xml:space="preserve">
          <source>Form Validation</source>
          <target state="translated">양식 검증</target>
        </trans-unit>
        <trans-unit id="146769b547ad6cb95714f43800543ead7973c7bf" translate="yes" xml:space="preserve">
          <source>Form control to be inserted</source>
          <target state="translated">삽입 할 폼 컨트롤</target>
        </trans-unit>
        <trans-unit id="ed0b7e4ebdbf5c125742becabd5a2db41e89e569" translate="yes" xml:space="preserve">
          <source>Form groups can accept both individual form control instances and other form group instances as children. This makes composing complex form models easier to maintain and logically group together.</source>
          <target state="translated">양식 그룹은 개별 양식 제어 인스턴스와 기타 양식 그룹 인스턴스를 자식으로 모두 허용 할 수 있습니다. 따라서 복잡한 양식 모델을 더 쉽게 유지하고 논리적으로 그룹화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a99df86d8ac9ffe88f4613f651eda5610568463" translate="yes" xml:space="preserve">
          <source>Form model setup</source>
          <target state="translated">양식 모델 설정</target>
        </trans-unit>
        <trans-unit id="82e5fa982def989184c51505fd97bf9a2e6ad3cb" translate="yes" xml:space="preserve">
          <source>Form validation</source>
          <target state="translated">양식 검증</target>
        </trans-unit>
        <trans-unit id="e32408b710c40920e781a08aaca9b69a260d6587" translate="yes" xml:space="preserve">
          <source>Form with an &quot;else&quot; block:</source>
          <target state="translated">&quot;else&quot;블록이있는 양식 :</target>
        </trans-unit>
        <trans-unit id="b12e8bb8e45b01539bfe059fad4e261d8f0c71b1" translate="yes" xml:space="preserve">
          <source>Form with storing the value locally:</source>
          <target state="translated">값을 로컬로 저장하는 양식 :</target>
        </trans-unit>
        <trans-unit id="d6d15ac567565a89023fa6dff1a7109f5e61d59f" translate="yes" xml:space="preserve">
          <source>FormArray</source>
          <target state="translated">FormArray</target>
        </trans-unit>
        <trans-unit id="5c7489c2f9f6c861666dccb71f6ef5a318df7f09" translate="yes" xml:space="preserve">
          <source>FormArrayName</source>
          <target state="translated">FormArrayName</target>
        </trans-unit>
        <trans-unit id="a42baa6a9386bdd8611f928ea9a5d31b72dc2b2b" translate="yes" xml:space="preserve">
          <source>FormBuilder</source>
          <target state="translated">FormBuilder</target>
        </trans-unit>
        <trans-unit id="c48570d473365cf20f35118d51c691a2a973524c" translate="yes" xml:space="preserve">
          <source>FormControl</source>
          <target state="translated">FormControl</target>
        </trans-unit>
        <trans-unit id="21f077472e97a2700808ebcc8cd132c6e46e9ae1" translate="yes" xml:space="preserve">
          <source>FormControlDirective</source>
          <target state="translated">FormControlDirective</target>
        </trans-unit>
        <trans-unit id="9f00fa931846ce0c0ca95b4c76b9bfb2d80e4468" translate="yes" xml:space="preserve">
          <source>FormControlName</source>
          <target state="translated">FormControlName</target>
        </trans-unit>
        <trans-unit id="b92b85002a3fb316a5c6e08beb73b6cb9ed9d64d" translate="yes" xml:space="preserve">
          <source>FormData</source>
          <target state="translated">FormData</target>
        </trans-unit>
        <trans-unit id="d8bcf98cf60814a8c981a2d4ffd031f8ba591b71" translate="yes" xml:space="preserve">
          <source>FormGroup</source>
          <target state="translated">FormGroup</target>
        </trans-unit>
        <trans-unit id="b9deca656b02855f2962b8f66879520ace29f55e" translate="yes" xml:space="preserve">
          <source>FormGroupDirective</source>
          <target state="translated">FormGroupDirective</target>
        </trans-unit>
        <trans-unit id="f828b0b5692e832a37851b5392baa6dd53876003" translate="yes" xml:space="preserve">
          <source>FormGroupName</source>
          <target state="translated">FormGroupName</target>
        </trans-unit>
        <trans-unit id="a6a71b4c40027f93241e30982b9b8c21ccd9aee4" translate="yes" xml:space="preserve">
          <source>FormStyle</source>
          <target state="translated">FormStyle</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="0efa5c3a008d06ef6e84cb41b5221d48099fada6" translate="yes" xml:space="preserve">
          <source>Format data based on locale</source>
          <target state="translated">로케일에 따라 데이터 서식 지정</target>
        </trans-unit>
        <trans-unit id="a0a4f0c6ffae2cf866d03a20be2102e45690c4e4" translate="yes" xml:space="preserve">
          <source>Format data with &lt;a href=&quot;guide/glossary#pipe&quot;&gt;pipes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;guide/glossary#pipe&quot;&gt;파이프로&lt;/a&gt; 데이터 형식을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="5410c6e6876a80679571d0dd431c2d3614c4e1fe" translate="yes" xml:space="preserve">
          <source>Format data with pipes.</source>
          <target state="translated">파이프로 데이터를 형식화하십시오.</target>
        </trans-unit>
        <trans-unit id="a82c3163ea3ab9e53fb2cea07cd209bfb937d3de" translate="yes" xml:space="preserve">
          <source>Format examples</source>
          <target state="translated">형식 예</target>
        </trans-unit>
        <trans-unit id="5f36f8a07cc1c3fc9bf5fef6e3f1bd3bfb86750c" translate="yes" xml:space="preserve">
          <source>Format is now automatically detected.</source>
          <target state="translated">이제 형식이 자동으로 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="0a417e8151c3f975cb0633ce28f1737ddf6bacd5" translate="yes" xml:space="preserve">
          <source>Format of the localization file specified with --i18n-file.</source>
          <target state="translated">--i18n-file로 지정된 현지화 파일의 형식입니다.</target>
        </trans-unit>
        <trans-unit id="236ee28d7ad63387347cf6c2b65fd59bcf5b58cf" translate="yes" xml:space="preserve">
          <source>Format styles that can be used to represent numbers.</source>
          <target state="translated">숫자를 나타내는 데 사용할 수있는 형식 스타일.</target>
        </trans-unit>
        <trans-unit id="f172b365ccf025116d82b4f7a504e627b2edb8e6" translate="yes" xml:space="preserve">
          <source>Format with the &lt;code&gt;UppercasePipe&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UppercasePipe&lt;/code&gt; 포맷</target>
        </trans-unit>
        <trans-unit id="01600078364b64c83d05a5a6206c3c8f79391107" translate="yes" xml:space="preserve">
          <source>FormatWidth</source>
          <target state="translated">FormatWidth</target>
        </trans-unit>
        <trans-unit id="bcfc7802aa17a6c06eab5b1aa2c8a01766456ca9" translate="yes" xml:space="preserve">
          <source>Formats a date according to locale rules.</source>
          <target state="translated">로케일 규칙에 따라 날짜를 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="4acd0cf15f92f92f95df3f7945cd8f3113d16855" translate="yes" xml:space="preserve">
          <source>Formats a date to a string based on the requested format.</source>
          <target state="translated">요청 된 형식에 따라 날짜를 문자열로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="75b510aa38e971da727972aaa290425fde30cbce" translate="yes" xml:space="preserve">
          <source>Formats a date value according to locale rules.</source>
          <target state="translated">로캘 규칙에 따라 날짜 값의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dcc0bea5632acd34ea7e37c42c9e4c997c0b72fb" translate="yes" xml:space="preserve">
          <source>Formats a number as a percentage according to locale rules.</source>
          <target state="translated">로케일 규칙에 따라 숫자를 백분율로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="d11a0509a30735bc923587e47e0a4df22da695b3" translate="yes" xml:space="preserve">
          <source>Formats a number as currency using locale rules.</source>
          <target state="translated">로케일 규칙을 사용하여 숫자를 통화로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="edf61a61be57f17f5a7dc1ff5a46129550b4144a" translate="yes" xml:space="preserve">
          <source>Formats a number as currency.</source>
          <target state="translated">숫자를 통화 형식으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="17787cb5c737a01e87cd71d36456d99d98545c45" translate="yes" xml:space="preserve">
          <source>Formats a number as percentage according to locale rules.</source>
          <target state="translated">로케일 규칙에 따라 숫자를 백분율로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="f3736d14cc407b274fccb3b7c52e94f74937e007" translate="yes" xml:space="preserve">
          <source>Formats a number as text, with group sizing, separator, and other parameters based on the locale.</source>
          <target state="translated">로캘에 따라 그룹 크기, 구분 기호 및 기타 매개 변수를 사용하여 숫자를 텍스트로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="69675ca3093ae5e95c7f23454bbb0ec2a3e3a132" translate="yes" xml:space="preserve">
          <source>Formats a number as text.</source>
          <target state="translated">숫자를 텍스트로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="02f654c32c11b40155212923435510ae86ebdc1e" translate="yes" xml:space="preserve">
          <source>Formats a number as text. Group sizing and separator and other locale-specific configurations are based on the active locale.</source>
          <target state="translated">숫자를 텍스트로 형식화합니다. 그룹 크기 및 구분 기호 및 기타 로캘 별 구성은 활성 로캘을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="5beb527fad1e82e9004c53827f16339c6c9f5b43" translate="yes" xml:space="preserve">
          <source>Forms Guide</source>
          <target state="translated">양식 안내서</target>
        </trans-unit>
        <trans-unit id="cdff93b15b8a002363dce9c9a11c05fd30b609f6" translate="yes" xml:space="preserve">
          <source>Forms Overview</source>
          <target state="translated">양식 개요</target>
        </trans-unit>
        <trans-unit id="a9c444f62165660b6e9a88acef821c93bb49bf48" translate="yes" xml:space="preserve">
          <source>Forms are the mainstay of business applications. You use forms to log in, submit a help request, place an order, book a flight, schedule a meeting, and perform countless other data-entry tasks.</source>
          <target state="translated">양식은 비즈니스 응용 프로그램의 기본입니다. 양식을 사용하여 로그인, 지원 요청 제출, 주문, 항공편 예약, 회의 예약 및 기타 수많은 데이터 입력 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1c46cc3e74d7aea7e123bce2866a9a8bc8b0774" translate="yes" xml:space="preserve">
          <source>Forms in Angular</source>
          <target state="translated">각도 형태</target>
        </trans-unit>
        <trans-unit id="c68f41278ff3096c2bfb80e5503ec3e9ec19c6b3" translate="yes" xml:space="preserve">
          <source>Forms in Angular build upon the standard HTML forms to help you create custom form controls and easy validation experiences. There are two parts to an Angular Reactive form: the objects that live in the component to store and manage the form, and the visualization of the form that lives in the template.</source>
          <target state="translated">Angular의 양식은 표준 HTML 양식을 기반으로 빌드되어 사용자 지정 양식 컨트롤과 쉬운 유효성 검사 환경을 만드는 데 도움이됩니다. Angular Reactive 양식에는 양식을 저장하고 관리하기 위해 구성 요소에있는 개체와 템플릿에있는 양식의 시각화의 두 부분이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2ae9db40f0327172734bd7302b687b3e865b6d2" translate="yes" xml:space="preserve">
          <source>Forms in Angular take the standard capabilities of the HTML based forms and add an orchestration layer to help with creating custom form controls, and to supply great validation experiences. There are two parts to an Angular Reactive form, the objects that live in the component to store and manage the form, and the visualization of the form that lives in the template.</source>
          <target state="translated">Angular의 양식은 HTML 기반 양식의 표준 기능을 사용하고 오케스트레이션 계층을 추가하여 사용자 지정 양식 컨트롤을 작성하고 훌륭한 검증 경험을 제공합니다. Angular Reactive 양식에는 양식을 저장하고 관리하기 위해 구성 요소에있는 오브젝트와 템플리트에있는 양식의 시각화라는 두 부분이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bfa9fc0a9a03baa0daa74863ddc154739a752aa" translate="yes" xml:space="preserve">
          <source>Forms overview</source>
          <target state="translated">양식 개요</target>
        </trans-unit>
        <trans-unit id="00461295921a07818856c11dd5512059cd0db094" translate="yes" xml:space="preserve">
          <source>Forms typically contain several related controls. Reactive forms provide two ways of grouping multiple related controls into a single input form.</source>
          <target state="translated">양식에는 일반적으로 여러 관련 컨트롤이 포함됩니다. 반응 형 양식은 여러 관련 컨트롤을 단일 입력 양식으로 그룹화하는 두 가지 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cfc59f1b557be47a18693a789be4114527797625" translate="yes" xml:space="preserve">
          <source>FormsModule</source>
          <target state="translated">FormsModule</target>
        </trans-unit>
        <trans-unit id="c89b7d3941fc3c83eb78832d5c2130a06d3c2869" translate="yes" xml:space="preserve">
          <source>Fortunately you can name the directive property whatever you want &lt;em&gt;and&lt;/em&gt;&lt;strong&gt;&lt;em&gt;alias it&lt;/em&gt;&lt;/strong&gt; for binding purposes.</source>
          <target state="translated">다행히 당신은 지시 당신이 원하는 특성의 이름을 지정할 수 있습니다 &lt;em&gt;및 &lt;/em&gt;&lt;strong&gt;&lt;em&gt;그 별명을&lt;/em&gt;&lt;/strong&gt; 목적으로 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="fc50fc246cebf313b856e5560aea2e5c76c81e97" translate="yes" xml:space="preserve">
          <source>Fortunately, Angular data binding is on alert for dangerous HTML. In the above case, the HTML displays as is, and the Javascript does not execute. Angular &lt;strong&gt;does not&lt;/strong&gt; allow HTML with script tags to leak into the browser, neither with interpolation nor property binding.</source>
          <target state="translated">다행히 Angular 데이터 바인딩은 위험한 HTML을 경고합니다. 위의 경우 HTML은 그대로 표시되고 Javascript는 실행되지 않습니다. Angular &lt;strong&gt;에서는&lt;/strong&gt; 스크립트 태그가있는 HTML이 브라우저로 누출되지 않고 보간이나 속성 바인딩이 허용 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a07f606617ee3fc1c4e971ad71d656467d623f5d" translate="yes" xml:space="preserve">
          <source>Fortunately, application routes have something in common: their URLs lack file extensions. (Data requests also lack extensions but they're easy to recognize because they always begin with &lt;code&gt;/api&lt;/code&gt;.) All static asset requests have a file extension (such as &lt;code&gt;main.js&lt;/code&gt; or &lt;code&gt;/node_modules/zone.js/bundles/zone.umd.js&lt;/code&gt;).</source>
          <target state="translated">다행히도 애플리케이션 경로에는 공통점이 있습니다. URL에는 파일 확장자가 없습니다. (데이터 요청에도 확장자가 없지만 항상 &lt;code&gt;/api&lt;/code&gt; 로 시작하기 때문에 인식하기 쉽습니다 .) 모든 정적 자산 요청에는 파일 확장자 (예 : &lt;code&gt;main.js&lt;/code&gt; 또는 &lt;code&gt;/node_modules/zone.js/bundles/zone.umd.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5edd1f49279278a50cf582fe92a1aef0b8150884" translate="yes" xml:space="preserve">
          <source>Fortunately, application routes have something in common: their URLs lack file extensions. (Data requests also lack extensions but they're easy to recognize because they always begin with &lt;code&gt;/api&lt;/code&gt;.) All static asset requests have a file extension (such as &lt;code&gt;main.js&lt;/code&gt; or &lt;code&gt;/node_modules/zone.js/dist/zone.js&lt;/code&gt;).</source>
          <target state="translated">다행히 응용 프로그램 경로에는 공통점이 있습니다. URL에는 파일 확장자가 없습니다. (데이터 요청에는 확장명이 없지만 항상 &lt;code&gt;/api&lt;/code&gt; 로 시작하기 때문에 쉽게 알아볼 수 있습니다.) 모든 정적 자산 요청에는 파일 확장명이 있습니다 (예 : &lt;code&gt;main.js&lt;/code&gt; 또는 &lt;code&gt;/node_modules/zone.js/dist/zone.js&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="5f5660b64b3fe113ff7adc95059a5693c9cc2a5c" translate="yes" xml:space="preserve">
          <source>Fortunately, not in this case because the &lt;code&gt;DashboardComponent&lt;/code&gt; isn't doing much with the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">다행히 &lt;code&gt;DashboardComponent&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 에서 많은 작업을 수행하지 않기 때문에이 경우에는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5038837ff39c868388f0e163672ddf3b75700082" translate="yes" xml:space="preserve">
          <source>Fortunately, the &lt;code&gt;HeroDetailService&lt;/code&gt; delegates responsibility for remote data access to an injected &lt;code&gt;HeroService&lt;/code&gt;.</source>
          <target state="translated">다행히 &lt;code&gt;HeroDetailService&lt;/code&gt; 는 주입 된 &lt;code&gt;HeroService&lt;/code&gt; 에 대한 원격 데이터 액세스에 대한 책임을 위임 합니다.</target>
        </trans-unit>
        <trans-unit id="2b969def5bb6104ef4a194be02d84f98a36368da" translate="yes" xml:space="preserve">
          <source>Fortunately, the &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; parameter parallels the metadata passed to the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator which means you can also specify &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;imports&lt;/code&gt;.</source>
          <target state="translated">다행스럽게도 &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; 매개 변수는 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 데코레이터에 전달 된 메타 데이터를 병렬화하여 &lt;code&gt;providers&lt;/code&gt; 및 &lt;code&gt;imports&lt;/code&gt; 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c62305f0c948ffda49ef66afb9b325e802f97530" translate="yes" xml:space="preserve">
          <source>Fortunately, they aren't necessary. You don't have to add the lifecycle hook interfaces to directives and components to benefit from the hooks themselves.</source>
          <target state="translated">다행히도 필요하지 않습니다. 후크 자체의 이점을 위해 수명주기 후크 인터페이스를 지시문 및 구성 요소에 추가 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a4b748d4794041a68748abf5ad74a88d7dc7a8fe" translate="yes" xml:space="preserve">
          <source>Forward references to directive inputs accessed through local refs are no longer supported by default. &lt;a href=&quot;ivy-compatibility-examples#forward-refs-directive-inputs&quot;&gt;details&lt;/a&gt;</source>
          <target state="translated">로컬 참조를 통해 액세스되는 지시문 입력에 대한 전달 참조는 더 이상 기본적으로 지원되지 않습니다. &lt;a href=&quot;ivy-compatibility-examples#forward-refs-directive-inputs&quot;&gt;세부&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28be72c0280bcb5dc5b4d0778e06341a7abea5c2" translate="yes" xml:space="preserve">
          <source>ForwardRefFn</source>
          <target state="translated">ForwardRefFn</target>
        </trans-unit>
        <trans-unit id="9fdaca9c4db5020ff21787484f2485fd9701bd4a" translate="yes" xml:space="preserve">
          <source>Fourth step of the Tour of Heroes example application. For more information, see &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;Add services&lt;/a&gt;.</source>
          <target state="translated">Tour of Heroes 예제 애플리케이션의 네 번째 단계입니다. 자세한 내용은 &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;서비스 추가를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c9307be2052fd5a8a74b5213f3df047b9d426a0" translate="yes" xml:space="preserve">
          <source>Fractional seconds</source>
          <target state="translated">분수 초</target>
        </trans-unit>
        <trans-unit id="fb001b2c292ad2f619c8caf6e0ac8afd191aaa76" translate="yes" xml:space="preserve">
          <source>Framework</source>
          <target state="translated">Framework</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">자주 묻는 질문</target>
        </trans-unit>
        <trans-unit id="bc0a142e1e515867de810b2442244936f418403f" translate="yes" xml:space="preserve">
          <source>Frequently Used Modules</source>
          <target state="translated">자주 사용되는 모듈</target>
        </trans-unit>
        <trans-unit id="45700db79c0283e8f1f4c60a04e2cddc1c81ced5" translate="yes" xml:space="preserve">
          <source>Frequently-used modules</source>
          <target state="translated">자주 사용되는 모듈</target>
        </trans-unit>
        <trans-unit id="6006b6792fc35ff7614e5fa895078e4f0a6dfd7c" translate="yes" xml:space="preserve">
          <source>Fri Apr 15 1988 00:00:00 GMT-0700 (Pacific Daylight Time)</source>
          <target state="translated">1988 년 4 월 15 일 00:00:00 GMT-0700 (태평양 일광 절약 시간)</target>
        </trans-unit>
        <trans-unit id="4b3774c5d182edc52477fb17e7804e9b9c9ee37e" translate="yes" xml:space="preserve">
          <source>From &lt;em&gt;view-to-source&lt;/em&gt;</source>
          <target state="translated">에서 &lt;em&gt;보기 - 소스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08041bec5f010c8965be9d6b65acb95c30a47b0b" translate="yes" xml:space="preserve">
          <source>From a terminal window, navigate to the directory containing your application.</source>
          <target state="translated">터미널 창에서 애플리케이션이 포함 된 디렉토리로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="db63bccaf8113fab5205af56d973f3b49919eb47" translate="yes" xml:space="preserve">
          <source>From the &lt;code&gt;ContainerComponent&lt;/code&gt;, this will not work:</source>
          <target state="translated">로부터 &lt;code&gt;ContainerComponent&lt;/code&gt; 이 작동하지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="a16913cd9f3c0db7df4d7d9f3bf7fd21aa09266a" translate="yes" xml:space="preserve">
          <source>From the &lt;em&gt;source-to-view&lt;/em&gt;</source>
          <target state="translated">로부터 &lt;em&gt;소스 -보기&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bb6a53b96740b32297c3c9e26cbdae1ffc3e003" translate="yes" xml:space="preserve">
          <source>From the perspective of the router, the router never &quot;goes back&quot;. When the user clicks on the back button in the browser, a new navigation ID is created.</source>
          <target state="translated">라우터의 관점에서 라우터는 &quot;돌아 오지&quot;않습니다. 사용자가 브라우저에서 뒤로 단추를 클릭하면 새 탐색 ID가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="b8fd592e76623b1bd29c81a0d0021b540794543a" translate="yes" xml:space="preserve">
          <source>From the root of your workspace, run the &lt;code&gt;ng build&lt;/code&gt; command for your library.</source>
          <target state="translated">작업 공간의 루트에서 라이브러리에 대한 &lt;code&gt;ng build&lt;/code&gt; 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="902396c7d0d48a1b68d4e346f888f5d13b8a30dc" translate="yes" xml:space="preserve">
          <source>From the terminal, create a new component, &lt;code&gt;PageNotFound&lt;/code&gt;.</source>
          <target state="translated">터미널에서 새 구성 요소 인 &lt;code&gt;PageNotFound&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="dff6fc31c15b70198c596f7b87cdb4ab4c3aa842" translate="yes" xml:space="preserve">
          <source>From the terminal, install the Angular CLI globally with:</source>
          <target state="translated">터미널에서 다음을 사용하여 Angular CLI를 전체적으로 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="09b23d52d687ddf5ec82eb8d6ceac90f4cfce115" translate="yes" xml:space="preserve">
          <source>From the test root component's &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; returned by &lt;code&gt;fixture.debugElement&lt;/code&gt;, you can walk (and query) the fixture's entire element and component subtrees.</source>
          <target state="translated">&lt;code&gt;fixture.debugElement&lt;/code&gt; 가 반환 한 테스트 루트 컴포넌트의 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 에서 조명기의 전체 요소와 컴포넌트 서브 트리를 걸어서 쿼리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="f4fc4957021d79edfdc1944068e27562a5e7500f" translate="yes" xml:space="preserve">
          <source>From there you replace the &lt;code&gt;/src&lt;/code&gt; folder with the one from your &lt;code&gt;StackBlitz&lt;/code&gt; download, and then perform a build.</source>
          <target state="translated">거기에서 &lt;code&gt;/src&lt;/code&gt; 폴더를 &lt;code&gt;StackBlitz&lt;/code&gt; 다운로드 폴더로 바꾸고 빌드를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="c1b29708a9ee747e9a9d3071434b524b09310f1a" translate="yes" xml:space="preserve">
          <source>From this base you can derive two new classes in &lt;code&gt;TextboxQuestion&lt;/code&gt; and &lt;code&gt;DropdownQuestion&lt;/code&gt; that represent textbox and dropdown questions. The idea is that the form will be bound to specific question types and render the appropriate controls dynamically.</source>
          <target state="translated">이 기초에서 &lt;code&gt;TextboxQuestion&lt;/code&gt; 및 &lt;code&gt;DropdownQuestion&lt;/code&gt; 에서 텍스트 상자 및 드롭 다운 질문을 나타내는 두 개의 새로운 클래스를 파생시킬 수 있습니다 . 아이디어는 양식이 특정 질문 유형에 바인딩되고 적절한 컨트롤을 동적으로 렌더링한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="31dc4923cac0f8a6b53f683f8019b2a2477098d9" translate="yes" xml:space="preserve">
          <source>From this base, the example derives two new classes, &lt;code&gt;TextboxQuestion&lt;/code&gt; and &lt;code&gt;DropdownQuestion&lt;/code&gt;, that represent different control types. When you create the form template in the next step, you will instantiate these specific question types in order to render the appropriate controls dynamically.</source>
          <target state="translated">이 기본에서 예제 는 서로 다른 제어 유형을 나타내는 두 개의 새 클래스 &lt;code&gt;TextboxQuestion&lt;/code&gt; 및 &lt;code&gt;DropdownQuestion&lt;/code&gt; 을 파생 합니다. 다음 단계에서 양식 서식 파일을 만들 때 적절한 컨트롤을 동적으로 렌더링하기 위해 이러한 특정 질문 유형을 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="50e0c37a7210e277623484289b971d913b2730f5" translate="yes" xml:space="preserve">
          <source>From time to time you'll have to step away from markdown and write a portion of the document in HTML. Markdown allows you to mix HTML and markdown in the same document.</source>
          <target state="translated">때때로 마크 다운에서 벗어나 문서의 일부를 HTML로 작성해야합니다. 마크 다운을 사용하면 동일한 문서에서 HTML과 마크 다운을 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57fea2d45df20aae338d3176c931b640d3217b50" translate="yes" xml:space="preserve">
          <source>From v11 the default code will be extracted from the locale data given by &lt;code&gt;LOCAL_ID&lt;/code&gt;, rather than &lt;code&gt;USD&lt;/code&gt;.</source>
          <target state="translated">v11에서 기본 코드는 &lt;code&gt;USD&lt;/code&gt; 가 아닌 &lt;code&gt;LOCAL_ID&lt;/code&gt; 로 지정된 로케일 데이터에서 추출됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a0364949a247bfa79bae0c5fe50973ba2b805cb" translate="yes" xml:space="preserve">
          <source>From your code editor, open the &lt;code&gt;app.component.html&lt;/code&gt; file.</source>
          <target state="translated">코드 편집기에서 &lt;code&gt;app.component.html&lt;/code&gt; 파일을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="0f01b20779a563accb1012d1eb4c02e244cc9511" translate="yes" xml:space="preserve">
          <source>From your code editor, open the &lt;code&gt;app.module.ts&lt;/code&gt; file.</source>
          <target state="translated">코드 편집기에서 &lt;code&gt;app.module.ts&lt;/code&gt; 파일을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="75a5d17678e2c1d7e94811e770e0ab435e3dd83f" translate="yes" xml:space="preserve">
          <source>From your code editor, open the &lt;code&gt;page-not-found.component.html&lt;/code&gt; file and replace its contents with the following HTML.</source>
          <target state="translated">코드 편집기에서 &lt;code&gt;page-not-found.component.html&lt;/code&gt; 파일을 열고 해당 내용을 다음 HTML 로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="996b9596c59f32415a34cb9bc9cb466dae17e40a" translate="yes" xml:space="preserve">
          <source>From your terminal, navigate to the &lt;code&gt;angular-router-sample&lt;/code&gt; directory.</source>
          <target state="translated">터미널에서 &lt;code&gt;angular-router-sample&lt;/code&gt; 디렉토리로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9f8099366c879f236d5bd3d85697f3c2e6387914" translate="yes" xml:space="preserve">
          <source>Full documentation for the Bazel CLI is at &lt;a href=&quot;https://docs.bazel.build/versions/master/command-line-reference.html&quot;&gt;https://docs.bazel.build/versions/master/command-line-reference.html&lt;/a&gt;.</source>
          <target state="translated">Bazel CLI에 대한 전체 설명서는 &lt;a href=&quot;https://docs.bazel.build/versions/master/command-line-reference.html&quot;&gt;https://docs.bazel.build/versions/master/command-line-reference.html에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2182c243ca64f8f4320ef356143bb890538d790" translate="yes" xml:space="preserve">
          <source>Full length for &lt;code&gt;en-US&lt;/code&gt;. For example: &quot;Sunday&quot;</source>
          <target state="translated">에 대한 전체 길이 &lt;code&gt;en-US&lt;/code&gt; . 예를 들어 &quot;일요일&quot;</target>
        </trans-unit>
        <trans-unit id="fd0d33664d08abcfb2a99b91cb244f47ec9c6d8e" translate="yes" xml:space="preserve">
          <source>Full mode</source>
          <target state="translated">전체 모드</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="307d58da1cb5c708acf50f78b41a528827c81cf8" translate="yes" xml:space="preserve">
          <source>Function calls</source>
          <target state="translated">함수 호출</target>
        </trans-unit>
        <trans-unit id="f0182dfcd6d20b80a09f2cb0997dc7e70a92ccba" translate="yes" xml:space="preserve">
          <source>Function calls are not supported</source>
          <target state="translated">함수 호출은 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="d1b389a67b88dc11d3ca8a7606a8511ef745c99b" translate="yes" xml:space="preserve">
          <source>Function name</source>
          <target state="translated">기능 이름</target>
        </trans-unit>
        <trans-unit id="6de035f278c24f6b9cbb33875bc923585ab1c8d2" translate="yes" xml:space="preserve">
          <source>Function that is called by the forms API when the control status changes to or from 'DISABLED'. Depending on the status, it enables or disables the appropriate DOM element.</source>
          <target state="translated">제어 상태가 'DISABLED'로 변경 될 때 양식 API에 의해 호출되는 함수입니다. 상태에 따라 적절한 DOM 요소를 활성화하거나 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="accace0a2c1dc76b9b0e688d8f7b2f83d65616ca" translate="yes" xml:space="preserve">
          <source>Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.</source>
          <target state="translated">HammerJS를로드하는 기능으로 HammerJs가로드되면 해결되는 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="cbb7a8ad94a0350d71d5dbacb482d18f9ec80fed" translate="yes" xml:space="preserve">
          <source>Functions and static method calls</source>
          <target state="translated">함수와 정적 메소드 호출</target>
        </trans-unit>
        <trans-unit id="c5d47fe56e6eb1f3de07dc9b7e2e27df31984f6f" translate="yes" xml:space="preserve">
          <source>Functions that control complex animation sequences are as follows:</source>
          <target state="translated">복잡한 애니메이션 시퀀스를 제어하는 ​​기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="26b2b7d43add5c4f4cdde3cc675c2c2d24a71f73" translate="yes" xml:space="preserve">
          <source>Fundamental concepts of &lt;a href=&quot;architecture&quot;&gt;Angular app design&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;architecture&quot;&gt;Angular 앱 디자인&lt;/a&gt; 의 기본 개념 .</target>
        </trans-unit>
        <trans-unit id="052d8ad81d99f33b2eb06e6d194282b8675fb201" translate="yes" xml:space="preserve">
          <source>Fundamentals</source>
          <target state="translated">Fundamentals</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="a398fa06f1c0d02f5674b15f6a6bd03d1fae4ae7" translate="yes" xml:space="preserve">
          <source>G (A)</source>
          <target state="translated">지 (A)</target>
        </trans-unit>
        <trans-unit id="eb8daa8e2d6659fa5c2723cc8e6125af24dfa1c0" translate="yes" xml:space="preserve">
          <source>G, GG &amp;amp; GGG</source>
          <target state="translated">G, GG 및 GGG</target>
        </trans-unit>
        <trans-unit id="6b290c8942cbc1d1d719ea8d88fc447035058289" translate="yes" xml:space="preserve">
          <source>GGG (AD)</source>
          <target state="translated">GGG (광고)</target>
        </trans-unit>
        <trans-unit id="00375065763ad15e0a040210fcc6a75e14be67dc" translate="yes" xml:space="preserve">
          <source>GGGG</source>
          <target state="translated">GGGG</target>
        </trans-unit>
        <trans-unit id="76b1ada62fafb3b6a1d86653f4602df6c517c120" translate="yes" xml:space="preserve">
          <source>GGGG (Anno Domini)</source>
          <target state="translated">GGGG (안노도 미니)</target>
        </trans-unit>
        <trans-unit id="8999a576f1492a90a0fe026bc4748334d685b1c7" translate="yes" xml:space="preserve">
          <source>GGGGG</source>
          <target state="translated">GGGGG</target>
        </trans-unit>
        <trans-unit id="ac601f81f1c830bbc42a98a61bc4a806380671e2" translate="yes" xml:space="preserve">
          <source>GMT-08:00</source>
          <target state="translated">GMT-08:00</target>
        </trans-unit>
        <trans-unit id="e063740277299254fba81114eab6ab1778e43431" translate="yes" xml:space="preserve">
          <source>GMT-8</source>
          <target state="translated">GMT-8</target>
        </trans-unit>
        <trans-unit id="060ee72e55c0d15ccc4085e23e54c48f8dedf4bd" translate="yes" xml:space="preserve">
          <source>GMT-8:00</source>
          <target state="translated">GMT-8:00</target>
        </trans-unit>
        <trans-unit id="c6c6e52ab77299cfa656a1111cd062dc5500ef4e" translate="yes" xml:space="preserve">
          <source>Gathering and Viewing Usage Analytics</source>
          <target state="translated">사용 현황 분석 수집 및보기</target>
        </trans-unit>
        <trans-unit id="90d988a4b5f5b91abe38d0cd410f91e09b49a39c" translate="yes" xml:space="preserve">
          <source>General Naming Guidelines</source>
          <target state="translated">일반적인 명명 지침</target>
        </trans-unit>
        <trans-unit id="11a0db60c7abcac6fa4027e7ca519ef589ef75c7" translate="yes" xml:space="preserve">
          <source>General examples</source>
          <target state="translated">일반적인 예</target>
        </trans-unit>
        <trans-unit id="cba1a6e46e4708c3c4d2980a9394604ab2a693b2" translate="yes" xml:space="preserve">
          <source>Generally, provide services the whole app needs in the root module and scope services by providing them in lazy loaded modules.</source>
          <target state="translated">일반적으로 루트 모듈에서 전체 앱에 필요한 서비스를 제공하고 지연로드 된 모듈로 제공하여 서비스를 범위 지정합니다.</target>
        </trans-unit>
        <trans-unit id="50b5959329e24939984178366e66dba05ca7ff3a" translate="yes" xml:space="preserve">
          <source>Generally, the Angular compiler generates a &lt;code&gt;&lt;a href=&quot;../api/core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; for any component referenced in a template. However, there are no selector references in the templates for dynamically loaded components since they load at runtime.</source>
          <target state="translated">일반적으로 Angular 컴파일러 는 템플릿에서 참조되는 모든 구성 &lt;code&gt;&lt;a href=&quot;../api/core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 대한 ComponentFactory 를 생성합니다 . 그러나 동적으로로드 된 구성 요소의 템플릿에는 런타임시로드되므로 선택기 참조가 없습니다.</target>
        </trans-unit>
        <trans-unit id="57e078d15b6b83870a971d124ae29a7bbe383a50" translate="yes" xml:space="preserve">
          <source>Generally, the practice of setting a variable or property to a data value. Within Angular, typically refers to &lt;a href=&quot;glossary#data-binding&quot;&gt;data binding&lt;/a&gt;, which coordinates DOM object properties with data object properties.</source>
          <target state="translated">일반적으로 변수 또는 속성을 데이터 값으로 설정하는 방법. Angular 내에서 일반적으로 &lt;a href=&quot;glossary#data-binding&quot;&gt;데이터&lt;/a&gt; 객체 속성을 사용하여 DOM 객체 속성을 조정 하는 데이터 바인딩을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ba75bd19ec2c4ce6bebb850f18a34d24d2d66d57" translate="yes" xml:space="preserve">
          <source>Generally, use property binding over attribute binding as it is more intuitive (being a boolean value), has a shorter syntax, and is more performant.</source>
          <target state="translated">일반적으로 속성 바인딩은 속성 바인딩보다 직관적이고 (부울 값이므로) 구문이 짧고 성능이 우수하므로 속성 바인딩을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0c6d01d451368b768446afecc65324c907fd398a" translate="yes" xml:space="preserve">
          <source>Generally, you'll only need &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; for providing services and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; for routing. However, understanding how &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; works to make sure a service is a singleton will inform your development at a deeper level.</source>
          <target state="translated">일반적으로 서비스를 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 하기 위해 제공하고 라우팅을 위해 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; 만 제공 하면됩니다 . 그러나 서비스가 싱글 톤인지 확인하기 위해 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 작동 방식을 이해 하면 개발에 더 깊은 수준을 알릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f6280a085e0816cc0933beedf9528e299a7a3a6" translate="yes" xml:space="preserve">
          <source>Generally, you'll only need &lt;code&gt;providedIn&lt;/code&gt; for providing services and &lt;code&gt;forRoot()&lt;/code&gt;/&lt;code&gt;forChild()&lt;/code&gt; for routing. However, understanding how &lt;code&gt;forRoot()&lt;/code&gt; works to make sure a service is a singleton will inform your development at a deeper level.</source>
          <target state="translated">일반적으로 서비스를 제공하는 경우에는 &lt;code&gt;providedIn&lt;/code&gt; 만 필요 하고 라우팅에는 &lt;code&gt;forRoot()&lt;/code&gt; / &lt;code&gt;forChild()&lt;/code&gt; 만 필요합니다 . 그러나 서비스가 싱글 톤인지 확인하기 위해 &lt;code&gt;forRoot()&lt;/code&gt; 작동하는 방식을 이해 하면 더 깊은 수준의 개발에 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="90047ef8527630e7936402eb0e7f57f3c99c3982" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;CrisisCenter&lt;/code&gt; component in the &lt;code&gt;crisis-center&lt;/code&gt; folder:</source>
          <target state="translated">&lt;code&gt;crisis-center&lt;/code&gt; 폴더 에 &lt;code&gt;CrisisCenter&lt;/code&gt; 구성 요소를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="084b51a7bff1022599f0c899ade452493ff127d6" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;CrisisDetailResolver&lt;/code&gt; service file within the &lt;code&gt;Crisis Center&lt;/code&gt; feature area.</source>
          <target state="translated">&lt;code&gt;Crisis Center&lt;/code&gt; 기능 영역 내에 &lt;code&gt;CrisisDetailResolver&lt;/code&gt; 서비스 파일을 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="4875f6ee183dd8ab4d4a463d44f7d6bdd971a900" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;Dialog&lt;/code&gt; service to handle user confirmation.</source>
          <target state="translated">사용자 확인을 처리 하는 &lt;code&gt;Dialog&lt;/code&gt; 서비스를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d7b10e4e6677ba9f77dc539ea07fd7d32f66bea" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;ProfileEditor&lt;/code&gt; component and import the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; classes from the &lt;code&gt;@angular/forms&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;ProfileEditor&lt;/code&gt; 구성 요소를 생성 하고 &lt;code&gt;@angular/forms&lt;/code&gt; 패키지 에서 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 클래스를 가져 오십시오 .</target>
        </trans-unit>
        <trans-unit id="19a139134434badc3bfeaf46524ef6fd9d5a0b63" translate="yes" xml:space="preserve">
          <source>Generate a &lt;em&gt;guard&lt;/em&gt; that checks for the presence of a &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; method in a component&amp;mdash;any component.</source>
          <target state="translated">구성 요소 (구성 요소 &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt; () 메서드 가 있는지 확인 하는 &lt;em&gt;가드&lt;/em&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="48b27f5909440f72ac1abd21e856f98ec91f80dc" translate="yes" xml:space="preserve">
          <source>Generate a cart component, named &lt;code&gt;cart&lt;/code&gt;.</source>
          <target state="translated">카트 구성 요소라는 이름의 생성 &lt;code&gt;cart&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="badfdfac2001a819696c03a850d29cef9aa6422c" translate="yes" xml:space="preserve">
          <source>Generate a cart service.</source>
          <target state="translated">카트 서비스를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="c99348b58236f56c88a04caf7f5cfe478c6053d9" translate="yes" xml:space="preserve">
          <source>Generate a component for the control.</source>
          <target state="translated">컨트롤의 컴포넌트를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="95c833d5a4c5983e9ec390bedbaf0762aba8b000" translate="yes" xml:space="preserve">
          <source>Generate a guard that checks for the presence of a &lt;code&gt;canDeactivate()&lt;/code&gt; method in a component&amp;mdash;any component.</source>
          <target state="translated">구성 요소 (모든 구성 요소 &lt;code&gt;canDeactivate()&lt;/code&gt; 메서드 가 있는지 확인하는 가드를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="4c4530eafa50e9f2b08438bef12e54b3d95e15fe" translate="yes" xml:space="preserve">
          <source>Generate a new &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance and save it in the component.</source>
          <target state="translated">새 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스를 생성 하고 구성 요소에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="8a8880c7a24fd864a1f83c3bbba3a7fab142006e" translate="yes" xml:space="preserve">
          <source>Generate a new &lt;code&gt;SelectivePreloadingStrategy&lt;/code&gt; service.</source>
          <target state="translated">새로운 &lt;code&gt;SelectivePreloadingStrategy&lt;/code&gt; 서비스를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="10929705c56473f7c00eec3a96223277b08f04e8" translate="yes" xml:space="preserve">
          <source>Generate a new component for product details. Give the component the name &lt;code&gt;product-details&lt;/code&gt;.</source>
          <target state="translated">제품 세부 사항을위한 새 구성 요소를 생성하십시오. 구성 요소에 &lt;code&gt;product-details&lt;/code&gt; 이름을 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ca63d5f33e5423d7c86025408ad0a44ef417e22" translate="yes" xml:space="preserve">
          <source>Generate a new component named &lt;code&gt;shipping&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shipping&lt;/code&gt; 이라는 새 구성 요소를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="6cf6a25679c333cc1e9c81a8f44d1a7e50841d1d" translate="yes" xml:space="preserve">
          <source>Generate a new component to compose the message.</source>
          <target state="translated">메시지를 작성하기 위해 새 구성 요소를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="51451a8e0a189a0e3626c7ca708b659e18662a1f" translate="yes" xml:space="preserve">
          <source>Generate a sample application to follow the walkthrough.</source>
          <target state="translated">연습을 따라 샘플 응용 프로그램을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="571c365efd86e7626a4b1b9eeab3b97a5d0eaaaf" translate="yes" xml:space="preserve">
          <source>Generate a sample application with the Angular CLI.</source>
          <target state="translated">Angular CLI로 샘플 애플리케이션을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ec28821df6c17d11f5af6c742d7512012444acd1" translate="yes" xml:space="preserve">
          <source>Generate an &lt;code&gt;AuthGuard&lt;/code&gt; in the &lt;code&gt;auth&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;auth&lt;/code&gt; 폴더에 &lt;code&gt;AuthGuard&lt;/code&gt; 를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="e568c5d158a4dd0a7bf902bc271eaba5725baedb" translate="yes" xml:space="preserve">
          <source>Generate an &lt;code&gt;admin&lt;/code&gt; folder with a feature module file and a routing configuration file.</source>
          <target state="translated">기능 모듈 파일 및 라우팅 구성 파일을 사용 하여 &lt;code&gt;admin&lt;/code&gt; 폴더를 생성 하십시오.</target>
        </trans-unit>
        <trans-unit id="e69988b966cade7b28b364ef47c1fe985a06023d" translate="yes" xml:space="preserve">
          <source>Generate an app with routing enabled</source>
          <target state="translated">라우팅이 활성화 된 앱 생성</target>
        </trans-unit>
        <trans-unit id="33ef6177ebd37dcf0963b49bfdbfe505823c93ca" translate="yes" xml:space="preserve">
          <source>Generate app versions for each locale</source>
          <target state="translated">각 로케일에 대한 앱 버전 생성</target>
        </trans-unit>
        <trans-unit id="0331cbf7ccde4c03c2309a29076033363b99e2de" translate="yes" xml:space="preserve">
          <source>Generate links for each phone</source>
          <target state="translated">각 전화에 대한 링크 생성</target>
        </trans-unit>
        <trans-unit id="fa8f19621d7803cd2efd4572edbf815edb8e8cde" translate="yes" xml:space="preserve">
          <source>Generate the &lt;code&gt;CrisisList&lt;/code&gt; and &lt;code&gt;HeroList&lt;/code&gt; components so that the router has something to render.</source>
          <target state="translated">라우터가 렌더링 할 항목을 갖도록 &lt;code&gt;CrisisList&lt;/code&gt; 및 &lt;code&gt;HeroList&lt;/code&gt; 구성 요소를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="38e92ff7133dfc97972b0278b9c37d5608b4290b" translate="yes" xml:space="preserve">
          <source>Generate the class &lt;code&gt;src/app/in-memory-data.service.ts&lt;/code&gt; with the following command:</source>
          <target state="translated">다음 명령으로 &lt;code&gt;src/app/in-memory-data.service.ts&lt;/code&gt; 클래스를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="626ad04fb20bdfbc92db1558c44acd203ee09b06" translate="yes" xml:space="preserve">
          <source>Generate the form contents.</source>
          <target state="translated">양식 컨텐츠를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="cd63ede340ee7d3bb4fe765dd65657bf31fab426" translate="yes" xml:space="preserve">
          <source>Generates a 'stats.json' file which can be analyzed using tools such as 'webpack-bundle-analyzer'.</source>
          <target state="translated">'webpack-bundle-analyzer'와 같은 도구를 사용하여 분석 할 수있는 'stats.json'파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c68d6290e060eea666b076a5aa5a84ecbf27fe7c" translate="yes" xml:space="preserve">
          <source>Generates a new basic app definition in the &quot;projects&quot; subfolder of the workspace.</source>
          <target state="translated">작업 공간의 &quot;프로젝트&quot;하위 폴더에 새로운 기본 앱 정의를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fa8d7f6f4eed1090704feca3332459e426dd6e10" translate="yes" xml:space="preserve">
          <source>Generates a new, generic enum definition for the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에 대한 새로운 일반 열거 정의를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0754d37d5e990728ee91f0ec18ef6955815d8d68" translate="yes" xml:space="preserve">
          <source>Generates a new, generic resolver definition in the given or default project.</source>
          <target state="translated">지정된 프로젝트 또는 기본 프로젝트에서 새 일반 해결 프로그램 정의를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ab848267d716e8a4bebfc6fc3df07a5bddaf3f06" translate="yes" xml:space="preserve">
          <source>Generates a new, generic route guard definition in the given or default project.</source>
          <target state="translated">주어진 또는 기본 프로젝트에서 새로운 일반 경로 보호 정의를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ebc4b67cc162d00ec204096d82e460473d1c79ea" translate="yes" xml:space="preserve">
          <source>Generates a service worker config for production builds.</source>
          <target state="translated">프로덕션 빌드를위한 서비스 워커 구성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="86aaceaf2adaab13af57352592c0b404b5df3b21" translate="yes" xml:space="preserve">
          <source>Generates an app shell for running a server-side version of an app.</source>
          <target state="translated">서버 측 버전의 앱을 실행하기위한 앱 셸을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="56a5676209bef860c9fa9fc0c49f512bd152fcac" translate="yes" xml:space="preserve">
          <source>Generates and/or modifies files based on a schematic.</source>
          <target state="translated">회로도를 기반으로 파일을 생성 및 / 또는 수정합니다.</target>
        </trans-unit>
        <trans-unit id="b062b8f1ffe2b49d3ab2ace012273f0104d17418" translate="yes" xml:space="preserve">
          <source>Generating a library with the Angular CLI automatically adds its path to the &lt;code&gt;tsconfig&lt;/code&gt; file. The Angular CLI uses the &lt;code&gt;tsconfig&lt;/code&gt; paths to tell the build system where to find the library.</source>
          <target state="translated">Angular CLI를 사용하여 라이브러리를 생성하면 해당 경로가 &lt;code&gt;tsconfig&lt;/code&gt; 파일에 자동으로 추가 됩니다. Angular CLI는 &lt;code&gt;tsconfig&lt;/code&gt; 경로를 사용하여 빌드 시스템에 라이브러리를 찾을 위치를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="a6767451e36ba6ab61da1471da0d511ffe98e6b6" translate="yes" xml:space="preserve">
          <source>Generating code using schematics</source>
          <target state="translated">회로도를 사용하여 코드 생성</target>
        </trans-unit>
        <trans-unit id="9435f311ca9bf5c895db9c0e1c87157165c85f6a" translate="yes" xml:space="preserve">
          <source>Generating form controls with FormBuilder</source>
          <target state="translated">FormBuilder를 사용하여 양식 컨트롤 생성</target>
        </trans-unit>
        <trans-unit id="cea5d53723bbebadfc8d0290ebf665734c7c2abe" translate="yes" xml:space="preserve">
          <source>Generation schematics</source>
          <target state="translated">생성 회로도</target>
        </trans-unit>
        <trans-unit id="380e0d97ca6db455288de6ea75e1bcf1d6d656e1" translate="yes" xml:space="preserve">
          <source>Generation schematics are instructions for the &lt;code&gt;ng generate&lt;/code&gt; command. The documented sub-commands use the default Angular generation schematics, but you can specify a different schematic (in place of a sub-command) to generate an artifact defined in your library.</source>
          <target state="translated">생성 회로도는 &lt;code&gt;ng generate&lt;/code&gt; 명령에 대한 지침입니다 . 문서화 된 하위 명령은 기본 각도 생성 회로도를 사용하지만 라이브러리에 정의 된 아티팩트를 생성하기 위해 하위 명령 대신 다른 회로도를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68af3db5ab5d29c452ca8f7fe938836faf14b003" translate="yes" xml:space="preserve">
          <source>Generic DOM APIs, such as &lt;code&gt;document.createElement()&lt;/code&gt; or &lt;code&gt;document.querySelector()&lt;/code&gt;, return an element type that is appropriate for the specified arguments. For example, calling &lt;code&gt;document.createElement('&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;')&lt;/code&gt; will return an &lt;code&gt;HTMLAnchorElement&lt;/code&gt;, which TypeScript knows has an &lt;code&gt;href&lt;/code&gt; property. Similarly, &lt;code&gt;document.createElement('div')&lt;/code&gt; will return an &lt;code&gt;HTMLDivElement&lt;/code&gt;, which TypeScript knows has no &lt;code&gt;href&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;document.createElement()&lt;/code&gt; 또는 &lt;code&gt;document.querySelector()&lt;/code&gt; 와 같은 일반 DOM API 는 지정된 인수에 적합한 요소 유형을 리턴합니다. 예를 들어 &lt;code&gt;document.createElement('&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;')&lt;/code&gt; 호출 하면 &lt;code&gt;HTMLAnchorElement&lt;/code&gt; 가 반환 되며 TypeScript는 &lt;code&gt;href&lt;/code&gt; 속성을 가지고 있습니다. 마찬가지로 &lt;code&gt;document.createElement('div')&lt;/code&gt; 는 &lt;code&gt;HTMLDivElement&lt;/code&gt; 를 반환하며 , TypeScript는 &lt;code&gt;href&lt;/code&gt; 속성 이 없다는 것을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a2c9c27abcc8eca0bd04fd68f06e1932e91ed15" translate="yes" xml:space="preserve">
          <source>Generic DOM APIs, such as &lt;code&gt;document.createElement()&lt;/code&gt; or &lt;code&gt;document.querySelector()&lt;/code&gt;, return an element type that is appropriate for the specified arguments. For example, calling &lt;code&gt;document.createElement('a')&lt;/code&gt; will return an &lt;code&gt;HTMLAnchorElement&lt;/code&gt;, which TypeScript knows has an &lt;code&gt;href&lt;/code&gt; property. Similarly, &lt;code&gt;document.createElement('div')&lt;/code&gt; will return an &lt;code&gt;HTMLDivElement&lt;/code&gt;, which TypeScript knows has no &lt;code&gt;href&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;document.createElement()&lt;/code&gt; 또는 &lt;code&gt;document.querySelector()&lt;/code&gt; 와 같은 일반 DOM API 는 지정된 인수에 적합한 요소 유형을 반환합니다. 예를 들어, &lt;code&gt;document.createElement('a')&lt;/code&gt; 를 호출 하면 TypeScript에 &lt;code&gt;href&lt;/code&gt; 속성 이 있음을 알고 있는 &lt;code&gt;HTMLAnchorElement&lt;/code&gt; 가 반환 됩니다. 마찬가지로 &lt;code&gt;document.createElement('div')&lt;/code&gt; 는 TypeScript에 &lt;code&gt;href&lt;/code&gt; 속성 이 없음을 알고 있는 &lt;code&gt;HTMLDivElement&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2d7dc0e436d9539f483e9a75feff826163b8b3c4" translate="yes" xml:space="preserve">
          <source>Generic selector that displays the string that matches the current value.</source>
          <target state="translated">현재 값과 일치하는 문자열을 표시하는 일반 선택기</target>
        </trans-unit>
        <trans-unit id="8c7a9565584738b6d0e52ee69981c1788da06bc1" translate="yes" xml:space="preserve">
          <source>Get a list of component types registered to this application. This list is populated even before the component is created.</source>
          <target state="translated">이 응용 프로그램에 등록 된 구성 요소 유형 목록을 가져옵니다. 이 목록은 구성 요소를 작성하기 전에 채워집니다.</target>
        </trans-unit>
        <trans-unit id="ba71eb4fd90a686961b741cb833ffd4a54e02338" translate="yes" xml:space="preserve">
          <source>Get a list of components registered to this application.</source>
          <target state="translated">이 응용 프로그램에 등록 된 구성 요소 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b8ae68bbf676af7d75792ca7c88e455618f73678" translate="yes" xml:space="preserve">
          <source>Get a promise that resolves when the fixture is stable.</source>
          <target state="translated">고정 장치가 안정적 일 때 해결되는 약속을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="48f71941fbc082e5baabc9d6a22ffacc94a5e225" translate="yes" xml:space="preserve">
          <source>Get a promise that resolves when the ui state is stable following animations.</source>
          <target state="translated">애니메이션에 따라 UI 상태가 안정적 일 때 해결되는 약속을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="3ef6faa34773e978c631aa1e80c4c1df032de2f4" translate="yes" xml:space="preserve">
          <source>Get a testability hook associated with the application</source>
          <target state="translated">응용 프로그램과 관련된 테스트 가능성 후크 확보</target>
        </trans-unit>
        <trans-unit id="11b5a80e416cf90b3962bd51ff1f7224173e22c7" translate="yes" xml:space="preserve">
          <source>Get all registered applications(root elements)</source>
          <target state="translated">등록 된 모든 응용 프로그램 가져 오기 (루트 요소)</target>
        </trans-unit>
        <trans-unit id="85c4a7809e2e093fc80138814b72ed55768463ff" translate="yes" xml:space="preserve">
          <source>Get all registered testabilities</source>
          <target state="translated">등록 된 모든 증거를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="afd44cbc88b568ce4dc6a70a2d349015b773e647" translate="yes" xml:space="preserve">
          <source>Get data from a server</source>
          <target state="translated">서버에서 데이터 가져 오기</target>
        </trans-unit>
        <trans-unit id="1ec968837a76ff8234b189b68d3ee3766251e92a" translate="yes" xml:space="preserve">
          <source>Get hero by id</source>
          <target state="translated">ID로 영웅 얻기</target>
        </trans-unit>
        <trans-unit id="c1355577bacd5acd927b269d302c2831ae4e0915" translate="yes" xml:space="preserve">
          <source>Get hero data</source>
          <target state="translated">영웅 데이터 가져 오기</target>
        </trans-unit>
        <trans-unit id="5d5dde643594b9932dc428da3a787b7acb7f3a04" translate="yes" xml:space="preserve">
          <source>Get heroes with &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 로 영웅을 얻으십시오</target>
        </trans-unit>
        <trans-unit id="09a7bb30075eafdbd90429b490369ebe14a764e4" translate="yes" xml:space="preserve">
          <source>Get injected services</source>
          <target state="translated">주사 서비스 받기</target>
        </trans-unit>
        <trans-unit id="131266c3e0d171880d06a0a24a19f06f7aa83966" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; at the given &lt;code&gt;index&lt;/code&gt; in the array.</source>
          <target state="translated">가져 오기 &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; 를 주어진에서 &lt;code&gt;index&lt;/code&gt; 배열한다.</target>
        </trans-unit>
        <trans-unit id="dd6bc06b4de90fcac5fde67fdc56d3e38702afe3" translate="yes" xml:space="preserve">
          <source>Get the XSRF token to use with an outgoing request.</source>
          <target state="translated">발신 요청에 사용할 XSRF 토큰을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="44f614b04f8a7d92f74885414a17f45799dd4575" translate="yes" xml:space="preserve">
          <source>Get the complete example code for the reactive and template-driven forms used here to illustrate form validation. Run the live example.</source>
          <target state="translated">여기에서 양식 유효성 검사를 설명하는 데 사용되는 반응 형 및 템플릿 기반 양식에 대한 전체 예제 코드를 가져옵니다. 라이브 예제를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="e3da1c5459c7f2bceef1e65095d844c3b2bc904b" translate="yes" xml:space="preserve">
          <source>Get the number of pending requests</source>
          <target state="translated">보류중인 요청 수 가져 오기</target>
        </trans-unit>
        <trans-unit id="24c85ef5faa8219f5fd24863a828f95a77b88997" translate="yes" xml:space="preserve">
          <source>Get the project configuration</source>
          <target state="translated">프로젝트 구성 가져 오기</target>
        </trans-unit>
        <trans-unit id="e9d01545a58adde7a54d98c34d7e7ab8358d1c1b" translate="yes" xml:space="preserve">
          <source>Get the route that created it</source>
          <target state="translated">그것을 만든 경로를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="9fd63aabfc07cc505e1b32d93e73e02ae71e179f" translate="yes" xml:space="preserve">
          <source>Get the title of the current HTML document.</source>
          <target state="translated">현재 HTML 문서의 제목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="853d5cf0ddb8b0b63460f74da94f03814abcef8b" translate="yes" xml:space="preserve">
          <source>Get the value corresponding to a key. Return &lt;code&gt;defaultValue&lt;/code&gt; if key is not found.</source>
          <target state="translated">키에 해당하는 값을 가져옵니다. 키를 찾지 못하면 &lt;code&gt;defaultValue&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e633a889d343373bc7733d29c137bc6d6d19bbfe" translate="yes" xml:space="preserve">
          <source>Get user input from a template reference variable</source>
          <target state="translated">템플릿 참조 변수에서 사용자 입력 받기</target>
        </trans-unit>
        <trans-unit id="0eb96ff9664f97bce4773ae26b4ff46b6eeca582" translate="yes" xml:space="preserve">
          <source>Get user input from the $event object</source>
          <target state="translated">$ event 객체에서 사용자 입력 받기</target>
        </trans-unit>
        <trans-unit id="b52d196c4acb500b8a1fce9427fea4967818a0d3" translate="yes" xml:space="preserve">
          <source>GetTestability</source>
          <target state="translated">GetTestability</target>
        </trans-unit>
        <trans-unit id="f3caee9190ed9adb6e55cf7ac6826119198008b4" translate="yes" xml:space="preserve">
          <source>Gets the current instance of the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;. Usually unnecessary because the static class methods of the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; class are typically sufficient. The &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; instance exposes a few rarely used members that are not available as static methods.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 의 현재 인스턴스를 가져 옵니다 . 일반적으로 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 클래스 의 정적 클래스 메소드로 충분 하므로 불필요합니다 . &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 인스턴스는 정적 메서드로 사용할 수없는 몇 거의 사용되지 않는 멤버를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="0c7990050a50ffe200ff6702af0ec26fd388eaa9" translate="yes" xml:space="preserve">
          <source>Getting Started Tutorial</source>
          <target state="translated">시작하기 자습서</target>
        </trans-unit>
        <trans-unit id="8763b134008e61a206a3cc2b040b464b4e2cf711" translate="yes" xml:space="preserve">
          <source>Getting Started assumes the &lt;a href=&quot;https://stackblitz.com/&quot;&gt;StackBlitz&lt;/a&gt; online development environment. To learn how to export an app from StackBlitz to your local environment, skip ahead to the &lt;a href=&quot;start/deployment&quot;&gt;Deployment&lt;/a&gt; section.</source>
          <target state="translated">시작하기는 &lt;a href=&quot;https://stackblitz.com/&quot;&gt;StackBlitz&lt;/a&gt; 온라인 개발 환경을 가정 합니다. StackBlitz에서 로컬 환경으로 앱을 내보내는 방법을 알아 보려면 &lt;a href=&quot;start/deployment&quot;&gt;배포&lt;/a&gt; 섹션으로 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="42f15af89ce6b5fe82800a2db148f3aa4efa31ef" translate="yes" xml:space="preserve">
          <source>Getting Started with Angular: Your First App</source>
          <target state="translated">Angular 시작하기 : 첫 번째 앱</target>
        </trans-unit>
        <trans-unit id="0ac5f60676cb5cfe60d16c31b4d7a48edc719d03" translate="yes" xml:space="preserve">
          <source>Getting error details</source>
          <target state="translated">오류 정보 얻기</target>
        </trans-unit>
        <trans-unit id="1c8b693c2abb7caf69dbccffcf1bf34248f8757f" translate="yes" xml:space="preserve">
          <source>Getting notified of &lt;em&gt;available&lt;/em&gt; updates. These are new versions of the app to be loaded if the page is refreshed.</source>
          <target state="translated">&lt;em&gt;사용 가능한&lt;/em&gt; 업데이트 알림 받기 . 페이지를 새로 고치면로드 할 앱의 새로운 버전입니다.</target>
        </trans-unit>
        <trans-unit id="eff07e16ec59ae1e3afd8560950554feb087b28f" translate="yes" xml:space="preserve">
          <source>Getting notified of new releases</source>
          <target state="translated">새로운 릴리스에 대한 알림 받기</target>
        </trans-unit>
        <trans-unit id="1156bdd0a2f15d9cd4bf28ddf6329c03307719ae" translate="yes" xml:space="preserve">
          <source>Getting notified of update &lt;em&gt;activation&lt;/em&gt;. This is when the service worker starts serving a new version of the app immediately.</source>
          <target state="translated">업데이트 &lt;em&gt;활성화&lt;/em&gt; 알림 받기 . 서비스 담당자가 즉시 새 버전의 앱 서비스를 제공하기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="9281f2cd9f740159e93852cf38608061ec6e2923" translate="yes" xml:space="preserve">
          <source>Getting route information</source>
          <target state="translated">경로 정보 얻기</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="b90e46f742d46766d3d528ea6574463b2e8defbc" translate="yes" xml:space="preserve">
          <source>Getting started application</source>
          <target state="translated">응용 프로그램 시작</target>
        </trans-unit>
        <trans-unit id="89b47d7c28d53716bbd6b58823bf77af959fa144" translate="yes" xml:space="preserve">
          <source>Getting started with a basic Angular app</source>
          <target state="translated">기본 Angular 앱 시작하기</target>
        </trans-unit>
        <trans-unit id="58e950b388f2b51607668bd15dd44d766f8c8ea1" translate="yes" xml:space="preserve">
          <source>Getting started with service workers</source>
          <target state="translated">서비스 근로자 시작하기</target>
        </trans-unit>
        <trans-unit id="5c1fd8bd19e93f683c985727a839dbc24e11a6e9" translate="yes" xml:space="preserve">
          <source>GitHub pages</source>
          <target state="translated">GitHub 페이지</target>
        </trans-unit>
        <trans-unit id="879351c6d9b4176969123a28d55e3bc051885425" translate="yes" xml:space="preserve">
          <source>Give it a &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; property instead of a &lt;code&gt;children&lt;/code&gt; property. The &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; property takes a function that returns a promise using the browser's built-in syntax for lazy loading code using dynamic imports &lt;code&gt;import('...')&lt;/code&gt;. The path is the location of the &lt;code&gt;AdminModule&lt;/code&gt; (relative to the app root). After the code is requested and loaded, the &lt;code&gt;Promise&lt;/code&gt; resolves an object that contains the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, in this case the &lt;code&gt;AdminModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; 속성 대신 &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 속성을 제공하십시오 . &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 의 속성은 반환이 브라우저를 사용하여 약속이 내장되어 있다는 구문 게으른 로딩 코드를 동적 수입 사용하여 기능을한다 &lt;code&gt;import('...')&lt;/code&gt; . 경로는 &lt;code&gt;AdminModule&lt;/code&gt; 의 위치입니다 (앱 루트 기준). 코드가 요청되고로드 된 후 &lt;code&gt;Promise&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 이 포함 된 개체 ( 이 경우 &lt;code&gt;AdminModule&lt;/code&gt; )를 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="3d8b06c73ef585ba0330c083a33a471f10ba12a4" translate="yes" xml:space="preserve">
          <source>Give it a &lt;code&gt;loadChildren&lt;/code&gt; property instead of a &lt;code&gt;children&lt;/code&gt; property. The &lt;code&gt;loadChildren&lt;/code&gt; property takes a function that returns a promise using the browser's built-in syntax for lazy loading code using dynamic imports &lt;code&gt;import('...')&lt;/code&gt;. The path is the location of the &lt;code&gt;AdminModule&lt;/code&gt; (relative to the app root). After the code is requested and loaded, the &lt;code&gt;Promise&lt;/code&gt; resolves an object that contains the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, in this case the &lt;code&gt;AdminModule&lt;/code&gt;.</source>
          <target state="translated">그에게 부여 &lt;code&gt;loadChildren&lt;/code&gt; 재산 대신 &lt;code&gt;children&lt;/code&gt; 속성을. &lt;code&gt;loadChildren&lt;/code&gt; 의 속성은 반환이 브라우저를 사용하여 약속이 내장되어 있다는 구문 게으른 로딩 코드를 동적 수입 사용하여 기능을한다 &lt;code&gt;import('...')&lt;/code&gt; . 경로는 &lt;code&gt;AdminModule&lt;/code&gt; 의 위치 (앱 루트에 상대적)입니다. 코드가 요청되고로드 된 후 &lt;code&gt;Promise&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 이 포함 된 개체 ( 이 경우 &lt;code&gt;AdminModule&lt;/code&gt; )를 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="00800e550f2e87414dda167ff182d9d9eabf5ca1" translate="yes" xml:space="preserve">
          <source>Give the live example anchor a custom label and tooltip by setting the &lt;code&gt;title&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; 속성 을 설정하여 라이브 예제 앵커에 사용자 정의 레이블 및 툴팁을 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="6839d82e03f5268d9a7cc97802db76c48c8cce6e" translate="yes" xml:space="preserve">
          <source>Given</source>
          <target state="translated">Given</target>
        </trans-unit>
        <trans-unit id="5a254402a587d421ea975a31c00ffa8957c729c5" translate="yes" xml:space="preserve">
          <source>Given a route configuration &lt;code&gt;[{ path: 'user/:name', component: UserCmp }]&lt;/code&gt;, the following creates a static link to the route: &lt;code&gt;&amp;lt;a &lt;a href=&quot;routerlink&quot;&gt;routerLink&lt;/a&gt;=&quot;/user/bob&quot;&amp;gt;link to user component&amp;lt;/a&amp;gt;&lt;/code&gt;</source>
          <target state="translated">경로 구성 &lt;code&gt;[{ path: 'user/:name', component: UserCmp }]&lt;/code&gt; 지면 다음은 경로에 대한 정적 링크를 만듭니다. &lt;code&gt;&amp;lt;a &lt;a href=&quot;routerlink&quot;&gt;routerLink&lt;/a&gt;=&quot;/user/bob&quot;&amp;gt;link to user component&amp;lt;/a&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f04582e73690e8309fe132096158ece581225b7" translate="yes" xml:space="preserve">
          <source>Given that this use case is relatively rare and special handling impacts application performance, we have deprecated it in v10. No replacement is planned for this deprecation.</source>
          <target state="translated">이 사용 사례는 비교적 드물고 특수 처리가 애플리케이션 성능에 영향을 미치므로 v10에서 더 이상 사용하지 않습니다. 이 지원 중단에 대한 교체 계획은 없습니다.</target>
        </trans-unit>
        <trans-unit id="d407a28bf26b4dade30f163a570d19e4c3992b48" translate="yes" xml:space="preserve">
          <source>Given the configuration above, when the browser URL for this application becomes &lt;code&gt;/heroes&lt;/code&gt;, the router matches that URL to the route path &lt;code&gt;/heroes&lt;/code&gt; and displays the &lt;code&gt;HeroListComponent&lt;/code&gt; as a sibling element to the &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; that you've placed in the host component's template.</source>
          <target state="translated">위의 구성에서이 응용 프로그램의 브라우저 URL이 &lt;code&gt;/heroes&lt;/code&gt; 가되면 라우터는 해당 URL을 경로 경로 &lt;code&gt;/heroes&lt;/code&gt; 와 일치 시키고 호스트 구성 요소의 템플릿에 배치 한 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 의 형제 요소로 &lt;code&gt;HeroListComponent&lt;/code&gt; 를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="a5aa348026022d33eddd607db014bac87f921d1a" translate="yes" xml:space="preserve">
          <source>Given the following DOM structure:</source>
          <target state="translated">다음 DOM 구조가 주어지면 :</target>
        </trans-unit>
        <trans-unit id="8868a65f6b530e81d17de3561e83d4a3f7803b25" translate="yes" xml:space="preserve">
          <source>Given the following example route, the router will lazy load the associated module on demand using the browser native import system.</source>
          <target state="translated">다음 예제 라우트가 주어지면, 라우터는 브라우저 고유 반입 시스템을 사용하여 요청시 연관된 모듈을 지연로드합니다.</target>
        </trans-unit>
        <trans-unit id="cd9ae9112239a7cf0db3bc111e0f8b2934f009e6" translate="yes" xml:space="preserve">
          <source>Globs of files to include, relative to workspace or project root. There are 2 special cases:</source>
          <target state="translated">작업 공간 또는 프로젝트 루트와 관련하여 포함 할 파일의 덩어리. 두 가지 특별한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d916a5822a35d3011d7f0297a340fb2299250c03" translate="yes" xml:space="preserve">
          <source>Globs to exclude from code coverage.</source>
          <target state="translated">코드 적용 범위에서 제외 할 글로브.</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="e3915ceb49c4c471e23a11783840fc00452afb0b" translate="yes" xml:space="preserve">
          <source>Go to definition</source>
          <target state="translated">정의로 이동</target>
        </trans-unit>
        <trans-unit id="044a0ddb42ed2445e5c494c3fac7abbfd02ce690" translate="yes" xml:space="preserve">
          <source>Go to the</source>
          <target state="translated">로 이동</target>
        </trans-unit>
        <trans-unit id="b516f5d1cfcbe9ea408daa0114d4bf66a92c130b" translate="yes" xml:space="preserve">
          <source>Go to the &lt;code&gt;&amp;lt;lib-root&amp;gt;/schematics/my-service/&lt;/code&gt; folder.</source>
          <target state="translated">로 이동 &lt;code&gt;&amp;lt;lib-root&amp;gt;/schematics/my-service/&lt;/code&gt; 폴더에 있습니다.</target>
        </trans-unit>
        <trans-unit id="e899859d236a817b6de8def24c888bb63a6c57f6" translate="yes" xml:space="preserve">
          <source>Go to the &lt;strong&gt;Network tab&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;네트워크 탭으로&lt;/strong&gt; 이동 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="32954252eb2c7179519aa1ba797bdaa709312ce5" translate="yes" xml:space="preserve">
          <source>Go to the collection folder, install your npm dependencies, and open your new collection in your favorite editor to see the generated files. For example, if you are using VSCode:</source>
          <target state="translated">콜렉션 폴더로 이동하여 npm 종속성을 설치 한 후 선호하는 편집기에서 새 콜렉션을 열어 생성 된 파일을보십시오. 예를 들어 VSCode를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="3b81592b501bfa044e9f6a43275001ed154c5f39" translate="yes" xml:space="preserve">
          <source>Go to the workspace directory and launch the application.</source>
          <target state="translated">작업 공간 디렉토리로 이동하여 애플리케이션을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="664d0bc25c3d434ffaffbb6c6e437f0e9b1594b0" translate="yes" xml:space="preserve">
          <source>Go to the workspace folder (&lt;code&gt;my-app&lt;/code&gt;).</source>
          <target state="translated">작업 공간 폴더 ( &lt;code&gt;my-app&lt;/code&gt; )로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="6db6e2bfc84d579abc739b3d030ca7f64fb44ae9" translate="yes" xml:space="preserve">
          <source>Go undercover with these two spy hooks to discover when an element is initialized or destroyed.</source>
          <target state="translated">이 두 스파이 훅으로 잠복 해 요소가 초기화되거나 파괴되는시기를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="22e5dcc47a0ac764dc09b2d910699120c526df7a" translate="yes" xml:space="preserve">
          <source>Going forward, we will focus our efforts related to web workers around their primary use case of offloading CPU-intensive, non-critical work needed for initial rendering (such as in-memory search and image processing). Learn more in the &lt;a href=&quot;web-worker&quot;&gt;guide to Using Web Workers with the Angular CLI&lt;/a&gt;.</source>
          <target state="translated">앞으로는 메모리 렌더링 및 이미지 처리와 같은 초기 렌더링에 필요한 CPU 집약적이고 중요하지 않은 작업을 오프로드하는 주요 사용 사례를 중심으로 웹 작업자와 관련된 노력을 집중할 것입니다. &lt;a href=&quot;web-worker&quot;&gt;Angular CLI와 함께 웹 워커 사용 안내서&lt;/a&gt; 에서 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="11a15ba018ceec88b818afcf38c41b171d4ab615" translate="yes" xml:space="preserve">
          <source>Good animations intuitively call the user's attention to where it is needed.</source>
          <target state="translated">좋은 애니메이션은 직관적으로 필요한 곳에 사용자의주의를 환기시킵니다.</target>
        </trans-unit>
        <trans-unit id="c8d03faec6d275f412f7e3b57f8c17879e0da4b5" translate="yes" xml:space="preserve">
          <source>Google, Bing, Facebook, Twitter, and other social media sites rely on web crawlers to index your application content and make that content searchable on the web. These web crawlers may be unable to navigate and index your highly interactive Angular application as a human user could do.</source>
          <target state="translated">Google, Bing, Facebook, Twitter 및 기타 소셜 미디어 사이트는 웹 크롤러를 사용하여 응용 프로그램 컨텐츠를 색인화하고 해당 컨텐츠를 웹에서 검색 할 수 있도록합니다. 이러한 웹 크롤러는 사용자가 할 수있는 것처럼 대화 형 Angular 응용 프로그램을 탐색하고 색인을 생성하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Grammar</target>
        </trans-unit>
        <trans-unit id="c12060bafa9ab7b15b6ca3832d6af3230ce42f70" translate="yes" xml:space="preserve">
          <source>Group separator for currency values (fallback to &lt;code&gt;Group&lt;/code&gt;). Example: $2,345.67</source>
          <target state="translated">통화 값에 대한 그룹 구분 기호 ( &lt;code&gt;Group&lt;/code&gt; 으로 대체 ) 예 : $ 2,345.67</target>
        </trans-unit>
        <trans-unit id="2770f72df0af3038ef1a0343ee52b5941837423e" translate="yes" xml:space="preserve">
          <source>Group sibling elements with &amp;lt;ng-container&amp;gt;</source>
          <target state="translated">&amp;lt;ng-container&amp;gt;를 사용하여 형제 요소 그룹화</target>
        </trans-unit>
        <trans-unit id="aa514f2ffcdeb3b9ada36d109590b2f755f4bd17" translate="yes" xml:space="preserve">
          <source>Group the nested form in the template.</source>
          <target state="translated">템플릿에서 중첩 된 양식을 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="74434544ea4ad6607f75706c9a1d9d5850e5f00b" translate="yes" xml:space="preserve">
          <source>Grouped animations are useful when a series of styles must be animated at different starting times and closed off at different ending times.</source>
          <target state="translated">그룹화 된 애니메이션은 일련의 스타일을 다른 시작 시간에 애니메이션화하고 다른 종료 시간에 닫아야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5a4358aa8c9827657281c95ebc1a61485d3b94c0" translate="yes" xml:space="preserve">
          <source>Grouping all custom events under this type ensures they will be handled and forwarded by all implementations of interceptors.</source>
          <target state="translated">이 유형으로 모든 사용자 정의 이벤트를 그룹화하면 인터셉터의 모든 구현에서 이벤트를 처리하고 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="022f8ed1b5baa1c6c383d3cd42ee431d41e6c665" translate="yes" xml:space="preserve">
          <source>Grouping form controls</source>
          <target state="translated">양식 컨트롤 그룹화</target>
        </trans-unit>
        <trans-unit id="9ae241754a154ca19caabd604845bbd97a55ee45" translate="yes" xml:space="preserve">
          <source>Grouping separator, typically for thousands. For &lt;code&gt;en-US&lt;/code&gt;, the comma character. Example: 2&lt;code&gt;,&lt;/code&gt;345.67</source>
          <target state="translated">일반적으로 수천의 그룹화 구분 기호입니다. 들어 &lt;code&gt;en-US&lt;/code&gt; , 쉼표 문자. 예 : 2 &lt;code&gt;,&lt;/code&gt; 345.67</target>
        </trans-unit>
        <trans-unit id="6326b449098dfdd85370d4e7f92d36b7b17a3cdc" translate="yes" xml:space="preserve">
          <source>Guard against null</source>
          <target state="translated">null로부터 보호</target>
        </trans-unit>
        <trans-unit id="ab5327438e6b149abb6275cce81dbe7458e8eca1" translate="yes" xml:space="preserve">
          <source>Guard the admin feature</source>
          <target state="translated">관리자 기능 보호</target>
        </trans-unit>
        <trans-unit id="67de3c63a9bd94b74bfc86944368ab7bcdf6d849" translate="yes" xml:space="preserve">
          <source>Guards</source>
          <target state="translated">Guards</target>
        </trans-unit>
        <trans-unit id="d37b7da1c8eb7bd5978035fc4081065ea96046b6" translate="yes" xml:space="preserve">
          <source>GuardsCheckEnd</source>
          <target state="translated">GuardsCheckEnd</target>
        </trans-unit>
        <trans-unit id="965b3bfde4f2655376c67aa3734795d0e8a8cc08" translate="yes" xml:space="preserve">
          <source>GuardsCheckStart</source>
          <target state="translated">GuardsCheckStart</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="4ac7a3e3bac944a26bbaf448ea2cfcf2565e9e00" translate="yes" xml:space="preserve">
          <source>Guide pages</source>
          <target state="translated">가이드 페이지</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="69b6078e8dd0f5fe92912dfaa975e257f326a1ad" translate="yes" xml:space="preserve">
          <source>Guidelines for creating NgModules</source>
          <target state="translated">NgModules 생성 지침</target>
        </trans-unit>
        <trans-unit id="6f2413a65c9297cdd43260f7f29f49c1d190ee16" translate="yes" xml:space="preserve">
          <source>Guides are rich in examples of working Angular code. Example code can be commands entered in a terminal window, a fragment of TypeScript or HTML, or an entire code file.</source>
          <target state="translated">가이드는 작동하는 Angular 코드의 예가 풍부합니다. 예제 코드는 터미널 창, TypeScript 또는 HTML 조각 또는 전체 코드 파일에 입력 된 명령 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="36ba7465769b4ff0ab60fcd125dcc264416fb8e1" translate="yes" xml:space="preserve">
          <source>H (13)</source>
          <target state="translated">H (13)</target>
        </trans-unit>
        <trans-unit id="f411883d06b3723fb25fc201defabd4ea8ec9ca9" translate="yes" xml:space="preserve">
          <source>HAMMER_GESTURE_CONFIG</source>
          <target state="translated">HAMMER_GESTURE_CONFIG</target>
        </trans-unit>
        <trans-unit id="8a892694247fc243c4878ab48986c7e386dc9bbf" translate="yes" xml:space="preserve">
          <source>HAMMER_LOADER</source>
          <target state="translated">HAMMER_LOADER</target>
        </trans-unit>
        <trans-unit id="fc5d4b9117ba9e87388174aee4f4970bdfe8d066" translate="yes" xml:space="preserve">
          <source>HH</source>
          <target state="translated">HH</target>
        </trans-unit>
        <trans-unit id="f2a5ccfc6d4dc3ce20c15a7f6d6508a6af92aee9" translate="yes" xml:space="preserve">
          <source>HH (13)</source>
          <target state="translated">HH (13)</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="1bb1809c1d200915be81fd60b4b960599011f45e" translate="yes" xml:space="preserve">
          <source>HTML attribute key</source>
          <target state="translated">HTML 속성 키</target>
        </trans-unit>
        <trans-unit id="07e975607a7803b33cacfc4d5f82151d2712eef5" translate="yes" xml:space="preserve">
          <source>HTML attribute vs. DOM property</source>
          <target state="translated">HTML 속성과 DOM 속성</target>
        </trans-unit>
        <trans-unit id="14d89c14cd34020cbaa9b6f978f663507c862d40" translate="yes" xml:space="preserve">
          <source>HTML attributes such as &lt;code&gt;title&lt;/code&gt; include text that should be translated along with the rest of the displayed text in the template. The following example shows an image with a &lt;code&gt;title&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; 과 같은 HTML 속성 에는 템플릿에 표시된 나머지 텍스트와 함께 번역해야하는 텍스트가 포함됩니다. 다음 예제는 &lt;code&gt;title&lt;/code&gt; 속성이 있는 이미지를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="492f8eb8a6d365059df263e1a0ea62251a5d2784" translate="yes" xml:space="preserve">
          <source>HTML between component element tags.</source>
          <target state="translated">컴포넌트 요소 태그 사이의 HTML</target>
        </trans-unit>
        <trans-unit id="a28f9683020cbd43849f3983827dd44d9e423a2f" translate="yes" xml:space="preserve">
          <source>HTML constructed on the server is vulnerable to injection attacks. Injecting template code into an Angular application is the same as injecting executable code into the application: it gives the attacker full control over the application. To prevent this, use a templating language that automatically escapes values to prevent XSS vulnerabilities on the server. Don't generate Angular templates on the server side using a templating language; doing this carries a high risk of introducing template-injection vulnerabilities.</source>
          <target state="translated">서버에 구축 된 HTML은 주입 공격에 취약합니다. Angular 응용 프로그램에 템플릿 코드를 삽입하는 것은 응용 프로그램에 실행 코드를 삽입하는 것과 동일합니다. 공격자는 응용 프로그램을 완전히 제어 할 수 있습니다. 이를 방지하려면 서버의 XSS 취약성을 방지하기 위해 자동으로 값을 이스케이프하는 템플릿 언어를 사용하십시오. 템플릿 언어를 사용하여 서버 측에서 Angular 템플릿을 생성하지 마십시오. 이렇게하면 템플릿 주입 취약점이 발생할 위험이 높습니다.</target>
        </trans-unit>
        <trans-unit id="f3604a53d257e638a4136c7cb9f81c3eac396475" translate="yes" xml:space="preserve">
          <source>HTML in templates</source>
          <target state="translated">템플릿의 HTML</target>
        </trans-unit>
        <trans-unit id="e4e38933cb42317719499012ef3485fb636d8592" translate="yes" xml:space="preserve">
          <source>HTML is the language of the Angular template. Almost all HTML syntax is valid template syntax. The &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element is a notable exception; it is forbidden, eliminating the risk of script injection attacks. In practice, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; is ignored and a warning appears in the browser console. See the &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt; page for details.</source>
          <target state="translated">HTML은 Angular 템플릿의 언어입니다. 거의 모든 HTML 구문은 유효한 템플릿 구문입니다. &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소는 주목할만한 예외이고; 스크립트 삽입 공격의 위험을 제거하여 금지됩니다. 실제로 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 는 무시되고 브라우저 콘솔에 경고가 나타납니다. 자세한 내용은 &lt;a href=&quot;security&quot;&gt;보안&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2119c0b73a847c84cbc00c7495f27fba4e2595cf" translate="yes" xml:space="preserve">
          <source>HTML meta tag</source>
          <target state="translated">HTML 메타 태그</target>
        </trans-unit>
        <trans-unit id="b00deebf7bd53a2a4abc7db7e3692e4998497f3c" translate="yes" xml:space="preserve">
          <source>HTML5 URLs and the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt;</source>
          <target state="translated">HTML5 URL 및 &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="340a173a8095d43878d65264cab1c80c8a688b97" translate="yes" xml:space="preserve">
          <source>HTML5 URLs and the &lt;em&gt;&amp;lt;base href&amp;gt;&lt;/em&gt;</source>
          <target state="translated">HTML5 URL 및 &lt;em&gt;&amp;lt;base href&amp;gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b12cfc00134093ccb48a5b7872f416c834e69064" translate="yes" xml:space="preserve">
          <source>HTML5 has a set of built-in attributes that you can use for native validation, including &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/forms/maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt;. You can take advantage of these optional attributes on your form input elements. Add the &lt;code&gt;required&lt;/code&gt; attribute to the &lt;code&gt;firstName&lt;/code&gt; input element.</source>
          <target state="translated">HTML5에는 &lt;code&gt;required&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/forms/maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; 를 포함하여 기본 유효성 검증에 사용할 수있는 내장 속성 세트가 있습니다 . 양식 입력 요소에서 이러한 선택적 속성을 활용할 수 있습니다. &lt;code&gt;firstName&lt;/code&gt; 입력 요소에 &lt;code&gt;required&lt;/code&gt; 속성을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b064c74e2d95ac6bbf994c38b1978dcda8c19b8" translate="yes" xml:space="preserve">
          <source>HTML5 style navigation is the router default. In the &lt;a href=&quot;router#browser-url-styles&quot;&gt;LocationStrategy and browser URL styles&lt;/a&gt; Appendix, learn why HTML5 style is preferred, how to adjust its behavior, and how to switch to the older hash (#) style, if necessary.</source>
          <target state="translated">HTML5 스타일 탐색이 라우터 기본값입니다. 에서 &lt;a href=&quot;router#browser-url-styles&quot;&gt;LocationStrategy 및 브라우저 URL 스타일&lt;/a&gt; 어떻게 이전 해시 (#) 스타일로 전환하려면, 필요한 경우 HTML5 스타일이 동작을 조정하는 방법, 바람직하고, 왜 부록, 배운다.</target>
        </trans-unit>
        <trans-unit id="da1a62f1022990130bd18d54194c28a86fb20a83" translate="yes" xml:space="preserve">
          <source>HTML5 style navigation is the router default. In the &lt;a href=&quot;router#browser-url-styles&quot;&gt;LocationStrategy and browser URL styles&lt;/a&gt; section, learn why HTML5 style is preferable, how to adjust its behavior, and how to switch to the older hash (#) style, if necessary.</source>
          <target state="translated">HTML5 스타일 탐색은 라우터 기본값입니다. 에서 &lt;a href=&quot;router#browser-url-styles&quot;&gt;LocationStrategy 및 브라우저 URL 스타일의&lt;/a&gt; 섹션, HTML5 스타일이 바람직하다 왜, 어떻게 동작을 조정하고, 필요한 경우 어떻게 이전 해시 (#) 스타일로 전환을 배웁니다.</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="26c5442778a84663ac39f3f58df571733d2d4e4e" translate="yes" xml:space="preserve">
          <source>HTTP Guide</source>
          <target state="translated">HTTP 안내서</target>
        </trans-unit>
        <trans-unit id="fd91615c44820cfc2fae82595a3bc14b2eb0eaeb" translate="yes" xml:space="preserve">
          <source>HTTP Request Example</source>
          <target state="translated">HTTP 요청 예</target>
        </trans-unit>
        <trans-unit id="2ee53c95b1d46b2119a03c49e611077033b4d0b3" translate="yes" xml:space="preserve">
          <source>HTTP headers</source>
          <target state="translated">HTTP 헤더</target>
        </trans-unit>
        <trans-unit id="99a12a06813b55128f34a3ffcf4599fc8b574d15" translate="yes" xml:space="preserve">
          <source>HTTP interceptors</source>
          <target state="translated">HTTP 인터셉터</target>
        </trans-unit>
        <trans-unit id="377c79e5335f24017fbabcfef2f280c264cb9026" translate="yes" xml:space="preserve">
          <source>HTTP is a request/response protocol. You make a request, it returns a single response.</source>
          <target state="translated">HTTP는 요청 / 응답 프로토콜입니다. 요청하면 단일 응답을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="23c536246155df78480fbf53c197cd35d8be71a6" translate="yes" xml:space="preserve">
          <source>HTTP options</source>
          <target state="translated">HTTP 옵션</target>
        </trans-unit>
        <trans-unit id="23854c0ee148c64157750f67dff9661df6ecf531" translate="yes" xml:space="preserve">
          <source>HTTP options.</source>
          <target state="translated">HTTP 옵션.</target>
        </trans-unit>
        <trans-unit id="22c6da5fbbe1f2761b83f89519aa28322b6e37b1" translate="yes" xml:space="preserve">
          <source>HTTP requests are cancellable through the &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#unsubscribe&quot;&gt;unsubscribe()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#unsubscribe&quot;&gt;unsubscribe()&lt;/a&gt;&lt;/code&gt; 메소드를 통해 HTTP 요청을 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eafd2c320a66407933f095947309f861441c1c83" translate="yes" xml:space="preserve">
          <source>HTTP requests are cancellable through the &lt;code&gt;unsubscribe()&lt;/code&gt; method.</source>
          <target state="translated">HTTP 요청은 &lt;code&gt;unsubscribe()&lt;/code&gt; 메서드를 통해 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c21340afccc68e99a03b607490230cf7a0a69b9" translate="yes" xml:space="preserve">
          <source>HTTP-level vulnerabilities</source>
          <target state="translated">HTTP 수준의 취약점</target>
        </trans-unit>
        <trans-unit id="491d5ca30c6cdaec0c9db018ec25d915b8026c94" translate="yes" xml:space="preserve">
          <source>HTTP_INTERCEPTORS</source>
          <target state="translated">HTTP_INTERCEPTORS</target>
        </trans-unit>
        <trans-unit id="23a1a53228fc2ea6cc40c7cd90fef4dabbd8264b" translate="yes" xml:space="preserve">
          <source>Had the navigation path been more dynamic, you could have bound to a template expression that returned an array of route link parameters (the &lt;em&gt;link parameters array&lt;/em&gt;). The router resolves that array into a complete URL.</source>
          <target state="translated">탐색 경로가보다 동적 인 경우 경로 링크 매개 &lt;em&gt;변수 배열&lt;/em&gt; ( &lt;em&gt;링크 매개 변수 배열&lt;/em&gt; ) 을 리턴하는 템플리트 표현식에 바인드 할 수 있습니다 . 라우터는 해당 배열을 완전한 URL로 분석합니다.</target>
        </trans-unit>
        <trans-unit id="c4ac11d900262c47968e899cb74d575171c9712a" translate="yes" xml:space="preserve">
          <source>Had the navigation path been more dynamic, you could have bound to a template expression that returned an array of route link parameters; that is, the &lt;a href=&quot;router#link-parameters-array&quot;&gt;link parameters array&lt;/a&gt;. The router resolves that array into a complete URL.</source>
          <target state="translated">탐색 경로가 더 동적 인 경우 경로 링크 매개 변수 배열을 반환하는 템플릿 표현식에 바인딩 할 수 있습니다. 즉, &lt;a href=&quot;router#link-parameters-array&quot;&gt;링크 매개 변수 배열&lt;/a&gt; 입니다. 라우터는 해당 배열을 완전한 URL로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e1776f9791d5bf9ef9c8da34a7ea4a43d8c3e3d6" translate="yes" xml:space="preserve">
          <source>Had the user clicked the &lt;em&gt;Update Hero&lt;/em&gt; button, the log would show another &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; and two more triplets of &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;&lt;/code&gt;. Clearly these three hooks fire &lt;em&gt;often&lt;/em&gt;. Keep the logic in these hooks as lean as possible!</source>
          <target state="translated">사용자가 &lt;em&gt;영웅 업데이트&lt;/em&gt; 버튼을 클릭하면 로그에 다른 &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; 의 두 개의 트리플렛 , &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;&lt;/code&gt; 가 표시 됩니다. 분명히이 세 갈고리는 &lt;em&gt;자주&lt;/em&gt; 발사 &lt;em&gt;됩니다&lt;/em&gt; . 이 고리의 논리를 최대한 간결하게 유지하십시오!</target>
        </trans-unit>
        <trans-unit id="5d542056a170d88c4cecc313d0273d1beaa4ef33" translate="yes" xml:space="preserve">
          <source>Had the user clicked the &lt;em&gt;Update Hero&lt;/em&gt; button, the log would show another &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; and two more triplets of &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;&lt;/code&gt;. Notice that these three hooks fire &lt;em&gt;often&lt;/em&gt;, so it is important to keep their logic as lean as possible.</source>
          <target state="translated">사용자가 &lt;em&gt;Update Hero&lt;/em&gt; 버튼을 클릭하면 로그에 또 다른 &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;&lt;/code&gt; 의 두 개의 트리플렛이 더 표시 됩니다. 이 세 가지 후크는 &lt;em&gt;자주 실행&lt;/em&gt; 되므로 논리를 최대한 간결하게 유지하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="2606db96e8f2465348fb29fccf7dd69fadcf053a" translate="yes" xml:space="preserve">
          <source>Had you clicked the browser's back button instead of the &quot;Back&quot; button, the app would have returned you to the heroes list as well. Angular app navigation updates the browser history as normal web navigation does.</source>
          <target state="translated">&quot;뒤로&quot;버튼 대신 브라우저의 뒤로 버튼을 클릭했다면 앱이 영웅 목록으로 돌아 왔을 것입니다. Angular 앱 탐색은 일반적인 웹 탐색과 마찬가지로 브라우저 기록을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="38a4a5f9282f276ef3a418aa70cd927640922626" translate="yes" xml:space="preserve">
          <source>Had you clicked the browser's back button instead of the app's &quot;Back&quot; button, the app would have returned you to the heroes list as well. Angular app navigation updates the browser history as normal web navigation does.</source>
          <target state="translated">앱의 &quot;뒤로&quot;버튼 대신 브라우저의 뒤로 버튼을 클릭했다면 앱이 영웅 목록으로 돌아 갔을 것입니다. Angular 앱 탐색은 일반 웹 탐색과 마찬가지로 브라우저 기록을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="348fc37258d545bf3a421d6de72e333a89447b6c" translate="yes" xml:space="preserve">
          <source>HammerGestureConfig</source>
          <target state="translated">HammerGestureConfig</target>
        </trans-unit>
        <trans-unit id="bb0f6a5d72bec662bc0374235ee5abfdf7ab2f18" translate="yes" xml:space="preserve">
          <source>HammerJS support is opt-in through importing the &lt;code&gt;&lt;a href=&quot;../api/platform-browser/hammermodule&quot;&gt;HammerModule&lt;/a&gt;&lt;/code&gt; (previously, it was always included in production bundles regardless of whether the app used HammerJS).</source>
          <target state="translated">HammerJS 지원은 HammerModule 가져 오기를 통해 선택 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/hammermodule&quot;&gt;HammerModule&lt;/a&gt;&lt;/code&gt; (이전에는 앱이 HammerJS를 사용하는지 여부에 관계없이 항상 프로덕션 번들에 포함되었습니다).</target>
        </trans-unit>
        <trans-unit id="278772c1f5196a39c58fdaf97264e3b06704d03e" translate="yes" xml:space="preserve">
          <source>HammerLoader</source>
          <target state="translated">HammerLoader</target>
        </trans-unit>
        <trans-unit id="49c5a8494241c6031acf1f2618a43d45e40f2a49" translate="yes" xml:space="preserve">
          <source>HammerModule</source>
          <target state="translated">HammerModule</target>
        </trans-unit>
        <trans-unit id="6181e90bb0fd82d33cd517a4ebc3582df7a8674f" translate="yes" xml:space="preserve">
          <source>Handle form submission using the &lt;a href=&quot;../api/forms/ngform#properties&quot;&gt;&lt;code&gt;ngSubmit&lt;/code&gt;&lt;/a&gt; output property of the form.</source>
          <target state="translated">양식의 &lt;a href=&quot;../api/forms/ngform#properties&quot;&gt; &lt;code&gt;ngSubmit&lt;/code&gt; &lt;/a&gt; 출력 속성을 사용하여 양식 제출을 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="2bf0de63fe2ec09c6656158b9fbf37134a390043" translate="yes" xml:space="preserve">
          <source>Handle form submission with &lt;em&gt;ngSubmit&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;ngSubmit으로&lt;/em&gt; 양식 제출을 &lt;em&gt;처리하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1e58937a97796c16b6d90243e257adcf10584e50" translate="yes" xml:space="preserve">
          <source>Handle invalid routes with a &lt;code&gt;wildcard&lt;/code&gt; route.</source>
          <target state="translated">&lt;code&gt;wildcard&lt;/code&gt; 경로로 잘못된 경로를 처리 합니다.</target>
        </trans-unit>
        <trans-unit id="e3dc0c0c8644d4d571f10481d8b5c586e03e90d6" translate="yes" xml:space="preserve">
          <source>Handling alternative text.</source>
          <target state="translated">대체 텍스트 처리.</target>
        </trans-unit>
        <trans-unit id="c3bc2ca9f7cb1e857ab64bff2f5bc27337f23d2c" translate="yes" xml:space="preserve">
          <source>Handling an unrecoverable state</source>
          <target state="translated">복구 불가능한 상태 처리</target>
        </trans-unit>
        <trans-unit id="c82d8a656c396e869b4091c1ac8417d288742397" translate="yes" xml:space="preserve">
          <source>Handling events</source>
          <target state="translated">이벤트 처리</target>
        </trans-unit>
        <trans-unit id="3b15f51080af6b0c1e1c13c38041ed942ea71ff5" translate="yes" xml:space="preserve">
          <source>Handling form submission by binding to the &lt;code&gt;&lt;a href=&quot;../api/forms/ngform#ngSubmit&quot;&gt;NgForm.ngSubmit&lt;/a&gt;&lt;/code&gt; event property.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngform#ngSubmit&quot;&gt;NgForm.ngSubmit&lt;/a&gt;&lt;/code&gt; 이벤트 속성 에 바인딩하여 양식 제출 처리</target>
        </trans-unit>
        <trans-unit id="3b174d793481bdfc1ae4cf7d834bac12612096ed" translate="yes" xml:space="preserve">
          <source>Handling interceptor events</source>
          <target state="translated">인터셉터 이벤트 처리</target>
        </trans-unit>
        <trans-unit id="831407a4d211313e01d26114b4d98077aa2e5a6b" translate="yes" xml:space="preserve">
          <source>Handling more than one request</source>
          <target state="translated">둘 이상의 요청 처리</target>
        </trans-unit>
        <trans-unit id="a86c39000e691d43e8402a56e57f52add8830778" translate="yes" xml:space="preserve">
          <source>Handling navigation requests</source>
          <target state="translated">탐색 요청 처리</target>
        </trans-unit>
        <trans-unit id="4e04a3a7c66471317dae04093656e3ff5fdc3eb2" translate="yes" xml:space="preserve">
          <source>Handling output</source>
          <target state="translated">출력 처리</target>
        </trans-unit>
        <trans-unit id="f95f34fa70b69b36e45d9632d6643c7bdb17e313" translate="yes" xml:space="preserve">
          <source>Handling plural forms of words.</source>
          <target state="translated">복수 형태의 단어 다루기.</target>
        </trans-unit>
        <trans-unit id="bf5f2cc0b863d4ee710417509c70a142c994fa6b" translate="yes" xml:space="preserve">
          <source>Handling request errors</source>
          <target state="translated">요청 오류 처리</target>
        </trans-unit>
        <trans-unit id="e3a6579f666e7f37fbbafc8bc27eea0a4b297937" translate="yes" xml:space="preserve">
          <source>Handling user input with forms is the cornerstone of many common applications. Applications use forms to enable users to log in, to update a profile, to enter sensitive information, and to perform many other data-entry tasks.</source>
          <target state="translated">양식으로 사용자 입력을 처리하는 것은 많은 일반적인 응용 프로그램의 초석입니다. 응용 프로그램은 양식을 사용하여 사용자가 로그인하고 프로필을 업데이트하고 중요한 정보를 입력하고 다른 많은 데이터 입력 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b4dd43911d5b1213a8c24413fee5583e9c69543" translate="yes" xml:space="preserve">
          <source>Has the ability to save the changes to its tax return or cancel them.</source>
          <target state="translated">세금 보고서 변경 사항을 저장하거나 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e929e6ea9e6a11c1a8dd7547fc802c6500c5c38b" translate="yes" xml:space="preserve">
          <source>Hash mismatches can occur for a variety of reasons:</source>
          <target state="translated">해시 불일치는 여러 가지 이유로 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="446f6822c34424ae30675660ab1fef1603785ee9" translate="yes" xml:space="preserve">
          <source>HashLocationStrategy</source>
          <target state="translated">HashLocationStrategy</target>
        </trans-unit>
        <trans-unit id="f0155931738ae14ba71a27c7bbf7845159b64ae6" translate="yes" xml:space="preserve">
          <source>Have a near-term view of implementation and a long-term vision. Start small but keep in mind where the app is heading down the road.</source>
          <target state="translated">구현에 대한 단기적인 관점과 장기적인 비전을 갖습니다. 작게 시작하지만 앱이 어디로 향하고 있는지 기억하십시오.</target>
        </trans-unit>
        <trans-unit id="c08d23a9cf638cea321f4d84c68bd9d2002ab064" translate="yes" xml:space="preserve">
          <source>Having completed the preparation work, get going with the Angular upgrade of PhoneCat. You'll do this incrementally with the help of &lt;a href=&quot;upgrade#upgrading-with-ngupgrade&quot;&gt;ngUpgrade&lt;/a&gt; that comes with Angular. By the time you're done, you'll be able to remove AngularJS from the project completely, but the key is to do this piece by piece without breaking the application.</source>
          <target state="translated">준비 작업을 완료 한 후 PhoneCat의 Angular 업그레이드를 진행하십시오. Angular와 함께 제공되는 &lt;a href=&quot;upgrade#upgrading-with-ngupgrade&quot;&gt;ngUpgrade&lt;/a&gt; 의 도움으로 점진적으로이 작업을 수행합니다 . 완료되면 프로젝트에서 AngularJS를 완전히 제거 할 수 있지만 핵심은 응용 프로그램을 중단하지 않고이 조각을 하나씩 수행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e44a18c3a57a64b5f43da0c3c418a093078ff2b3" translate="yes" xml:space="preserve">
          <source>Having imported &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; into the &lt;code&gt;AppModule&lt;/code&gt;, you can inject the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; into an application class as shown in the following &lt;code&gt;ConfigService&lt;/code&gt; example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;AppModule&lt;/code&gt; 로 가져 오면 다음 &lt;code&gt;ConfigService&lt;/code&gt; 예제에 표시된대로 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 를 애플리케이션 클래스에 삽입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63c6f00e7126a7006e9f3913b9db289b6ecefa3a" translate="yes" xml:space="preserve">
          <source>Having multiple classes in the same file can be confusing. We generally recommend that you define components and services in separate files.</source>
          <target state="translated">동일한 파일에 여러 클래스가 있으면 혼동 될 수 있습니다. 일반적으로 구성 요소와 서비스를 별도의 파일로 정의하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="43b7decb237c08167fd7e5e024b70ed1cde16483" translate="yes" xml:space="preserve">
          <source>Header name default is &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt;.</source>
          <target state="translated">헤더 이름 기본값은 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fd17ac56d40e61932509fd748034fd6e03beedce" translate="yes" xml:space="preserve">
          <source>Headings and code-examples automatically clear a floating image. If you need to force a piece of text to clear a floating image, add &lt;code&gt;&amp;lt;br class=&quot;clear&quot;&amp;gt;&lt;/code&gt; where the text should break.</source>
          <target state="translated">제목과 코드 예제는 부동 이미지를 자동으로 지 웁니다. 떠 다니는 이미지를 지우려면 텍스트를 강제로 작성해야하는 경우 텍스트가 깨질 위치 에 &lt;code&gt;&amp;lt;br class=&quot;clear&quot;&amp;gt;&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="e209d6314e51dd5ccf1a29898d725458ace1ea29" translate="yes" xml:space="preserve">
          <source>Help the translator with a description and meaning</source>
          <target state="translated">설명과 의미로 번역가를 도와주세요</target>
        </trans-unit>
        <trans-unit id="23b10c4e3e30b50de4cf9d8713db9896609dac18" translate="yes" xml:space="preserve">
          <source>Helper class for UIComponents that allows components to register methods. If a registered method message is received from the broker on the worker, the UIMessageBroker deserializes its arguments and calls the registered method. If that method returns a promise, the UIMessageBroker returns the result to the worker.</source>
          <target state="translated">컴포넌트가 메소드를 등록 할 수있게하는 UIComponents의 헬퍼 클래스입니다. 작업자의 브로커에서 등록 된 메소드 메시지가 수신되면 UIMessageBroker는 인수를 직렬화 해제하고 등록 된 메소드를 호출합니다. 해당 메소드가 약속을 리턴하면 UIMessageBroker는 결과를 작업자에게 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4b749245153a679bfe782c9f0d64160b91308e72" translate="yes" xml:space="preserve">
          <source>Here are a few essential commands for guide page authors.</source>
          <target state="translated">다음은 가이드 페이지 작성자를위한 몇 가지 필수 명령입니다.</target>
        </trans-unit>
        <trans-unit id="73545db4944e39660ef5a87396a0b7aba69af71b" translate="yes" xml:space="preserve">
          <source>Here are a few more &lt;code&gt;HeroDetailComponent&lt;/code&gt; tests to reinforce the point.</source>
          <target state="translated">요점을 강화하기위한 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 테스트가 몇 가지 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bfee4d35a4ddf4a150031955212105951b628cd" translate="yes" xml:space="preserve">
          <source>Here are all variations in action, including the uppercase version:</source>
          <target state="translated">대문자 버전을 포함하여 모든 변형 된 동작은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4fb3542fad3fab2d215a2d5fc7e79d985d7d6068" translate="yes" xml:space="preserve">
          <source>Here are several ways to test it.</source>
          <target state="translated">테스트하는 몇 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="abc262ee616cd6d61de48d067488e18aa5ef326a" translate="yes" xml:space="preserve">
          <source>Here are some code samples that illustrate how the same kind of operation is defined using observables and the events API.</source>
          <target state="translated">다음은 옵저버 블 및 이벤트 API를 사용하여 동일한 종류의 작업을 정의하는 방법을 보여주는 코드 샘플입니다.</target>
        </trans-unit>
        <trans-unit id="203fd9e1b4e1afa2c6feeebed47510738cfabc5c" translate="yes" xml:space="preserve">
          <source>Here are some examples of domains in which observables are particularly useful.</source>
          <target state="translated">다음은 관찰 가능 항목이 특히 유용한 도메인의 예입니다.</target>
        </trans-unit>
        <trans-unit id="131d0134570ecdcb02d33fba4f7d38b95dc40e6f" translate="yes" xml:space="preserve">
          <source>Here are some reasons you might want to use AOT.</source>
          <target state="translated">AOT를 사용하고 싶은 몇 가지 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="26011f288b9004d25201027171dcc3188b4c814f" translate="yes" xml:space="preserve">
          <source>Here are some tests of this component:</source>
          <target state="translated">이 구성 요소에 대한 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1da109a79f1e8c33f73c9f071459627e6862b1f1" translate="yes" xml:space="preserve">
          <source>Here are some tests that confirm those links are wired to the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; directives as expected:</source>
          <target state="translated">이러한 링크가 예상대로 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 지시문에 연결되어 있는지 확인하는 테스트는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="036a997255f75ed81e294ddfe5be22eefa087ade" translate="yes" xml:space="preserve">
          <source>Here are the code files discussed in the transition example.</source>
          <target state="translated">다음은 전환 예제에서 설명한 코드 파일입니다.</target>
        </trans-unit>
        <trans-unit id="f4fad47e3b7e72ffe6f641a7a34317759a3aecb3" translate="yes" xml:space="preserve">
          <source>Here are the code files discussed on this page (all in the &lt;code&gt;src/app/&lt;/code&gt; folder).</source>
          <target state="translated">이 페이지에서 설명한 코드 파일은 모두 &lt;code&gt;src/app/&lt;/code&gt; 폴더에 있습니다.</target>
        </trans-unit>
        <trans-unit id="74657a80cc45b0684fb1fecc8e212b1ed029cf06" translate="yes" xml:space="preserve">
          <source>Here are the code files discussed on this page and your app should look like this live example.</source>
          <target state="translated">이 페이지에서 설명한 코드 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="66c3e84d041afa18e7991e820a67cb0cf06a9f66" translate="yes" xml:space="preserve">
          <source>Here are the code files discussed on this page, including the &lt;code&gt;HeroesComponent&lt;/code&gt; styles.</source>
          <target state="translated">다음은 &lt;code&gt;HeroesComponent&lt;/code&gt; 스타일을 포함하여이 페이지에서 설명 된 코드 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="6d57ee3abb38cd8a9899ae29d2550ce3d653bb31" translate="yes" xml:space="preserve">
          <source>Here are the code files discussed on this page.</source>
          <target state="translated">이 페이지에서 설명한 코드 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="203d61b3820a79aebb69d382a71e07a169924fb4" translate="yes" xml:space="preserve">
          <source>Here are the files discussed in this milestone.</source>
          <target state="translated">이 이정표에서 논의 된 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a83f2137923a903754b347a20addb67d308de8a4" translate="yes" xml:space="preserve">
          <source>Here are the files in this milestone.</source>
          <target state="translated">이 마일스톤의 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86abfa66f0b60872f95de83204f6eda0cb85e98b" translate="yes" xml:space="preserve">
          <source>Here are the harness and directive in action.</source>
          <target state="translated">작동하는 하네스와 지시문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="adb765c3e2e6d081287a43313fe06b6366a0d292" translate="yes" xml:space="preserve">
          <source>Here are the key &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; terms and their meanings:</source>
          <target state="translated">주요 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 용어 및 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="39f688160764967f49497f345da36e4e3e168300" translate="yes" xml:space="preserve">
          <source>Here are the most important properties for testers, in order of likely utility.</source>
          <target state="translated">다음은 유용성이 높은 순서대로 테스터에게 가장 중요한 속성입니다.</target>
        </trans-unit>
        <trans-unit id="df6a324455059eb2e9437c79b60728c721d55c96" translate="yes" xml:space="preserve">
          <source>Here are the most important static methods, in order of likely utility.</source>
          <target state="translated">다음은 유용성이 높은 순서대로 가장 중요한 정적 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="b0fcf40781dd81faf1b7b2c864bfff4e045dab29" translate="yes" xml:space="preserve">
          <source>Here are the most useful &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; members for testers, in approximate order of utility:</source>
          <target state="translated">테스터를위한 가장 유용한 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 멤버는 대략적인 유틸리티 순서입니다.</target>
        </trans-unit>
        <trans-unit id="32ce460bbc4e3a59815d17ba202313950f72d9f6" translate="yes" xml:space="preserve">
          <source>Here are the most useful methods for testers.</source>
          <target state="translated">테스터에게 가장 유용한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a60e979959576c6f47a130ae26f2fc0cb5317a3" translate="yes" xml:space="preserve">
          <source>Here are the pertinent excerpts from that &lt;code&gt;ItemDetailComponent&lt;/code&gt;:</source>
          <target state="translated">여기에 그에서 관련 발췌 &lt;code&gt;ItemDetailComponent&lt;/code&gt; 는 :</target>
        </trans-unit>
        <trans-unit id="1a520668d060926a9146d4f12a9958d113becba8" translate="yes" xml:space="preserve">
          <source>Here are the relevant files for this version of the sample application.</source>
          <target state="translated">다음은이 버전의 샘플 응용 프로그램과 관련된 파일입니다.</target>
        </trans-unit>
        <trans-unit id="971ae2e0b756cc6f10ae1a53bdb804772e791d81" translate="yes" xml:space="preserve">
          <source>Here are the special characters used in number patterns:</source>
          <target state="translated">숫자 패턴에 사용되는 특수 문자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9dc7abb813d891b43406656a067ebe5efbb41d40" translate="yes" xml:space="preserve">
          <source>Here are the steps performed in the model to view test.</source>
          <target state="translated">테스트를보기 위해 모델에서 수행되는 단계는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f907cd5c3b0f7e717c2f855029aafe9b0514260f" translate="yes" xml:space="preserve">
          <source>Here are the steps performed in the view to model test.</source>
          <target state="translated">다음은 모델 테스트보기에서 수행되는 단계입니다.</target>
        </trans-unit>
        <trans-unit id="8d85ddc8011bbc63fdd9aec9179cf474504e39e7" translate="yes" xml:space="preserve">
          <source>Here are the two files in their entirety for reference:</source>
          <target state="translated">다음은 참조 용으로 두 파일을 완전히 나타낸 것입니다.</target>
        </trans-unit>
        <trans-unit id="f835472a7ce81800f581a799c5de83f42771a680" translate="yes" xml:space="preserve">
          <source>Here are the updated modules &lt;em&gt;before enabling preload&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;사전로드를 활성화하기 전에&lt;/em&gt; 업데이트 된 모듈은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="63dad6d461822e6aad5b70847aaca52f44875f2f" translate="yes" xml:space="preserve">
          <source>Here are three tests that illustrate how automatic change detection works.</source>
          <target state="translated">다음은 자동 변경 감지 작동 방식을 보여주는 세 가지 테스트입니다.</target>
        </trans-unit>
        <trans-unit id="37f9819724bc0daa70265500abced7a21ff78a8d" translate="yes" xml:space="preserve">
          <source>Here are two more versions of the previous test, written with &lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt;. The first one subscribes to the &lt;code&gt;Observable&lt;/code&gt; exposed to the template by the component's &lt;code&gt;quote&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt; 작성된 이전 테스트의 두 가지 버전이 더 있습니다 . 첫 번째 는 컴포넌트의 &lt;code&gt;quote&lt;/code&gt; 속성에 의해 템플릿에 노출 된 &lt;code&gt;Observable&lt;/code&gt; 을 구독 합니다.</target>
        </trans-unit>
        <trans-unit id="673f54dff9940b5161bcefea2dafa7cb5b8df245" translate="yes" xml:space="preserve">
          <source>Here are two more versions of the previous test, written with &lt;code&gt;done()&lt;/code&gt;. The first one subscribes to the &lt;code&gt;Observable&lt;/code&gt; exposed to the template by the component's &lt;code&gt;quote&lt;/code&gt; property.</source>
          <target state="translated">다음은 &lt;code&gt;done()&lt;/code&gt; 작성된 이전 테스트의 두 가지 버전입니다 . 첫 번째 는 컴포넌트의 &lt;code&gt;quote&lt;/code&gt; 속성에 의해 템플릿에 노출 된 &lt;code&gt;Observable&lt;/code&gt; 을 구독 합니다.</target>
        </trans-unit>
        <trans-unit id="d47821c3b31c5392bebc3b1326890d7c2f695edc" translate="yes" xml:space="preserve">
          <source>Here are two sample components and the &lt;code&gt;AdComponent&lt;/code&gt; interface for reference:</source>
          <target state="translated">다음은 참조를위한 두 가지 샘플 구성 요소와 &lt;code&gt;AdComponent&lt;/code&gt; 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="e0b787c218a0fd5b377e6264e620f571eb531aac" translate="yes" xml:space="preserve">
          <source>Here is &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; displaying the hero's name if &lt;code&gt;hero&lt;/code&gt; exists.</source>
          <target state="translated">다음은 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 경우 영웅의 이름을 표시하는 &lt;code&gt;hero&lt;/code&gt; 존재한다.</target>
        </trans-unit>
        <trans-unit id="a3fe3b425db56855651f417606038f5fe5ce6604" translate="yes" xml:space="preserve">
          <source>Here is a compliant folder and file structure:</source>
          <target state="translated">다음은 호환되는 폴더 및 파일 구조입니다.</target>
        </trans-unit>
        <trans-unit id="62e6d461e292af41877b8fc098a18bf5f12699ce" translate="yes" xml:space="preserve">
          <source>Here is a do-nothing &lt;em&gt;noop&lt;/em&gt; interceptor that simply passes the request through without touching it:</source>
          <target state="translated">다음은 요청을 건드리지 않고 간단히 통과시키는 &lt;em&gt;멍청한&lt;/em&gt; 인터셉터입니다.</target>
        </trans-unit>
        <trans-unit id="b553906d1b80b4ed0946ba38a8092bc3576b764e" translate="yes" xml:space="preserve">
          <source>Here is a simple demonstration of how the &lt;code&gt;&lt;a href=&quot;contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; decorator can be used.</source>
          <target state="translated">다음은 &lt;code&gt;&lt;a href=&quot;contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; 데코레이터 사용 방법에 대한 간단한 데모입니다 .</target>
        </trans-unit>
        <trans-unit id="8bd50bf2cb0cef064313fd64747ca38c8871ec23" translate="yes" xml:space="preserve">
          <source>Here is a slightly more realistic example that shows how &lt;code&gt;&lt;a href=&quot;contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; decorators can be used to implement a tab pane component.</source>
          <target state="translated">다음은 &lt;code&gt;&lt;a href=&quot;contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; 데코레이터를 사용하여 탭 창 구성 요소를 구현하는 방법을 보여주는 약간 더 현실적인 예입니다 .</target>
        </trans-unit>
        <trans-unit id="2d30b7cdd1bf5a3b2b24f4673563c67ae4a7d16a" translate="yes" xml:space="preserve">
          <source>Here is an example of a &lt;code&gt;&lt;a href=&quot;animationevent#fromState&quot;&gt;fromState&lt;/a&gt;&lt;/code&gt; specified as a state-change function that invokes an animation when true:</source>
          <target state="translated">다음은 true 일 때 애니메이션을 호출하는 상태 변경 함수로 지정된 &lt;code&gt;&lt;a href=&quot;animationevent#fromState&quot;&gt;fromState&lt;/a&gt;&lt;/code&gt; 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="b74f6ac9418ccda6649c8b91ae4958248200086f" translate="yes" xml:space="preserve">
          <source>Here is an example of a &lt;code&gt;fromState&lt;/code&gt; specified as a state-change function that invokes an animation when true:</source>
          <target state="translated">다음은 true 일 때 애니메이션을 호출하는 상태 변경 함수로 지정된 &lt;code&gt;fromState&lt;/code&gt; 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="3a7a73e5c81430a86007b3a7779f14a9661e2342" translate="yes" xml:space="preserve">
          <source>Here is an example of the case where the component router configuration includes a non-default &lt;a href=&quot;router#location-strategy&quot;&gt;location strategy&lt;/a&gt; by listing its provider in the &lt;code&gt;providers&lt;/code&gt; list of the &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">다음은 컴포넌트 라우터 구성 에 &lt;code&gt;AppModule&lt;/code&gt; 의 &lt;code&gt;providers&lt;/code&gt; 목록에 제공자를 나열하여 기본이 아닌 &lt;a href=&quot;router#location-strategy&quot;&gt;위치 전략&lt;/a&gt; 을 포함하는 경우의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="88d4ddf3e1fd42c49a911a9c5f50961b303bafab" translate="yes" xml:space="preserve">
          <source>Here is an illustration of the &lt;code&gt;trackBy&lt;/code&gt; effect. &quot;Reset items&quot; creates new items with the same &lt;code&gt;item.id&lt;/code&gt;s. &quot;Change ids&quot; creates new items with new &lt;code&gt;item.id&lt;/code&gt;s.</source>
          <target state="translated">다음은 &lt;code&gt;trackBy&lt;/code&gt; 효과 의 그림입니다 . &quot;항목 재설정&quot;은 &lt;code&gt;item.id&lt;/code&gt; 가 동일한 새 항목을 만듭니다 . &quot;ID 변경&quot;은 새로운 &lt;code&gt;item.id&lt;/code&gt; 로 새로운 아이템을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="69d071f83219cc67343782da4cd85435abb0fdcf" translate="yes" xml:space="preserve">
          <source>Here is such a &lt;code&gt;Page&lt;/code&gt; class for the &lt;code&gt;hero-detail.component.spec.ts&lt;/code&gt;</source>
          <target state="translated">다음은 &lt;code&gt;hero-detail.component.spec.ts&lt;/code&gt; 에 대한 &lt;code&gt;Page&lt;/code&gt; 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d980344b844e420fad53b6c16d75017541abc570" translate="yes" xml:space="preserve">
          <source>Here is the &lt;code&gt;DashboardHeroComponent&lt;/code&gt; from the &lt;em&gt;Tour of Heroes&lt;/em&gt; tutorial.</source>
          <target state="translated">다음은 &lt;em&gt;Tour of Heroes&lt;/em&gt; 튜토리얼 의 &lt;code&gt;DashboardHeroComponent&lt;/code&gt; 입니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e86488b1cb32b49feef4f4470dedca4a5fcf1967" translate="yes" xml:space="preserve">
          <source>Here is the &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; that makes use of &lt;code&gt;HeroTaxReturnService&lt;/code&gt;.</source>
          <target state="translated">다음은 &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; 를 사용하는 &lt;code&gt;HeroTaxReturnService&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4ccb3bee45c3f5e8a10c7949fcd716f5fbd128cd" translate="yes" xml:space="preserve">
          <source>Here is the animation trigger code:</source>
          <target state="translated">다음은 애니메이션 트리거 코드입니다.</target>
        </trans-unit>
        <trans-unit id="ae4efcc82a067c04926b13069d143263eacc0318" translate="yes" xml:space="preserve">
          <source>Here is the component code:</source>
          <target state="translated">구성 요소 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1f67d21ef057f2279432085d35aecdb714a0fb88" translate="yes" xml:space="preserve">
          <source>Here is the component definition:</source>
          <target state="translated">컴포넌트 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="29f639c1a4ee278d0bd27ad171d2b15e9b89431d" translate="yes" xml:space="preserve">
          <source>Here is the example application and its unit tests that use &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">다음은 &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; 을 사용하는 예제 애플리케이션 및 해당 단위 테스트입니다 .</target>
        </trans-unit>
        <trans-unit id="7289c34d08b5da9d83fd489bac339bb78646999e" translate="yes" xml:space="preserve">
          <source>Here is the expanded version of the short-form example.</source>
          <target state="translated">다음은 짧은 형식의 확장 버전입니다.</target>
        </trans-unit>
        <trans-unit id="0070a1aed2d25a8700de4fcbefa0dce4ca73945f" translate="yes" xml:space="preserve">
          <source>Here is the final version of &lt;code&gt;getHeroes()&lt;/code&gt; with the &lt;code&gt;tap()&lt;/code&gt; that logs the operation.</source>
          <target state="translated">다음은 작업을 기록하는 &lt;code&gt;tap()&lt;/code&gt; 이 있는 &lt;code&gt;getHeroes()&lt;/code&gt; 의 최종 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="507213e3087048a335abbd087b122b29d7274391" translate="yes" xml:space="preserve">
          <source>Here is the markup for the first of these callouts.</source>
          <target state="translated">다음은 이러한 문구 중 첫 번째에 대한 마크 업입니다.</target>
        </trans-unit>
        <trans-unit id="9b90d7defb29486440935655cf61803f05d03963" translate="yes" xml:space="preserve">
          <source>Here is the markup for these alerts.</source>
          <target state="translated">다음은 이러한 경고에 대한 마크 업입니다.</target>
        </trans-unit>
        <trans-unit id="7ae5b951b35f869a8a6b02613f7eda4975f89343" translate="yes" xml:space="preserve">
          <source>Here is the markup for this file tree.</source>
          <target state="translated">이 파일 트리의 마크 업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a2fe150369bad5a348a282aa3a05ad8386dd51fe" translate="yes" xml:space="preserve">
          <source>Here is the markup for this table.</source>
          <target state="translated">다음은이 테이블의 마크 업입니다.</target>
        </trans-unit>
        <trans-unit id="ffbf137688538ebb74fc8824377d23da85c0e7ed" translate="yes" xml:space="preserve">
          <source>Here is the parent, &lt;code&gt;CountdownViewChildParentComponent&lt;/code&gt;:</source>
          <target state="translated">다음은 부모 &lt;code&gt;CountdownViewChildParentComponent&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="305818b1af808bc21c8b481f7c4cdc0dcded567c" translate="yes" xml:space="preserve">
          <source>Here is the revised &lt;code&gt;HeroService&lt;/code&gt; that injects &lt;code&gt;Logger&lt;/code&gt;, side by side with the previous service for comparison.</source>
          <target state="translated">다음은 비교를 위해 이전 서비스와 나란히 &lt;code&gt;Logger&lt;/code&gt; 를 주입 하는 수정 된 &lt;code&gt;HeroService&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1b66536e9ef97cef4faab2e6486b3e3341657864" translate="yes" xml:space="preserve">
          <source>Here is the source from the &lt;code&gt;src/app/&lt;/code&gt; folder.</source>
          <target state="translated">다음은 &lt;code&gt;src/app/&lt;/code&gt; 폴더 의 소스입니다 .</target>
        </trans-unit>
        <trans-unit id="defdb414b6ad2449a9c07d869f058f5e58f4b417" translate="yes" xml:space="preserve">
          <source>Here it binds the &lt;code&gt;hero.name&lt;/code&gt; property to the HTML textbox so that data can flow &lt;em&gt;in both directions:&lt;/em&gt; from the &lt;code&gt;hero.name&lt;/code&gt; property to the textbox, and from the textbox back to the &lt;code&gt;hero.name&lt;/code&gt;.</source>
          <target state="translated">여기가 결합 &lt;code&gt;hero.name&lt;/code&gt; 의 데이터가 흐를 수 있도록 HTML 텍스트 상자에 속성을 &lt;em&gt;: 양 방향&lt;/em&gt; 으로부터 &lt;code&gt;hero.name&lt;/code&gt; 의 텍스트 상자에 속성과에 텍스트 상자의 뒷면에서 &lt;code&gt;hero.name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08272db39313455a9af93a6df856a1e60bf114b3" translate="yes" xml:space="preserve">
          <source>Here they are together, after translation:</source>
          <target state="translated">번역 후 여기에 함께 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdcad7df3e4cfd3543f37881241493108acfc809" translate="yes" xml:space="preserve">
          <source>Here we decided that &lt;code&gt;isAlterEgoTaken()&lt;/code&gt; error is treated as a successful validation, because failure to make a validation request does not necessarily mean that the alter ego is invalid. You could handle the error differently and return the &lt;code&gt;ValidationError&lt;/code&gt; object instead.</source>
          <target state="translated">여기서 우리는 &lt;code&gt;isAlterEgoTaken()&lt;/code&gt; 오류가 성공적인 유효성 검사로 처리 된다고 결정했습니다 . 유효성 검사 요청에 실패한다고해서 alter ego가 유효하지 않은 것은 아닙니다. 오류를 다르게 처리하고 대신 &lt;code&gt;ValidationError&lt;/code&gt; 객체를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79f90147ab759834dc4640b93285fd5ae43cb71a" translate="yes" xml:space="preserve">
          <source>Here we see the parent and child working together.</source>
          <target state="translated">여기서 우리는 부모와 자식이 함께 일하는 것을 봅니다.</target>
        </trans-unit>
        <trans-unit id="8771b8deaa3683dcf7a75cf6959eaf7df50ecaa9" translate="yes" xml:space="preserve">
          <source>Here you can see the use of a &lt;code&gt;click()&lt;/code&gt; event binding and the property binding syntax (&lt;code&gt;[attr.fill]=&quot;fillColor&quot;&lt;/code&gt;).</source>
          <target state="translated">여기서 &lt;code&gt;click()&lt;/code&gt; 이벤트 바인딩과 속성 바인딩 구문 ( &lt;code&gt;[attr.fill]=&quot;fillColor&quot;&lt;/code&gt; )을 사용하는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="511a4f717c3a359e7f572279ad68d540c4bb458e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a test that runs the command builder. The test uses the builder to run the &lt;code&gt;ls&lt;/code&gt; command, then validates that it ran successfully and listed the proper files.</source>
          <target state="translated">다음은 명령 빌더를 실행하는 테스트의 예입니다. 테스트는 빌더를 사용하여 &lt;code&gt;ls&lt;/code&gt; 명령 을 실행 한 후 성공적으로 실행되었으며 올바른 파일을 나열했는지 검증합니다.</target>
        </trans-unit>
        <trans-unit id="c7af86c25dbdcade0b3ecf3d8ae93ad1b2dba979" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a test that runs the command builder. The test uses the builder to run the &lt;code&gt;node --print 'foo'&lt;/code&gt; command, then validates that the &lt;code&gt;logger&lt;/code&gt; contains an entry for &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">다음은 명령 작성기를 실행하는 테스트의 예입니다. 이 테스트는 빌더를 사용하여 &lt;code&gt;node --print 'foo'&lt;/code&gt; 명령 을 실행 한 다음 &lt;code&gt;logger&lt;/code&gt; 에 &lt;code&gt;foo&lt;/code&gt; 항목이 포함되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d2ea21d3443d959148c1cadad9c432d2da8241bc" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the code for the final version of the application:</source>
          <target state="translated">애플리케이션의 최종 버전에 대한 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="29d75374abffd4bb69efcb9d1c150b3130b488ef" translate="yes" xml:space="preserve">
          <source>Here's &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; that takes a &lt;code&gt;UserServiceConfig&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;UserServiceConfig&lt;/code&gt; 객체 를 취하는 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8ce266b9f7140d8aadcec223f123a37e1acef56f" translate="yes" xml:space="preserve">
          <source>Here's &lt;code&gt;HeroBiosAndContactsComponent&lt;/code&gt; in action.</source>
          <target state="translated">여기에 &lt;code&gt;HeroBiosAndContactsComponent&lt;/code&gt; 가 작동합니다.</target>
        </trans-unit>
        <trans-unit id="210602b8fc8ab2d5642913c9982cbff1a4f4b065" translate="yes" xml:space="preserve">
          <source>Here's &lt;code&gt;HeroContactComponent&lt;/code&gt;, which demonstrates the qualifying decorators.</source>
          <target state="translated">여기 &lt;code&gt;HeroContactComponent&lt;/code&gt; 자격 검증이 장식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d9307f3ff504a7d92b897a830111a7e46368cf89" translate="yes" xml:space="preserve">
          <source>Here's &lt;code&gt;forRoot()&lt;/code&gt; that takes a &lt;code&gt;UserServiceConfig&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;UserServiceConfig&lt;/code&gt; 객체 를 &lt;code&gt;forRoot()&lt;/code&gt; 는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="267c0db0ea651fe8d15656fadfdbd9b520beca00" translate="yes" xml:space="preserve">
          <source>Here's &lt;em&gt;AfterView&lt;/em&gt; in action:</source>
          <target state="translated">&lt;em&gt;AfterView 작동 방법&lt;/em&gt; 은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a1651a820337a1810f83cfeaae7fc899365266c2" translate="yes" xml:space="preserve">
          <source>Here's &lt;em&gt;Alex&lt;/em&gt; and family in action.</source>
          <target state="translated">여기 &lt;em&gt;알렉스&lt;/em&gt; 와 행동의 가족.</target>
        </trans-unit>
        <trans-unit id="abf25e2fea0f9e2ba609a88d3e7f6d6c72dae972" translate="yes" xml:space="preserve">
          <source>Here's &lt;em&gt;Alice&lt;/em&gt;, &lt;em&gt;Barry&lt;/em&gt;, and family in action.</source>
          <target state="translated">여기 &lt;em&gt;앨리스&lt;/em&gt; , &lt;em&gt;배리&lt;/em&gt; , 행동의 가족.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
