<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="685c135d2b1b5879fc8673f1098b179a74014772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;colspan&lt;/code&gt; is an attribute of &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;, while &lt;code&gt;colSpan&lt;/code&gt; with a capital &quot;S&quot; is a property. When using attribute binding, use &lt;code&gt;colspan&lt;/code&gt; with a lowercase &quot;s&quot;. For more information on how to bind to the &lt;code&gt;colSpan&lt;/code&gt; property, see the &lt;a href=&quot;property-binding#colspan&quot;&gt;&lt;code&gt;colspan&lt;/code&gt; and &lt;code&gt;colSpan&lt;/code&gt;&lt;/a&gt; section of &lt;a href=&quot;property-binding&quot;&gt;Property Binding&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;colspan&lt;/code&gt; 의 속성 &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 동안 &lt;code&gt;colSpan&lt;/code&gt; 대문자 &quot;S&quot;로이 특성이다. 속성 바인딩을 사용 하는 경우 소문자 &quot;s&quot;와 함께 &lt;code&gt;colspan&lt;/code&gt; 을 사용하십시오 . &lt;code&gt;colSpan&lt;/code&gt; 속성 에 바인딩하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;property-binding&quot;&gt;Property Binding&lt;/a&gt; 의 &lt;a href=&quot;property-binding#colspan&quot;&gt; &lt;code&gt;colspan&lt;/code&gt; 및 &lt;code&gt;colSpan&lt;/code&gt; &lt;/a&gt; 섹션을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="3876a48e7b7cc4a327f51ade338f5cf525d8aeeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;combineLatest&lt;/code&gt;, &lt;code&gt;concat&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, &lt;code&gt;startWith&lt;/code&gt; , &lt;code&gt;withLatestFrom&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;combineLatest&lt;/code&gt; , &lt;code&gt;concat&lt;/code&gt; , &lt;code&gt;merge&lt;/code&gt; , &lt;code&gt;startWith&lt;/code&gt; , &lt;code&gt;withLatestFrom&lt;/code&gt; , &lt;code&gt;zip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9ff60b681ca9ab0505e05dd8fec8fdce6f8607d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compile&lt;/code&gt;. This will not be supported in Angular.</source>
          <target state="translated">&lt;code&gt;compile&lt;/code&gt; . Angular에서는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1618ecf424fe8e358181f5dae98816bd030f9b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compile&lt;/code&gt;: not supported because the host element is owned by Angular, which does not allow modifying DOM structure during compilation.</source>
          <target state="translated">&lt;code&gt;compile&lt;/code&gt; : 호스트 요소가 Angular 소유이므로 컴파일 중에 DOM 구조를 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f86017fec659d000e684f7795358c7a9b00a4c67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;component: &lt;a href=&quot;../../core/type&quot;&gt;Type&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt;: The type of the Component that will be downgraded</source>
          <target state="translated">&lt;code&gt;component: &lt;a href=&quot;../../core/type&quot;&gt;Type&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt; : 다운 그레이드 될 구성 요소의 유형</target>
        </trans-unit>
        <trans-unit id="ab277cbf235ddc8b4284ed136a019796369b3699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;component&lt;/code&gt;: the component that the router should create when navigating to this route.</source>
          <target state="translated">&lt;code&gt;component&lt;/code&gt; :이 라우트를 탐색 할 때 라우터가 작성해야하는 구성 요소.</target>
        </trans-unit>
        <trans-unit id="31e3ce8cf8f6f6b30d96601e5247c1a2150d5413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confirmation&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt;, or &lt;code&gt;list&lt;/code&gt; (selected automatically in short form)</source>
          <target state="translated">&lt;code&gt;confirmation&lt;/code&gt; , &lt;code&gt;input&lt;/code&gt; 또는 &lt;code&gt;list&lt;/code&gt; (짧은 형식으로 자동 선택)</target>
        </trans-unit>
        <trans-unit id="a3062963b3add2de0b39712839b6fab62615ac4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b83db028c715ae4a4814b23bf4cc4b8503ec1620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consumed&lt;/code&gt; is an array of the consumed URL segments.</source>
          <target state="translated">&lt;code&gt;consumed&lt;/code&gt; 는 소비 된 URL 세그먼트의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="db7c0fb550fb8d15f743a1aba495dbce8db3ade9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;controllerAs&lt;/code&gt;. Components have their own controllers.</source>
          <target state="translated">&lt;code&gt;controller&lt;/code&gt; 및 &lt;code&gt;controllerAs&lt;/code&gt; . 컴포넌트에는 자체 컨트롤러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="df7b24688baf7d02553a427cfefefe353a8209a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt;: supported. (NOTE: injection of &lt;code&gt;$attrs&lt;/code&gt; and &lt;code&gt;$transclude&lt;/code&gt; is not supported.)</source>
          <target state="translated">&lt;code&gt;controller&lt;/code&gt; : 지원됩니다. (참고 : &lt;code&gt;$attrs&lt;/code&gt; 및 &lt;code&gt;$transclude&lt;/code&gt; 은 지원되지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="37ff24a833e78462c99f588624c53b6465a52865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controllerAs&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;controllerAs&lt;/code&gt; : 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="459979b788fd817e3925809e8bb2c70ad0bffbde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count: number&lt;/code&gt;: The length of the iterable.</source>
          <target state="translated">&lt;code&gt;count: number&lt;/code&gt; : 이터 러블의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="e11d622508fe8ff343f7226f8e56cb0ee063839a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currencyCode&lt;/code&gt; is the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; currency code, such as &lt;code&gt;USD&lt;/code&gt; for the US dollar and &lt;code&gt;EUR&lt;/code&gt; for the euro.</source>
          <target state="translated">&lt;code&gt;currencyCode&lt;/code&gt; 는 미국 달러의 &lt;code&gt;USD&lt;/code&gt; 및 &lt;code&gt;EUR&lt;/code&gt; 와 같은 &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; 통화 코드 입니다.</target>
        </trans-unit>
        <trans-unit id="b7f5347648a477bbdf8dde86b843a46b4f7dca04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d&lt;/code&gt;: days</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; : 일</target>
        </trans-unit>
        <trans-unit id="3a08d11daacd94f0fad43824f9baf7cf9e68a7da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounceTime(300)&lt;/code&gt; waits until the flow of new string events pauses for 300 milliseconds before passing along the latest string. You'll never make requests more frequently than 300ms.</source>
          <target state="translated">&lt;code&gt;debounceTime(300)&lt;/code&gt; 은 새 문자열 이벤트의 흐름이 300 밀리 초 동안 일시 중지 될 때까지 기다렸다가 최신 문자열을 통과합니다. 300ms 이상 더 자주 요청하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2b82b5864e4afb8f00827404125654c1208ce75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounceTime(500)&lt;/code&gt; - wait for the user to stop typing (1/2 second in this case).</source>
          <target state="translated">&lt;code&gt;debounceTime(500)&lt;/code&gt; -사용자가 입력을 중지 할 때까지 기다립니다 (이 경우 1/2 초).</target>
        </trans-unit>
        <trans-unit id="331463f1419522caeda85980e67922f07e289920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounceTime(500)&lt;/code&gt;&amp;amp;emdash;Wait for the user to stop typing (1/2 second in this case).</source>
          <target state="translated">&lt;code&gt;debounceTime(500)&lt;/code&gt; &amp;amp; emdash; 사용자가 입력을 중지 할 때까지 기다립니다 (이 경우 1/2 초).</target>
        </trans-unit>
        <trans-unit id="207a9a519e849d5c8777c3951663c454673fb675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounceTime&lt;/code&gt;, &lt;code&gt;distinctUntilChanged&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;take&lt;/code&gt;, &lt;code&gt;takeUntil&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;debounceTime&lt;/code&gt; , &lt;code&gt;distinctUntilChanged&lt;/code&gt; , &lt;code&gt;filter&lt;/code&gt; , &lt;code&gt;take&lt;/code&gt; , &lt;code&gt;takeUntil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6f4ac029fdf8f6f0b833bb1cc14123afb54683d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declarations&lt;/code&gt;: The &lt;a href=&quot;architecture-components&quot;&gt;components&lt;/a&gt;, &lt;em&gt;directives&lt;/em&gt;, and &lt;em&gt;pipes&lt;/em&gt; that belong to this NgModule.</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; : &lt;a href=&quot;architecture-components&quot;&gt;구성 요소&lt;/a&gt; , &lt;em&gt;지시문&lt;/em&gt; 및 &lt;em&gt;파이프&lt;/em&gt; 이 NgModule에 속하는 .</target>
        </trans-unit>
        <trans-unit id="8a14e42ebf228c60172b09ad48cff8935bf56a80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declarations&lt;/code&gt;: The components, directives, and pipes that belong to the NgModule. A new app project's root NgModule has only one component, called &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; : NgModule에 속하는 구성 요소, 지시문 및 파이프입니다. 새 앱 프로젝트의 루트 NgModule에는 &lt;code&gt;AppComponent&lt;/code&gt; 라는 구성 요소가 하나만 있습니다.</target>
        </trans-unit>
        <trans-unit id="e332f5822c816160a427f1d620d4de4aef875c05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultProject&lt;/code&gt;: Default project name to use in commands, where not provided as an argument. When you use &lt;code&gt;ng new&lt;/code&gt; to create a new app in a new workspace, that app is the default project for the workspace until you change it here.</source>
          <target state="translated">&lt;code&gt;defaultProject&lt;/code&gt; : 명령으로 사용할 기본 프로젝트 이름으로, 인수로 제공되지 않습니다. &lt;code&gt;ng new&lt;/code&gt; 를 사용할 때 새 작업 영역에서 새로운 응용 프로그램을 만들려면이 응용 프로그램은 여기를 변경할 때까지 작업 영역의 기본 프로젝트입니다.</target>
        </trans-unit>
        <trans-unit id="2d9f7ce5ed92a122a23f3c6de9a833e7b6403ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleteHero()&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#delete&quot;&gt;HttpClient.delete()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;deleteHero()&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#delete&quot;&gt;HttpClient.delete()&lt;/a&gt;&lt;/code&gt; 호출합니다. .</target>
        </trans-unit>
        <trans-unit id="2c6dd31849eeeb66c721938477e0d213158c5639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;digitInfo&lt;/code&gt; See &lt;a href=&quot;decimalpipe&quot;&gt;&lt;code&gt;DecimalPipe&lt;/code&gt;&lt;/a&gt; for detailed description.</source>
          <target state="translated">&lt;code&gt;digitInfo&lt;/code&gt; 참조 &lt;a href=&quot;decimalpipe&quot;&gt; &lt;code&gt;DecimalPipe&lt;/code&gt; &lt;/a&gt; 자세한 설명 를 .</target>
        </trans-unit>
        <trans-unit id="2b99f6d728535d03de7d02341cdf2b22cda27b10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;digitInfo&lt;/code&gt; is a &lt;code&gt;string&lt;/code&gt; which has a following format:  &lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;digitInfo&lt;/code&gt; 는 &lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt; 형식 의 &lt;code&gt;string&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="faa4191a4cfc2e9691d734c757ba280b923bcd1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directive&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;directive&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59eb8c3789887162b3beaf645075acdbc57c14e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directiveProperty&lt;/code&gt; specifies the component property that emits events.</source>
          <target state="translated">&lt;code&gt;directiveProperty&lt;/code&gt; 는 이벤트를 생성하는 구성 요소 속성을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1d8cbac0f3423195d59ec2f253768c64dfe1e5c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directiveProperty&lt;/code&gt; specifies the component property where the value is written.</source>
          <target state="translated">&lt;code&gt;directiveProperty&lt;/code&gt; 는 값이 기록되는 구성 요소 속성을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="984ed0f81cc1f6a63aa1d5f70b5218d9e7951ad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distinctUntilChanged()&lt;/code&gt; - wait until the search text changes.</source>
          <target state="translated">&lt;code&gt;distinctUntilChanged()&lt;/code&gt; -검색 텍스트가 변경 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="26c752e400a0e78f2f1acc448f36ed8bc7b8d9c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distinctUntilChanged()&lt;/code&gt; ensures that a request is sent only if the filter text changed.</source>
          <target state="translated">&lt;code&gt;distinctUntilChanged()&lt;/code&gt; 는 필터 텍스트가 변경된 경우에만 요청이 전송되도록합니다.</target>
        </trans-unit>
        <trans-unit id="460a61828444372c84cefc75b782ef6675534426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distinctUntilChanged()&lt;/code&gt;&amp;amp;emdash;Wait until the search text changes.</source>
          <target state="translated">&lt;code&gt;distinctUntilChanged()&lt;/code&gt; &amp;amp; emdash; 검색 텍스트가 변경 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="f40a5da3d123b0327593af6ab50d25a70682b622" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document&lt;/code&gt; is the full document HTML of the page to render, as a string. &lt;code&gt;url&lt;/code&gt; is the URL for the current render request. &lt;code&gt;extraProviders&lt;/code&gt; are the platform level providers for the current render request.</source>
          <target state="translated">&lt;code&gt;document&lt;/code&gt; 는 렌더링 할 페이지의 전체 문서 HTML (문자열)입니다. &lt;code&gt;url&lt;/code&gt; 은 현재 렌더링 요청의 URL입니다. &lt;code&gt;extraProviders&lt;/code&gt; 는 현재 렌더링 요청에 대한 플랫폼 수준 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="7260386ea7423807783a8ceb9c1b8864212f5121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;downgradedModule?: string&lt;/code&gt;: The name of the downgraded module (if any) that the component &quot;belongs to&quot;, as returned by a call to &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;. It is the module, whose corresponding Angular module will be bootstrapped, when the component needs to be instantiated.  (This option is only necessary when using &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; to downgrade more than one Angular module.)</source>
          <target state="translated">&lt;code&gt;downgradedModule?: string&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 호출로 반환되는 구성 요소가 속하는 다운 그레이드 된 모듈의 이름입니다 (있는 경우 ) . 구성 요소를 인스턴스화해야 할 때 해당 Angular 모듈이 부트 스트랩되는 모듈입니다. 이 옵션은 &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 을 사용하여 둘 이상의 Angular 모듈을 다운 그레이드 할 때만 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="32074cff87b01d7acd641e085213437d41ef5e8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element-name&lt;/code&gt;: Select by element name.</source>
          <target state="translated">&lt;code&gt;element-name&lt;/code&gt; : 요소 이름으로 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="caf767b54fd713a4efc3c6cbddb260b08e2fead0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is disabled. When false, no events are emitted.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; 및 &lt;code&gt;valueChanges&lt;/code&gt; 옵저버 블은 모두 컨트롤이 비활성화 된 경우 최신 상태 및 값으로 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ce3da5c91326394a315c7a55006641bc882e1e8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is enabled. When false, no events are emitted.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; 및 &lt;code&gt;valueChanges&lt;/code&gt; 컨트롤이 활성화 될 때 최신 상태 및 값으로 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="478085925be393aba7765ee821196dd0248d70e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is reset. When false, no events are emitted.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; 및 &lt;code&gt;valueChanges&lt;/code&gt; 옵저버 블은 모두 컨트롤이 재설정 될 때 최신 상태 및 값으로 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d04a8b4e7f6d5dcc3650b23e78e3836e489cf392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is reset. When false, no events are emitted. The configuration options are passed to the &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; 및 &lt;code&gt;valueChanges&lt;/code&gt; 옵저버 블은 모두 컨트롤이 재설정 될 때 최신 상태 및 값으로 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다. 구성 옵션은 &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; 메소드 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="d08fe7c7bbf7f09fd6cd4dae09278b1f68c7e0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is updated. When false, no events are emitted.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; 및 &lt;code&gt;valueChanges&lt;/code&gt; 옵저버 블은 모두 컨트롤이 업데이트 될 때 최신 상태 및 값으로 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e5c0bd8624035236ccd8b910c27683ff60f47f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control value is updated. When false, no events are emitted.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; 및 &lt;code&gt;valueChanges&lt;/code&gt; 옵저버 블 은 제어 값이 업데이트 될 때 최신 상태 및 값으로 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f368666507e63f99d0ef1410cc88d00815c80ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control value is updated. When false, no events are emitted. The configuration options are passed to the &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; 및 &lt;code&gt;valueChanges&lt;/code&gt; 옵저버 블 은 제어 값이 업데이트 될 때 최신 상태 및 값으로 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다. 구성 옵션은 &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; 메소드 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec9b27a4eacf2113f790f453b05c2476a3dcb8b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), the &lt;code&gt;statusChanges&lt;/code&gt; observable emits an event with the latest status the control is marked pending. When false, no events are emitted.</source>
          <target state="translated">&lt;code&gt;emitEvent&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) &lt;code&gt;statusChanges&lt;/code&gt; Observable은 컨트롤이 보류 중으로 표시된 최신 상태의 이벤트를 생성합니다. false이면 이벤트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8fca3ee2de8f23f1e4bb00133fe9919e8ce230fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitModelToViewChange&lt;/code&gt;: When true or not supplied (the default), each change triggers an &lt;code&gt;onChange&lt;/code&gt; event to update the view.</source>
          <target state="translated">&lt;code&gt;emitModelToViewChange&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) 각 변경 사항은 &lt;code&gt;onChange&lt;/code&gt; 이벤트를 트리거 하여보기를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="3e8eecee148663da6cc44de6aad85f6292fa3db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitViewToModelChange&lt;/code&gt;: When true or not supplied (the default), each change triggers an &lt;code&gt;ngModelChange&lt;/code&gt; event to update the model.</source>
          <target state="translated">&lt;code&gt;emitViewToModelChange&lt;/code&gt; : true 또는 제공되지 않은 경우 (기본값) 각 변경 사항은 &lt;code&gt;ngModelChange&lt;/code&gt; 이벤트를 트리거 하여 모델을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="7cc759f378628f3bc3582b5d8f578e3426f58134" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entryComponents&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/analyze_for_entry_components&quot;&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/a&gt;&lt;/code&gt; no longer required</source>
          <target state="translated">&lt;code&gt;entryComponents&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/core/analyze_for_entry_components&quot;&gt;ANALYZE_FOR_ENTRY_COMPONENTS&lt;/a&gt;&lt;/code&gt; 가 더 이상 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e628c9a92651ad74a7d614dbecf5d14e1db47d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entryComponents&lt;/code&gt; and the compiler</source>
          <target state="translated">&lt;code&gt;entryComponents&lt;/code&gt; 와 컴파일러</target>
        </trans-unit>
        <trans-unit id="48cd8a1eb0de7b3c8ccb7d3f4b8f0aab446953b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9db5e68683cb53d6552c9129b14058ab493fa3ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt;: Throw an error. If you are using AOT compilation, the build will fail. If you are using JIT compilation, the app will fail to load.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; : 오류를 발생시킵니다. AOT 컴파일을 사용하는 경우 빌드가 실패합니다. JIT 컴파일을 사용하는 경우 앱이로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bdbbd4e6fcd0be58a7e261e04c0403294f9fc914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esm5&lt;/code&gt; and &lt;code&gt;fesm5&lt;/code&gt; code formats in @angular/* npm packages</source>
          <target state="translated">&lt;code&gt;esm5&lt;/code&gt; @ angular / * npm 패키지의 esm5 및 &lt;code&gt;fesm5&lt;/code&gt; 코드 형식</target>
        </trans-unit>
        <trans-unit id="039ee50b2530b336572b91409e4f3adda36c1571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esm5&lt;/code&gt; and &lt;code&gt;fesm5&lt;/code&gt; entry-points in @angular/* npm packages</source>
          <target state="translated">&lt;code&gt;esm5&lt;/code&gt; @ angular / * npm 패키지의 esm5 및 &lt;code&gt;fesm5&lt;/code&gt; 진입 점</target>
        </trans-unit>
        <trans-unit id="50b5275afefd3bd1ad88848c7d6bf36db7a6fa38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;even: boolean&lt;/code&gt;: True when the item has an even index in the iterable.</source>
          <target state="translated">&lt;code&gt;even: boolean&lt;/code&gt; : 항목에 iterable에 짝수 인덱스가있는 경우 True입니다.</target>
        </trans-unit>
        <trans-unit id="4cb582ef09f458005136497a0490f175a19fd1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt;: The subset of declarations that should be visible and usable in the &lt;em&gt;component templates&lt;/em&gt; of other NgModules.</source>
          <target state="translated">&lt;code&gt;exports&lt;/code&gt; : 다른 NgModules 의 &lt;em&gt;컴포넌트 템플릿&lt;/em&gt; 에서 볼 수 있고 사용할 수있는 선언의 하위 집합 .</target>
        </trans-unit>
        <trans-unit id="3e606f128cd0ccef6573a8e883e9a85103ef40af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt; is a date object or a number (milliseconds since UTC epoch) or an ISO string (&lt;a href=&quot;https://www.w3.org/TR/NOTE-datetime&quot;&gt;https://www.w3.org/TR/NOTE-datetime&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; 은 날짜 객체 또는 숫자 (UTC 에포크 이후 밀리 초) 또는 ISO 문자열 ( &lt;a href=&quot;https://www.w3.org/TR/NOTE-datetime&quot;&gt;https://www.w3.org/TR/NOTE-datetime&lt;/a&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="a92a6c5f09ee1860119ba55ae88cee0539ec92f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extraProviders&lt;/code&gt;: This is optional and lets you specify dependency providers that apply only when rendering the app on the server. You can do this when your app needs information that can only be determined by the currently running server instance.</source>
          <target state="translated">&lt;code&gt;extraProviders&lt;/code&gt; : 선택 사항이며 서버에서 앱을 렌더링 할 때만 적용되는 종속성 공급자를 지정할 수 있습니다. 앱에 현재 실행중인 서버 인스턴스에서만 확인할 수있는 정보가 필요한 경우이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1c7c3f896e5075974bce936eca18584cfacbfa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - Don't add the package to package.json</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; -package.json에 패키지를 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f95c2b8d2de2e0dd96838243f44c4cf8cbfca254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - same as 'legacy_disabled'. @deprecated since v4</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; - 'legacy_disabled'와 동일합니다. v4부터 @deprecated</target>
        </trans-unit>
        <trans-unit id="e94d69cf9ca890c842874fee48fa4ad03d8cd19e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - same as &lt;code&gt;legacy_disabled&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; - &lt;code&gt;legacy_disabled&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="c7f2977ec6da4718e49b746a393d0528f2708e46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;(default): use code (e.g. &lt;code&gt;USD&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; (기본값) : 코드 사용 (예 : &lt;code&gt;USD&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="56f10ef5fed4bf5f3d118ad15f71289bf7cefac5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;favicon.ico&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;favicon.ico&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="ae4bdc13bd7bd80a23642620408d0f81851ce4f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;files&lt;/code&gt; lists patterns that match files in the distribution directory. These can be single files or glob-like patterns that match a number of files.</source>
          <target state="translated">&lt;code&gt;files&lt;/code&gt; 는 배포 디렉토리의 파일과 일치하는 패턴을 나열합니다. 이들은 단일 파일이거나 여러 파일과 일치하는 glob-like 패턴 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a90014fb638e7d2782f1aba693043a81118b94ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first: boolean&lt;/code&gt;: True when the item is the first item in the iterable.</source>
          <target state="translated">&lt;code&gt;first: boolean&lt;/code&gt; : 항목이 iterable의 첫 번째 항목 인 경우 참입니다.</target>
        </trans-unit>
        <trans-unit id="7a4709c4148fd53bd47c1a74f0e23acb1cbeb7a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forChild&lt;/code&gt; creates a module that contains all the directives and the given routes, but does not include the router service.</source>
          <target state="translated">&lt;code&gt;forChild&lt;/code&gt; 는 모든 지시문과 지정된 경로를 포함하지만 라우터 서비스는 포함하지 않는 모듈을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="745e73b2e83391289d46c4a8b2bbd084df40f676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forRoot()&lt;/code&gt; and &lt;code&gt;forChild()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; 및 &lt;code&gt;forChild()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7152c11ef80c69b6b739a19b7d5c9281a2e06ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forRoot()&lt;/code&gt; and &lt;code&gt;forChild()&lt;/code&gt; are conventional names for methods that configure services in root and feature modules respectively.</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; 및 &lt;code&gt;forChild()&lt;/code&gt; 는 각각 루트 및 기능 모듈에서 서비스를 구성하는 메서드의 일반적인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="35d7c6f6bece83b47d9a63d52d074eda44a1a336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forRoot()&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58adc6e00137d6158ddc2a09beb73b433abc7418" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forRoot()&lt;/code&gt; takes a service configuration object and returns a &lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;, which is a simple object with the following properties:</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; 는 서비스 구성 객체를 &lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;가져와&lt;/a&gt; 다음 속성을 가진 간단한 객체 인 ModuleWithProviders를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="047252cd8a5ff4e572370974f457f98cf0b64184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forRoot&lt;/code&gt; creates a module that contains all the directives, the given routes, and the router service itself.</source>
          <target state="translated">&lt;code&gt;forRoot&lt;/code&gt; 는 모든 지시문, 지정된 경로 및 라우터 서비스 자체를 포함하는 모듈을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5ff6b50cba475aecf666534cf482674307d4cf97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; indicates which date/time components to include. The format can be predefined as shown below or custom as shown in the table.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 은 포함 할 날짜 / 시간 구성 요소를 나타냅니다. 형식은 아래와 같이 미리 정의하거나 표에 표시된대로 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23779a1b8f7f0d4f97e92a9ce114307a095cf3c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;freshness&lt;/code&gt; optimizes for currency of data, preferentially fetching requested data from the network. Only if the network times out, according to &lt;code&gt;timeout&lt;/code&gt;, does the request fall back to the cache. This is useful for resources that change frequently; for example, account balances.</source>
          <target state="translated">&lt;code&gt;freshness&lt;/code&gt; 는 데이터 통화를 최적화하여 네트워크에서 요청 된 데이터를 우선적으로 가져옵니다. &lt;code&gt;timeout&lt;/code&gt; 에 따라 네트워크 시간이 초과 된 경우에만 요청이 캐시로 폴백됩니다. 자주 변경되는 리소스에 유용합니다. 예를 들어, 계정 잔액.</target>
        </trans-unit>
        <trans-unit id="56f5e69842012588dc7ed4cd3d3f20513b0d77f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from(iterable)&lt;/code&gt;&amp;mdash;Converts its argument to an &lt;code&gt;Observable&lt;/code&gt; instance. This method is commonly used to convert an array to an observable.</source>
          <target state="translated">&lt;code&gt;from(iterable)&lt;/code&gt; 인수를 &lt;code&gt;Observable&lt;/code&gt; 인스턴스로 변환합니다. 이 방법은 일반적으로 배열을 관찰 가능으로 변환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d730a32e96ff8e854254bf3231ff24632f007f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt;, &lt;code&gt;fromEvent&lt;/code&gt;, &lt;code&gt;of&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt;, &lt;code&gt;fromEvent&lt;/code&gt;, &lt;code&gt;of&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc8ee192a28d4ebf3852dc5d279edba01514290a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt;,&lt;code&gt;fromEvent&lt;/code&gt;, &lt;code&gt;of&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; , &lt;code&gt;fromEvent&lt;/code&gt; , &lt;code&gt;of&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fe45d23f684b15638587a600e466d7276009066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94aab1ca6af3e39c0f35c43e8f5d1891cf017251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getHero()&lt;/code&gt; constructs a request URL with the desired hero's id.</source>
          <target state="translated">&lt;code&gt;getHero()&lt;/code&gt; 는 원하는 영웅의 ID로 요청 URL을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="0d62017d1ddf9dfdba7918517c7a109d5138b001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getHero()&lt;/code&gt; returns an &lt;code&gt;Observable&amp;lt;Hero&amp;gt;&lt;/code&gt; (&quot;&lt;em&gt;an observable of Hero objects&lt;/em&gt;&quot;) rather than an observable of hero &lt;em&gt;arrays&lt;/em&gt; .</source>
          <target state="translated">&lt;code&gt;getHero()&lt;/code&gt; 는 hero &lt;em&gt;배열&lt;/em&gt; 의 관찰 가능하지 않고 &lt;code&gt;Observable&amp;lt;Hero&amp;gt;&lt;/code&gt; ( &quot; &lt;em&gt;Hero 객체 관찰 가능&lt;/em&gt; &quot; )을 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c2163d994e77d626aeb32d81c707f9669b8a376d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;glob&lt;/code&gt;: A &lt;a href=&quot;https://github.com/isaacs/node-glob/blob/master/README.md&quot;&gt;node-glob&lt;/a&gt; using &lt;code&gt;input&lt;/code&gt; as base directory.</source>
          <target state="translated">&lt;code&gt;glob&lt;/code&gt; : &lt;code&gt;input&lt;/code&gt; 을 기본 디렉토리로 사용 하는 &lt;a href=&quot;https://github.com/isaacs/node-glob/blob/master/README.md&quot;&gt;노드 글로브&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf056fac1b880ac7efcfab4ded3903a65aaf1227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9203b795f1a5448d42ee0c2a23ee62080a77d7bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h&lt;/code&gt;: hours</source>
          <target state="translated">&lt;code&gt;h&lt;/code&gt; : 시간</target>
        </trans-unit>
        <trans-unit id="65f86af6252098247335ffeefed3bef7e56feb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;header&lt;/code&gt; - seen in the header of a tab</source>
          <target state="translated">&lt;code&gt;header&lt;/code&gt; -탭 헤더에 표시</target>
        </trans-unit>
        <trans-unit id="38b4aa465854e2343a933d97f89dc00f47ee52bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;header&lt;/code&gt;- the header of the code listing.</source>
          <target state="translated">&lt;code&gt;header&lt;/code&gt; - 코드리스트의 헤더</target>
        </trans-unit>
        <trans-unit id="1547684b8fbae431250b074519c752369a606688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hero-birthday1.component.ts&lt;/code&gt; uses the same pipe as part of an in-line template in a component that also sets the birthday value.</source>
          <target state="translated">&lt;code&gt;hero-birthday1.component.ts&lt;/code&gt; 는 생일 값도 설정하는 구성 요소에서 인라인 템플릿의 일부로 동일한 파이프를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f4fc919a194b119ef291a86170a1870c3a59a4ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hero&lt;/code&gt; - the data to POST in the body of the request.</source>
          <target state="translated">&lt;code&gt;hero&lt;/code&gt; - 요청 본문에 POST 할 데이터</target>
        </trans-unit>
        <trans-unit id="1a8f4fc417199f1911c000e01cf1b15865fe04b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hero&lt;/code&gt; holds the current hero object for each iteration through the list.</source>
          <target state="translated">&lt;code&gt;hero&lt;/code&gt; 는 목록을 통해 각 반복에 대한 현재 hero 오브젝트를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="e66f4b100a5340130d450890532c2598e6f6db11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heroes&lt;/code&gt; holds the mock heroes list from the &lt;code&gt;HeroesComponent&lt;/code&gt; class, the mock heroes list.</source>
          <target state="translated">&lt;code&gt;heroes&lt;/code&gt; 는 mock heroes 목록 인 &lt;code&gt;HeroesComponent&lt;/code&gt; 클래스의 mock hero 목록을 보유합니다 .</target>
        </trans-unit>
        <trans-unit id="3a307e1fb3ebd8b4343d228f83ba28fbd7fc1462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hidden&lt;/code&gt; - defined and set true if this is a guide page that should &lt;em&gt;not&lt;/em&gt; be displayed in the navigation panel. Rarely needed, it is a way to hide the page from navigation while making it available to readers who should know about it. &lt;em&gt;This&lt;/em&gt; &quot;Authors Style Guide&quot; is a hidden page.</source>
          <target state="translated">&lt;code&gt;hidden&lt;/code&gt; - 정의 되어 탐색 패널에 표시 &lt;em&gt;되지&lt;/em&gt; 않아야하는 안내 페이지 인 경우 true로 설정하십시오 . 드물게는 페이지를 탐색에서 숨기고 페이지를 알아야하는 독자가 사용할 수 있도록하는 방법입니다. &lt;em&gt;이&lt;/em&gt; &quot;저자 스타일 안내서&quot;는 숨겨진 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="dd7496ea205ac47bc12f5568e04b4cb2f672033e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hideCopy&lt;/code&gt;- hides the copy button</source>
          <target state="translated">&lt;code&gt;hideCopy&lt;/code&gt; - 복사 버튼을 숨 깁니다</target>
        </trans-unit>
        <trans-unit id="dac46d7300b5cd1e396ac9617440194bc2516185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;httpOptions&lt;/code&gt; - the method options which, in this case, &lt;a href=&quot;http#adding-headers&quot;&gt;specify required headers&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;httpOptions&lt;/code&gt; - 이 경우 &lt;a href=&quot;http#adding-headers&quot;&gt;필요한 헤더를 지정&lt;/a&gt; 하는 메소드 옵션 .</target>
        </trans-unit>
        <trans-unit id="3b3624b559e3cb6d7bb152e775984f49608ba284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18n-extract &lt;/code&gt;&lt;code&gt;xi18n &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;i18n-extract &lt;/code&gt;&lt;code&gt;xi18n &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ff52e80ea82f1f5d78e21fd87b31819968ab229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18n&lt;/code&gt; is a custom attribute, recognized by Angular tools and compilers. After translation, the compiler removes it. It is not an Angular directive.</source>
          <target state="translated">&lt;code&gt;i18n&lt;/code&gt; 은 각도 도구 및 컴파일러에서 인식되는 사용자 정의 속성입니다. 번역 후 컴파일러가이를 제거합니다. Angular 지시문이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="60328f60ea5ba7d8a36d124223ccd7d99c3f747a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18nFile&lt;/code&gt;: the path to the translation file.</source>
          <target state="translated">&lt;code&gt;i18nFile&lt;/code&gt; : 번역 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="c6f03f406728a2d321c9eabcec451958cd5e172f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18nFormat&lt;/code&gt;: the format of the translation file.</source>
          <target state="translated">&lt;code&gt;i18nFormat&lt;/code&gt; : 번역 파일의 형식입니다.</target>
        </trans-unit>
        <trans-unit id="1dccae092c8848ac376a8aa07cd574f969c5a660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18nLocale&lt;/code&gt;: the locale id.</source>
          <target state="translated">&lt;code&gt;i18nLocale&lt;/code&gt; : 로캘 ID</target>
        </trans-unit>
        <trans-unit id="3e49f43f55a2c230078902ebdd2f2293f9fa6608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore&lt;/code&gt;: A list of globs to exclude.</source>
          <target state="translated">&lt;code&gt;ignore&lt;/code&gt; : 제외 할 glob 목록.</target>
        </trans-unit>
        <trans-unit id="a016fd17160f190eb626e69ee22ae57c2d4fd4a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore&lt;/code&gt;: Do nothing.</source>
          <target state="translated">&lt;code&gt;ignore&lt;/code&gt; : 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b539fbc7d8eff2514653716b29f6b425b069d5c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreSearch&lt;/code&gt;: Ignore query parameters. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreSearch&lt;/code&gt; : 쿼리 매개 변수를 무시합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0719486d319345ecc01b629e387f9d40378333f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt;: Other NgModules you are using, so that you can use their declarables. The newly generated root NgModule imports &lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;&lt;code&gt;BrowserModule&lt;/code&gt;&lt;/a&gt; in order to use browser-specific services such as &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Core/introduction.html&quot;&gt;DOM&lt;/a&gt; rendering, sanitization, and location.</source>
          <target state="translated">&lt;code&gt;imports&lt;/code&gt; : 당신이 사용하고있는 다른 NgModules, 그래서 당신은 그들의 선언을 사용할 수 있습니다. 새로 생성 된 루트 NgModule 은 &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Core/introduction.html&quot;&gt;DOM&lt;/a&gt; 렌더링, 삭제 및 위치와 같은 브라우저 별 서비스를 사용하기 위해 &lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt; &lt;code&gt;BrowserModule&lt;/code&gt; &lt;/a&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2822bdafec74bba0d349bf46863500ccc012ab15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt;: Other modules whose exported classes are needed by component templates declared in &lt;em&gt;this&lt;/em&gt; NgModule.</source>
          <target state="translated">&lt;code&gt;imports&lt;/code&gt; : &lt;em&gt;이&lt;/em&gt; NgModule에 선언 된 컴포넌트 템플릿에 의해 익스포트 된 클래스가 필요한 다른 모듈 .</target>
        </trans-unit>
        <trans-unit id="caa3535bfbe686960f02fb48c43f7cd7429ab59a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7c5a75a7e1987e4d5d2512734c8fd8a4579688dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index: number&lt;/code&gt;: The index of the current item in the iterable.</source>
          <target state="translated">&lt;code&gt;index: number&lt;/code&gt; : iterable에서 현재 항목의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="5f09f88e053c44d395fd27d2f581cde3b3ec788e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initial&lt;/code&gt; - The initial size of the app.</source>
          <target state="translated">&lt;code&gt;initial&lt;/code&gt; - 앱의 초기 크기입니다.</target>
        </trans-unit>
        <trans-unit id="dab9b12e428433108c9912e74a45dc72a6e1a04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&lt;/code&gt;: A path relative to the workspace root.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; : 작업 공간 루트에 상대적인 경로입니다.</target>
        </trans-unit>
        <trans-unit id="0f88cb42dbf80282bcc19254bfe1bb7c2d9eca7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;interface&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;interface&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61e916f4e153229e0e9e59235605fae45e6aba52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;language&lt;/code&gt;- the source code language such as &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;sh&lt;/code&gt;. This attribute only works for inline examples.</source>
          <target state="translated">&lt;code&gt;language&lt;/code&gt; - &lt;code&gt;javascript&lt;/code&gt; , &lt;code&gt;html&lt;/code&gt; , &lt;code&gt;css&lt;/code&gt; , &lt;code&gt;typescript&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;sh&lt;/code&gt; 와 같은 소스 코드 언어 입니다. 이 속성은 인라인 예제에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8c030916dd464b1e17abe6cc867ebe59eb87bac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;last: boolean&lt;/code&gt;: True when the item is the last item in the iterable.</source>
          <target state="translated">&lt;code&gt;last: boolean&lt;/code&gt; : 항목이 iterable의 마지막 항목 인 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="17dfbef7b304ba0d7f68f860ac8f15a01b51c787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazy&lt;/code&gt; does not cache any of the resources up front. Instead, the Angular service worker only caches resources for which it receives requests. This is an on-demand caching mode. Resources that are never requested will not be cached. This is useful for things like images at different resolutions, so the service worker only caches the correct assets for the particular screen and orientation.</source>
          <target state="translated">&lt;code&gt;lazy&lt;/code&gt; 리소스를 미리 캐시하지 않습니다. 대신 Angular 서비스 워커는 요청을받는 리소스 만 캐시합니다. 주문형 캐싱 모드입니다. 요청되지 않은 리소스는 캐시되지 않습니다. 이것은 해상도가 다른 이미지와 같은 경우에 유용하므로 서비스 작업자는 특정 화면 및 방향에 대한 올바른 자산 만 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="52c4253fb4a05fcf659605e418fffa39b4136153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazy&lt;/code&gt; tells the service worker to not cache those resources. Instead, it treats them as unrequested and waits until they're requested again before updating them. An &lt;code&gt;updateMode&lt;/code&gt; of &lt;code&gt;lazy&lt;/code&gt; is only valid if the &lt;code&gt;installMode&lt;/code&gt; is also &lt;code&gt;lazy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lazy&lt;/code&gt; 는 서비스 워커에게 해당 리소스를 캐시하지 않도록 지시합니다. 대신 요청하지 않은 것으로 처리하고 다시 요청하기 전까지 기다렸다가 업데이트합니다. &lt;code&gt;lazy&lt;/code&gt; 의 &lt;code&gt;updateMode&lt;/code&gt; 는 &lt;code&gt;installMode&lt;/code&gt; 도 &lt;code&gt;lazy&lt;/code&gt; 경우에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="6301dfe56dbdc7802b771af97eefea226dd79046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;legacy_disabled&lt;/code&gt; - The initial navigation is not performed. The location listener is set up after the root component gets created.</source>
          <target state="translated">&lt;code&gt;legacy_disabled&lt;/code&gt; - 초기 탐색이 수행되지 않습니다. 위치 컴포넌트는 루트 컴포넌트가 작성된 후에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="77739a1987006fd5403fd495ccaf755e37e2a205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;legacy_enabled&lt;/code&gt; - Default for compatibility. The initial navigation starts after the root component has been created, but the bootstrap is not blocked until the initial navigation is complete.</source>
          <target state="translated">&lt;code&gt;legacy_enabled&lt;/code&gt; - 호환성을위한 기본값입니다. 루트 구성 요소가 생성 된 후 초기 탐색이 시작되지만 초기 탐색이 완료 될 때까지 부트 스트랩이 차단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="43059916312e98b8aed2248832d7d6dab7bba0fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let customer&lt;/code&gt;, or a template reference variable, &lt;code&gt;#customerInput&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let customer&lt;/code&gt; 또는 템플리트 참조 변수 &lt;code&gt;#customerInput&lt;/code&gt; 을 보자 .</target>
        </trans-unit>
        <trans-unit id="5ea858ad96e08678c125567aad19fe0062e7be92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linenums&lt;/code&gt; - overrides the &lt;code&gt;linenums&lt;/code&gt; property at the &lt;code&gt;code-tabs&lt;/code&gt; level for this particular pane. The value can be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or a number indicating the starting line number. If not specified, it defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;linenums&lt;/code&gt; - 이 특정 분할 창의 &lt;code&gt;code-tabs&lt;/code&gt; 레벨 에서 &lt;code&gt;linenums&lt;/code&gt; 특성을 대체합니다 . 값은 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 또는 시작 줄 번호를 나타내는 숫자 일 수 있습니다. 지정하지 않으면 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6a671d710046bfb72137e3606ebbabf2965e9267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linenums&lt;/code&gt;- value may be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, or a &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt;. When not specified, line numbers default to &lt;code&gt;false&lt;/code&gt; (i.e. no line numbers are displayed). The rarely used &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; option starts line numbering at the given value. &lt;code&gt;linenums=4&lt;/code&gt; sets the starting line number to 4.</source>
          <target state="translated">&lt;code&gt;linenums&lt;/code&gt; - 값은 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; 있습니다. 지정하지 않으면 행 번호는 기본적으로 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 (즉, 행 번호가 표시되지 않음). 드물게 사용되는 &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; 옵션은 주어진 값에서 줄 번호 매기기를 시작합니다. &lt;code&gt;linenums=4&lt;/code&gt; 는 시작 줄 번호를 4로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="dd86f86825d6580a9b56dc328efe7938ab241d68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linenums&lt;/code&gt;- value may be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, or a &lt;code&gt;number&lt;/code&gt;. When not specified, line numbers default to &lt;code&gt;false&lt;/code&gt; (i.e. no line numbers are displayed). The rarely used &lt;code&gt;number&lt;/code&gt; option starts line numbering at the given value. &lt;code&gt;linenums=4&lt;/code&gt; sets the starting line number to 4.</source>
          <target state="translated">&lt;code&gt;linenums&lt;/code&gt; -value는 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;number&lt;/code&gt; 있습니다. 지정하지 않으면 줄 번호는 기본적으로 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 (즉, 줄 번호가 표시되지 않음). 드물게 사용되는 &lt;code&gt;number&lt;/code&gt; 옵션은 주어진 값에서 줄 번호 매기기를 시작합니다. &lt;code&gt;linenums=4&lt;/code&gt; 는 시작 줄 번호를 4로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b97e7b1f7bdadc84270f35636ff6bc10f47a2110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linenums&lt;/code&gt;: The value can be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or a number indicating the starting line number. If not specified, it defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;linenums&lt;/code&gt; : 값은 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 또는 시작 줄 번호를 나타내는 숫자 일 수 있습니다. 지정하지 않으면 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="562e505b10dade94c7ae91c985d4aa99fe05df3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link&lt;/code&gt;: supported. (NOTE: only pre-link function is supported.)</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; : 지원됩니다. (참고 : 사전 링크 기능 만 지원됩니다.)</target>
        </trans-unit>
        <trans-unit id="6da4227eab396a27b6cd45996640d9a4ecbc9fa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loadChildren&lt;/code&gt; string syntax</source>
          <target state="translated">&lt;code&gt;loadChildren&lt;/code&gt; 문자열 구문</target>
        </trans-unit>
        <trans-unit id="852115004d3af93386e59b4a27d56509b4a7f6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locales&lt;/code&gt;: A map of locale identifiers to translation files</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; : 번역 파일에 대한 로케일 식별자 맵</target>
        </trans-unit>
        <trans-unit id="0aa6d1bf69920052157f242b4626efb0c0a1a05c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: minutes</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; : 분</target>
        </trans-unit>
        <trans-unit id="5a5bb8bed1430404de3c38a1fc9097318aaa664c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt; is the maximum number of digits after fraction. Defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maxFractionDigits&lt;/code&gt; 는 분수 후 최대 자릿수입니다. 기본값은 &lt;code&gt;3&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0c8c47e3367b372d4153edf2a56665f2f54167b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt;: The maximum number of digits after the decimal point. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maxFractionDigits&lt;/code&gt; : 소수점 이후 최대 자릿수입니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="310229f0aee67e6dd16d79fabf13ce61b6b73af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt;: The maximum number of digits after the decimal point. Default is &lt;code&gt;2&lt;/code&gt;. If not provided, the number will be formatted with the proper amount of digits, depending on what the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; specifies. For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.</source>
          <target state="translated">&lt;code&gt;maxFractionDigits&lt;/code&gt; : 소수점 이후 최대 자릿수입니다. 기본값은 &lt;code&gt;2&lt;/code&gt; 입니다. 제공하지 않으면 &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217에서&lt;/a&gt; 지정한 내용에 따라 숫자가 적절한 자릿수로 형식화 됩니다. 예를 들어, 캐나다 달러는 2 자리 인 반면 칠레 페소에는 2 자리가 없습니다.</target>
        </trans-unit>
        <trans-unit id="79ff228326ff629e3dbe373d042001bff279fe99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt;: The maximum number of digits after the decimal point. Default is &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maxFractionDigits&lt;/code&gt; : 소수점 이후 최대 자릿수입니다. 기본값은 &lt;code&gt;3&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6caa85dcafdb4381c1e9ef73f7719e8e0fcf5036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&lt;/code&gt; : Merge new with current parameters.</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; : 현재 매개 변수와 새로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="97f79c178f83e518a4723ed1dcecbc03cecb7ce7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minFractionDigits&lt;/code&gt; is the minimum number of digits after fraction. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minFractionDigits&lt;/code&gt; 는 분수 후의 최소 자릿수입니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce56c8db052ebb8fe6faa85745e2be1ea0c140ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minFractionDigits&lt;/code&gt;: The minimum number of digits after the decimal point. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minFractionDigits&lt;/code&gt; : 소수점 이하의 최소 자릿수입니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4146ab8a174107482970a7e99367f14e64bb867d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minFractionDigits&lt;/code&gt;: The minimum number of digits after the decimal point. Default is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minFractionDigits&lt;/code&gt; : 소수점 이하의 최소 자릿수입니다. 기본값은 &lt;code&gt;2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bd3ac159b47ac5f1c5d70495c25131ba8bb003e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minIntegerDigits&lt;/code&gt; is the minimum number of integer digits to use. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minIntegerDigits&lt;/code&gt; 는 사용할 정수의 최소 숫자입니다. 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7d7af2c95c34a84afff08ce8b90fd190bd76f858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minIntegerDigits&lt;/code&gt;: The minimum number of integer digits before the decimal point. Default is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minIntegerDigits&lt;/code&gt; : 소수점 앞의 최소 정수 자릿수입니다. 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="922c6394878bbd1a1f108130ff96305e14e56793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my-app&lt;/code&gt; takes the name of your client application.</source>
          <target state="translated">&lt;code&gt;my-app&lt;/code&gt; 는 클라이언트 응용 프로그램의 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f3bc7348a99d5aa7299c99b6578abafdcafc28bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my/app/user/123&lt;/code&gt;&lt;strong&gt;is not&lt;/strong&gt; normalized</source>
          <target state="translated">&lt;code&gt;my/app/user/123&lt;/code&gt; &lt;strong&gt;이&lt;/strong&gt; 정규화 &lt;strong&gt;되지 않았습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8e1d95ae0fa3ca6c48bd798c2445aed57880f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="431bf29003248914d3f3f601dca84aca1b2b48ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;()&lt;/code&gt;&amp;mdash;tells Angular to create a new event emitter and that the data it emits is of type string.</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;()&lt;/code&gt; &amp;mdash;Angular에게 새 이벤트 이미 터를 만들고 그것이 방출하는 데이터가 문자열 유형임을 알립니다.</target>
        </trans-unit>
        <trans-unit id="c487586788aa1e540996c26ace3ef5f316d17717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;()&lt;/code&gt;&amp;mdash;tells Angular to create a new event emitter and that the data it emits is of type string. The type could be any type, such as &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, and so on. For more information on &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter API documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;()&lt;/code&gt; -Angular에게 새 이벤트 이미 터를 생성하고 방출하는 데이터가 문자열 유형임을 알리도록 지시합니다. type은 &lt;code&gt;number&lt;/code&gt; , &lt;code&gt;boolean&lt;/code&gt; 등과 같은 모든 유형이 될 수 있습니다 . &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 에 대한 자세한 정보 는 &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter API 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e7df24278f62001abb8adb94c5ee75a46c629f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newItemEvent&lt;/code&gt;&amp;mdash;the name of the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;newItemEvent&lt;/code&gt; - &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/output&quot;&gt;출력&lt;/a&gt; 이름 ()</target>
        </trans-unit>
        <trans-unit id="d079a0b4814853da71d19fcce2290377843df4c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newProjectRoot&lt;/code&gt;: Path where new projects are created. Absolute or relative to the workspace folder.</source>
          <target state="translated">&lt;code&gt;newProjectRoot&lt;/code&gt; : 새 프로젝트가 생성되는 경로입니다. 절대 또는 작업 공간 폴더와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0c8c4a0593c02463a204cb13400ed6f503c71e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; is controlled by AngularJS and communicates with the downgraded Angular component by way of the &lt;code&gt;&lt;a href=&quot;../forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; interface from @angular/forms. Only components that implement this interface are eligible.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; 은 AngularJS에 의해 제어되며 @ angular / forms 의 &lt;code&gt;&lt;a href=&quot;../forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; 인터페이스를 통해 다운 그레이드 된 Angular 구성 요소와 통신 합니다. 이 인터페이스를 구현하는 구성 요소 만 적합합니다.</target>
        </trans-unit>
        <trans-unit id="cefcf17c68ded7382461fef6fcd1abc8a0ba2e7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng&lt;/code&gt;&lt;em&gt;commandNameOrAlias&lt;/em&gt;&lt;em&gt;requiredArg&lt;/em&gt; [&lt;em&gt;optionalArg&lt;/em&gt;] &lt;code&gt;[options]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ng&lt;/code&gt; &lt;em&gt;commandNameOrAlias &lt;/em&gt;&lt;em&gt;requiredArg&lt;/em&gt; [ &lt;em&gt;optionalArg&lt;/em&gt; ] &lt;code&gt;[options]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c45f49adc73c246bc8acc10c0225f8e391df6b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterContentChecked&lt;/code&gt;: After every check of component content.</source>
          <target state="translated">&lt;code&gt;ngAfterContentChecked&lt;/code&gt; : 구성 요소 컨텐츠를 확인할 때마다.</target>
        </trans-unit>
        <trans-unit id="6f1a90405b0261fcd6765b0f7320ccde4444968f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterContentInit&lt;/code&gt;: After component content initialized.</source>
          <target state="translated">&lt;code&gt;ngAfterContentInit&lt;/code&gt; : 구성 요소 컨텐츠가 초기화 된 후.</target>
        </trans-unit>
        <trans-unit id="44ac4b43e4ccd5b71c3fb21c18ff828069c2766d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterViewChecked&lt;/code&gt;: After every check of a component's views.</source>
          <target state="translated">&lt;code&gt;ngAfterViewChecked&lt;/code&gt; : 구성 요소보기를 확인할 때마다.</target>
        </trans-unit>
        <trans-unit id="1dbc1d56cb494a79916232d1fc6238683cf4ee8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterViewInit&lt;/code&gt;: After a component's views are initialized.</source>
          <target state="translated">&lt;code&gt;ngAfterViewInit&lt;/code&gt; : 컴포넌트의 뷰가 초기화 된 후.</target>
        </trans-unit>
        <trans-unit id="1aeb86684eab172dcea610ccd0252186a9f2825f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngComponentOutletContent&lt;/code&gt;: Optional list of projectable nodes to insert into the content section of the component, if exists.</source>
          <target state="translated">&lt;code&gt;ngComponentOutletContent&lt;/code&gt; : 존재하는 경우 컴포넌트의 컨텐츠 섹션에 삽입 할 프로젝션 가능한 노드의 선택적 목록입니다.</target>
        </trans-unit>
        <trans-unit id="98fda188161b008b416dd5cf7bdc0a8e67ef6563" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngComponentOutletInjector&lt;/code&gt;: Optional custom &lt;a href=&quot;../core/injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt; that will be used as parent for the Component. Defaults to the injector of the current view container.</source>
          <target state="translated">&lt;code&gt;ngComponentOutletInjector&lt;/code&gt; : 컴포넌트의 부모로 사용될 선택적 커스텀 &lt;a href=&quot;../core/injector&quot;&gt; &lt;code&gt;Injector&lt;/code&gt; &lt;/a&gt; . 기본값은 현재 뷰 컨테이너의 인젝터입니다.</target>
        </trans-unit>
        <trans-unit id="8715cb7cc053cb6889957598e1b16546bddba3f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngComponentOutletNgModuleFactory&lt;/code&gt;: Optional module factory to allow dynamically loading other module, then load a component from that module.</source>
          <target state="translated">&lt;code&gt;ngComponentOutletNgModuleFactory&lt;/code&gt; : 다른 모듈을 동적으로로드 한 다음 해당 모듈에서 컴포넌트를로드 할 수있는 선택적 모듈 팩토리입니다.</target>
        </trans-unit>
        <trans-unit id="fe676f35825dc492c735a75fc303938db9c8c121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngDoCheck&lt;/code&gt;: Developer's custom change detection.</source>
          <target state="translated">&lt;code&gt;ngDoCheck&lt;/code&gt; : 개발자의 맞춤형 변경 감지.</target>
        </trans-unit>
        <trans-unit id="1d76deb8a8467a5ed5cc3e308d59a2da27bcd74c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngForm&lt;/code&gt; element selector</source>
          <target state="translated">&lt;code&gt;ngForm&lt;/code&gt; 요소 선택기</target>
        </trans-unit>
        <trans-unit id="1b8c9863b097c5a6439cf027d850e65e326f8575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngModel&lt;/code&gt; with reactive forms</source>
          <target state="translated">&lt;code&gt;ngModel&lt;/code&gt; 반응성 형식의 ngModel</target>
        </trans-unit>
        <trans-unit id="f395eb14bfa2b51d4d59399a6cda65024134e1fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngModule&lt;/code&gt;: in this example, the &lt;code&gt;GreetingModule&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;ngModule&lt;/code&gt; :이 예에서는 &lt;code&gt;GreetingModule&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="3c8fd5672f83ea7b0cc8e2c0d44cb45ce1f275c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngOnChanges&lt;/code&gt;: When an &lt;a href=&quot;glossary#input&quot;&gt;input&lt;/a&gt;/&lt;a href=&quot;glossary#output&quot;&gt;output&lt;/a&gt; binding value changes.</source>
          <target state="translated">&lt;code&gt;ngOnChanges&lt;/code&gt; : &lt;a href=&quot;glossary#input&quot;&gt;입력&lt;/a&gt; / &lt;a href=&quot;glossary#output&quot;&gt;출력&lt;/a&gt; 바인딩 값이 변경 될 때 .</target>
        </trans-unit>
        <trans-unit id="a2d97017998b8ce4e037ebba4b7b0f43d573092a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngOnDestroy&lt;/code&gt;: Just before the directive is destroyed.</source>
          <target state="translated">&lt;code&gt;ngOnDestroy&lt;/code&gt; : 지시어가 파괴되기 직전에.</target>
        </trans-unit>
        <trans-unit id="2ba021b4f7f03303f57a1936dcc1fb9670a9fb17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngOnInit&lt;/code&gt;: After the first &lt;code&gt;ngOnChanges&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ngOnInit&lt;/code&gt; : 첫 번째 &lt;code&gt;ngOnChanges&lt;/code&gt; 이후 .</target>
        </trans-unit>
        <trans-unit id="26d531629ac885f1dfc73659562bbab301bdb3e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngc&lt;/code&gt; is a Typescript-to-Javascript transpiler that processes Angular decorators, metadata, and templates, and emits JavaScript code. The most recent implementation is internally referred to as &lt;code&gt;ngtsc&lt;/code&gt; because it's a minimalistic wrapper around the TypeScript compiler &lt;code&gt;tsc&lt;/code&gt; that adds a transform for processing Angular code.</source>
          <target state="translated">&lt;code&gt;ngc&lt;/code&gt; 각도 장식, 메타 데이터 및 템플릿을 처리하는 타이프 라이터 - 투 - 자바 스크립트 transpiler이며, 자바 스크립트 코드를 방출한다. 가장 최근의 구현은 Angular 코드를 처리하기위한 변환을 추가하는 TypeScript 컴파일러 &lt;code&gt;tsc&lt;/code&gt; 를 둘러싼 최소한의 래퍼이기 때문에 내부적으로 &lt;code&gt;ngtsc&lt;/code&gt; 라고 합니다.</target>
        </trans-unit>
        <trans-unit id="370760a92de86f3e976060925842886409effa15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngmodule&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ngmodule&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1e5c940743c63597e44ac6698a1727050dd0284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noImplicitAny&lt;/code&gt; and &lt;code&gt;suppressImplicitAnyIndexErrors&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;noImplicitAny&lt;/code&gt; 및 &lt;code&gt;suppressImplicitAnyIndexErrors&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f58942b12d57fceb86aaa35f375ab7cd18d8511d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npm start&lt;/code&gt; fails in &lt;em&gt;Bash for Windows&lt;/em&gt; in versions earlier than the Creator's Update (April 2017).</source>
          <target state="translated">&lt;code&gt;npm start&lt;/code&gt; 제작자 업데이트 (2017 년 4 월) 이전의 &lt;em&gt;Bash for Windows&lt;/em&gt; 에서 npm start 가 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="1168d8088ce7429129123cc2789745847bd70f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;: A validator function that returns an error map with the merged error maps of the validators if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; : 유효성 검사에 실패한 경우, 유효성 검사기의 병합 된 오류 맵과 함께 오류 맵을 반환하는 유효성 검사기 함수이고, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="546cd4d30393c16e31ee514c6e30a4a3ef883c7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: A 0-based offset into the duration, in milliseconds.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; : 지속 시간에 대한 0 기반 오프셋 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="db969632d6c7c0694b4efe3a51de274ca1678999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: The 0-based index of the view's position in this container, or &lt;code&gt;-1&lt;/code&gt; if this container doesn't contain the view.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; :이 컨테이너에서보기 위치의 인덱스 (0부터 시작) 또는 이 컨테이너에보기가없는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8620e05f5ab4ecbfdfd3cfa78c312b6b32a54bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: The number of decimal digits, typically 0 or 2.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; : 십진수의 수이며 일반적으로 0 또는 2입니다.</target>
        </trans-unit>
        <trans-unit id="c4151b6d35b1038968f0e50e8272abcad7d8eb69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: The simulated time elapsed, in millis.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; : 시뮬레이션 된 경과 시간 (밀리 초).</target>
        </trans-unit>
        <trans-unit id="4bfb7beab5e87b885f151bc77c88d41babc31707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;odd: boolean&lt;/code&gt;: True when the item has an odd index in the iterable.</source>
          <target state="translated">&lt;code&gt;odd: boolean&lt;/code&gt; : 항목이 이터 러블에 홀수 인덱스를 가지고 있으면 참.</target>
        </trans-unit>
        <trans-unit id="0e6257c4fcb4c9741bb0f9547c7815712cd1401e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of(...items)&lt;/code&gt;&amp;mdash;Returns an &lt;code&gt;Observable&lt;/code&gt; instance that synchronously delivers the values provided as arguments.</source>
          <target state="translated">&lt;code&gt;of(...items)&lt;/code&gt; 인수로 제공된 값을 동 기적으로 제공 하는 &lt;code&gt;Observable&lt;/code&gt; 인스턴스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="369e03850d25d2f8b753ad244ee87e080fff9983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of(HEROES)&lt;/code&gt; returns an &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; that emits &lt;em&gt;a single value&lt;/em&gt;, the array of mock heroes.</source>
          <target state="translated">&lt;code&gt;of(HEROES)&lt;/code&gt; 는 모의 영웅 배열 인 &lt;em&gt;단일 값&lt;/em&gt; 을 방출 하는 &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; 을 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fa725f3cad9c9ce52c2e08c61d4b5add616c808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, each change only affects this control and not its parent. Default is true.</source>
          <target state="translated">&lt;code&gt;onlySelf&lt;/code&gt; : true 인 경우 각 변경 사항은이 컨트롤에만 영향을 미치며 부모 컨트롤에는 영향을 미치지 않습니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="d04bc5eba5b4535fc49c7a6a053beeeb5e02bd34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, each change only affects this control, and not its parent. Default is false.</source>
          <target state="translated">&lt;code&gt;onlySelf&lt;/code&gt; : true 인 경우 각 변경 사항은 상위가 아닌이 제어에만 영향을줍니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="60c6724c667b852b536869d2695e536749b5fa04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, mark only this control. When false or not supplied, marks all direct ancestors. Default is false.</source>
          <target state="translated">&lt;code&gt;onlySelf&lt;/code&gt; : true 인 경우이 컨트롤 만 표시합니다. 거짓이거나 제공되지 않으면 모든 직계 조상을 표시합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="1392560d983f1115d6778f485a19474e01c8c17d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, mark only this control. When false or not supplied, marks all direct ancestors. Default is false..</source>
          <target state="translated">&lt;code&gt;onlySelf&lt;/code&gt; : true 인 경우이 컨트롤 만 표시합니다. 거짓이거나 제공되지 않으면 모든 직계 조상을 표시합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="3b907babaf4524615a9d426a88cc2a34fe2fa9f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, only update this control. When false or not supplied, update all direct ancestors. Default is false.</source>
          <target state="translated">&lt;code&gt;onlySelf&lt;/code&gt; : true 인 경우이 컨트롤 만 업데이트합니다. 거짓이거나 제공되지 않은 경우 모든 직계 조상을 업데이트합니다. 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="e5401b81121c502c1ffb99d1d1624b3ff2ebea4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, only update this control. When false or not supplied, update all direct ancestors. Default is false..</source>
          <target state="translated">&lt;code&gt;onlySelf&lt;/code&gt; : true 인 경우이 컨트롤 만 업데이트하십시오. 거짓이거나 제공되지 않으면 모든 직계 조상을 업데이트하십시오. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="517dca98ae31db0e3e97e62a914e964f5ce04d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt;: A path relative to &lt;code&gt;outDir&lt;/code&gt; (default is &lt;code&gt;dist/&lt;/code&gt;&lt;em&gt;project-name&lt;/em&gt;). Because of the security implications, the CLI never writes files outside of the project output path.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; : &lt;code&gt;outDir&lt;/code&gt; 에 상대적인 경로입니다 (기본값은 &lt;code&gt;dist/&lt;/code&gt; &lt;em&gt;project-name입니다&lt;/em&gt; ). 보안 영향으로 인해 CLI는 프로젝트 출력 경로 외부에 파일을 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b722c6ac3a1c083d6b8bdd9f63fcad17c5a3909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;package&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b2dea3825b55c116cf7ab2fbd0690015ab354a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paramMap&lt;/code&gt; returns an &lt;code&gt;Observable&lt;/code&gt; that can emit more than one value during a test.</source>
          <target state="translated">&lt;code&gt;paramMap&lt;/code&gt; 은 테스트 중에 둘 이상의 값을 방출 할 수 있는 &lt;code&gt;Observable&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6a1e555ef9e9ecd3bd3e50612f7562c249990647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; that contains the required and &lt;a href=&quot;router-tutorial-toh#optional-route-parameters&quot;&gt;optional parameters&lt;/a&gt; specific to the route. Use &lt;code&gt;paramMap&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : 경로에 특정한 필수 및 &lt;a href=&quot;router-tutorial-toh#optional-route-parameters&quot;&gt;선택적 매개 변수&lt;/a&gt; 를 포함 하는 &lt;code&gt;Observable&lt;/code&gt; 입니다 . 대신 &lt;code&gt;paramMap&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="73e19d4a896f759f441c895290f8147b178a611f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paramsOrQueryParamsChange&lt;/code&gt; : Run when query parameters change.</source>
          <target state="translated">&lt;code&gt;paramsOrQueryParamsChange&lt;/code&gt; : 쿼리 매개 변수가 변경 될 때 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="26aea518dc7d3f66f8a62c3b1785d82d5f923fb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; - a file in the content/examples folder</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; -content / examples 폴더의 파일</target>
        </trans-unit>
        <trans-unit id="24390f57a234c9afc923e92e407e9eac1137e6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;- the path to the file in the &lt;code&gt;content/examples&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; - &lt;code&gt;content/examples&lt;/code&gt; 폴더 에있는 파일의 경로</target>
        </trans-unit>
        <trans-unit id="8f7f90bba65ab93ce6a94ea05115dfd1affc432d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: a string that matches the URL in the browser address bar.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; : 브라우저 주소 표시 줄의 URL과 일치하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a745ab2703e2542bd384bc9137b632c2f50c5f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathMatch&lt;/code&gt;. This property instructs Angular on how much of the URL to match. For this tutorial, you should set this property to &lt;code&gt;full&lt;/code&gt;. This strategy is recommended when you have an empty string for a path. For more information about this property, see the &lt;a href=&quot;../api/router/route&quot;&gt;Route API documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pathMatch&lt;/code&gt; . 이 속성은 일치 할 URL의 양을 Angular에 지시합니다. 이 자습서에서는이 속성을 &lt;code&gt;full&lt;/code&gt; 로 설정해야합니다 . 이 전략은 경로에 빈 문자열이있을 때 권장됩니다. 이 속성에 대한 자세한 내용은 &lt;a href=&quot;../api/router/route&quot;&gt;Route API 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="469b73f7b6d81438e653fe538a2c874ddd01c68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;performance&lt;/code&gt;, the default, optimizes for responses that are as fast as possible. If a resource exists in the cache, the cached version is used, and no network request is made. This allows for some staleness, depending on the &lt;code&gt;maxAge&lt;/code&gt;, in exchange for better performance. This is suitable for resources that don't change often; for example, user avatar images.</source>
          <target state="translated">&lt;code&gt;performance&lt;/code&gt; 기본값 인 performance 는 가능한 빠른 응답을 최적화합니다. 캐시에 리소스가 있으면 캐시 된 버전이 사용되며 네트워크 요청이 없습니다. 따라서 &lt;code&gt;maxAge&lt;/code&gt; 에 따라 성능 이 떨어지고 부실함 이 생길 수 있습니다. 자주 바뀌지 않는 리소스에 적합합니다. 예를 들어, 사용자 아바타 이미지.</target>
        </trans-unit>
        <trans-unit id="3cd4a32866311faa0bf1b4248f9b635cefbd9fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipe&lt;/code&gt;&lt;code&gt;impure&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pipe&lt;/code&gt;&lt;code&gt;impure&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d5c47dca97984fe774986e3650ec8229a1c4b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;popup.component.ts&lt;/code&gt; defines a simple pop-up element that displays an input message, with some animation and styling.</source>
          <target state="translated">&lt;code&gt;popup.component.ts&lt;/code&gt; 는 일부 애니메이션 및 스타일과 함께 입력 메시지를 표시하는 간단한 팝업 요소를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bcf9d3fffc89fee58ecd6bcfc23f61c2a565fee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;popup.service.ts&lt;/code&gt; creates an injectable service that provides two different ways to invoke the PopupComponent; as a dynamic component, or as a custom element. Notice how much more setup is required for the dynamic-loading method.</source>
          <target state="translated">&lt;code&gt;popup.service.ts&lt;/code&gt; 는 PopupComponent를 호출하는 두 가지 방법을 제공하는 주사 가능한 서비스를 작성합니다. 동적 구성 요소 또는 사용자 지정 요소로 동적 로딩 방법에 더 많은 설정이 필요한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f19394267ae5c300988bc73d2eece52917fc172b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;posParams&lt;/code&gt; is a map of positional parameters.</source>
          <target state="translated">&lt;code&gt;posParams&lt;/code&gt; 는 위치 매개 변수의 맵입니다.</target>
        </trans-unit>
        <trans-unit id="aaff4ae7bf0182fdef047f6b2889d906dcec4e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefetch&lt;/code&gt; tells the Angular service worker to fetch every single listed resource while it's caching the current version of the app. This is bandwidth-intensive but ensures resources are available whenever they're requested, even if the browser is currently offline.</source>
          <target state="translated">&lt;code&gt;prefetch&lt;/code&gt; 는 Angular 서비스 워커에게 앱의 현재 버전을 캐싱하는 동안 나열된 모든 단일 리소스를 가져 오도록 지시합니다. 대역폭을 많이 사용하지만 브라우저가 현재 오프라인 상태 인 경우에도 요청이있을 때마다 리소스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb06c575f03ee3d4fd511ef1622a5c0ab9f023cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefetch&lt;/code&gt; tells the service worker to download and cache the changed resources immediately.</source>
          <target state="translated">&lt;code&gt;prefetch&lt;/code&gt; 는 서비스 워커에게 변경된 리소스를 즉시 다운로드하여 캐시하라고 지시합니다.</target>
        </trans-unit>
        <trans-unit id="f5da769d9bc4728f145664190a6d966e4ad14800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt; and naked &lt;code&gt;expression&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; 와 알몸 &lt;code&gt;expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf5796f639d3531c5775721f4332dd1b3a66ae22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve&lt;/code&gt; : Preserve current parameters.</source>
          <target state="translated">&lt;code&gt;preserve&lt;/code&gt; : 현재 매개 변수를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="2e4d6764b69b5cc29d2da93c674b239d926f6dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt; and &lt;code&gt;terminal&lt;/code&gt;. While AngularJS components may use these, they are not used in Angular and it is better not to write code that relies on them.</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; 및 &lt;code&gt;terminal&lt;/code&gt; . AngularJS 구성 요소는 이러한 구성 요소를 사용할 수 있지만 Angular에서는 사용되지 않으므로 해당 구성 요소에 의존하는 코드를 작성하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b50451c3b65b276a1784f5064a86de5269060013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt;: ignored.</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; : 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="44759221d85b4888680488a0a86926898a009e06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;projects&lt;/code&gt; : Contains a subsection for each project (library or application) in the workspace, with the per-project configuration options.</source>
          <target state="translated">&lt;code&gt;projects&lt;/code&gt; : 프로젝트 별 구성 옵션을 사용하여 작업 공간의 각 프로젝트 (라이브러리 또는 애플리케이션)에 대한 하위 섹션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0490d6c4ba3558d7e1cc13e7311c8523d1f51f8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;propagateDigest?: boolean&lt;/code&gt;: Whether to perform &lt;a href=&quot;../../core/changedetectorref#detectChanges&quot;&gt;change detection&lt;/a&gt; on the component on every &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/%24rootScope.Scope#%24digest&quot;&gt;$digest&lt;/a&gt;. If set to &lt;code&gt;false&lt;/code&gt;, change detection will still be performed when any of the component's inputs changes. (Default: true)</source>
          <target state="translated">&lt;code&gt;propagateDigest?: boolean&lt;/code&gt; : 모든 &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/%24rootScope.Scope#%24digest&quot;&gt;$ digest&lt;/a&gt; 에서 구성 요소에 대한 &lt;a href=&quot;../../core/changedetectorref#detectChanges&quot;&gt;변경 감지&lt;/a&gt; 를 수행할지 여부 . &lt;code&gt;false&lt;/code&gt; 로 설정 되면 구성 요소의 입력이 변경 될 때에도 변경 감지가 수행됩니다. (기본값 : true)</target>
        </trans-unit>
        <trans-unit id="7471d7d8ecd167652ae86c117b2b9d263998e4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provideParent()&lt;/code&gt; helper function</source>
          <target state="translated">&lt;code&gt;provideParent()&lt;/code&gt; 헬퍼 함수</target>
        </trans-unit>
        <trans-unit id="a4600a7765390259246e75dafb22cb0d9781be1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providedIn&lt;/code&gt; and NgModules</source>
          <target state="translated">&lt;code&gt;providedIn&lt;/code&gt; 및 NgModules</target>
        </trans-unit>
        <trans-unit id="9a09a985d2e274b365f1e469836ed70e4db51334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt; vs. &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; 대 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0a55510df7fd5c07e02e277dfa7963a65daa833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt; vs. &lt;code&gt;viewProviders&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; 대 &lt;code&gt;viewProviders&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6933eb60f058694dfa4d5d6ca58bf5c6edaf84ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: An array of &lt;a href=&quot;glossary#provider&quot;&gt;providers&lt;/a&gt; for services that the component requires. In the example, this tells Angular how to provide the &lt;code&gt;HeroService&lt;/code&gt; instance that the component's constructor uses to get the list of heroes to display.</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; : 구성 요소에 필요한 서비스를위한 &lt;a href=&quot;glossary#provider&quot;&gt;제공자&lt;/a&gt; 의 배열 . 이 예제에서는 Angular에게 구성 요소의 생성자가 표시 할 영웅 목록을 가져 오는 데 사용 하는 &lt;code&gt;HeroService&lt;/code&gt; 인스턴스 를 제공하는 방법을 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="68823d80da7964ba1e4e766121d1e779aa9e3173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: Creators of &lt;a href=&quot;architecture-services&quot;&gt;services&lt;/a&gt; that this NgModule contributes to the global collection of services; they become accessible in all parts of the app. (You can also specify providers at the component level, which is often preferred.)</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; : 이 NgModule이 글로벌 서비스 콜렉션에 기여하는 &lt;a href=&quot;architecture-services&quot;&gt;서비스&lt;/a&gt; 작성자 ; 앱의 모든 부분에서 액세스 할 수 있습니다. 구성 요소 수준에서 공급자를 지정할 수도 있습니다. 이는 종종 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="f68ed1ff5c304821c31778c63942415533b00ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: Creators of &lt;a href=&quot;architecture-services&quot;&gt;services&lt;/a&gt; that this NgModule contributes to the global collection of services; they become accessible in all parts of the app. (You can also specify providers at the component level.)</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; : 이 NgModule이 글로벌 서비스 컬렉션에 기여하는 &lt;a href=&quot;architecture-services&quot;&gt;서비스&lt;/a&gt; 제작자 ; 앱의 모든 부분에서 액세스 할 수 있습니다. (구성 요소 수준에서 공급자를 지정할 수도 있습니다.)</target>
        </trans-unit>
        <trans-unit id="fdc240fa8ef2527bc9172dc62fc47ca5688018f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: Providers of services that components in other NgModules can use. There are no providers in a newly generated root NgModule.</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; : 다른 NgModules의 컴포넌트가 사용할 수있는 서비스 제공자. 새로 생성 된 루트 NgModule에 공급자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cedad40121ea0769436ca28f4dfb11b20dc5df7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: the configured providers</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; : 구성된 제공자</target>
        </trans-unit>
        <trans-unit id="29ad7ee768fc0bad4c6f3ba5a7b992caa5e3b19f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryParams&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; that contains the &lt;a href=&quot;router-tutorial-toh#query-parameters&quot;&gt;query parameters&lt;/a&gt; available to all routes. Use &lt;code&gt;queryParamMap&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;queryParams&lt;/code&gt; : 모든 경로에 사용할 수 있는 &lt;a href=&quot;router-tutorial-toh#query-parameters&quot;&gt;쿼리 매개 변수&lt;/a&gt; 를 포함 하는 &lt;code&gt;Observable&lt;/code&gt; 입니다 . 대신 &lt;code&gt;queryParamMap&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d040ce29b2ab97dfd5bb5a0ad7f5a492a8896f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirectTo&lt;/code&gt;. This property instructs Angular to redirect from an empty path to the &lt;code&gt;heroes-list&lt;/code&gt; path.</source>
          <target state="translated">&lt;code&gt;redirectTo&lt;/code&gt; . 이 속성은 Angular가 빈 경로에서 &lt;code&gt;heroes-list&lt;/code&gt; 경로 로 리디렉션하도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="2c3b99ba5f6f67aa2fc884414e27254d4ade0aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;region&lt;/code&gt;- displays the source file fragment with that region name; regions are identified by &lt;em&gt;docregion&lt;/em&gt; markup in the source file, as explained &lt;a href=&quot;docs-style-guide#region&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;region&lt;/code&gt; - 해당 지역 이름으로 소스 파일 조각을 표시합니다. 영역은 &lt;a href=&quot;docs-style-guide#region&quot;&gt;아래&lt;/a&gt; 설명 된 대로 소스 파일에서 &lt;em&gt;docregion&lt;/em&gt; 마크 업 으로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="ddbc3df537c252434b3e4e092270cba867b80aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerImmediately&lt;/code&gt;: Register immediately.</source>
          <target state="translated">&lt;code&gt;registerImmediately&lt;/code&gt; : 즉시 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="980544bfe7206f1abe8b83cc5c268101af799bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerWhenStable:&amp;lt;timeout&amp;gt;&lt;/code&gt;: Register as soon as the application stabilizes (no pending micro-/macro-tasks) but no later than &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; milliseconds. If the app hasn't stabilized after &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; milliseconds (for example, due to a recurrent asynchronous task), the ServiceWorker will be registered anyway. If &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; is omitted, the ServiceWorker will only be registered once the app stabilizes.</source>
          <target state="translated">&lt;code&gt;registerWhenStable:&amp;lt;timeout&amp;gt;&lt;/code&gt; : 애플리케이션이 안정화되는 즉시 (보류중인 마이크로 / 매크로 작업 없음) &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; 밀리 초 이내에 등록 합니다. 앱이 &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; 밀리 초 후에도 안정화되지 않은 경우 (예 : 반복적 인 비동기 작업으로 인해) ServiceWorker는 어쨌든 등록됩니다. 경우 &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; 생략 앱이 안정화되면, ServiceWorker만을 등록한다.</target>
        </trans-unit>
        <trans-unit id="38afa64cc3e9c3a30f5d3059255739112fc6aa16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerWhenStable&lt;/code&gt;: Register as soon as the application stabilizes (no pending micro-/macro-tasks).</source>
          <target state="translated">&lt;code&gt;registerWhenStable&lt;/code&gt; : 응용 프로그램이 안정화되는 즉시 등록합니다 (대기중인 마이크로 / 매크로 작업 없음).</target>
        </trans-unit>
        <trans-unit id="002548787c40427b6859a51755fd46c57319f80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerWithDelay:&amp;lt;timeout&amp;gt;&lt;/code&gt;: Register with a delay of &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; milliseconds. For example, use &lt;code&gt;registerWithDelay:5000&lt;/code&gt; to register the ServiceWorker after 5 seconds. If &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; is omitted, is defaults to &lt;code&gt;0&lt;/code&gt;, which will register the ServiceWorker as soon as possible but still asynchronously, once all pending micro-tasks are completed.</source>
          <target state="translated">&lt;code&gt;registerWithDelay:&amp;lt;timeout&amp;gt;&lt;/code&gt; : &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; 밀리 초의 지연으로 등록 합니다. 예를 들어 &lt;code&gt;registerWithDelay:5000&lt;/code&gt; 을 사용 하여 5 초 후에 ServiceWorker를 등록하십시오. 경우 &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; 생략, 기본값 인 &lt;code&gt;0&lt;/code&gt; 보류중인 모든 마이크로 작업이 완료되면, 비동기 적으로 가능한 한 빨리하지만 여전히 같은 ServiceWorker을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="6256ce300fad77012d2e39962359ed6c392910c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace: true&lt;/code&gt;. Angular never replaces a component element with the component template. This attribute is also deprecated in AngularJS.</source>
          <target state="translated">&lt;code&gt;replace: true&lt;/code&gt; . Angular는 구성 요소를 구성 요소 템플릿으로 대체하지 않습니다. 이 속성은 AngularJS에서도 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1cc17f4410a0d0dbfa66004668f05c785e712b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt;: not supported.</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; : 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c20ff245cdac0904f583989b170168ce70e2fcd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt;, if the component needs to communicate with some parent component's controller.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 구성 요소가 일부 상위 구성 요소의 컨트롤러와 통신해야하는 경우 require .</target>
        </trans-unit>
        <trans-unit id="9d5494d2b50ecc5c66bf821224814b6f073cfee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; : 지원.</target>
        </trans-unit>
        <trans-unit id="317d31a209bb581f76d623e31c0a86f2503908ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restrict: 'E'&lt;/code&gt;. Components are usually used as elements.</source>
          <target state="translated">&lt;code&gt;restrict: 'E'&lt;/code&gt; . 구성 요소는 일반적으로 요소로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0581b7eead4efc39f5963320ba4c689c3a81a344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restrict&lt;/code&gt;: must be set to 'E'.</source>
          <target state="translated">&lt;code&gt;restrict&lt;/code&gt; : 'E'로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc7bcc19e49b8229a00b675a3a9a37a1eb1e45b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnValue&lt;/code&gt; (optional) to be passed to the WTF.</source>
          <target state="translated">&lt;code&gt;returnValue&lt;/code&gt; (선택 사항)는 WTF로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="703e95d126dfbabd0d5c4f9673a5b7b4efa1eb1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;route.snapshot&lt;/code&gt; provides the initial value of the route parameter map. You can access the parameters directly without subscribing or adding observable operators as in the following:</source>
          <target state="translated">&lt;code&gt;route.snapshot&lt;/code&gt; 은 경로 매개 변수 맵의 초기 값을 제공합니다. 다음과 같이 관찰 가능한 연산자를 구독하거나 추가하지 않고도 매개 변수에 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f5f1466645e3daa435c9f581485f6fc6b563334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: seconds</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; : 초</target>
        </trans-unit>
        <trans-unit id="3a61e9ff4ef600049d208dedd43b8bc4fba61868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;schematics&lt;/code&gt; : A set of &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that customize the &lt;code&gt;ng generate&lt;/code&gt; sub-command option defaults for this workspace. See &lt;a href=&quot;workspace-config#schematics&quot;&gt;Generation schematics&lt;/a&gt; below.</source>
          <target state="translated">&lt;code&gt;schematics&lt;/code&gt; : 이 작업 공간에 대해 &lt;code&gt;ng generate&lt;/code&gt; 하위 명령 옵션 기본값을 사용자 정의하는 &lt;a href=&quot;glossary#schematic&quot;&gt;회로도&lt;/a&gt; 세트입니다 . 아래의 &lt;a href=&quot;workspace-config#schematics&quot;&gt;생성 회로도를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d156ca6b0bbe1f8ce84157633b4848d66226021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope: {}&lt;/code&gt; - an isolate scope. In Angular, components are always isolated from their surroundings, and you should do this in AngularJS too.</source>
          <target state="translated">&lt;code&gt;scope: {}&lt;/code&gt; -격리 범위입니다. Angular에서 구성 요소는 항상 주변과 격리되며 AngularJS에서도이 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="5f0d6cfd6339dbaefe85f7d866ade6e71573bdd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; : 지원.</target>
        </trans-unit>
        <trans-unit id="6b9ad11377986e9f3dceb9d36b9ec4d33234473d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selector1, selector2&lt;/code&gt;: Select if either &lt;code&gt;selector1&lt;/code&gt; or &lt;code&gt;selector2&lt;/code&gt; matches.</source>
          <target state="translated">&lt;code&gt;selector1, selector2&lt;/code&gt; : &lt;code&gt;selector1&lt;/code&gt; 또는 &lt;code&gt;selector2&lt;/code&gt; 가 일치하는 경우 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="260559789fb0c7799d0787d851e59468e1dd0bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selector&lt;/code&gt;&amp;mdash; the component's CSS element selector</source>
          <target state="translated">&lt;code&gt;selector&lt;/code&gt; &amp;mdash; 구성 요소의 CSS 요소 선택기</target>
        </trans-unit>
        <trans-unit id="61774bacbd137079996f9a4fd68b0ee03b75c821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selector&lt;/code&gt;: A CSS selector that tells Angular to create and insert an instance of this component wherever it finds the corresponding tag in template HTML. For example, if an app's HTML contains &lt;code&gt;&amp;lt;app-hero-list&amp;gt;&amp;lt;/app-hero-list&amp;gt;&lt;/code&gt;, then Angular inserts an instance of the &lt;code&gt;HeroListComponent&lt;/code&gt; view between those tags.</source>
          <target state="translated">&lt;code&gt;selector&lt;/code&gt; : 템플릿 HTML에서 해당 태그를 찾을 때마다이 컴포넌트의 인스턴스를 작성하고 삽입하도록 Angular에 지시하는 CSS 선택기. 예를 들어 앱의 HTML에 &lt;code&gt;&amp;lt;app-hero-list&amp;gt;&amp;lt;/app-hero-list&amp;gt;&lt;/code&gt; 가 포함 된 경우 Angular 는 해당 태그 사이에 &lt;code&gt;HeroListComponent&lt;/code&gt; 보기 인스턴스를 삽입 합니다.</target>
        </trans-unit>
        <trans-unit id="49a65a1e929568e36c402a1784f5d8e6d3c7ad80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server-app&lt;/code&gt; takes the name of the Universal (or server) application.</source>
          <target state="translated">&lt;code&gt;server-app&lt;/code&gt; 는 범용 (또는 서버) 애플리케이션의 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4314df5ba3785cdae96e3bdb9758a1922c136587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setValue&lt;/code&gt; for options</source>
          <target state="translated">&lt;code&gt;setValue&lt;/code&gt; 옵션의 setValue</target>
        </trans-unit>
        <trans-unit id="f7b980b12f0494d5a29d8cda7ea4c0ec9c13ae17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snapshot&lt;/code&gt; only gets the initial value of the parameter map with this technique. Use the observable &lt;code&gt;paramMap&lt;/code&gt; approach if there's a possibility that the router could re-use the component. This tutorial sample app uses with the observable &lt;code&gt;paramMap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;snapshot&lt;/code&gt; 은이 기술로 매개 변수 맵의 초기 값 만 가져옵니다. 라우터가 구성 요소를 재사용 할 가능성이있는 경우 관찰 가능한 &lt;code&gt;paramMap&lt;/code&gt; 접근 방식을 사용합니다. 이 튜토리얼 샘플 앱은 관찰 가능한 &lt;code&gt;paramMap&lt;/code&gt; 과 함께 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="581c0cad028cbcf86514e6a3b48e2526bc98f7af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snapshot&lt;/code&gt;: the no-observable alternative</source>
          <target state="translated">&lt;code&gt;snapshot&lt;/code&gt; : 관찰 할 수없는 대안</target>
        </trans-unit>
        <trans-unit id="7cedd0d4238b0503ac29c9b9d55eba1cfa55a58d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceLocale&lt;/code&gt;: The locale you use within the app source code (&lt;code&gt;en-US&lt;/code&gt; by default)</source>
          <target state="translated">&lt;code&gt;sourceLocale&lt;/code&gt; : 앱 소스 코드 내에서 사용하는 로케일 ( 기본적으로 &lt;code&gt;en-US&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="15ecda0af49fea9a35f5c30965957720e4beae8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src/app/&lt;/code&gt; FILES</source>
          <target state="translated">&lt;code&gt;src/app/&lt;/code&gt; 파일</target>
        </trans-unit>
        <trans-unit id="3896cde7961fc16aeb18de2b808617f6f2424cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt;, &lt;code&gt;hero&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; in the following:</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; , &lt;code&gt;hero&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2e2d19896ed116cfc687582ad25f01ae11195288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The code of the default currency for the given locale.</source>
          <target state="translated">&lt;code&gt;string | null&lt;/code&gt; : 지정된 로케일의 기본 통화 코드입니다.</target>
        </trans-unit>
        <trans-unit id="ce508ec8b9704c33f7160f84d323a2e80494c8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The currency name, or &lt;code&gt;null&lt;/code&gt; if the main country cannot be determined.</source>
          <target state="translated">&lt;code&gt;string | null&lt;/code&gt; : 통화 이름 . 기본 국가를 확인할 수없는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="521c792176650c7f352acacea2a9e511b2148bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The first value of the given parameter, or &lt;code&gt;null&lt;/code&gt; if the parameter is not present.</source>
          <target state="translated">&lt;code&gt;string | null&lt;/code&gt; : 지정된 파라미터의 최초의 값 . 파라미터가 존재하지 않는 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34ac2b60df7a9570747979d3d7cb195c49943e5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The localized symbol character, or &lt;code&gt;null&lt;/code&gt; if the main country cannot be determined.</source>
          <target state="translated">&lt;code&gt;string | null&lt;/code&gt; : 지역화 된 기호 문자 . 기본 국가를 확인할 수없는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fbac7bbbc5f97a6bc8f408bc4d39a7890322ab42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The parameter's single value, or the first value if the parameter has multiple values, or &lt;code&gt;null&lt;/code&gt; when there is no such parameter.</source>
          <target state="translated">&lt;code&gt;string | null&lt;/code&gt; : 매개 변수의 단일 값 또는 매개 변수에 여러 값이있는 경우 첫 번째 값 또는 그러한 매개 변수가없는 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f036f239b1395e90d9400b9221be8ec051cabb9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The value string if the header exists, null otherwise</source>
          <target state="translated">&lt;code&gt;string | null&lt;/code&gt; : 헤더가 존재하면 값 문자열, 그렇지 않으면 null</target>
        </trans-unit>
        <trans-unit id="ad64e06e2a0c640b208a87481debd9a90fa7803e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; - the CSS classes listed in the string (space delimited) are added,</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; -문자열에 나열된 CSS 클래스 (공백으로 구분)가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c06c2e9ffcbfe0d15401f24263bbc32c34a4d1b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: A normalized platform-specific URL.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 표준화 된 플랫폼 별 URL입니다.</target>
        </trans-unit>
        <trans-unit id="faefe044604198bf6c9b9c79790189f34d54165a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The URL string, modified if needed.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 필요한 경우 수정되는 URL 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e27edcb405cd529800890d92ff4ea83d965380e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The character for the localized symbol.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 지역화 된 기호의 문자입니다.</target>
        </trans-unit>
        <trans-unit id="a400aa12c0003223fee6c8c56c712b2e4a79276d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The decoded key name.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 디코딩 된 키 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7c976c65354c43974803e3b387cb2f4d83712247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The encoded key name.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 인코딩 된 키 이름입니다.</target>
        </trans-unit>
        <trans-unit id="87a7b6890b05f461ded02ce2ae03b8431bad12b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The encoded value.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 인코딩 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="d801d10e5fceac2562f9ddc31d3c4cd68ed5acf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted currency value.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 서식이 지정된 통화 값입니다.</target>
        </trans-unit>
        <trans-unit id="16045e1e59e01a396e77e7ba5230ce7ed2740578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted date string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 형식화 된 날짜 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="5194f22e1a11efa6c0a915afcb7c61c8c4013736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted percentage value.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 형식화 된 백분율 값입니다.</target>
        </trans-unit>
        <trans-unit id="54797310ef237c8ab3444889028ea0c2037f59c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted text string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 서식이 지정된 텍스트 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ce24a717787e670916e5b453b6b13293a5775c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The joined URL string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 결합 된 URL 문자열</target>
        </trans-unit>
        <trans-unit id="4629777354f6ddf5aff09371d271094611afce88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The locale code. For example, &lt;code&gt;fr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 로캘 코드 예를 들어 &lt;code&gt;fr&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9c71217f87256f7dded392202faac3ff3c2c6a73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The localized format string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 현지화 된 형식 문자열</target>
        </trans-unit>
        <trans-unit id="1c2a6b00707a45e58224f0c33e0f81f344e4f192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The localized formating string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 현지화 된 형식 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="289a987d7eaec8aa953ac0ab72dff98216a23cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The localized formatting string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 현지화 된 형식 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3f8e85c7404d4e09b7188adc258198c98090ef1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The normalized URL parameters string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 정규화 된 URL 매개 변수 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b30650f38a98f40ab452347f72dacd4ff52a6e10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The normalized URL path.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 정규화 된 URL 경로입니다.</target>
        </trans-unit>
        <trans-unit id="eef1f0561847ab7a4e922e31f161f3fd6ac9e39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The normalized URL string.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 정규화 된 URL 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="600adc34b2febcd59ecb72dae83e1cfdf9a641dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The symbol, or the currency code if no symbol is available.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 기호 또는 사용 가능한 기호가없는 경우 통화 코드입니다.</target>
        </trans-unit>
        <trans-unit id="4a2e2cb8378cd0d48f6d50afe2698d6d3ae738fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The symbol, or the currency code if no symbol is available.0</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : 기호 또는 사용 가능한 기호가없는 경우 통화 코드</target>
        </trans-unit>
        <trans-unit id="c6ac7f17301098b16591445dbade4885b90e4cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[] | null&lt;/code&gt;: A string of values if the header exists, null otherwise.</source>
          <target state="translated">&lt;code&gt;string[] | null&lt;/code&gt; : 헤더가 존재하는 경우는 값의 캐릭터 라인. 그렇지 않은 경우는 null</target>
        </trans-unit>
        <trans-unit id="5ceb59e3d43cd584cbd221c5c804f668f947c97a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[] | null&lt;/code&gt;: All values in a string array, or &lt;code&gt;null&lt;/code&gt; if the parameter not present.</source>
          <target state="translated">&lt;code&gt;string[] | null&lt;/code&gt; : 문자열 배열의 모든 값 또는 매개 변수가 없으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4129d935a46748d37e7b5e74bfa8c746812fa007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: A list of header names.</source>
          <target state="translated">&lt;code&gt;string[]&lt;/code&gt; : 헤더 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6512426881d73ba740935e93657aa9c369fdd9ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: An array containing one or more values, or an empty array if there is no such parameter.</source>
          <target state="translated">&lt;code&gt;string[]&lt;/code&gt; : 하나 이상의 값을 포함하는 배열 또는 그러한 매개 변수가없는 경우 빈 배열.</target>
        </trans-unit>
        <trans-unit id="ae2ad1c66a00eefe92923ce4dc789213d4244d0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: An array of localized name strings. For example, &lt;code&gt;[January, February, ...]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string[]&lt;/code&gt; : 현지화 된 이름 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[January, February, ...]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="0e84552a3a9c083caf8b161028b0ef7618a2c602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: An array of localized name strings. For example,&lt;code&gt;[&lt;a href=&quot;weekday#Sunday&quot;&gt;Sunday&lt;/a&gt;, &lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, ... &lt;a href=&quot;weekday#Saturday&quot;&gt;Saturday&lt;/a&gt;]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string[]&lt;/code&gt; : 현지화 된 이름 문자열의 배열입니다. 예를 들어 &lt;code&gt;en-US&lt;/code&gt; 의 경우 &lt;code&gt;[&lt;a href=&quot;weekday#Sunday&quot;&gt;Sunday&lt;/a&gt;, &lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, ... &lt;a href=&quot;weekday#Saturday&quot;&gt;Saturday&lt;/a&gt;]&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b731a90d53b3421ff8069dc7b07a093d1d8c17a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: The parameter names in a string array.</source>
          <target state="translated">&lt;code&gt;string[]&lt;/code&gt; : 문자열 배열의 매개 변수 이름입니다.</target>
        </trans-unit>
        <trans-unit id="51c3c3348fa498098f69d1ae90b99210ac58a00e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: The translated day-period strings.</source>
          <target state="translated">&lt;code&gt;string[]&lt;/code&gt; : 번역 된 기간 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0f4d1ea009f27503d56be18aacfee34bab184a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;styleUrls&lt;/code&gt;&amp;mdash; the location of the component's private CSS styles.</source>
          <target state="translated">&lt;code&gt;styleUrls&lt;/code&gt; &amp;mdash; 구성 요소의 비공개 CSS 스타일 위치입니다.</target>
        </trans-unit>
        <trans-unit id="766dc2314e107ed5684d8f52eb3dc720140ad927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switchMap()&lt;/code&gt; - send the search request to the service.</source>
          <target state="translated">&lt;code&gt;switchMap()&lt;/code&gt; -검색 요청을 서비스에 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3d2f0c4c739e6653c54346fd60ce098850a3c782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switchMap()&lt;/code&gt; calls the search service for each search term that makes it through &lt;code&gt;debounce()&lt;/code&gt; and &lt;code&gt;distinctUntilChanged()&lt;/code&gt;. It cancels and discards previous search observables, returning only the latest search service observable.</source>
          <target state="translated">&lt;code&gt;switchMap()&lt;/code&gt; 은 &lt;code&gt;debounce()&lt;/code&gt; 및 &lt;code&gt;distinctUntilChanged()&lt;/code&gt; 통해 각 검색어에 대해 검색 서비스를 호출합니다 . 이전 검색 옵저버 블을 취소하고 버리고 최신 검색 서비스 옵저버 블 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="09367d6df77166cb2077e553536821d50ab50af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switchMap()&lt;/code&gt; preserves the original request order while returning only the observable from the most recent HTTP method call. Results from prior calls are canceled and discarded.</source>
          <target state="translated">&lt;code&gt;switchMap()&lt;/code&gt; 은 원래 요청 순서를 유지하면서 가장 최근의 HTTP 메서드 호출에서 관찰 가능 항목 만 반환합니다. 이전 통화의 결과는 취소되고 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="80194b6b795053daab09fc6bb02b75aeec111251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switchMap()&lt;/code&gt;&amp;amp;emdash;Send the search request to the service.</source>
          <target state="translated">&lt;code&gt;switchMap()&lt;/code&gt; &amp;amp; emdash; 서비스에 검색 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4ada8458615683ef953913d1eb7c68a0bfa58630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol-narrow&lt;/code&gt;: Use the narrow symbol for locales that have two symbols for their currency. For example, the Canadian dollar CAD has the symbol &lt;code&gt;CA$&lt;/code&gt; and the symbol-narrow &lt;code&gt;$&lt;/code&gt;. If the locale has no narrow symbol, uses the standard symbol for the locale.</source>
          <target state="translated">&lt;code&gt;symbol-narrow&lt;/code&gt; : 통화에 두 개의 기호가있는 로케일에 좁은 기호를 사용하십시오. 예를 들어, 캐나다 달러 CAD에는 기호 &lt;code&gt;CA$&lt;/code&gt; 및 기호 좁은 &lt;code&gt;$&lt;/code&gt; 가 있습니다. 로케일에 좁은 기호가 없으면 로케일에 표준 기호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5a300f527a079aa7e12949706a5884b428ea8b77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol&lt;/code&gt;(default): Show the symbol (such as &lt;code&gt;$&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;symbol&lt;/code&gt; (기본값) : 기호를 표시합니다 (예 : &lt;code&gt;$&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fff262212485f2499354ad0d51d35e06c679e3e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbolDisplay&lt;/code&gt; is a boolean indicating whether to use the currency symbol or code.</source>
          <target state="translated">&lt;code&gt;symbolDisplay&lt;/code&gt; 는 통화 기호 또는 코드를 사용할지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="ecd5dd14b47b2a3b4a0078eaf950f741fd2a11f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; or &lt;code&gt;templateUrl&lt;/code&gt;. Components have their own templates.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; 또는 &lt;code&gt;templateUrl&lt;/code&gt; 입니다. 컴포넌트에는 자체 템플릿이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1866bccde210f5b88a9572d41ff2551598cc9022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; : 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4d9974cfe8e098dcb4ca1e4e14ea9c5bb3a66462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt;&amp;mdash; the location of the component's template file.</source>
          <target state="translated">&lt;code&gt;templateUrl&lt;/code&gt; &amp;mdash; 구성 요소 템플릿 파일의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="85d02ba20bc5d7f321905f284e140f99d5aaa2dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt;: The module-relative address of this component's HTML template. Alternatively, you can provide the HTML template inline, as the value of the &lt;code&gt;template&lt;/code&gt; property. This template defines the component's &lt;em&gt;host view&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;templateUrl&lt;/code&gt; :이 구성 요소 HTML 템플릿의 모듈 기준 주소입니다. 또는 &lt;code&gt;template&lt;/code&gt; 특성 의 값으로 HTML 템플리트를 인라인으로 제공 할 수 있습니다 . 이 템플릿은 구성 요소의 &lt;em&gt;호스트보기를&lt;/em&gt; 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="39aa23114bbbbcfec2db63bee9cd92d5d3c47ee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;templateUrl&lt;/code&gt; : 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="12c76e85910da3856eb5952c822f0b6fd97448b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;terminal&lt;/code&gt;: ignored.</source>
          <target state="translated">&lt;code&gt;terminal&lt;/code&gt; : 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f06d77326cd0bca250ebf62c45d57479014d4ca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt;- the text displayed in the side nav.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; - 텍스트는 측면 탐색에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="585b1d7f5e808d05bcc6dd7f6e5fd065b5d51722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tooltip&lt;/code&gt; - text that appears when the reader hovers over the navigation link.</source>
          <target state="translated">&lt;code&gt;tooltip&lt;/code&gt; -독자가 탐색 링크를 가리킬 때 표시되는 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="168b1734c412f11369f2307da529b415ea1c2cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transclude: true/{}&lt;/code&gt;, if the component needs to transclude content from elsewhere.</source>
          <target state="translated">&lt;code&gt;transclude: true/{}&lt;/code&gt; 컴포넌트가 다른 곳에서 컨텐츠를 변환해야하는 경우 true / {}</target>
        </trans-unit>
        <trans-unit id="36791a6d5b8f7b9c9d866dfedae5d2b614e29a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transclude&lt;/code&gt;: supported.</source>
          <target state="translated">&lt;code&gt;transclude&lt;/code&gt; : 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="232f9539366c47672928a664af87a79207b5aa53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - Add the package to the dependencies</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; - 종속성에 패키지 추가</target>
        </trans-unit>
        <trans-unit id="858a81b35724973be837df09606a200bd71f2114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - same as 'legacy_enabled'. @deprecated since v4</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; - 'legacy_enabled'와 동일합니다. v4부터 @deprecated</target>
        </trans-unit>
        <trans-unit id="3b4f2c4e2f3e4ba12471aa897a0d19fc314c49b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - same as &lt;code&gt;legacy_enabled&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; - &lt;code&gt;legacy_enabled&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="bdaf0b3eb81d501252bc01a931dbd778cfe346b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ebb4317a2660f32adcc60a8f4821f12c5d4bf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: use symbol (e.g. &lt;code&gt;$&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; : 기호를 사용하십시오 (예 : &lt;code&gt;$&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="882041f58c61297d3bc52474672369483f237e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type-alias&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type-alias&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c9afd6eb9f08515ab7057112db91e817d804703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt;: milliseconds</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; : 밀리 초</target>
        </trans-unit>
        <trans-unit id="d47669348fafc864662f56602085697fa9dbe3b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unknown&lt;/code&gt;: The current value of the &lt;code&gt;history.state&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;unknown&lt;/code&gt; : &lt;code&gt;history.state&lt;/code&gt; 객체 의 현재 값입니다 .</target>
        </trans-unit>
        <trans-unit id="48a4fef935f67bacb3d3b4135d13ff983e552636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updateOn&lt;/code&gt;: The event upon which the control should be updated (options: 'change' | 'blur' | submit')</source>
          <target state="translated">&lt;code&gt;updateOn&lt;/code&gt; : 컨트롤을 업데이트해야하는 이벤트 (옵션 : 'change'| 'blur'| submit ')</target>
        </trans-unit>
        <trans-unit id="ff47a013ae2594fc049a47bd77e20b3bcd43a753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;- the URL of the guide page (&lt;em&gt;item node only&lt;/em&gt;).</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; - 가이드 페이지의 URL입니다 ( &lt;em&gt;항목 노드 전용&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="efda235cea7f63d42e4bda5a12503a793a63fee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urls&lt;/code&gt; includes both URLs and URL patterns that will be matched at runtime. These resources are not fetched directly and do not have content hashes, but they will be cached according to their HTTP headers. This is most useful for CDNs such as the Google Fonts service. &lt;em&gt;(Negative glob patterns are not supported and &lt;code&gt;?&lt;/code&gt; will be matched literally; i.e. it will not match any character other than &lt;code&gt;?&lt;/code&gt;.)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;urls&lt;/code&gt; 에는 런타임에 일치하는 URL 및 URL 패턴이 모두 포함됩니다. 이러한 리소스는 직접 가져 오지 않고 콘텐츠 해시가 없지만 HTTP 헤더에 따라 캐시됩니다. 이는 Google Fonts 서비스와 같은 CDN에 가장 유용합니다. &lt;em&gt;음의 글로브 패턴은 지원되지 않으며 &lt;code&gt;?&lt;/code&gt; 는 문자 그대로 일치합니다. 즉 &lt;code&gt;?&lt;/code&gt; 이외의 다른 문자와 일치하지 않습니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cc7acda139cd978d70d6c2a03782342c0c28e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user.address&lt;/code&gt; is an object with a city property.</source>
          <target state="translated">&lt;code&gt;user.address&lt;/code&gt; 는 도시 속성이있는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="459c3a680314d4ca0a31bb67588cff62bbba4522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt; is a property on the component class.</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; 는 구성 요소 클래스의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="41d954b0b4ebaad128b6717d12f8460dbe17bdcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt; is an object with an address property.</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; 는 주소 속성이있는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="dc3a481cb6888675704d9c4ec426106f17b7a26f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;validator&lt;/code&gt;: A synchronous validator function, or an array of validator functions</source>
          <target state="translated">&lt;code&gt;validator&lt;/code&gt; : 동기 유효성 검사기 함수 또는 유효성 검사기 함수 배열</target>
        </trans-unit>
        <trans-unit id="65019c2a58964549705dd63a8d87df432ede8c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;validators&lt;/code&gt;: A synchronous validator function, or an array of validator functions</source>
          <target state="translated">&lt;code&gt;validators&lt;/code&gt; : 동기 유효성 검사기 함수 또는 유효성 검사기 함수 배열</target>
        </trans-unit>
        <trans-unit id="07234964ac5da10250991e3e71936781cd2d43e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; is an integer field and defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; 은 정수 필드이며 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7e2b59157459f0abd6f9f22ecc2904e29bccbcbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; provides a mechanism to indicate that the resources being cached have been updated in a backwards-incompatible way, and that the old cache entries&amp;mdash;those from previous versions&amp;mdash;should be discarded.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; 은 캐시되는 리소스가 이전 버전과 호환되지 않는 방식으로 업데이트되었으며 이전 버전의 캐시 항목이 삭제되어야 함을 나타내는 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0a89bdfc7e5d5af32f4f0b48e7211603421072b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;: The configuration-file version.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; : 구성 파일 버전입니다.</target>
        </trans-unit>
        <trans-unit id="f245b84ac85765e1d0c161adfb8d1472bdde2df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;versionedFiles&lt;/code&gt; has been deprecated. As of v6 &lt;code&gt;versionedFiles&lt;/code&gt; and &lt;code&gt;files&lt;/code&gt; options have the same behavior. Use &lt;code&gt;files&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;versionedFiles&lt;/code&gt; 는 더 이상 사용되지 않습니다. v6 &lt;code&gt;versionedFiles&lt;/code&gt; &lt;code&gt;files&lt;/code&gt; 및 파일 옵션의 동작이 동일합니다. 대신 &lt;code&gt;files&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ff9520a491753d902f5326c10c313b3c8663725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;versionedFiles&lt;/code&gt; setting</source>
          <target state="translated">&lt;code&gt;versionedFiles&lt;/code&gt; 설정</target>
        </trans-unit>
        <trans-unit id="174243e0335d9ca825e8fc7f900e68dfbf13895c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void&lt;/code&gt; You can associate styles with this name to be used when the element is detached from the application. For example, when an &lt;code&gt;&lt;a href=&quot;../common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; evaluates to false, the state of the associated element is void.</source>
          <target state="translated">&lt;code&gt;void&lt;/code&gt; 요소를 응용 프로그램에서 분리 할 때 사용할 스타일을이 이름과 연결할 수 있습니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;../common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 가 false로 평가되면 연관된 요소의 상태가 void입니다.</target>
        </trans-unit>
        <trans-unit id="620b4535b1085c26bc01fdbfa2fab633694ad961" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void&lt;/code&gt;: Nothing.</source>
          <target state="translated">&lt;code&gt;void&lt;/code&gt; : 없음</target>
        </trans-unit>
        <trans-unit id="58302f93cf5dfc2fa6a821079040533840282a32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnOnDeprecatedNgFormSelector&lt;/code&gt; Configures when to emit a warning when the deprecated &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; selector is used.</source>
          <target state="translated">&lt;code&gt;warnOnDeprecatedNgFormSelector&lt;/code&gt; 더 이상 사용되지 않는 &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; 선택기를 사용할 때 경고를 표시 할시기를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="1de8ff6c29acbf9182ced076baf14613978acc39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnOnNgModelWithFormControl&lt;/code&gt; Configures when to emit a warning when an &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; binding is used with reactive form directives.</source>
          <target state="translated">&lt;code&gt;warnOnNgModelWithFormControl&lt;/code&gt; 반응 형 지시문과 함께 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 바인딩을 사용할 때 경고가 발생하는 시기를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="9a260f0d93a6db67626324f89fdd8078dd4c5c8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warning&lt;/code&gt; (default): Show a &lt;code&gt;Missing translation&lt;/code&gt; warning in the console or shell.</source>
          <target state="translated">&lt;code&gt;warning&lt;/code&gt; (기본값) : 콘솔 또는 셸에 &lt;code&gt;Missing translation&lt;/code&gt; 경고를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="4dbee414c23ae323e88607d56b76bad22ae21f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wtfStartTimeRange&lt;/code&gt; and all &lt;code&gt;wtf*&lt;/code&gt; APIs</source>
          <target state="translated">&lt;code&gt;wtfStartTimeRange&lt;/code&gt; 및 모든 &lt;code&gt;wtf*&lt;/code&gt; API</target>
        </trans-unit>
        <trans-unit id="c9e853d90075df9dcf996497d5e7bb5c72016333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn docs-watch --watch-only&lt;/code&gt; &amp;mdash; watches for saved content changes and refreshes the browser. The (optional) &lt;code&gt;--watch-only&lt;/code&gt; flag skips the initial docs rebuild.</source>
          <target state="translated">&lt;code&gt;yarn docs-watch --watch-only&lt;/code&gt; &amp;mdash; 저장된 내용 변경 사항을보고 브라우저를 새로 고칩니다. (선택 사항) &lt;code&gt;--watch-only&lt;/code&gt; 플래그는 초기 문서 재구성을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="df8de30571be3a9903ef172dfe208206f967100a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn setup&lt;/code&gt; &amp;mdash; installs packages; builds docs, stackblitz, and zips.</source>
          <target state="translated">&lt;code&gt;yarn setup&lt;/code&gt; &amp;mdash; 패키지를 설치합니다. 문서, stackblitz 및 zip을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="a8f61986a353cec33f9912399d51a60272c66dba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn start&lt;/code&gt; &amp;mdash; starts the doc viewer application so you can see your local changes in the browser.</source>
          <target state="translated">&lt;code&gt;yarn start&lt;/code&gt; &amp;mdash; 문서 뷰어 응용 프로그램을 시작하여 브라우저에서 로컬 변경 사항을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a47c4f1c388fec0ee78b60540d0f2936a6933ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{hero.name}}&lt;/code&gt;, &lt;code&gt;(click)&lt;/code&gt;, and &lt;code&gt;[hero]&lt;/code&gt; bind program data to and from the DOM, responding to user input. See more about &lt;a href=&quot;architecture-components#data-binding&quot;&gt;data binding&lt;/a&gt; below.</source>
          <target state="translated">&lt;code&gt;{{hero.name}}&lt;/code&gt; , &lt;code&gt;(click)&lt;/code&gt; 및 &lt;code&gt;[hero]&lt;/code&gt; 는 사용자 입력에 응답하여 프로그램 데이터를 DOM과 바인딩하거나 DOM에서 바인딩합니다. &lt;a href=&quot;architecture-components#data-binding&quot;&gt;데이터 바인딩&lt;/a&gt; 에 대한 자세한 내용은 아래를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd901e247ac5e8bb6fd465d687ef333bef148567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{}[]&lt;/code&gt;: Array of directives associated with the element.</source>
          <target state="translated">&lt;code&gt;{}[]&lt;/code&gt; : 요소와 연관된 지시문의 배열.</target>
        </trans-unit>
        <trans-unit id="6f702a6212eac7e543005d54417cbd1337def39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{}[]&lt;/code&gt;: Root components associated with the target object.</source>
          <target state="translated">&lt;code&gt;{}[]&lt;/code&gt; : 대상 개체와 연결된 루트 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="ce8bb03646d1aa1e391b18bf0dc9f141af8988a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt; &lt;code&gt;imports&lt;/code&gt;: specifies the list of other modules that this module depends upon &lt;/em&gt;&lt;code&gt;declaration&lt;/code&gt;: keeps track of your components, pipes, and directives.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;imports&lt;/code&gt; :이 모듈이 &lt;/em&gt; &lt;code&gt;declaration&lt;/code&gt; &lt;em&gt;의존하는 다른 모듈 목록을 지정&lt;/em&gt; 합니다. 컴포넌트, 파이프 및 지시문을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="6901ee635307862a90c8685577948006aa582f93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;#docregion&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;#docregion&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91e808857cfeb4a7c05ace11d2f1d35d4be07763" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; supports only the client half of the XSRF protection scheme.&lt;/em&gt; Your backend service must be configured to set the cookie for your page, and to verify that the header is present on all eligible requests. Failing to do so renders Angular's default protection ineffective.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 는 XSRF 보호 체계의 클라이언트 절반 만 지원합니다. &lt;/em&gt;백엔드 서비스는 페이지에 대한 쿠키를 설정하고 모든 적격 요청에 헤더가 있는지 확인하도록 구성되어야합니다. 그렇게하지 않으면 Angular의 기본 보호 기능이 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="1fc13798c07d7086830e1860c7c18cfb68ff32d1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; supports only the client half of the XSRF protection scheme.&lt;/em&gt; Your backend service must be configured to set the cookie for your page, and to verify that the header is present on all eligible requests. If not, Angular's default protection will be ineffective.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 는 XSRF 보호 체계의 클라이언트 절반 만 지원합니다. &lt;/em&gt;백엔드 서비스는 페이지의 쿠키를 설정하고 적합한 모든 요청에 ​​헤더가 있는지 확인하도록 구성되어야합니다. 그렇지 않으면 Angular의 기본 보호는 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="69ec5dbc65ac4837948af0d970868ba10b1015d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;API&lt;/em&gt; pages are generated from Angular source code into the &lt;code&gt;src/generated/docs/api&lt;/code&gt; directory. The doc viewer translates URLs that begin &lt;code&gt;api/&lt;/code&gt; into requests for document JSON files in that directory. This style guide does not discuss creation or maintenance of API pages.</source>
          <target state="translated">&lt;em&gt;API&lt;/em&gt; 페이지는 Angular 소스 코드에서 &lt;code&gt;src/generated/docs/api&lt;/code&gt; 디렉토리로 생성됩니다 . 문서 뷰어는 &lt;code&gt;api/&lt;/code&gt; 로 시작하는 URL을 해당 디렉토리의 문서 JSON 파일에 대한 요청으로 변환합니다 . 이 스타일 가이드는 API 페이지 생성 또는 유지 관리에 대해서는 다루지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c007dd5fbc56bc3a320e9507782d1a0ac7c47861" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ActivatedRouteStub&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ActivatedRouteStub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a71229a5de4f0f9d2aa46e3ea512b3877c03f19" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;After&lt;/em&gt; creating a component/directive by calling its constructor, Angular calls the lifecycle hook methods in the following sequence at specific moments:</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;생성자를 호출하여 구성 요소 / 지시문을 만든 &lt;em&gt;후&lt;/em&gt; Angular는 특정 순간에 다음 순서로 수명주기 후크 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="065ffd3c0498c799282cbc06d1eadf223586baf6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AfterContent&lt;/em&gt; hooks are similar to the &lt;em&gt;AfterView&lt;/em&gt; hooks. The key difference is in the child component.</source>
          <target state="translated">&lt;em&gt;afterContent를의&lt;/em&gt; 후크는 유사하다 &lt;em&gt;AfterView의&lt;/em&gt; 후크. 주요 차이점은 하위 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="395ef8b88f9209f87d46792a4d4d6ac634e2cb6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Angular couldn't determine the value of the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/enums.html&quot;&gt;enum member&lt;/a&gt; that you referenced in metadata.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Angular 에서 메타 데이터에서 참조한 &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/enums.html&quot;&gt;열거 형 멤버&lt;/a&gt; 의 값을 확인할 수 없습니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="586cb4e99fce00903fb96bb07955bd3e06ff5aac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Angular elements&lt;/em&gt; are Angular components packaged as &lt;em&gt;custom elements&lt;/em&gt; (also called Web Components), a web standard for defining new HTML elements in a framework-agnostic way.</source>
          <target state="translated">&lt;em&gt;각도 요소&lt;/em&gt; 는 프레임 워크와 무관하게 새 HTML 요소를 정의하기위한 웹 표준 인 &lt;em&gt;사용자 지정 요소&lt;/em&gt; (웹 구성 요소라고도 함) 로 패키지 된 각도 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="9546777855f498ab5331b6459f740550cfe1c984" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Angular templates are the same as executable code&lt;/em&gt;: HTML, attributes, and binding expressions (but not the values bound) in templates are trusted to be safe. This means that applications must prevent values that an attacker can control from ever making it into the source code of a template. Never generate template source code by concatenating user input and templates. To prevent these vulnerabilities, use the &lt;a href=&quot;security#offline-template-compiler&quot;&gt;offline template compiler&lt;/a&gt;, also known as &lt;em&gt;template injection&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;각도 템플릿은 실행 코드와 동일합니다. 템플릿의&lt;/em&gt; HTML, 속성 및 바인딩 식 (값은 제한되지 않음)은 안전합니다. 즉, 응용 프로그램은 공격자가 제어 할 수있는 값을 템플릿의 소스 코드로 만들지 못하게해야합니다. 사용자 입력과 템플릿을 연결하여 템플릿 소스 코드를 생성하지 마십시오. 이러한 취약점을 방지하려면 &lt;em&gt;템플릿 삽입&lt;/em&gt; 이라고도 하는 &lt;a href=&quot;security#offline-template-compiler&quot;&gt;오프라인 템플릿 컴파일러를&lt;/a&gt; 사용하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5958e08c5cfe7d7173551e30f187cea105393153" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Angular&lt;/em&gt; is the name for the Angular of today and tomorrow. &lt;em&gt;AngularJS&lt;/em&gt; is the name for all 1.x versions of Angular.</source>
          <target state="translated">&lt;em&gt;Angular&lt;/em&gt; 는 오늘과 내일의 Angular의 이름입니다. &lt;em&gt;AngularJS&lt;/em&gt; 는 모든 1.x 버전의 Angular의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="eed035a9c235e115c860e73823c5ecf7fcf3331f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Angular&lt;/em&gt; is the name for the Angular of today and tomorrow. &lt;em&gt;AngularJS&lt;/em&gt; is the name for all v1.x versions of Angular.</source>
          <target state="translated">&lt;em&gt;Angular&lt;/em&gt; 는 오늘과 내일의 Angular의 이름입니다. &lt;em&gt;AngularJS&lt;/em&gt; 는 모든 v1.x 버전의 Angular의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5952fb89a15d3b7da1056c9b97f116a17ede5bef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Assets&lt;/em&gt; are resources that are part of the app version that update along with the app. They can include resources loaded from the page's origin as well as third-party resources loaded from CDNs and other external URLs. As not all such external URLs may be known at build time, URL patterns can be matched.</source>
          <target state="translated">&lt;em&gt;자산&lt;/em&gt; 은 앱과 함께 업데이트되는 앱 버전의 일부인 리소스입니다. 여기에는 CDN 및 기타 외부 URL에서로드 된 타사 리소스뿐만 아니라 페이지 원본에서로드 된 리소스가 포함될 수 있습니다. 이러한 외부 URL을 모두 빌드 타임에 알 수있는 것은 아니므로 URL 패턴을 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69d8e1ce0bfdeb0ddfe5fd8913e712b4f6ca63aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attribute directives&lt;/em&gt; alter the appearance or behavior of an existing element. In templates they look like regular HTML attributes, hence the name.</source>
          <target state="translated">&lt;em&gt;속성 지시문&lt;/em&gt; 은 기존 요소의 모양이나 동작을 변경합니다. 템플릿에서는 일반 HTML 속성처럼 보이므로 이름입니다.</target>
        </trans-unit>
        <trans-unit id="92f89f0d0feebbc8c076921eec149bc55a1aaeba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attribute directives&lt;/em&gt; are used as attributes of elements. The built-in &lt;a href=&quot;built-in-directives#ngStyle&quot;&gt;NgStyle&lt;/a&gt; directive in the &lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt; guide, for example, can change several element styles at the same time.</source>
          <target state="translated">&lt;em&gt;속성 지시문&lt;/em&gt; 은 요소의 속성으로 사용됩니다. 예를 들어, 기본 제공 &lt;a href=&quot;built-in-directives&quot;&gt;지시문&lt;/a&gt; 가이드 의 기본 제공 &lt;a href=&quot;built-in-directives#ngStyle&quot;&gt;NgStyle&lt;/a&gt; 지시문은 여러 요소 스타일을 동시에 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2813f36d6e997f8cebab354916c0a9dec81a138" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attribute directives&lt;/em&gt; are used as attributes of elements. The built-in &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;NgStyle&lt;/a&gt; directive in the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; guide, for example, can change several element styles at the same time.</source>
          <target state="translated">&lt;em&gt;속성 지시문&lt;/em&gt; 은 요소의 속성으로 사용됩니다. 예를 들어, &lt;a href=&quot;template-syntax&quot;&gt;템플릿 구문&lt;/a&gt; 안내서 의 내장 &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;NgStyle&lt;/a&gt; 지시문은 여러 요소 스타일을 동시에 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b25234f1872022f772af40e4aaa09acb68ee766" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Barry&lt;/em&gt; is the problem. He needs to reach his parent, &lt;em&gt;Alice&lt;/em&gt;, and also be a parent to &lt;em&gt;Carol&lt;/em&gt;. That means he must both &lt;em&gt;inject&lt;/em&gt; the &lt;code&gt;Parent&lt;/code&gt; class interface to get &lt;em&gt;Alice&lt;/em&gt; and &lt;em&gt;provide&lt;/em&gt; a &lt;code&gt;Parent&lt;/code&gt; to satisfy &lt;em&gt;Carol&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;배리&lt;/em&gt; 가 문제입니다. 그는 자신의 부모 인 &lt;em&gt;Alice&lt;/em&gt; 에게 다가 가서 &lt;em&gt;Carol&lt;/em&gt; 의 부모가되어야합니다 . 즉, 그는 모두해야한다 &lt;em&gt;분사 &lt;/em&gt; &lt;code&gt;Parent&lt;/code&gt; 클래스 인터페이스 얻을 &lt;em&gt;앨리스&lt;/em&gt; 와 &lt;em&gt;제공 &lt;/em&gt; &lt;code&gt;Parent&lt;/code&gt; 만족시키기 위해 &lt;em&gt;캐롤&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ceafa15bede54e59e3caf718ff6f16db63f9ef4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Barry&lt;/em&gt;'s &lt;code&gt;providers&lt;/code&gt; array looks just like &lt;a href=&quot;dependency-injection-navtree#alex-providers&quot;&gt;&lt;em&gt;Alex&lt;/em&gt;'s&lt;/a&gt;. If you're going to keep writing &lt;a href=&quot;dependency-injection-in-action#useexisting&quot;&gt;&lt;em&gt;alias providers&lt;/em&gt;&lt;/a&gt; like this you should create a &lt;a href=&quot;dependency-injection-navtree#provideparent&quot;&gt;helper function&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Barry&lt;/em&gt; 의 &lt;code&gt;providers&lt;/code&gt; 배열은 &lt;a href=&quot;dependency-injection-navtree#alex-providers&quot;&gt;&lt;em&gt;Alex&lt;/em&gt; 의&lt;/a&gt; 모양과 같습니다 . 이와 같은 &lt;a href=&quot;dependency-injection-in-action#useexisting&quot;&gt;&lt;em&gt;별칭 공급자&lt;/em&gt;&lt;/a&gt; 를 계속 작성 하려면 &lt;a href=&quot;dependency-injection-navtree#provideparent&quot;&gt;도우미 함수를&lt;/a&gt; 만들어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="ffd84f19cf2865cc25b381a433fc952fb444e02c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Better security&lt;/em&gt; AOT compiles HTML templates and components into JavaScript files long before they are served to the client. With no templates to read and no risky client-side HTML or JavaScript evaluation, there are fewer opportunities for injection attacks.</source>
          <target state="translated">&lt;em&gt;향상된 보안&lt;/em&gt; AOT는 HTML 템플릿 및 구성 요소를 클라이언트에 제공하기 오래 전에 JavaScript 파일로 컴파일합니다. 읽을 템플릿이없고 위험한 클라이언트 측 HTML 또는 JavaScript 평가가 없기 때문에 주입 공격의 기회가 적습니다.</target>
        </trans-unit>
        <trans-unit id="8b254d7eae0875df8a924052f84d51239283fc6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;By.css()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;By.css()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37d9e43de7040e876ad7becb439ffc5775e952ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;By.directive&lt;/em&gt; and injected directives</source>
          <target state="translated">&lt;em&gt;By.directive&lt;/em&gt; 및 injection 지시문</target>
        </trans-unit>
        <trans-unit id="8f002ea611283ef668bffcecd0471844c198f3c1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Carol&lt;/em&gt;, the third of &lt;em&gt;Alex&lt;/em&gt;'s child components, injects the parent into its &lt;code&gt;parent&lt;/code&gt; parameter, the same way you've done it before.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;em&gt;Alex&lt;/em&gt; 의 하위 구성 요소 중 세 번째 인 &lt;em&gt;Carol&lt;/em&gt; 은 이전과 같은 방식으로 &lt;code&gt;parent&lt;/code&gt; 매개 변수에 주입합니다 .</target>
        </trans-unit>
        <trans-unit id="e226bbb63dc1415f2def6fab6980a317268df241" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cathy&lt;/em&gt; reports whether or not she has access to &lt;em&gt;Alex&lt;/em&gt; after injecting an &lt;code&gt;AlexComponent&lt;/code&gt; into her constructor:</source>
          <target state="translated">&lt;em&gt;Cathy&lt;/em&gt; 는 &lt;code&gt;AlexComponent&lt;/code&gt; 를 생성자에 주입 한 후 &lt;em&gt;Alex에&lt;/em&gt; 액세스 할 수 있는지 여부를보고합니다 .</target>
        </trans-unit>
        <trans-unit id="abbe425cd713c08309d85f1d9939f122aaa91cba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Class-only tests&lt;/em&gt; might be helpful, but attribute directives like this one tend to manipulate the DOM. Isolated unit tests don't touch the DOM and, therefore, do not inspire confidence in the directive's efficacy.</source>
          <target state="translated">&lt;em&gt;클래스 전용 테스트&lt;/em&gt; 가 도움이 될 수 있지만 이와 같은 속성 지시문은 DOM을 조작하는 경향이 있습니다. 분리 된 단위 테스트는 DOM에 영향을 미치지 않으므로 지시문의 효능에 대한 확신을 얻지 못합니다.</target>
        </trans-unit>
        <trans-unit id="134f48c53692e6382be325a4eff6d850e910ab29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ComponentFixture&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ComponentFixture&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f54b9b080dbd5d504a348454078d9baa805de72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ComponentFixture&lt;/em&gt; methods</source>
          <target state="translated">&lt;em&gt;ComponentFixture&lt;/em&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="3efddb57e098753e9067aa86308e683ac3626ddb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ComponentFixture&lt;/em&gt; properties</source>
          <target state="translated">&lt;em&gt;ComponentFixture&lt;/em&gt; 특성</target>
        </trans-unit>
        <trans-unit id="de017a8e6516b3d590b013b37613d739ef3c888c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Components&lt;/em&gt; are the fundamental building blocks of Angular applications. They display data on the screen, listen for user input, and take action based on that input.</source>
          <target state="translated">&lt;em&gt;구성 요소&lt;/em&gt; 는 Angular 응용 프로그램의 기본 &lt;em&gt;구성 요소&lt;/em&gt; 입니다. 화면에 데이터를 표시하고 사용자 입력을 듣고 해당 입력에 따라 조치를 취합니다.</target>
        </trans-unit>
        <trans-unit id="1c707590189069850763d681751a8403359488f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Components&lt;/em&gt; are the most common of the three directives. You saw a component for the first time in the &lt;a href=&quot;start&quot;&gt;Getting Started&lt;/a&gt; tutorial.</source>
          <target state="translated">&lt;em&gt;구성 요소&lt;/em&gt; 는 세 가지 지시문 중 가장 일반적입니다. &lt;a href=&quot;start&quot;&gt;시작하기&lt;/a&gt; 자습서 에서 처음으로 구성 요소를 보았습니다 .</target>
        </trans-unit>
        <trans-unit id="b9809df22bb86d44dcc30cadc2f4827c6fb092db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Components&lt;/em&gt; define areas of responsibility in the user interface, or UI, that let you reuse sets of UI functionality. You've already built one with the product list component.</source>
          <target state="translated">&lt;em&gt;구성 요소&lt;/em&gt; 는 UI 기능 집합을 재사용 할 수있는 UI (사용자 인터페이스)에서 책임 영역을 정의합니다. 이미 제품 목록 구성 요소로 구성했습니다.</target>
        </trans-unit>
        <trans-unit id="2ae0d4544774c0a2f1dfa97a5d2cb67dce0e3adc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Content projection&lt;/em&gt; is a way to import HTML content from outside the component and insert that content into the component's template in a designated spot.</source>
          <target state="translated">&lt;em&gt;컨텐츠 프로젝션&lt;/em&gt; 은 컴포넌트 외부에서 HTML 컨텐츠를 가져 와서 지정된 지점에서 컨텐츠를 컴포넌트의 템플리트에 삽입하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c3efbe2b232080810ce4518d26c75089783272ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Content projection&lt;/em&gt; is a way to import HTML content from outside the component and insert that content into the component's template in a designated spot. You can identify content projection in a template by looking for the following constructs.</source>
          <target state="translated">&lt;em&gt;콘텐츠 프로젝션&lt;/em&gt; 은 구성 요소 외부에서 HTML 콘텐츠를 가져와 지정된 위치의 구성 요소 템플릿에 해당 콘텐츠를 삽입하는 방법입니다. 다음 구성을 찾아 템플릿에서 콘텐츠 투영을 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa3156c9ac2a3416767f72e1d2f0afd30e707790" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DebugElement&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;DebugElement&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5418052247686b94d38febd220c0d31af14bdd7e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Delete&lt;/em&gt; the &lt;code&gt;#spy&lt;/code&gt; template reference variable and the &lt;code&gt;TODO&lt;/code&gt; as they have served their purpose.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;#spy&lt;/code&gt; 템플릿 참조 변수와 &lt;code&gt;TODO&lt;/code&gt; 가 목적에 맞는대로 &lt;em&gt;삭제&lt;/em&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="293e5b567b48da52c3818a727512bb6c44a52dbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Delete&lt;/em&gt; the &lt;code&gt;{{diagnostic}}&lt;/code&gt; binding at the top as it has served its purpose.</source>
          <target state="translated">&lt;em&gt;목적에&lt;/em&gt; 따라 &lt;code&gt;{{diagnostic}}&lt;/code&gt; 바인딩을 맨 위에 &lt;em&gt;삭제&lt;/em&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5bfa6bd57ff0a6e46527403f3ebe19b43423d10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Dependency injection&lt;/em&gt; (DI) lets you keep your component classes lean and efficient. They don't fetch data from the server, validate user input, or log directly to the console; they delegate such tasks to services.</source>
          <target state="translated">&lt;em&gt;종속성 주입&lt;/em&gt; (DI)을 사용하면 구성 요소 클래스를 간결하고 효율적으로 유지할 수 있습니다. 서버에서 데이터를 가져 오거나 사용자 입력을 확인하거나 콘솔에 직접 기록하지 않습니다. 그들은 그러한 작업을 서비스에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="7f9f9236bc656bf34111b8eb4925a617356f7c24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Detect template errors earlier&lt;/em&gt; The AOT compiler detects and reports template binding errors during the build step before users can see them.</source>
          <target state="translated">&lt;em&gt;템플릿 오류 조기&lt;/em&gt; 감지 AOT 컴파일러는 빌드 단계에서 템플릿 바인딩 오류를 감지하고보고하여 사용자가이를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9fdcf19709a97c5a5df931e637d3f46d498cbb5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Directives&lt;/em&gt; must be declared in &lt;a href=&quot;ngmodules&quot;&gt;Angular Modules&lt;/a&gt; in the same manner as &lt;em&gt;components&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;지시문&lt;/em&gt; 은 &lt;em&gt;구성 요소&lt;/em&gt; 와 동일한 방식으로 &lt;a href=&quot;ngmodules&quot;&gt;각도 모듈&lt;/a&gt; 에서 선언해야합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ac132d9d56760a41ad9f01bbaddecf154aa2de4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Downgrading&lt;/em&gt;: The act of making an Angular asset, such as a component or service, available to the AngularJS part of the app.</source>
          <target state="translated">&lt;em&gt;다운 그레이드&lt;/em&gt; : 컴포넌트 또는 서비스와 같은 Angular 자산을 앱의 AngularJS 부분에서 사용할 수있게 만드는 행위.</target>
        </trans-unit>
        <trans-unit id="ef26ad95119492987aa4a25ddcfcdc595658c0ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Event binding&lt;/em&gt; lets your app respond to user input in the target environment by updating your application data.</source>
          <target state="translated">&lt;em&gt;이벤트 바인딩을&lt;/em&gt; 사용하면 응용 프로그램 데이터를 업데이트하여 앱이 대상 환경의 사용자 입력에 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4df73741811265c6f85726aaa7b235c46d9b218a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Every&lt;/em&gt; class that injects this service gets the instance created by the second provider. Even classes declared within the first module get the instance created by the second provider.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;이 서비스를 주입하는 &lt;em&gt;모든&lt;/em&gt; 클래스는 두 번째 제공자가 작성한 인스턴스를 가져옵니다. 첫 번째 모듈 내에 선언 된 클래스조차도 두 번째 공급자가 만든 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="344942a87d83448be8ec8fcdad5f5192c53e403a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Faster rendering&lt;/em&gt; With AOT, the browser downloads a pre-compiled version of the application. The browser loads executable code so it can render the application immediately, without waiting to compile the app first.</source>
          <target state="translated">&lt;em&gt;빠른 렌더링&lt;/em&gt; AOT를 사용하면 브라우저가 사전 컴파일 된 버전의 응용 프로그램을 다운로드합니다. 브라우저는 실행 코드를로드하므로 앱을 먼저 컴파일하지 않고 애플리케이션을 즉시 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5f53dca8d4eeba9ee2fd66373cd9a894e8e08d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Faster&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Faster&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="490029b6b63de1a80b702bafe92b64c6faf14e34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fewer asynchronous requests&lt;/em&gt; The compiler &lt;em&gt;inlines&lt;/em&gt; external HTML templates and CSS style sheets within the application JavaScript, eliminating separate ajax requests for those source files.</source>
          <target state="translated">&lt;em&gt;적은 비동기 요청&lt;/em&gt; 컴파일러 는 응용 프로그램 JavaScript 내에서 외부 HTML 템플릿 및 CSS 스타일 시트를 &lt;em&gt;인라인&lt;/em&gt; 하여 해당 소스 파일에 대한 별도의 ajax 요청을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="57f535b3f4c07aa970b7903b2af8d42fbfa3f133" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Form validation&lt;/em&gt; is used to ensure that user input is complete and correct. This section covers adding a single validator to a form control and displaying the overall form status. Form validation is covered more extensively in the &lt;a href=&quot;form-validation&quot;&gt;Form Validation&lt;/a&gt; guide.</source>
          <target state="translated">&lt;em&gt;양식 유효성 검사&lt;/em&gt; 는 사용자 입력이 완전하고 올바른지 확인하는 데 사용됩니다. 이 섹션에서는 양식 컨트롤에 단일 유효성 검사기를 추가하고 전체 양식 상태를 표시하는 방법에 대해 설명합니다. 양식 유효성 검사는 &lt;a href=&quot;form-validation&quot;&gt;양식 유효성 검사&lt;/a&gt; 가이드 에서 더 광범위하게 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="809a0e21fa71f28e44ce8f1e21ea156442081184" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Form validation&lt;/em&gt; is used to validate user input to ensure it's complete and correct. This section covers adding a single validator to a form control and displaying the overall form status. Form validation is covered more extensively in the &lt;a href=&quot;form-validation&quot;&gt;Form Validation&lt;/a&gt; guide.</source>
          <target state="translated">&lt;em&gt;양식 유효성 검사&lt;/em&gt; 는 사용자 입력이 완전하고 정확한지 확인하기 위해 사용됩니다. 이 섹션에서는 단일 유효성 검사기를 폼 컨트롤에 추가하고 전체 폼 상태를 표시합니다. 양식 검증은 &lt;a href=&quot;form-validation&quot;&gt;양식 검증&lt;/a&gt; 안내서 에서보다 광범위하게 다루어집니다 .</target>
        </trans-unit>
        <trans-unit id="97e541ccb4adaab49aa56641d3f79526cc23bf56" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Function calls are not supported. Consider replacing the function or lambda with a reference to an exported function.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;함수 호출은 지원되지 않습니다. 함수 또는 람다를 내 보낸 함수에 대한 참조로 바꾸십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa69d0ab3e0bbad7dfdd0461277bb4b3d9e2f079" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generation schematics&lt;/em&gt; can tell the &lt;code&gt;ng generate&lt;/code&gt; subcommands how to modify projects, add configurations and scripts, and scaffold artifacts that are defined in your library.</source>
          <target state="translated">&lt;em&gt;생성 회로도&lt;/em&gt; 는 &lt;code&gt;ng generate&lt;/code&gt; 부속 명령에 프로젝트 수정, 구성 및 스크립트 추가 및 라이브러리에 정의 된 스캐 폴드 아티팩트를 작성하는 방법을 알려줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0bcccb17c6983207d92208a8e8c5ebabcf055d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HTTP Interception&lt;/em&gt; is a major feature of &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt;. With interception, you declare &lt;em&gt;interceptors&lt;/em&gt; that inspect and transform HTTP requests from your application to the server. The same interceptors may also inspect and transform the server's responses on their way back to the application. Multiple interceptors form a &lt;em&gt;forward-and-backward&lt;/em&gt; chain of request/response handlers.</source>
          <target state="translated">&lt;em&gt;HTTP 차단&lt;/em&gt; 은 &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; 의 주요 기능입니다 . 인터 셉션을 사용하면 애플리케이션에서 서버로 HTTP 요청을 검사하고 변환하는 &lt;em&gt;인터셉터&lt;/em&gt; 를 선언 합니다. 동일한 인터셉터도 서버의 응답을 검사하여 애플리케이션으로 다시 변환 할 수 있습니다. 다중 인터셉터 는 요청 / 응답 핸들러의 &lt;em&gt;앞뒤로&lt;/em&gt; 체인을 형성합니다 .</target>
        </trans-unit>
        <trans-unit id="865c2dba48dbf6477004a59bb7b007492a7bdec6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HashLocationStrategy&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HashLocationStrategy&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d9b8c9e9e9a54b4cb2686f78a88155590f1a53e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Hero&lt;/em&gt; feature routing requirements</source>
          <target state="translated">&lt;em&gt;영웅&lt;/em&gt; 기능 라우팅 요구 사항</target>
        </trans-unit>
        <trans-unit id="eb02de241182382aa8a99aeb9d6c66c40fb98b02" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HttpClientTestingModule&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HttpClientTestingModule&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7784c91c35375783709eab587c4a12206e89e38d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HttpEvents&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HttpEvents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8a33d5bec7c22f6d4d276855e7b462f180c560b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inside&lt;/em&gt; the directive the property is known as &lt;code&gt;highlightColor&lt;/code&gt;. &lt;em&gt;Outside&lt;/em&gt; the directive, where you bind to it, it's known as &lt;code&gt;appHighlight&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;내부&lt;/em&gt; 지시어 속성이로 알려져있다 &lt;code&gt;highlightColor&lt;/code&gt; . 지시문 &lt;em&gt;외부&lt;/em&gt; 에서 바인딩하는 곳은 &lt;code&gt;appHighlight&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b9cf0f4f7ef69743e4aefec7e944992790cfb38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Internationalization&lt;/em&gt; (i18n) is the process of designing and preparing your app to be usable in different locales around the world. &lt;em&gt;Localization&lt;/em&gt; is the process of building versions of your app for different locales, including extracting text for translation into different languages, and formatting data for particular locales.</source>
          <target state="translated">&lt;em&gt;국제화&lt;/em&gt; (i18n)는 전 세계의 다른 로케일에서 사용할 수 있도록 앱을 설계하고 준비하는 프로세스입니다. &lt;em&gt;현지화&lt;/em&gt; 는 다른 언어로 번역하기 위해 텍스트를 추출하고 특정 로케일에 대한 데이터 형식을 지정하는 것을 포함하여 다양한 로케일 용 앱 버전을 빌드하는 프로세스입니다.</target>
        </trans-unit>
        <trans-unit id="a89f541f450ff068747ad627f8271a7400013753" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Internationalization&lt;/em&gt; is the process of designing and preparing your app to be usable in different languages. &lt;em&gt;Localization&lt;/em&gt; is the process of translating your internationalized app into specific languages for particular locales.</source>
          <target state="translated">&lt;em&gt;국제화&lt;/em&gt; 는 앱을 다양한 언어로 사용할 수 있도록 디자인하고 준비하는 프로세스입니다. &lt;em&gt;지역화&lt;/em&gt; 는 국제화 된 앱을 특정 지역의 특정 언어로 번역하는 프로세스입니다.</target>
        </trans-unit>
        <trans-unit id="b14d7c61a242b417dd29f1107aaa6f524ac37812" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Marketing&lt;/em&gt; pages are similar to guide pages. They're located in the &lt;code&gt;content/marketing&lt;/code&gt; directory. While they can be markdown files, they may be static HTML pages or dynamic HTML pages that render with JSON data.</source>
          <target state="translated">&lt;em&gt;마케팅&lt;/em&gt; 페이지는 가이드 페이지와 유사합니다. 그들은에 위치하고있어 &lt;code&gt;content/marketing&lt;/code&gt; 디렉토리. 마크 다운 파일 일 수 있지만 정적 HTML 페이지 또는 JSON 데이터로 렌더링되는 동적 HTML 페이지 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac572721de16ca6ebd38f43b1610d4c8521e75bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Matrix URL&lt;/em&gt; notation is an idea first introduced in a &lt;a href=&quot;http://www.w3.org/DesignIssues/MatrixURIs.html&quot;&gt;1996 proposal&lt;/a&gt; by the founder of the web, Tim Berners-Lee.</source>
          <target state="translated">&lt;em&gt;매트릭스 URL&lt;/em&gt; 표기법은 &lt;a href=&quot;http://www.w3.org/DesignIssues/MatrixURIs.html&quot;&gt;1996 년&lt;/a&gt; 웹 창립자 Tim Berners-Lee가 제안한 아이디어 입니다.</target>
        </trans-unit>
        <trans-unit id="05ec3bf040660715ee63825a49a13a5b4debb49f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Metadata referenced a function that wasn't exported.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;메타 데이터가 내 보내지 않은 함수를 참조했습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="662378892e17e57af8203c4dfa385b61c78298ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Multicasting&lt;/em&gt; is the practice of broadcasting to a list of multiple subscribers in a single execution. With a multicasting observable, you don't register multiple listeners on the document, but instead re-use the first listener and send values out to each subscriber.</source>
          <target state="translated">&lt;em&gt;멀티 캐스팅&lt;/em&gt; 은 한 번의 실행으로 여러 가입자 목록에 브로드 &lt;em&gt;캐스트&lt;/em&gt; 하는 방법입니다. 멀티 캐스팅 옵저버 블을 사용하면 문서에 여러 리스너를 등록하지 않고 대신 첫 번째 리스너를 재사용하고 각 구독자에게 값을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8acb22b16561eb41938a5ace56c8fdf702ed4dc6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NO_ERRORS_SCHEMA&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;NO_ERRORS_SCHEMA&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="078b9efa11c62c27baf54d72fc2bc6d86c649b97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that the HTML image element does not have a closing tag.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HTML 이미지 요소에는 닫는 태그가 없습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b322c6d12f4e067940d10220eef7f17d227393a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: When using absolute paths, the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; file location must begin with &lt;code&gt;src/app&lt;/code&gt; in order to resolve correctly. For custom &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping&quot;&gt;path mapping with absolute paths&lt;/a&gt;, the &lt;code&gt;baseUrl&lt;/code&gt; and &lt;code&gt;paths&lt;/code&gt; properties in the project &lt;code&gt;tsconfig.json&lt;/code&gt; must be configured.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 절대 경로를 사용하는 경우 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 파일 위치는 &lt;code&gt;src/app&lt;/code&gt; 로 시작해야 올바르게 해결됩니다. &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping&quot;&gt;절대 경로&lt;/a&gt; 가있는 사용자 정의 경로 맵핑의 경우 프로젝트 &lt;code&gt;tsconfig.json&lt;/code&gt; 의 &lt;code&gt;baseUrl&lt;/code&gt; 및 &lt;code&gt;paths&lt;/code&gt; 특성을 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c16385949cea761cf429ee25246e0303d21b3ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: When using absolute paths, the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; file location must begin with &lt;code&gt;src/app&lt;/code&gt; in order to resolve correctly. For custom &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping&quot;&gt;path mapping with absolute paths&lt;/a&gt;, you must configure the &lt;code&gt;baseUrl&lt;/code&gt; and &lt;code&gt;paths&lt;/code&gt; properties in the project &lt;code&gt;tsconfig.json&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 절대 경로를 사용할 때 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 파일 위치는 올바르게 해결하기 위해 &lt;code&gt;src/app&lt;/code&gt; 으로 시작해야 합니다. &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping&quot;&gt;절대 경로가있는&lt;/a&gt; 사용자 지정 경로 매핑의 경우 &lt;code&gt;tsconfig.json&lt;/code&gt; 프로젝트에서 &lt;code&gt;baseUrl&lt;/code&gt; 및 &lt;code&gt;paths&lt;/code&gt; 속성을 구성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8f5a8c84807804c1921f9174da4957c65cc014f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OR&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;OR&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faccb051fdfb359f41d7d03c3654bd3b199eb902" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;이 변수의 값은 템플릿 컴파일러에 필요하므로 초기화 된 변수 및 상수 만 참조 할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="248ecacc61c3c54dd15a3259ad87f0fa52dd2e4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ParamMap&lt;/em&gt; API</source>
          <target state="translated">&lt;em&gt;ParamMap&lt;/em&gt; API</target>
        </trans-unit>
        <trans-unit id="b1a8a3d9e7d202c24a6ef02525e126c95803719b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AOT compilation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AOT 컴파일을 지원하는 하이브리드 업그레이드 앱용 &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부입니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20524fe735834006efa1ffc2c0074917960eb96d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AOT compilation&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AOT 컴파일을 지원하는 하이브리드 업그레이드 앱용 &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d119bbf8791500fe9fb68ed1d9455efad7e60af0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AoT compilation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AoT 컴파일을 지원하는 하이브리드 업그레이드 앱을위한 &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부입니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed434cf1eaa64e7afaf4a7fbc6df8dcb6e622fb5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AoT compilation&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AoT 컴파일을 지원하는 하이브리드 업그레이드 앱을위한 &lt;a href=&quot;api?query=upgrade%2Fstatic&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="551118889563f99ef1cd203e5be48b3c03ed0cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AOT compilation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AOT 컴파일을 지원하는 하이브리드 업그레이드 앱용 &lt;a href=&quot;api?query=upgrade/static&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부입니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="148d75a675560750a5debbb2425db621bcc620ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AOT compilation&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AOT 컴파일을 지원하는 하이브리드 업그레이드 앱용 &lt;a href=&quot;api?query=upgrade/static&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e8f078ca873407286d10e95638f7a70a2c1346a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AoT compilation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AoT 컴파일을 지원하는 하이브리드 업그레이드 앱을위한 &lt;a href=&quot;api?query=upgrade/static&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부입니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7829bb8e064b9f0128518e96b534c7c073468cc1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Part of the &lt;a href=&quot;api?query=upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; library for hybrid upgrade apps that support AoT compilation&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AoT 컴파일을 지원하는 하이브리드 업그레이드 앱을위한 &lt;a href=&quot;api?query=upgrade/static&quot;&gt;업그레이드 / 정적&lt;/a&gt; 라이브러리 의 일부&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f9bdedba9183d2622b7e30ce801b8ec8b46dd6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pipe&lt;/em&gt; it onto the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; method result just before the error handler.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;오류 처리기 바로 전에 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 메소드 결과 에 &lt;em&gt;파이프&lt;/em&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f09c10ac3025c9f539dab2aa07fc5df8bf2e0e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Preloading&lt;/em&gt; is something in between. Consider the &lt;em&gt;Crisis Center&lt;/em&gt;. It isn't the first view that a user sees. By default, the &lt;em&gt;Heroes&lt;/em&gt; are the first view. For the smallest initial payload and fastest launch time, you should eagerly load the &lt;code&gt;AppModule&lt;/code&gt; and the &lt;code&gt;HeroesModule&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;예압&lt;/em&gt; 은 중간에 있습니다. &lt;em&gt;위기 센터를&lt;/em&gt; 고려하십시오 . 사용자가 처음 보는 것은 아닙니다. 기본적으로 &lt;em&gt;영웅&lt;/em&gt; 이 첫 번째보기입니다. 초기 페이로드를 &lt;code&gt;HeroesModule&lt;/code&gt; 하고 시작 시간을 단축하려면 &lt;code&gt;AppModule&lt;/code&gt; 및 HeroesModule을 열심히로드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="47d7289b2eda862a91f5c079397efbfee9c6232e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Property binding&lt;/em&gt; lets you interpolate values that are computed from your application data into the HTML.</source>
          <target state="translated">&lt;em&gt;속성 바인딩을&lt;/em&gt; 사용하면 응용 프로그램 데이터에서 HTML로 계산 된 값을 보간 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08a982fce1c31b173e7e80a34c3693c045f58d46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Query parameters&lt;/em&gt; and &lt;em&gt;fragments&lt;/em&gt; are also available through the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service. Just like &lt;em&gt;route parameters&lt;/em&gt;, the query parameters and fragments are provided as an &lt;code&gt;Observable&lt;/code&gt;. The updated &lt;em&gt;Crisis Admin&lt;/em&gt; component feeds the &lt;code&gt;Observable&lt;/code&gt; directly into the template using the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;쿼리 매개 변수&lt;/em&gt; 및 &lt;em&gt;조각도 &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 서비스를 통해 사용할 수 있습니다 . 그냥 같은 &lt;em&gt;루트 매개 변수&lt;/em&gt; 쿼리 매개 변수와 조각은으로 제공됩니다 &lt;code&gt;Observable&lt;/code&gt; . 업데이트 된 &lt;em&gt;Crisis Admin&lt;/em&gt; 구성 요소 는 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; 를 사용하여 &lt;code&gt;Observable&lt;/code&gt; 을 템플리트에 직접 공급합니다 .</target>
        </trans-unit>
        <trans-unit id="570506f6eb096029e4a2225fb5f6568207e54d4c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Reactive forms&lt;/em&gt; provide a model-driven approach to handling form inputs whose values change over time. This guide shows you how to create and update a simple form control, progress to using multiple controls in a group, validate form values, and implement more advanced forms.</source>
          <target state="translated">&lt;em&gt;반응성 양식&lt;/em&gt; 은 시간이 지남에 따라 값이 변하는 양식 입력을 처리하기위한 모델 중심 접근 방식을 제공합니다. 이 안내서는 간단한 양식 제어를 작성 및 업데이트하고, 그룹에서 여러 제어를 사용하여 진행하고, 양식 값을 검증하고, 고급 양식을 구현하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a9dd056dfe8ff5bc4cab7c0cf27bfb6d14059868" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Reactive forms&lt;/em&gt; use existing instances of a &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to build a form model. This form model is synced with form input elements through directives to track and communicate changes back to the form model. Changes to the value and status of the controls are provided as observables.</source>
          <target state="translated">&lt;em&gt;반응성 양식&lt;/em&gt; 은 기존의 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 인스턴스 를 사용하여 양식 모델을 빌드합니다. 이 양식 모델은 지시문을 통해 양식 입력 요소와 동기화되어 변경 사항을 추적하고 양식 모델로 다시 전달합니다. 컨트롤의 값과 상태에 대한 변경 사항은 관찰 가능 항목으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f4cf523dc45094b6ce89bea3afbfa3fe3c009483" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Reference to a local (non-exported) symbol 'symbol name'. Consider exporting the symbol.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;로컬 (내보내기되지 않은) 심볼 '기호 이름'에 대한 참조입니다. 심볼 내보내기를 고려하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="363a8b5871cab50ac9e09344a1b37ed1baaa4a90" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Reference to a non-exported class &lt;class&gt;. Consider exporting the class.&lt;/class&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;내 보내지 않은 클래스에 대한 참조 &lt;class&gt;. 클래스 내보내기를 고려하십시오.&lt;/class&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="54a5ef37e59e0bd95980d6155fb4055ddc3fc182" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;템플릿 컴파일러는 내 보낸 변형 된 변수 또는 상수를 참조 할 수 없습니다. 파괴를 피하려면 이것을 단순화하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3474ac0c6a4b87662220f5fe19b7a966b7d4071c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Sanitization&lt;/em&gt; is the inspection of an untrusted value, turning it into a value that's safe to insert into the DOM. In many cases, sanitization doesn't change a value at all. Sanitization depends on context: a value that's harmless in CSS is potentially dangerous in a URL.</source>
          <target state="translated">&lt;em&gt;살균&lt;/em&gt; 은 신뢰할 수없는 값을 검사하여 DOM에 삽입하기에 안전한 값으로 바꿉니다. 많은 경우에, 살균은 값을 전혀 바꾸지 않습니다. 위생은 컨텍스트에 따라 달라집니다. CSS에서 무해한 값은 URL에서 잠재적으로 위험합니다.</target>
        </trans-unit>
        <trans-unit id="a9a167149261dfc1b8c0b0db666613f379842e1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Service&lt;/em&gt; is a broad category encompassing any value, function, or feature that an app needs. A service is typically a class with a narrow, well-defined purpose. It should do something specific and do it well.</source>
          <target state="translated">&lt;em&gt;서비스&lt;/em&gt; 는 앱에 필요한 모든 가치, 기능 또는 기능을 포함하는 광범위한 범주입니다. 서비스는 일반적으로 좁고 명확하게 정의 된 클래스입니다. 특정한 것을하고 잘해야합니다.</target>
        </trans-unit>
        <trans-unit id="01d66ee533ca9b312bf287e7f6d0aa2580c75f3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Smaller Angular framework download size&lt;/em&gt; There's no need to download the Angular compiler if the app is already compiled. The compiler is roughly half of Angular itself, so omitting it dramatically reduces the application payload.</source>
          <target state="translated">&lt;em&gt;작은 Angular 프레임 워크 다운로드 크기&lt;/em&gt; 앱이 이미 컴파일 된 경우 Angular 컴파일러를 다운로드 할 필요가 없습니다. 컴파일러는 Angular 자체의 약 절반이므로 생략하면 응용 프로그램 페이로드가 크게 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="b95af85a96c738752b3760fc673a646d763d9239" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Snapshot&lt;/em&gt;: the &lt;em&gt;no-observable&lt;/em&gt; alternative</source>
          <target state="translated">&lt;em&gt;스냅 샷&lt;/em&gt; : &lt;em&gt;관찰&lt;/em&gt; 할 수 &lt;em&gt;없는&lt;/em&gt; 대안</target>
        </trans-unit>
        <trans-unit id="32b4e6525501d989d2bb3879c8ea120516eca1cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Structural Directives&lt;/em&gt; change the structure of the view. Two examples are &lt;a href=&quot;built-in-directives#ngFor&quot;&gt;NgFor&lt;/a&gt; and &lt;a href=&quot;built-in-directives#ngIf&quot;&gt;NgIf&lt;/a&gt;. Learn about them in the &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt; guide.</source>
          <target state="translated">&lt;em&gt;Structural Directive&lt;/em&gt; 는 뷰의 구조를 변경합니다. 두 가지 예는 &lt;a href=&quot;built-in-directives#ngFor&quot;&gt;NgFor&lt;/a&gt; 및 &lt;a href=&quot;built-in-directives#ngIf&quot;&gt;NgIf&lt;/a&gt; 입니다. &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt; 가이드 에서 이에 대해 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="0268e6c92692f198865ab89c7047504aabd68aec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Structural Directives&lt;/em&gt; change the structure of the view. Two examples are &lt;a href=&quot;template-syntax#ngFor&quot;&gt;NgFor&lt;/a&gt; and &lt;a href=&quot;template-syntax#ngIf&quot;&gt;NgIf&lt;/a&gt;. Learn about them in the &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt; guide.</source>
          <target state="translated">&lt;em&gt;구조 지시문&lt;/em&gt; 은 뷰의 구조를 변경합니다. 두 가지 예는 &lt;a href=&quot;template-syntax#ngFor&quot;&gt;NgFor&lt;/a&gt; 및 &lt;a href=&quot;template-syntax#ngIf&quot;&gt;NgIf&lt;/a&gt; 입니다. &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt; 안내서 에서 이에 대해 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="860d90e628af7e4ee3c5238f65eb253f93b13449" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Structural directives&lt;/em&gt; alter layout by adding, removing, and replacing elements in the DOM. The example template uses two built-in structural directives to add application logic to how the view is rendered.</source>
          <target state="translated">&lt;em&gt;구조적 지시문&lt;/em&gt; 은 DOM에서 요소를 추가, 제거 및 교체하여 레이아웃을 변경합니다. 예제 템플릿은 내장 된 두 개의 구조적 지시문을 사용하여 뷰가 렌더링되는 방식에 응용 프로그램 논리를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e6d7fac97f1d09461057cd9221fe5c097dfe4005" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Tagged template expressions are not supported in metadata.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;태그가 지정된 템플릿 표현식은 메타 데이터에서 지원되지 않습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e9e9a8a1a5e8738a27de3f709f1cb82d9a71276" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Take each item in the &lt;code&gt;items&lt;/code&gt; array, store it in the local &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; looping variable, and make it available to the templated HTML for each iteration.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;items&lt;/code&gt; 배열의 각 항목을 가져 와서 로컬 &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; 반복 변수 에 저장하고 각 반복에 대해 템플릿 HTML에 사용할 수 있도록합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6a406e793a693d3b4bbc51b9602866f4b8813c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Take each item in the &lt;code&gt;items&lt;/code&gt; array, store it in the local &lt;code&gt;item&lt;/code&gt; looping variable, and make it available to the templated HTML for each iteration.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;items&lt;/code&gt; 배열의 각 항목을 가져 와서 로컬 &lt;code&gt;item&lt;/code&gt; 루프 변수 에 저장하고 각 반복에 대해 템플릿 HTML에서 사용할 수 있도록합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2fa06875412d7dac6a0e90087abc139aed50c586" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Template-driven forms&lt;/em&gt; rely on directives such as &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;forms/ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; create the form model for you, so any changes to the form are communicated through the template.</source>
          <target state="translated">&lt;em&gt;템플릿 기반의 형태는&lt;/em&gt; 다음과 같은 지침에 의존 &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;forms/ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 형태를 변경 템플릿을 통해 전달되도록 만들 당신을위한 양식 모델.</target>
        </trans-unit>
        <trans-unit id="aa22f680299e24b285d35b1c262a85af06ca648c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TestBed.get()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TestBed.get()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e9c466fe8f2ceb824be8510466223d35d8c0221" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TestBed.inject()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TestBed.inject()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d63550b290d47aee46d1a6789f742ed781097346" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TestBed&lt;/em&gt; class summary</source>
          <target state="translated">&lt;em&gt;TestBed&lt;/em&gt; 클래스 요약</target>
        </trans-unit>
        <trans-unit id="99ae50175202f5d7931a74c80c706a0b6a680586" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;That test fails&lt;/em&gt; with the message:</source>
          <target state="translated">&lt;em&gt;이 테스트&lt;/em&gt; 는 다음 메시지와 함께 &lt;em&gt;실패&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="aafa207c4f833ca254af9566917f30b12ba45347" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The compiler encountered a type and can't determine which module exports that type.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;컴파일러에서 형식이 발생하여 해당 형식을 내보내는 모듈을 확인할 수 없습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d74c294fc302d4f77d3fa27731cb93807343274d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The compiler encountered an expression it didn't understand while evaluating Angular metadata.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;컴파일러에서 Angular 메타 데이터를 평가하는 동안 이해하지 못하는 표현식이 발생했습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06a6c953c9867e606d8f4cdd281aafb9321f1848" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The compiler expected a name in an expression it was evaluating.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;컴파일러는 평가중인 표현식에서 이름을 예상했습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b51f341107d1b5a4533522e0fb3960b40794662" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The compiler expected a reference to a symbol at the location specified in the error message.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;컴파일러는 오류 메시지에 지정된 위치에서 기호에 대한 참조를 예상했습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f753a566cadbf0a54e91f0128874b818d733ee7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This&lt;/em&gt; &quot;Authors Doc Style Guide&quot; has its own sample application, located in the &lt;code&gt;content/examples/docs-style-guide&lt;/code&gt; folder.</source>
          <target state="translated">&lt;em&gt;이&lt;/em&gt; &quot;저자 문서 스타일 안내서&quot;에는 &lt;code&gt;content/examples/docs-style-guide&lt;/code&gt; 폴더에 자체 샘플 애플리케이션이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="169b0665e7d945802943f3d9a25cd003702d0aef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This&lt;/em&gt; application won't re-use the &lt;code&gt;HeroDetailComponent&lt;/code&gt;. The user always returns to the hero list to select another hero to view. There's no way to navigate from one hero detail to another hero detail without visiting the list component in between. Therefore, the router creates a new &lt;code&gt;HeroDetailComponent&lt;/code&gt; instance every time.</source>
          <target state="translated">&lt;em&gt;이&lt;/em&gt; 응용 프로그램은 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 를 재사용하지 않습니다 . 사용자는 항상 다른 영웅을 선택하기 위해 영웅 목록으로 돌아갑니다. 중간에있는 목록 구성 요소를 방문하지 않고 한 영웅 세부 사항에서 다른 영웅 세부 사항으로 이동할 수있는 방법이 없습니다. 따라서 라우터는 매번 새로운 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a52b17bea7da0ecbd0aed17cfd3e9e73f14205c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Tutorial&lt;/em&gt; pages are exactly like guide pages. The only difference is that they reside in &lt;code&gt;content/tutorial&lt;/code&gt; instead of &lt;code&gt;content/guide&lt;/code&gt; and have URLs like &lt;code&gt;tutorial/{page-name}&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;튜토리얼&lt;/em&gt; 페이지는 정확히 가이드 페이지와 같습니다. 유일한 차이점은 &lt;code&gt;content/guide&lt;/code&gt; 대신 &lt;code&gt;content/tutorial&lt;/code&gt; 에 있으며 &lt;code&gt;tutorial/{page-name}&lt;/code&gt; 과 같은 URL이 있다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="120d3eb4e7d3485b193beafc9bc8c5479efb775c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Upgrading&lt;/em&gt;: The act of making an AngularJS asset, such as a component or service, available to the Angular part of the app.</source>
          <target state="translated">&lt;em&gt;업그레이드&lt;/em&gt; : 컴포넌트 또는 서비스와 같은 AngularJS 자산을 앱의 Angular 부분에서 사용할 수있게 만드는 행위.</target>
        </trans-unit>
        <trans-unit id="78ebf0743e202175228a05653cfcaa1364ed5681" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;You're not using Angular yet&lt;/em&gt;. There are no bindings or extra directives, just layout.</source>
          <target state="translated">&lt;em&gt;아직 Angular를 사용하고 있지 않습니다&lt;/em&gt; . 바인딩이나 추가 지시문이 없으며 레이아웃 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb0f5aee95da7ac03008b89165632e36842077e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;You&lt;/em&gt; didn't declare the &lt;code&gt;HeroesComponent&lt;/code&gt;. So why did the application work?</source>
          <target state="translated">&lt;em&gt;당신은&lt;/em&gt; 선언하지 않았다 &lt;code&gt;HeroesComponent&lt;/code&gt; 을 . 응용 프로그램이 작동 한 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="9e1edb0454e6b16aaea5552f370f28e047e73304" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;beforeEach()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;beforeEach()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c0e0e57bc0d7fbee959759182b30f4a1f33125a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;body&lt;/em&gt; - The data to POST in the body of the request.</source>
          <target state="translated">&lt;em&gt;몸&lt;/em&gt; - 요청의 본문에 POST로 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="216baa2afa5861f0b74b106d296bb98d73a6224a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;click()&lt;/em&gt; helper</source>
          <target state="translated">&lt;em&gt;click ()&lt;/em&gt; 도우미</target>
        </trans-unit>
        <trans-unit id="29f4c4139b6200ca221b9124d74016064b434368" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compileComponents()&lt;/em&gt; is async</source>
          <target state="translated">&lt;em&gt;compileComponents ()&lt;/em&gt; 가 비동기입니다</target>
        </trans-unit>
        <trans-unit id="38d0445e86fbdb4692f30a3525335a99ab150ab1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compileComponents()&lt;/em&gt; is harmless</source>
          <target state="translated">&lt;em&gt;compileComponents ()&lt;/em&gt; 는 무해합니다</target>
        </trans-unit>
        <trans-unit id="5b97cfbffa462acf131113c8cf7f991beab51ae2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;configuration&lt;/em&gt;: (optional) The name of a specific configuration override for the given target, as defined in the &lt;code&gt;angular.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;em&gt;configuration&lt;/em&gt; : (선택 사항) &lt;code&gt;angular.json&lt;/code&gt; 파일에 정의 된대로 지정된 대상에 대한 특정 구성 재정의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="5e41cc8d42c7e5341dc3d4641bcf50bb17c52be9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;createComponent()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;createComponent()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c25ee19b8f911b5f3b7054199f7c41e37064b40d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;createComponent()&lt;/em&gt; does not bind data</source>
          <target state="translated">&lt;em&gt;createComponent ()&lt;/em&gt; 가 데이터를 바인딩하지 않습니다</target>
        </trans-unit>
        <trans-unit id="2c831ae3a2e9ac2fdd8af0d5a200126c764cb8b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;detectChanges()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;detectChanges()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a734dcf69993521389a7039066200818f66666a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;extractedUrl&lt;/em&gt; : The initial target URL after being parsed with &lt;code&gt;UrlSerializer.extract()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;extractedUrl&lt;/em&gt; : 사용한 구문 분석 된 후 초기 목표 URL &lt;code&gt;UrlSerializer.extract()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5538755336c6ad00b542feaeb91b44e906cda443" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;extras&lt;/em&gt; : A &lt;code&gt;&lt;a href=&quot;navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; options object that controlled the strategy used for this navigation.</source>
          <target state="translated">&lt;em&gt;extras&lt;/em&gt; : 이 탐색에 사용되는 전략을 제어 하는 &lt;code&gt;&lt;a href=&quot;navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; 옵션 개체입니다.</target>
        </trans-unit>
        <trans-unit id="f59482708cea3a4d8a8567b7af2e9881490ae095" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;finalUrl&lt;/em&gt; : The extracted URL after redirects have been applied. This URL may not be available immediately, therefore this property can be &lt;code&gt;undefined&lt;/code&gt;. It is guaranteed to be set after the &lt;code&gt;&lt;a href=&quot;routesrecognized&quot;&gt;RoutesRecognized&lt;/a&gt;&lt;/code&gt; event fires.</source>
          <target state="translated">&lt;em&gt;finalUrl&lt;/em&gt; : 리디렉션이 적용된 후 추출 된 URL입니다. 이 URL은 즉시 사용 가능하지 않을 수 있으므로이 속성은 &lt;code&gt;undefined&lt;/code&gt; 않을 수 있습니다 . &lt;code&gt;&lt;a href=&quot;routesrecognized&quot;&gt;RoutesRecognized&lt;/a&gt;&lt;/code&gt; 이벤트가 발생한 후에 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="b7865199872ec08dece274b2d52744a32080a585" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;group&lt;/em&gt; : A segment group.</source>
          <target state="translated">&lt;em&gt;group&lt;/em&gt; : 세그먼트 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="176db9e47235cfee2230dfad8303d5ecd3d18009" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;id&lt;/em&gt; : A unique id for the schema in the collection.</source>
          <target state="translated">&lt;em&gt;id&lt;/em&gt; : 컬렉션의 스키마에 대한 고유 ID입니다.</target>
        </trans-unit>
        <trans-unit id="40af2cce21f65b3825b27c3e2959c6c6e85c1513" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;id&lt;/em&gt; : The unique identifier of the current navigation.</source>
          <target state="translated">&lt;em&gt;id&lt;/em&gt; : 현재 탐색의 고유 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="398061a6fcba6effe1cb44a91edb16409b05c904" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;id&lt;/em&gt;: A unique id for the schema in the collection.</source>
          <target state="translated">&lt;em&gt;id&lt;/em&gt; : 컬렉션에있는 스키마의 고유 ID입니다.</target>
        </trans-unit>
        <trans-unit id="c80cf201225442d4c22a4ab776f1691a5e85fa1d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initialUrl&lt;/em&gt; : The target URL passed into the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;#navigateByUrl()&lt;/code&gt; call before navigation. This is the value before the router has parsed or applied redirects to it.</source>
          <target state="translated">&lt;em&gt;initialUrl&lt;/em&gt; : 탐색 전에 &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;#navigateByUrl()&lt;/code&gt; 호출에 전달 된 대상 URL 입니다. 라우터가 리디렉션을 구문 분석하거나 적용하기 전의 값입니다.</target>
        </trans-unit>
        <trans-unit id="f43459df2ceadb1799484a2e69ce7e8e5ae15971" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; : The name you want to provide for the created service.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; : 생성 된 서비스에 제공하려는 이름입니다.</target>
        </trans-unit>
        <trans-unit id="28671604a95deb282bedc30717a4505f8fc41784" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt;: The name you want to provide for the created service.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; : 생성 된 서비스에 제공 할 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8ce60f544f10337bbe383f8424ba1122a7a0eb18" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nativeElement&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;nativeElement&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a98c5bfd042635eb99c6184377ebd6dcab36044" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;options&lt;/em&gt;` - An object containing method options which, in this case, &lt;a href=&quot;http#adding-headers&quot;&gt;specify required headers&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;옵션&lt;/em&gt; `-이 경우, 객체 포함하는 방법 옵션 &lt;a href=&quot;http#adding-headers&quot;&gt;필요한 헤더를 지정합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b0ff0cab5a64ca20ccaba22d3ff07a237533b7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; : Overrides the path provided to the schematic. The default path value is based on the current working directory.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; : 회로도에 제공된 경로를 무시합니다. 기본 경로 값은 현재 작업 디렉토리를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="e7bfa776c7d59189d694828ab24c64349952b2a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt;: Overrides the path provided to the schematic. The default path value is based on the current working directory.</source>
          <target state="translated">&lt;em&gt;경로&lt;/em&gt; : 회로도에 제공된 경로를 재정의합니다. 기본 경로 값은 현재 작업 디렉토리를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="289cbc8e4dce0799de6e3517177ea20690b63454" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;previousNavigation&lt;/em&gt; : The previously successful &lt;code&gt;&lt;a href=&quot;navigation&quot;&gt;Navigation&lt;/a&gt;&lt;/code&gt; object. Only one previous navigation is available, therefore this previous &lt;code&gt;&lt;a href=&quot;navigation&quot;&gt;Navigation&lt;/a&gt;&lt;/code&gt; object has a &lt;code&gt;null&lt;/code&gt; value for its own &lt;code&gt;previousNavigation&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;previousNavigation&lt;/em&gt; : 이전에 성공한 &lt;code&gt;&lt;a href=&quot;navigation&quot;&gt;Navigation&lt;/a&gt;&lt;/code&gt; 개체입니다. 이전 탐색을 하나만 사용할 수 있으므로이 이전 &lt;code&gt;&lt;a href=&quot;navigation&quot;&gt;Navigation&lt;/a&gt;&lt;/code&gt; 객체는 자신의 &lt;code&gt;previousNavigation&lt;/code&gt; 에 대해 &lt;code&gt;null&lt;/code&gt; 값을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="e1ccfdc2202382a82e98a4ef2a1654e3c1250168" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;project&lt;/em&gt; : Provides a specific project to run the schematic on. In the schematic, you can provide a default if the option is not provided by the user.</source>
          <target state="translated">&lt;em&gt;project&lt;/em&gt; : 회로도를 실행할 특정 프로젝트를 제공합니다. 회로도에서 사용자가 옵션을 제공하지 않으면 기본값을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a7cdbfc879b510889487e78b56fc01da6371948" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;project&lt;/em&gt;: Provides a specific project to run the schematic on. In the schematic, you can provide a default if the option is not provided by the user.</source>
          <target state="translated">&lt;em&gt;프로젝트&lt;/em&gt; : 회로도를 실행할 특정 프로젝트를 제공합니다. 회로도에서 사용자가 옵션을 제공하지 않은 경우 기본값을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3b7183021d695d98a340ed6748ebe5b2745b308" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;project&lt;/em&gt;: The name of the Angular CLI project that the target is associated with.</source>
          <target state="translated">&lt;em&gt;project&lt;/em&gt; : 대상이 연관된 Angular CLI 프로젝트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="eefad31c91f082e68f03dc8d54e68fb59e0e69de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;properties&lt;/em&gt; : An object that defines the available options for the schematic.</source>
          <target state="translated">&lt;em&gt;properties&lt;/em&gt; : 회로도에 사용 가능한 옵션을 정의하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="fab769ffd12a1c1c631779c943f41961cf8f1cbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;properties&lt;/em&gt;: An object that defines the available options for the schematic.</source>
          <target state="translated">&lt;em&gt;properties&lt;/em&gt; : 회로도에 사용할 수있는 옵션을 정의하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="920f0226bf2bde1b457a04463a43e399a88cb27a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;route&lt;/em&gt; : The route to match against.</source>
          <target state="translated">&lt;em&gt;route&lt;/em&gt; : 일치시킬 경로입니다.</target>
        </trans-unit>
        <trans-unit id="bbbb9a4236ab66952f4f8408ed5148aa26fee913" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;segments&lt;/em&gt; : An array of URL segments.</source>
          <target state="translated">&lt;em&gt;segment&lt;/em&gt; : URL 세그먼트의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="3cf89cfae3daadcbb03fbf20b5b3d2eb64fea707" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;switchMap()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;switchMap()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5926491b90817001da9cf5e0c0b45b6795826164" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;target&lt;/em&gt;: A named builder configuration from the &lt;code&gt;architect&lt;/code&gt; section of the &lt;code&gt;angular.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;em&gt;target&lt;/em&gt; : &lt;code&gt;angular.json&lt;/code&gt; 파일 의 &lt;code&gt;architect&lt;/code&gt; 섹션 에서 명명 된 빌더 구성 .</target>
        </trans-unit>
        <trans-unit id="7dfe51231fa708d041bd5816c31f6f1edf96ce2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;title&lt;/em&gt; : A human-readable description of the schema.</source>
          <target state="translated">&lt;em&gt;title&lt;/em&gt; : 사람이 읽을 수있는 스키마 설명.</target>
        </trans-unit>
        <trans-unit id="25aac149de2ffd79949f2e5db878484ae3212cab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;title&lt;/em&gt;: A human-readable description of the schema.</source>
          <target state="translated">&lt;em&gt;title&lt;/em&gt; : 사람이 읽을 수있는 스키마 설명입니다.</target>
        </trans-unit>
        <trans-unit id="09b17aae90ccf5ea7e365a7b1efe3bf765390a9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;trigger&lt;/em&gt; : Identifies how this navigation was triggered. -- 'imperative'--Triggered by &lt;code&gt;router.navigateByUrl&lt;/code&gt; or &lt;code&gt;router.navigate&lt;/code&gt;. -- 'popstate'--Triggered by a popstate event. -- 'hashchange'--Triggered by a hashchange event.</source>
          <target state="translated">&lt;em&gt;trigger&lt;/em&gt; :이 탐색이 트리거 된 방법을 식별합니다. - 'imperative'- &lt;code&gt;router.navigateByUrl&lt;/code&gt; 또는 &lt;code&gt;router.navigate&lt;/code&gt; 에 의해 트리거됩니다 . - 'popstate'-popstate 이벤트에 의해 트리거됩니다. - 'hashchange'-해시 변경 이벤트에 의해 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="d2b3b753924f34bbe7e7a2f70ea409fc426c08e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;triggerEventHandler&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;triggerEventHandler&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1cc6d5af73f24596b71dcfe3a6d5922d82367eaf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; : A descriptor for the type provided by the properties.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt; : 속성에서 제공하는 형식에 대한 설명자입니다.</target>
        </trans-unit>
        <trans-unit id="4900f938013152ec7ed240ee079a09bb8e116909" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt;: A descriptor for the type provided by the properties.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt; : 속성에서 제공하는 유형에 대한 설명자입니다.</target>
        </trans-unit>
        <trans-unit id="4acdbdb0f77f06d5d31851a95d4a8465f486103c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;whenStable&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;whenStable&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a376b24abe09164adfc3459c6f6824606003831" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;__index&quot;&gt; __index() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;__index&quot;&gt; __index() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="472f25e8b61e1f0fb6ae19b3f0313fc07e7869b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;absurl&quot;&gt; absUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;absurl&quot;&gt; absUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c6aadffcee9681cb6a59a777203986c3caa33f1a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;activateupdate&quot;&gt; activateUpdate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;activateupdate&quot;&gt; activateUpdate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a7d246374d7c6a38958c8aead727a6a9aba307a4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;activatewith&quot;&gt; activateWith() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;activatewith&quot;&gt; activateWith() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d168aa593189225e8c1ca52faf34f1955ff3c8db" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addcase&quot;&gt; addCase() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addcase&quot;&gt; addCase() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="149b6f630403daf93a6358db2c192f740e639e6f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addclass&quot;&gt; addClass() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addclass&quot;&gt; addClass() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="70f8fc2f124229e8c1caed99ae1e79742a50808e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addcontrol&quot;&gt; addControl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addcontrol&quot;&gt; addControl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5d0a8498c0bddf15a3d2882d3c51718a49891375" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addeventlistener&quot;&gt; addEventListener() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addeventlistener&quot;&gt; addEventListener() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b8b10982eff496503b70ee4d1620a6f946f8276" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addformarray&quot;&gt; addFormArray() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addformarray&quot;&gt; addFormArray() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="11adbc280a38e1ba2913c323b8423a76209d02d7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addformgroup&quot;&gt; addFormGroup() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addformgroup&quot;&gt; addFormGroup() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="558125c73b0f62ca5ac74949d03b9ec296390166" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addglobaleventlistener&quot;&gt; addGlobalEventListener() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addglobaleventlistener&quot;&gt; addGlobalEventListener() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="45b8244ccdf4a316776faea20a170f7a986e5efd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addtag&quot;&gt; addTag() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addtag&quot;&gt; addTag() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ca316d275231498c6834ee158b2f86e57ccc2d8e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addtags&quot;&gt; addTags() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addtags&quot;&gt; addTags() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9836ca86a31107893484abd0d6b0cfd1ca331d5d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;addtowindow&quot;&gt; addToWindow() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;addtowindow&quot;&gt; addToWindow() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97642765558ce7d57067803aeb45d408baf71981" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;all&quot;&gt; all() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;all&quot;&gt; all() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d5b5677eeedabb7fa7652790297f838173cc3b53" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;animate&quot;&gt; animate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;animate&quot;&gt; animate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="86015f9d712dfcb38de5b69ef5312680e362ab11" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;animations&quot;&gt;animations&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;animations&quot;&gt;animations&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7cbe6ba87936cbb76ce45c044c1c99257c04c5b3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;append&quot;&gt; append() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;append&quot;&gt; append() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce81aa5ffed279a8fd200f8737526facf6545b27" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;appendchild&quot;&gt; appendChild() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;appendchild&quot;&gt; appendChild() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c272c03d635fd5d1af736b37e10ceb61c3234d67" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;areequal&quot;&gt; areEqual() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;areequal&quot;&gt; areEqual() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d73054eb910c340c6e5ad0ea8f28cd98365bf39" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;args&quot;&gt;args&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;args&quot;&gt;args&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="401dc350f6c470748a4ad51f5c288288375525ac" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;array&quot;&gt; array() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;array&quot;&gt; array() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="24c0412d42bf9ad22ecc3b9888b87866ee0295e7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;assertinangularzone&quot;&gt; assertInAngularZone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;assertinangularzone&quot;&gt; assertInAngularZone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d5bdcfef1c4b7f462914cce2be7f2b0cf60c9d83" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;assertnotinangularzone&quot;&gt; assertNotInAngularZone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;assertnotinangularzone&quot;&gt; assertNotInAngularZone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ab6df67da9fef6d6084a4443496ff06338796edb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;at&quot;&gt; at() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;at&quot;&gt; at() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9031418484bf94738179be0dafbb755b4558fed6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;attach&quot;&gt; attach() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;attach&quot;&gt; attach() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="115a031de7234e1d4e23e5858bd956b76a47c257" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;attachtozone&quot;&gt; attachToZone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;attachtozone&quot;&gt; attachToZone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="38f86d8972990e7d9a6ae415eeb22a302eca49fb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;attachview&quot;&gt; attachView() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;attachview&quot;&gt; attachView() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="178a3d94206e76c7928fa0a38dbc6a5b45aa10a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;attachviewafter&quot;&gt; attachViewAfter() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;attachviewafter&quot;&gt; attachViewAfter() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a7982e7b6f6427cd20bbc53a8e22c699217a272c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;attributechangedcallback&quot;&gt; attributeChangedCallback() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;attributechangedcallback&quot;&gt; attributeChangedCallback() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1457e51c9b2ef737949c0fc346cca75506f3989f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;attributename&quot;&gt;attributeName&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;attributename&quot;&gt;attributeName&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32196c9e8d74a04867f5e1bec29b18768714eb15" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;autodetectchanges&quot;&gt; autoDetectChanges() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;autodetectchanges&quot;&gt; autoDetectChanges() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c585ca2fc0957bbb9c67bdfcee7667595a68e3c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;back&quot;&gt; back() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;back&quot;&gt; back() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0cdd11e48402f55c265a2a798898a3b6ec32095" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;beforedestroy&quot;&gt; beforeDestroy() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;beforedestroy&quot;&gt; beforeDestroy() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="09aee1e9a262575fff0a723857332a719aa4dc98" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;begin&quot;&gt; begin() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;begin&quot;&gt; begin() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bca76abedc7a8c31372c63544038679b32af1e1b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bindingpropertyname&quot;&gt;bindingPropertyName&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bindingpropertyname&quot;&gt;bindingPropertyName&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78ff94c12fc2437fdc45f600e7ecc40c590fac49" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bootstrap&quot;&gt; bootstrap() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bootstrap&quot;&gt; bootstrap() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb9d73592f471f8fb587b095a74f37ee60233c4c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bootstrap&quot;&gt;bootstrap&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bootstrap&quot;&gt;bootstrap&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="56b8139f15b2068b0f70e0e1a5b6768c0d7479f6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bootstrapmodule&quot;&gt; bootstrapModule() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bootstrapmodule&quot;&gt; bootstrapModule() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28e8eba2244df3e04893daad1c357a142bd1e11d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bootstrapmodulefactory&quot;&gt; bootstrapModuleFactory() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bootstrapmodulefactory&quot;&gt; bootstrapModuleFactory() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0375012a1a28ddc92e550f7b67a2ed524eb5b23" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;build&quot;&gt; build() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;build&quot;&gt; build() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b256002ffce0f6ef641cc5cf2558a7e2c9f49e5c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;buildhammer&quot;&gt; buildHammer() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;buildhammer&quot;&gt; buildHammer() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="593a255032ee744481f67cd3bfe3d10f9ce25db2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bypasssecuritytrusthtml&quot;&gt; bypassSecurityTrustHtml() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bypasssecuritytrusthtml&quot;&gt; bypassSecurityTrustHtml() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9f89191df9937b1d40eeac5ccf8c7b52af101824" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bypasssecuritytrustresourceurl&quot;&gt; bypassSecurityTrustResourceUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bypasssecuritytrustresourceurl&quot;&gt; bypassSecurityTrustResourceUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d82d8bc640dfdc9bc452097ad27bc5a0ee2dfcea" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bypasssecuritytrustscript&quot;&gt; bypassSecurityTrustScript() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bypasssecuritytrustscript&quot;&gt; bypassSecurityTrustScript() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d01a5b2a0307fcde2a726a4f5d4d21f4e4d6b6b5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bypasssecuritytruststyle&quot;&gt; bypassSecurityTrustStyle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bypasssecuritytruststyle&quot;&gt; bypassSecurityTrustStyle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="85c46b50cd72c8c285e5861d38e4b3b41448afbd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;bypasssecuritytrusturl&quot;&gt; bypassSecurityTrustUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;bypasssecuritytrusturl&quot;&gt; bypassSecurityTrustUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f57cbf372242d92f3ed0a804c1462698d0b81411" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;call-signature&quot;&gt; &lt;i&gt;call signature&lt;/i&gt; &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;call-signature&quot;&gt; &lt;i&gt;통화 서명&lt;/i&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1478e955f55e09189942355b632af1c406895628" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;canactivate-1&quot;&gt; canActivate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;canactivate-1&quot;&gt; canActivate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3bc29df808bdcca21a775c85034f834f77881e3a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;canactivatechild-1&quot;&gt; canActivateChild() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;canactivatechild-1&quot;&gt; canActivateChild() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="558483015bd84f70651b1bc8d7a82427148957a5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;candeactivate-1&quot;&gt; canDeactivate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;candeactivate-1&quot;&gt; canDeactivate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3e93bb6d9bb3908d8dbcfbac8b6b21cc32ed1321" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;canload-1&quot;&gt; canLoad() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;canload-1&quot;&gt; canLoad() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f4eaac87113a6a03b4f492fed302a741277f596" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;changedetection&quot;&gt;changeDetection&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;changedetection&quot;&gt;changeDetection&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9dc1ee88787439d5b00c158e54f5e927ad2ea65a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;check&quot;&gt; check() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;check&quot;&gt; check() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="34c5819bfc59a01bb381f34a5c1fbad35cd3f722" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;checkforupdate&quot;&gt; checkForUpdate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;checkforupdate&quot;&gt; checkForUpdate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b81d063c11cfc45e6eae5161ec321ab4560e3e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;checknochanges&quot;&gt; checkNoChanges() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;checknochanges&quot;&gt; checkNoChanges() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eb9cd0e1544cc2c4d9ca2318cc78b31a5c3a2c65" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;clear&quot;&gt; clear() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;clear&quot;&gt; clear() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd920fcab28bea525eeb5ba0aba7df8fc067cbfc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;clearasyncvalidators&quot;&gt; clearAsyncValidators() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;clearasyncvalidators&quot;&gt; clearAsyncValidators() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0e027194bccc3056bb7450e1a0a008ea0ecc3d4c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;clearcache&quot;&gt; clearCache() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;clearcache&quot;&gt; clearCache() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c587244ae4a15282a12d6cbe78b77520f8dcef0e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;clearcachefor&quot;&gt; clearCacheFor() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;clearcachefor&quot;&gt; clearCacheFor() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="139b1348a360c617745297ec9983aa26abd759f9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;clearvalidators&quot;&gt; clearValidators() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;clearvalidators&quot;&gt; clearValidators() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b25e47be46c2f1b550aae67667e4ae3f9c711de8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;clone&quot;&gt; clone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;clone&quot;&gt; clone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="17303af5fe2c588c6fe87601abacdb810816d557" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;compilecomponents&quot;&gt; compileComponents() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;compilecomponents&quot;&gt; compileComponents() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eb04b59a673a0947df855df71668942584ace673" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;compose&quot;&gt; compose() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;compose&quot;&gt; compose() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9f2813db855b476497c35d86537ac92d062e7d76" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;composeasync&quot;&gt; composeAsync() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;composeasync&quot;&gt; composeAsync() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="665d2d1bc7ddef2ae6eb1e14f7ef3d554927a866" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;computestyle&quot;&gt; computeStyle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;computestyle&quot;&gt; computeStyle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d13bd858f5c64eefd1a79b5824815ff6be0dbb82" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;config&quot;&gt; config() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;config&quot;&gt; config() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="86ed8ffcecd93eb4becd57fa2ce3b012015ddf93" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;configurecompiler&quot;&gt; configureCompiler() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;configurecompiler&quot;&gt; configureCompiler() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0539155553054a7a7a765d01cb2a83dfa426d8ed" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;configuretestingmodule&quot;&gt; configureTestingModule() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;configuretestingmodule&quot;&gt; configureTestingModule() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20c1361ebbf5532af9a2c35310e23f1beb3a8c80" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;connect&quot;&gt; connect() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;connect&quot;&gt; connect() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b8da20bf556e45b8ca615e7ee7f4d648ba32ea4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;connectedcallback&quot;&gt; connectedCallback() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;connectedcallback&quot;&gt; connectedCallback() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9dc720a795efcdd3ad33fccf805b6bd3bafb3947" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;construct-signature&quot;&gt; &lt;i&gt;construct signature&lt;/i&gt; &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;construct-signature&quot;&gt; &lt;i&gt;서명 구성&lt;/i&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f1b886b9ef7773a8d39a38c02d934d2d1f2ebfb9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;contains&quot;&gt; contains() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;contains&quot;&gt; contains() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d27d11a2ccc104b9283162cc3b9bad17e5a9400e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;containselement&quot;&gt; containsElement() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;containselement&quot;&gt; containsElement() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05d58580e2dd15e2c3c31a6e554ad9393472c0e6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;control&quot;&gt; control() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;control&quot;&gt; control() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="825b0c74c85ccdec2d2525e955a17755269dd237" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;create&quot;&gt; create() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;create&quot;&gt; create() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="363f3a0f50fd8097dc5f64e85a8290dab77ab473" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createchildfromresolved&quot;&gt; createChildFromResolved() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createchildfromresolved&quot;&gt; createChildFromResolved() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cfe914074651801ba79a33c9d69a1625e5515448" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createcomment&quot;&gt; createComment() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createcomment&quot;&gt; createComment() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="989027bc6d18d15913d6a7fa20c94662539e9c91" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createcompiler&quot;&gt; createCompiler() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createcompiler&quot;&gt; createCompiler() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b529d5896bee4b68d358c6b936f495b67a7826d0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createcomponent&quot;&gt; createComponent() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createcomponent&quot;&gt; createComponent() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aa8396e1762a76d94511f0743a340b0ae188c7eb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createelement&quot;&gt; createElement() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createelement&quot;&gt; createElement() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="219cc3b7746ccc4c8122a623d7abf99ce91a0ec3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createembeddedview&quot;&gt; createEmbeddedView() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createembeddedview&quot;&gt; createEmbeddedView() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fff6cd169cf88b0f0a04f2976731800cae76f7aa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createmessagebroker&quot;&gt; createMessageBroker() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createmessagebroker&quot;&gt; createMessageBroker() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d51fa58cf973888f9e5606f1f96ee416eede360b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createrenderer&quot;&gt; createRenderer() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createrenderer&quot;&gt; createRenderer() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="224b8baed4fff538d3e1a251338655dcd71dc421" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createtemplateanchor&quot;&gt; createTemplateAnchor() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createtemplateanchor&quot;&gt; createTemplateAnchor() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4be2d3d9e185d09f742fb70aa8bb935250c99548" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createtext&quot;&gt; createText() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createtext&quot;&gt; createText() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05c185c94a91727d4f546915b6006a1339d2db2c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createurltree&quot;&gt; createUrlTree() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createurltree&quot;&gt; createUrlTree() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0a5273a6d8127da470d3a908c4e0dccda075cac" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;createviewroot&quot;&gt; createViewRoot() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;createviewroot&quot;&gt; createViewRoot() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4b41b3c1d87d1bfde1512d930b55ef51d356a12" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;css&quot;&gt; css() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;css&quot;&gt; css() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c7a53c84fb0afb2a9602b280113c26c5f9e3261" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;deactivate&quot;&gt; deactivate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;deactivate&quot;&gt; deactivate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="14a10d76bd629d1a316bd576d1f2d9f085935960" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;declarations&quot;&gt;declarations&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;declarations&quot;&gt;declarations&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce70499eec84c21759f05886dc31a26eb0accabf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;decodehash&quot;&gt; decodeHash() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;decodehash&quot;&gt; decodeHash() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f90514ed30420beff5ef07b9585e25dfbc3330e4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;decodekey&quot;&gt; decodeKey() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;decodekey&quot;&gt; decodeKey() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="508e7a8ec2abfa91c0e7436c2413d26557d18165" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;decodepath&quot;&gt; decodePath() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;decodepath&quot;&gt; decodePath() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a829f1a79e7ea5d300321578f521019c414c948a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;decodesearch&quot;&gt; decodeSearch() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;decodesearch&quot;&gt; decodeSearch() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8abd33ede66aa9e66050d025b1b5678b8973e3c5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;decodevalue&quot;&gt; decodeValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;decodevalue&quot;&gt; decodeValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fa309cffa1ce46415a1f78b02643288f1e5bc5c4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;decreasependingrequestcount&quot;&gt; decreasePendingRequestCount() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;decreasependingrequestcount&quot;&gt; decreasePendingRequestCount() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="72c984a081f0f473dcf22c507752cf59f38c5d6d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;delete&quot;&gt; delete() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;delete&quot;&gt; delete() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bcd4a06e49f3713ca80c5b766c28628a0ab9de74" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;destroy&quot;&gt; destroy() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;destroy&quot;&gt; destroy() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d06daaf5b3dc4e96c4114b721fc164d63a5a44de" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;destroyview&quot;&gt; destroyView() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;destroyview&quot;&gt; destroyView() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b0ae6bc1c2c24868886af8f586f3fb8b26932afe" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;detach&quot;&gt; detach() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;detach&quot;&gt; detach() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bcaa5491a68102d2b1d687ff45e16d055094786b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;detachview&quot;&gt; detachView() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;detachview&quot;&gt; detachView() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c76fd299195d2368fd1ee986e90916e2616ae8e7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;detectchanges&quot;&gt; detectChanges() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;detectchanges&quot;&gt; detectChanges() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a8b47d526c4bac847ce2d792e52ea8e7bd95c7c0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;detectcontenttypeheader&quot;&gt; detectContentTypeHeader() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;detectcontenttypeheader&quot;&gt; detectContentTypeHeader() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="21c533a79f35e035b92c24a90de3d599af0aa603" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;diff&quot;&gt; diff() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;diff&quot;&gt; diff() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b16f3f2cce25c6bfb0bc471bb6c7fc599c2d90d8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;directive&quot;&gt; directive() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;directive&quot;&gt; directive() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c6869949f56c573e33fb80ac0d393e53288a403" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;disable&quot;&gt; disable() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;disable&quot;&gt; disable() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="55fe799685e617c9eef9d263117cedfbb2900777" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;disconnect&quot;&gt; disconnect() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;disconnect&quot;&gt; disconnect() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="43b5b53838daa10d3fc99b45e1d36856a56ce2ac" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;disconnectedcallback&quot;&gt; disconnectedCallback() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;disconnectedcallback&quot;&gt; disconnectedCallback() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb6bf6ef851c3733bb431f397f852f81bf3eca53" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;dispose&quot;&gt; dispose() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;dispose&quot;&gt; dispose() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="19b2a1e21ed6f011f35ddf5c8d94ceeb347ed452" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;downgradeng2component&quot;&gt; downgradeNg2Component() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;downgradeng2component&quot;&gt; downgradeNg2Component() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8325fecb18e08a15e426d23775db995be06b75f9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;downgradeng2provider&quot;&gt; downgradeNg2Provider() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;downgradeng2provider&quot;&gt; downgradeNg2Provider() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6db871ca48edee2c5b419943e14af8164b66c7ef" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;email&quot;&gt; email() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;email&quot;&gt; email() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ccd1f77e71fc563733c0be759cfd530236ef22c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;emit&quot;&gt; emit() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;emit&quot;&gt; emit() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08c31fc58b8320f6d90581f1efb1947e47235b2f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;enable&quot;&gt; enable() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;enable&quot;&gt; enable() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b99376c739fad098c90c29e5e11879955a343e09" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;encapsulation&quot;&gt;encapsulation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;encapsulation&quot;&gt;encapsulation&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="30aae6c9a45f947a5255c4ec0afb2d239d58a117" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;encodehash&quot;&gt; encodeHash() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;encodehash&quot;&gt; encodeHash() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eb4adac8e0dbc19e4f63f3111e60e21405103107" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;encodekey&quot;&gt; encodeKey() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;encodekey&quot;&gt; encodeKey() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a09a0744b01ba5720c822a61b04e68a3542ee87" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;encodepath&quot;&gt; encodePath() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;encodepath&quot;&gt; encodePath() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e0efd04bc2faeac7b0b9f7e453a70b88dccc3c54" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;encodesearch&quot;&gt; encodeSearch() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;encodesearch&quot;&gt; encodeSearch() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f6f0a569c2745e5b452684de622d12e20a2c18b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;encodevalue&quot;&gt; encodeValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;encodevalue&quot;&gt; encodeValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d07e3434c87d60db531ee090d84a550a76dd949a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;end&quot;&gt; end() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;end&quot;&gt; end() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71ac3b9bed61f861edd7dc6cb49592a7ab1610ea" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;entrycomponents&quot;&gt;entryComponents&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;entrycomponents&quot;&gt;entryComponents&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c05262b90c187d8fbb815e184d8ff35905d8794" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;error&quot;&gt; error() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;error&quot;&gt; error() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0209049015efac02b4cd4475bdf3fe84103f7144" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;event&quot;&gt; event() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;event&quot;&gt; event() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="21b0bcffd76915f219cd73de910b3bedc00bdf31" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;eventname&quot;&gt;eventName&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;eventname&quot;&gt;eventName&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a49fe1e01028ab0b89cf3335e77d996af76593da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;execute&quot;&gt; execute() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;execute&quot;&gt; execute() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="126f04be8df611382518fbb7779e9d9eeca34123" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;expectnone&quot;&gt; expectNone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;expectnone&quot;&gt; expectNone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb57ae7ff2d06e5437f89843f22832e770c16521" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;expectone&quot;&gt; expectOne() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;expectone&quot;&gt; expectOne() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="488d4d498ed8f8df369ac45ebc2b62cf489728c6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;exportas&quot;&gt;exportAs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;exportas&quot;&gt;exportAs&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4fb560952fbda49b1d55aed19062bd69249d57c6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;exports&quot;&gt;exports&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;exports&quot;&gt;exports&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a6475ef803d1ce16c20d78981ba6dc2a7c5a9353" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;extend&quot;&gt; extend() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;extend&quot;&gt; extend() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5be0ba524d6f35378de07c45e1871a98eb77baf4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;extract&quot;&gt; extract() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;extract&quot;&gt; extract() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="80db74799d4a530bdf88ece0688765004ce2ef55" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;filter&quot;&gt; filter() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;filter&quot;&gt; filter() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f0205482c8744181b402dbf0feb490d2d1403956" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;find&quot;&gt; find() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;find&quot;&gt; find() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="22c4b5a378f035157c428d33de7397f1a989a2fe" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;findproviders&quot;&gt; findProviders() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;findproviders&quot;&gt; findProviders() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d5d81e63c97a6f8508445a60b8f55c223bb4b8d3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;findtestabilityintree&quot;&gt; findTestabilityInTree() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;findtestabilityintree&quot;&gt; findTestabilityInTree() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c7468c697fda3d038e735f8653ed3d7f592dbbcd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;finish&quot;&gt; finish() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;finish&quot;&gt; finish() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5a9e9cc5e8bc46ed6a038236b8a4d5769a60ad3a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;fireuncheck&quot;&gt; fireUncheck() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;fireuncheck&quot;&gt; fireUncheck() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d2f795c2150d3376e4a2eaf4516c16b6da67e8bd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;flush&quot;&gt; flush() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;flush&quot;&gt; flush() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20c1fd08aca50746a2330baade29bd7cc98c3677" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;forchild&quot;&gt; forChild() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;forchild&quot;&gt; forChild() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3408de95ed88041f375747ff7bfc944a9bed4cd9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreach&quot;&gt; forEach() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreach&quot;&gt; forEach() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1ef9bd3d0709f39547452f480067c80930ae0512" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachaddeditem&quot;&gt; forEachAddedItem() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachaddeditem&quot;&gt; forEachAddedItem() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48c9c7edd95264deecfc4993af1db65ea05fbf39" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachchangeditem&quot;&gt; forEachChangedItem() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachchangeditem&quot;&gt; forEachChangedItem() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="058a3a14cb9292ca4b77a814e3acecfb3c8f1af9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachidentitychange&quot;&gt; forEachIdentityChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachidentitychange&quot;&gt; forEachIdentityChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="22933638a0c88ec8ce82ea50f95cefc7b022fdc7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachitem&quot;&gt; forEachItem() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachitem&quot;&gt; forEachItem() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3698aac92af412e72448147b7116a0f01ded13a9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachmoveditem&quot;&gt; forEachMovedItem() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachmoveditem&quot;&gt; forEachMovedItem() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="99abc353a0dc7e1ae574438cb24c9493a4b2ac3e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachoperation&quot;&gt; forEachOperation() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachoperation&quot;&gt; forEachOperation() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b8b5d9d2d48d58d613af13813849db79ae4a00d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachpreviousitem&quot;&gt; forEachPreviousItem() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachpreviousitem&quot;&gt; forEachPreviousItem() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9109350dbfdd545010e15414a90de120bd99bb48" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;foreachremoveditem&quot;&gt; forEachRemovedItem() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;foreachremoveditem&quot;&gt; forEachRemovedItem() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="936bc28b459e8efca47b6494c7a87a92f12eaa5a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;forroot&quot;&gt; forRoot() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;forroot&quot;&gt; forRoot() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="246d6b33e374e3302411b9f7b28184cd22d718fd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;forward&quot;&gt; forward() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;forward&quot;&gt; forward() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f05d9559924d542b02eaecb5ede8decaaffd4140" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;from&quot;&gt; from() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;from&quot;&gt; from() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="190d4fc298a91e04da52b38f9415027f08f957f1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;fromresolvedproviders&quot;&gt; fromResolvedProviders() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;fromresolvedproviders&quot;&gt; fromResolvedProviders() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6de46296b5c9389a652e591f49cfae469d378d63" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;get&quot;&gt; $get() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;get&quot;&gt; $get() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7f5b8d51289d57413f082d4650dd6efc8d2e2a0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;get&quot;&gt; get() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;get&quot;&gt; get() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af0d115c0730215333c514038bbb175a5e26517b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getall&quot;&gt; getAll() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getall&quot;&gt; getAll() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b1387b4de4b3c95ca437b0e09b41267fcaa3baf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getallrootelements&quot;&gt; getAllRootElements() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getallrootelements&quot;&gt; getAllRootElements() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ebe286937841faf765381c3ceaded8fd158c7054" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getalltestabilities&quot;&gt; getAllTestabilities() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getalltestabilities&quot;&gt; getAllTestabilities() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c8bbb728c52eca7f5b75a741e93cb277a83e1b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getbasehref&quot;&gt; getBaseHref() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getbasehref&quot;&gt; getBaseHref() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1f0d1d89c17576a75c323f95dfd2665b8d6ae613" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getbasehreffromdom&quot;&gt; getBaseHrefFromDOM() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getbasehreffromdom&quot;&gt; getBaseHrefFromDOM() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d2ae81c1872757b147cf1bc547d560648292997d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getcontext&quot;&gt; getContext() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getcontext&quot;&gt; getContext() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8560acd51fb3b3998c21cc85d0f7cc67c2f71338" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getcontrol&quot;&gt; getControl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getcontrol&quot;&gt; getControl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b02722426aab0a6df5e6e7c5aaf86bc7cb086f08" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getcurrentnavigation&quot;&gt; getCurrentNavigation() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getcurrentnavigation&quot;&gt; getCurrentNavigation() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4c2fe380cf89bfa415711edcc92395a94e315f1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getdocument&quot;&gt; getDocument() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getdocument&quot;&gt; getDocument() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e02606c3c3965ef794d2c781428927b85a69e5ce" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;geterror&quot;&gt; getError() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;geterror&quot;&gt; getError() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ceb58cf05d42cf1db618ac6ece2c17dd14e663c0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getformarray&quot;&gt; getFormArray() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getformarray&quot;&gt; getFormArray() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71bf203349464d45fdeb0869eafac618c224142a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getformgroup&quot;&gt; getFormGroup() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getformgroup&quot;&gt; getFormGroup() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f759a242712ff7d83f1412df1235cfd3db46cc19" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getinputvalue&quot;&gt; getInputValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getinputvalue&quot;&gt; getInputValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="85b5f40982afdb78314deee19f23c668976df688" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getmoduleid&quot;&gt; getModuleId() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getmoduleid&quot;&gt; getModuleId() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a95858b63576122e7b2b3d584f4732c98fc3818" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getorcreatecontext&quot;&gt; getOrCreateContext() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getorcreatecontext&quot;&gt; getOrCreateContext() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e7e911f09c81047681391b0f383cd391ab158f20" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getpendingrequestcount&quot;&gt; getPendingRequestCount() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getpendingrequestcount&quot;&gt; getPendingRequestCount() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0e6f8e1eda855b411975c62569f198830734cd15" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getpluralcategory&quot;&gt; getPluralCategory() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getpluralcategory&quot;&gt; getPluralCategory() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="088625362d7f90a98f31f94f96ba0cf31ac879fc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getposition&quot;&gt; getPosition() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getposition&quot;&gt; getPosition() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f8439b01dcb2621d15bfcb597144ecc5f08d7eb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getrawvalue&quot;&gt; getRawValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getrawvalue&quot;&gt; getRawValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0571121458bb3247ee12e4091551af2b8e5603f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getscrollposition&quot;&gt; getScrollPosition() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getscrollposition&quot;&gt; getScrollPosition() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="495c01a3c452960cc6340c825698e9d04297cf66" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getstate&quot;&gt; getState() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getstate&quot;&gt; getState() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1fc35f2482b42f17fe559848321eadd57f6f03bc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;gettag&quot;&gt; getTag() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;gettag&quot;&gt; getTag() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d416c4f29053d204e68366195b720d25d386a1a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;gettags&quot;&gt; getTags() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;gettags&quot;&gt; getTags() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b91b7765421ed6cdba31c681530eacefe601607" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;gettestability&quot;&gt; getTestability() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;gettestability&quot;&gt; getTestability() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb12db7a07b5e410426c196aa14b674ebefba8da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;gettitle&quot;&gt; getTitle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;gettitle&quot;&gt; getTitle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c08072d4b2b137747f8931cb18ad220c05df68c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;gettoken&quot;&gt; getToken() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;gettoken&quot;&gt; getToken() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="826d915af7d236d8cb95f5f6fc73006c1cf7243c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getvalue&quot;&gt; getValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getvalue&quot;&gt; getValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb666c381a3172492d88923eb8b15e2b63d37c71" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;getzone&quot;&gt; getZone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;getzone&quot;&gt; getZone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c6dcb2dbd27918a2ce3cf95334d00e97328f3ac" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;go&quot;&gt; go() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;go&quot;&gt; go() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4bdbdf470f234f0eb99510c217c02e05dd5f4f9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;group&quot;&gt; group() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;group&quot;&gt; group() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="14e24686c272175e1857784ab03fbc358ded41e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;handle&quot;&gt; handle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;handle&quot;&gt; handle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="46d8e4667f6773359a9882c9a257ba9c68cdf47f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;handleerror&quot;&gt; handleError() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;handleerror&quot;&gt; handleError() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5f6f857201097baa1b14f4dae14700b5d12a8890" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;has&quot;&gt; has() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;has&quot;&gt; has() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2857fd7bf37326d1aa48ca51a530216097b48f08" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;haschildren&quot;&gt; hasChildren() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;haschildren&quot;&gt; hasChildren() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2f5d48e365ed85901c7c4100bfeedabd40aef180" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;haserror&quot;&gt; hasError() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;haserror&quot;&gt; hasError() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0b1bb32b111a80130f684028a1ee01ecaab3d1b5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;hash&quot;&gt; hash() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;hash&quot;&gt; hash() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57fed67292499c7eb910af25aa5f36955e7fcd14" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;hashprefix&quot;&gt; hashPrefix() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;hashprefix&quot;&gt; hashPrefix() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="55324e885624e4cf4e0beb7e0dc6b5d8118b7848" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;haskey&quot;&gt; hasKey() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;haskey&quot;&gt; hasKey() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48f7b0852674c6c9c7f883934f4b55185c68200c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;hasstarted&quot;&gt; hasStarted() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;hasstarted&quot;&gt; hasStarted() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bf832e002e07373a063563d108982b26dab713dc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;head&quot;&gt; head() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;head&quot;&gt; head() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58f0517250a1bf11118cb3cc6211eb12512214c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;host&quot;&gt; host() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;host&quot;&gt; host() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3bca8c08412186b7c23a7d50d787530053b209fa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;host&quot;&gt;host&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;host&quot;&gt;host&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83abaa630be356c399b455c57c43756aef32f418" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;hostpropertyname&quot;&gt;hostPropertyName&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;hostpropertyname&quot;&gt;hostPropertyName&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c324a7a1be3b9a28790c7d9f9d3dbb117140d36" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;html5mode&quot;&gt; html5Mode() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;html5mode&quot;&gt; html5Mode() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="00b3e94c1fd542c596799ca8ebca7df6339ea650" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;id&quot;&gt;id&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;id&quot;&gt;id&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc7c795842d7739a533bdd385dad417438345b6a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;imports&quot;&gt;imports&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;imports&quot;&gt;imports&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e3d068984914b8f6c32106450789f886ad93ef3c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;increasependingrequestcount&quot;&gt; increasePendingRequestCount() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;increasependingrequestcount&quot;&gt; increasePendingRequestCount() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="43061bf338000c4422d1653385c4da483619d13d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;indexof&quot;&gt; indexOf() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;indexof&quot;&gt; indexOf() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6019a071dbe7478cbc2d8d73c8fe9d363a64cea2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;init&quot;&gt; init() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;init&quot;&gt; init() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="db591a76a07fbe1f883cc08b181ffba860240923" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;initchannel&quot;&gt; initChannel() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;initchannel&quot;&gt; initChannel() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="057d9b9d11339d0ac1c8b0ce85cb9d53c3165313" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;initialnavigation&quot;&gt; initialNavigation() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;initialnavigation&quot;&gt; initialNavigation() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="196edc7f51c21711bd537e675c4c65be83db80b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;inittestenvironment&quot;&gt; initTestEnvironment() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;inittestenvironment&quot;&gt; initTestEnvironment() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2fb569ab5e89a3cf02cb59f9d5019c3c1cf8ea53" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;inject&quot;&gt; inject() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;inject&quot;&gt; inject() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7229230301bac1b60c586d42247621def6140343" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;inputs&quot;&gt;inputs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;inputs&quot;&gt;inputs&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ca0e45d122031acf0f35c5687acb4a5afa76b8f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;insert&quot;&gt; insert() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;insert&quot;&gt; insert() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="46a82e4dbe6e281bcc5d6debb0dc61e7b5b39d8d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;insertbefore&quot;&gt; insertBefore() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;insertbefore&quot;&gt; insertBefore() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="531e50f15eaf70366aa3c6c6952177cebfe13b11" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;insertrootelement&quot;&gt; insertRootElement() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;insertrootelement&quot;&gt; insertRootElement() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1135586bf5d35664453ee0a2a12761426726cafb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;instantiateresolved&quot;&gt; instantiateResolved() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;instantiateresolved&quot;&gt; instantiateResolved() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb071cdb75070944faf250f2be4a9ed5c49ce582" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;intercept&quot;&gt; intercept() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;intercept&quot;&gt; intercept() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="52a0f5894f821ba4c8869231b96b6ed5efd1e4d9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;interpolation&quot;&gt;interpolation&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;interpolation&quot;&gt;interpolation&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88872e932b083dd884e88aafd5c9f070216ef809" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;invokeelementmethod&quot;&gt; invokeElementMethod() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;invokeelementmethod&quot;&gt; invokeElementMethod() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f42fac20c33b44a592a63ba9cd6ebdb020a9a53d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;isactive&quot;&gt; isActive() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;isactive&quot;&gt; isActive() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1d760a3fa192b3af120d68efc77aabfec779c3d3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;iscurrentpathequalto&quot;&gt; isCurrentPathEqualTo() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;iscurrentpathequalto&quot;&gt; isCurrentPathEqualTo() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f38eba97b08f704ddbf72489231eaccbe6327fb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;isfirstchange&quot;&gt; isFirstChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;isfirstchange&quot;&gt; isFirstChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d608519c9640261cc02d5d85c34425989d65c95b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;isinangularzone&quot;&gt; isInAngularZone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;isinangularzone&quot;&gt; isInAngularZone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="33416355528b486a9cf6c54284bd33ce0578ecab" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;isstable&quot;&gt; isStable() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;isstable&quot;&gt; isStable() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7f506fef7173ab142cbe9926cfa62400bf236622" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;iswrapped&quot;&gt; isWrapped() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;iswrapped&quot;&gt; isWrapped() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ee295fcf103d9e8a2d54b8c6bdbf11644ac6cc9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;jit&quot;&gt;jit&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;jit&quot;&gt;jit&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a7b04645354c1890932a58a9e7999baca67a6ba" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;joinwithslash&quot;&gt; joinWithSlash() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;joinwithslash&quot;&gt; joinWithSlash() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="465df538c05972c1d236ca9cfbc38d787303ff77" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;jsonp&quot;&gt; jsonp() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;jsonp&quot;&gt; jsonp() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dcb84949209919fa08b0f0c299093229b44e1b01" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;keys&quot;&gt; keys() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;keys&quot;&gt; keys() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c37fbd00c4fa17cd0e1b17b57898ff302cd3d947" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;listen&quot;&gt; listen() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;listen&quot;&gt; listen() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4396124a9ef670c8d363a4272859c425cb9d8b41" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;listenglobal&quot;&gt; listenGlobal() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;listenglobal&quot;&gt; listenGlobal() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb1ae5083a6ccba0ab4950b2854266bc8141b6fb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;load&quot;&gt; load() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;load&quot;&gt; load() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1796e4477170df3fe0e58a4ed295cc12c5f85f8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;map&quot;&gt; map() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;map&quot;&gt; map() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d611c8cead9fda9b808a7c822d3185f69c5f7efb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;markallastouched&quot;&gt; markAllAsTouched() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;markallastouched&quot;&gt; markAllAsTouched() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91949074c0591daa30a6c82c178329e4722a1f60" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;markasdirty&quot;&gt; markAsDirty() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;markasdirty&quot;&gt; markAsDirty() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="189eea80a8461b25e25195a14e86574ffbdf045b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;markaspending&quot;&gt; markAsPending() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;markaspending&quot;&gt; markAsPending() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c1da5bd0e65db64ad5616e42f9f264401d3802f5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;markaspristine&quot;&gt; markAsPristine() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;markaspristine&quot;&gt; markAsPristine() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="acf7dc6379330edecd5d7a285c41865b4f3c819a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;markastouched&quot;&gt; markAsTouched() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;markastouched&quot;&gt; markAsTouched() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="363dd2b6366ce6494cf7b552a7450ffdc1256ea4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;markasuntouched&quot;&gt; markAsUntouched() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;markasuntouched&quot;&gt; markAsUntouched() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="26bfeda44049e9617dc537270f11b09d56d04c60" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;markforcheck&quot;&gt; markForCheck() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;markforcheck&quot;&gt; markForCheck() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ba254078d0fe34d83d28e4b3d386e85fe54bf014" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;match&quot;&gt; match() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;match&quot;&gt; match() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="470704549687e94be3b9aa04e7273fc2c32af63b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;matcheselement&quot;&gt; matchesElement() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;matcheselement&quot;&gt; matchesElement() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d72f7fab1bc8c10d69b1ad586253cc647fb0af2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;max&quot;&gt; max() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;max&quot;&gt; max() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e7bd9c1edf8580da0e55709541fce538ea66c13f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;maxlength&quot;&gt; maxLength() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;maxlength&quot;&gt; maxLength() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7fe74aa3002163842fae624a96b9a371c8035ac4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;merge&quot;&gt; merge() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;merge&quot;&gt; merge() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6f03a0a325c3c7baabcc9d49bb5e53226e0e0c4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;min&quot;&gt; min() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;min&quot;&gt; min() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fa44e21ec9192335659660995ccf976a59adcc97" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;minlength&quot;&gt; minLength() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;minlength&quot;&gt; minLength() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a037b75c3350b5df0eb9a572007a9421939bf8d0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;moduleid&quot;&gt;moduleId&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;moduleid&quot;&gt;moduleId&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="996358a510a2863da971339a9b5a3f843475c415" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;move&quot;&gt; move() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;move&quot;&gt; move() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d37b0cda34dffa8ffc7c3b05b06c46b49681383d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;name&quot;&gt;name&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;name&quot;&gt;name&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e8d908fbd7a2190cee2a0a96c1f3b685143ed8b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;navigate&quot;&gt; navigate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;navigate&quot;&gt; navigate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b0e0b973e7e71369b804e55d8a72d33444d9f07" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;navigatebyurl&quot;&gt; navigateByUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;navigatebyurl&quot;&gt; navigateByUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1409cdd5fec57d6f613e11844904a7bf400b3afa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;nextsibling&quot;&gt; nextSibling() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;nextsibling&quot;&gt; nextSibling() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f9de8e3da2fb8ddd7b8246297461ca9cd8474aa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngaftercontentchecked&quot;&gt; ngAfterContentChecked() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngaftercontentchecked&quot;&gt; ngAfterContentChecked() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="308f8a441ff2e9ee063aeff1e1205d3e2d81d6e7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngaftercontentinit&quot;&gt; ngAfterContentInit() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngaftercontentinit&quot;&gt; ngAfterContentInit() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e38c41dd0066717ff5c6c5cf43f4e3cd61cbe3fa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngafterviewchecked&quot;&gt; ngAfterViewChecked() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngafterviewchecked&quot;&gt; ngAfterViewChecked() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ffbfaffe05304a3d379c5a8c18d8499464a07763" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngafterviewinit&quot;&gt; ngAfterViewInit() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngafterviewinit&quot;&gt; ngAfterViewInit() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f0de85f6b84b11d79f6e2c99bc64284d0d84b6b8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngdobootstrap&quot;&gt; ngDoBootstrap() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngdobootstrap&quot;&gt; ngDoBootstrap() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="922616d09b9194dc1580531d65384cca84f32ec4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngdocheck&quot;&gt; ngDoCheck() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngdocheck&quot;&gt; ngDoCheck() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0791c04222eb2c98d6a50e854068de3d2c53a51f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngonchanges&quot;&gt; ngOnChanges() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngonchanges&quot;&gt; ngOnChanges() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3ac03e46410a6bbf85361bf64e1a8d87d992d498" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngondestroy&quot;&gt; ngOnDestroy() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngondestroy&quot;&gt; ngOnDestroy() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8a6500b78177a214a3d8db6bda047fbc97538ff3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngoninit&quot;&gt; ngOnInit() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngoninit&quot;&gt; ngOnInit() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7f6ddf4d0a70bfbe9e26f24783e9e21bc444b289" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngtemplatecontextguard&quot;&gt; ngTemplateContextGuard() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngtemplatecontextguard&quot;&gt; ngTemplateContextGuard() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="360bdeb1dd5e2455f36e01b17935621cb7b5fc9e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;normalize&quot;&gt; normalize() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;normalize&quot;&gt; normalize() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b64d7f8cbf62bbc0236d430faf328a8c241313f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;normalizequeryparams&quot;&gt; normalizeQueryParams() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;normalizequeryparams&quot;&gt; normalizeQueryParams() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04b12591175ddf7f8e512d035ad1c1a88a243acc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;notifyonchanges&quot;&gt; notifyOnChanges() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;notifyonchanges&quot;&gt; notifyOnChanges() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fcfab55e03ff3dc9a083c46b44d456674405346d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;nullvalidator&quot;&gt; nullValidator() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;nullvalidator&quot;&gt; nullValidator() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9140f25f8f78d1d54142fe6d577b1b00f9f7427d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onchange&quot;&gt; onChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onchange&quot;&gt; onChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="921623c500b53bc072a1352d0863d4946fdfbc5a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onchildoutletcreated&quot;&gt; onChildOutletCreated() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onchildoutletcreated&quot;&gt; onChildOutletCreated() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5fe2824c06506629c063638b8c2a9c4eec9f8e0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onchildoutletdestroyed&quot;&gt; onChildOutletDestroyed() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onchildoutletdestroyed&quot;&gt; onChildOutletDestroyed() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9aa7088f417a993c1ae2880f7ecb3e16adb38840" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onclick&quot;&gt; onClick() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onclick&quot;&gt; onClick() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="034622f7298a12db693f2d44c9257e9350b79b31" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ondestroy&quot;&gt; onDestroy() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ondestroy&quot;&gt; onDestroy() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b500a29c04ddd096860637c5985262b389cc84b3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ondone&quot;&gt; onDone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ondone&quot;&gt; onDone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4bba9d95803b3ada382bf39d4af4c44e19085584" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onhashchange&quot;&gt; onHashChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onhashchange&quot;&gt; onHashChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="64baa70e7d256cf84aee35d3a28de5411faac233" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;oninit&quot;&gt; onInit() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;oninit&quot;&gt; onInit() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9efb75e7cbfbe34fbe4d8ab87fcfb755aa79bb78" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onoutletdeactivated&quot;&gt; onOutletDeactivated() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onoutletdeactivated&quot;&gt; onOutletDeactivated() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42a27de81f320fa03d401a4baeb97f199409691c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onoutletreattached&quot;&gt; onOutletReAttached() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onoutletreattached&quot;&gt; onOutletReAttached() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20fb633c36f75ed45f65d971027dbdaaac064675" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onpopstate&quot;&gt; onPopState() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onpopstate&quot;&gt; onPopState() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fc023776711b43d5cb7e7563337c3cd966897c02" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onreset&quot;&gt; onReset() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onreset&quot;&gt; onReset() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ff009889b1215b314538ac41f0967fe8cdeb646" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onserialize&quot;&gt; onSerialize() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onserialize&quot;&gt; onSerialize() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f0b0ffd8c18ee42d6ecbfcb4f78ffd3b60c23b1f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onstart&quot;&gt; onStart() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onstart&quot;&gt; onStart() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91875491ff0d20bee75edba3982fa60a5f6b7c4f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onsubmit&quot;&gt; onSubmit() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onsubmit&quot;&gt; onSubmit() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e560b7ad742824727ebe47a6ca9dfae924fd01ff" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;onurlchange&quot;&gt; onUrlChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;onurlchange&quot;&gt; onUrlChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="09485388c42e4f9dfc83e9fc09664f3a6f071a89" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;options&quot;&gt; options() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;options&quot;&gt; options() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ae01e71dad264df466722891ad1b1afff33abcf1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;outputs&quot;&gt;outputs&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;outputs&quot;&gt;outputs&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c3f298c61a717da259d559f8817c2fc877c44c6a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;overridecomponent&quot;&gt; overrideComponent() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;overridecomponent&quot;&gt; overrideComponent() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="99afb38209320ab0f628b10532d67e5cc19185d2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;overridedirective&quot;&gt; overrideDirective() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;overridedirective&quot;&gt; overrideDirective() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c79b0500db2e199f436753e2f73655ec282ecc5d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;overridemodule&quot;&gt; overrideModule() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;overridemodule&quot;&gt; overrideModule() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e5db5aaacb136cbf7dbf66e7501b28255a10ac1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;overridepipe&quot;&gt; overridePipe() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;overridepipe&quot;&gt; overridePipe() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad3cc07ba4c79db96e2fafa53a95c4219891279e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;overrideprovider&quot;&gt; overrideProvider() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;overrideprovider&quot;&gt; overrideProvider() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2a3bd15c398f29ebad011f331d01a1ba5131a0f6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;overridetemplate&quot;&gt; overrideTemplate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;overridetemplate&quot;&gt; overrideTemplate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4df9e2b8ed99b5bbfef116d42c4284ae33fecb98" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;overridetemplateusingtestingmodule&quot;&gt; overrideTemplateUsingTestingModule() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;overridetemplateusingtestingmodule&quot;&gt; overrideTemplateUsingTestingModule() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57c337cd4b09ddb63da1448b99bff49e7346ad58" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;parentnode&quot;&gt; parentNode() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;parentnode&quot;&gt; parentNode() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="711ee0a50d9737b2a9524d363339722cf9d53d40" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;parse&quot;&gt; $$parse() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;parse&quot;&gt; $$parse() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e8858058d35c73aaea78e6fbc625d07a842d183" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;parse&quot;&gt; parse() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;parse&quot;&gt; parse() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b9d2b6f754c6429ea7b09ef6a5dc0a565aa05e7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;parselinkurl&quot;&gt; $$parseLinkUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;parselinkurl&quot;&gt; $$parseLinkUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05a059348f376298f5a17b66e997989926c74730" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;parseurl&quot;&gt; parseUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;parseurl&quot;&gt; parseUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f2bd03ff5957b958ebee9e3f3b6e7368d6507831" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;patch&quot;&gt; patch() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;patch&quot;&gt; patch() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ab6081811673dcaa0c97de0ccc5c2a80397b7b1b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;patchvalue&quot;&gt; patchValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;patchvalue&quot;&gt; patchValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="079bdb2f82ec2b7ce1d0600447dfbeb6831364be" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;path&quot;&gt; path() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;path&quot;&gt; path() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5bce74110782802a0840dd2210f6a706339c307" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;pattern&quot;&gt; pattern() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;pattern&quot;&gt; pattern() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="21dd43353f38d1b75bea74a1edf946796fb23dfa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;pause&quot;&gt; pause() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;pause&quot;&gt; pause() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1030e259c456d4dd5ab16346d8cf40bfcc81df33" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;play&quot;&gt; play() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;play&quot;&gt; play() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="be98e975da4866d934cabe137a7c6545ef8c13a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;port&quot;&gt; port() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;port&quot;&gt; port() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b9661531e9069f16b87cba1a8995d20d7f5895d5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;post&quot;&gt; post() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;post&quot;&gt; post() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e7447e677ac925c172cb4e3c92a2a2353e9a081" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;preload&quot;&gt; preload() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;preload&quot;&gt; preload() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0e286893483e8198670cd671fdbd022002fe9f76" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;prepareexternalurl&quot;&gt; prepareExternalUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;prepareexternalurl&quot;&gt; prepareExternalUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c8569ce1e99c5e651c4a6c3bb550914bb3bc2f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;preservewhitespaces&quot;&gt;preserveWhitespaces&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;preservewhitespaces&quot;&gt;preserveWhitespaces&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fc53634e09f8d45a88a8716376d8032d345cb155" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;projectnodes&quot;&gt; projectNodes() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;projectnodes&quot;&gt; projectNodes() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ef0558f1b9d1e01e355a92091efaf1a22cb6a51" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;protocol&quot;&gt; protocol() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;protocol&quot;&gt; protocol() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d8833fe10276a9bee44b4bbd4b8cc98bf0fd855" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;providedin&quot;&gt;providedIn&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;providedin&quot;&gt;providedIn&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d98b26544caa33d7970f1e8700562e82f0a98c6c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;providers&quot;&gt;providers&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;providers&quot;&gt;providers&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ae467768c531b514317e5f0c0acfc70b3c0796ad" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;pure&quot;&gt;pure&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;pure&quot;&gt;pure&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="69797c29452e4d7843936dedf959686a71274801" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;push&quot;&gt; push() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;push&quot;&gt; push() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e9dd901dd404f67ed64193c43b654d9cdd2dce6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;pushstate&quot;&gt; pushState() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;pushstate&quot;&gt; pushState() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e2543713733a622bd57b5be133761d98a81a91e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;put&quot;&gt; put() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;put&quot;&gt; put() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1ba7ca5de1f65b7aabefd3fb3e32bae61bfdfe1a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;queries&quot;&gt;queries&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;queries&quot;&gt;queries&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cc561da147d2b204f4d3c651fb68ea3ccd5301d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;query&quot;&gt; query() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;query&quot;&gt; query() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="236db9d328da5f26db1014ac6ff7ff2b59707467" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;queryall&quot;&gt; queryAll() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;queryall&quot;&gt; queryAll() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97bd9db07002b8325907acadd446eb7c571fcb01" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;queryallnodes&quot;&gt; queryAllNodes() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;queryallnodes&quot;&gt; queryAllNodes() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48f938ee506c6256678fbebea1f2d47e322b92b5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ready&quot;&gt; ready() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ready&quot;&gt; ready() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6a8eacb30e3e6941ef92f5e2623340199c68c21e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;reattach&quot;&gt; reattach() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;reattach&quot;&gt; reattach() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78c45c71245a897960e6edc3ab1716d138e6d319" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;reduce&quot;&gt; reduce() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;reduce&quot;&gt; reduce() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b8f35fa180ee52a4f656c9f7f4d9f58f87cab33c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;register&quot;&gt; register() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;register&quot;&gt; register() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a631168ec6b19194eb131ca757e8347df8d00f97" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registerapplication&quot;&gt; registerApplication() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registerapplication&quot;&gt; registerApplication() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="18b608c2b5fabcb688fa6075e4a5165136b27f1f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registercontrol&quot;&gt; registerControl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registercontrol&quot;&gt; registerControl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="23df8052401054bfd086d8f0d859078b94007df7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registerforng1tests&quot;&gt; registerForNg1Tests() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registerforng1tests&quot;&gt; registerForNg1Tests() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4977666a16475c693a1868417556565589e390f3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registermethod&quot;&gt; registerMethod() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registermethod&quot;&gt; registerMethod() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c612f0c3b1af361e71d8442b780504a42edd13d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registeronchange&quot;&gt; registerOnChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registeronchange&quot;&gt; registerOnChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f039faa12aee3316c9f1d0ca13e5a6209c2de088" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registerondisabledchange&quot;&gt; registerOnDisabledChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registerondisabledchange&quot;&gt; registerOnDisabledChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="03627b3c09040bb6c3bca41bddd76c8671259d90" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registerontouched&quot;&gt; registerOnTouched() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registerontouched&quot;&gt; registerOnTouched() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="341e9880ff7f7690f390aedf17ddfe48fe096d00" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;registeronvalidatorchange&quot;&gt; registerOnValidatorChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;registeronvalidatorchange&quot;&gt; registerOnValidatorChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2f5e18c5a301a84dd105f2f11da7f0c4b74d7028" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;remove&quot;&gt; remove() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;remove&quot;&gt; remove() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3098cc586bea3ff27815849d327b195be8bd19af" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removeat&quot;&gt; removeAt() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removeat&quot;&gt; removeAt() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1beac0d1509c16aae6b3e6795b5221054ef671cb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removeattribute&quot;&gt; removeAttribute() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removeattribute&quot;&gt; removeAttribute() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9aa0f1a435059b2e8f862845cc1164400b354f5d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removechild&quot;&gt; removeChild() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removechild&quot;&gt; removeChild() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e7ed451353f8bd0681ce517957dd95841116169e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removeclass&quot;&gt; removeClass() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removeclass&quot;&gt; removeClass() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6529f481340df3d69f4a6e568e3a465988e82a83" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removecontrol&quot;&gt; removeControl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removecontrol&quot;&gt; removeControl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cada9fd54481b17cbb739dd84fc60132e5b17d69" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removeformarray&quot;&gt; removeFormArray() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removeformarray&quot;&gt; removeFormArray() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a68dfdc809992a21bd97d493591c36d703d150d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removeformgroup&quot;&gt; removeFormGroup() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removeformgroup&quot;&gt; removeFormGroup() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a4494c39c5f1d76bfad4940fe642c226790e5577" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removestyle&quot;&gt; removeStyle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removestyle&quot;&gt; removeStyle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7330d3f45ec671fbd62bc9ed669bd88f3e12270b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removetag&quot;&gt; removeTag() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removetag&quot;&gt; removeTag() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b6967f743b1381dc22725e823a70c74b6031dbc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;removetagelement&quot;&gt; removeTagElement() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;removetagelement&quot;&gt; removeTagElement() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d27607f782d0697e69712f2508d2a5bedf2a5c5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;rendercomponent&quot;&gt; renderComponent() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;rendercomponent&quot;&gt; renderComponent() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b688fa066e8e3207ca5a8eeea5570e2a75bfc55" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;rendertostring&quot;&gt; renderToString() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;rendertostring&quot;&gt; renderToString() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b31bb7acd957470208d00922adff80232213d9d6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;replace&quot;&gt; replace() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;replace&quot;&gt; replace() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6e288eed1f5f7c69ebabdee742a95c2c772a664" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;replacestate&quot;&gt; replaceState() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;replacestate&quot;&gt; replaceState() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5a10980bce4ccdfd7e1200c92e96efd0dbdc472d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;request&quot;&gt; request() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;request&quot;&gt; request() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2842c9cbd6441abd229c81a6a1134cbc4a43009f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;requestsubscription&quot;&gt; requestSubscription() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;requestsubscription&quot;&gt; requestSubscription() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88b0189c02cf10caca5e71d503cca57318b6c8b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;required&quot;&gt; required() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;required&quot;&gt; required() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a4b9a34a3da4ea253a0757b6b3ebdd3b2a24ace4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;requiredtrue&quot;&gt; requiredTrue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;requiredtrue&quot;&gt; requiredTrue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b267d857b0131344314d510772c126d7b27cc11c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;reset&quot;&gt; reset() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;reset&quot;&gt; reset() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d86a3cb82fd96d8cb6acf386e8956e3c47791ad7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resetconfig&quot;&gt; resetConfig() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resetconfig&quot;&gt; resetConfig() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b1596c4c3455ab1a7b19069dd03e61f3f321cc9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resetform&quot;&gt; resetForm() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resetform&quot;&gt; resetForm() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="75957227ef29083c991473660685f0d210172a61" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resettestenvironment&quot;&gt; resetTestEnvironment() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resettestenvironment&quot;&gt; resetTestEnvironment() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="15d5f4770839472e312b116e78688146e362c1c4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resettestingmodule&quot;&gt; resetTestingModule() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resettestingmodule&quot;&gt; resetTestingModule() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="965c75e330face215acaf6d13aaf7f0cfb6a328d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resolve&quot;&gt; resolve() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resolve&quot;&gt; resolve() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="025dd2c49d93c168cbf0326fe4bb015a20a41cc3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resolve-1&quot;&gt; resolve() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resolve-1&quot;&gt; resolve() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79ed33ca49b2de4f6ee6ddeb13096056782cfd1d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resolveandcreate&quot;&gt; resolveAndCreate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resolveandcreate&quot;&gt; resolveAndCreate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e44b7e225863c7e96d34dc0cc0fe1251b89cd7cf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resolveandcreatechild&quot;&gt; resolveAndCreateChild() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resolveandcreatechild&quot;&gt; resolveAndCreateChild() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4cde0806ea4d94eb4de2347048d0068278e9c5c3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resolveandinstantiate&quot;&gt; resolveAndInstantiate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resolveandinstantiate&quot;&gt; resolveAndInstantiate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ab22158fbb58c5be0c990572990e22e4fb825fd1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;resolvecomponentfactory&quot;&gt; resolveComponentFactory() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;resolvecomponentfactory&quot;&gt; resolveComponentFactory() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e1c9ce9466d90f62fbdd95c714832df8060d687" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;restart&quot;&gt; restart() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;restart&quot;&gt; restart() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9f1ca52ae8082c17d4ab768bc0a67051b8e42808" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;retrieve&quot;&gt; retrieve() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;retrieve&quot;&gt; retrieve() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="94e4bd5878bec9bb95fc67643147536991682b8f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;run&quot;&gt; run() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;run&quot;&gt; run() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="830c48f34fc2b9ca73835cfbf990197c7b75ad44" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;runguarded&quot;&gt; runGuarded() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;runguarded&quot;&gt; runGuarded() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="764504e00085ccdac1524ccde011f71913cec56a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;runonservice&quot;&gt; runOnService() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;runonservice&quot;&gt; runOnService() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="244896470ea04520ccdda95205aa40ad3e4c752e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;runoutsideangular&quot;&gt; runOutsideAngular() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;runoutsideangular&quot;&gt; runOutsideAngular() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="efbbb82802172f66edf0c88f877926f7b4e4f455" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;runtask&quot;&gt; runTask() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;runtask&quot;&gt; runTask() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c7dd2060e796d580925ad55e9a75440536bfb30" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;sanitize&quot;&gt; sanitize() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;sanitize&quot;&gt; sanitize() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61d03841f507371539a4d48885355cea053da79e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;schemas&quot;&gt;schemas&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;schemas&quot;&gt;schemas&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f05912ff3c678379fa8424c51a92cdb622fb5b1a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;scrolltoanchor&quot;&gt; scrollToAnchor() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;scrolltoanchor&quot;&gt; scrollToAnchor() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="794dd3be5916d9462bdbafa8e060f0dfacb409c4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;scrolltoposition&quot;&gt; scrollToPosition() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;scrolltoposition&quot;&gt; scrollToPosition() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="435e68b1ad745b50b0c8fe363b984ea12f855531" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;search&quot;&gt; search() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;search&quot;&gt; search() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="27b0be21595a5d282811e7bdcc607ffbedc95df9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;selector&quot;&gt;selector&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;selector&quot;&gt;selector&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="62d1604cb00106e5c2272d21acaba22cb04f5416" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;selectrootelement&quot;&gt; selectRootElement() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;selectrootelement&quot;&gt; selectRootElement() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3bd24aa788e8d4e511edf5dbf7c12dfc69ee4eee" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;serialize&quot;&gt; serialize() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;serialize&quot;&gt; serialize() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20c0cb1f16580ce1d89944af81d6090504dd63b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;serializebody&quot;&gt; serializeBody() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;serializebody&quot;&gt; serializeBody() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="21460f61054d0b81b3c6a56f09415282d62efe79" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;serializeurl&quot;&gt; serializeUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;serializeurl&quot;&gt; serializeUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fcf401823bca6d0becfe73ec05dcf149dd4f7122" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;set&quot;&gt; set() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;set&quot;&gt; set() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8dd40f57c9533001ebb61a64f9e46e7293395827" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setasyncvalidators&quot;&gt; setAsyncValidators() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setasyncvalidators&quot;&gt; setAsyncValidators() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="43a1ee897bd64ec4ad876e1392c4b7d55d5d2ffd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setattribute&quot;&gt; setAttribute() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setattribute&quot;&gt; setAttribute() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="91db73a4977dc6cf92b2d55e47ecf4153eb167fa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setbasehref&quot;&gt; setBaseHref() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setbasehref&quot;&gt; setBaseHref() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f0c299c9e42fc85e422c334e5a25233494e6b5a6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setbindingdebuginfo&quot;&gt; setBindingDebugInfo() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setbindingdebuginfo&quot;&gt; setBindingDebugInfo() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78d591037f219cc64f54a6eabe1de9d94ed70bca" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setcontrol&quot;&gt; setControl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setcontrol&quot;&gt; setControl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b32512189bb82447656d47fff0643e1503b2628" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setdirty&quot;&gt; setDirty() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setdirty&quot;&gt; setDirty() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4fd894927c715066d582ee3f0a57a0f47edd8ae8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setdisabledstate&quot;&gt; setDisabledState() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setdisabledstate&quot;&gt; setDisabledState() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ced17b6aaddad6155793fa7b976d48323ef6d487" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setelementattribute&quot;&gt; setElementAttribute() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setelementattribute&quot;&gt; setElementAttribute() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc0ee12172651e066e3e8cb05e2b1e2797b69202" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setelementclass&quot;&gt; setElementClass() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setelementclass&quot;&gt; setElementClass() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="545a8838696ddaf86ba72c74ef2325fc81f99ea0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setelementproperty&quot;&gt; setElementProperty() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setelementproperty&quot;&gt; setElementProperty() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cc05a5be61a3f5fdf9ad739c0bc0c4a3d0bdfdc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setelementstyle&quot;&gt; setElementStyle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setelementstyle&quot;&gt; setElementStyle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0696d77d35443476884cd20b279bec64fac942e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;seterrors&quot;&gt; setErrors() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;seterrors&quot;&gt; setErrors() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="adbcc15c90771f8bf624ac5aeaf6b13871ce539b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;sethistoryscrollrestoration&quot;&gt; setHistoryScrollRestoration() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;sethistoryscrollrestoration&quot;&gt; setHistoryScrollRestoration() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54d32a5dc6d4e53d95788b6afbc210313ed95cd6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setinitialpath&quot;&gt; setInitialPath() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setinitialpath&quot;&gt; setInitialPath() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="23f875ba1155d0ed1e561f81d5a20981963e2d41" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setinputvalue&quot;&gt; setInputValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setinputvalue&quot;&gt; setInputValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a2c240de5a7108100ba776e0e6e57738a50a9bb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setoffset&quot;&gt; setOffset() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setoffset&quot;&gt; setOffset() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="60c027588dcd577a8cc7e7c331d527c8a98334ce" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setparent&quot;&gt; setParent() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setparent&quot;&gt; setParent() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a54392f69a1eee726c73d68f775bfbc9220a636" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setposition&quot;&gt; setPosition() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setposition&quot;&gt; setPosition() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ece4fab6baf6d0145606fdfbe39de54c127fc18" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setproperty&quot;&gt; setProperty() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setproperty&quot;&gt; setProperty() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="189dceca3ac8d28d2a78602d5277e42621996582" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setstyle&quot;&gt; setStyle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setstyle&quot;&gt; setStyle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e69a03f1db32afc3f875d12cf8867a7e7c8974a0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;settext&quot;&gt; setText() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;settext&quot;&gt; setText() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0fd3224b517497c0bbffe2589584d40403060f2b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;settitle&quot;&gt; setTitle() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;settitle&quot;&gt; setTitle() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e179c880997773f26c40e43166dc996694c0bf2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setuplocationchangelistener&quot;&gt; setUpLocationChangeListener() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setuplocationchangelistener&quot;&gt; setUpLocationChangeListener() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8880ad9443cac40f9bae073793d2dab40e3168bb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setuppreloading&quot;&gt; setUpPreloading() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setuppreloading&quot;&gt; setUpPreloading() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8edb69c0cab6c64c59ab0df18fa4ed3ad2ffc6e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setvalidators&quot;&gt; setValidators() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setvalidators&quot;&gt; setValidators() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b17d59971e26ebbb4394e2dc88a0df66117c58a0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;setvalue&quot;&gt; setValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;setvalue&quot;&gt; setValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="500cf06e4e89a82fc4800c1ec16e5907968829f1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;shouldattach&quot;&gt; shouldAttach() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;shouldattach&quot;&gt; shouldAttach() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8ca052ca3fc80333c16f2aa399d2f0fdbb82c5cf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;shoulddetach&quot;&gt; shouldDetach() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;shoulddetach&quot;&gt; shouldDetach() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cccf34bd6f524df268d82e9a54c78bd48e5d3364" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;shouldprocessurl&quot;&gt; shouldProcessUrl() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;shouldprocessurl&quot;&gt; shouldProcessUrl() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="71a165d7dae190caad628aa63cfb58ddb24d998f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;shouldreuseroute&quot;&gt; shouldReuseRoute() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;shouldreuseroute&quot;&gt; shouldReuseRoute() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e30ca575614c0238fc8d10c2e1b7f1945cf9a799" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;simulatehashchange&quot;&gt; simulateHashChange() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;simulatehashchange&quot;&gt; simulateHashChange() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f3dc7ad07821b28ceb46ea6dce477bad2d22afd7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;simulatepopstate&quot;&gt; simulatePopState() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;simulatepopstate&quot;&gt; simulatePopState() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="341120a595645af02b9f7cf61028adb50ecd2c67" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;simulateurlpop&quot;&gt; simulateUrlPop() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;simulateurlpop&quot;&gt; simulateUrlPop() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="017fd95d4a4b1eec2778be104839df83e994565a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;some&quot;&gt; some() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;some&quot;&gt; some() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a71b46e9432dded41801bd5fbae9a1ee84a599e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;state&quot;&gt; state() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;state&quot;&gt; state() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f53940c26d50e1b895efa3272d5d6bc6cfdc3b0f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;store&quot;&gt; store() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;store&quot;&gt; store() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b5b4df686bba99e103c3ddc39f48bdda92b973eb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;striptrailingslash&quot;&gt; stripTrailingSlash() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;striptrailingslash&quot;&gt; stripTrailingSlash() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="579a36bf9cc883e39a7d57672d27b3f2737dda78" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;styles&quot;&gt;styles&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;styles&quot;&gt;styles&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ac29ebbe0ecf784249044ab6e000e60aaad63442" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;styleurls&quot;&gt;styleUrls&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;styleurls&quot;&gt;styleUrls&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b968d338e4f9ee8d2b5cfee90c5dba6160dae5cc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;subscribe&quot;&gt; subscribe() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;subscribe&quot;&gt; subscribe() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ae97301eddbcf9825e1fdcedf3a8bc4fb135f9b4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;supports&quot;&gt; supports() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;supports&quot;&gt; supports() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32621f1f72eae9776813bc699a5ddb64e4981735" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;template&quot;&gt;template&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;template&quot;&gt;template&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="38011b5fc676a79b92e91b6b3798249c851ced14" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;templateurl&quot;&gt;templateUrl&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;templateurl&quot;&gt;templateUrl&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c28c2820cf42c26e02a82782fcebb30b9e8ef4ec" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;tick&quot;&gt; tick() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;tick&quot;&gt; tick() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dad4e5dd0503b00a2fe945a1baccda23b06216e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;to&quot;&gt; to() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;to&quot;&gt; to() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="21a1b842a9d1d2357faddfe9d316577f9d67b2cc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;toarray&quot;&gt; toArray() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;toarray&quot;&gt; toArray() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eb38f275cc115010e4c70ee8a259c2d2b9484d97" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;tojson&quot;&gt; toJson() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;tojson&quot;&gt; toJson() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1ee6518361ed5bbd3b32c1c8796c24721c77a74d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;token&quot;&gt;token&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;token&quot;&gt;token&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6dfb02353c0b27b9c119c406fac102f41824e26f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;tostring&quot;&gt; toString() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;tostring&quot;&gt; toString() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="37d04c948684675e7a813349095af9f4cea44a3d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;transform&quot;&gt; transform() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;transform&quot;&gt; transform() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="510e37b8a1baf8ced82ccd363a1428a21cefae63" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;triggereventhandler&quot;&gt; triggerEventHandler() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;triggereventhandler&quot;&gt; triggerEventHandler() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d2d0213304c4ec67e7d6dceac27ba089dd015e76" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;triggermicrotask&quot;&gt; triggerMicrotask() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;triggermicrotask&quot;&gt; triggerMicrotask() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b07d9c660f8e24836fa232a54e3ca322682f48d1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;unregisterallapplications&quot;&gt; unregisterAllApplications() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;unregisterallapplications&quot;&gt; unregisterAllApplications() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="32b4380e8293b0e9dda5263c7847889bb80f4fc6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;unregisterapplication&quot;&gt; unregisterApplication() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;unregisterapplication&quot;&gt; unregisterApplication() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ddd5b63325667d8e1ebf37e4ba3aa17e08ac2ca6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;unsubscribe&quot;&gt; unsubscribe() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;unsubscribe&quot;&gt; unsubscribe() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c3a82955191c962ec3229eba8b358a1bbc68020c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;unwrap&quot;&gt; unwrap() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;unwrap&quot;&gt; unwrap() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cb2e298db4ca9dd59d45f7d6a74479510e02af97" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;updatemodel&quot;&gt; updateModel() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;updatemodel&quot;&gt; updateModel() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="deaf128dfd512fb7e8e6bfbbbfff366c73807f83" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;updatetag&quot;&gt; updateTag() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;updatetag&quot;&gt; updateTag() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="667a91bd2a056fba3ae8d232f5e61aec9cc0d480" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;updatevalueandvalidity&quot;&gt; updateValueAndValidity() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;updatevalueandvalidity&quot;&gt; updateValueAndValidity() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a312af16964a85245e2d1515768f31b286f3cdd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;upgradeng1component&quot;&gt; upgradeNg1Component() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;upgradeng1component&quot;&gt; upgradeNg1Component() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d4f419d79219d3e6e3835288efa7b15858c613b3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;upgradeng1provider&quot;&gt; upgradeNg1Provider() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;upgradeng1provider&quot;&gt; upgradeNg1Provider() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a50658ec684adf1de6fe9595ce379876c19305eb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;url&quot;&gt; url() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;url&quot;&gt; url() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6c0b5e7bcfeb8f47857f3e4e5be7cdf31603f94c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;validate&quot;&gt; validate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;validate&quot;&gt; validate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0e50f3c6e1518fd58afdf4ea8892f8586d28b3d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;validatestyleproperty&quot;&gt; validateStyleProperty() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;validatestyleproperty&quot;&gt; validateStyleProperty() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cea02dae97fd39420deb783a4488da4b7c1bbd19" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;verify&quot;&gt; verify() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;verify&quot;&gt; verify() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f76db5fbd7b657d2535ce38faafde016377cd814" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;viewproviders&quot;&gt;viewProviders&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;viewproviders&quot;&gt;viewProviders&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="289f18202c00afa198274a7eb3a8bd1f5031e733" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;viewtomodelupdate&quot;&gt; viewToModelUpdate() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;viewtomodelupdate&quot;&gt; viewToModelUpdate() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58d63dc739b73222aa350279d7308f3ffeed4bd3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;whenrenderingdone&quot;&gt; whenRenderingDone() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;whenrenderingdone&quot;&gt; whenRenderingDone() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="329dc9b5336157aabcf1dbdd69390d3cbca22a22" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;whenstable&quot;&gt; whenStable() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;whenstable&quot;&gt; whenStable() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0397a5b50fb5dd090742c8a4b16558cb44446bc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;withconfig&quot;&gt; withConfig() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;withconfig&quot;&gt; withConfig() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0e42f5ab1ed5259398d599c6bad03b62bf63302a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;withoptions&quot;&gt; withOptions() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;withoptions&quot;&gt; withOptions() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88f615377f1f9d59f8391f2d2976c67ffc4469cd" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;withroutes&quot;&gt; withRoutes() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;withroutes&quot;&gt; withRoutes() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="16ece139f123d2910947eb0b306806a03320b056" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;withservertransition&quot;&gt; withServerTransition() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;withservertransition&quot;&gt; withServerTransition() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b3fdb7a5585829e4fc69fb21a0c7f44de4115385" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;wrap&quot;&gt; wrap() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;wrap&quot;&gt; wrap() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fbe93c2ca550fb359728cf3d8b5afbc970b206ef" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;writevalue&quot;&gt; writeValue() &lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;writevalue&quot;&gt; writeValue() &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b1a0f312b01a5723f54666d9ee64c761c413e9a" translate="yes" xml:space="preserve">
          <source>&lt;span name=&quot;getting-started-v0&quot;&gt;Click here to create a new project in StackBlitz.&lt;/span&gt;</source>
          <target state="translated">&lt;span name=&quot;getting-started-v0&quot;&gt;StackBlitz에서 새 프로젝트를 만들려면 여기를 클릭하십시오.&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="34bb284e5e6e2c43b4272e09dd750d182a645648" translate="yes" xml:space="preserve">
          <source>&lt;span name=&quot;getting-started-v0&quot;&gt;Click here to create the ready-made sample project in StackBlitz.&lt;/span&gt;</source>
          <target state="translated">&lt;span name=&quot;getting-started-v0&quot;&gt;StackBlitz에서 기성품 샘플 프로젝트를 만들려면 여기를 클릭하십시오.&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0061e2ed66693498025d4ccb68d6899a95d8c1e5" translate="yes" xml:space="preserve">
          <source>&lt;span name=&quot;router&quot;&gt;Live Example from the Router guide&lt;/span&gt;</source>
          <target state="translated">&lt;span name=&quot;router&quot;&gt;라우터 가이드의 라이브 예&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2399fd8f80b20cb284e5ef315b6d7a1ada5d00f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;params&lt;/code&gt;&lt;/strong&gt;&amp;mdash;An &lt;code&gt;Observable&lt;/code&gt; that contains the required and &lt;a href=&quot;router#optional-route-parameters&quot;&gt;optional parameters&lt;/a&gt; specific to the route. Use &lt;code&gt;paramMap&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;params&lt;/code&gt; &lt;/strong&gt; -an &lt;code&gt;Observable&lt;/code&gt; 필수 및 포함&lt;a href=&quot;router#optional-route-parameters&quot;&gt; 선택적 매개 변수&lt;/a&gt; 경로에 특정합니다. 대신 &lt;code&gt;paramMap&lt;/code&gt; 을사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b9956320384b1fed329df6dbbcc21732c383010c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;queryParams&lt;/code&gt;&lt;/strong&gt;&amp;mdash;An &lt;code&gt;Observable&lt;/code&gt; that contains the &lt;a href=&quot;router#query-parameters&quot;&gt;query parameters&lt;/a&gt; available to all routes. Use &lt;code&gt;queryParamMap&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;queryParams&lt;/code&gt; &lt;/strong&gt; -an &lt;code&gt;Observable&lt;/code&gt; 포함&lt;a href=&quot;router#query-parameters&quot;&gt; 쿼리 매개 변수&lt;/a&gt; 모든 경로에 사용할 수 있습니다. 대신 &lt;code&gt;queryParamMap&lt;/code&gt; 을사용하십시오.</target>
        </trans-unit>
        <trans-unit id="83ace5a675216403793de105124f596f5fc9c4b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Ahead-of-Time&lt;/em&gt; (AOT)&lt;/strong&gt;, which compiles your app and libraries at build time. This is the default since Angular 9.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;/em&gt;AOT ( &lt;em&gt;Ahead-of-Time&lt;/em&gt; ) &lt;em&gt;-&lt;/em&gt;&lt;/strong&gt; 빌드시 앱과 라이브러리를 컴파일합니다. Angular 9 이후의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="926581d08807c2338d38b3dace8f8a713479af84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Ahead-of-Time&lt;/em&gt; (AOT)&lt;/strong&gt;, which compiles your app at build time.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;/em&gt;AOT ( &lt;em&gt;Ahead-of-Time&lt;/em&gt; ) &lt;em&gt;-&lt;/em&gt;&lt;/strong&gt; 빌드시 앱을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="9c379b007b1be9cf370b7151e6ef84c68dd997d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Do not click either button yet&lt;/em&gt;&lt;/strong&gt;. Click the browser back button or the &quot;Heroes&quot; link instead.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;아직 아무 버튼이나 클릭하지 마십시오&lt;/em&gt;&lt;/strong&gt; . 대신 브라우저 뒤로 버튼 또는 &quot;영웅&quot;링크를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="fb71b13de48cff9a792778fd5929e5db42204f7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Just-in-Time&lt;/em&gt; (JIT)&lt;/strong&gt;, which compiles your app in the browser at runtime.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;/em&gt;JIT (Just &lt;em&gt;-in-Time&lt;/em&gt; ) &lt;em&gt;-&lt;/em&gt;&lt;/strong&gt; 런타임시 브라우저에서 앱을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="7794b8817f882a53c8144fbafefe1018dba39b15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Just-in-Time&lt;/em&gt; (JIT)&lt;/strong&gt;, which compiles your app in the browser at runtime. This was the default until Angular 8.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;/em&gt;JIT (Just &lt;em&gt;-in-Time&lt;/em&gt; ) &lt;em&gt;-&lt;/em&gt;&lt;/strong&gt; 런타임시 브라우저에서 앱을 컴파일합니다. Angular 8까지는 기본값이었습니다.</target>
        </trans-unit>
        <trans-unit id="ec81a30e0811f7baf83e33905aabdb9eea98e772" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;bootstrap&lt;/em&gt;&lt;/strong&gt;&amp;mdash;the &lt;em&gt;root&lt;/em&gt; component that Angular creates and inserts into the &lt;code&gt;index.html&lt;/code&gt; host web page.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;bootstrap&lt;/em&gt;&lt;/strong&gt; &amp;mdash;Angular가 &lt;code&gt;index.html&lt;/code&gt; 호스트 웹 페이지에작성하고 삽입하는&lt;em&gt; 루트&lt;/em&gt; 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="ddd00836d36adffc91dbac9dbc07db15b1f07db4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;declarations&lt;/em&gt;&lt;/strong&gt;&amp;mdash;this application's lone component.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;선언&lt;/em&gt;&lt;/strong&gt; &amp;mdash;이 응용 프로그램의 고독한 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6ac59a665f8320fb665ffcec31d0d9467adf4b86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;imports&lt;/em&gt;&lt;/strong&gt;&amp;mdash;import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; to have browser specific services such as DOM rendering, sanitization, and location.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;수입&lt;/em&gt;&lt;/strong&gt; -import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 는 같은 DOM 렌더링, 위생 및 위치로 브라우저 특정 서비스를합니다.</target>
        </trans-unit>
        <trans-unit id="22e2831b82655d1bb40496c97676096936244773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;providers&lt;/em&gt;&lt;/strong&gt;&amp;mdash;the service providers.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;공급자&lt;/em&gt;&lt;/strong&gt; &amp;mdash; 서비스 공급자.</target>
        </trans-unit>
        <trans-unit id="882eada190c140381d5a8e526fb865d24874bfb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/animations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/animations&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b1287514d31e8c3c6afababcc610730c4f7100a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/cli&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/cli&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dc131efca3c8f0917463bece0f4531fe9ebe560" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/common&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/common&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24417b89241db89ffc6fa65a2342aaaf28660466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/compiler&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/compiler&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4ec680bfa1102449876c9a68880656cd1555eb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/compiler‑cli&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/compiler‑cli&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65f8bf21bf57bdd2832376f96ffe72d631447bac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/core&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/core&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15914ee8a77f1c4eb2d0bae83e20c54241e03205" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/forms&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/forms&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="030b12243885ac96f1b15f1479441c20bffcb6ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/language‑service&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/language‑service&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f47edf9e26bfbe27e99754ca4c3b2a496b81feb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/platform‑browser&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/platform‑browser&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f246406e3c28696ae361b2c9c26e2fb047d2445" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/platform‑browser‑dynamic&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/platform‑browser‑dynamic&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e10a209bf38240aaf01ef6b84740c43f01fae1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular/router&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular/router&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="962b3ab88cd0a07036c416e549be9909517c8807" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@angular‑devkit/build‑angular&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@angular‑devkit/build‑angular&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a111656b379080ca4becca1e6ad5f9c71903258c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@types/... &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@types/... &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba22a9c476d855afaa2849fb1d6cfc75cff0e236" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A component class&lt;/strong&gt; that handles data and functionality. In the previous section, the product data and the &lt;code&gt;share()&lt;/code&gt; method in the component class handle data and functionality, respectively.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;데이터 및 기능을 처리 &lt;strong&gt;하는 구성 요소 클래스 &lt;/strong&gt;이전 섹션 에서 구성 요소 클래스 의 제품 데이터와 &lt;code&gt;share()&lt;/code&gt; 메서드는 각각 데이터와 기능을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="7523b73a3b3360721f46b7ad96b2b4181ddc1d2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access the FormArray control&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FormArray 컨트롤에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dac1ce15754cdf71f19ce164b4ab1ba43d4cc70b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add an alias&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;별칭 추가&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afdbc6f595603dd8e248a8deb28ba09466bcc580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;After&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;After&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb823f67a7cbb8600c4f0350f1c2ad73fe2d021a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;After&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;After&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="c7eb6ccc0fec995ea50e2505216865f668106186" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always &lt;em&gt;subscribe&lt;/em&gt;!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;항상 &lt;em&gt;구독하십시오&lt;/em&gt; !&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dd3d0fd7d95e54366a4864b8a1949979bc3b5fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always follow the section heading with at least one blank line.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;항상 하나 이상의 빈 줄로 섹션 제목을 따르십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd28683a1bb9e70a9624bcf2ed6037e597adacfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always follow the title with at least one blank line.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;항상 하나 이상의 빈 줄로 제목을 따르십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bae8352445003e5c90f3977a267ce83ab9c6dc6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always&lt;/strong&gt; follow every opening and closing HTML tag with &lt;em&gt;a blank line&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;항상 &lt;/strong&gt;&lt;em&gt;빈 줄로&lt;/em&gt; 모든 HTML 태그를 &lt;em&gt;여십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0c33b9eaeb6663d2ee708f210b56ba8ac8b915f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always&lt;/strong&gt; specify the complete &lt;em&gt;absolute&lt;/em&gt; path when calling router's &lt;code&gt;navigateByUrl&lt;/code&gt; method.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;라우터의 &lt;code&gt;navigateByUrl&lt;/code&gt; 메소드를 호출 할 때는 &lt;strong&gt;항상&lt;/strong&gt; 완전한 &lt;em&gt;절대&lt;/em&gt; 경로를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f3e51691add91a33a7a92109cd91a63d7337525" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;An HTML template&lt;/strong&gt; that determines the UI. In the previous section, the product list's HTML template displays the name, description, and a &quot;Share&quot; button for each product.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;UI를 결정 &lt;strong&gt;하는 HTML 템플릿&lt;/strong&gt; . 이전 섹션에서 제품 목록의 HTML 템플릿은 각 제품의 이름, 설명 및 &quot;공유&quot;버튼을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="efba267cd8e72994170e372e99a1f3b82d0fdd8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Angular coding style:&lt;/strong&gt; Coding style for example apps and code snippets. Code examples are encouraged for demonstrating how to apply the concepts and features discussed. Angular has a custom framework that enables authors to include code snippets directly from example apps that are automatically tested as part of doc builds. To contribute example code, you must understand Angular itself and the custom framework for Angular doc examples.</source>
          <target state="translated">&lt;strong&gt;각도 코딩 스타일 :&lt;/strong&gt; 앱 및 코드 스 니펫과 같은 코딩 스타일. 논의 된 개념과 기능을 적용하는 방법을 보여주기 위해 코드 예제를 권장합니다. Angular에는 작성자가 문서 빌드의 일부로 자동 테스트되는 예제 앱에서 직접 코드 스 니펫을 포함 할 수있는 사용자 정의 프레임 워크가 있습니다. 예제 코드를 제공하려면 Angular 자체와 Angular 문서 예제의 사용자 지정 프레임 워크를 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="a5ef1b8117fa06d080da02258ad22b2ad1e0436a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Angular coding style&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;각도 코딩 스타일&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87fe2d5b4eda11833e9c4e4accff593ce2256438" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Announcement:&lt;/strong&gt; We announce deprecated APIs and features in the &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;change log&lt;/a&gt;. Deprecated APIs appear in the &lt;a href=&quot;api?status=deprecated&quot;&gt;documentation&lt;/a&gt; with &lt;del&gt;strikethrough.&lt;/del&gt; When we announce a deprecation, we also announce a recommended update path. For convenience, &lt;a href=&quot;deprecations&quot;&gt;Deprecations&lt;/a&gt; contains a summary of deprecated APIs and features.</source>
          <target state="translated">&lt;strong&gt;발표 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;변경 로그&lt;/a&gt; 에서 사용되지 않는 API 및 기능을 발표 합니다. 사용되지 않는 API는에 표시되는 &lt;a href=&quot;api?status=deprecated&quot;&gt;문서&lt;/a&gt; 와&lt;del&gt;취소 선.&lt;/del&gt;지원 중단을 발표 할 때 권장되는 업데이트 경로도 발표합니다. 편의상 &lt;a href=&quot;deprecations&quot;&gt;Deprecations&lt;/a&gt; 에는 더 이상 사용되지 않는 API 및 기능이 요약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="09f4443909d70a113a73e5d66d3a4a18219ba347" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;App navigation&lt;/strong&gt;: request URL with no file extension.</source>
          <target state="translated">&lt;strong&gt;앱 탐색&lt;/strong&gt; : 파일 확장자가없는 요청 URL입니다.</target>
        </trans-unit>
        <trans-unit id="79563cc02099d09bd713aad21ee6f252f3726998" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associate the FormGroup model and view&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FormGroup 모델 및보기 연결&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4cad91c29fd074864f0a71fb24c57678dfabcde3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Async validators&lt;/strong&gt;: Asynchronous functions that take a control instance and return a Promise or Observable that later emits a set of validation errors or &lt;code&gt;null&lt;/code&gt;. You can pass these in as the third argument when you instantiate a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;비동기 유효성 검사기&lt;/strong&gt; : 제어 인스턴스를 가져와 나중에 유효성 검사 오류 또는 &lt;code&gt;null&lt;/code&gt; 집합을 생성하는 Promise 또는 Observable을 반환하는 비동기 함수입니다 . &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 을 인스턴스화 할 때 세 번째 인수로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f54e6570b66e2c3ded62294c61703110786eb4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Async validators&lt;/strong&gt;: functions that take a control instance and return a Promise or Observable that later emits a set of validation errors or &lt;code&gt;null&lt;/code&gt;. You can pass these in as the third argument when you instantiate a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;비동기 유효성 검사기&lt;/strong&gt; : 제어 인스턴스를 가져와 나중에 유효성 검사 오류 집합을 생성하는 Promise 또는 Observable을 반환하는 함수 또는 &lt;code&gt;null&lt;/code&gt; 입니다. &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 인스턴스화 할 때 세 번째 인수로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ebeadf3441a9489eb93ce5d5ed66976d77350a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Audience:&lt;/strong&gt; Use this guide &lt;strong&gt;only&lt;/strong&gt; in the context of &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt; or &lt;a href=&quot;upgrade-performance&quot;&gt;Upgrading for Performance&lt;/a&gt;. Those Upgrade guides refer to this Setup guide for information about using the &lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;deprecated QuickStart GitHub repository&lt;/a&gt;, which was created prior to the current Angular &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;대상 :&lt;/strong&gt; 이 안내서 &lt;a href=&quot;upgrade&quot;&gt;는 AngularJS에서 &lt;/a&gt;&lt;a href=&quot;upgrade-performance&quot;&gt;업그레이드&lt;/a&gt; 또는 성능 업그레이드 의 컨텍스트 &lt;strong&gt;에서만&lt;/strong&gt; 사용하십시오 . 이러한 업그레이드 안내서 는 현재 Angular &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; 이전에 작성된 &lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;더 이상 사용되지 않는 QuickStart GitHub 리포지토리&lt;/a&gt; 사용에 대한 정보는이 설치 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7dba8a2b7938b37de3c2b1537451532b49aec364" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid Angular APIs marked in the documentation as &amp;ldquo;&lt;em&gt;Security Risk&lt;/em&gt;.&amp;rdquo;&lt;/strong&gt; For more information, see the &lt;a href=&quot;security#bypass-security-apis&quot;&gt;Trusting safe values&lt;/a&gt; section of this page.</source>
          <target state="translated">&lt;strong&gt;설명서에 &quot; &lt;em&gt;보안 위험&lt;/em&gt; &quot;으로 표시된 Angular API는 사용하지 마십시오 . &lt;/strong&gt;자세한 내용 은이 페이지의 &lt;a href=&quot;security#bypass-security-apis&quot;&gt;안전한 값 신뢰&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a55ccf85926c09d85cb83bb7465fd1d17da0692b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid&lt;/strong&gt; allowing modules in sibling and parent folders to directly import a module in a &lt;em&gt;lazy loaded feature&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;피&lt;/strong&gt; 직접적으로 모듈을 가져 형제와 부모 폴더에 모듈을 허용 &lt;em&gt;게으른로드 기능&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5bb67df40eef8cf924a046e9d9d035e6c2f431b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid&lt;/strong&gt; being so DRY that you sacrifice readability.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;너무 건조해서 가독성을 희생 &lt;strong&gt;하지 마십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="55a14c88b43e780842c605b7885479983b8364f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid&lt;/strong&gt; files with multiple components, multiple services, or a mixture.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;여러 구성 요소, 여러 서비스 또는 혼합 파일이있는 파일을 &lt;strong&gt;피하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e3061502218edcc28e3ba8b28b46f97875e9aa11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid&lt;/strong&gt; indicates something you should almost never do. Code examples to &lt;em&gt;avoid&lt;/em&gt; have an unmistakable red header.</source>
          <target state="translated">&lt;strong&gt;피는&lt;/strong&gt; 거의하지 말아야 할 것을 나타냅니다. &lt;em&gt;피해야&lt;/em&gt; 할 코드 예제 에는 확실한 빨간색 헤더가 있습니다.</target>
        </trans-unit>
        <trans-unit id="68b96579bf2fc47c0cbe1deabcdb44419088aece" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid&lt;/strong&gt; putting app logic in &lt;code&gt;main.ts&lt;/code&gt;. Instead, consider placing it in a component or service.</source>
          <target state="translated">&lt;strong&gt;피&lt;/strong&gt; 에 응용 프로그램 로직을 넣어 &lt;code&gt;main.ts&lt;/code&gt; . 대신 구성 요소 또는 서비스에 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="fdf4caaa3dabe97430fc1e563611b7b8e679a578" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid&lt;/strong&gt; specifying app-wide singleton providers in a &lt;code&gt;SharedModule&lt;/code&gt;. Intentional singletons are OK. Take care.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt; &lt;code&gt;SharedModule&lt;/code&gt; 에 앱 전체 싱글 톤 공급자를 지정 &lt;strong&gt;하지 마십시오&lt;/strong&gt; . 의도적 인 싱글 톤은 괜찮습니다. 조심해</target>
        </trans-unit>
        <trans-unit id="b8a1041eb17149955f2f0a0d16ff9273d2ab042f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid&lt;/strong&gt;&lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; aliases except when it serves an important purpose.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;중요한 용도로 사용되는 경우를 제외하고 &lt;em&gt;입력&lt;/em&gt; 및 &lt;em&gt;출력&lt;/em&gt; 별명을 &lt;strong&gt;피하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="da9aaad1af04432cf200b3919b6b562bce8d0aaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Before&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Before&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="156a1437d0d6c924eb6ca12562027ff2587f6045" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Before&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Before&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="a83121790199c1336a68fc68bd2c38e0d75ff1d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Beta:&lt;/strong&gt; A release that is under active development and testing. A Beta release is indicated by a release tag appended with the &lt;code&gt;beta&lt;/code&gt; identifier, such as &lt;code&gt;8.0.0-beta.0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;베타 :&lt;/strong&gt; 활발한 개발 및 테스트중인 릴리스입니다. 베타 릴리스는 &lt;code&gt;beta&lt;/code&gt; 식별자가 추가 된 릴리스 태그 ( 예 : &lt;code&gt;8.0.0-beta.0&lt;/code&gt; )로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="e607dc0101732578d469ccff26859e28e6a36f89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bind to &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt;. The &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; directives are &lt;em&gt;structural&lt;/em&gt; directives because they add or remove elements from the DOM.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; 에&lt;/strong&gt;&lt;strong&gt; 바인딩합니다&lt;/strong&gt; . &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; 지침은 &lt;em&gt;구조&lt;/em&gt; 가 추가하거나 DOM에서 제거 요소 때문에 지시.</target>
        </trans-unit>
        <trans-unit id="f01da5ebd921ad9c256a0d1688b34f15c1559d13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bind to &lt;code&gt;[&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt;&lt;/strong&gt;. You'll get an error if you try to set &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; because &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; is an &lt;em&gt;attribute&lt;/em&gt; directive, not a &lt;em&gt;structural&lt;/em&gt; directive. Rather than touching the DOM directly, it changes the behavior of its companion directives.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;[&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; 바인딩합니다&lt;/strong&gt; . &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; 는 &lt;em&gt;구조적&lt;/em&gt; 지시문이 아닌 &lt;em&gt;속성&lt;/em&gt; 지시문 이므로 &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 를 설정하려고하면 오류가 발생합니다 . DOM을 직접 터치하지 않고 동반 지시문의 동작을 변경합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ead957e2e891e91a51a4dc45800e2b5b006c16a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution:&lt;/strong&gt; Use these HTML5 validation attributes &lt;em&gt;in combination with&lt;/em&gt; the built-in validators provided by Angular's reactive forms. Using these in combination prevents errors when the expression is changed after the template has been checked.</source>
          <target state="translated">&lt;strong&gt;주의 :&lt;/strong&gt; Angular의 반응 형 형식에서 제공하는 내장 유효성 검사기 &lt;em&gt;와 함께&lt;/em&gt; 이러한 HTML5 유효성 검사 특성 &lt;em&gt;을&lt;/em&gt; 사용하십시오 . 이들을 조합하여 사용하면 템플릿을 확인한 후 표현식을 변경할 때 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67a2a1278ad976d0be465f436291f5fa409acfdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Completion&lt;/strong&gt; Either the task is fully completed (for example, webpack was supposed to run a number of times), or the builder run was stopped (using &lt;code&gt;BuilderRun.stop()&lt;/code&gt;). Your teardown logic is executed, and Architect unsubscribes from your builder&amp;rsquo;s Observable.</source>
          <target state="translated">&lt;strong&gt;완료&lt;/strong&gt; 태스크가 완전히 완료되었거나 (예 : 웹팩이 여러 번 실행되어야 함) 빌더 실행이 중지되었습니다 ( &lt;code&gt;BuilderRun.stop()&lt;/code&gt; ). 해체 로직이 실행되고 Architect는 빌더의 Observable에서 구독을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="242f5be4da7e8c2c03b6303664ddb295af31197b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component-specific styles&lt;/strong&gt; that define the look and feel. Though product list does not define any styles, this is where component CSS resides.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;모양과 느낌을 정의하는 &lt;strong&gt;구성 요소 별 스타일&lt;/strong&gt; . 제품 목록은 스타일을 정의하지 않지만 구성 요소 CSS가있는 곳입니다.</target>
        </trans-unit>
        <trans-unit id="87b091349eb0d3f0abc63b529c765cca7b258fcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Composability/Grouping:&lt;/strong&gt; Bringing NgModules together and making them available via the &lt;code&gt;imports&lt;/code&gt; and &lt;code&gt;exports&lt;/code&gt; arrays.</source>
          <target state="translated">&lt;strong&gt;구성 성 / 그룹화 :&lt;/strong&gt; NgModules를 통합하여 &lt;code&gt;imports&lt;/code&gt; 및 &lt;code&gt;exports&lt;/code&gt; 배열을 통해 사용할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="dd0539b86debc4398fc40c50caaecfa5e698807d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conciseness&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conciseness&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db36e5fbaa1c90cc36d9b39f8d08fdda2f5a4b51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; adjusting the rules in codelyzer to suit your needs.</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 필요에 맞게 codelyzer의 규칙을 조정.</target>
        </trans-unit>
        <trans-unit id="d890fcb5f2895e976d9b2bf259857b4478df93cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; configuring the IDE to hide distracting, irrelevant files such as generated &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.js.map&lt;/code&gt; files.</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 숨기기 산만, 등의 발생으로 관련이없는 파일에 대한 IDE 구성 &lt;code&gt;.js&lt;/code&gt; 와 &lt;code&gt;.js.map&lt;/code&gt; 파일을.</target>
        </trans-unit>
        <trans-unit id="7811c4dddce4fa1adfdb1d5604a05ab7ef764b3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; creating a folder for a component when it has multiple accompanying files (&lt;code&gt;.ts&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt; and &lt;code&gt;.spec&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 는 여러 개의 첨부 된 파일이있는 구성 요소에 대한 폴더를 생성 ( &lt;code&gt;.ts&lt;/code&gt; , &lt;code&gt;.html&lt;/code&gt; , &lt;code&gt;.css&lt;/code&gt; 및 &lt;code&gt;.spec&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d57663b06f9042193805f0c48cdfcb0bfcf70931" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; creating sub-folders when a folder reaches seven or more files.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;폴더가 7 개 이상의 파일에 도달하면 하위 폴더를 만드는 &lt;strong&gt;것을 고려&lt;/strong&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="6ba75e947bed10b370258a950fe9a5b4bc2690f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; giving components an &lt;em&gt;element&lt;/em&gt; selector, as opposed to &lt;em&gt;attribute&lt;/em&gt; or &lt;em&gt;class&lt;/em&gt; selectors.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;속성&lt;/em&gt; 또는 &lt;em&gt;클래스&lt;/em&gt; 선택기 와 달리 구성 요소에 &lt;em&gt;요소&lt;/em&gt; 선택기를 제공 &lt;strong&gt;하십시오&lt;/strong&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f812a0b51c5451dc6933330add82143c3ad4d978" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; guidelines should generally be followed. If you fully understand the meaning behind the guideline and have a good reason to deviate, then do so. Please strive to be consistent.</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 지침은 일반적으로 따라야한다. 지침 뒤에있는 의미를 완전히 이해하고 벗어나야 할 합당한 이유가 있다면 그렇게하십시오. 일관되게 노력하십시오.</target>
        </trans-unit>
        <trans-unit id="64dd353265db43a7bd136c7a41c37a7d60a6e8c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; limiting files to 400 lines of code.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;파일을 400 줄의 코드로 제한하는 &lt;strong&gt;것을 고려하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c5cae10665a0270e443186244f5ceddc6e81c097" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; limiting to no more than 75 lines.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;최대 75 줄로 제한 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4ee032cca6c29ddb2447b42824e44f0fa78c74bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; naming the root module &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 루트 모듈 이름 &lt;code&gt;app.module.ts&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="7af92359f20e5a41482d3fde2e56b496f75a820c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; placing &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; on the same line as the property it decorates.</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 배치 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 또는 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 가 장식 속성과 같은 줄에.</target>
        </trans-unit>
        <trans-unit id="699868a35d32ee19c4bd6a70d513765253f0d7d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; preferring the &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; property of the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorators.</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 선호 &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; 받는 &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; 의 재산 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 장식.</target>
        </trans-unit>
        <trans-unit id="6cacfa96ecf8eaa586093e34c1c24fe2070cfe1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; preferring the &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;host&lt;/code&gt; property of the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorators.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt; 데코레이터 의 &lt;code&gt;host&lt;/code&gt; 속성 보다 &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; 을 선호하는 것을 &lt;strong&gt;고려하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ed8b86789563c95a9dd085de3fdeb2d098826c9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://atom.io/packages/angular-2-typescript-snippets&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;이러한 스타일과 지침을 따르는 &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; 에 대한 &lt;a href=&quot;https://atom.io/packages/angular-2-typescript-snippets&quot;&gt;스 니펫&lt;/a&gt; 사용을 &lt;strong&gt;고려하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="24d4cb492e12f510bdd09e2eea94d855ec75e8f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://github.com/mhartington/vim-angular2-snippets&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;http://www.vim.org/&quot;&gt;Vim&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;이러한 스타일과 지침을 따르는 &lt;a href=&quot;http://www.vim.org/&quot;&gt;Vim&lt;/a&gt; 에 대한 &lt;a href=&quot;https://github.com/mhartington/vim-angular2-snippets&quot;&gt;스 니펫&lt;/a&gt; 사용을 &lt;strong&gt;고려하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a6f41699986d39d799bceff1c431cd2ab77823b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://github.com/orizens/sublime-angular2-snippets&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;이러한 스타일과 지침을 따르는 &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;숭고한 텍스트에&lt;/a&gt; 대한 &lt;a href=&quot;https://github.com/orizens/sublime-angular2-snippets&quot;&gt;스 니펫&lt;/a&gt; 사용을 &lt;strong&gt;고려하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="41ec4d969a410f664dc34b3fd2f353bcb573d205" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;이러한 스타일과 지침을 따르는 &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code에&lt;/a&gt; 대한 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2&quot;&gt;스 니펫&lt;/a&gt; 사용을 &lt;strong&gt;고려하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="634508664461f7cdb59e0e1f093e99597ffb329f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using the name SharedModule when the contents of a shared module are referenced across the entire application.</source>
          <target state="translated">&lt;strong&gt;고려&lt;/strong&gt; 공유 모듈의 내용이 전체 응용 프로그램을 통해 참조하는 이름 SharedModule를 사용하여.</target>
        </trans-unit>
        <trans-unit id="b157426ab1709e92e2943d1ac9a63918d7e02346" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt;&lt;em&gt;not&lt;/em&gt; providing services in shared modules. Services are usually singletons that are provided once for the entire application or in a particular feature module. There are exceptions, however. For example, in the sample code that follows, notice that the &lt;code&gt;SharedModule&lt;/code&gt; provides &lt;code&gt;FilterTextService&lt;/code&gt;. This is acceptable here because the service is stateless;that is, the consumers of the service aren't impacted by new instances.</source>
          <target state="translated">&lt;strong&gt;고려 &lt;/strong&gt;&lt;em&gt;하지&lt;/em&gt; 공유 모듈에 서비스를 제공한다. 서비스는 일반적으로 전체 응용 프로그램 또는 특정 기능 모듈에 대해 한 번 제공되는 싱글 톤입니다. 그러나 예외가 있습니다. 예를 들어, 다음 샘플 코드에서 &lt;code&gt;SharedModule&lt;/code&gt; 이 FilterTextService를 제공함을 &lt;code&gt;FilterTextService&lt;/code&gt; . 서비스는 상태 비 저장이므로 서비스 소비자가 새 인스턴스의 영향을받지 않기 때문에 여기에서 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c04a7871021e285dcd75fe31e0335e710bc0ec24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create a FormGroup instance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FormGroup 인스턴스 만들기&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
