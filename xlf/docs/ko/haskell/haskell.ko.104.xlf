<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="cdd87b7907fb17673e884c148848c9c5e93b59ca" translate="yes" xml:space="preserve">
          <source>Constraint</source>
          <target state="translated">Constraint</target>
        </trans-unit>
        <trans-unit id="75786eb55c7c8b70c132b69502ae4ead847f4971" translate="yes" xml:space="preserve">
          <source>Constraint representing the fact that the field &lt;code&gt;x&lt;/code&gt; belongs to the record type &lt;code&gt;r&lt;/code&gt; and has field type &lt;code&gt;a&lt;/code&gt;. This will be solved automatically, but manual instances may be provided as well.</source>
          <target state="translated">필드 &lt;code&gt;x&lt;/code&gt; 가 레코드 유형 &lt;code&gt;r&lt;/code&gt; 에 속 하고 필드 유형이 &lt;code&gt;a&lt;/code&gt; 라는 사실을 나타내는 제한 조건 . 이것은 자동으로 해결되지만 수동 인스턴스도 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="524a5a84dda74ac067bc68274307126f82427aa8" translate="yes" xml:space="preserve">
          <source>ConstraintKinds</source>
          <target state="translated">ConstraintKinds</target>
        </trans-unit>
        <trans-unit id="caf70f8d01ddd9b74e3c756ed105855ca10f1157" translate="yes" xml:space="preserve">
          <source>ConstraintT</source>
          <target state="translated">ConstraintT</target>
        </trans-unit>
        <trans-unit id="67f8f093175dfad7d4cda8ae5154585d89127b22" translate="yes" xml:space="preserve">
          <source>Constraints on the non-default type signatures can play a role in inferring the instance context as well. For example, if you have this class:</source>
          <target state="translated">기본이 아닌 형식의 서명에 대한 제약 조건은 인스턴스 컨텍스트를 유추하는 역할도 할 수 있습니다. 예를 들어이 클래스가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="9e8638d0568cf3139dfd44edc291ff8d2d398ea8" translate="yes" xml:space="preserve">
          <source>Constraints that have been solved by the plugin must be provided with evidence in the form of an &lt;code&gt;EvTerm&lt;/code&gt; of the type of the constraint. This evidence is ignored for given and derived constraints, which GHC &amp;ldquo;solves&amp;rdquo; simply by discarding them; typically this is used when they are uninformative (e.g. reflexive equations). For wanted constraints, the evidence will form part of the Core term that is generated after typechecking, and can be checked by &lt;code&gt;-dcore-lint&lt;/code&gt;. It is possible for the plugin to create equality axioms for use in evidence terms, but GHC does not check their consistency, and inconsistent axiom sets may lead to segfaults or other runtime misbehaviour.</source>
          <target state="translated">플러그인으로 해결 된 제약 조건에는 제약 조건 유형의 &lt;code&gt;EvTerm&lt;/code&gt; 형식으로 증거가 제공되어야합니다 . 이 증거는 주어진 제약 조건과 파생 된 제약 조건에서 무시되며, GHC는이를 단순히 버림으로써&amp;ldquo;해결&amp;rdquo;합니다. 일반적으로 이것은 유익하지 않은 경우에 사용됩니다 (예 : 반사 방정식). 원하는 제한 조건의 경우, 증거는 유형 점검 후 생성되는 핵심 항의 일부를 형성하며 &lt;code&gt;-dcore-lint&lt;/code&gt; 로 확인할 수 있습니다 . 플러그인이 증거 용어로 사용하기 위해 동등 공리를 만들 수는 있지만 GHC는 일관성을 검사하지 않으며 일치하지 않는 공리 세트가 segfaults 또는 기타 런타임 오작동을 유발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fefb2e34c7ab6e48bb2cb28e4452c143f7bf8217" translate="yes" xml:space="preserve">
          <source>Construct 1-limb &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Prim.html#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce83dffb75ae10033babed14acf241eba3aff8b2" translate="yes" xml:space="preserve">
          <source>Construct 1-limb &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;/code&gt; 에서 1-limb &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; 생성</target>
        </trans-unit>
        <trans-unit id="b92a60d93d0fbfa32d52116bcdd6a0e9f22561d7" translate="yes" xml:space="preserve">
          <source>Construct &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; value from list of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bd7e1a6daf5e9472fe6fdb69116295ccccdb71" translate="yes" xml:space="preserve">
          <source>Construct &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; value from list of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">구축 &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 의 목록에서 값을 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 인 들.</target>
        </trans-unit>
        <trans-unit id="3000609bf1e46204d8f4d1b42e5f8251b8953caa" translate="yes" xml:space="preserve">
          <source>Construct &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; from existing &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Prim.html#t:ByteArray-35-&quot;&gt;ByteArray#&lt;/a&gt;&lt;/code&gt; containing &lt;em&gt;n&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:GmpLimb&quot;&gt;GmpLimb&lt;/a&gt;&lt;/code&gt;s in least-significant-first order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b943c713fdc28bb45933e7e2f0397324571603a" translate="yes" xml:space="preserve">
          <source>Construct &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; from existing &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:ByteArray-35-&quot;&gt;ByteArray#&lt;/a&gt;&lt;/code&gt; containing &lt;em&gt;n&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:GmpLimb&quot;&gt;GmpLimb&lt;/a&gt;&lt;/code&gt;s in least-significant-first order.</source>
          <target state="translated">구축 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; 를 기존에서 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:ByteArray-35-&quot;&gt;ByteArray#&lt;/a&gt;&lt;/code&gt; 함유 &lt;em&gt;N &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:GmpLimb&quot;&gt;GmpLimb&lt;/a&gt;&lt;/code&gt; S의 최하위 우선 순서.</target>
        </trans-unit>
        <trans-unit id="546c7d91e365ed08852f86313d097f20c2743c02" translate="yes" xml:space="preserve">
          <source>Construct &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">구축 &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="643f46731d056f74a8c6e4a19be28280ee88d08e" translate="yes" xml:space="preserve">
          <source>Construct &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; value from list of &lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">구축 &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; 의 목록에서 값 &lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 들.</target>
        </trans-unit>
        <trans-unit id="89c76f0f8f3ee74a0f8230bdec3d2aefb4ff500e" translate="yes" xml:space="preserve">
          <source>Construct &lt;code&gt;Integer&lt;/code&gt;s</source>
          <target state="translated">구축 &lt;code&gt;Integer&lt;/code&gt; 들</target>
        </trans-unit>
        <trans-unit id="53668995e6cac4f7005b91abb6dee7ff39c02f4e" translate="yes" xml:space="preserve">
          <source>Construct BigNat from 2 limbs. The first argument is the most-significant limb.</source>
          <target state="translated">2 개의 사지에서 BigNat을 구성하십시오. 첫 번째 주장은 가장 중요한 사지입니다.</target>
        </trans-unit>
        <trans-unit id="5969202d507980e84b50c59a87e69ec14a08f411" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-array-storable#t:StorableArray&quot;&gt;StorableArray&lt;/a&gt;&lt;/code&gt; from an arbitrary &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;. It is the caller's responsibility to ensure that the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; points to an area of memory sufficient for the specified bounds.</source>
          <target state="translated">임의의 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; 로부터 &lt;code&gt;&lt;a href=&quot;data-array-storable#t:StorableArray&quot;&gt;StorableArray&lt;/a&gt;&lt;/code&gt; 를 구축합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; 이 지정된 범위에 충분한 메모리 영역을 가리 키도록하는 것은 호출자의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="8df5c46ae1f3d372da1b0ed4c49cbaaca41c0dbe" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-array-storable#t:StorableArray&quot;&gt;StorableArray&lt;/a&gt;&lt;/code&gt; from an arbitrary &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;. It is the caller's responsibility to ensure that the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; points to an area of memory sufficient for the specified bounds.</source>
          <target state="translated">컨스 &lt;code&gt;&lt;a href=&quot;data-array-storable#t:StorableArray&quot;&gt;StorableArray&lt;/a&gt;&lt;/code&gt; 을 임의로부터 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; 을 확인하는 것은 호출자의 책임입니다. 이 지정된 경계에 충분한 메모리 영역을 가리 키도록하는 입니다.</target>
        </trans-unit>
        <trans-unit id="3ca39844115fdfcf141d70ec5b637b00c55e4055" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that always inserts the strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly as a chunk.</source>
          <target state="translated">항상 엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 청크로 직접 삽입 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e447cfec4aa783ba093628c4f4c3610a2526157" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the &lt;code&gt;&lt;a href=&quot;sh#v:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;sh#v:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; 을 복사 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="82076a1b089015b2805c4f3aaeae7e1cfb399f4c" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 복사 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ed3b7db4dcf48958be11a2f1e636f93893544a1" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 복사 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb6b8d6db0bb055f860a0f94b00d34f5fb046647" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s, if it is smaller than the treshold, and inserts it directly otherwise.</source>
          <target state="translated">임계 값보다 작은 경우 엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 복사하고 그렇지 않으면 직접 삽입 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="080faddfc6d1022396830af46ec675a3461a9c44" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that inserts all chunks of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 모든 청크를 직접 삽입 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="61948ff0bad46869d84bf9c199f30454a7371a4f" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that uses the thresholding strategy of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#v:byteStringThreshold&quot;&gt;byteStringThreshold&lt;/a&gt;&lt;/code&gt; for each chunk of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지연 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 각 청크에 대해 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#v:byteStringThreshold&quot;&gt;byteStringThreshold&lt;/a&gt;&lt;/code&gt; 임계 값 전략을 사용 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="43aa14046b04f6cfefe7b3855e0caffff3dd98fb" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that always inserts the strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly as a chunk.</source>
          <target state="translated">항상 엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 청크로 직접 삽입 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f307a277c3bbee41d07fd5830f6b9307b9d81c87" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the &lt;code&gt;&lt;a href=&quot;sh#v:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;sh#v:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; 을 복사 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="fceee5706e1add7e5f23e1355b2319dcfd21e81f" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 복사 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7b25fd23e7f26312eafdda4e2bf443e4f863964" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 복사 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6a225d573c02c3c260741be4849f4986b0ec32c" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that copies the strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s, if it is smaller than the treshold, and inserts it directly otherwise.</source>
          <target state="translated">임계 값보다 작은 경우 엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 복사하고 그렇지 않으면 직접 삽입 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b21cab2be8964afd16d9f174dc888d825faaaa9" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that inserts all chunks of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 모든 청크를 직접 삽입 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7cbff3a7dc9228ccd4cc015fa6c0004acb9f113" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that uses the thresholding strategy of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:byteStringThreshold&quot;&gt;byteStringThreshold&lt;/a&gt;&lt;/code&gt; for each chunk of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지연 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 각 청크에 대해 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:byteStringThreshold&quot;&gt;byteStringThreshold&lt;/a&gt;&lt;/code&gt; 임계 값 전략을 사용 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="646ad7dbacc9300052c7e605b753d6f666ea4833" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;. In contrast to &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;s, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s are referentially transparent.</source>
          <target state="translated">컨스 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; . 대조적으로 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 의, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 들 referentially 투명합니다.</target>
        </trans-unit>
        <trans-unit id="c0fe2bfe9d2c472c2224740c1f5ef532280f7cab" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action. In contrast to &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;s, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are referentially transparent in the sense that sequencing the same &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; multiple times yields every time the same value with the same side-effect.</source>
          <target state="translated">컨스 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 행동을. 대조적 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; S, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; S 시퀀싱은 동일한 의미에서 referentially 투명 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 여러 번하면마다 같은 부작용과 동일한 값을 산출한다.</target>
        </trans-unit>
        <trans-unit id="43f4e84d1539c9f72160bf5eaed772879b40f624" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; without invisibly pinning its byte array in memory if its length has dwindled to zero.</source>
          <target state="translated">길이가 0으로 줄어들면 메모리에 바이트 배열을 보이지 않게 고정하지 않고 &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c1125c323d6822e0795fb650c9cb7e2349c0c97" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; record for passing to &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;, representing a command to be passed to the shell.</source>
          <target state="translated">컨스 &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; 에 전달하는 기록을 &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt; 쉘에 전달하는 명령을 나타내는.</target>
        </trans-unit>
        <trans-unit id="5a63159034cf2c4f34bbd264ba1ab926754a84fa" translate="yes" xml:space="preserve">
          <source>Construct a &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; record for passing to &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;, representing a raw command with arguments.</source>
          <target state="translated">컨스 &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; 에 전달하는 기록을 &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt; 인수 원시 명령을 나타내는.</target>
        </trans-unit>
        <trans-unit id="9a3508787004dbd21f8461c38be23ad087070642" translate="yes" xml:space="preserve">
          <source>Construct a continuation-passing computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:runCont&quot;&gt;runCont&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">함수에서 연속 통과 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:runCont&quot;&gt;runCont&lt;/a&gt;&lt;/code&gt; 의 반대 )</target>
        </trans-unit>
        <trans-unit id="40a8861c10af19deb91fcbb7b498cc61481ecce8" translate="yes" xml:space="preserve">
          <source>Construct a continuation-passing computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:runCont&quot;&gt;runCont&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">함수에서 연속 통과 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:runCont&quot;&gt;runCont&lt;/a&gt;&lt;/code&gt; 의 반대 )</target>
        </trans-unit>
        <trans-unit id="fafe012cf7ba57adfc109c825c282d785078fcab" translate="yes" xml:space="preserve">
          <source>Construct a path relative to the current directory, similar to &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:makeRelative&quot;&gt;makeRelative&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:makeRelative&quot;&gt;makeRelative&lt;/a&gt;&lt;/code&gt; 와 유사하게 현재 디렉토리에 상대적인 경로를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e744960d0a7a1397b4c24a9d34a5bc0d6b9d62d" translate="yes" xml:space="preserve">
          <source>Construct a representation for a type application.</source>
          <target state="translated">타입 어플리케이션의 표현을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="8e736b6db59081e88685c5059c6ecb455f59ce0f" translate="yes" xml:space="preserve">
          <source>Construct a representation for a type constructor applied at a monomorphic kind.</source>
          <target state="translated">monomorphic 종류에 적용된 형식 생성자에 대한 표현을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9dd9db3e95212979125fe6e4bf88925811a42a45" translate="yes" xml:space="preserve">
          <source>Construct a state monad computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:runState&quot;&gt;runState&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 상태 모나드 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:runState&quot;&gt;runState&lt;/a&gt;&lt;/code&gt; 의 반대 )</target>
        </trans-unit>
        <trans-unit id="9f037c8b08c79bac52423ae62381e204b19fb85d" translate="yes" xml:space="preserve">
          <source>Construct a state monad computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:runState&quot;&gt;runState&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 상태 모나드 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:runState&quot;&gt;runState&lt;/a&gt;&lt;/code&gt; 의 반대 )</target>
        </trans-unit>
        <trans-unit id="53aec054094f2b28df182b46629d579290489263" translate="yes" xml:space="preserve">
          <source>Construct a state monad computation from a state transformer function.</source>
          <target state="translated">상태 변환기 함수에서 상태 모나드 계산을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="36c5989f501b9c2d93f9c2c4e272caca2c456aff" translate="yes" xml:space="preserve">
          <source>Construct a writer computation from a (result, output) computation. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:runWriterT&quot;&gt;runWriterT&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">(결과, 출력) 계산에서 기록기 계산을 구성합니다. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:runWriterT&quot;&gt;runWriterT&lt;/a&gt;&lt;/code&gt; 의 반대 )</target>
        </trans-unit>
        <trans-unit id="aa055c344459e267691d83158c55afe6ac0d97fa" translate="yes" xml:space="preserve">
          <source>Construct a writer computation from a (result, output) pair.</source>
          <target state="translated">(결과, 출력) 쌍에서 기록기 계산을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6794fac16c9b50c09c162f42def8b6509b4de34d" translate="yes" xml:space="preserve">
          <source>Construct a writer computation from a (result, output) pair. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:runWriter&quot;&gt;runWriter&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">(결과, 출력) 쌍에서 기록기 계산을 구성합니다. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:runWriter&quot;&gt;runWriter&lt;/a&gt;&lt;/code&gt; 의 역함 )</target>
        </trans-unit>
        <trans-unit id="ebd2ff56b014d733d97dae5115b1cfe78aeee682" translate="yes" xml:space="preserve">
          <source>Construct a writer computation from a (result, output) pair. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:runWriter&quot;&gt;runWriter&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">(결과, 출력) 쌍에서 기록기 계산을 구성합니다. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:runWriter&quot;&gt;runWriter&lt;/a&gt;&lt;/code&gt; 의 역함 )</target>
        </trans-unit>
        <trans-unit id="570f5647e39682a1aa49d822e5c073065351c2e5" translate="yes" xml:space="preserve">
          <source>Construct a writer computation from a (result, output) pair. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:runWriter&quot;&gt;runWriter&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">(결과, 출력) 쌍에서 기록기 계산을 구성합니다. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:runWriter&quot;&gt;runWriter&lt;/a&gt;&lt;/code&gt; 의 역함 )</target>
        </trans-unit>
        <trans-unit id="afa14a572fa87fba46902ade8aac3bafa0ea5af5" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; value with a string describing the error. The &lt;code&gt;fail&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; instance of the &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class raises a &lt;code&gt;&lt;a href=&quot;ghc-io-exception#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt;, thus:</source>
          <target state="translated">오류를 설명하는 문자열 로 &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 값을 구성하십시오. &lt;code&gt;fail&lt;/code&gt; 의 방법 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 예를 &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 클래스는 제기 &lt;code&gt;&lt;a href=&quot;ghc-io-exception#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; 를 따라서 :</target>
        </trans-unit>
        <trans-unit id="e11618239dca01a342d56c1c4910dc7e03f18843" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; value with a string describing the error. The &lt;code&gt;fail&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; instance of the &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class raises a &lt;code&gt;&lt;a href=&quot;prelude#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt;, thus:</source>
          <target state="translated">오류를 설명하는 문자열 로 &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 값을 구성하십시오. &lt;code&gt;fail&lt;/code&gt; 의 방법 &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 예를 &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 클래스는 제기 &lt;code&gt;&lt;a href=&quot;prelude#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; 를 따라서 :</target>
        </trans-unit>
        <trans-unit id="a84840578a93fcc813e462ae43d93aa06dd5cce9" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; of the given type where the second argument describes the error location and the third and fourth argument contain the file handle and file path of the file involved in the error if applicable.</source>
          <target state="translated">두 번째 인수가 오류 위치를 설명하고 세 번째 및 네 번째 인수가 해당되는 경우 오류와 관련된 파일의 파일 핸들 및 파일 경로를 포함하는 지정된 유형 의 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="0eb909b0100da50815034b4ea4273edfb0ccdbfe" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; value with a string describing the error. The &lt;code&gt;fail&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; instance of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class raises a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt;, thus:</source>
          <target state="translated">오류를 설명하는 문자열 로 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 값을 구성하십시오. &lt;code&gt;fail&lt;/code&gt; 의 방법 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 예를 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 클래스는 제기 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; 를 따라서 :</target>
        </trans-unit>
        <trans-unit id="0c5391336f936e074ee003b6594fbe812721a3a1" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; value with a string describing the error. The &lt;code&gt;fail&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; instance of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class raises a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt;, thus:</source>
          <target state="translated">오류를 설명하는 문자열 로 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 값을 구성합니다. &lt;code&gt;fail&lt;/code&gt; 의 방법 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 예를 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 클래스는 제기 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; 을 따라서 :</target>
        </trans-unit>
        <trans-unit id="27d446782d7a0a6431559c109811d9cb6a12d2eb" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; based on the given &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; value. The optional information can be used to improve the accuracy of error messages.</source>
          <target state="translated">구축 &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 지정된에 기반 &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; 값. 선택적 정보는 오류 메시지의 정확성을 향상시키는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c057289c4006f5004f40a92d1d18be0debe524b" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; of the given type where the second argument describes the error location and the third and fourth argument contain the file handle and file path of the file involved in the error if applicable.</source>
          <target state="translated">두 번째 인수가 오류 위치를 설명하고 세 번째 및 네 번째 인수가 해당되는 경우 오류와 관련된 파일의 파일 핸들 및 파일 경로를 포함하는 지정된 유형 의 &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="ba266a3cb1aac8c4f0d604e31cfe44ef07729188" translate="yes" xml:space="preserve">
          <source>Construct an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; value with a string describing the error. The &lt;code&gt;fail&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; instance of the &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class raises a &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt;, thus:</source>
          <target state="translated">오류를 설명하는 문자열 로 &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 값을 구성하십시오. &lt;code&gt;fail&lt;/code&gt; 의 방법 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 예를 &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 클래스는 제기 &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; 를 따라서 :</target>
        </trans-unit>
        <trans-unit id="f76925adff9b7313e2fb2272df27ab5428c544bb" translate="yes" xml:space="preserve">
          <source>Construct an RWS computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 RWS 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt; 의 역수 )</target>
        </trans-unit>
        <trans-unit id="6167a533277d2b8bcf216f55f388b90e1fabb718" translate="yes" xml:space="preserve">
          <source>Construct an RWS computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 RWS 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt; 의 역수 )</target>
        </trans-unit>
        <trans-unit id="77270b4acbe724f22dc553a3a5f01f5ae711ef45" translate="yes" xml:space="preserve">
          <source>Construct an RWS computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 RWS 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt; 의 역수 )</target>
        </trans-unit>
        <trans-unit id="35d22bddf20c8644753d465ef6b56ae4d777a697" translate="yes" xml:space="preserve">
          <source>Construct an RWS computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 RWS 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt; 의 역수 )</target>
        </trans-unit>
        <trans-unit id="58c1ec1c33c68a0f9fef84a00a8d262058638a6f" translate="yes" xml:space="preserve">
          <source>Construct an RWS computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 RWS 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:runRWS&quot;&gt;runRWS&lt;/a&gt;&lt;/code&gt; 의 역수 )</target>
        </trans-unit>
        <trans-unit id="0e94a51065102218cfb8a10a74bacfee87e2c998" translate="yes" xml:space="preserve">
          <source>Construct an RWST computation from a function. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">함수에서 RWST 계산을 구성하십시오. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt;&lt;/code&gt; 의 반대 )</target>
        </trans-unit>
        <trans-unit id="229a1e04823558b3cb4d4978ff107b110ff894be" translate="yes" xml:space="preserve">
          <source>Construct an accumulation computation from a (result, output) pair. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:runAccum&quot;&gt;runAccum&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">(결과, 출력) 쌍에서 누적 계산을 구성합니다. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:runAccum&quot;&gt;runAccum&lt;/a&gt;&lt;/code&gt; 의 역함 )</target>
        </trans-unit>
        <trans-unit id="713effcd12b07bd1c1f823d565249a29943850a0" translate="yes" xml:space="preserve">
          <source>Construct an array from a pair of bounds and a list of values in index order.</source>
          <target state="translated">한 쌍의 경계와 인덱스 목록에서 값 목록으로 배열을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="7ba3635ee2cbe52b09a32bddf71f04287d7ccefe" translate="yes" xml:space="preserve">
          <source>Construct an array with the specified bounds and containing values for given indices within these bounds.</source>
          <target state="translated">지정된 범위를 가지고이 범위 내에 주어진 인덱스에 대한 값을 포함하는 배열을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="729f4a3ef676a588113886a5f0dc230740af03ad" translate="yes" xml:space="preserve">
          <source>Construct an iconv-based &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the given character set and &lt;code&gt;&lt;a href=&quot;ghc-io-encoding-failure#t:CodingFailureMode&quot;&gt;CodingFailureMode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5deb5b0bb6aac9d6666b492aa50d2eaf9cacd053" translate="yes" xml:space="preserve">
          <source>Construct an iconv-based &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the given character set and &lt;code&gt;&lt;a href=&quot;ghc-io-encoding-failure#t:CodingFailureMode&quot;&gt;CodingFailureMode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 문자 세트와 &lt;code&gt;&lt;a href=&quot;ghc-io-encoding-failure#t:CodingFailureMode&quot;&gt;CodingFailureMode&lt;/a&gt;&lt;/code&gt; 에 대한 iconv 기반 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 을 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="8bf4c1ac278b2e3f39f7e65171d8ed01b18bd269" translate="yes" xml:space="preserve">
          <source>Construct format string according to &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO-8601&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO-8601&lt;/a&gt; 에 따라 형식 문자열을 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="551df780808d8498c605c080d05f4c2963f2b5f1" translate="yes" xml:space="preserve">
          <source>Construct new &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; with an initial counter value.</source>
          <target state="translated">초기 카운터 값으로 새로운 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; 을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="c7bdba9b06316a551e9130279b8de3424d0ef2ec" translate="yes" xml:space="preserve">
          <source>Construct tag-less &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">태그가없는 &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3a7471fa0a1b6b91ba3aa8a5ea29d6baf8bef32" translate="yes" xml:space="preserve">
          <source>Construct the tree of &lt;code&gt;Integer&lt;/code&gt;s where each node has two children: &lt;code&gt;left = 2*x&lt;/code&gt; and &lt;code&gt;right = 2*x + 1&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;data-tree#v:rootLabel&quot;&gt;rootLabel&lt;/a&gt;&lt;/code&gt; of the node. Stop when the values exceed 7.</source>
          <target state="translated">각 노드에 &lt;code&gt;left = 2*x&lt;/code&gt; 및 &lt;code&gt;right = 2*x + 1&lt;/code&gt; 두 자식이있는 &lt;code&gt;Integer&lt;/code&gt; 트리를 구성하십시오 . 여기서 &lt;code&gt;x&lt;/code&gt; 는 노드 의 &lt;code&gt;&lt;a href=&quot;data-tree#v:rootLabel&quot;&gt;rootLabel&lt;/a&gt;&lt;/code&gt; 입니다. 값이 7을 초과하면 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="3cdd8523e19cf65f3fa93bc20fc59b0ffec18b52" translate="yes" xml:space="preserve">
          <source>Constructing Builders</source>
          <target state="translated">빌더 구축</target>
        </trans-unit>
        <trans-unit id="5be18449f77f3a82cad130a1d05fd37b92f0c974" translate="yes" xml:space="preserve">
          <source>Constructing an explicitly bidirectional pattern synonym also:</source>
          <target state="translated">명시 적 양방향 패턴 동의어 구성하기 :</target>
        </trans-unit>
        <trans-unit id="840c013a39932d3c804ee07ae47c9e5073d42a71" translate="yes" xml:space="preserve">
          <source>Constructing documents</source>
          <target state="translated">문서 작성</target>
        </trans-unit>
        <trans-unit id="4c50a189529450d3380818281c6ab3f79f66124e" translate="yes" xml:space="preserve">
          <source>Constructing mutable arrays</source>
          <target state="translated">가변 배열 생성</target>
        </trans-unit>
        <trans-unit id="b094947bf88a8db80b50a2d24e17b5de2a41dddf" translate="yes" xml:space="preserve">
          <source>Constructing names</source>
          <target state="translated">이름 짓기</target>
        </trans-unit>
        <trans-unit id="da33e1b7e0c4eae1911ee4a15280f0990e1a6115" translate="yes" xml:space="preserve">
          <source>Construction</source>
          <target state="translated">Construction</target>
        </trans-unit>
        <trans-unit id="edb7861f190be64ab7c7a39786a00727bb16847d" translate="yes" xml:space="preserve">
          <source>Constructor</source>
          <target state="translated">Constructor</target>
        </trans-unit>
        <trans-unit id="2fd910a8e641e118ebbcd211b7150329f75700af" translate="yes" xml:space="preserve">
          <source>Constructor for computations in the exception monad. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:runExcept&quot;&gt;runExcept&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">예외 모나드에서의 계산을위한 생성자. ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:runExcept&quot;&gt;runExcept&lt;/a&gt;&lt;/code&gt; 의 반대 ).</target>
        </trans-unit>
        <trans-unit id="cdc55e56a6cb7e7ce5e5e0b10a76180957575a92" translate="yes" xml:space="preserve">
          <source>Constructor for computations in the reader monad (equivalent to &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">리더 모나드에서 계산을위한 생성자 ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt; 와 동일 ).</target>
        </trans-unit>
        <trans-unit id="29753848500c22c85b434223bffee9144211bab6" translate="yes" xml:space="preserve">
          <source>Constructor for computations in the reader monad (equivalent to &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">리더 모나드에서 계산을위한 생성자 ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt; 와 동일 ).</target>
        </trans-unit>
        <trans-unit id="eaa1e2ff4aaebb24966d925065b0b67eb6091c2e" translate="yes" xml:space="preserve">
          <source>Constructor for computations in the reader monad (equivalent to &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">리더 모나드에서 계산을위한 생성자 ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt; 와 동일 ).</target>
        </trans-unit>
        <trans-unit id="d01e8b4c92b72dc928b0a7994d007f4582b81724" translate="yes" xml:space="preserve">
          <source>Constructor for computations in the reader monad (equivalent to &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">리더 모나드에서 계산을위한 생성자 ( &lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:asks&quot;&gt;asks&lt;/a&gt;&lt;/code&gt; 와 동일 ).</target>
        </trans-unit>
        <trans-unit id="ccb57a04a6e11d67a842a8924dc83ab1e7a89f63" translate="yes" xml:space="preserve">
          <source>Constructor for computations in the selection monad.</source>
          <target state="translated">선택 모나드에서의 계산을위한 생성자.</target>
        </trans-unit>
        <trans-unit id="b5c9417824a65aca8745057dafb4c034175cb1b9" translate="yes" xml:space="preserve">
          <source>Constructor function</source>
          <target state="translated">생성자 함수</target>
        </trans-unit>
        <trans-unit id="52312b265be254029688404c1c716835f8169693" translate="yes" xml:space="preserve">
          <source>Constructor strictness lookup</source>
          <target state="translated">생성자 엄격 조회</target>
        </trans-unit>
        <trans-unit id="60a5c966a71a24034f9238685790a526710ef75d" translate="yes" xml:space="preserve">
          <source>Constructors</source>
          <target state="translated">Constructors</target>
        </trans-unit>
        <trans-unit id="0db3840fb009c9e199a0811671b68463a30b0ba8" translate="yes" xml:space="preserve">
          <source>Constructors without fields: &lt;code&gt;U1&lt;/code&gt;</source>
          <target state="translated">필드가없는 생성자 : &lt;code&gt;U1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fe68d8828df1efd322944d2c1bf5d2db9456df8" translate="yes" xml:space="preserve">
          <source>Constructs a constructor</source>
          <target state="translated">생성자를 생성합니다</target>
        </trans-unit>
        <trans-unit id="84c67f8e4e905477fd9effb2e30fd3068019dcf3" translate="yes" xml:space="preserve">
          <source>Constructs a mutable array from a list of initial elements. The list gives the elements of the array in ascending order beginning with the lowest index.</source>
          <target state="translated">초기 요소 목록에서 변경 가능한 배열을 구성합니다. 이 목록은 가장 낮은 인덱스로 시작하여 오름차순으로 배열의 요소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c37ac8e7192962c3cbf4fcbd43e92f84aa8089e6" translate="yes" xml:space="preserve">
          <source>Constructs a new array derived from the original array by applying a function to each of the elements.</source>
          <target state="translated">각 요소에 함수를 적용하여 원래 배열에서 파생 된 새 배열을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="183d3f225fea9472cb3e1633596bb10e9211c6be" translate="yes" xml:space="preserve">
          <source>Constructs a new array derived from the original array by applying a function to each of the indices.</source>
          <target state="translated">각 인덱스에 함수를 적용하여 원래 배열에서 파생 된 새 배열을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="dc5c1437cce708210a0e3758246e0050b0e1c23b" translate="yes" xml:space="preserve">
          <source>Constructs a non-representation for a non-representable type</source>
          <target state="translated">표현할 수없는 형태의 표현을 구축합니다</target>
        </trans-unit>
        <trans-unit id="02e84422de576a5cd3dbab749aad68ed036386b8" translate="yes" xml:space="preserve">
          <source>Constructs an algebraic datatype</source>
          <target state="translated">대수 데이터 유형을 구성합니다</target>
        </trans-unit>
        <trans-unit id="c07a9e34d54e72c1d3ca4ff75d114050b9077593" translate="yes" xml:space="preserve">
          <source>Constructs an array identical to the first argument except that it has been updated by the associations in the right argument. For example, if &lt;code&gt;m&lt;/code&gt; is a 1-origin, &lt;code&gt;n&lt;/code&gt; by &lt;code&gt;n&lt;/code&gt; matrix, then</source>
          <target state="translated">오른쪽 인수의 연관에 의해 업데이트 된 것을 제외하고 첫 번째 인수와 동일한 배열을 구성합니다. 예를 들어, &lt;code&gt;m&lt;/code&gt; 이 1- 원점이고 &lt;code&gt;n&lt;/code&gt; x &lt;code&gt;n&lt;/code&gt; 행렬 인 경우</target>
        </trans-unit>
        <trans-unit id="351bb1bf05637d4ebcd251efe13b04b604395cda" translate="yes" xml:space="preserve">
          <source>Constructs an element with a custom name, and without any children.</source>
          <target state="translated">자식이없는 사용자 정의 이름을 가진 요소를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="ac73c83c4b36afe3f6b0b069ab11982d31c0dd2e" translate="yes" xml:space="preserve">
          <source>Constructs an element with a custom name.</source>
          <target state="translated">사용자 정의 이름으로 요소를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="1c5525518ac16e2ae61febd10f46980c2793f67c" translate="yes" xml:space="preserve">
          <source>Constructs an immutable array from a list of associations. Unlike &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt;, the same index is allowed to occur multiple times in the list of associations; an &lt;em&gt;accumulating function&lt;/em&gt; is used to combine the values of elements with the same index.</source>
          <target state="translated">연관 목록에서 변경 불가능한 배열을 구성합니다. &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; 와 달리 연관 목록에서 동일한 색인이 여러 번 발생할 수 있습니다. &lt;em&gt;누적 함수는&lt;/em&gt; 인덱스와 같은 요소의 값을 결합하는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="503fc4c1015baa8a701a00fe83632ade0d4ac7c4" translate="yes" xml:space="preserve">
          <source>Constructs an immutable array from a list of initial elements. The list gives the elements of the array in ascending order beginning with the lowest index.</source>
          <target state="translated">초기 요소리스트로부터 불변 배열을 구축합니다. 이 목록은 가장 낮은 인덱스로 시작하여 오름차순으로 배열의 요소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d9b7ba711df09eccc4710d3389aed461e3dbc536" translate="yes" xml:space="preserve">
          <source>Constructs an immutable array from a pair of bounds and a list of initial associations.</source>
          <target state="translated">한 쌍의 경계와 초기 연관 목록에서 불변 배열을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="e9e69ade4383000dffc37611c195f7e5376c5981" translate="yes" xml:space="preserve">
          <source>Constructs the &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">구축 &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 유형을</target>
        </trans-unit>
        <trans-unit id="7d576d991cc2081c94d0c6f54096ca945fe0e6c3" translate="yes" xml:space="preserve">
          <source>Constructs the &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 형을 구축</target>
        </trans-unit>
        <trans-unit id="8af8b05fff04159fdbfebae14dce835012fe098b" translate="yes" xml:space="preserve">
          <source>Constructs the &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 타입을 구축</target>
        </trans-unit>
        <trans-unit id="09bf43f01b48072a3c5378f5e196bd6447777b17" translate="yes" xml:space="preserve">
          <source>Consume the chunks of a lazy &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; with a natural right fold.</source>
          <target state="translated">자연스러운 오른쪽 접기 로 게으른 &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 덩어리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5873c7e81d4758c499eb387c1f60b147ddd2dffd" translate="yes" xml:space="preserve">
          <source>Consume the chunks of a lazy &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; with a strict, tail-recursive, accumulating left fold.</source>
          <target state="translated">엄밀한 꼬리 재귀 적산 왼쪽 폴드와 함께 게으른 &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 덩어리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9ce1f22a7507727e45b588cca6a8c2b1ffc5b1b" translate="yes" xml:space="preserve">
          <source>Consume the chunks of a lazy &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; with a natural right fold.</source>
          <target state="translated">자연스러운 오른쪽 접기 로 게으른 &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 덩어리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9bc1680efa5cec582f6aa88b4980972853912bd6" translate="yes" xml:space="preserve">
          <source>Consume the chunks of a lazy &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; with a strict, tail-recursive, accumulating left fold.</source>
          <target state="translated">엄밀한 꼬리 재귀 적산 왼쪽 폴드와 함께 게으른 &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 덩어리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="008bf2f62c091044db3bdb944b0e7b432e3a7322" translate="yes" xml:space="preserve">
          <source>Consume the chunks of a lazy ByteString with a natural right fold.</source>
          <target state="translated">게으른 ByteString의 덩어리를 자연스럽게 접습니다.</target>
        </trans-unit>
        <trans-unit id="2858b9cf2c03c4f1085ceb512d8f49fa3e00c28f" translate="yes" xml:space="preserve">
          <source>Consume the chunks of a lazy ByteString with a strict, tail-recursive, accumulating left fold.</source>
          <target state="translated">엄격한 꼬리 재귀 적산 왼쪽 폴드와 함께 게으른 ByteString 청크를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cf12704be37bd6ccd3de06eea21b725a20d88ab4" translate="yes" xml:space="preserve">
          <source>Consumed</source>
          <target state="translated">Consumed</target>
        </trans-unit>
        <trans-unit id="4313c54a3c25ad540a82980f7e3dd5b931a8f67c" translate="yes" xml:space="preserve">
          <source>Consumes and returns the next character, if it satisfies the specified predicate.</source>
          <target state="translated">지정된 술어를 만족하면 다음 문자를 소비하고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3f3766e538c9f981b8d9685d841c0000c29d719f" translate="yes" xml:space="preserve">
          <source>Consumes and returns the next character. Fails if there is no input left.</source>
          <target state="translated">다음 문자를 소비하고 반환합니다. 남아있는 입력이 없으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="cbc747123f7b7ecd93fd53d3c24d63e771fcde4f" translate="yes" xml:space="preserve">
          <source>Cont</source>
          <target state="translated">Cont</target>
        </trans-unit>
        <trans-unit id="f6d09d1bee516498d232f4748ebcb4f020174919" translate="yes" xml:space="preserve">
          <source>ContT</source>
          <target state="translated">ContT</target>
        </trans-unit>
        <trans-unit id="db786cc02bae301b5a9b0e190fc7850f8f1da28d" translate="yes" xml:space="preserve">
          <source>Contains the import list of the module.</source>
          <target state="translated">모듈의 가져 오기 목록을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="94caf119019f6e259e7477ddfc9cff4975eaeddf" translate="yes" xml:space="preserve">
          <source>Contains the various unsafe operations that can be performed on arrays.</source>
          <target state="translated">어레이에서 수행 할 수있는 다양한 안전하지 않은 작업을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">Contents</target>
        </trans-unit>
        <trans-unit id="e416e43f493dc03bd7f45d55965a398e7052a174" translate="yes" xml:space="preserve">
          <source>Contents:</source>
          <target state="translated">Contents:</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="759afc40e0ad3a48d4a339d746d617abcf884d69" translate="yes" xml:space="preserve">
          <source>Continuation &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">지속 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5aac91d70abca445d7979bfc8b0c3a7dd9b72ea" translate="yes" xml:space="preserve">
          <source>Continuation monad. &lt;code&gt;Cont r a&lt;/code&gt; is a CPS (&quot;continuation-passing style&quot;) computation that produces an intermediate result of type &lt;code&gt;a&lt;/code&gt; within a CPS computation whose final result type is &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">연속 모나드. &lt;code&gt;Cont r a&lt;/code&gt; CPS 형의 중간 결과를 생성 ( &quot;연속 통과 스타일&quot;) 연산이다 &lt;code&gt;a&lt;/code&gt; 그 최종 결과 형태 인 CPS 연산에서 &lt;code&gt;r&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0bb7b960cfef6ddaf9904fca03950cf9da86c51" translate="yes" xml:space="preserve">
          <source>Continuation monads.</source>
          <target state="translated">연속 모나드.</target>
        </trans-unit>
        <trans-unit id="b49577918a547ac64f63c58759e01d168ba6e73e" translate="yes" xml:space="preserve">
          <source>Continuation to use for computing the final result and the tail of its side-effect (the written bytes).</source>
          <target state="translated">최종 결과 및 부작용의 꼬리 (쓰기 된 바이트)를 계산하는 데 계속 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2a779de660b6a7cee1b66b5e5c80edd2c856f030" translate="yes" xml:space="preserve">
          <source>Continue compilation as far as possible on errors</source>
          <target state="translated">오류에 대해 가능한 한 컴파일을 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="1896bb514a2ea00bdcb533f36dbf51abda3d1eb2" translate="yes" xml:space="preserve">
          <source>Continue the current evaluation, when stopped at a breakpoint.</source>
          <target state="translated">중단 점에서 중지되면 현재 평가를 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="b20d37a3583293b7dc41e6c569837e9748090ac3" translate="yes" xml:space="preserve">
          <source>Continuing with our example from the last section, we can write a simple plugin that just prints out the name of all the non-recursive bindings in a module it compiles:</source>
          <target state="translated">마지막 섹션의 예제를 계속 진행하면서 컴파일하는 모듈에서 모든 비 재귀 바인딩의 이름을 인쇄하는 간단한 플러그인을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95a21dcc84564345047a8d939ae4ecb365bd1446" translate="yes" xml:space="preserve">
          <source>Contract a filename, based on a relative path. Note that the resulting path will never introduce &lt;code&gt;..&lt;/code&gt; paths, as the presence of symlinks means &lt;code&gt;../b&lt;/code&gt; may not reach &lt;code&gt;a/b&lt;/code&gt; if it starts from &lt;code&gt;a/c&lt;/code&gt;. For a worked example see &lt;a href=&quot;http://neilmitchell.blogspot.co.uk/2015/10/filepaths-are-subtle-symlinks-are-hard.html&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">상대 경로를 기준으로 파일 이름을 계약하십시오. 심볼릭 링크의 존재는 &lt;code&gt;../b&lt;/code&gt; 가 &lt;code&gt;a/c&lt;/code&gt; 에서 시작하면 &lt;code&gt;a/b&lt;/code&gt; 에 도달하지 않을 수 있으므로 결과 경로는 &lt;code&gt;..&lt;/code&gt; 경로 를 절대로 도입 하지 않습니다 . 효과적인 예제는 &lt;a href=&quot;http://neilmitchell.blogspot.co.uk/2015/10/filepaths-are-subtle-symlinks-are-hard.html&quot;&gt;이 블로그 게시물을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="008c624abc4dd957c3b569ffba23b2ef6ff4774f" translate="yes" xml:space="preserve">
          <source>Contrast this with the special treatment of named wildcards in type signatures (&lt;a href=&quot;#named-wildcards&quot;&gt;Named Wildcards&lt;/a&gt;).</source>
          <target state="translated">이것을 타입 시그니처 ( &lt;a href=&quot;#named-wildcards&quot;&gt;Named Wildcards&lt;/a&gt; )에서 명명 된 와일드 카드의 특수 처리와 대조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18a8eb3dc8f8b2d90b0e435bb2073e587ebd6a81" translate="yes" xml:space="preserve">
          <source>Contravariant</source>
          <target state="translated">Contravariant</target>
        </trans-unit>
        <trans-unit id="e2653d10632c0f7beb41009c9e821fb1d07faa1c" translate="yes" xml:space="preserve">
          <source>Contravariant Functors</source>
          <target state="translated">다변량 펑터</target>
        </trans-unit>
        <trans-unit id="443958f25681d009bb993fd1d5b07011d260a11f" translate="yes" xml:space="preserve">
          <source>Contravariant maps for tactics</source>
          <target state="translated">전술에 대한 반 변형지도</target>
        </trans-unit>
        <trans-unit id="ea1d3df298ca84104dbf8b2f6f916c02f6f77c6e" translate="yes" xml:space="preserve">
          <source>Control</source>
          <target state="translated">Control</target>
        </trans-unit>
        <trans-unit id="db4db64a9e962ed5747e6b8156712fb90401488a" translate="yes" xml:space="preserve">
          <source>Control the rendering of floating point numbers.</source>
          <target state="translated">부동 소수점 숫자의 렌더링을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="0b6ef37e35fb2a9630357c328a739b15875132a9" translate="yes" xml:space="preserve">
          <source>Control verbosity. Verbosity levels range from 0-2, where the default is 1, and &lt;code&gt;-v&lt;/code&gt; alone selects level 2.</source>
          <target state="translated">세부 사항을 제어합니다. 상세 레벨의 범위는 0-2이며, 기본값은 1이며 &lt;code&gt;-v&lt;/code&gt; 만으로 레벨 2를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="2f72ca83ae117700d88b0cd7f55fcf4ae60a74d0" translate="yes" xml:space="preserve">
          <source>Control whether the RTS behaviour can be tweaked via command-line flags and the &lt;code&gt;GHCRTS&lt;/code&gt; environment variable. Using &lt;code&gt;none&lt;/code&gt; means no RTS flags can be given; &lt;code&gt;some&lt;/code&gt; means only a minimum of safe options can be given (the default); &lt;code&gt;all&lt;/code&gt; (or no argument at all) means that all RTS flags are permitted; &lt;code&gt;ignore&lt;/code&gt; means RTS flags can be given, but are treated as regular arguments and passed to the Haskell program as arguments; &lt;code&gt;ignoreAll&lt;/code&gt; is the same as &lt;code&gt;ignore&lt;/code&gt;, but &lt;code&gt;GHCRTS&lt;/code&gt; is also ignored. &lt;code&gt;-rtsopts&lt;/code&gt; does not affect &lt;code&gt;-with-rtsopts&lt;/code&gt; behavior; flags passed via &lt;code&gt;-with-rtsopts&lt;/code&gt; are used regardless of &lt;code&gt;-rtsopts&lt;/code&gt;.</source>
          <target state="translated">명령 행 플래그 및 &lt;code&gt;GHCRTS&lt;/code&gt; 환경 변수 를 통해 RTS 동작을 조정할 수 있는지 여부를 제어 하십시오. &lt;code&gt;none&lt;/code&gt; 을 사용하면 RTS 플래그를 지정할 수 없습니다. &lt;code&gt;some&lt;/code&gt; 는 최소 안전 옵션 만 제공 할 수 있음을 의미합니다 (기본값). &lt;code&gt;all&lt;/code&gt; (또는 인수가 전혀 없음)은 모든 RTS 플래그가 허용됨을 의미합니다. &lt;code&gt;ignore&lt;/code&gt; 는 RTS 플래그가 제공 될 수 있지만 정규 인수로 처리되어 Haskell 프로그램에 인수로 전달됨을 의미합니다. &lt;code&gt;ignoreAll&lt;/code&gt; 은 &lt;code&gt;ignore&lt;/code&gt; 와 동일 하지만 &lt;code&gt;GHCRTS&lt;/code&gt; 도 무시됩니다. &lt;code&gt;-rtsopts&lt;/code&gt; 는 -with &lt;code&gt;-with-rtsopts&lt;/code&gt; 동작에 영향을 미치지 않습니다 . &lt;code&gt;-with-rtsopts&lt;/code&gt; 를 통해 전달 된 플래그 &lt;code&gt;-rtsopts&lt;/code&gt; 에 관계없이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9ddba1aa2b8740846582df2425d6760f92e3d0f1" translate="yes" xml:space="preserve">
          <source>Control-C</source>
          <target state="translated">Control-C</target>
        </trans-unit>
        <trans-unit id="a947c53f739ad81f1acf6d7e50f0e35ff6fe2716" translate="yes" xml:space="preserve">
          <source>Control-C handling on Unix</source>
          <target state="translated">유닉스에서의 Control-C 처리</target>
        </trans-unit>
        <trans-unit id="ba1eeec2c01c8f6e60827d09f9c5bfc96582a1fb" translate="yes" xml:space="preserve">
          <source>Control-D</source>
          <target state="translated">Control-D</target>
        </trans-unit>
        <trans-unit id="4511d631680da8a44e3325201a0809c9eb26c605" translate="yes" xml:space="preserve">
          <source>Control.Applicative</source>
          <target state="translated">Control.Applicative</target>
        </trans-unit>
        <trans-unit id="7cdb17ee9ff6600603494ff42270ffd016b9204f" translate="yes" xml:space="preserve">
          <source>Control.Applicative.Backwards</source>
          <target state="translated">Control.Applicative.Backwards</target>
        </trans-unit>
        <trans-unit id="edc5f3ca3d8db72769e30b42bb7ac57e3c6c1439" translate="yes" xml:space="preserve">
          <source>Control.Applicative.Lift</source>
          <target state="translated">Control.Applicative.Lift</target>
        </trans-unit>
        <trans-unit id="6ff5edd9d9ec603db5c46a14a631e95d05949658" translate="yes" xml:space="preserve">
          <source>Control.Arrow</source>
          <target state="translated">Control.Arrow</target>
        </trans-unit>
        <trans-unit id="37457c94fe6146a1b986239bf5c728bf98f6b094" translate="yes" xml:space="preserve">
          <source>Control.Category</source>
          <target state="translated">Control.Category</target>
        </trans-unit>
        <trans-unit id="cf26d765ed001864f5b2fcbe9ca44af826190c44" translate="yes" xml:space="preserve">
          <source>Control.Concurrent</source>
          <target state="translated">Control.Concurrent</target>
        </trans-unit>
        <trans-unit id="73fa379214f17675b6ae81e583feabee7d6208aa" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.Chan</source>
          <target state="translated">Control.Concurrent.Chan</target>
        </trans-unit>
        <trans-unit id="ed0308fb66d37563635d9e49be001913df1a8aca" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.MVar</source>
          <target state="translated">Control.Concurrent.MVar</target>
        </trans-unit>
        <trans-unit id="61f10c3323bc4d768a0b627cd4fae1ca08d953bf" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.QSem</source>
          <target state="translated">Control.Concurrent.QSem</target>
        </trans-unit>
        <trans-unit id="c5c49dac901a04507955d6163481c1b647d53aed" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.QSemN</source>
          <target state="translated">Control.Concurrent.QSemN</target>
        </trans-unit>
        <trans-unit id="c937b43e7fd67b62172df97e953fa49416eb3ead" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.STM.TArray</source>
          <target state="translated">Control.Concurrent.STM.TArray</target>
        </trans-unit>
        <trans-unit id="f8e53fde32d3ac5c13461f756ae00f5fa310680e" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.STM.TBQueue</source>
          <target state="translated">Control.Concurrent.STM.TBQueue</target>
        </trans-unit>
        <trans-unit id="ace5a1d4e657e7330376812687524e770f0e52b4" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.STM.TChan</source>
          <target state="translated">Control.Concurrent.STM.TChan</target>
        </trans-unit>
        <trans-unit id="6ed79ee66f306b0da615380cba46e5283be08865" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.STM.TMVar</source>
          <target state="translated">Control.Concurrent.STM.TMVar</target>
        </trans-unit>
        <trans-unit id="6d19c24669e701a2d7c4d03640bdc5ff1f04d3f4" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.STM.TQueue</source>
          <target state="translated">Control.Concurrent.STM.TQueue</target>
        </trans-unit>
        <trans-unit id="14544d7a03e24c9431c9f3a4880f83b145e7ab7b" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.STM.TSem</source>
          <target state="translated">Control.Concurrent.STM.TSem</target>
        </trans-unit>
        <trans-unit id="ab65f4db921c77efc32ced0c51f9a24ca1e480d1" translate="yes" xml:space="preserve">
          <source>Control.Concurrent.STM.TVar</source>
          <target state="translated">Control.Concurrent.STM.TVar</target>
        </trans-unit>
        <trans-unit id="30887df360beccfa667ab4d2e8f50031842e6ffb" translate="yes" xml:space="preserve">
          <source>Control.DeepSeq</source>
          <target state="translated">Control.DeepSeq</target>
        </trans-unit>
        <trans-unit id="0e1aa0ea4d23e309d09d22e5d97b167abedb7823" translate="yes" xml:space="preserve">
          <source>Control.Exception</source>
          <target state="translated">Control.Exception</target>
        </trans-unit>
        <trans-unit id="ae0e25272afc82ddf0f1336bd7ff604af23b0eb3" translate="yes" xml:space="preserve">
          <source>Control.Monad</source>
          <target state="translated">Control.Monad</target>
        </trans-unit>
        <trans-unit id="974ca26a43608abbd9ea5de330cf276f85900ea0" translate="yes" xml:space="preserve">
          <source>Control.Monad.Catch</source>
          <target state="translated">Control.Monad.Catch</target>
        </trans-unit>
        <trans-unit id="ebec3819bf64dc19a1bb2aa42503f704152c92d5" translate="yes" xml:space="preserve">
          <source>Control.Monad.Catch.Pure</source>
          <target state="translated">Control.Monad.Catch.Pure</target>
        </trans-unit>
        <trans-unit id="072235ab16047be447ef5dbe9624632280a5cda7" translate="yes" xml:space="preserve">
          <source>Control.Monad.Cont</source>
          <target state="translated">Control.Monad.Cont</target>
        </trans-unit>
        <trans-unit id="a06adfcdd725cc45c7b777a5eabda1702940ae9a" translate="yes" xml:space="preserve">
          <source>Control.Monad.Error</source>
          <target state="translated">Control.Monad.Error</target>
        </trans-unit>
        <trans-unit id="090f5a2d43666e0b3b3364cf68f1e49b843e16ac" translate="yes" xml:space="preserve">
          <source>Control.Monad.Error.Class</source>
          <target state="translated">Control.Monad.Error.Class</target>
        </trans-unit>
        <trans-unit id="8dd2cf8685f98437d62feb2da158729074523ca8" translate="yes" xml:space="preserve">
          <source>Control.Monad.Except</source>
          <target state="translated">Control.Monad.Except</target>
        </trans-unit>
        <trans-unit id="606ac30d070e7171d627aedaae6a560de9e7bad3" translate="yes" xml:space="preserve">
          <source>Control.Monad.Fail</source>
          <target state="translated">Control.Monad.Fail</target>
        </trans-unit>
        <trans-unit id="1f0bfc4b673b6c810bd329b98ed961829ea42687" translate="yes" xml:space="preserve">
          <source>Control.Monad.Fix</source>
          <target state="translated">Control.Monad.Fix</target>
        </trans-unit>
        <trans-unit id="82dfb4fa8104b5914da63d078dc514adfe5e7148" translate="yes" xml:space="preserve">
          <source>Control.Monad.IO.Class</source>
          <target state="translated">Control.Monad.IO.Class</target>
        </trans-unit>
        <trans-unit id="27d09a75ae0a4657d5e5b791cda5b456aaaa0828" translate="yes" xml:space="preserve">
          <source>Control.Monad.Instances</source>
          <target state="translated">Control.Monad.Instances</target>
        </trans-unit>
        <trans-unit id="45f2844c57d18fb3e712e58b937c1a86db5462e2" translate="yes" xml:space="preserve">
          <source>Control.Monad.List</source>
          <target state="translated">Control.Monad.List</target>
        </trans-unit>
        <trans-unit id="145ea034a1a6bfa4d9a736992f0fb8b8de1f54a5" translate="yes" xml:space="preserve">
          <source>Control.Monad.RWS.Lazy</source>
          <target state="translated">Control.Monad.RWS.Lazy</target>
        </trans-unit>
        <trans-unit id="26558601213fe7fdac24a247fce6298eeb41324c" translate="yes" xml:space="preserve">
          <source>Control.Monad.RWS.Strict</source>
          <target state="translated">Control.Monad.RWS.Strict</target>
        </trans-unit>
        <trans-unit id="f4724058f59389b34b5817e067ae3b8c1e86971f" translate="yes" xml:space="preserve">
          <source>Control.Monad.Reader</source>
          <target state="translated">Control.Monad.Reader</target>
        </trans-unit>
        <trans-unit id="05cb4b25947768699d0141483ee2f038dcd61697" translate="yes" xml:space="preserve">
          <source>Control.Monad.Reader.Class</source>
          <target state="translated">Control.Monad.Reader.Class</target>
        </trans-unit>
        <trans-unit id="0b837a7b5848e20a3e3c8e3efa7e008263cea086" translate="yes" xml:space="preserve">
          <source>Control.Monad.ST</source>
          <target state="translated">Control.Monad.ST</target>
        </trans-unit>
        <trans-unit id="3f76fcc8a2ef0110e9175026f918b7ba69c323c0" translate="yes" xml:space="preserve">
          <source>Control.Monad.ST.Lazy</source>
          <target state="translated">Control.Monad.ST.Lazy</target>
        </trans-unit>
        <trans-unit id="418d57912482f4399c6c57d791c995a4f2b4a78d" translate="yes" xml:space="preserve">
          <source>Control.Monad.ST.Lazy.Safe</source>
          <target state="translated">Control.Monad.ST.Lazy.Safe</target>
        </trans-unit>
        <trans-unit id="045bbd90bf485252be2546913919c937fda5d3e8" translate="yes" xml:space="preserve">
          <source>Control.Monad.ST.Lazy.Unsafe</source>
          <target state="translated">Control.Monad.ST.Lazy.Unsafe</target>
        </trans-unit>
        <trans-unit id="a7f54b6294523d96bf7cae459e883fb4b80a0f34" translate="yes" xml:space="preserve">
          <source>Control.Monad.ST.Safe</source>
          <target state="translated">Control.Monad.ST.Safe</target>
        </trans-unit>
        <trans-unit id="2223de15e18690b25c4ad771884743118abbc8ec" translate="yes" xml:space="preserve">
          <source>Control.Monad.ST.Unsafe</source>
          <target state="translated">Control.Monad.ST.Unsafe</target>
        </trans-unit>
        <trans-unit id="29c2210f0e698c51d7585295ec24cc8d40e5559f" translate="yes" xml:space="preserve">
          <source>Control.Monad.STM</source>
          <target state="translated">Control.Monad.STM</target>
        </trans-unit>
        <trans-unit id="3d0faa8f2521422fc5b5727ad873944b27bcff6f" translate="yes" xml:space="preserve">
          <source>Control.Monad.Signatures</source>
          <target state="translated">Control.Monad.Signatures</target>
        </trans-unit>
        <trans-unit id="c2802414d1b059cb0094fd293a49743f94002cd3" translate="yes" xml:space="preserve">
          <source>Control.Monad.State.Class</source>
          <target state="translated">Control.Monad.State.Class</target>
        </trans-unit>
        <trans-unit id="15531a7195d4187f3cddd3166d49bc6b415f5931" translate="yes" xml:space="preserve">
          <source>Control.Monad.State.Lazy</source>
          <target state="translated">Control.Monad.State.Lazy</target>
        </trans-unit>
        <trans-unit id="b0eafe241f8970912c2cafd010efdd620fc9184a" translate="yes" xml:space="preserve">
          <source>Control.Monad.State.Strict</source>
          <target state="translated">Control.Monad.State.Strict</target>
        </trans-unit>
        <trans-unit id="81dc73a79818a33e2b02b8cf485869d0b8732aa8" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Accum</source>
          <target state="translated">Control.Monad.Trans.Accum</target>
        </trans-unit>
        <trans-unit id="7554c0a6f80ff2128ad69324c36d2e377129c041" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Class</source>
          <target state="translated">Control.Monad.Trans.Class</target>
        </trans-unit>
        <trans-unit id="f79921ad7fb410600b0a0c752805e701f1bf5e34" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Cont</source>
          <target state="translated">Control.Monad.Trans.Cont</target>
        </trans-unit>
        <trans-unit id="458fb22402868d5c4b5880060b4281a2095c63b8" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Error</source>
          <target state="translated">Control.Monad.Trans.Error</target>
        </trans-unit>
        <trans-unit id="10d041bae4f737af7274d65ab91df147c4d2aae8" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Except</source>
          <target state="translated">Control.Monad.Trans.Except</target>
        </trans-unit>
        <trans-unit id="de796ae786c3643528fd4d068522599a4b6c66dc" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Identity</source>
          <target state="translated">Control.Monad.Trans.Identity</target>
        </trans-unit>
        <trans-unit id="decb4a7b00dfe9b518249a4f7592246e1ee229f0" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.List</source>
          <target state="translated">Control.Monad.Trans.List</target>
        </trans-unit>
        <trans-unit id="c00964e20de662eee9d788996980ce96e611190b" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Maybe</source>
          <target state="translated">Control.Monad.Trans.Maybe</target>
        </trans-unit>
        <trans-unit id="a6e396a97b523509230d2cbe6cd660e53ec9dc37" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.RWS.CPS</source>
          <target state="translated">Control.Monad.Trans.RWS.CPS</target>
        </trans-unit>
        <trans-unit id="1bdccaf141a8f972c393e6447c09e138a9ae70b8" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.RWS.Lazy</source>
          <target state="translated">Control.Monad.Trans.RWS.Lazy</target>
        </trans-unit>
        <trans-unit id="274974d12143a83ecb78a678305e208ddd07c876" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.RWS.Strict</source>
          <target state="translated">Control.Monad.Trans.RWS.Strict</target>
        </trans-unit>
        <trans-unit id="313da9376b611ba462db7d9d7d0867d1291903c1" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Reader</source>
          <target state="translated">Control.Monad.Trans.Reader</target>
        </trans-unit>
        <trans-unit id="c27d6621d19100422e3c8ddb622fbf85f28df17b" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Select</source>
          <target state="translated">Control.Monad.Trans.Select</target>
        </trans-unit>
        <trans-unit id="8a2cfb8ddd1e04ccb44e6a026f03f56efe34a999" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.State.Lazy</source>
          <target state="translated">Control.Monad.Trans.State.Lazy</target>
        </trans-unit>
        <trans-unit id="a38e078f9ed2fdad6e6ad25947bc4156a33c8630" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.State.Strict</source>
          <target state="translated">Control.Monad.Trans.State.Strict</target>
        </trans-unit>
        <trans-unit id="8cc03e36817d3710074d888204004d99fd0c9d42" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Writer.CPS</source>
          <target state="translated">Control.Monad.Trans.Writer.CPS</target>
        </trans-unit>
        <trans-unit id="7aad1efd922305b7aab7e0a73230b9d451064cf6" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Writer.Lazy</source>
          <target state="translated">Control.Monad.Trans.Writer.Lazy</target>
        </trans-unit>
        <trans-unit id="e302a223cc41d81923a8e6c86cc7fb143de0ae4f" translate="yes" xml:space="preserve">
          <source>Control.Monad.Trans.Writer.Strict</source>
          <target state="translated">Control.Monad.Trans.Writer.Strict</target>
        </trans-unit>
        <trans-unit id="6fc5c908ab365348c8011d58474fe282894e7e49" translate="yes" xml:space="preserve">
          <source>Control.Monad.Writer.Class</source>
          <target state="translated">Control.Monad.Writer.Class</target>
        </trans-unit>
        <trans-unit id="28268221721a628c7904391064fb4353cb6f340d" translate="yes" xml:space="preserve">
          <source>Control.Monad.Writer.Lazy</source>
          <target state="translated">Control.Monad.Writer.Lazy</target>
        </trans-unit>
        <trans-unit id="71b8413cff57c260d48931edfb611c0648ce2f97" translate="yes" xml:space="preserve">
          <source>Control.Monad.Writer.Strict</source>
          <target state="translated">Control.Monad.Writer.Strict</target>
        </trans-unit>
        <trans-unit id="b14f785feedbb962ee56354141b1c432e908223b" translate="yes" xml:space="preserve">
          <source>Control.Monad.Zip</source>
          <target state="translated">Control.Monad.Zip</target>
        </trans-unit>
        <trans-unit id="4e339e42ff90594d3d6953c5325c9130c04bf74a" translate="yes" xml:space="preserve">
          <source>ControlCharacter</source>
          <target state="translated">ControlCharacter</target>
        </trans-unit>
        <trans-unit id="71f004fe90297850d5fabf4527dff81a7cfa4409" translate="yes" xml:space="preserve">
          <source>Controllable error handling</source>
          <target state="translated">제어 가능한 오류 처리</target>
        </trans-unit>
        <trans-unit id="62f4bec8a3402e19d696b7f3b4bbf935d70ef75c" translate="yes" xml:space="preserve">
          <source>Controlling chunk boundaries</source>
          <target state="translated">청크 경계 제어</target>
        </trans-unit>
        <trans-unit id="525e46127102da694ad76f087b77331d6d9c30b9" translate="yes" xml:space="preserve">
          <source>Controls whether GHC displays a line of the original source code where the error was detected. This also affects the associated caret symbol that points at the region of code at fault. The flag is on by default.</source>
          <target state="translated">GHC가 오류가 감지 된 원래 소스 코드의 행을 표시할지 여부를 제어합니다. 이것은 결함이있는 코드 영역을 가리키는 관련 캐럿 기호에도 영향을줍니다. 플래그는 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="85d7112dc03ecd7a181b360083728d01f6db75f0" translate="yes" xml:space="preserve">
          <source>Convenience definitions for working with lazy &lt;code&gt;&lt;a href=&quot;../text-1.2.3.2/data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;../text-1.2.3.2/data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 작업을위한 편의성 정의 .</target>
        </trans-unit>
        <trans-unit id="f310e7c1c541dd9ac6157b55814e9889dc7b705f" translate="yes" xml:space="preserve">
          <source>Convenience definitions for working with lazy &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 작업에 대한 편의 정의 .</target>
        </trans-unit>
        <trans-unit id="e3771c790b5f7ae4b73a634398817e36b854bd7d" translate="yes" xml:space="preserve">
          <source>Convenience function: algebraic data types</source>
          <target state="translated">편의 기능 : 대수 데이터 유형</target>
        </trans-unit>
        <trans-unit id="1c4be7e6e4f92b537985118ffae61f13674d390a" translate="yes" xml:space="preserve">
          <source>Convenience functions</source>
          <target state="translated">편의 기능</target>
        </trans-unit>
        <trans-unit id="8c00f8befc4093dd54ec39a47878bf39ae257a00" translate="yes" xml:space="preserve">
          <source>Convenience functions: take type constructors apart</source>
          <target state="translated">편의 함수 : 타입 생성자를 분리</target>
        </trans-unit>
        <trans-unit id="3746e9bbd44ea64ae0e92d5854024253c89a7d89" translate="yes" xml:space="preserve">
          <source>Convenience re-exports</source>
          <target state="translated">편의성 재수출</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="d1cc7b75ffd93dc0d3a0ea528b0cc946cb212f85" translate="yes" xml:space="preserve">
          <source>Conversely, any entity requested by a signature can be provided by a reexport from the implementing module. This is different from &lt;code&gt;hs-boot&lt;/code&gt; files, which require every entity to be defined locally in the implementing module.</source>
          <target state="translated">반대로, 서명이 요청한 모든 엔티티는 구현 모듈에서 다시 내보내기하여 제공 할 수 있습니다. 이것은 모든 엔티티를 구현 모듈에서 로컬로 정의해야하는 &lt;code&gt;hs-boot&lt;/code&gt; 파일과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="9151f8433f795cb0f0b5b6743aeb7de77ec49f00" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="translated">Conversion</target>
        </trans-unit>
        <trans-unit id="03f98de60dba44602f5d22b2db4617355faad3bc" translate="yes" xml:space="preserve">
          <source>Conversion between &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;. Should compile to a no-op.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 사이의 변환 . no-op로 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="986e019e1554ed8aab166bb45b187eb2173e39bf" translate="yes" xml:space="preserve">
          <source>Conversion between &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;. Should compile to a no-op.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 간의 변환 . no-op으로 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="a036cbcccc8b7bf9599b3a1632ae1c559d09835e" translate="yes" xml:space="preserve">
          <source>Conversion from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; into &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s in various encodings.</source>
          <target state="translated">다양한 인코딩 에서 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="80f765369ff28710f3a5a6531c73911c37430d94" translate="yes" xml:space="preserve">
          <source>Conversion from &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; into &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s in various encodings.</source>
          <target state="translated">다양한 인코딩 으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 로 변환 .</target>
        </trans-unit>
        <trans-unit id="80b3f7717d1704bd9b51def9939f7b97cb65b991" translate="yes" xml:space="preserve">
          <source>Conversion from a &lt;code&gt;&lt;a href=&quot;ghc-real#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; (that is &lt;code&gt;&lt;a href=&quot;ghc-real#t:Ratio&quot;&gt;Ratio&lt;/a&gt; &lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;). A floating literal stands for an application of &lt;code&gt;&lt;a href=&quot;ghc-real#v:fromRational&quot;&gt;fromRational&lt;/a&gt;&lt;/code&gt; to a value of type &lt;code&gt;&lt;a href=&quot;ghc-real#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt;, so such literals have type &lt;code&gt;(&lt;a href=&quot;ghc-real#t:Fractional&quot;&gt;Fractional&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; 에서 변환 (즉, &lt;code&gt;&lt;a href=&quot;ghc-real#t:Ratio&quot;&gt;Ratio&lt;/a&gt; &lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; ). 부동 리터럴은 &lt;code&gt;&lt;a href=&quot;ghc-real#v:fromRational&quot;&gt;fromRational&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;ghc-real#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; 유형의 값으로 적용하는 것을 나타내 므로 이러한 리터럴에는 &lt;code&gt;(&lt;a href=&quot;ghc-real#t:Fractional&quot;&gt;Fractional&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt; 유형 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="87d64cfad96fd6d4d5f6bc4485e81af8ea5782ad" translate="yes" xml:space="preserve">
          <source>Conversion from a &lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; (that is &lt;code&gt;&lt;a href=&quot;data-ratio#t:Ratio&quot;&gt;Ratio&lt;/a&gt; &lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;). A floating literal stands for an application of &lt;code&gt;&lt;a href=&quot;prelude#v:fromRational&quot;&gt;fromRational&lt;/a&gt;&lt;/code&gt; to a value of type &lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt;, so such literals have type &lt;code&gt;(&lt;a href=&quot;prelude#t:Fractional&quot;&gt;Fractional&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; 에서 변환 (즉, &lt;code&gt;&lt;a href=&quot;data-ratio#t:Ratio&quot;&gt;Ratio&lt;/a&gt; &lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; ). 부동 리터럴은 &lt;code&gt;&lt;a href=&quot;prelude#v:fromRational&quot;&gt;fromRational&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; 유형의 값으로 적용하는 것을 나타내 므로 이러한 리터럴에는 &lt;code&gt;(&lt;a href=&quot;prelude#t:Fractional&quot;&gt;Fractional&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt; 유형 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9354fe86ceef93fe0187009815d9b7830e12fbb4" translate="yes" xml:space="preserve">
          <source>Conversion from an &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;. An integer literal represents the application of the function &lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt;&lt;/code&gt; to the appropriate value of type &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;, so such literals have type &lt;code&gt;(&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 에서 변환 . 정수 리터럴 함수의 응용 나타낸다 &lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt;&lt;/code&gt; 유형의 적절한 값으로 &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 이므로 이러한 리터럴 타입이, &lt;code&gt;(&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8abc8ebb7e52b758f68315accd53b140e87db8e3" translate="yes" xml:space="preserve">
          <source>Conversion from an &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;. An integer literal represents the application of the function &lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt;&lt;/code&gt; to the appropriate value of type &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;, so such literals have type &lt;code&gt;(&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 에서 변환 . 정수 리터럴 함수의 응용 나타낸다 &lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt;&lt;/code&gt; 유형의 적절한 값으로 &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 이므로 이러한 리터럴 타입이, &lt;code&gt;(&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt; a) =&amp;gt; a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1bc4facd67d8b9399bd6ab9408fa98f8d7288c5" translate="yes" xml:space="preserve">
          <source>Conversion functions will treat it as seconds. For example, &lt;code&gt;(0.010 :: NominalDiffTime)&lt;/code&gt; corresponds to 10 milliseconds.</source>
          <target state="translated">변환 함수는이를 초로 취급합니다. 예를 들어 &lt;code&gt;(0.010 :: NominalDiffTime)&lt;/code&gt; 은 10 밀리 초에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="c18feefd417a0cbe14e4acfc8ed24349072dc9a8" translate="yes" xml:space="preserve">
          <source>Conversion of values to readable &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">값의 변환 읽을 수 있습니다 &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 들.</target>
        </trans-unit>
        <trans-unit id="c41de73bd765f6dbd4ffbffd45f74c43aeabb1e7" translate="yes" xml:space="preserve">
          <source>Conversion of values to readable &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">값의 변환 읽을 수 있습니다 &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 들.</target>
        </trans-unit>
        <trans-unit id="a91fdf58947502d3e0a163a058adc4eb08aaa8e6" translate="yes" xml:space="preserve">
          <source>Conversion to and from Builders</source>
          <target state="translated">빌더와의 변환</target>
        </trans-unit>
        <trans-unit id="c6dddf065c92050d6a5f8fc85ad8fce05b414e39" translate="yes" xml:space="preserve">
          <source>Conversion to and from ForeignPtrs</source>
          <target state="translated">ForeignPtr과의 전환</target>
        </trans-unit>
        <trans-unit id="ebce3a96a378128b8ca5b23650b13b3b0fd6ca4c" translate="yes" xml:space="preserve">
          <source>Conversion to other integral types</source>
          <target state="translated">다른 정수형으로 변환</target>
        </trans-unit>
        <trans-unit id="30122a0db100fe4f54ba80eca7d6a679af7e1ccb" translate="yes" xml:space="preserve">
          <source>Conversion with lists: packing and unpacking</source>
          <target state="translated">목록으로 변환 : 포장 및 포장 풀기</target>
        </trans-unit>
        <trans-unit id="b08eaadf77cfdba7944ddcaf69eee5a983b74af3" translate="yes" xml:space="preserve">
          <source>Conversions</source>
          <target state="translated">Conversions</target>
        </trans-unit>
        <trans-unit id="73a7edc577732e7ee07365acc9871acb8143265a" translate="yes" xml:space="preserve">
          <source>Conversions between mutable and immutable arrays</source>
          <target state="translated">가변 배열과 불변 배열 간 변환</target>
        </trans-unit>
        <trans-unit id="aa753fdc419d0d2bd21377afcbed18ec686ab147" translate="yes" xml:space="preserve">
          <source>Conversions to/from &lt;code&gt;BigNat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BigNat&lt;/code&gt; 과의 전환</target>
        </trans-unit>
        <trans-unit id="e53fb16a0856d0cb7ffedc37783a810764597c85" translate="yes" xml:space="preserve">
          <source>Convert &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;typed hole&lt;/a&gt; errors into warnings, &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferring the error until runtime&lt;/a&gt;. Implied by &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt;. See also &lt;a href=&quot;using-warnings#ghc-flag--Wtyped-holes&quot;&gt;&lt;code&gt;-Wtyped-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;입력 된 구멍&lt;/a&gt; 오류를 경고로 변환 &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;하여 런타임까지 오류를 지연시킵니다&lt;/a&gt; . &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 . &lt;a href=&quot;using-warnings#ghc-flag--Wtyped-holes&quot;&gt; &lt;code&gt;-Wtyped-holes&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6c2b2038e44c60303e29ec254e8c4dbb55f3cf4" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;. Throws &lt;code&gt;&lt;a href=&quot;control-exception#v:Underflow&quot;&gt;Underflow&lt;/a&gt;&lt;/code&gt; when passed a negative &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 . 예외 &lt;code&gt;&lt;a href=&quot;control-exception#v:Underflow&quot;&gt;Underflow&lt;/a&gt;&lt;/code&gt; 부정 통과 할 때 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1354e45c028636f8da1812d39c09c7b75b774c28" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;, matching zero &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to midnight of &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; UTC.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; 으로 변환 하고 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; UTC의 자정에 0 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; 을 일치 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="a09b0837999b09e91b54ee0d75c47ae892fd88e6" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;/code&gt;, matching zero &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to midnight of &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; UTC.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;/code&gt; 으로 변환 하고 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; UTC의 자정에 0 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; 을 일치 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="fac7818ee694c684710c555ffce6d02662bb549a" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-time-clock-tai#t:AbsoluteTime&quot;&gt;AbsoluteTime&lt;/a&gt;&lt;/code&gt;, matching zero &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; to midnight of &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; TAI.</source>
          <target state="translated">변환 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;data-time-clock-tai#t:AbsoluteTime&quot;&gt;AbsoluteTime&lt;/a&gt;&lt;/code&gt; 제로 일치 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; 의 자정 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemEpochDay&quot;&gt;systemEpochDay&lt;/a&gt;&lt;/code&gt; TAI를.</target>
        </trans-unit>
        <trans-unit id="225f1292e0d1e11e71d5229c52352f75a1a8b9b0" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="translated">이스케이프해야하는 문자를 HTML 엔티티로 변환하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt; 로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="7093b43578478f99ff48ff5cfcef979da167ea1b" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="translated">이스케이프해야하는 문자를 HTML 엔티티로 변환하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt; 로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="27898c83d10ec111d83884e3e166a2e145f3541c" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="translated">이스케이프해야하는 문자를 HTML 엔티티로 변환하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt; 로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="8face85bea9b57ba416a12f86942432cd88df9ca" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt; 필요가 HTML 엔티티로 탈출 할 것을 문자로 변환.</target>
        </trans-unit>
        <trans-unit id="9508df496c86228bdcca3d8dc4afc75d34d406b5" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt; 필요가 HTML 엔티티로 탈출 할 것을 문자로 변환.</target>
        </trans-unit>
        <trans-unit id="d4b6ffc489e8fc7578e72d39bf31e9f9443eaba7" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, converting characters that need to be escaped to HTML entities.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt; 필요가 HTML 엔티티로 탈출 할 것을 문자로 변환.</target>
        </trans-unit>
        <trans-unit id="4ead5afd69ddf93203b14bb57b2bcdf7910b417f" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; computation to &lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt;, discarding the value of any exception.</source>
          <target state="translated">예외 값을 버리고 &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; 계산을 &lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3b71074c790dcab4a6fefe131bcedd0f0fb3ea10" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt; computation to &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt;, with a default exception value.</source>
          <target state="translated">기본 예외 값 을 사용 하여 &lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt; 계산을 &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; 로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="91cf9c88591a73abb39623630b404d0de5e67ca0" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; stream by executing it on &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt;s allocated according to the given &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:AllocationStrategy&quot;&gt;AllocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:AllocationStrategy&quot;&gt;AllocationStrategy&lt;/a&gt;&lt;/code&gt; 에 따라 할당 된 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; 스트림으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e26b60596f796c7c2c441d6c0ddfa0d0dc5b2e09" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt; ()&lt;/code&gt; to a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt; ()&lt;/code&gt; 게으른에 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 사용 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="d25622eac920253d61e0aa69cdad640475475fe7" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt; ()&lt;/code&gt; to a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt; ()&lt;/code&gt; 게으른에 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 사용 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="93ddacb8d6db585b9396ae6f414b4ed4bdb1a501" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; to a lazy tuple of the result and the written &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; 을 결과의 게으른 튜플과 서면에 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 사용 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="0d6326ad6e22cbcf04fe3521f9983ac78cf04542" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; to a lazy tuple of the result and the written &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:ChunkIOStream&quot;&gt;ChunkIOStream&lt;/a&gt;&lt;/code&gt; 을 결과의 게으른 튜플과 서면에 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 사용 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="35ab4d261dbd9413a55631dbec9803e8597233bd" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; action to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; 액션을 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="60e4754c6c58fa94215bb6e620a8b435ed45b584" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">개종자 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 을 A와 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6100385e2c51dcd20067f630c16ceecbf9c49f97" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; returned is not necessarily unique; several &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt;s may map to the same &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (in practice however, the chances of this are small, so the result of &lt;code&gt;&lt;a href=&quot;ghc-stablename#v:hashStableName&quot;&gt;hashStableName&lt;/a&gt;&lt;/code&gt; makes a good hash key).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환하십시오 . 반환 된 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 가 반드시 고유하지는 않습니다. 여러 &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; 은 동일한 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에 매핑 될 수 있습니다 (그러나 실제로는 가능성이 적으므로 &lt;code&gt;&lt;a href=&quot;ghc-stablename#v:hashStableName&quot;&gt;hashStableName&lt;/a&gt;&lt;/code&gt; 의 결과가 좋은 해시 키를 만듭니다).</target>
        </trans-unit>
        <trans-unit id="32af3d5dd3e225fe3673711f6fe71bdf33e15fca" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; returned is not necessarily unique; several &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt;s may map to the same &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (in practice however, the chances of this are small, so the result of &lt;code&gt;&lt;a href=&quot;system-mem-stablename#v:hashStableName&quot;&gt;hashStableName&lt;/a&gt;&lt;/code&gt; makes a good hash key).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환하십시오 . 반환 된 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 가 반드시 고유하지는 않습니다. 여러 &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; 은 동일한 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에 매핑 될 수 있습니다 (그러나 실제로는 가능성이 적으므로 &lt;code&gt;&lt;a href=&quot;system-mem-stablename#v:hashStableName&quot;&gt;hashStableName&lt;/a&gt;&lt;/code&gt; 의 결과가 좋은 해시 키를 만듭니다).</target>
        </trans-unit>
        <trans-unit id="49e58fc4b1ce8fdb1edeccf4026d54972e93401e" translate="yes" xml:space="preserve">
          <source>Convert a Boolean in numeric representation to a Haskell value</source>
          <target state="translated">숫자 표현의 부울을 하스켈 값으로 변환</target>
        </trans-unit>
        <trans-unit id="add57a579fbcbc7b16ccd3672e91b7fa3c349b2c" translate="yes" xml:space="preserve">
          <source>Convert a C &lt;code&gt;signed char&lt;/code&gt;, representing a Latin-1 character, to the corresponding Haskell character.</source>
          <target state="translated">Latin-1 문자를 나타내는 C &lt;code&gt;signed char&lt;/code&gt; 를 해당 Haskell 문자로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="9408d5e16c71eb46b7f791b4ee5933182b4f9aea" translate="yes" xml:space="preserve">
          <source>Convert a C &lt;code&gt;unsigned char&lt;/code&gt;, representing a Latin-1 character, to the corresponding Haskell character.</source>
          <target state="translated">Latin-1 문자를 나타내는 C &lt;code&gt;unsigned char&lt;/code&gt; 를 해당 Haskell 문자로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="1c61174035ed24642151950b9ed59d6a72e55c6d" translate="yes" xml:space="preserve">
          <source>Convert a C byte, representing a Latin-1 character, to the corresponding Haskell character.</source>
          <target state="translated">Latin-1 문자를 나타내는 C 바이트를 해당 Haskell 문자로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="9b7995722c1381aea793cbfef4cf08b9e9aedbfe" translate="yes" xml:space="preserve">
          <source>Convert a Haskell &lt;code&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; to its numeric representation</source>
          <target state="translated">Haskell &lt;code&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 을 숫자 표현으로 변환</target>
        </trans-unit>
        <trans-unit id="78a88d0144531b579e58e385eb9438f51858e5d2" translate="yes" xml:space="preserve">
          <source>Convert a Haskell character to a C &lt;code&gt;signed char&lt;/code&gt;. This function is only safe on the first 256 characters.</source>
          <target state="translated">Haskell 문자를 C &lt;code&gt;signed char&lt;/code&gt; 로 변환하십시오 . 이 기능은 처음 256 자에서만 안전합니다.</target>
        </trans-unit>
        <trans-unit id="a986a3e036e3a2cc3cd0aee1a2f7d483f1688c07" translate="yes" xml:space="preserve">
          <source>Convert a Haskell character to a C &lt;code&gt;unsigned char&lt;/code&gt;. This function is only safe on the first 256 characters.</source>
          <target state="translated">Haskell 문자를 C &lt;code&gt;unsigned char&lt;/code&gt; 로 변환하십시오 . 이 기능은 처음 256 자에서만 안전합니다.</target>
        </trans-unit>
        <trans-unit id="b38588134e51b133267d7afb4a6741974cc50b0f" translate="yes" xml:space="preserve">
          <source>Convert a Haskell character to a C character. This function is only safe on the first 256 characters.</source>
          <target state="translated">Haskell 문자를 C 문자로 변환하십시오. 이 기능은 처음 256 자에서만 안전합니다.</target>
        </trans-unit>
        <trans-unit id="dd33d417fbb44d20ec17b95d99a21d44693d7347" translate="yes" xml:space="preserve">
          <source>Convert a Word# into a Natural</source>
          <target state="translated">단어 #를 자연어로 변환</target>
        </trans-unit>
        <trans-unit id="cca866413f6e188d3a66231d0ec884291f9e0307" translate="yes" xml:space="preserve">
          <source>Convert a bit queue builder to a bit queue. This shifts in a new guard bit on the left, and shifts right until the old guard bit falls off.</source>
          <target state="translated">비트 큐 빌더를 비트 큐로 변환하십시오. 왼쪽에서 새 가드 비트가 이동하고 이전 가드 비트가 떨어질 때까지 오른쪽으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="e54977b34bb26a075a505f22f3cb19c02522b8bd" translate="yes" xml:space="preserve">
          <source>Convert a bit queue to a list of bits by unconsing. This is used to test that the queue functions properly.</source>
          <target state="translated">unconsing하여 비트 대기열을 비트 목록으로 변환합니다. 큐가 올바르게 작동하는지 테스트하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1f3f317342c4c33d787139161d4a3ef9c58795fe" translate="yes" xml:space="preserve">
          <source>Convert a character to a string using only printable characters, using Haskell source-language escape conventions. For example:</source>
          <target state="translated">Haskell 소스 언어 이스케이프 규칙을 사용하여 인쇄 가능한 문자 만 사용하여 문자를 문자열로 변환하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="461fea11388916477d6dcd61f862a5783f75cc17" translate="yes" xml:space="preserve">
          <source>Convert a count of days and a time of day since midnight into a period of time.</source>
          <target state="translated">자정 이후의 일 수와 시간을 특정 기간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="440236428189e86240a4304a31fcfaa848f47a40" translate="yes" xml:space="preserve">
          <source>Convert a lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a strict one.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 계산을 엄격한 것으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a8848ddf3c54b6f57f6a9214c1c385e34929acb" translate="yes" xml:space="preserve">
          <source>Convert a lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a strict one.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 계산을 엄격한 것으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="75aea82a106bb03cf50fe05303197cceb4e2a8ef" translate="yes" xml:space="preserve">
          <source>Convert a letter to the corresponding lower-case letter, if any. Any other character is returned unchanged.</source>
          <target state="translated">문자를 해당하는 경우 소문자로 변환하십시오. 다른 문자는 변경되지 않은 상태로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4ee6954ed78015ea7d29b640b65fc7c12fcd0d84" translate="yes" xml:space="preserve">
          <source>Convert a letter to the corresponding title-case or upper-case letter, if any. (Title case differs from upper case only for a small number of ligature letters.) Any other character is returned unchanged.</source>
          <target state="translated">문자를 해당 제목 또는 대문자로 변환하십시오 (있는 경우). 제목은 소수의 합자 문자에 대해서만 대문자와 다릅니다. 다른 문자는 변경되지 않고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="30a93cb00f30ee92c18395187903b9b72f61487d" translate="yes" xml:space="preserve">
          <source>Convert a letter to the corresponding upper-case letter, if any. Any other character is returned unchanged.</source>
          <target state="translated">문자를 해당 대문자로 변환하십시오 (있는 경우). 다른 문자는 변경되지 않은 상태로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c01ce343f251d5f421082350ad1567d3a7d947b8" translate="yes" xml:space="preserve">
          <source>Convert a list of call-sites to a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">호출 사이트 목록을 &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec112ccbf1d4d737285d15bbf0515ce549babede" translate="yes" xml:space="preserve">
          <source>Convert a list of call-sites to a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">호출 사이트 목록을 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c2ffd055ca02feb544b1080310fdc071a30c577" translate="yes" xml:space="preserve">
          <source>Convert a list of call-sites to a &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">호출 사이트 목록을 &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e5d0a3738078db61665b290ff0d18c35edd8348" translate="yes" xml:space="preserve">
          <source>Convert a path into an absolute path. If the given path is relative, the current directory is prepended and the path may or may not be simplified. If the path is already absolute, the path is returned unchanged. The function preserves the presence or absence of the trailing path separator.</source>
          <target state="translated">경로를 절대 경로로 변환하십시오. 주어진 경로가 상대 경로이면 현재 디렉토리가 앞에 추가되고 경로가 단순화되거나 단순화되지 않을 수 있습니다. 경로가 이미 절대 경로이면 변경되지 않은 상태로 반환됩니다. 이 기능은 후행 경로 구분 기호의 존재 유무를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="ce36b3d9e0f7bb9e6aa680a0ec3e982cfb3aeee9" translate="yes" xml:space="preserve">
          <source>Convert a path into an absolute path. If the given path is relative, the current directory is prepended and then the combined result is normalized. If the path is already absolute, the path is simply normalized. The function preserves the presence or absence of the trailing path separator unless the path refers to the root directory &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">경로를 절대 경로로 변환하십시오. 주어진 경로가 상대 경로이면 현재 디렉토리가 앞에 추가되고 결합 된 결과가 정규화됩니다. 경로가 이미 절대적인 경우 경로는 단순히 정규화됩니다. 경로 루트 디렉토리를 참조하지 않으면 함수 후단 경로 세퍼레이터의 유무를 유지 &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71e0bce6c1946d87ddff4dfb34893c7681f51eba" translate="yes" xml:space="preserve">
          <source>Convert a peek combinator into a one returning &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if applied to a &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; 적용된 경우 픽 ( Pek) 결합기 를 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 반환하는 하나로 변환</target>
        </trans-unit>
        <trans-unit id="4188bdd6ed5599fcdeb2cff29ed135b428f53ee4" translate="yes" xml:space="preserve">
          <source>Convert a period of time into a count of days and a time of day since midnight. The time of day will never have a leap second.</source>
          <target state="translated">기간을 자정 이후의 일 수와 시간으로 변환합니다. 하루의 시간은 결코 도약 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="834dbf3c13dffcbe8c79a14d60d773cd25ca966b" translate="yes" xml:space="preserve">
          <source>Convert a read-only computation into an accumulation computation.</source>
          <target state="translated">읽기 전용 계산을 누적 계산으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f999a2287b1ca726aefc5cbc4affe6fd9f01db29" translate="yes" xml:space="preserve">
          <source>Convert a selection computation to a continuation-passing computation.</source>
          <target state="translated">선택 계산을 연속 통과 계산으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="80c30195beaa2bdb370ac55c764a09a1d124d25d" translate="yes" xml:space="preserve">
          <source>Convert a single digit &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; to the corresponding &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. This function fails unless its argument satisfies &lt;code&gt;&lt;a href=&quot;data-char#v:isHexDigit&quot;&gt;isHexDigit&lt;/a&gt;&lt;/code&gt;, but recognises both upper- and lower-case hexadecimal digits (that is, &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'9'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;..&lt;code&gt;'f'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;..&lt;code&gt;'F'&lt;/code&gt;).</source>
          <target state="translated">한 자릿수 &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 를 해당 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환합니다 . 인수가 &lt;code&gt;&lt;a href=&quot;data-char#v:isHexDigit&quot;&gt;isHexDigit&lt;/a&gt;&lt;/code&gt; 를 충족하지 않으면이 함수는 실패 하지만 대문자와 소문자 16 진수를 모두 인식합니다 (즉, &lt;code&gt;'0'&lt;/code&gt; .. &lt;code&gt;'9'&lt;/code&gt; , &lt;code&gt;'a'&lt;/code&gt; .. &lt;code&gt;'f'&lt;/code&gt; , &lt;code&gt;'A'&lt;/code&gt; .. &lt;code&gt;'F'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a8b58abdc7314d189db4477d184c4c7f4ad1b8ea" translate="yes" xml:space="preserve">
          <source>Convert a stream to a normal list efficiently.</source>
          <target state="translated">스트림을 일반 목록으로 효율적으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="66fc8d3c0ff49b685e7d1277606e1714ef38e232" translate="yes" xml:space="preserve">
          <source>Convert a strict &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a lazy one. The strict state thread passed to &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:strictToLazyST&quot;&gt;strictToLazyST&lt;/a&gt;&lt;/code&gt; is not performed until the result of the lazy state thread it returns is demanded.</source>
          <target state="translated">엄격한 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 계산을 게으른 것으로 변환하십시오 . &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:strictToLazyST&quot;&gt;strictToLazyST&lt;/a&gt;&lt;/code&gt; 에 전달 된 엄격한 상태 스레드는 반환 된 지연 상태 스레드의 결과가 필요할 때까지 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0cd7667ea5e65ac9aa16df2f526ffa83317e3f90" translate="yes" xml:space="preserve">
          <source>Convert a strict &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation into a lazy one. The strict state thread passed to &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:strictToLazyST&quot;&gt;strictToLazyST&lt;/a&gt;&lt;/code&gt; is not performed until the result of the lazy state thread it returns is demanded.</source>
          <target state="translated">엄격한 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 계산을 게으른 것으로 변환하십시오 . &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:strictToLazyST&quot;&gt;strictToLazyST&lt;/a&gt;&lt;/code&gt; 에 전달 된 엄격한 상태 스레드는 반환 된 지연 상태 스레드의 결과가 필요할 때까지 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c85eee20a2c7195a879b2859c36bc00d4409d03" translate="yes" xml:space="preserve">
          <source>Convert a strict pair to a standard pair.</source>
          <target state="translated">엄격한 쌍을 표준 쌍으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="dcaba7de3acf83d2343a96e8cd0e9db73d554961" translate="yes" xml:space="preserve">
          <source>Convert a string into an unknown type-level symbol.</source>
          <target state="translated">문자열을 알 수없는 유형 수준 기호로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="1af4693ff19cc7b50bb5b292b3837c46600843dd" translate="yes" xml:space="preserve">
          <source>Convert a time of day in UTC to a time of day in some timezone, together with a day adjustment.</source>
          <target state="translated">요일 조정과 함께 UTC의 시간을 일부 시간대의 시간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="610f52f47184222d2336a2cfe271511a7eb2035c" translate="yes" xml:space="preserve">
          <source>Convert a time of day in some timezone to a time of day in UTC, together with a day adjustment.</source>
          <target state="translated">일부 시간대의 시간을 요일 조정과 함께 UTC로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5186433eee47a0a45b61419a36e8bc0b1244558b" translate="yes" xml:space="preserve">
          <source>Convert a value to a readable &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">값을 읽을 수있는 &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="3affb50ec8f318ae3a162e125de023dcfdeb9fb8" translate="yes" xml:space="preserve">
          <source>Convert a value to a readable &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">값을 읽을 수있는 &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="66cc1077c425874ff1c4f259b425fac56418f735" translate="yes" xml:space="preserve">
          <source>Convert a writer computation into an accumulation computation.</source>
          <target state="translated">라이터 계산을 누적 계산으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a3097bc8f451f472a403377815e4fba2d572f590" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 조치를 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 조치 로 변환하십시오 . 이는 상태 스레드 유형 매개 변수의 제한 조건과 동일한 표현을 갖는 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 에 의존합니다 .</target>
        </trans-unit>
        <trans-unit id="8f79fe0c96bf72632a61bfe4daf1548a63999379" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 조치를 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 조치 로 변환하십시오 . 이는 상태 스레드 유형 매개 변수의 제한 조건과 동일한 표현을 갖는 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 에 의존합니다 .</target>
        </trans-unit>
        <trans-unit id="2d3dce826b1745d7c992b21222274c6017c12a60" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; in the range &lt;code&gt;0&lt;/code&gt;..&lt;code&gt;15&lt;/code&gt; to the corresponding single digit &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;. This function fails on other inputs, and generates lower-case hexadecimal digits.</source>
          <target state="translated">변환 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 범위 &lt;code&gt;0&lt;/code&gt; ... &lt;code&gt;15&lt;/code&gt; 대응 한 자리에 &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; . 이 기능은 다른 입력에서 실패하며 소문자 16 진수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="11f0b6b1260d5defd56a239f83bfbed4227bb373" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action into an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action. The type of the result is constrained to use a &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; state thread, and therefore the result cannot be passed to &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 조치를 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 조치 로 변환하십시오 . 결과 유형은 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; 상태 스레드 를 사용하도록 제한 되므로 결과를 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 로 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="96f2267726028a74544624c09249fb0ad0568827" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 조치를 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 조치 로 변환하십시오 . 이는 상태 스레드 유형 매개 변수의 제한 조건과 동일한 표현을 갖는 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 에 의존합니다 .</target>
        </trans-unit>
        <trans-unit id="1c8669d2a4196ccf1ec2548a59f26e2f961b9e43" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action to an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action. This relies on &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; having the same representation modulo the constraint on the state thread type parameter.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 조치를 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 조치 로 변환하십시오 . 이는 상태 스레드 유형 매개 변수의 제한 조건과 동일한 표현을 갖는 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 에 의존합니다 .</target>
        </trans-unit>
        <trans-unit id="8f9624afdf7d460a90aeb20a9d89d18f01c7440f" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;Addr#&lt;/code&gt; to a followable Any type.</source>
          <target state="translated">&lt;code&gt;Addr#&lt;/code&gt; 를 팔로우 가능한 Any 유형으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="d27dde92842032874ddd117444ea1996f0f6a7f3" translate="yes" xml:space="preserve">
          <source>Convert an HValueRef to an HValue. Should only be used if the HValue originated in this process.</source>
          <target state="translated">HValueRef를 HValue로 변환하십시오. HValue가이 프로세스에서 시작된 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9c3b5b5e30a7279d8b066b2899f4ba5bb8b255f3" translate="yes" xml:space="preserve">
          <source>Convert an accumulation (append-only) computation into a fully stateful computation.</source>
          <target state="translated">누적 (추가 전용) 계산을 완전한 상태 저장 계산으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a5c26a9a80ed57fafedee05dfb536a7db66f700a" translate="yes" xml:space="preserve">
          <source>Convert an array of given length into a Haskell list. The implementation is tail-recursive and so uses constant stack space.</source>
          <target state="translated">주어진 길이의 배열을 Haskell 목록으로 변환합니다. 구현은 꼬리 재귀이므로 일정한 스택 공간을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3ff3affd229bfd39f3632c917a3fb014f44bb93b" translate="yes" xml:space="preserve">
          <source>Convert an array terminated by the given end marker into a Haskell list</source>
          <target state="translated">주어진 종료 마커로 끝나는 배열을 Haskell 목록으로 변환</target>
        </trans-unit>
        <trans-unit id="e22024ce50341e68ba27616082b9f97f4ffa58e3" translate="yes" xml:space="preserve">
          <source>Convert an immutable array to a list.</source>
          <target state="translated">불변 배열을리스트로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="05f9aa467cfcf62fbe469b7ccf956bd45e053001" translate="yes" xml:space="preserve">
          <source>Convert an integer into an unknown type-level natural.</source>
          <target state="translated">정수를 알 수없는 유형 수준의 자연으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="2bf621a15d173cd265c3ba565665dcb436a36fb6" translate="yes" xml:space="preserve">
          <source>Convert day of year in the Gregorian or Julian calendars to month and day. First arg is leap year flag.</source>
          <target state="translated">그레고리력 또는 율리우스 력으로 연중을 달과 일로 변환합니다. 첫 번째 인수는 윤년 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="d37f7ac9a35a02cf8326f872bb9f3fbea761ab56" translate="yes" xml:space="preserve">
          <source>Convert empty paths to the current directory, otherwise leave it unchanged.</source>
          <target state="translated">빈 경로를 현재 디렉토리로 변환하십시오. 그렇지 않으면 변경하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="63405a27647cb210fb1a3a5f7dfb33b37f497009" translate="yes" xml:space="preserve">
          <source>Convert from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt; (inverse of &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:runErrors&quot;&gt;runErrors&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">변환 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt; (역의 &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:runErrors&quot;&gt;runErrors&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7e8724929527ac9ad8da0e3d00bd19b069f9c666" translate="yes" xml:space="preserve">
          <source>Convert from &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt; (inverse of &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:runErrors&quot;&gt;runErrors&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt; 변환 ( &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:runErrors&quot;&gt;runErrors&lt;/a&gt;&lt;/code&gt; 의 역) ).</target>
        </trans-unit>
        <trans-unit id="76f3d416fef322766db7239cb611c35c46da47b8" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Ordinal Date format. Invalid day numbers return &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ISO 8601 서수 날짜 형식에서 변환하십시오. 유효하지 않은 요일 번호는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 반환 하지 않습니다</target>
        </trans-unit>
        <trans-unit id="bd3860371042225b5c7bc8a4cd656b211e69815a" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Ordinal Date format. Invalid day numbers return &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ISO 8601 서수 날짜 형식에서 변환합니다. 유효하지 않은 일수는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 반환 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bb864c9536371d3479760fce4e9bde5e881f31d4" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Ordinal Date format. Invalid day numbers will be clipped to the correct range (1 to 365 or 366).</source>
          <target state="translated">ISO 8601 서수 날짜 형식에서 변환하십시오. 유효하지 않은 요일 번호가 올바른 범위 (1-365 또는 366)로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="97a325947c34d0c6972435f016ee2ce8b3f602a4" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Week Date format. First argument is year, second week number (1-52 or 53), third day of week (1 for Monday to 7 for Sunday). Invalid week and day values will be clipped to the correct range.</source>
          <target state="translated">ISO 8601 Week Date 형식에서 변환하십시오. 첫 번째 인수는 연도, 두 번째 주 번호 (1-52 또는 53), 세 번째 요일 (월요일은 1 ~ 일요일은 7)입니다. 잘못된 요일 및 요일 값이 올바른 범위로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="b7cf0382c17e7377e5a95ac6ce7dfb066a00a948" translate="yes" xml:space="preserve">
          <source>Convert from ISO 8601 Week Date format. First argument is year, second week number (1-52 or 53), third day of week (1 for Monday to 7 for Sunday). Invalid week and day values will return Nothing.</source>
          <target state="translated">ISO 8601 Week Date 형식에서 변환하십시오. 첫 번째 인수는 연도, 두 번째 주 번호 (1-52 또는 53), 세 번째 요일 (월요일은 1 ~ 일요일은 7)입니다. 잘못된 요일 및 요일 값은 Nothing을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="67eb0938a355fe3cf134ea7ed1362e4214969392" translate="yes" xml:space="preserve">
          <source>Convert from a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt;
&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">A로부터 변환 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; A를 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 사용하여 &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a59f506ff81e94fc6fe05d0f1e56a736002791fa" translate="yes" xml:space="preserve">
          <source>Convert from an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; 를 사용하여 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="85644c051d11a3568fa6cc60adce651a22f8d86a" translate="yes" xml:space="preserve">
          <source>Convert from an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에서 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b2eaadd9bf8f5f6c98721679570631814b1be28b" translate="yes" xml:space="preserve">
          <source>Convert from an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에서 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b6b83e98c957ac7804ac824a5c19642bc967e35e" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Gregorian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will be clipped to the correct range, month first, then day.</source>
          <target state="translated">proleptic 그레고리력에서 변환합니다. 첫 번째 인수는 연도, 두 번째 달 번호 (1-12), 세 번째 날 (1-31)입니다. 유효하지 않은 값은 월, 일, 일의 올바른 범위로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="469c7c0640886e82239e7d6cc781ea45a2b6b968" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Gregorian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will return Nothing</source>
          <target state="translated">proleptic 그레고리력에서 변환합니다. 첫 번째 인수는 연도, 두 번째 달 번호 (1-12), 세 번째 날 (1-31)입니다. 유효하지 않은 값은 Nothing을 반환합니다</target>
        </trans-unit>
        <trans-unit id="b305509e78a4fc56609978b75821aeba0ef88991" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will be clipped to the correct range, month first, then day.</source>
          <target state="translated">Proleptic Julian 일정에서 변환합니다. 첫 번째 인수는 연도, 두 번째 달 번호 (1-12), 세 번째 날 (1-31)입니다. 유효하지 않은 값은 월, 일, 일의 올바른 범위로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="ff62787e9261f7cdda067a1867b18b1005af48f1" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian calendar. First argument is year, second month number (1-12), third day (1-31). Invalid values will return Nothing.</source>
          <target state="translated">Proleptic Julian 일정에서 변환합니다. 첫 번째 인수는 연도, 두 번째 달 번호 (1-12), 세 번째 날 (1-31)입니다. 유효하지 않은 값은 Nothing을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27b312ed692dd9941efb9f711c0fe97a68a51681" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian year and day format. Invalid day numbers will be clipped to the correct range (1 to 365 or 366).</source>
          <target state="translated">proleptic Julian 년과 일 형식에서 변환하십시오. 유효하지 않은 요일 번호가 올바른 범위 (1-365 또는 366)로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="791436a0af7c6a7b742e32360b555f2662b6a13b" translate="yes" xml:space="preserve">
          <source>Convert from proleptic Julian year and day format. Invalid day numbers will return Nothing</source>
          <target state="translated">proleptic Julian 년과 일 형식에서 변환하십시오. 유효하지 않은 요일 번호는 Nothing을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a4109dbd23cca830e424df2b2ec9b825b78f79d" translate="yes" xml:space="preserve">
          <source>Convert from the datatype to its representation</source>
          <target state="translated">데이터 유형에서 표현으로 변환</target>
        </trans-unit>
        <trans-unit id="61e27c8607e8afb531582e838c540e6692c273a0" translate="yes" xml:space="preserve">
          <source>Convert from the representation to the datatype</source>
          <target state="translated">표현에서 데이터 유형으로 변환</target>
        </trans-unit>
        <trans-unit id="3f6af6cc7168a09017d2e2b0ecf8578dfd9965fb" translate="yes" xml:space="preserve">
          <source>Convert month and day in the Gregorian or Julian calendars to day of year. First arg is leap year flag.</source>
          <target state="translated">그레고리력 또는 율리우스 력으로 월과 일을 일자로 변환합니다. 첫 번째 인수는 윤년 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="b5bf03ef36655551931dc898719f97831c239fdf" translate="yes" xml:space="preserve">
          <source>Convert propositional (nominal) equality to representational equality</source>
          <target state="translated">명제 (명칭) 평등을 표현 평등으로 변환</target>
        </trans-unit>
        <trans-unit id="43ce469a115dc3dc5aca28141f9d487f32bab06b" translate="yes" xml:space="preserve">
          <source>Convert the filled part of a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; to a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; 의 채워진 부분을 엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="d31ccd4043fb20c8e7fee555c14ee36e4d6ae1a5" translate="yes" xml:space="preserve">
          <source>Convert to ISO 8601 Ordinal Date format. First element of result is year (proleptic Gregoran calendar), second is the day of the year, with 1 for Jan 1, and 365 (or 366 in leap years) for Dec 31.</source>
          <target state="translated">ISO 8601 서수 날짜 형식으로 변환하십시오. 결과의 첫 번째 요소는 연도 (발음 그레고리 달력)이고, 두 번째는 1 월 1 일은 1, 12 월 31 일은 365 (또는 윤년은 366)입니다.</target>
        </trans-unit>
        <trans-unit id="d242675b463d83dcd5a529af5d365a9e8ad39b5d" translate="yes" xml:space="preserve">
          <source>Convert to ISO 8601 Week Date format. First element of result is year, second week number (1-53), third day of week (1 for Monday to 7 for Sunday). Note that &quot;Week&quot; years are not quite the same as Gregorian years, as the first day of the year is always a Monday. The first week of a year is the first week to contain at least four days in the corresponding Gregorian year.</source>
          <target state="translated">ISO 8601 Week Date 형식으로 변환하십시오. 결과의 첫 번째 요소는 연도, 둘째 주 번호 (1-53), 세 번째 요일 (월요일은 1 ~ 일요일은 7)입니다. &quot;주&quot;연도는 그레고리력 연도와는 같지 않습니다. 연도의 첫 날은 항상 월요일입니다. 일년의 첫주는 해당 그레고리력에서 최소 4 일을 포함하는 첫 주입니다.</target>
        </trans-unit>
        <trans-unit id="78267ac5f05b0a0dee850776bf0e019ff5377188" translate="yes" xml:space="preserve">
          <source>Convert to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. It is implementation-dependent what &lt;code&gt;&lt;a href=&quot;ghc-enum#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; returns when applied to a value that is too large to fit in an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환합니다 . &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에 맞지 않는 너무 큰 값에 적용될 때 &lt;code&gt;&lt;a href=&quot;ghc-enum#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; 이 반환 하는 것은 구현에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="42c9ad262cdb4a665746bcaa5dfd395de14cdae0" translate="yes" xml:space="preserve">
          <source>Convert to an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. It is implementation-dependent what &lt;code&gt;&lt;a href=&quot;prelude#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; returns when applied to a value that is too large to fit in an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환합니다 . &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에 맞지 않는 너무 큰 값에 적용될 때 &lt;code&gt;&lt;a href=&quot;prelude#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; 이 반환 하는 것은 구현에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="f2a9a439e957cd49c9d8784d65671a76323cc5ad" translate="yes" xml:space="preserve">
          <source>Convert to integer. First component of the result is -1 or 1, indicating the sign of the mantissa. The next two are the high and low 32 bits of the mantissa respectively, and the last is the exponent.</source>
          <target state="translated">정수로 변환합니다. 결과의 첫 번째 구성 요소는 가수의 부호를 나타내는 -1 또는 1입니다. 다음 2 개는 각각 가수의 상위 및 하위 32 비트이며 마지막은 지수입니다.</target>
        </trans-unit>
        <trans-unit id="db6538f02c12e21155f3cc865514637d9896586b" translate="yes" xml:space="preserve">
          <source>Convert to integers. First &lt;code&gt;Int#&lt;/code&gt; in result is the mantissa; second is the exponent.</source>
          <target state="translated">정수로 변환하십시오. 결과적으로 첫 번째 &lt;code&gt;Int#&lt;/code&gt; 는 가수입니다. 두 번째는 지수입니다.</target>
        </trans-unit>
        <trans-unit id="ae47d5cd27263ada9ba8089a719b9a36300f0c2c" translate="yes" xml:space="preserve">
          <source>Convert to proleptic Gregorian calendar. First element of result is year, second month number (1-12), third day (1-31).</source>
          <target state="translated">proleptic 그레고리력으로 변환합니다. 결과의 첫 번째 요소는 연도, 두 번째 달 번호 (1-12), 세 번째 날 (1-31)입니다.</target>
        </trans-unit>
        <trans-unit id="f72db1a605e2f1c123e7e1ed3c7fd9ba09542193" translate="yes" xml:space="preserve">
          <source>Convert to proleptic Julian calendar. First element of result is year, second month number (1-12), third day (1-31).</source>
          <target state="translated">Proleptic Julian 일정으로 변환합니다. 결과의 첫 번째 요소는 연도, 두 번째 달 번호 (1-12), 세 번째 날 (1-31)입니다.</target>
        </trans-unit>
        <trans-unit id="fed6adcb53e75e65f8cb94103d28123301c88d1e" translate="yes" xml:space="preserve">
          <source>Convert to proleptic Julian year and day format. First element of result is year (proleptic Julian calendar), second is the day of the year, with 1 for Jan 1, and 365 (or 366 in leap years) for Dec 31.</source>
          <target state="translated">proleptic Julian 년 및 일 형식으로 변환하십시오. 결과의 첫 번째 요소는 연도 (폭력 율리우스 력)이고, 두 번째는 1 월 1 일은 1, 12 월 31 일은 365 (또는 윤년은 366)입니다.</target>
        </trans-unit>
        <trans-unit id="1ec35eab1bf8ff757aa20928e847beae39bb272d" translate="yes" xml:space="preserve">
          <source>Convert to the right kind of slashes.</source>
          <target state="translated">올바른 종류의 슬래시로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="6ad566d6dc915c1f04c22f62d46f1639af0be1dd" translate="yes" xml:space="preserve">
          <source>Convert variable out of scope variables errors into warnings. Implied by &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt;. See also &lt;a href=&quot;using-warnings#ghc-flag--Wdeferred-out-of-scope-variables&quot;&gt;&lt;code&gt;-Wdeferred-out-of-scope-variables&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">범위를 벗어난 변수 오류를 경고로 변환합니다. &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 . &lt;a href=&quot;using-warnings#ghc-flag--Wdeferred-out-of-scope-variables&quot;&gt; &lt;code&gt;-Wdeferred-out-of-scope-variables&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a89fde6d6a92b19247264815bcda3f0b2c24bd4" translate="yes" xml:space="preserve">
          <source>Converters</source>
          <target state="translated">Converters</target>
        </trans-unit>
        <trans-unit id="ff40a1f4372ec126fbc5f44bcd1d70873f2d3f79" translate="yes" xml:space="preserve">
          <source>Converting &lt;code&gt;ST&lt;/code&gt; To &lt;code&gt;IO&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ST&lt;/code&gt; 를 &lt;code&gt;IO&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="2cf173807d599be5f29f6ea397af0b52832ad9d4" translate="yes" xml:space="preserve">
          <source>Converting &lt;code&gt;ST&lt;/code&gt; to &lt;code&gt;IO&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ST&lt;/code&gt; 를 &lt;code&gt;IO&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="40cb2a8750427f7936586698517ff65216593ac5" translate="yes" xml:space="preserve">
          <source>Converting CStrings to ByteStrings</source>
          <target state="translated">CString을 ByteString으로 변환</target>
        </trans-unit>
        <trans-unit id="98449002eb0ed21951bbe655a615daa43b56371c" translate="yes" xml:space="preserve">
          <source>Converting between strict and lazy &lt;code&gt;ST&lt;/code&gt;</source>
          <target state="translated">엄격한 &lt;code&gt;ST&lt;/code&gt; 와 게으른 ST 간 변환</target>
        </trans-unit>
        <trans-unit id="63c6feacad13dc3a7138b2212b529d8c5680b28c" translate="yes" xml:space="preserve">
          <source>Converting file descriptors to/from Handles</source>
          <target state="translated">파일 디스크립터를 핸들로 / 핸들에서 변환</target>
        </trans-unit>
        <trans-unit id="0482ba24d08f59046a76206fba405db795c7a5de" translate="yes" xml:space="preserve">
          <source>Converting from &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에서 변환</target>
        </trans-unit>
        <trans-unit id="5da1118e3ce662c6d206a1124e1f9ba8ebb26e62" translate="yes" xml:space="preserve">
          <source>Converting strings to HTML</source>
          <target state="translated">문자열을 HTML로 변환</target>
        </trans-unit>
        <trans-unit id="4173bd74d262e9479ccd9e3c4de001cad6940370" translate="yes" xml:space="preserve">
          <source>Converting strings to values.</source>
          <target state="translated">문자열을 값으로 변환</target>
        </trans-unit>
        <trans-unit id="8b6aba911527a738e2e03952c04bcad448968ea8" translate="yes" xml:space="preserve">
          <source>Converting to &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 변환</target>
        </trans-unit>
        <trans-unit id="99547e8858198f6f2cfd4feb3bb5dc4ae63a091a" translate="yes" xml:space="preserve">
          <source>Converting to and from &lt;code&gt;Dynamic&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Dynamic&lt;/code&gt; 변환 및 동적 변환</target>
        </trans-unit>
        <trans-unit id="6ba505af9c39acec63179b145d28b2331f7f82ad" translate="yes" xml:space="preserve">
          <source>Converting to and from &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 과의 변환</target>
        </trans-unit>
        <trans-unit id="972c7a51a520be22fe11e2861b6607eb4b51c1df" translate="yes" xml:space="preserve">
          <source>Converting to and from a list</source>
          <target state="translated">리스트와의 변환</target>
        </trans-unit>
        <trans-unit id="1eb4b84c140907b7598e2afe6ec587285f72643a" translate="yes" xml:space="preserve">
          <source>Converting values into documents</source>
          <target state="translated">값을 문서로 변환</target>
        </trans-unit>
        <trans-unit id="a62536252f28880b1dbb14db038090613b03b91d" translate="yes" xml:space="preserve">
          <source>Converting values to readable strings: the &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class and associated functions.</source>
          <target state="translated">값을 읽을 수있는 문자열로 변환 : &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 클래스 및 관련 함수</target>
        </trans-unit>
        <trans-unit id="1ddea431bb3209cff12fab73f2837f2465f33f10" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; object back into an ordinary Haskell value of the correct type. See also &lt;code&gt;&lt;a href=&quot;data-dynamic#v:fromDyn&quot;&gt;fromDyn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; 객체를 올바른 유형의 일반 Haskell 값으로 다시 변환합니다 . &lt;code&gt;&lt;a href=&quot;data-dynamic#v:fromDyn&quot;&gt;fromDyn&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fcbc864b9aed65009fb8ffc13a989024ff90273d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; object back into an ordinary Haskell value of the correct type. See also &lt;code&gt;&lt;a href=&quot;data-dynamic#v:fromDynamic&quot;&gt;fromDynamic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; 객체를 올바른 유형의 일반 Haskell 값으로 다시 변환합니다 . &lt;code&gt;&lt;a href=&quot;data-dynamic#v:fromDynamic&quot;&gt;fromDynamic&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="17f58f5ad653117a2104c2ccbb8afa4ff7fd0b7e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; value into any type in class &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; 값을 &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 클래스의 모든 유형으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="53ead0b1836cb8fca1049909ca74508d6393e424" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; value into any type in class &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; 값을 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 클래스의 모든 유형으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8d3ef5cb8d8e26efbc35a30fe7984ec9410503e6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;withXXX&lt;/code&gt; combinator into one marshalling a value wrapped into a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; to represent &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;withXXX&lt;/code&gt; 콤비 네이터 를 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; 로 래핑 된 값을 정렬하는 하나의 마샬링으로 변환하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="28c80eb87ded9476e9d67e02ec23ae363833b82b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;withXXX&lt;/code&gt; combinator into one marshalling a value wrapped into a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; to represent &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 나타내며 , &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; 로 래핑 된 값을 마샬링 하는 &lt;code&gt;withXXX&lt;/code&gt; 결합 자를 하나로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="05a905138dbf7107147e68ec78f26c025a56c006" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;withXXX&lt;/code&gt; combinator into one marshalling a value wrapped into a &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; to represent &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;withXXX&lt;/code&gt; 콤비 네이터 를 &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; 로 래핑 된 값을 정렬하는 하나의 마샬링으로 변환하여 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b090cd3e952fb38c4328670fe0e5cd245edb4c59" translate="yes" xml:space="preserve">
          <source>Converts a Haskell ReadS-style function into a parser. Warning: This introduces local backtracking in the resulting parser, and therefore a possible inefficiency.</source>
          <target state="translated">Haskell ReadS 스타일 함수를 파서로 변환합니다. 경고 : 결과 파서에 로컬 역 추적이 발생하므로 비효율적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d258218a53afaa6146ce3bd0d2b2a0432cdb695c" translate="yes" xml:space="preserve">
          <source>Converts a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) to an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="translated">전체 복사본을 가져 와서 가변 배열 ( &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; 인스턴스 )을 불변 배열 ( &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt; 인스턴스)로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="db665403b470abc0f5b248c6aa39ff8da55be4ea" translate="yes" xml:space="preserve">
          <source>Converts a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray-safe#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) to an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="translated">전체 복사본을 가져 와서 가변 배열 ( &lt;code&gt;&lt;a href=&quot;data-array-marray-safe#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; 인스턴스 )을 불변 배열 ( &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt; 인스턴스)로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="8e70d82801df49daa796bb73ccabdb90c8e58b3c" translate="yes" xml:space="preserve">
          <source>Converts a normal list to a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; stream.</source>
          <target state="translated">일반 목록을 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; 스트림으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="c3b7b406f45837988453307ff0a7cf0906222f89" translate="yes" xml:space="preserve">
          <source>Converts a parser into a Haskell ReadS-style function. This is the main way in which you can &quot;run&quot; a &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; parser: the expanded type is &lt;code&gt; readP_to_S :: ReadP a -&amp;gt; String -&amp;gt; [(a,String)] &lt;/code&gt;</source>
          <target state="translated">파서를 Haskell ReadS 스타일 함수로 변환합니다. 이것이 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; 파서를 &quot;실행&quot;할 수있는 주요 방법입니다 . 확장 된 유형은 &lt;code&gt; readP_to_S :: ReadP a -&amp;gt; String -&amp;gt; [(a,String)] &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2da27aa3e38fb7a7fa5871ce895ef8edaca7b071" translate="yes" xml:space="preserve">
          <source>Converts a possibly-negative &lt;code&gt;&lt;a href=&quot;ghc-real#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; value to a string.</source>
          <target state="translated">음의 &lt;code&gt;&lt;a href=&quot;ghc-real#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; 값을 문자열로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="be635d9afe4b8e08d188497be0abe1248a45335b" translate="yes" xml:space="preserve">
          <source>Converts a possibly-negative &lt;code&gt;&lt;a href=&quot;prelude#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; value to a string.</source>
          <target state="translated">음의 &lt;code&gt;&lt;a href=&quot;prelude#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; 값을 문자열로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="9c1053f441abc4b481879264322b03856c4f39d1" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; that can be used with the standard Haskell IO library (see &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; 를 표준 Haskell IO 라이브러리와 함께 사용할 수 있는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 로 변환합니다 ( &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1c439643357cf47b47b9847e45217d7db7551ab4" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; that can be used with the standard Haskell IO library (see &lt;a href=&quot;../base-4.14.1.0/system-io&quot;&gt;System.IO&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; 를 표준 Haskell IO 라이브러리와 함께 사용할 수 있는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 로 변환합니다 ( &lt;a href=&quot;../base-4.14.1.0/system-io&quot;&gt;System.IO&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b55c1799c540db0b8d11acaf3d49077eec4e2b09" translate="yes" xml:space="preserve">
          <source>Converts an arbitrary value into an object of type &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">임의의 값을 &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; 유형의 객체로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a1571584db72c118261d0ab776d67ce2f640a04c" translate="yes" xml:space="preserve">
          <source>Converts an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) into a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt; 배열 ( &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; 모든 인스턴스 )을 전체 사본을 가져 와서 변경 가능한 배열 ( MArray의 모든 인스턴스 )로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="194bdb8f1345b25ef47f537b89822d85290b899a" translate="yes" xml:space="preserve">
          <source>Converts an immutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt;) into a mutable array (any instance of &lt;code&gt;&lt;a href=&quot;data-array-marray-safe#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt;) by taking a complete copy of it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt; 배열 ( &lt;code&gt;&lt;a href=&quot;data-array-marray-safe#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; 모든 인스턴스 )을 전체 사본을 가져 와서 변경 가능한 배열 ( MArray의 모든 인스턴스 )로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="d18ac7fa4a02f89db21f9adc7c2d4ab678ce5872" translate="yes" xml:space="preserve">
          <source>Converts an immutable array into a mutable array. The implementation may either simply cast the array from one type to the other without copying the array, or it may take a full copy of the array.</source>
          <target state="translated">불변 배열을 변경 가능한 배열로 변환합니다. 구현은 배열을 복사하지 않고 단순히 한 유형에서 다른 유형으로 배열을 캐스트하거나 배열의 전체 사본을 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b96c2c572aa22372004feee4685547a459b6486b" translate="yes" xml:space="preserve">
          <source>Converts an mutable array into an immutable array. The implementation may either simply cast the array from one type to the other without copying the array, or it may take a full copy of the array.</source>
          <target state="translated">변경 가능한 배열을 변경 불가능한 배열로 변환합니다. 구현은 배열을 복사하지 않고 단순히 한 유형에서 다른 유형으로 배열을 캐스트하거나 배열의 전체 사본을 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c9704fe5361082e38fe0837b2d9fb771ce65a4b" translate="yes" xml:space="preserve">
          <source>Convinience definitions for working with &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">작업을위한적이고 정의 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의.</target>
        </trans-unit>
        <trans-unit id="4bf8adc4a7202f0b9c447f428aa29e180b5f444d" translate="yes" xml:space="preserve">
          <source>Convinience definitions for working with &lt;code&gt;&lt;a href=&quot;../text-1.2.3.2/data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../text-1.2.3.2/data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 작업을위한 편의성 정의 .</target>
        </trans-unit>
        <trans-unit id="a72213a972c400aa0d57ccb1834e5a497f989eb2" translate="yes" xml:space="preserve">
          <source>Convinience definitions for working with &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 작업을위한 편리한 정의 .</target>
        </trans-unit>
        <trans-unit id="95c58873957476a0d13386da8ab1aaf0968fb357" translate="yes" xml:space="preserve">
          <source>Convinience definitions for working with lazy &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 작업을위한 편리한 정의 .</target>
        </trans-unit>
        <trans-unit id="33b0b4b24f6dda602a523816f006da6afa42fa95" translate="yes" xml:space="preserve">
          <source>Copies the given number of bytes from the second area (source) into the first (destination); the copied areas &lt;em&gt;may&lt;/em&gt; overlap</source>
          <target state="translated">지정된 바이트 수를 두 번째 영역 (소스)에서 첫 번째 (대상)로 복사합니다. 복사 된 영역 &lt;em&gt;이&lt;/em&gt; 겹칠 &lt;em&gt;수 있습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62f375eff7a072273bedab4df7dc2d55e5b4438e" translate="yes" xml:space="preserve">
          <source>Copies the given number of bytes from the second area (source) into the first (destination); the copied areas may &lt;em&gt;not&lt;/em&gt; overlap</source>
          <target state="translated">지정된 바이트 수를 두 번째 영역 (소스)에서 첫 번째 (대상)로 복사합니다. 복사 된 영역이 겹치지 &lt;em&gt;않을&lt;/em&gt; 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d7370cc0ddb7aa8412bb477820ffa609369bfe22" translate="yes" xml:space="preserve">
          <source>Copy a file with its associated metadata. If the destination file already exists, it is overwritten. There is no guarantee of atomicity in the replacement of the destination file. Neither path may refer to an existing directory. If the source and/or destination are symbolic links, the copy is performed on the targets of the links.</source>
          <target state="translated">관련 메타 데이터가있는 파일을 복사하십시오. 대상 파일이 이미 있으면 덮어 씁니다. 대상 파일을 교체 할 때 원 자성을 보장 할 수 없습니다. 어느 경로도 기존 디렉토리를 참조 할 수 없습니다. 소스 및 / 또는 대상이 심볼릭 링크 인 경우 링크 대상에서 복사가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="13ba749731c0b029c990c8a392be73e07cfc5d28" translate="yes" xml:space="preserve">
          <source>Copy a file with its permissions. If the destination file already exists, it is replaced atomically. Neither path may refer to an existing directory. No exceptions are thrown if the permissions could not be copied.</source>
          <target state="translated">권한이있는 파일을 복사하십시오. 대상 파일이 이미 존재하면 원자 적으로 대체됩니다. 어느 경로도 기존 디렉토리를 참조 할 수 없습니다. 권한을 복사 할 수없는 경우 예외가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d9c03b4539be0395f5dece752373b846d414becf" translate="yes" xml:space="preserve">
          <source>Copy a memory range starting at the Addr# to the specified range in the MutableByteArray#. The memory region at Addr# and the ByteArray# must fully contain the specified ranges, but this is not checked. The Addr# must not point into the MutableByteArray# (e.g. if the MutableByteArray# were pinned), but this is not checked either.</source>
          <target state="translated">Addr #에서 시작하여 메모리 범위를 MutableByteArray #의 지정된 범위로 복사하십시오. Addr # 및 ByteArray #의 메모리 영역은 지정된 범위를 완전히 포함해야하지만 확인되지는 않습니다. Addr #은 MutableByteArray #를 가리켜서는 안됩니다 (예 : MutableByteArray #가 고정 된 경우).</target>
        </trans-unit>
        <trans-unit id="23b958776ae71006550392eb451998a15b80fd73" translate="yes" xml:space="preserve">
          <source>Copy a range of the ArrayArray# to the specified region in the MutableArrayArray#. Both arrays must fully contain the specified ranges, but this is not checked. The two arrays must not be the same array in different states, but this is not checked either.</source>
          <target state="translated">MuArrayArrayArray #의 지정된 영역에 ArrayArray #의 범위를 복사합니다. 두 배열 모두 지정된 범위를 완전히 포함해야하지만 이것은 확인되지 않습니다. 두 어레이는 서로 다른 상태에서 동일한 어레이가 아니어야하지만이 역시 점검되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2259fc41f9bf3fd3964399d4a856d49c2541f19" translate="yes" xml:space="preserve">
          <source>Copy a range of the ByteArray# to the memory range starting at the Addr#. The ByteArray# and the memory region at Addr# must fully contain the specified ranges, but this is not checked. The Addr# must not point into the ByteArray# (e.g. if the ByteArray# were pinned), but this is not checked either.</source>
          <target state="translated">ByteArray #의 범위를 Addr #에서 시작하는 메모리 범위로 복사하십시오. Addr #의 ByteArray # 및 메모리 영역은 지정된 범위를 완전히 포함해야하지만 이것은 확인되지 않습니다. Addr #은 ByteArray #를 가리켜서는 안됩니다 (예 : ByteArray #가 고정 된 경우).</target>
        </trans-unit>
        <trans-unit id="7b81ff3e9f8618d42f23d16984ec0efe8f654f4e" translate="yes" xml:space="preserve">
          <source>Copy a range of the MutableByteArray# to the memory range starting at the Addr#. The MutableByteArray# and the memory region at Addr# must fully contain the specified ranges, but this is not checked. The Addr# must not point into the MutableByteArray# (e.g. if the MutableByteArray# were pinned), but this is not checked either.</source>
          <target state="translated">MutableByteArray #의 범위를 Addr #에서 시작하는 메모리 범위로 복사하십시오. MutableByteArray # 및 Addr #의 메모리 영역에 지정된 범위가 완전히 포함되어 있어야하지만 이것은 확인되지 않습니다. Addr #은 MutableByteArray #를 가리켜서는 안됩니다 (예 : MutableByteArray #가 고정 된 경우).</target>
        </trans-unit>
        <trans-unit id="5e98456630d78a0c1b8233f9c4a42ab48eb4c2b4" translate="yes" xml:space="preserve">
          <source>Copy a range of the first MutableArrayArray# to the specified region in the second MutableArrayArray#. Both arrays must fully contain the specified ranges, but this is not checked. The regions are allowed to overlap, although this is only possible when the same array is provided as both the source and the destination.</source>
          <target state="translated">첫 번째 MutableArrayArray #의 범위를 두 번째 MutableArrayArray #의 지정된 영역으로 복사하십시오. 두 배열 모두 지정된 범위를 완전히 포함해야하지만 이것은 확인되지 않습니다. 동일한 배열이 소스와 대상으로 모두 제공되는 경우에만 가능하지만 영역은 겹칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee3358cc06858ef1837cac03859b4ffe623b0985" translate="yes" xml:space="preserve">
          <source>Copy a range of the first MutableByteArray# to the specified region in the second MutableByteArray#. Both arrays must fully contain the specified ranges, but this is not checked. The regions are allowed to overlap, although this is only possible when the same array is provided as both the source and the destination.</source>
          <target state="translated">첫 번째 MutableByteArray #의 범위를 두 번째 MutableByteArray #의 지정된 영역으로 복사하십시오. 두 배열 모두 지정된 범위를 완전히 포함해야하지만 이것은 확인되지 않습니다. 동일한 배열이 소스와 대상으로 모두 제공되는 경우에만 가능하지만 영역은 겹칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdf9459a64b2b7b5fc0ee5c07d5b6f628ffb6e2d" translate="yes" xml:space="preserve">
          <source>Copy all data from a file to a handle.</source>
          <target state="translated">파일의 모든 데이터를 핸들로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="8d3ae9975a13d3c351b4d04b7cadbe07aa23dd36" translate="yes" xml:space="preserve">
          <source>Copy data from one handle to another until end of file.</source>
          <target state="translated">파일 끝까지 한 핸들에서 다른 핸들로 데이터를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="49089833661d92c10e46ac3b85707492d4283604" translate="yes" xml:space="preserve">
          <source>Copy some elements of a mutable array.</source>
          <target state="translated">가변 배열의 일부 요소를 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="37f16d968b545bf097a6f37b71ac7033bbeba57b" translate="yes" xml:space="preserve">
          <source>Copy some elements of an immutable array.</source>
          <target state="translated">불변 배열의 일부 요소를 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="6562da081dbd47a9d7b80efae6dc0c0fc316533a" translate="yes" xml:space="preserve">
          <source>Copy the given number of elements from the second array (source) into the first array (destination); the copied areas &lt;em&gt;may&lt;/em&gt; overlap</source>
          <target state="translated">주어진 수의 요소를 두 번째 배열 (소스)에서 첫 번째 배열 (대상)로 복사합니다. 복사 된 영역 &lt;em&gt;이&lt;/em&gt; 겹칠 &lt;em&gt;수 있습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a86802b0d2fff91a8e1351b2e7b686942496e819" translate="yes" xml:space="preserve">
          <source>Copy the given number of elements from the second array (source) into the first array (destination); the copied areas may &lt;em&gt;not&lt;/em&gt; overlap</source>
          <target state="translated">주어진 수의 요소를 두 번째 배열 (소스)에서 첫 번째 배열 (대상)로 복사합니다. 복사 된 영역이 겹치지 &lt;em&gt;않을&lt;/em&gt; 수 있습니다</target>
        </trans-unit>
        <trans-unit id="703ebcc4482f1e2fb8745f39c4f020b62cd0e1aa" translate="yes" xml:space="preserve">
          <source>Copy the permissions of one file to another. This reproduces the permissions more accurately than using &lt;code&gt;&lt;a href=&quot;system-directory#v:getPermissions&quot;&gt;getPermissions&lt;/a&gt;&lt;/code&gt; followed by &lt;code&gt;&lt;a href=&quot;system-directory#v:setPermissions&quot;&gt;setPermissions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">한 파일의 권한을 다른 파일로 복사하십시오. &lt;code&gt;&lt;a href=&quot;system-directory#v:getPermissions&quot;&gt;getPermissions&lt;/a&gt;&lt;/code&gt; 다음에 &lt;code&gt;&lt;a href=&quot;system-directory#v:setPermissions&quot;&gt;setPermissions&lt;/a&gt;&lt;/code&gt; 를 사용하는 것보다 권한을보다 정확하게 재생산합니다 .</target>
        </trans-unit>
        <trans-unit id="43b7de9894fd26b8d14ca6988e963239baff6ad4" translate="yes" xml:space="preserve">
          <source>Copying</source>
          <target state="translated">Copying</target>
        </trans-unit>
        <trans-unit id="3a8f5d919db1d18829220cf2186b85c84a9c0ce3" translate="yes" xml:space="preserve">
          <source>Copying ByteStrings</source>
          <target state="translated">바이트 문자열 복사</target>
        </trans-unit>
        <trans-unit id="a420abf6e89816696d0724f377c00c6447c28f0a" translate="yes" xml:space="preserve">
          <source>Copyright</source>
          <target state="translated">Copyright</target>
        </trans-unit>
        <trans-unit id="f34f7ece0033be1157bb2ea62d68ea31d3a1999d" translate="yes" xml:space="preserve">
          <source>Copyright sign.</source>
          <target state="translated">저작권 표시.</target>
        </trans-unit>
        <trans-unit id="e7f47f4645aaef2045dee2741d015b26c6ec59db" translate="yes" xml:space="preserve">
          <source>Core dumps contain a large amount of information. Depending on what you are doing, not all of it will be useful. Use these flags to suppress the parts that you are not interested in.</source>
          <target state="translated">코어 덤프에는 많은 양의 정보가 포함됩니다. 당신이하고있는 일에 따라 모든 것이 유용하지는 않습니다. 이 플래그를 사용하여 관심이없는 부분을 억제하십시오.</target>
        </trans-unit>
        <trans-unit id="a15a5148b9c1ee468348de4c9e13ef760f806003" translate="yes" xml:space="preserve">
          <source>Core representation and simplification</source>
          <target state="translated">핵심 표현 및 단순화</target>
        </trans-unit>
        <trans-unit id="5dd2e3153c231b0770a66b56bd4d7ead1486a42a" translate="yes" xml:space="preserve">
          <source>Core stream fusion functionality for text.</source>
          <target state="translated">텍스트를위한 핵심 스트림 융합 기능.</target>
        </trans-unit>
        <trans-unit id="68445a701b2ec7a561a15f4a2c994aa11a81cac4" translate="yes" xml:space="preserve">
          <source>Core types and functions for the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; monoid and its generalization, the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; monoid 및 일반화, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 모나드의 핵심 유형 및 기능</target>
        </trans-unit>
        <trans-unit id="094ded4e031e4987e25d535bf16ee1c81bb249cd" translate="yes" xml:space="preserve">
          <source>Correctly instrumented code provides coverage information of two kinds: source coverage and boolean-control coverage. Source coverage is the extent to which every part of the program was used, measured at three different levels: declarations (both top-level and local), alternatives (among several equations or case branches) and expressions (at every level). Boolean coverage is the extent to which each of the values True and False is obtained in every syntactic boolean context (ie. guard, condition, qualifier).</source>
          <target state="translated">올바르게 계측 된 코드는 소스 범위와 부울 제어 범위라는 두 가지 종류의 범위 정보를 제공합니다. 소스 범위는 프로그램의 모든 부분이 사용 된 정도이며, 선언 (최상위 및 로컬 모두), 대안 (여러 방정식 또는 사례 분기) 및 식 (모든 레벨)의 세 가지 수준으로 측정됩니다. 부울 범위는 모든 구문 부울 컨텍스트 (가드, 조건, 한정자)에서 각 True 및 False 값을 얻는 범위입니다.</target>
        </trans-unit>
        <trans-unit id="13a84bf10f17131cd3bbe05e6d6b69842f08da92" translate="yes" xml:space="preserve">
          <source>Correspond to some of the int flags from C's fcntl.h.</source>
          <target state="translated">C의 fcntl.h에서 일부 int 플래그에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="3083b12b64eedd917dae6d40d788078aa911156b" translate="yes" xml:space="preserve">
          <source>Cost centre annotations can also appear in the top-level or in a declaration context. In that case you need to pass a function name defined in the same module or scope with the annotation. Example:</source>
          <target state="translated">코스트 센터 주석은 최상위 또는 선언 컨텍스트에 나타날 수도 있습니다. 이 경우 주석과 함께 동일한 모듈 또는 범위에 정의 된 함수 이름을 전달해야합니다. 예:</target>
        </trans-unit>
        <trans-unit id="41a57dec5dab2c8600419bf9a0f35dd5a900db94" translate="yes" xml:space="preserve">
          <source>Cost centres are just program annotations. When you say &lt;code&gt;-fprof-auto&lt;/code&gt; to the compiler, it automatically inserts a cost centre annotation around every binding not marked INLINE in your program, but you are entirely free to add cost centre annotations yourself.</source>
          <target state="translated">코스트 센터는 단지 프로그램 주석입니다. 컴파일러에 &lt;code&gt;-fprof-auto&lt;/code&gt; 를 말하면 프로그램에서 INLINE으로 표시되지 않은 모든 바인딩 주위에 비용 센터 주석이 자동으로 삽입되지만, 비용 센터 주석을 자유롭게 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dfe9147164335478c6505e7792c465be684c626" translate="yes" xml:space="preserve">
          <source>CostCentre</source>
          <target state="translated">CostCentre</target>
        </trans-unit>
        <trans-unit id="bb8c68a235a0709f0f1575a65aea2c3233e7b3c8" translate="yes" xml:space="preserve">
          <source>CostCentreStack</source>
          <target state="translated">CostCentreStack</target>
        </trans-unit>
        <trans-unit id="17b7cb4f62cf8b34e2d355c70d772c07a9c249b9" translate="yes" xml:space="preserve">
          <source>CostCentresAll</source>
          <target state="translated">CostCentresAll</target>
        </trans-unit>
        <trans-unit id="34880f8a0edcd55dfce8473beea622cdcc056d3b" translate="yes" xml:space="preserve">
          <source>CostCentresJSON</source>
          <target state="translated">CostCentresJSON</target>
        </trans-unit>
        <trans-unit id="0739dd2ceaf7613ecfbe7585f0298037df383653" translate="yes" xml:space="preserve">
          <source>CostCentresNone</source>
          <target state="translated">CostCentresNone</target>
        </trans-unit>
        <trans-unit id="0375166c101d8700c9288a1bacf44e490fed6e11" translate="yes" xml:space="preserve">
          <source>CostCentresSummary</source>
          <target state="translated">CostCentresSummary</target>
        </trans-unit>
        <trans-unit id="693cfea7e902b11abdc78940917858c40fc362a4" translate="yes" xml:space="preserve">
          <source>CostCentresVerbose</source>
          <target state="translated">CostCentresVerbose</target>
        </trans-unit>
        <trans-unit id="20a97932f00140e6abca9c5265b02f10696707bc" translate="yes" xml:space="preserve">
          <source>Could not decode a byte sequence because it was invalid under the given encoding, or ran out of input in mid-decode.</source>
          <target state="translated">주어진 인코딩에서 유효하지 않거나 바이트 중간에 입력이 부족하여 바이트 시퀀스를 디코딩 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="66e12969c225cc6d65e18210488acb826eba907e" translate="yes" xml:space="preserve">
          <source>Count</source>
          <target state="translated">Count</target>
        </trans-unit>
        <trans-unit id="fe1cc521035a196e773c4a8058997db13978c627" translate="yes" xml:space="preserve">
          <source>Count leading zeros in a 64-bit word.</source>
          <target state="translated">64 비트 워드에서 선행 0을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ace8357e575af86590a89513b902c958c8980d3b" translate="yes" xml:space="preserve">
          <source>Count leading zeros in a word.</source>
          <target state="translated">단어에서 선행 0을 세십시오.</target>
        </trans-unit>
        <trans-unit id="f0c73627fc4fd426c7fb8e46ebd01cbfd252acac" translate="yes" xml:space="preserve">
          <source>Count leading zeros in the lower 16 bits of a word.</source>
          <target state="translated">워드의 하위 16 비트에서 선행 0을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="865329aabf6c11fe2986bac17e7c792957dbce43" translate="yes" xml:space="preserve">
          <source>Count leading zeros in the lower 32 bits of a word.</source>
          <target state="translated">워드의 하위 32 비트에서 선행 0을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="6005e90398520d2ddd82a456fd4ecdff930046f9" translate="yes" xml:space="preserve">
          <source>Count leading zeros in the lower 8 bits of a word.</source>
          <target state="translated">워드의 하위 8 비트에서 선행 0을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="962b503db00b1879672bcf5ddf3d085de53c8149" translate="yes" xml:space="preserve">
          <source>Count number of set bits. For negative arguments returns negative population count of negated argument.</source>
          <target state="translated">세트 비트 수를 센다. 음수 인수 인 경우 음수 인수의 음수 모집단을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="63090ecac9b0f57709ee501a0435d228fe773b35" translate="yes" xml:space="preserve">
          <source>Count number of zero bits following the least significant set bit.</source>
          <target state="translated">최하위 설정 비트 다음에 오는 0 비트 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="5faeacbce8f47c677bf96f6dc4c1b07606858fc8" translate="yes" xml:space="preserve">
          <source>Count number of zero bits preceding the most significant set bit.</source>
          <target state="translated">가장 중요한 세트 비트 앞에 오는 0 비트 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="846dc456d8def4f1b260a6da69f7b7fbe3df67ec" translate="yes" xml:space="preserve">
          <source>Count of &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:GmpLimb&quot;&gt;GmpLimb&lt;/a&gt;&lt;/code&gt;s, must be positive (unless specified otherwise).</source>
          <target state="translated">백작 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:GmpLimb&quot;&gt;GmpLimb&lt;/a&gt;&lt;/code&gt; (달리 명시되지 않는 한) 양수 여야,의.</target>
        </trans-unit>
        <trans-unit id="968c5d63647ccad23d5845924b8ad126e11fc3c0" translate="yes" xml:space="preserve">
          <source>Count the number of leaves in the tree:</source>
          <target state="translated">나무의 잎 수를 세십시오.</target>
        </trans-unit>
        <trans-unit id="70ba0602752c999e2b1af71b124c514535f3a370" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in a 64-bit word.</source>
          <target state="translated">64 비트 워드에서 세트 비트 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="de38555facf060099d7100744f90c6f19bf42ebf" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in a word.</source>
          <target state="translated">단어의 세트 비트 수를 센다.</target>
        </trans-unit>
        <trans-unit id="e9e12af935c1c09d3bcc55efcd42491435100638" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in the lower 16 bits of a word.</source>
          <target state="translated">워드의 하위 16 비트에서 설정 비트 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="502e6842237bc7395372b3ecfd7f130090008bfb" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in the lower 32 bits of a word.</source>
          <target state="translated">워드의 하위 32 비트에서 설정된 비트 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="fa8beae6de25ee4645fd4845f0007b7246fed692" translate="yes" xml:space="preserve">
          <source>Count the number of set bits in the lower 8 bits of a word.</source>
          <target state="translated">워드의 하위 8 비트에서 설정 비트 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="9e42b339884c70f35a6332efcbdfdf754c50e096" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in a 64-bit word.</source>
          <target state="translated">64 비트 워드에서 후행 0을 센다.</target>
        </trans-unit>
        <trans-unit id="e01aec7ad840416ccdaf0e0340d4c72c7f5f5464" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in a word.</source>
          <target state="translated">단어에서 후행 0을 센다.</target>
        </trans-unit>
        <trans-unit id="cd11dfc96a67079f175a06a8e98a8a0280f000d8" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in the lower 16 bits of a word.</source>
          <target state="translated">워드의 하위 16 비트에서 후행 0을 센다.</target>
        </trans-unit>
        <trans-unit id="5f7378b9b285283323f64c8e328b2ee5a0c5dcfd" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in the lower 32 bits of a word.</source>
          <target state="translated">워드의 하위 32 비트에서 후행 0을 센다.</target>
        </trans-unit>
        <trans-unit id="53a08e4694fc99f309fef7d332b71b56cd7c3dda" translate="yes" xml:space="preserve">
          <source>Count trailing zeros in the lower 8 bits of a word.</source>
          <target state="translated">워드의 하위 8 비트에서 후행 0을 센다.</target>
        </trans-unit>
        <trans-unit id="7810ca2eec9994e430b34bfbe7314516c25672d5" translate="yes" xml:space="preserve">
          <source>Counting</source>
          <target state="translated">Counting</target>
        </trans-unit>
        <trans-unit id="f027a8b8a8793e448266ca8427d676578bbb3a62" translate="yes" xml:space="preserve">
          <source>Covariant maps for tactics</source>
          <target state="translated">전술에 대한 공변량 맵</target>
        </trans-unit>
        <trans-unit id="e131440f69a2587f5c701c399ddee50b8b84976f" translate="yes" xml:space="preserve">
          <source>Cpp</source>
          <target state="translated">Cpp</target>
        </trans-unit>
        <trans-unit id="71899b9c58c5fa970a54ea8ca721e5c8881e4ea5" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;MutVar#&lt;/code&gt; with specified initial value in specified state thread.</source>
          <target state="translated">지정된 상태 스레드에서 지정된 초기 값으로 &lt;code&gt;MutVar#&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="2dd79f3974a375b94ca3336287dc3156af9dc178" translate="yes" xml:space="preserve">
          <source>Create ByteString of size &lt;code&gt;l&lt;/code&gt; and use action &lt;code&gt;f&lt;/code&gt; to fill it's contents.</source>
          <target state="translated">크기의 ByteString 만들기 &lt;code&gt;l&lt;/code&gt; 및 사용 액션 &lt;code&gt;f&lt;/code&gt; 그것의 내용을 채우기 위해.</target>
        </trans-unit>
        <trans-unit id="b0b35794a4db80f46d09ae5f0f93b508db91517a" translate="yes" xml:space="preserve">
          <source>Create ByteString of up to size size &lt;code&gt;l&lt;/code&gt; and use action &lt;code&gt;f&lt;/code&gt; to fill it's contents which returns its true size.</source>
          <target state="translated">최대 크기 &lt;code&gt;l&lt;/code&gt; 의 ByteString 을 작성하고 조치 &lt;code&gt;f&lt;/code&gt; 를 사용 하여 실제 크기를 리턴하는 컨텐츠를 채우십시오.</target>
        </trans-unit>
        <trans-unit id="0945deb2c25ab70c2886de7a1095808fed6401d5" translate="yes" xml:space="preserve">
          <source>Create Simple MAPI-session by logon</source>
          <target state="translated">로그온하여 간단한 MAPI 세션 만들기</target>
        </trans-unit>
        <trans-unit id="00045f2da876d4c575659e861cdc511bbfb730ab" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; which contains the supplied value.</source>
          <target state="translated">제공된 값을 포함 하는 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="0803ec81cb3e82177f6bdf3135ff80b12cec95eb" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="translated">초기에 비어 있는 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ff9c04c9b23f38a861cb2dcee73a0838b483bf9" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large chunks of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="translated">지연 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 과 동일한 바이트 시퀀스를 나타내는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 . &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 게으른의 큰 덩어리 삽입 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 직접하지만, 복사 작은 사람은 생성 된 덩어리가 평균에 큰 것을 확인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="756d9726d3c4afa0501e00686cab8175fde2a167" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="translated">엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 과 동일한 바이트 시퀀스를 나타내는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 . &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 삽입 큰 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 는 직접이야,하지만 복사 작은 사람은 생성 된 덩어리가 평균에 큰 것을 확인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8082f8ed051f7d5aa24e3ae9264cc7457689650" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes a list of values consecutively using a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for each element. This function is more efficient than the canonical</source>
          <target state="translated">각 요소에 대해 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 을 사용하여 값 목록을 연속적으로 인코딩 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 . 이 기능은 표준보다 더 효율적입니다</target>
        </trans-unit>
        <trans-unit id="e97bb11d4a028d1bdcf23ef87494572bd93b6397" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes a sequence generated from a seed value using a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for each sequence element.</source>
          <target state="translated">각 시퀀스 요소에 대해 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 을 사용하여 시드 값에서 생성 된 시퀀스를 인코딩 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="42e50bff5d707a845a13084b9a9418eb725fcf7b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes each &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; of a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;. For example, we can write a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that filters a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; as follows.</source>
          <target state="translated">크리에이트 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 각 인코딩 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 을 엄격한의 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 사용 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 을 . 예를 들어 다음과 같이 엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 필터링하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aed26c73f4764e5f6bdb769a33697f69bb93a0b7" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes each &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; of a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;. For example, we can write a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that filters a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; as follows.</source>
          <target state="translated">크리에이트 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 각 인코딩 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 을 엄격한의 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 사용 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 을 . 예를 들어 엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 필터링하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성할 수 있습니다. 다음과 같이 .</target>
        </trans-unit>
        <trans-unit id="bd5b440a25af7d8a6d033ee2c0d4aa99f941053e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that encodes values with the given &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 으로 값을 인코딩 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d8925f336391a694d9217788be990e809b9e36b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large chunks of the lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="translated">지연 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 과 동일한 바이트 시퀀스를 나타내는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 . &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 게으른의 큰 덩어리 삽입 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 직접하지만, 복사 작은 사람은 생성 된 덩어리가 평균에 큰 것을 확인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45be853fdd5f3117cd54a8929b9cc6c349053db8" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting the same sequence of bytes as a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; inserts large &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s directly, but copies small ones to ensure that the generated chunks are large on average.</source>
          <target state="translated">엄격한 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 과 동일한 바이트 시퀀스를 나타내는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 . &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 삽입 큰 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 는 직접이야,하지만 복사 작은 사람은 생성 된 덩어리가 평균에 큰 것을 확인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db85620f84495a90f05bfed7f97054ac264d43f9" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-time-clock#t:DiffTime&quot;&gt;DiffTime&lt;/a&gt;&lt;/code&gt; from a number of picoseconds.</source>
          <target state="translated">여러 피코 초에서 &lt;code&gt;&lt;a href=&quot;data-time-clock#t:DiffTime&quot;&gt;DiffTime&lt;/a&gt;&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="36ee02840fe2d65f0f66f7f5fac6512b64c205b1" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-time-clock#t:DiffTime&quot;&gt;DiffTime&lt;/a&gt;&lt;/code&gt; which represents an integral number of seconds.</source>
          <target state="translated">정수 초를 나타내는 &lt;code&gt;&lt;a href=&quot;data-time-clock#t:DiffTime&quot;&gt;DiffTime&lt;/a&gt;&lt;/code&gt; 을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6cf657720739c222d1ad7e74033369a0823ad2c" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;data-time-clock#t:NominalDiffTime&quot;&gt;NominalDiffTime&lt;/a&gt;&lt;/code&gt; from a number of seconds.</source>
          <target state="translated">몇 초에서 &lt;code&gt;&lt;a href=&quot;data-time-clock#t:NominalDiffTime&quot;&gt;NominalDiffTime&lt;/a&gt;&lt;/code&gt; 을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca821b3aed22d09be20b7a0b697024210b14e69e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:ForeignRef&quot;&gt;ForeignRef&lt;/a&gt;&lt;/code&gt; from a &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:RemoteRef&quot;&gt;RemoteRef&lt;/a&gt;&lt;/code&gt;. The finalizer should arrange to call &lt;code&gt;freeHValueRef&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt;. (since this function needs to be called in the process that created the &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt;, it cannot be called directly from the finalizer).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:RemoteRef&quot;&gt;RemoteRef&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:ForeignRef&quot;&gt;ForeignRef&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 . 종료 자는 전화를 준비해야 &lt;code&gt;freeHValueRef&lt;/code&gt; 을 온 &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt; . (이 함수는 &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt; 를 생성 한 프로세스에서 호출되어야하므로 종료 자 에서 직접 호출 할 수 없습니다).</target>
        </trans-unit>
        <trans-unit id="36b1c0b9e3b7377d3fb704254d436888da703f96" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;directory&lt;/em&gt; symbolic link. The target path can be either absolute or relative and need not refer to an existing directory. The order of arguments follows the POSIX convention.</source>
          <target state="translated">&lt;em&gt;디렉토리&lt;/em&gt; 기호 링크를 작성하십시오 . 대상 경로는 절대 또는 상대 경로 일 수 있으며 기존 디렉토리를 참조 할 필요는 없습니다. 인수 순서는 POSIX 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="92afe06e8360d935ffa0176ee680da6d515bd51d" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;file&lt;/em&gt; symbolic link. The target path can be either absolute or relative and need not refer to an existing file. The order of arguments follows the POSIX convention.</source>
          <target state="translated">&lt;em&gt;파일&lt;/em&gt; 기호 링크를 작성하십시오 . 대상 경로는 절대 또는 상대 경로 일 수 있으며 기존 파일을 참조 할 필요는 없습니다. 인수 순서는 POSIX 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="9cbdfd87c409c245bfe8440c2433e05b3b6e5158" translate="yes" xml:space="preserve">
          <source>Create a Haskell &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; from a Windows &lt;code&gt;&lt;a href=&quot;system-win32-types#t:HANDLE&quot;&gt;HANDLE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Windows &lt;code&gt;&lt;a href=&quot;system-win32-types#t:HANDLE&quot;&gt;HANDLE&lt;/a&gt;&lt;/code&gt; 에서 Haskell &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ad2a8a535dd9dfa4f0cb74b89c39bf49ccfebbc9" translate="yes" xml:space="preserve">
          <source>Create a Haskell &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; from a Windows &lt;code&gt;&lt;a href=&quot;system-win32-types#t:HANDLE&quot;&gt;HANDLE&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Windows &lt;code&gt;&lt;a href=&quot;system-win32-types#t:HANDLE&quot;&gt;HANDLE&lt;/a&gt;&lt;/code&gt; 에서 Haskell &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5802df023298c4d16cf0b9712b8c70a4b7e9f148" translate="yes" xml:space="preserve">
          <source>Create a custom allocation strategy. See the code for &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:safeStrategy&quot;&gt;safeStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:untrimmedStrategy&quot;&gt;untrimmedStrategy&lt;/a&gt;&lt;/code&gt; for examples.</source>
          <target state="translated">맞춤 할당 전략을 만듭니다. &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:safeStrategy&quot;&gt;safeStrategy&lt;/a&gt;&lt;/code&gt; 코드 와 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:untrimmedStrategy&quot;&gt;untrimmedStrategy&lt;/a&gt;&lt;/code&gt; 예제 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b8e31fcd93a870f79943de5f8da99266563a5fe" translate="yes" xml:space="preserve">
          <source>Create a finished completion out of the given word.</source>
          <target state="translated">주어진 단어에서 완성 된 완성을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e58cf08c8ca6e9d8e367573248dc7abe191bbfc0" translate="yes" xml:space="preserve">
          <source>Create a mutable byte array that the GC guarantees not to move.</source>
          <target state="translated">GC가 움직이지 않을 것을 보장하는 가변 바이트 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="edd1495853d6b79fa3d7de4879e4f0b3ff310bd9" translate="yes" xml:space="preserve">
          <source>Create a mutable byte array, aligned by the specified amount, that the GC guarantees not to move.</source>
          <target state="translated">GC가 움직이지 않도록 보장하기 위해 지정된 양으로 정렬 된 가변 바이트 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2f00dd1caa57025743acb620673aca92325ea94a" translate="yes" xml:space="preserve">
          <source>Create a nameless non-summer timezone for this number of hours.</source>
          <target state="translated">이 시간 동안 무 여름 시간대를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="d69c61885d235f126ac1a1c5ffb931b232d9dea4" translate="yes" xml:space="preserve">
          <source>Create a nameless non-summer timezone for this number of minutes.</source>
          <target state="translated">이 시간 (분) 동안 이름이없는 여름이 아닌 시간대를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8508d459c4bff012afd8c5c0c0f0f926a7e005dd" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; holding a value supplied</source>
          <target state="translated">제공된 값을 보유한 새로운 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="af477688018958b86db99d8bc227f224fba9b3fd" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; holding a value supplied</source>
          <target state="translated">제공된 값을 보유한 새로운 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="c77360c2c7cdba4d7876a1e48915312076868236" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; holding a value supplied</source>
          <target state="translated">제공된 값을 보유한 새로운 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="38180d40d7c61af3911ac6376d1b69ab379c5227" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, and line number and column number set to 1, the upper left.</source>
          <target state="translated">주어진 소스 이름과 줄 번호와 열 번호를 왼쪽 상단으로 1로 설정 하여 새로운 &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8c6ef286fe16e752b32e572d6c496342eb951a2c" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, line number and column number.</source>
          <target state="translated">지정된 소스 이름, 행 번호 및 열 번호 로 새 &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="daea250c1ea7ee436301f9cd3ff21648d39b426d" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, and line number and column number set to 1, the upper left.</source>
          <target state="translated">주어진 소스 이름과 줄 번호와 열 번호를 왼쪽 상단으로 1로 설정 하여 새로운 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4c76b562980b75a054716cda65a92b5a25047a1d" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; with the given source name, line number and column number.</source>
          <target state="translated">지정된 소스 이름, 행 번호 및 열 번호 로 새 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="39dcd97a1dc08bc2569b3fc23fd8ed00fabccda6" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;TVar#&lt;/code&gt; holding a specified initial value.</source>
          <target state="translated">지정된 초기 값을 보유한 새 &lt;code&gt;TVar#&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="23258a2fdac63015c5100ac11f1a84c9cec65aa7" translate="yes" xml:space="preserve">
          <source>Create a new CNF with a single compact block. The argument is the capacity of the compact block (in bytes, not words). The capacity is rounded up to a multiple of the allocator block size and is capped to one mega block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00160bd46f8c39abd64446014cdb16af8aa67d19" translate="yes" xml:space="preserve">
          <source>Create a new Compact with the given size (in bytes, not words). The size is rounded up to a multiple of the allocator block size, and capped to one mega block.</source>
          <target state="translated">주어진 크기 (워드가 아닌 바이트)로 새로운 Compact를 만듭니다. 크기는 할당 자 블록 크기의 배수로 반올림되고 하나의 메가 블록으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="f586fe8956038825470043a85ce56f1b0a9b45f1" translate="yes" xml:space="preserve">
          <source>Create a new array of breakpoint flags</source>
          <target state="translated">새로운 중단 점 플래그 배열 만들기</target>
        </trans-unit>
        <trans-unit id="114bc5f557448f87ba3ba37d21a33303d48e608b" translate="yes" xml:space="preserve">
          <source>Create a new event manager.</source>
          <target state="translated">새로운 이벤트 관리자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="81ba7cf2f715d09d883a2584e949b47dbe98eab6" translate="yes" xml:space="preserve">
          <source>Create a new mutable array of arrays with the specified number of elements, in the specified state thread, with each element recursively referring to the newly created array.</source>
          <target state="translated">지정된 상태 스레드에서 지정된 수의 요소를 갖는 새로운 가변 배열을 새로 생성 된 배열을 반복적으로 참조하는 각 요소로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="54f2ac2227f78c40097b4522ee37bec2c89c5e10" translate="yes" xml:space="preserve">
          <source>Create a new mutable array with the specified number of elements, in the specified state thread, with each element containing the specified initial value.</source>
          <target state="translated">지정된 상태 스레드에서 지정된 수의 요소로 지정된 초기 값을 포함하는 각 요소를 사용하여 새 가변 배열을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="466a1587cd583580f451238c1058532cc7173ae1" translate="yes" xml:space="preserve">
          <source>Create a new mutable byte array of specified size (in bytes), in the specified state thread.</source>
          <target state="translated">지정된 상태 스레드에서 지정된 크기 (바이트)의 새로운 가변 바이트 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8d38747d5cafb62a1d4c23189ab75d25c33220ef" translate="yes" xml:space="preserve">
          <source>Create a new pipe. The returned &lt;code&gt;Handle&lt;/code&gt; will use the default encoding and newline translation mode (just like &lt;code&gt;Handle&lt;/code&gt;s created by &lt;code&gt;openFile&lt;/code&gt;).</source>
          <target state="translated">새 파이프를 작성하십시오. 리턴 된 &lt;code&gt;Handle&lt;/code&gt; 은 기본 인코딩 및 개행 변환 모드를 사용합니다 ( &lt;code&gt;openFile&lt;/code&gt; 에 의해 작성된 &lt;code&gt;Handle&lt;/code&gt; 과 동일 ).</target>
        </trans-unit>
        <trans-unit id="49a95fcd208e463894853db8e17df73866959fee" translate="yes" xml:space="preserve">
          <source>Create a new process group</source>
          <target state="translated">새로운 프로세스 그룹 생성</target>
        </trans-unit>
        <trans-unit id="f4918908a9ddecf23399957c34bf47bc495f2595" translate="yes" xml:space="preserve">
          <source>Create a piece of HTML which is the concatenation of two things which can be made into HTML.</source>
          <target state="translated">HTML로 만들 수있는 두 가지를 연결 한 HTML을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1ae61ab6375f35c4b6014b06d93a599ec08de088" translate="yes" xml:space="preserve">
          <source>Create a pipe for interprocess communication and return a &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; pair.</source>
          <target state="translated">프로세스 간 통신을위한 파이프를 작성하고 &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 쌍을 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f7d000399adba15dedace95e8d2bfdadc34c9ec" translate="yes" xml:space="preserve">
          <source>Create a pipe for interprocess communication and return a &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-internals#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; pair.</source>
          <target state="translated">프로세스 간 통신을위한 파이프를 작성하고 &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-internals#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; 쌍을 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="d73287a3adf48de007154fd95a0fe3aee808b7b7" translate="yes" xml:space="preserve">
          <source>Create a pipe for interprocess communication and return a &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc27ee4247ee7993cd8dfa3462e5691853360c3" translate="yes" xml:space="preserve">
          <source>Create a pipe for interprocess communication and return a &lt;code&gt;(readEnd, writeEnd)&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-internals#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af88e6d672145d94814d61a78597bfa9755d78cc" translate="yes" xml:space="preserve">
          <source>Create a set of BCO objects, and return HValueRefs to them Note: Each ByteString contains a Binary-encoded [ResolvedBCO], not a ResolvedBCO. The list is to allow us to serialise the ResolvedBCOs in parallel. See &lt;code&gt;createBCOs&lt;/code&gt; in compiler&lt;em&gt;ghci&lt;/em&gt;GHCi.hsc.</source>
          <target state="translated">BCO 오브젝트 세트를 작성하고 HValueRefs를 리턴하십시오. 참고 : 각 ByteString에는 ResolvedBCO가 아닌 2 진 인코딩 된 [ResolvedBCO]가 포함됩니다. 목록은 ResolvedBCO를 병렬로 직렬화 할 수 있도록하기위한 것입니다. 컴파일러 &lt;em&gt;ghci&lt;/em&gt; GHCi.hsc의 &lt;code&gt;createBCOs&lt;/code&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a70d76d7b1bbdb192631eea8926a810275465a84" translate="yes" xml:space="preserve">
          <source>Create a set of CostCentres with the same module name</source>
          <target state="translated">동일한 모듈 이름으로 CostCentres 세트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="17d0ad1df326bea41844dc0f4b9b03677110fcca" translate="yes" xml:space="preserve">
          <source>Create a snapshot of specified resources. Call closeHandle to close snapshot.</source>
          <target state="translated">지정된 리소스의 스냅 샷을 만듭니다. closeHandle을 호출하여 스냅 샷을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="ee95cbf0d5a198a97ef6b06969dec534d13e3341" translate="yes" xml:space="preserve">
          <source>Create a stable pointer referring to the given Haskell value.</source>
          <target state="translated">주어진 Haskell 값을 참조하는 안정적인 포인터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6ff03cd89035feea1054db8e78456707fac6e2b5" translate="yes" xml:space="preserve">
          <source>Create a write-only &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;. More precisely, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:readTChan&quot;&gt;readTChan&lt;/a&gt;&lt;/code&gt; will &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; even after items have been written to the channel. The only way to read a broadcast channel is to duplicate it with &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:dupTChan&quot;&gt;dupTChan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">쓰기 전용 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 을 작성하십시오 . 보다 정확하게, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:readTChan&quot;&gt;readTChan&lt;/a&gt;&lt;/code&gt; 은 항목이 채널에 쓰여진 후에도 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; 합니다. 브로드 캐스트 채널을 읽는 유일한 방법은 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:dupTChan&quot;&gt;dupTChan&lt;/a&gt;&lt;/code&gt; 으로 복제하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="f42e3de888a4aea08cf836053a9965e3af6b1c9a" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="translated">처음에 비어 있는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2845c4f09dbf233465931337526920c110b11a98" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="translated">처음에는 비어 있는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3d6ecaa898ffe7f3832b01a81f12eb20577a8fa0" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which contains the supplied value.</source>
          <target state="translated">제공된 값이 포함 된 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6004b41f6fe416427fd43cae954921d997817b3" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="translated">처음에 비어 있는 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d792718b036d54e94a179082639af76b1e63a57d" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which contains the supplied value.</source>
          <target state="translated">제공된 값이 포함 된 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="81a2227df32ab3e6b7015c7d796833117c2764b2" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; which is initially empty.</source>
          <target state="translated">처음에 비어 있는 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3da5d0de72d8d0b6c57ab915289b292ac1ce1f98" translate="yes" xml:space="preserve">
          <source>Create an empty bit queue builder. This is represented as a single guard bit in the most significant position.</source>
          <target state="translated">빈 비트 큐 빌더를 작성하십시오. 가장 중요한 위치에서 단일 가드 비트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f1269bcfb28e5f12bbc5b255bc45ff128cf82968" translate="yes" xml:space="preserve">
          <source>Create an info table for a constructor</source>
          <target state="translated">생성자를위한 정보 테이블 만들기</target>
        </trans-unit>
        <trans-unit id="6da892e18107b5a7c239993e97889226099e469a" translate="yes" xml:space="preserve">
          <source>Create an uninitialized mutable array.</source>
          <target state="translated">초기화되지 않은 가변 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1b29f91a26b2c9da91db97e0a0f96868491242a9" translate="yes" xml:space="preserve">
          <source>Create and open this file in WriteOnly mode. A special case of &lt;code&gt;&lt;a href=&quot;system-posix-io#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">WriteOnly 모드에서이 파일을 작성하고여십시오. &lt;code&gt;&lt;a href=&quot;system-posix-io#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt; 의 특별한 경우입니다 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; 유형 을 사용하는 방법에 대한 정보는 &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3126a05adda43c14337cdc996328505473853475" translate="yes" xml:space="preserve">
          <source>Create and open this file in WriteOnly mode. A special case of &lt;code&gt;&lt;a href=&quot;system-posix-io#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">이 파일을 WriteOnly 모드로 만들고 엽니 다. &lt;code&gt;&lt;a href=&quot;system-posix-io#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt; 의 특별한 경우 . &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; 유형 을 사용하는 방법에 대한 정보는 &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe01c256ba94b6ec912cf325cc7b32cddd10f106" translate="yes" xml:space="preserve">
          <source>Create and open this file in WriteOnly mode. A special case of &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">WriteOnly 모드에서이 파일을 작성하고여십시오. &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt; 의 특별한 경우입니다 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; 유형 을 사용하는 방법에 대한 정보는 &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="373805356060a6eba44037018a99d0dcf234509b" translate="yes" xml:space="preserve">
          <source>Create and open this file in WriteOnly mode. A special case of &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">이 파일을 WriteOnly 모드로 만들고 엽니 다. &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:openFd&quot;&gt;openFd&lt;/a&gt;&lt;/code&gt; 의 특별한 경우 . &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; 유형 을 사용하는 방법에 대한 정보는 &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1448c32ebec73c944bf29bb1c28a62ae40dcc25" translate="yes" xml:space="preserve">
          <source>Create is mix file.</source>
          <target state="translated">믹스 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="442f68673be56dd124bd7dad15bd5f0e66b61be9" translate="yes" xml:space="preserve">
          <source>Create its parents too?</source>
          <target state="translated">부모도 만드세요?</target>
        </trans-unit>
        <trans-unit id="d74508472aa325dd84197b6ddff0cec62a5f5a4e" translate="yes" xml:space="preserve">
          <source>Create new &lt;code&gt;MVar#&lt;/code&gt;; initially empty.</source>
          <target state="translated">새로운 &lt;code&gt;MVar#&lt;/code&gt; 생성 ; 처음에는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3472467b8d8410a5ff1a349d7f4a7ffb7b36975b" translate="yes" xml:space="preserve">
          <source>Create output suitable for the &lt;code&gt;gs&lt;/code&gt; PostScript previewer (or similar). In this case the graph is printed in portrait mode without scaling. The output is unsuitable for a laser printer.</source>
          <target state="translated">&lt;code&gt;gs&lt;/code&gt; PostScript 미리보기 (또는 유사한)에 적합한 출력을 만듭니다 . 이 경우 그래프는 배율 조정없이 세로 모드로 인쇄됩니다. 레이저 프린터에 적합하지 않은 출력입니다.</target>
        </trans-unit>
        <trans-unit id="7bc424af47afeb108b9e4b025a3def9b10cf95b7" translate="yes" xml:space="preserve">
          <source>Create top-level non-recursive functions with at most &amp;lt;n&amp;gt; parameters while performing late lambda lifting.</source>
          <target state="translated">늦은 람다 리프팅을 수행하는 동안 최대 &amp;lt;n&amp;gt; 개의 파라미터로 최상위 비 재귀 함수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e03ce82a78cde6058e9032f135260a43c85752d8" translate="yes" xml:space="preserve">
          <source>Create top-level non-recursive functions with at most &amp;lt;n&amp;gt; parameters while performing late lambda lifting. The default is 5, the number of available parameter registers on x86_64.</source>
          <target state="translated">늦은 람다 리프팅을 수행하는 동안 최대 &amp;lt;n&amp;gt; 개의 파라미터로 최상위 비 재귀 함수를 만듭니다. 기본값은 x86_64에서 사용 가능한 매개 변수 레지스터의 수인 5입니다.</target>
        </trans-unit>
        <trans-unit id="8e93ad897e92d6188e52e3ca375347d470b573e2" translate="yes" xml:space="preserve">
          <source>Create top-level recursive functions with at most &amp;lt;n&amp;gt; parameters while performing late lambda lifting.</source>
          <target state="translated">늦은 람다 리프팅을 수행하면서 최대 &amp;lt;n&amp;gt; 개의 파라미터로 최상위 재귀 함수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="055ee3dd4f1a8dd32a19dec9d6ec26fef4b75249" translate="yes" xml:space="preserve">
          <source>Create top-level recursive functions with at most &amp;lt;n&amp;gt; parameters while performing late lambda lifting. The default is 5, the number of available parameter registers on x86_64.</source>
          <target state="translated">늦은 람다 리프팅을 수행하면서 최대 &amp;lt;n&amp;gt; 개의 파라미터로 최상위 재귀 함수를 만듭니다. 기본값은 x86_64에서 사용 가능한 매개 변수 레지스터의 수인 5입니다.</target>
        </trans-unit>
        <trans-unit id="c3253efe9093358f7a6b05b7418a6f8169415700" translate="yes" xml:space="preserve">
          <source>CreateMode</source>
          <target state="translated">CreateMode</target>
        </trans-unit>
        <trans-unit id="09e793592754b717d65893a2edec48a18a91f778" translate="yes" xml:space="preserve">
          <source>CreatePipe</source>
          <target state="translated">CreatePipe</target>
        </trans-unit>
        <trans-unit id="d87c0b36b43c81178bf82f05421a7974783ce7e0" translate="yes" xml:space="preserve">
          <source>CreateProcess</source>
          <target state="translated">CreateProcess</target>
        </trans-unit>
        <trans-unit id="182e32c5591f9bdfa9259f14cd20558084afd9ef" translate="yes" xml:space="preserve">
          <source>Creates a means of decoding bytes into characters: the result must not be shared between several byte sequences or simultaneously across threads</source>
          <target state="translated">바이트를 문자로 디코딩하는 수단을 만듭니다. 결과는 여러 바이트 시퀀스간에 또는 스레드간에 동시에 공유되어서는 안됩니다</target>
        </trans-unit>
        <trans-unit id="b24e9933117124de7d907f3000c8eed42d4dcd03" translate="yes" xml:space="preserve">
          <source>Creates a means of encode characters into bytes: the result must not be shared between several character sequences or simultaneously across threads</source>
          <target state="translated">문자를 바이트로 인코딩하는 수단을 만듭니다. 결과는 여러 문자 시퀀스간에 또는 스레드간에 동시에 공유되어서는 안됩니다</target>
        </trans-unit>
        <trans-unit id="62821395ffa9c431bdec3d73abe8459ec5134240" translate="yes" xml:space="preserve">
          <source>Creates a new object of type &lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt;. The value returned will not compare equal to any other value of type &lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt; returned by previous calls to &lt;code&gt;&lt;a href=&quot;data-unique#v:newUnique&quot;&gt;newUnique&lt;/a&gt;&lt;/code&gt;. There is no limit on the number of times &lt;code&gt;&lt;a href=&quot;data-unique#v:newUnique&quot;&gt;newUnique&lt;/a&gt;&lt;/code&gt; may be called.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt; 유형의 새 객체를 만듭니다 . 반환 된 값은 이전의 &lt;code&gt;&lt;a href=&quot;data-unique#v:newUnique&quot;&gt;newUnique&lt;/a&gt;&lt;/code&gt; 호출에 의해 반환 된 &lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt; 유형의 다른 값과 같지 않습니다 . &lt;code&gt;&lt;a href=&quot;data-unique#v:newUnique&quot;&gt;newUnique&lt;/a&gt;&lt;/code&gt; 를 호출 할 수있는 횟수에는 제한이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2189b80cdcf77de5eba35bed847e1964d9441f21" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified command with the given arguments, and wait for it to finish. If the command returns a non-zero exit code, an exception is raised.</source>
          <target state="translated">지정된 인수로 지정된 명령을 실행하기 위해 새 프로세스를 작성하고 완료 될 때까지 기다립니다. 명령이 0이 아닌 종료 코드를 리턴하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="86af67b5849b1a76e700724fe469b391589841d6" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified raw command with the given arguments. It does not wait for the program to finish, but returns the &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정된 인수를 사용하여 지정된 원시 명령을 실행하기위한 새 프로세스를 작성합니다. 프로그램이 끝날 때까지 기다리지 않지만 &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac21c6961ffb11e81d05179dbff40d5e11e14a1a" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified shell command. If the command returns a non-zero exit code, an exception is raised.</source>
          <target state="translated">지정된 쉘 명령을 실행할 새 프로세스를 작성합니다. 명령이 0이 아닌 종료 코드를 리턴하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="296f84823d0a41d3d8bc968f4b6d72a95b1736ef" translate="yes" xml:space="preserve">
          <source>Creates a new process to run the specified shell command. It does not wait for the program to finish, but returns the &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정된 쉘 명령을 실행할 새 프로세스를 작성합니다. 프로그램이 끝날 때까지 기다리지 않지만 &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8ffb32847ed1b4e2f1b38db9f7ec4d8fe5505f4b" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="translated">첫 번째 인수로 전달 된 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 계산 을 실행하기 위해 새 스레드를 작성하고 새로 작성된 스레드 의 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9585eba18d5f7208166ef81bcaeec8d3b7897d7b" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="translated">첫 번째 인수로 전달 된 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 계산 을 실행하는 새 스레드를 만들고 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 반환합니다. 만들고 새로 만든 스레드 를 .</target>
        </trans-unit>
        <trans-unit id="817d8db1b8ce30d837f462e77d15710f92068fa7" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="translated">첫 번째 인수로 전달 된 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 계산 을 실행하기 위해 새 스레드를 작성하고 새로 작성된 스레드 의 &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f797996b884cdde5480de5307a51966f4e6fd866" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="translated">첫 번째 인수로 전달 된 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 계산 을 실행하기 위해 새 스레드를 작성하고 새로 작성된 스레드 의 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b1d7f818811e34e07c0408f2d7739e9d333c011e" translate="yes" xml:space="preserve">
          <source>Creates a new thread to run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="translated">첫 번째 인수로 전달 된 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 계산 을 실행하기 위해 새 스레드를 작성하고 새로 작성된 스레드 의 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9266fe6777f67db1d3e3a6d82021c4d40abf35cc" translate="yes" xml:space="preserve">
          <source>Creates a new, empty, package database at ⟨path⟩, which must not already exist.</source>
          <target state="translated">존재하지 않아야하는 ⟨path⟩에 비어있는 새 패키지 데이터베이스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7f360c2288b39d9ee0476526b7d70da76b2c05a4" translate="yes" xml:space="preserve">
          <source>Creates an exception with a message. The default implementation of &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">메시지와 함께 예외를 만듭니다. &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; 기본 구현 은 &lt;code&gt;&lt;a href=&quot;control-monad-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c57d8b166949dc35de125e038990ab0558c0515a" translate="yes" xml:space="preserve">
          <source>Creates an exception with a message. The default implementation of &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">메시지와 함께 예외를 만듭니다. &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; 기본 구현 은 &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="98086dd73809caf1f05d206a236c7a7cff29c317" translate="yes" xml:space="preserve">
          <source>Creates an exception with a message. The default implementation of &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">메시지와 함께 예외를 만듭니다. &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; s&lt;/code&gt; 기본 구현 은 &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="511032506367798b0cb1c4974caa1f9f1fe60240" translate="yes" xml:space="preserve">
          <source>Creates an exception without a message. The default implementation is &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">메시지없이 예외를 만듭니다. 기본 구현은 &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac81865a533fdbe5cac09821edae62e9c8b88d60" translate="yes" xml:space="preserve">
          <source>Creates an exception without a message. The default implementation is &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">메시지없이 예외를 만듭니다. 기본 구현은 &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b7494fcc1df3bf278922ef928e5cb472891748b7" translate="yes" xml:space="preserve">
          <source>Creates an exception without a message. The default implementation is &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">메시지없이 예외를 만듭니다. 기본 구현은 &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt; &quot;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2074f76dde8b71722c7d0f1998a0d7c090702b2" translate="yes" xml:space="preserve">
          <source>Creating Builders</source>
          <target state="translated">빌더 작성</target>
        </trans-unit>
        <trans-unit id="4a456e71f8638005e839a43033f6e4aad42307a7" translate="yes" xml:space="preserve">
          <source>Creating a Win32 DLL -shared Sealing up your Haskell library inside a DLL is straightforward; compile up the object files that make up the library, and then build the DLL by issuing a command of the form:</source>
          <target state="translated">Win32 DLL 공유 공유 DLL 내에 Haskell 라이브러리를 봉인하는 것은 간단합니다. 라이브러리를 구성하는 오브젝트 파일을 컴파일 한 후 다음 형식의 명령을 실행하여 DLL을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="0459a8d194a0f0793b10be66f5b61a51073b5175" translate="yes" xml:space="preserve">
          <source>Creating and removing directories</source>
          <target state="translated">디렉토리 작성 및 제거</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="bc965c830452272c9544f1bf817d9243583326b4" translate="yes" xml:space="preserve">
          <source>Creation and elimination</source>
          <target state="translated">창조와 제거</target>
        </trans-unit>
        <trans-unit id="a5b0a27f6e5c518cbb90b62ff774a3c9a4c7f253" translate="yes" xml:space="preserve">
          <source>Cs: Other, Surrogate</source>
          <target state="translated">Cs : 기타, 대리</target>
        </trans-unit>
        <trans-unit id="3bb1c9bdf5e6d2fc16e7af648b01d7799c4f1a8c" translate="yes" xml:space="preserve">
          <source>Ctrl events</source>
          <target state="translated">Ctrl 이벤트</target>
        </trans-unit>
        <trans-unit id="248c908368cf8fe57b5456c03f90c4b01d59670c" translate="yes" xml:space="preserve">
          <source>Ctrl-C</source>
          <target state="translated">Ctrl-C</target>
        </trans-unit>
        <trans-unit id="fc4c68c493635c80a6994587676c158aed26c878" translate="yes" xml:space="preserve">
          <source>Ctrl-C handling</source>
          <target state="translated">Ctrl-C 처리</target>
        </trans-unit>
        <trans-unit id="5cc4264af7daac6f500098d7a9ef7009bc74a3fc" translate="yes" xml:space="preserve">
          <source>Ctrl-\</source>
          <target state="translated">Ctrl-\</target>
        </trans-unit>
        <trans-unit id="f19767f8454725b6ba3c25b06a8304a4ef0ba15f" translate="yes" xml:space="preserve">
          <source>CtrlEvent</source>
          <target state="translated">CtrlEvent</target>
        </trans-unit>
        <trans-unit id="66f46ef580c7c357590db77c876fd01eadd34d9a" translate="yes" xml:space="preserve">
          <source>CurrencySymbol</source>
          <target state="translated">CurrencySymbol</target>
        </trans-unit>
        <trans-unit id="df893233f128ab6c4697175d320f8d120c1ab9e0" translate="yes" xml:space="preserve">
          <source>Current working directory</source>
          <target state="translated">현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="ef9564b636067f838e011b00f0f7c00adda350ec" translate="yes" xml:space="preserve">
          <source>Currently only GHC provides eventlog profiling, see the GHC user guide for details on how to use it. These function exists for other Haskell implementations but no events are emitted. Note that the string message is always evaluated, whether or not profiling is available or enabled.</source>
          <target state="translated">현재 GHC만이 이벤트 로그 프로파일 링을 제공합니다. 사용 방법에 대한 자세한 내용은 GHC 사용자 안내서를 참조하십시오. 이 함수는 다른 Haskell 구현에 존재하지만 이벤트가 생성되지 않습니다. 프로파일 링의 사용 가능 여부에 관계없이 문자열 메시지는 항상 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="197ae62b3b6ebabef2371e2a23d5e3100dc0c0c2" translate="yes" xml:space="preserve">
          <source>Currently set to 128 bytes, less the memory management overhead.</source>
          <target state="translated">현재 128 바이트로 설정되어 메모리 관리 오버 헤드가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="59dbac8e31fcf050b4ac801e3fcd6685c255fe71" translate="yes" xml:space="preserve">
          <source>Currently set to 16 KiB, less the memory management overhead.</source>
          <target state="translated">현재 16 KiB로 설정되어 메모리 관리 오버 헤드가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="d2c2f3cb4cfac680e942dfac1beaf947c89be763" translate="yes" xml:space="preserve">
          <source>Currently this feature is only supported in GHC by the eventlog tracing system, but in future it may also be supported by the heap profiling or other profiling tools. These function exists for other Haskell implementations but they have no effect. Note that the string message is always evaluated, whether or not profiling is available or enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4411ac819bb70a40c9c00539d1a7e8e3e92897f" translate="yes" xml:space="preserve">
          <source>Currently, in the primary message, the following inheritance tree is in place:</source>
          <target state="translated">현재 기본 메시지에는 다음과 같은 상속 트리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6f8f298c1907930381d06f7681cf100b96bad39" translate="yes" xml:space="preserve">
          <source>Currently, only the six unlifted types listed above are generated, but this may be extended to encompass more unlifted types in the future.</source>
          <target state="translated">현재 위에 나열된 6 가지 리프팅되지 않은 유형 만 생성되지만 향후 더 많은 리프팅되지 않은 유형을 포함하도록 확장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7e23b04e9a2daaa71072024f864d988d07106c6" translate="yes" xml:space="preserve">
          <source>Currently, some implementations of &lt;code&gt;recover&lt;/code&gt; may mutate the input buffer. In particular, this feature is used to implement transliteration.</source>
          <target state="translated">현재 일부 &lt;code&gt;recover&lt;/code&gt; 구현은 입력 버퍼를 변경시킬 수 있습니다. 특히이 기능은 음역을 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="522976d3310b639354ae81aebca0c174fe79a2e5" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;IsList&lt;/code&gt; class is not accompanied with defaulting rules. Although feasible, not much thought has gone into how to specify the meaning of the default declarations like:</source>
          <target state="translated">현재 &lt;code&gt;IsList&lt;/code&gt; 클래스에는 기본 규칙이 없습니다. 실현 가능하지만 다음과 같은 기본 선언의 의미를 지정하는 방법에 대해서는별로 생각하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="cd769ba38d28cc613105971988eff8fe5f7ab074" translate="yes" xml:space="preserve">
          <source>Currently, the ability to write visible, dependent quantifiers is limited to kinds. Consequently, visible dependent quantifiers are rejected in any context that is unambiguously the type of a term. They are also rejected in the types of data constructors.</source>
          <target state="translated">현재 눈에 보이는 종속 수량자를 작성하는 기능은 종류로 제한됩니다. 결과적으로 표시되는 종속 수량자는 명확하게 용어 유형 인 모든 컨텍스트에서 거부됩니다. 데이터 생성자 유형에서도 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="6fe910afe8a39e1a6d528060fa8d85e23b5940aa" translate="yes" xml:space="preserve">
          <source>Currently, the deriving strategies are:</source>
          <target state="translated">현재 도출 전략은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ce931ce09724af815ad98370c7680d089712c79d" translate="yes" xml:space="preserve">
          <source>Cursor flags</source>
          <target state="translated">커서 플래그</target>
        </trans-unit>
        <trans-unit id="8fdb08067040c8fdef06c4444b45a697866a5c52" translate="yes" xml:space="preserve">
          <source>Custom constructs</source>
          <target state="translated">맞춤 구성</target>
        </trans-unit>
        <trans-unit id="7a4b212280809bf2966adde4a4301caf4320a4e8" translate="yes" xml:space="preserve">
          <source>Custom tab completion.</source>
          <target state="translated">맞춤 탭 완성.</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="ed739ba2afbb77f8f138751a25ca7cff19dd9490" translate="yes" xml:space="preserve">
          <source>Cxt</source>
          <target state="translated">Cxt</target>
        </trans-unit>
        <trans-unit id="24d11fc8275501193b09ba0ba1204a0a8b7041c1" translate="yes" xml:space="preserve">
          <source>CxtQ</source>
          <target state="translated">CxtQ</target>
        </trans-unit>
        <trans-unit id="8e1fe2d5051dae6f4c0e85f4a647eae59d36638e" translate="yes" xml:space="preserve">
          <source>Cyan</source>
          <target state="translated">Cyan</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="84b6a10ad3f822286f4527daa9c452b2d4466910" translate="yes" xml:space="preserve">
          <source>D. M. Sunday: A Very Fast Substring Search Algorithm. Communications of the ACM, 33, 8, 132-142 (1990)</source>
          <target state="translated">DM Sunday : 매우 빠른 하위 문자열 검색 알고리즘. ACM의 커뮤니케이션, 33, 8, 132-142 (1990)</target>
        </trans-unit>
        <trans-unit id="e69d1e6c665e58810c027760f6565d2c2daef30c" translate="yes" xml:space="preserve">
          <source>D.R. Morrison, &quot;/PATRICIA -- Practical Algorithm To Retrieve Information Coded In Alphanumeric/&quot;, Journal of the ACM, 15(4), October 1968, pages 514-534.</source>
          <target state="translated">DR Morrison, &quot;/ PATRICIA-영숫자로 코딩 된 정보를 검색하는 실용적인 알고리즘 /&quot;, Journal of ACM, 15 (4), 1968 년 10 월, 페이지 514-534.</target>
        </trans-unit>
        <trans-unit id="cc9a0d8481459987c9df62ca0f44e7fe1da6461d" translate="yes" xml:space="preserve">
          <source>D1</source>
          <target state="translated">D1</target>
        </trans-unit>
        <trans-unit id="7476cacd8baa1dac9b09d0237624cbf7e3f47d96" translate="yes" xml:space="preserve">
          <source>DDWORD</source>
          <target state="translated">DDWORD</target>
        </trans-unit>
        <trans-unit id="50ad02e6b0bf26fc54c47e823eb0d0653ec30060" translate="yes" xml:space="preserve">
          <source>DEPRECATED. Get the number of bytes of remaining input. Note that this is an expensive function to use as in order to calculate how much input remains, all input has to be read and kept in-memory. The decoder keeps the input as a strict bytestring, so you are likely better off by calculating the remaining input in another way.</source>
          <target state="translated">더 이상 사용되지 않습니다. 남아있는 입력의 바이트 수를 가져옵니다. 이것은 남아있는 입력량을 계산하기 위해 사용하는 고가의 함수이며, 모든 입력을 읽고 메모리에 보관해야합니다. 디코더는 입력을 엄격한 바이트 문자열로 유지하므로 나머지 입력을 다른 방식으로 계산하여 더 나은 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6de27379d6d2a9adac2874c6c48a4030c0e8eeb5" translate="yes" xml:space="preserve">
          <source>DEPRECATED. Provides compatibility with previous versions of this library. Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad and return a tuple with three values. The first value is the result of the decoder. The second and third are the unused input, and the number of consumed bytes.</source>
          <target state="translated">더 이상 사용되지 않습니다. 이 라이브러리의 이전 버전과 호환됩니다. &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; 모나드를 실행하고 3 개의 값을 가진 튜플을 반환하십시오. 첫 번째 값은 디코더의 결과입니다. 두 번째와 세 번째는 사용되지 않은 입력과 소비 된 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="10e2690c0c90e20b63f8d9a89bff9923e2601357" translate="yes" xml:space="preserve">
          <source>DEPRECATED. Same as &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getByteString&quot;&gt;getByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않습니다. 동일 &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getByteString&quot;&gt;getByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="766c79cedb89e96907fe9488d2164ec70ef135cc" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Use &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않음 : &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ca2653a239775736863dd4f1240c390dd31b42f" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Use &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않음 : &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="53a81edefe355889dccbacb38a4a1453f4e85785" translate="yes" xml:space="preserve">
          <source>DL</source>
          <target state="translated">DL</target>
        </trans-unit>
        <trans-unit id="5047a019a53c431e52ed2552ab4129d7a751614d" translate="yes" xml:space="preserve">
          <source>DLL-creation mode (Windows only)</source>
          <target state="translated">DLL 생성 모드 (Windows 만 해당)</target>
        </trans-unit>
        <trans-unit id="4a71cc44c6953225787d9bf20a5f5569b4a2c64c" translate="yes" xml:space="preserve">
          <source>DLL-creation mode (Windows only). See &lt;a href=&quot;win32-dlls#win32-dlls-create&quot;&gt;Creating a DLL&lt;/a&gt;.</source>
          <target state="translated">DLL 작성 모드 (Windows 만 해당). &lt;a href=&quot;win32-dlls#win32-dlls-create&quot;&gt;DLL 만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cddc404e20a0b6df539c9a2ed8237dab6ef44689" translate="yes" xml:space="preserve">
          <source>DLLs on Windows are typically linked to by linking to a corresponding &lt;code&gt;.lib&lt;/code&gt; or &lt;code&gt;.dll.a&lt;/code&gt; &amp;mdash; the so-called import library. GHC will typically generate such a file for every DLL you create by compiling in &lt;a href=&quot;#ghc-flag--shared&quot;&gt;&lt;code&gt;-shared&lt;/code&gt;&lt;/a&gt; mode. However, sometimes you don&amp;rsquo;t want to pay the disk-space cost of creating this import library, which can be substantial &amp;mdash; it might require as much space as the code itself, as Haskell DLLs tend to export lots of symbols.</source>
          <target state="translated">Windows의 DLL은 일반적으로 해당 &lt;code&gt;.lib&lt;/code&gt; 또는 &lt;code&gt;.dll.a&lt;/code&gt; ( 소위 가져 오기 라이브러리) 에 연결하여 연결됩니다 . GHC는 일반적으로 &lt;a href=&quot;#ghc-flag--shared&quot;&gt; &lt;code&gt;-shared&lt;/code&gt; &lt;/a&gt; 모드 에서 컴파일하여 생성하는 모든 DLL에 대해 이러한 파일을 생성 합니다. 그러나이 가져 오기 라이브러리를 만드는 데 필요한 디스크 공간 비용을 지불하고 싶지 않은 경우도 있습니다. 이는 Haskell DLL이 많은 심볼을 내보내는 경향이 있기 때문에 코드 자체만큼 많은 공간이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c265d30d8d7b94595ee17c4acff00356cbe1e73a" translate="yes" xml:space="preserve">
          <source>DWORD</source>
          <target state="translated">DWORD</target>
        </trans-unit>
        <trans-unit id="db5418ed202295261e25e2fa076fb5144d23b67d" translate="yes" xml:space="preserve">
          <source>DWORD32</source>
          <target state="translated">DWORD32</target>
        </trans-unit>
        <trans-unit id="c10eba1824eeaacef33916c4210bf226754d2bc3" translate="yes" xml:space="preserve">
          <source>DWORD64</source>
          <target state="translated">DWORD64</target>
        </trans-unit>
        <trans-unit id="7e91d1a8f180c02fc955e079f5a8213f9aacbd34" translate="yes" xml:space="preserve">
          <source>DWORD_PTR</source>
          <target state="translated">DWORD_PTR</target>
        </trans-unit>
        <trans-unit id="b02443d980b30072786b5401de57e9c89e3b9015" translate="yes" xml:space="preserve">
          <source>DashPunctuation</source>
          <target state="translated">DashPunctuation</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="6aa87263c838d31103d7ab645bc63afeb1267ac1" translate="yes" xml:space="preserve">
          <source>Data and newtype instance declarations are only permitted when an appropriate family declaration is in scope - just as a class instance declaration requires the class declaration to be visible. Moreover, each instance declaration has to conform to the kind determined by its family declaration. This implies that the number of parameters of an instance declaration matches the arity determined by the kind of the family.</source>
          <target state="translated">데이터 및 newtype 인스턴스 선언은 클래스 선언이 클래스 선언을 표시해야하는 것처럼 적절한 패밀리 선언이 범위 내에있을 때만 허용됩니다. 또한 각 인스턴스 선언은 패밀리 선언에 의해 결정된 종류를 따라야합니다. 이는 인스턴스 선언의 매개 변수 수가 패밀리의 종류에 따라 결정된 특성과 일치 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7f0b9ed2f85e616e5c049c699a209b22caab8e15" translate="yes" xml:space="preserve">
          <source>Data constructor representations</source>
          <target state="translated">데이터 생성자 표현</target>
        </trans-unit>
        <trans-unit id="668da06f5b11bf0ad5cab96208c26ae5002865ff" translate="yes" xml:space="preserve">
          <source>Data constructors</source>
          <target state="translated">데이터 생성자</target>
        </trans-unit>
        <trans-unit id="95ccd3fc79385e9d9c6acebe0d437424e4b05e3a" translate="yes" xml:space="preserve">
          <source>Data constructors and class methods are usually displayed in the context of their data type or class declaration. However, if the &lt;code&gt;!&lt;/code&gt; symbol is appended to the command, thus &lt;code&gt;:browse!&lt;/code&gt;, they are listed individually. The &lt;code&gt;!&lt;/code&gt;-form also annotates the listing with comments giving possible imports for each group of entries. Here is an example:</source>
          <target state="translated">데이터 생성자와 클래스 메소드는 일반적으로 데이터 유형 또는 클래스 선언의 컨텍스트에 표시됩니다. 그러나 &lt;code&gt;!&lt;/code&gt; 기호가 명령에 추가되므로 &lt;code&gt;:browse!&lt;/code&gt; 개별적으로 나열됩니다. &lt;code&gt;!&lt;/code&gt; -form은 각 항목 그룹에 대해 가능한 가져 오기를 제공하는 주석으로 목록에 주석을 추가합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d046baaaca9ed71cef681a28496638dc0a50ad5" translate="yes" xml:space="preserve">
          <source>Data constructors with contexts that contain non-equality constraints cannot be promoted. For example:</source>
          <target state="translated">같지 않은 제약 조건이 포함 된 컨텍스트가있는 데이터 생성자는 승격 할 수 없습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8bd061168460f4231b25b2bdf8bfd96b0c59cd4" translate="yes" xml:space="preserve">
          <source>Data families appear in two flavours: (1) they can be defined on the toplevel or (2) they can appear inside type classes (in which case they are known as associated types). The former is the more general variant, as it lacks the requirement for the type-indexes to coincide with the class parameters. However, the latter can lead to more clearly structured code and compiler warnings if some type instances were - possibly accidentally - omitted. In the following, we always discuss the general toplevel form first and then cover the additional constraints placed on associated types.</source>
          <target state="translated">데이터 패밀리는 (1) 최상위 수준에서 정의 할 수 있거나 (2) 유형 클래스 내부에 나타날 수 있습니다 (이 경우 관련 유형이라고 함). 전자는 형식 인덱스가 클래스 매개 변수와 일치하지 않아도되므로보다 일반적인 변형입니다. 그러나 후자가 일부 유형 인스턴스가 실수로 생략 된 경우보다 명확하게 구조화 된 코드 및 컴파일러 경고가 발생할 수 있습니다. 다음에서는 항상 일반 최상위 양식을 먼저 논의한 다음 관련 유형에 적용되는 추가 제약 조건을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="36a4314976ba464fb7b200aadb057a0be88f6717" translate="yes" xml:space="preserve">
          <source>Data families are tricky territory. Their headers are exempt from this rule, but their instances are not:</source>
          <target state="translated">데이터 계열은 까다로운 영역입니다. 헤더는이 규칙에서 제외되지만 인스턴스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5cb896e12d4ecacad75f07c035ad68bb87ed99bb" translate="yes" xml:space="preserve">
          <source>Data family instance constructors cannot be promoted at the moment. GHC&amp;rsquo;s type theory just isn&amp;rsquo;t up to the task of promoting data families, which requires full dependent types.</source>
          <target state="translated">현재 데이터 패밀리 인스턴스 생성자를 승격 할 수 없습니다. GHC의 유형 이론은 전적으로 의존적 인 유형을 요구하는 데이터 패밀리를 홍보하는 임무에 달려 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70286070f76be39db74ca379634a2c5f5b173e64" translate="yes" xml:space="preserve">
          <source>Data instance declarations can also have &lt;code&gt;deriving&lt;/code&gt; clauses. For example, we can write</source>
          <target state="translated">데이터 인스턴스 선언에는 &lt;code&gt;deriving&lt;/code&gt; 절이 있을 수도 있습니다 . 예를 들어, 우리는 쓸 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d1ceb58da8f9e0acc269239b1ca496282d2ca66d" translate="yes" xml:space="preserve">
          <source>Data instances&amp;rsquo; kinds must end in &lt;code&gt;Type&lt;/code&gt;, however. This restriction is slightly relaxed when the &lt;a href=&quot;#extension-UnliftedNewtypes&quot;&gt;&lt;code&gt;UnliftedNewtypes&lt;/code&gt;&lt;/a&gt; extension is enabled, as it permits a &lt;code&gt;newtype instance&lt;/code&gt;&amp;rsquo;s kind to end in &lt;code&gt;TYPE r&lt;/code&gt; for some &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">그러나 데이터 인스턴스의 종류는 &lt;code&gt;Type&lt;/code&gt; 으로 끝나야합니다 . 이 제한은 &lt;a href=&quot;#extension-UnliftedNewtypes&quot;&gt; &lt;code&gt;UnliftedNewtypes&lt;/code&gt; &lt;/a&gt; 확장이 활성화 되면 약간 완화됩니다. 이는 &lt;code&gt;newtype instance&lt;/code&gt; 의 종류가 일부 &lt;code&gt;r&lt;/code&gt; 에 대해 &lt;code&gt;TYPE r&lt;/code&gt; 로 끝나는 것을 허용하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="4d73bd8314e309be92d4b988742621d331cd76c0" translate="yes" xml:space="preserve">
          <source>Data invariants.</source>
          <target state="translated">데이터 불변량.</target>
        </trans-unit>
        <trans-unit id="184bd4fb85e290373b19fd2b5378bb3959836f96" translate="yes" xml:space="preserve">
          <source>Data is available to be read.</source>
          <target state="translated">데이터를 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="629dbf374b91734a82f94cef74fa2d332a884cf4" translate="yes" xml:space="preserve">
          <source>Data pointers</source>
          <target state="translated">데이터 포인터</target>
        </trans-unit>
        <trans-unit id="01a0aabd9551fbbb38306d45990e136bb349e42b" translate="yes" xml:space="preserve">
          <source>Data structures that can be folded.</source>
          <target state="translated">접을 수있는 데이터 구조</target>
        </trans-unit>
        <trans-unit id="dab80543e6a6d7c74b61cce4b396915133dcc165" translate="yes" xml:space="preserve">
          <source>Data type and type-synonym declarations can be written infix, parenthesised if you want further arguments. E.g.</source>
          <target state="translated">데이터 유형 및 유형 동의어 선언은 추가 인수를 원하는 경우 괄호로 묶어 쓸 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="333e74b289f832e852fd79dbfc807c85709cbe52" translate="yes" xml:space="preserve">
          <source>Data type declarations merge only with other data type declarations which match exactly, except abstract data, which can merge with &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;newtype&lt;/code&gt; or &lt;code&gt;type&lt;/code&gt; declarations. Merges with type synonyms are especially useful: suppose you are using a package of strings which has left the type of characters in the string unspecified:</source>
          <target state="translated">데이터 유형 선언은 &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;newtype&lt;/code&gt; 또는 &lt;code&gt;type&lt;/code&gt; 선언 과 병합 할 수있는 추상 데이터를 제외하고 정확히 일치하는 다른 데이터 유형 선언과 만 병합됩니다 . 타입 동의어를 가진 병합은 특히 유용합니다 : 문자열의 문자 타입을 지정하지 않은 문자열 패키지를 사용한다고 가정 해보십시오.</target>
        </trans-unit>
        <trans-unit id="27c4787150e20cb1eb297c0a3cc25cc7b7a34245" translate="yes" xml:space="preserve">
          <source>Data type families may appear in an instance head</source>
          <target state="translated">데이터 유형 패밀리가 인스턴스 헤드에 나타날 수 있습니다</target>
        </trans-unit>
        <trans-unit id="efbf7b36d99406a480e215981887401f3cacdfb6" translate="yes" xml:space="preserve">
          <source>Data type invariant and abstraction function</source>
          <target state="translated">데이터 유형 불변 및 추상화 함수</target>
        </trans-unit>
        <trans-unit id="6cf641a8141deca7cf4452bad22be168de376b0f" translate="yes" xml:space="preserve">
          <source>Data type invariant and abstraction functions</source>
          <target state="translated">데이터 유형 불변 및 추상화 함수</target>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="translated">자료형</target>
        </trans-unit>
        <trans-unit id="d5a1974e9a64c18cd86b25b1448db438f154309b" translate="yes" xml:space="preserve">
          <source>Data types containing function types on the right-hand side cannot have derived &lt;code&gt;Foldable&lt;/code&gt; instances.</source>
          <target state="translated">오른쪽에 함수 유형이 포함 된 데이터 유형은 파생 된 &lt;code&gt;Foldable&lt;/code&gt; 인스턴스를 가질 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4bc3d4954862bf2c412451270fec2049805aa55e" translate="yes" xml:space="preserve">
          <source>Data.Array</source>
          <target state="translated">Data.Array</target>
        </trans-unit>
        <trans-unit id="bee5d9f750787b3d318e85cf9bc971b7742d6fdf" translate="yes" xml:space="preserve">
          <source>Data.Array.IArray</source>
          <target state="translated">Data.Array.IArray</target>
        </trans-unit>
        <trans-unit id="4d5c4ef5dab64822e3d0118a4a572ee14eab0e03" translate="yes" xml:space="preserve">
          <source>Data.Array.IO</source>
          <target state="translated">Data.Array.IO</target>
        </trans-unit>
        <trans-unit id="21ae62ef38eb2ba63923a16222a2176e32112b51" translate="yes" xml:space="preserve">
          <source>Data.Array.IO.Safe</source>
          <target state="translated">Data.Array.IO.Safe</target>
        </trans-unit>
        <trans-unit id="d97dc66ebcdf8a918a3f71bb969e8619813c2ab5" translate="yes" xml:space="preserve">
          <source>Data.Array.MArray</source>
          <target state="translated">Data.Array.MArray</target>
        </trans-unit>
        <trans-unit id="82788e687421c36e638fe77c767d1cd41b8dc594" translate="yes" xml:space="preserve">
          <source>Data.Array.MArray.Safe</source>
          <target state="translated">Data.Array.MArray.Safe</target>
        </trans-unit>
        <trans-unit id="f18f79809c497ec68fbe829d0bdf37a21cc45b12" translate="yes" xml:space="preserve">
          <source>Data.Array.ST</source>
          <target state="translated">Data.Array.ST</target>
        </trans-unit>
        <trans-unit id="36f81fdcccf569dde5896acf99a913ae1abc34a3" translate="yes" xml:space="preserve">
          <source>Data.Array.ST.Safe</source>
          <target state="translated">Data.Array.ST.Safe</target>
        </trans-unit>
        <trans-unit id="2d77b659cbeb34725b1e3bf75abd03ae412f7919" translate="yes" xml:space="preserve">
          <source>Data.Array.Storable</source>
          <target state="translated">Data.Array.Storable</target>
        </trans-unit>
        <trans-unit id="38ca930e49af0251b046583af5be4574ca37de61" translate="yes" xml:space="preserve">
          <source>Data.Array.Storable.Safe</source>
          <target state="translated">Data.Array.Storable.Safe</target>
        </trans-unit>
        <trans-unit id="e4aab66fed76a76e5047053392ce85b45725836a" translate="yes" xml:space="preserve">
          <source>Data.Array.Unboxed</source>
          <target state="translated">Data.Array.Unboxed</target>
        </trans-unit>
        <trans-unit id="573ae5dba8b4130d912fc6e1f10d446faa976a43" translate="yes" xml:space="preserve">
          <source>Data.Array.Unsafe</source>
          <target state="translated">Data.Array.Unsafe</target>
        </trans-unit>
        <trans-unit id="3552625f584daea90b340a72d4deafa10e756541" translate="yes" xml:space="preserve">
          <source>Data.Bifoldable</source>
          <target state="translated">Data.Bifoldable</target>
        </trans-unit>
        <trans-unit id="9684f80cefcea711a4a2075a18fe7b7eb3d4e089" translate="yes" xml:space="preserve">
          <source>Data.Bifunctor</source>
          <target state="translated">Data.Bifunctor</target>
        </trans-unit>
        <trans-unit id="46d53119c3c0c62b03d51e560f3dbf441a606dc7" translate="yes" xml:space="preserve">
          <source>Data.Binary</source>
          <target state="translated">Data.Binary</target>
        </trans-unit>
        <trans-unit id="6eb62e6037c40ab83b03289906dddf5b93c2c673" translate="yes" xml:space="preserve">
          <source>Data.Binary.Builder</source>
          <target state="translated">Data.Binary.Builder</target>
        </trans-unit>
        <trans-unit id="b7bccf58de0287b26fa9588c783b4c3c41851a34" translate="yes" xml:space="preserve">
          <source>Data.Binary.Get</source>
          <target state="translated">Data.Binary.Get</target>
        </trans-unit>
        <trans-unit id="9e0d1341783fc2e105cc27b1096953a2af171455" translate="yes" xml:space="preserve">
          <source>Data.Binary.Put</source>
          <target state="translated">Data.Binary.Put</target>
        </trans-unit>
        <trans-unit id="fc1c12cb6bea6360559f859f59e208d4f7a31bf4" translate="yes" xml:space="preserve">
          <source>Data.Bitraversable</source>
          <target state="translated">Data.Bitraversable</target>
        </trans-unit>
        <trans-unit id="5ef5425bcf409c2be6f48ed33886b4645fa25b40" translate="yes" xml:space="preserve">
          <source>Data.Bits</source>
          <target state="translated">Data.Bits</target>
        </trans-unit>
        <trans-unit id="298857f304cd7d0f5ee54ca2e7f9cee86f3c4ea5" translate="yes" xml:space="preserve">
          <source>Data.Bool</source>
          <target state="translated">Data.Bool</target>
        </trans-unit>
        <trans-unit id="c472eae259b22522267f151ab2d747d30add8a10" translate="yes" xml:space="preserve">
          <source>Data.ByteString</source>
          <target state="translated">Data.ByteString</target>
        </trans-unit>
        <trans-unit id="024f5e8d8cce11c68c7b4c5202cd71d3fa79f47e" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder</source>
          <target state="translated">Data.ByteString.Builder</target>
        </trans-unit>
        <trans-unit id="90d6ddd4c11bd442f873e01275266550a1b12028" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Extra</source>
          <target state="translated">Data.ByteString.Builder.Extra</target>
        </trans-unit>
        <trans-unit id="506e48c9c17ebe29bfac638dacb5bdaa5233e49a" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Internal</source>
          <target state="translated">Data.ByteString.Builder.Internal</target>
        </trans-unit>
        <trans-unit id="c1d80f9fb5e5714970a4be375e422b60815c7b6f" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Prim</source>
          <target state="translated">Data.ByteString.Builder.Prim</target>
        </trans-unit>
        <trans-unit id="c250145382b54c8e068cba2313e71442bbedf8f4" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Builder.Prim.Internal</source>
          <target state="translated">Data.ByteString.Builder.Prim.Internal</target>
        </trans-unit>
        <trans-unit id="405773c8d0e2f632da9d77e2ddd6841594072c6c" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Char8</source>
          <target state="translated">Data.ByteString.Char8</target>
        </trans-unit>
        <trans-unit id="ec762cc968825f2356e1b70bb0c5d4ae37cb638b" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Internal</source>
          <target state="translated">Data.ByteString.Internal</target>
        </trans-unit>
        <trans-unit id="9e5447404d2b616dcf7e5590f471e6e55658777f" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Lazy</source>
          <target state="translated">Data.ByteString.Lazy</target>
        </trans-unit>
        <trans-unit id="0e0d5af1a3b250337c4392e74b0786675f2ee0b0" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Lazy.Char8</source>
          <target state="translated">Data.ByteString.Lazy.Char8</target>
        </trans-unit>
        <trans-unit id="55cf836a35020a7464f72f44138df5ac4e6dc929" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Lazy.Internal</source>
          <target state="translated">Data.ByteString.Lazy.Internal</target>
        </trans-unit>
        <trans-unit id="acab9a28bffe96f307376ce637156f1b43fa76bd" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Short</source>
          <target state="translated">Data.ByteString.Short</target>
        </trans-unit>
        <trans-unit id="ad0190f5dec81307bc7127337883c871cf4c6b20" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Short.Internal</source>
          <target state="translated">Data.ByteString.Short.Internal</target>
        </trans-unit>
        <trans-unit id="000a6502b9fd80c6a70be2f13de887b1165e0fcf" translate="yes" xml:space="preserve">
          <source>Data.ByteString.Unsafe</source>
          <target state="translated">Data.ByteString.Unsafe</target>
        </trans-unit>
        <trans-unit id="cc96e6111519a4d93622c2178bb458d25298c1ec" translate="yes" xml:space="preserve">
          <source>Data.Char</source>
          <target state="translated">Data.Char</target>
        </trans-unit>
        <trans-unit id="5d4fec7c3207c1b5ebd33d24daba00fd109344f9" translate="yes" xml:space="preserve">
          <source>Data.Coerce</source>
          <target state="translated">Data.Coerce</target>
        </trans-unit>
        <trans-unit id="43677d43ef777cc263ba8826aa3f14427891cea6" translate="yes" xml:space="preserve">
          <source>Data.Complex</source>
          <target state="translated">Data.Complex</target>
        </trans-unit>
        <trans-unit id="7df406919b12a65d451a90be47ab75fd9dfebfd6" translate="yes" xml:space="preserve">
          <source>Data.Containers</source>
          <target state="translated">Data.Containers</target>
        </trans-unit>
        <trans-unit id="40c624194fa6646f722be97a27d1f0ad14b350ef" translate="yes" xml:space="preserve">
          <source>Data.Containers.ListUtils</source>
          <target state="translated">Data.Containers.ListUtils</target>
        </trans-unit>
        <trans-unit id="ee1c2de1d4d5f0f37dc8472ca928ecb67fb994b5" translate="yes" xml:space="preserve">
          <source>Data.Data</source>
          <target state="translated">Data.Data</target>
        </trans-unit>
        <trans-unit id="45cf0f6c9667741ce52f8a95a75c183b5ba5b2e5" translate="yes" xml:space="preserve">
          <source>Data.Dynamic</source>
          <target state="translated">Data.Dynamic</target>
        </trans-unit>
        <trans-unit id="708f24822d07214f8498deebf3c19aee3e457cc4" translate="yes" xml:space="preserve">
          <source>Data.Either</source>
          <target state="translated">Data.Either</target>
        </trans-unit>
        <trans-unit id="c9600e25bf2274bbf41cfac2fa1b0f857759a11f" translate="yes" xml:space="preserve">
          <source>Data.Eq</source>
          <target state="translated">Data.Eq</target>
        </trans-unit>
        <trans-unit id="ef2ee7b45da29b72e7026993c0d4cd636aed8f12" translate="yes" xml:space="preserve">
          <source>Data.Fixed</source>
          <target state="translated">Data.Fixed</target>
        </trans-unit>
        <trans-unit id="d5be1a1fc0528b81b37b527d91a16ea933bc9dda" translate="yes" xml:space="preserve">
          <source>Data.Foldable</source>
          <target state="translated">Data.Foldable</target>
        </trans-unit>
        <trans-unit id="13666412d3fcd318acf61389534035ded46af002" translate="yes" xml:space="preserve">
          <source>Data.Function</source>
          <target state="translated">Data.Function</target>
        </trans-unit>
        <trans-unit id="c28ad4c5940fa577706318fa97f22e82478aaa39" translate="yes" xml:space="preserve">
          <source>Data.Functor</source>
          <target state="translated">Data.Functor</target>
        </trans-unit>
        <trans-unit id="2d4a5d6b55fe6448a8539d8c23b8022d13b86083" translate="yes" xml:space="preserve">
          <source>Data.Functor.Classes</source>
          <target state="translated">Data.Functor.Classes</target>
        </trans-unit>
        <trans-unit id="b66a52d4cfdfaf5e32c3da6992c85b6b57477ed9" translate="yes" xml:space="preserve">
          <source>Data.Functor.Compose</source>
          <target state="translated">Data.Functor.Compose</target>
        </trans-unit>
        <trans-unit id="0d3859d34ba438e61c3275ead1746d71f809c4bb" translate="yes" xml:space="preserve">
          <source>Data.Functor.Const</source>
          <target state="translated">Data.Functor.Const</target>
        </trans-unit>
        <trans-unit id="f77a4ebad37e5a4768ee5c12919f41be9529e1c3" translate="yes" xml:space="preserve">
          <source>Data.Functor.Constant</source>
          <target state="translated">Data.Functor.Constant</target>
        </trans-unit>
        <trans-unit id="3ea98150364eff9aa1e383bb890a68b327d42386" translate="yes" xml:space="preserve">
          <source>Data.Functor.Contravariant</source>
          <target state="translated">Data.Functor.Contravariant</target>
        </trans-unit>
        <trans-unit id="c11e36cb63e2266794149d8913544ecc7cfe1eaa" translate="yes" xml:space="preserve">
          <source>Data.Functor.Identity</source>
          <target state="translated">Data.Functor.Identity</target>
        </trans-unit>
        <trans-unit id="b9e8b4f4735f9d366522a10a1ad0b8edfcb51c6c" translate="yes" xml:space="preserve">
          <source>Data.Functor.Product</source>
          <target state="translated">Data.Functor.Product</target>
        </trans-unit>
        <trans-unit id="22a7e681dbe2b89a9f207a7f392953815a5b6b71" translate="yes" xml:space="preserve">
          <source>Data.Functor.Reverse</source>
          <target state="translated">Data.Functor.Reverse</target>
        </trans-unit>
        <trans-unit id="24d48aed5a6b8968affcef204128d6fe77df99b8" translate="yes" xml:space="preserve">
          <source>Data.Functor.Sum</source>
          <target state="translated">Data.Functor.Sum</target>
        </trans-unit>
        <trans-unit id="ae2de86b26ed1a5a281e192b7a6d6f4566456e46" translate="yes" xml:space="preserve">
          <source>Data.Graph</source>
          <target state="translated">Data.Graph</target>
        </trans-unit>
        <trans-unit id="58576fa80efe80ba447bf569f5ee4abbb4991472" translate="yes" xml:space="preserve">
          <source>Data.IORef</source>
          <target state="translated">Data.IORef</target>
        </trans-unit>
        <trans-unit id="51b11d78b3690d0f2348b41a7a3fcf50bd3fe80c" translate="yes" xml:space="preserve">
          <source>Data.Int</source>
          <target state="translated">Data.Int</target>
        </trans-unit>
        <trans-unit id="1afa6238853359f855a03aa86f8f1220d32cc840" translate="yes" xml:space="preserve">
          <source>Data.IntMap</source>
          <target state="translated">Data.IntMap</target>
        </trans-unit>
        <trans-unit id="48ae7f80cc4515b564e354b99a14f71094013dc3" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Internal.Debug</source>
          <target state="translated">Data.IntMap.Internal.Debug</target>
        </trans-unit>
        <trans-unit id="48a940e83146d28f21189f0ca2b9f5398bd9de1f" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Lazy</source>
          <target state="translated">Data.IntMap.Lazy</target>
        </trans-unit>
        <trans-unit id="a195d8f5f90f40a58cb73a106a2206015d03a1e2" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Merge.Lazy</source>
          <target state="translated">Data.IntMap.Merge.Lazy</target>
        </trans-unit>
        <trans-unit id="67a0c0ef42130fa3cede0f3bdb2882d3e20347e1" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Merge.Strict</source>
          <target state="translated">Data.IntMap.Merge.Strict</target>
        </trans-unit>
        <trans-unit id="8b72265ff11e3c9a3acebc01c8c1b225550d9370" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Strict</source>
          <target state="translated">Data.IntMap.Strict</target>
        </trans-unit>
        <trans-unit id="1160abff8cd26174fad50e33ec8df62898f1ac7a" translate="yes" xml:space="preserve">
          <source>Data.IntMap.Strict.Internal</source>
          <target state="translated">Data.IntMap.Strict.Internal</target>
        </trans-unit>
        <trans-unit id="49c2242ccb6b382e1c991dfb7be02f822119a1d3" translate="yes" xml:space="preserve">
          <source>Data.IntSet</source>
          <target state="translated">Data.IntSet</target>
        </trans-unit>
        <trans-unit id="3ecb3e09acf51a4b96bef9bddf477e62fcb34998" translate="yes" xml:space="preserve">
          <source>Data.IntSet.Internal</source>
          <target state="translated">Data.IntSet.Internal</target>
        </trans-unit>
        <trans-unit id="20fe47f4ebf5a711585d68901cc4d59be061a59b" translate="yes" xml:space="preserve">
          <source>Data.Ix</source>
          <target state="translated">Data.Ix</target>
        </trans-unit>
        <trans-unit id="35631afd37b0d9a71650f462390cf9c52a2fb800" translate="yes" xml:space="preserve">
          <source>Data.Kind</source>
          <target state="translated">Data.Kind</target>
        </trans-unit>
        <trans-unit id="9cd22834576e4b32a7dd0a281c6488e80a2a228f" translate="yes" xml:space="preserve">
          <source>Data.List</source>
          <target state="translated">Data.List</target>
        </trans-unit>
        <trans-unit id="d2a3e0b9ec43f7ae3d145ae0bf6cbf4d98a05260" translate="yes" xml:space="preserve">
          <source>Data.List.NonEmpty</source>
          <target state="translated">Data.List.NonEmpty</target>
        </trans-unit>
        <trans-unit id="03476e613c284afc475ef4d17902902504b59d26" translate="yes" xml:space="preserve">
          <source>Data.Map</source>
          <target state="translated">Data.Map</target>
        </trans-unit>
        <trans-unit id="c4a4f8e612bf51fc6c8dec9c042af0835a3b6aa3" translate="yes" xml:space="preserve">
          <source>Data.Map.Internal.Debug</source>
          <target state="translated">Data.Map.Internal.Debug</target>
        </trans-unit>
        <trans-unit id="888ae6329f30ba87c0b41c776d93a2250fe7e44d" translate="yes" xml:space="preserve">
          <source>Data.Map.Lazy</source>
          <target state="translated">Data.Map.Lazy</target>
        </trans-unit>
        <trans-unit id="b5a8cd88458e43d151013b5e85392826f3033be9" translate="yes" xml:space="preserve">
          <source>Data.Map.Merge.Lazy</source>
          <target state="translated">Data.Map.Merge.Lazy</target>
        </trans-unit>
        <trans-unit id="8c9f78f60ba6aedd012a94bec54818740b8e9599" translate="yes" xml:space="preserve">
          <source>Data.Map.Merge.Strict</source>
          <target state="translated">Data.Map.Merge.Strict</target>
        </trans-unit>
        <trans-unit id="1bb8aa0d89b279f861b4a854f3592bad99cbb641" translate="yes" xml:space="preserve">
          <source>Data.Map.Strict</source>
          <target state="translated">Data.Map.Strict</target>
        </trans-unit>
        <trans-unit id="c1fe18bf895171b309e477a91208ef6f3f67889f" translate="yes" xml:space="preserve">
          <source>Data.Maybe</source>
          <target state="translated">Data.Maybe</target>
        </trans-unit>
        <trans-unit id="fce6fd94b4247eb2c36c1ffba6b5284d803cfd26" translate="yes" xml:space="preserve">
          <source>Data.Monoid</source>
          <target state="translated">Data.Monoid</target>
        </trans-unit>
        <trans-unit id="22ae1d34196d6ad5432d8fcc9e7eb7aa7ea23b95" translate="yes" xml:space="preserve">
          <source>Data.Ord</source>
          <target state="translated">Data.Ord</target>
        </trans-unit>
        <trans-unit id="9c9cd8f75b2f463113162c7474cd271854c7682a" translate="yes" xml:space="preserve">
          <source>Data.Proxy</source>
          <target state="translated">Data.Proxy</target>
        </trans-unit>
        <trans-unit id="cd4e2a0166d519235a7cc6a511449be2f200f36d" translate="yes" xml:space="preserve">
          <source>Data.Ratio</source>
          <target state="translated">Data.Ratio</target>
        </trans-unit>
        <trans-unit id="c99bf00ca1bde29e2a455e53791e1ff44089911d" translate="yes" xml:space="preserve">
          <source>Data.STRef</source>
          <target state="translated">Data.STRef</target>
        </trans-unit>
        <trans-unit id="1f138c4a9a89b7f2fecd58b9f1ccf8428d3fea81" translate="yes" xml:space="preserve">
          <source>Data.STRef.Lazy</source>
          <target state="translated">Data.STRef.Lazy</target>
        </trans-unit>
        <trans-unit id="62c972d9835f8f7a5f14d6487ca0baa0c2609bfa" translate="yes" xml:space="preserve">
          <source>Data.Semigroup</source>
          <target state="translated">Data.Semigroup</target>
        </trans-unit>
        <trans-unit id="986a1277bf50f66381c93704ea27a869c15c5534" translate="yes" xml:space="preserve">
          <source>Data.Sequence</source>
          <target state="translated">Data.Sequence</target>
        </trans-unit>
        <trans-unit id="b87972fdbd3905f8b2b55bcc5a1732d99bedd483" translate="yes" xml:space="preserve">
          <source>Data.Sequence.Internal.Sorting</source>
          <target state="translated">Data.Sequence.Internal.Sorting</target>
        </trans-unit>
        <trans-unit id="672899ec0cfbd08c182d60604060320977e724e0" translate="yes" xml:space="preserve">
          <source>Data.Set</source>
          <target state="translated">Data.Set</target>
        </trans-unit>
        <trans-unit id="774076d6244c129340d5a391f383bad5cfa5a5cf" translate="yes" xml:space="preserve">
          <source>Data.String</source>
          <target state="translated">Data.String</target>
        </trans-unit>
        <trans-unit id="847d28cde4ab61b4f418fee10ba971ef299b41b3" translate="yes" xml:space="preserve">
          <source>Data.Text</source>
          <target state="translated">Data.Text</target>
        </trans-unit>
        <trans-unit id="4099c4f8337ed608a00347b0277bc698efd68142" translate="yes" xml:space="preserve">
          <source>Data.Text.Array</source>
          <target state="translated">Data.Text.Array</target>
        </trans-unit>
        <trans-unit id="7a849ec34d2c27cebb9639a9c1cb7d307f8b9543" translate="yes" xml:space="preserve">
          <source>Data.Text.Encoding</source>
          <target state="translated">Data.Text.Encoding</target>
        </trans-unit>
        <trans-unit id="a3af7e15bb515e50bbb403da137fd7be3d0ab0af" translate="yes" xml:space="preserve">
          <source>Data.Text.Encoding.Error</source>
          <target state="translated">Data.Text.Encoding.Error</target>
        </trans-unit>
        <trans-unit id="509f7a5abfaa64a8782c80dcf8d4d86768ef7044" translate="yes" xml:space="preserve">
          <source>Data.Text.Foreign</source>
          <target state="translated">Data.Text.Foreign</target>
        </trans-unit>
        <trans-unit id="c974fa7d87bc54f56e237014f55c78662ee92b0d" translate="yes" xml:space="preserve">
          <source>Data.Text.IO</source>
          <target state="translated">Data.Text.IO</target>
        </trans-unit>
        <trans-unit id="a79e7e4a42181407db2ddcfd16d13804b8e65f1a" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal</source>
          <target state="translated">Data.Text.Internal</target>
        </trans-unit>
        <trans-unit id="9f0840b1944447eaf847ad441bcb9c3a491d6b51" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Builder</source>
          <target state="translated">Data.Text.Internal.Builder</target>
        </trans-unit>
        <trans-unit id="39d127e380c08a13d49f061a06491d7c3894db01" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Builder.Functions</source>
          <target state="translated">Data.Text.Internal.Builder.Functions</target>
        </trans-unit>
        <trans-unit id="7344d52e37600be1d18ecacfd47a126c164b291f" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Encoding.Fusion</source>
          <target state="translated">Data.Text.Internal.Encoding.Fusion</target>
        </trans-unit>
        <trans-unit id="d4d057665af5d6dae24012fe480eab9e91d528ad" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Encoding.Fusion.Common</source>
          <target state="translated">Data.Text.Internal.Encoding.Fusion.Common</target>
        </trans-unit>
        <trans-unit id="0ce286b0635c1db825417c282ca5fc75732c42e3" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Encoding.Utf8</source>
          <target state="translated">Data.Text.Internal.Encoding.Utf8</target>
        </trans-unit>
        <trans-unit id="d9e64b5fb42b54bfaa1a2017be180bad9241fc87" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Functions</source>
          <target state="translated">Data.Text.Internal.Functions</target>
        </trans-unit>
        <trans-unit id="b2630e02b5e8a4f824a50fe963ffae06e0dee978" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion</source>
          <target state="translated">Data.Text.Internal.Fusion</target>
        </trans-unit>
        <trans-unit id="bfe2e021dda13724bc59e73773e02abe0b40774c" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion.Common</source>
          <target state="translated">Data.Text.Internal.Fusion.Common</target>
        </trans-unit>
        <trans-unit id="6e0e5c3a5acaf18f744f57a10a920e6b89a5fa35" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion.Size</source>
          <target state="translated">Data.Text.Internal.Fusion.Size</target>
        </trans-unit>
        <trans-unit id="12d6c8e0598600cc8b8b2da2f853c6111cccbec6" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Fusion.Types</source>
          <target state="translated">Data.Text.Internal.Fusion.Types</target>
        </trans-unit>
        <trans-unit id="59aa3b952692c6ca1d4861e1dd7ee65c21da47aa" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.IO</source>
          <target state="translated">Data.Text.Internal.IO</target>
        </trans-unit>
        <trans-unit id="0693be465822a23a7fd169b4a7bba5fec71cdc54" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy</source>
          <target state="translated">Data.Text.Internal.Lazy</target>
        </trans-unit>
        <trans-unit id="8f2f10e531db5620e833af23baebadf6f7e235f5" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy.Encoding.Fusion</source>
          <target state="translated">Data.Text.Internal.Lazy.Encoding.Fusion</target>
        </trans-unit>
        <trans-unit id="e6d69613335c059cfa52979a4da59c65f9b0612f" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy.Fusion</source>
          <target state="translated">Data.Text.Internal.Lazy.Fusion</target>
        </trans-unit>
        <trans-unit id="0e80511de3354ad078189f805ccca84e00f64eb4" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Lazy.Search</source>
          <target state="translated">Data.Text.Internal.Lazy.Search</target>
        </trans-unit>
        <trans-unit id="440e33d38198789029386db59082f5d118acdf2d" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Search</source>
          <target state="translated">Data.Text.Internal.Search</target>
        </trans-unit>
        <trans-unit id="9ac45467daf788711b1476473edf26a6f1d10523" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Unsafe</source>
          <target state="translated">Data.Text.Internal.Unsafe</target>
        </trans-unit>
        <trans-unit id="2464d278d9d017a92d8afcd30d874a06f8273ac2" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Unsafe.Char</source>
          <target state="translated">Data.Text.Internal.Unsafe.Char</target>
        </trans-unit>
        <trans-unit id="765854835a43ef937c1224afdf86f76f7235fd4e" translate="yes" xml:space="preserve">
          <source>Data.Text.Internal.Unsafe.Shift</source>
          <target state="translated">Data.Text.Internal.Unsafe.Shift</target>
        </trans-unit>
        <trans-unit id="d24e8b98b80ec2f97da936c68887eee0def6378e" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy</source>
          <target state="translated">Data.Text.Lazy</target>
        </trans-unit>
        <trans-unit id="a65465172b5a3004f60a8162fe5f83a8de99de21" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Builder</source>
          <target state="translated">Data.Text.Lazy.Builder</target>
        </trans-unit>
        <trans-unit id="afb5bf055639a290d7184b06fda1d5234e5ef49d" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Builder.RealFloat</source>
          <target state="translated">Data.Text.Lazy.Builder.RealFloat</target>
        </trans-unit>
        <trans-unit id="ea9f49200e0b67b32160fdee943300c992efab34" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Encoding</source>
          <target state="translated">Data.Text.Lazy.Encoding</target>
        </trans-unit>
        <trans-unit id="b1b87f215d96badd370355fb77725e4295bd3594" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.IO</source>
          <target state="translated">Data.Text.Lazy.IO</target>
        </trans-unit>
        <trans-unit id="11339c303f7391a637e80f65f76189bb788df960" translate="yes" xml:space="preserve">
          <source>Data.Text.Lazy.Read</source>
          <target state="translated">Data.Text.Lazy.Read</target>
        </trans-unit>
        <trans-unit id="304ab08f08e5d2151ca300e1066f8cec35ac2b5d" translate="yes" xml:space="preserve">
          <source>Data.Text.Read</source>
          <target state="translated">Data.Text.Read</target>
        </trans-unit>
        <trans-unit id="8868a842b728efc631e15d13ff503e927105d23c" translate="yes" xml:space="preserve">
          <source>Data.Text.Unsafe</source>
          <target state="translated">Data.Text.Unsafe</target>
        </trans-unit>
        <trans-unit id="6c6f4372e5801d30261bf4eb788c2bcb8a57039a" translate="yes" xml:space="preserve">
          <source>Data.Time</source>
          <target state="translated">Data.Time</target>
        </trans-unit>
        <trans-unit id="923126a09f2a0571bc6a61e06351e036a1850ed0" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar</source>
          <target state="translated">Data.Time.Calendar</target>
        </trans-unit>
        <trans-unit id="9c5d0d1e08aaa36ac655d6f320106f6b5a920b7d" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.Easter</source>
          <target state="translated">Data.Time.Calendar.Easter</target>
        </trans-unit>
        <trans-unit id="0782c6e9b3b972e6826ad4765e8e6401ee5204ce" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.Julian</source>
          <target state="translated">Data.Time.Calendar.Julian</target>
        </trans-unit>
        <trans-unit id="f5855b0afd183e1f76e4fa8dc0ae4f5590e111b6" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.MonthDay</source>
          <target state="translated">Data.Time.Calendar.MonthDay</target>
        </trans-unit>
        <trans-unit id="4b93bc06f1111b17c0df722a22c2f74e8a967471" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.OrdinalDate</source>
          <target state="translated">Data.Time.Calendar.OrdinalDate</target>
        </trans-unit>
        <trans-unit id="b0d0540fffea713588585d43248fb266e265df79" translate="yes" xml:space="preserve">
          <source>Data.Time.Calendar.WeekDate</source>
          <target state="translated">Data.Time.Calendar.WeekDate</target>
        </trans-unit>
        <trans-unit id="0a209cd33d0eb1b5e1b18ba32c03b6f12809fa9a" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock</source>
          <target state="translated">Data.Time.Clock</target>
        </trans-unit>
        <trans-unit id="aef55f2ba38c5c167b46f0590f4c21819ca853fa" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock.POSIX</source>
          <target state="translated">Data.Time.Clock.POSIX</target>
        </trans-unit>
        <trans-unit id="56a69add46d55d43dbfe19d1737c61edb5a0e82d" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock.System</source>
          <target state="translated">Data.Time.Clock.System</target>
        </trans-unit>
        <trans-unit id="ec6616bf379743186bfbcbb8939de44c4955e867" translate="yes" xml:space="preserve">
          <source>Data.Time.Clock.TAI</source>
          <target state="translated">Data.Time.Clock.TAI</target>
        </trans-unit>
        <trans-unit id="0d452005eb89df49d4351b291218a7fd522e164f" translate="yes" xml:space="preserve">
          <source>Data.Time.Format</source>
          <target state="translated">Data.Time.Format</target>
        </trans-unit>
        <trans-unit id="a9c00e7b58f5f5c7130bbb9c4b067c15e1d6e155" translate="yes" xml:space="preserve">
          <source>Data.Time.Format.ISO8601</source>
          <target state="translated">Data.Time.Format.ISO8601</target>
        </trans-unit>
        <trans-unit id="306f55efa1f29ef26853c30b9a4dbe9d7ba59f30" translate="yes" xml:space="preserve">
          <source>Data.Time.Format.Internal</source>
          <target state="translated">Data.Time.Format.Internal</target>
        </trans-unit>
        <trans-unit id="0094f22c006ca05ef33052417272af5bf6cfe7e6" translate="yes" xml:space="preserve">
          <source>Data.Time.LocalTime</source>
          <target state="translated">Data.Time.LocalTime</target>
        </trans-unit>
        <trans-unit id="a67d0e0359c684636f5ded41811f4295da03562f" translate="yes" xml:space="preserve">
          <source>Data.Traversable</source>
          <target state="translated">Data.Traversable</target>
        </trans-unit>
        <trans-unit id="8c3691679b058acc254d89b8f4afd2bd92b625b0" translate="yes" xml:space="preserve">
          <source>Data.Tree</source>
          <target state="translated">Data.Tree</target>
        </trans-unit>
        <trans-unit id="767687156757127ab7eb7503bc1ae0366e642975" translate="yes" xml:space="preserve">
          <source>Data.Tuple</source>
          <target state="translated">Data.Tuple</target>
        </trans-unit>
        <trans-unit id="bf562d2274a62b6e2ecc4440422faa50b1808566" translate="yes" xml:space="preserve">
          <source>Data.Type</source>
          <target state="translated">Data.Type</target>
        </trans-unit>
        <trans-unit id="0ac23f287c17a76bb00a4b0072bb22c17967ae04" translate="yes" xml:space="preserve">
          <source>Data.Type.Bool</source>
          <target state="translated">Data.Type.Bool</target>
        </trans-unit>
        <trans-unit id="1059d55032cf9e95e331b01219bd46940d62ffcd" translate="yes" xml:space="preserve">
          <source>Data.Type.Coercion</source>
          <target state="translated">Data.Type.Coercion</target>
        </trans-unit>
        <trans-unit id="da60015c97167838b1c65433f9dd6287216811f3" translate="yes" xml:space="preserve">
          <source>Data.Type.Equality</source>
          <target state="translated">Data.Type.Equality</target>
        </trans-unit>
        <trans-unit id="1b584534307f5bc3f46e376c7b07fa093da43ab9" translate="yes" xml:space="preserve">
          <source>Data.Typeable</source>
          <target state="translated">Data.Typeable</target>
        </trans-unit>
        <trans-unit id="c96d23b53d27949726652cced347a5348cd21337" translate="yes" xml:space="preserve">
          <source>Data.Unique</source>
          <target state="translated">Data.Unique</target>
        </trans-unit>
        <trans-unit id="b533a686e99bd0ccd217afc0e935d262f6a6e063" translate="yes" xml:space="preserve">
          <source>Data.Version</source>
          <target state="translated">Data.Version</target>
        </trans-unit>
        <trans-unit id="c987e30db04b09de9a86debfc90edf1ff494144d" translate="yes" xml:space="preserve">
          <source>Data.Void</source>
          <target state="translated">Data.Void</target>
        </trans-unit>
        <trans-unit id="6164e1522c57933328e7cbb34a007fc86bb53a6a" translate="yes" xml:space="preserve">
          <source>Data.Word</source>
          <target state="translated">Data.Word</target>
        </trans-unit>
        <trans-unit id="95536639a205a98ec9816b2c4e4f787edcd826e4" translate="yes" xml:space="preserve">
          <source>DataKinds</source>
          <target state="translated">DataKinds</target>
        </trans-unit>
        <trans-unit id="ffbf41eaf1aa34b1dd0d4d4dda8572a1076504be" translate="yes" xml:space="preserve">
          <source>DataName</source>
          <target state="translated">DataName</target>
        </trans-unit>
        <trans-unit id="2c3add59d0d35b73bed86b869cb8c2d605373cd5" translate="yes" xml:space="preserve">
          <source>DataRep</source>
          <target state="translated">DataRep</target>
        </trans-unit>
        <trans-unit id="1a6ef663b216f0691196f62dda764be8e921ace2" translate="yes" xml:space="preserve">
          <source>DataType</source>
          <target state="translated">DataType</target>
        </trans-unit>
        <trans-unit id="2b3b2437f86ea4a0a8830ee6f8676cb1c3fc7da2" translate="yes" xml:space="preserve">
          <source>Datatype</source>
          <target state="translated">Datatype</target>
        </trans-unit>
        <trans-unit id="4fa0fb2691d1a58255adf01f703d7bd54f3e484b" translate="yes" xml:space="preserve">
          <source>Datatype representations</source>
          <target state="translated">데이터 타입 표현</target>
        </trans-unit>
        <trans-unit id="699d14189de27ba0d0eeeabaa01ed471687ef576" translate="yes" xml:space="preserve">
          <source>Datatype to represent metadata associated with a datatype (&lt;code&gt;MetaData&lt;/code&gt;), constructor (&lt;code&gt;MetaCons&lt;/code&gt;), or field selector (&lt;code&gt;MetaSel&lt;/code&gt;).</source>
          <target state="translated">데이터 유형 ( &lt;code&gt;MetaData&lt;/code&gt; ), 생성자 ( &lt;code&gt;MetaCons&lt;/code&gt; ) 또는 필드 선택기 ( &lt;code&gt;MetaSel&lt;/code&gt; ) 와 연관된 메타 데이터를 나타내는 데이터 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="27d90a3c6507660dab591ce35a5d27da2c7f2a7c" translate="yes" xml:space="preserve">
          <source>Datatype to represent the associativity of a constructor</source>
          <target state="translated">생성자의 연관성을 나타내는 데이터 유형</target>
        </trans-unit>
        <trans-unit id="572b97df580980ab5b4e2d3eb883a6b9ed654512" translate="yes" xml:space="preserve">
          <source>Datatype to represent the fixity of a constructor. An infix | declaration directly corresponds to an application of &lt;code&gt;&lt;a href=&quot;ghc-generics#v:Infix&quot;&gt;Infix&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">생성자의 고 정성을 나타내는 데이터 유형입니다. 접두사 | 선언은 &lt;code&gt;&lt;a href=&quot;ghc-generics#v:Infix&quot;&gt;Infix&lt;/a&gt;&lt;/code&gt; 의 응용 프로그램과 직접 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="9a8aab1b1b5777d2d541226463500735932cac36" translate="yes" xml:space="preserve">
          <source>Datatype-generic functions are based on the idea of converting values of a datatype &lt;code&gt;T&lt;/code&gt; into corresponding values of a (nearly) isomorphic type &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt;. The type &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt; is built from a limited set of type constructors, all provided by this module. A datatype-generic function is then an overloaded function with instances for most of these type constructors, together with a wrapper that performs the mapping between &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt;. By using this technique, we merely need a few generic instances in order to implement functionality that works for any representable type.</source>
          <target state="translated">데이터 유형-일반 함수는 데이터 유형 &lt;code&gt;T&lt;/code&gt; 의 값을 (거의) 동형 유형 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt; 의 해당 값으로 변환한다는 아이디어를 기반으로합니다 . 형식 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt; 는이 모듈에서 제공하는 제한된 형식 생성자 집합으로 작성됩니다. 데이터 유형 일반 함수는 이러한 유형 생성자 대부분에 대한 인스턴스와 함께 &lt;code&gt;T&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt; T&lt;/code&gt; 간의 맵핑을 수행하는 랩퍼와 함께 오버로드 된 함수입니다 . 이 기술을 사용하면 표현 가능한 모든 유형에 적합한 기능을 구현하기 위해 몇 가지 일반적인 인스턴스 만 있으면됩니다.</target>
        </trans-unit>
        <trans-unit id="bb77218a8857a982e558b444d6b4d65e0cf85a57" translate="yes" xml:space="preserve">
          <source>Datatype-generic functions as defined above work for a large class of datatypes, including parameterized datatypes. (We have used &lt;code&gt;Tree&lt;/code&gt; as our example above, which is of kind &lt;code&gt;* -&amp;gt; *&lt;/code&gt;.) However, the &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; class ranges over types of kind &lt;code&gt;*&lt;/code&gt;, and therefore, the resulting generic functions (such as &lt;code&gt;encode&lt;/code&gt;) must be parameterized by a generic type argument of kind &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">위에서 정의한 데이터 유형 일반 함수는 매개 변수화 된 데이터 유형을 포함하여 대규모 데이터 유형 클래스에 적용됩니다. ( 위의 예제로 &lt;code&gt;Tree&lt;/code&gt; 를 사용했습니다 . &lt;code&gt;* -&amp;gt; *&lt;/code&gt; 종류 입니다.) 그러나 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; 클래스는 kind &lt;code&gt;*&lt;/code&gt; 유형의 범위를 가지 므로 결과 generic 함수 (예 : &lt;code&gt;encode&lt;/code&gt; )는 generic으로 매개 변수화해야합니다. 종류의 &lt;code&gt;*&lt;/code&gt; 인수 .</target>
        </trans-unit>
        <trans-unit id="adcf5d9d197ad90994813bcb90a5bf86799fc9ff" translate="yes" xml:space="preserve">
          <source>DatatypeContexts</source>
          <target state="translated">DatatypeContexts</target>
        </trans-unit>
        <trans-unit id="d413b9db5a2dc082055072d1b7cf2b88756577f3" translate="yes" xml:space="preserve">
          <source>Datatypes and file-access routines for the per-module (&lt;code&gt;.mix&lt;/code&gt;) indexes used by Hpc.</source>
          <target state="translated">Hpc에서 사용하는 모듈 별 ( &lt;code&gt;.mix&lt;/code&gt; ) 인덱스의 데이터 유형 및 파일 액세스 루틴 .</target>
        </trans-unit>
        <trans-unit id="3c072700a3f1548f917d63855bbc815672d16229" translate="yes" xml:space="preserve">
          <source>Datatypes and file-access routines for the tick data file (&lt;code&gt;.tix&lt;/code&gt;) used by Hpc.</source>
          <target state="translated">Hpc에서 사용 하는 틱 데이터 파일 ( &lt;code&gt;.tix&lt;/code&gt; )의 데이터 유형 및 파일 액세스 루틴 .</target>
        </trans-unit>
        <trans-unit id="3b834d9ae68afa4ef80c2b03c33f406fa9b9be44" translate="yes" xml:space="preserve">
          <source>David Terei &amp;lt;code@davidterei.com&amp;gt;</source>
          <target state="translated">데이비드 테레이 &amp;lt;code@davidterei.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="987b9ced08d4ac5d11d286ca4b54b99a4f69164b" translate="yes" xml:space="preserve">
          <source>Day</source>
          <target state="translated">Day</target>
        </trans-unit>
        <trans-unit id="7869c8a187f8a64feeb6d5c9e8bffead21dea3f9" translate="yes" xml:space="preserve">
          <source>Day of week Sunday is 0, Saturday is 6 (as &lt;code&gt;%w&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">주 일요일 날은 토요일 (로 6이며, 0 &lt;code&gt;%w&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e5e860105ed619698339402948e52cd99633c077" translate="yes" xml:space="preserve">
          <source>Day of week. Monday is 1, Sunday is 7 (as &lt;code&gt;%u&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">요일. 월요일 일요일 (로 7, 1 &lt;code&gt;%u&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="112dd8ca9e3e34b2066901c4ed02caede3e418b8" translate="yes" xml:space="preserve">
          <source>Day of week. Sunday is 0, Saturday is 6 (as &lt;code&gt;%w&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">요일. 일요일 토요일 (로 6이며, 0 &lt;code&gt;%w&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="53867761f2a54c550e24e76921e71bbd5607b5ce" translate="yes" xml:space="preserve">
          <source>DayOfWeek</source>
          <target state="translated">DayOfWeek</target>
        </trans-unit>
        <trans-unit id="f6bb0f468a8569c67b3d6826e57e62c5500c3681" translate="yes" xml:space="preserve">
          <source>Days</source>
          <target state="translated">Days</target>
        </trans-unit>
        <trans-unit id="d4368efccc9912ac8bdfe7594bbfc70ae912d34c" translate="yes" xml:space="preserve">
          <source>Deadlock</source>
          <target state="translated">Deadlock</target>
        </trans-unit>
        <trans-unit id="a04bb2764f0dcc01b3be04af8d5e4d8bcf4ffcd2" translate="yes" xml:space="preserve">
          <source>Deallocate a memory pool and everything which has been allocated in the pool itself.</source>
          <target state="translated">메모리 풀과 풀 자체에 할당 된 모든 것을 할당 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="b42ee0b08474e53dfd97bc0aca230c78cc91c15e" translate="yes" xml:space="preserve">
          <source>Debug information entities (DIEs) describing all of the basic blocks in the compiled program.</source>
          <target state="translated">컴파일 된 프로그램의 모든 기본 블록을 설명하는 디버그 정보 엔터티 (DIE).</target>
        </trans-unit>
        <trans-unit id="c5bf60a2984d1fefa036d6ec6d2dd30082aab3a7" translate="yes" xml:space="preserve">
          <source>Debug messages will be sent to the binary event log file instead of stdout if the &lt;a href=&quot;#rts-flag--l%20%E2%9F%A8flags%E2%9F%A9&quot;&gt;&lt;code&gt;-l ⟨flags⟩&lt;/code&gt;&lt;/a&gt; option is added. This might be useful for reducing the overhead of debug tracing.</source>
          <target state="translated">&lt;a href=&quot;#rts-flag--l%20%E2%9F%A8flags%E2%9F%A9&quot;&gt; &lt;code&gt;-l ⟨flags⟩&lt;/code&gt; &lt;/a&gt; 옵션이 추가 되면 디버그 메시지가 stdout 대신 바이너리 이벤트 로그 파일로 전송 됩니다. 이것은 디버그 추적의 오버 헤드를 줄이는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3938878890234d53e50351e98db2530cea6141a8" translate="yes" xml:space="preserve">
          <source>Debug messages will be sent to the binary event log file instead of stdout if the &lt;a href=&quot;profiling#rts-flag--l&quot;&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/a&gt; option is added. This might be useful for reducing the overhead of debug tracing.</source>
          <target state="translated">&lt;a href=&quot;profiling#rts-flag--l&quot;&gt; &lt;code&gt;-l&lt;/code&gt; &lt;/a&gt; 옵션이 추가 되면 디버그 메시지가 stdout 대신 이진 이벤트 로그 파일로 전송 됩니다. 디버그 추적의 오버 헤드를 줄이는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="509f9196ad7f74a3f9bd0414d669581317439d4d" translate="yes" xml:space="preserve">
          <source>Debug.Trace</source>
          <target state="translated">Debug.Trace</target>
        </trans-unit>
        <trans-unit id="09e3f89aaf601c703bba03e0ed62db787b429023" translate="yes" xml:space="preserve">
          <source>DebugFlags</source>
          <target state="translated">DebugFlags</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="0afa055f5125f9d1605e1df97396ffd76b1bbb87" translate="yes" xml:space="preserve">
          <source>Debugging output is in one of several &amp;ldquo;styles.&amp;rdquo; Take the printing of types, for example. In the &amp;ldquo;user&amp;rdquo; style (the default), the compiler&amp;rsquo;s internal ideas about types are presented in Haskell source-level syntax, insofar as possible. In the &amp;ldquo;debug&amp;rdquo; style (which is the default for debugging output), the types are printed in with explicit foralls, and variables have their unique-id attached (so you can check for things that look the same but aren&amp;rsquo;t). This flag makes debugging output appear in the more verbose debug style.</source>
          <target state="translated">디버깅 출력은 여러 &quot;스타일&quot;중 하나입니다. 예를 들어 유형을 인쇄하십시오. &quot;사용자&quot;스타일 (기본값)에서 유형에 대한 컴파일러의 내부 아이디어는 가능한 한 Haskell 소스 레벨 구문으로 표시됩니다. &quot;디버그&quot;스타일 (디버그 출력의 기본값)에서 유형은 명시 적 forall로 인쇄되며 변수에는 고유 ID가 첨부되어 있으므로 동일하지만 그렇지 않은 것을 확인할 수 있습니다. 이 플래그는 디버깅 출력을보다 자세한 디버그 스타일로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7a442b40082af358980ccde93abe3fac72eaa773" translate="yes" xml:space="preserve">
          <source>Debugging the compiler</source>
          <target state="translated">컴파일러 디버깅</target>
        </trans-unit>
        <trans-unit id="997f59bc99b2a57280179c3ce09ba8ab57cbdf44" translate="yes" xml:space="preserve">
          <source>Dec</source>
          <target state="translated">Dec</target>
        </trans-unit>
        <trans-unit id="3f9c4869e7ce80ca26ab68a98a604b9360a2a7b0" translate="yes" xml:space="preserve">
          <source>DecQ</source>
          <target state="translated">DecQ</target>
        </trans-unit>
        <trans-unit id="282aa883228293ef6bf48fabeb898a0c888497ba" translate="yes" xml:space="preserve">
          <source>Deci</source>
          <target state="translated">Deci</target>
        </trans-unit>
        <trans-unit id="c5f1c94aad2d5dfcf4e37f5e275775c7e299b1f7" translate="yes" xml:space="preserve">
          <source>DecidedLazy</source>
          <target state="translated">DecidedLazy</target>
        </trans-unit>
        <trans-unit id="1f0c796f3e3f82cec111425a226edba1ace66756" translate="yes" xml:space="preserve">
          <source>DecidedStrict</source>
          <target state="translated">DecidedStrict</target>
        </trans-unit>
        <trans-unit id="c7149e59cce7d51762498d25229242398080f135" translate="yes" xml:space="preserve">
          <source>DecidedStrictness</source>
          <target state="translated">DecidedStrictness</target>
        </trans-unit>
        <trans-unit id="9b824a53894fe5341d0e717d6a72387a3c01f3b8" translate="yes" xml:space="preserve">
          <source>DecidedUnpack</source>
          <target state="translated">DecidedUnpack</target>
        </trans-unit>
        <trans-unit id="0bba4b32029c5955e8153d4a3aeaaa31f67d9c07" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="03923347e3ab121d569646ea9f6e16ecd2ff4ee0" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="928831bcdfb61d3bfd70b276a740279d09aa62d6" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="e9b2d2258ba15b30736104fa5ee91e83fa426a59" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="752095aed3b15ad538564f71af06076294458db5" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="2053012704efe119abb2c265cfa2146aa0127c3f" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="7b04c61a2dda5729d8785b3b584bc857ac75f80f" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="2904b4b0d9a1e17d0f498e21c3965437c89646c1" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="25af773307c902a5261e244aa51e174e1305bb2e" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="b4e9067b1e04f504169ea835e7be7912f0c7823e" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="ca2ca43e7fbbbdbb6451289358e632ee92128708" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="b68cb169f8c139b5d86fcb1b07dc9e8b85138ec1" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="84b4ea228fe7ae8a6f1bb2d9c928d3d76e90c7b2" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="f680cf483e31d86705c6ef861d835d6e3c22c308" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="7984b1e0260407d355acf8818e397e5069199376" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="e403e5f2005867a9ef4a87f36b3ff8fbdfeca5f2" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="51e0292fd8a8c0a76957de2e5d94b7bc117832d3" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="0466d04f75ad5320a8b0cfc2d3e71c58e8108ecb" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="c1ebaf3144cfab5ad9b5fe2db06eeed6d3401b1c" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="2d32fa25da26f3cce3c478034c32d5ff947713d3" translate="yes" xml:space="preserve">
          <source>Decimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="9056480abe91015b7639835bf80fa97fb9d4afe2" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="39b9e317dee3a799fe2313223bd9ce961d1d23f3" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="a2dd66d15c6eb8a94236ff04d54d08ce4e7bcf5f" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="90e362dd9dd7370855176c5819043c9c23a6a9e0" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="d9e94a8e95c37f6729ab11b1ace3bfd92106a34c" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="d58141f2389812f9e204dd48eb5ff81dc623d409" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="34b5d4529836d798304911dd338258cb981b3b62" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="decb62ed71ae511e3b32dc0797261217ecfc3bd8" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="7854519ecf35da8859473f289eceb22c93797d11" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; 의 10 진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="3f94d71a2ba4edb694ba626aeb2e1eaf13b10a12" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="58ecbf75a7dea0923460fa033453c49470747d3e" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="4fa121df74960f564ad67ba71a15594c05c2f196" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="4a6fdb0f1c353f49d7540e02783d5b209932f86d" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="d6f9a8aab5b3fc0d9e8f10a9e78343f388da17c5" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="8cf96f129ea3274283507dcf3c2d3c7768ade106" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="ef97e74adb57763c61573307e3739c6a40edb46e" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="47158764ba2488be66a23055878c4fcdfb2303c0" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="e5bdf41024eb277121ec1d8913751b5a7283922a" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="52a3fdf18351174cb9ba65fb808c7fb071e60b86" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="94cfdb359eab73b3b26d4f7d231acad1567b3e40" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="2680577c82807a203c1250a57812350ca48870e7" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="955a6877a2f66c4081bb3bec04422a1c77374a7b" translate="yes" xml:space="preserve">
          <source>Decimal encoding of an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; using the ASCII digits.</source>
          <target state="translated">ASCII 숫자를 사용 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="5df9bd46c64fc7b4bf54636251b82b718a22d532" translate="yes" xml:space="preserve">
          <source>Decimal encoding of numbers using ASCII encoded characters.</source>
          <target state="translated">ASCII로 인코딩 된 문자를 사용하여 숫자를 10 진수로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="204a6d220b2afb494c6a0dc7ef89f01661b6a362" translate="yes" xml:space="preserve">
          <source>Decimal numbers</source>
          <target state="translated">십진수</target>
        </trans-unit>
        <trans-unit id="112c248def0a38f0123497e35685cf4bb8f1c638" translate="yes" xml:space="preserve">
          <source>DecimalNumber</source>
          <target state="translated">DecimalNumber</target>
        </trans-unit>
        <trans-unit id="0268ae9338cdffe4824ea929d0394dc309f5b267" translate="yes" xml:space="preserve">
          <source>Declaration of the &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#t:ReaderT&quot;&gt;ReaderT&lt;/a&gt;&lt;/code&gt; monad transformer, which adds a static environment to a given monad.</source>
          <target state="translated">지정된 모나드에 정적 환경을 추가하는 &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#t:ReaderT&quot;&gt;ReaderT&lt;/a&gt;&lt;/code&gt; 모나드 변환기 선언 .</target>
        </trans-unit>
        <trans-unit id="7a3e10527dbdcc0670658f4e073d53664ca5a0ac" translate="yes" xml:space="preserve">
          <source>Declaration splices: partial type signature are fully supported.</source>
          <target state="translated">선언 스플 라이스 : 부분 형식 서명이 완전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="3e193f5c233b62233aa3cce4c3cd3f1267f61704" translate="yes" xml:space="preserve">
          <source>Declare the Safe Haskell state of the current module.</source>
          <target state="translated">현재 모듈의 Safe Haskell 상태를 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="90dd6f5535448e2ab6bed113548eb72d00a79a18" translate="yes" xml:space="preserve">
          <source>Decode &lt;code&gt;Double#&lt;/code&gt; into mantissa and base-2 exponent.</source>
          <target state="translated">&lt;code&gt;Double#&lt;/code&gt; 을 가수와 기수 2 지수로 디코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="2c8bd2fdf50954e344d5718e1365df7624c327eb" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing Latin-1 (aka ISO-8859-1) encoded text.</source>
          <target state="translated">라틴 -1 (일명 ISO-8859-1)로 인코딩 된 텍스트를 포함 하는 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="f257fd2c4dfa2a0df24e16839abc91a5c78a4632" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text that is known to be valid.</source>
          <target state="translated">유효한 것으로 알려진 UTF-8 인코딩 텍스트를 포함 하는 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 디코딩 하십시오.</target>
        </trans-unit>
        <trans-unit id="f0c64e168be07fa8952d49de7948e80e61ff779a" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text.</source>
          <target state="translated">UTF-8로 인코딩 된 텍스트를 포함 하는 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="494862f0258298999dc97d7129b5d4dc328dd57b" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing Latin-1 (aka ISO-8859-1) encoded text.</source>
          <target state="translated">라틴 -1 (일명 ISO-8859-1)로 인코딩 된 텍스트를 포함 하는 &lt;code&gt;ByteString&lt;/code&gt; 을 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="5688f00794f625b1c48e231ad37d7b7039890758" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing UTF-8 encoded text that is known to be valid.</source>
          <target state="translated">유효한 것으로 알려진 UTF-8 인코딩 텍스트를 포함 하는 &lt;code&gt;ByteString&lt;/code&gt; 을 디코딩 하십시오.</target>
        </trans-unit>
        <trans-unit id="e2cea320995e7b29774e97b64b83281dd0ead301" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing UTF-8 encoded text.</source>
          <target state="translated">UTF-8로 인코딩 된 텍스트를 포함 하는 &lt;code&gt;ByteString&lt;/code&gt; 을 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="fbc0e5ecbaae1ee182bd24d55479d2d8ecfaf3cf" translate="yes" xml:space="preserve">
          <source>Decode a &lt;code&gt;ByteString&lt;/code&gt; containing UTF-8 encoded text..</source>
          <target state="translated">UTF-8로 인코딩 된 텍스트가 포함 된 &lt;code&gt;ByteString&lt;/code&gt; 을 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="a2fed4802bfaf402da06bc2bd64bbfa8ea7bafcc" translate="yes" xml:space="preserve">
          <source>Decode a value from a file. In case of errors, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; will be called with the error message.</source>
          <target state="translated">파일에서 값을 디코딩하십시오. 오류의 경우, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 오류 메시지와 함께 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d203f8119b7b1cb93749758f2b60705ca2eda840" translate="yes" xml:space="preserve">
          <source>Decode a value from a file. In case of errors, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; will be called with the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf6218a7d07abff1be6f5cc08f717abebc9597d" translate="yes" xml:space="preserve">
          <source>Decode a value from a file. In case of success, the value will be returned in &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;. In case of decoder errors, the error message together with the byte offset will be returned.</source>
          <target state="translated">파일에서 값을 디코딩하십시오. 성공하면 값이 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 에 반환됩니다 . 디코더 오류의 경우 바이트 오프셋과 함께 오류 메시지가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="257f028b1794ae895e78c5297b2ebfe1ec64134c" translate="yes" xml:space="preserve">
          <source>Decode a value from a file. In case of success, the value will be returned in &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;. In case of decoder errors, the error message together with the byte offset will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232f944d15c6021eb04b0aab36387c1d73e2f0ce" translate="yes" xml:space="preserve">
          <source>Decode a value from a lazy ByteString, reconstructing the original structure.</source>
          <target state="translated">게으른 ByteString에서 값을 디코딩하여 원래 구조를 재구성하십시오.</target>
        </trans-unit>
        <trans-unit id="848b5df95e9652bac96d4d914031268ae619ffb4" translate="yes" xml:space="preserve">
          <source>Decode a value from a lazy ByteString. Returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; on failure and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; on success. In both cases the unconsumed input and the number of consumed bytes is returned. In case of failure, a human-readable error message will be returned as well.</source>
          <target state="translated">게으른 ByteString에서 값을 디코딩하십시오. 실패하면 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 으로, 성공하면 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 으로 돌아 갑니다. 두 경우 모두 소비되지 않은 입력과 소비 된 바이트 수가 반환됩니다. 실패한 경우 사람이 읽을 수있는 오류 메시지도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6619315251137769ae434d480304272e9045ca25" translate="yes" xml:space="preserve">
          <source>Decode a value from a lazy ByteString. Returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; on failure and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; on success. In both cases the unconsumed input and the number of consumed bytes is returned. In case of failure, a human-readable error message will be returned as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1433896453908891a00a7f0ac057ea89c1a2434" translate="yes" xml:space="preserve">
          <source>Decode a value in the Get monad</source>
          <target state="translated">Get 모나드 값을 디코딩</target>
        </trans-unit>
        <trans-unit id="1b5f7b2a7bab74514bfcb40d078a0e56795c8b6d" translate="yes" xml:space="preserve">
          <source>Decode text from big endian UTF-16 encoding.</source>
          <target state="translated">빅 엔디안 UTF-16 인코딩에서 텍스트를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="f8026bf52453deb5d2931f0abb6d1e57db660907" translate="yes" xml:space="preserve">
          <source>Decode text from big endian UTF-32 encoding.</source>
          <target state="translated">빅 엔디안 UTF-32 인코딩에서 텍스트를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="5ac6e36a5e0f273125c553bfed02e4e332f95b96" translate="yes" xml:space="preserve">
          <source>Decode text from little endian UTF-16 encoding.</source>
          <target state="translated">리틀 엔디안 UTF-16 인코딩에서 텍스트를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="27035e26b8355a32cc3c1520dbfbc76201abee98" translate="yes" xml:space="preserve">
          <source>Decode text from little endian UTF-32 encoding.</source>
          <target state="translated">리틀 엔디안 UTF-32 인코딩에서 텍스트를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="413cade64f6cfd3964fdaba2cfe554088d9f7466" translate="yes" xml:space="preserve">
          <source>Decode, in a stream oriented way, a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text that is known to be valid.</source>
          <target state="translated">유효한 것으로 알려진 UTF-8 인코딩 텍스트를 포함 하는 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 스트림 지향 방식으로 디코딩 하십시오.</target>
        </trans-unit>
        <trans-unit id="ba8b027d9e150647b779424835cf495fe5d4aebd" translate="yes" xml:space="preserve">
          <source>Decode, in a stream oriented way, a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing UTF-8 encoded text.</source>
          <target state="translated">UTF-8 인코딩 텍스트를 포함 하는 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 스트림 지향 방식으로 디코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="7be2f0f143224d91c1d79bb0d11cb4d0a2c69cde" translate="yes" xml:space="preserve">
          <source>Decoder</source>
          <target state="translated">Decoder</target>
        </trans-unit>
        <trans-unit id="4b9d36d83c06e37782d740af6424903230486d88" translate="yes" xml:space="preserve">
          <source>Decoding</source>
          <target state="translated">Decoding</target>
        </trans-unit>
        <trans-unit id="7deaf238dda111a50b4ef31cebb55ed82a10c69b" translate="yes" xml:space="preserve">
          <source>Decoding ByteStrings to Text</source>
          <target state="translated">바이트 열을 텍스트로 디코딩</target>
        </trans-unit>
        <trans-unit id="8da74ceaeff3a5d2761a4728f82d5eea8afbc466" translate="yes" xml:space="preserve">
          <source>Decoding Floats/Doubles</source>
          <target state="translated">플로트 / 더블 디코딩</target>
        </trans-unit>
        <trans-unit id="61b72ff3a7a4983384d0c331e7a9ca22b33f7b97" translate="yes" xml:space="preserve">
          <source>Decoding Ints</source>
          <target state="translated">디코딩 정수</target>
        </trans-unit>
        <trans-unit id="9c6d765fa3c2abb6c0f6ae7edbcac4876b86b545" translate="yes" xml:space="preserve">
          <source>Decoding Words</source>
          <target state="translated">단어 해독</target>
        </trans-unit>
        <trans-unit id="1af8079d98637bd2b5b62f4b92e2f19ae0580b49" translate="yes" xml:space="preserve">
          <source>Deconstructing mutable arrays</source>
          <target state="translated">가변 배열 해체</target>
        </trans-unit>
        <trans-unit id="937838a5d858257ad13468fc7c6c2b1a2308ab6d" translate="yes" xml:space="preserve">
          <source>Deconstructing names</source>
          <target state="translated">이름 해체</target>
        </trans-unit>
        <trans-unit id="d73cb52d577e8ff3e4cf60fda398fed7a79b8bf2" translate="yes" xml:space="preserve">
          <source>Deconstruction</source>
          <target state="translated">Deconstruction</target>
        </trans-unit>
        <trans-unit id="e1747034df3ed849d75abc95545bebbdd69aa899" translate="yes" xml:space="preserve">
          <source>Decrease the &amp;ldquo;go-for-it&amp;rdquo; threshold for unfolding smallish expressions. Give a &lt;code&gt;-funfolding-use-threshold=0&lt;/code&gt; option for the extreme case. (&amp;ldquo;Only unfoldings with zero cost should proceed.&amp;rdquo;) Warning: except in certain specialised cases (like Happy parsers) this is likely to actually &lt;em&gt;increase&lt;/em&gt; the size of your program, because unfolding generally enables extra simplifying optimisations to be performed.</source>
          <target state="translated">작은 표현을 펼치기위한 &quot;go-for-it&quot;임계 값을 줄입니다. 부여 &lt;code&gt;-funfolding-use-threshold=0&lt;/code&gt; 극단적 인 경우에 대한 옵션을 선택합니다. (&amp;ldquo;비용이 0 인 전개 만 진행해야합니다.&amp;rdquo;) 경고 : 해피 파서와 같은 특정 특수한 경우를 제외하고는 전개가 일반적으로 최적화를 더욱 단순화 할 수 있기 때문에 실제로 프로그램 크기가 &lt;em&gt;커질&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="450fb0777c673d3a3821acb1c395cac2e02490a7" translate="yes" xml:space="preserve">
          <source>DecsQ</source>
          <target state="translated">DecsQ</target>
        </trans-unit>
        <trans-unit id="af48512b7f41b2ce6200c16f0b3c92deedda35d4" translate="yes" xml:space="preserve">
          <source>Deeply strict version of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt; 의 매우 엄격한 버전 .</target>
        </trans-unit>
        <trans-unit id="8da60e5a225de75e8b55f93f88a52eb24df917bd" translate="yes" xml:space="preserve">
          <source>Deeply strict version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt; 의 매우 엄격한 버전 .</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="e909208bec2a6f9415b0248e83fb2b9dc80d8387" translate="yes" xml:space="preserve">
          <source>Default buffer size.</source>
          <target state="translated">기본 버퍼 크기.</target>
        </trans-unit>
        <trans-unit id="8485d36b30d225f286160d6555b8470c59fbc527" translate="yes" xml:space="preserve">
          <source>Default fixity: &lt;code&gt;infixl 9&lt;/code&gt;</source>
          <target state="translated">기본 고정도 : &lt;code&gt;infixl 9&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6b2b5f65fabdb919ee237efbc7509297224ac6d" translate="yes" xml:space="preserve">
          <source>Default implementation based upon &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSizeMaybe&quot;&gt;bitSizeMaybe&lt;/a&gt;&lt;/code&gt; provided since 4.12.0.0.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:bitSizeMaybe&quot;&gt;bitSizeMaybe&lt;/a&gt;&lt;/code&gt; 부터 bitSizeMaybe 기반의 기본 구현이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="399c53bc8b9589e3334f94fb9ef4076f51cf0d3f" translate="yes" xml:space="preserve">
          <source>Default implementation for &lt;code&gt;&lt;a href=&quot;data-bits#v:bit&quot;&gt;bit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:bit&quot;&gt;bit&lt;/a&gt;&lt;/code&gt; 기본 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="0b5fdef243abdf8f1426f457bb80b8da186d6070" translate="yes" xml:space="preserve">
          <source>Default implementation for &lt;code&gt;&lt;a href=&quot;data-bits#v:popCount&quot;&gt;popCount&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:popCount&quot;&gt;popCount&lt;/a&gt;&lt;/code&gt; 의 기본 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="c68740092e030cf2f1db89e87c0b8755a14c4559" translate="yes" xml:space="preserve">
          <source>Default implementation for &lt;code&gt;&lt;a href=&quot;data-bits#v:testBit&quot;&gt;testBit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:testBit&quot;&gt;testBit&lt;/a&gt;&lt;/code&gt; 의 기본 구현 .</target>
        </trans-unit>
        <trans-unit id="a47445f8d576adb29e290bd866a0e5e7644e64d6" translate="yes" xml:space="preserve">
          <source>Default implementation for &lt;code&gt;&lt;a href=&quot;ghc-float#v:log1mexp&quot;&gt;log1mexp&lt;/a&gt;&lt;/code&gt; requiring &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; to test against a threshold to decide which implementation variant to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2791b76b8ff1b55458f53dbb613662918989dfed" translate="yes" xml:space="preserve">
          <source>Default implementation: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0106c1bc5252b42182dd0987d6eed7a755f9a597" translate="yes" xml:space="preserve">
          <source>Default implementation: &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본 구현 : &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0a9a055ca8dcbdf7475659dbb609e9e36017c8f" translate="yes" xml:space="preserve">
          <source>Default rendering</source>
          <target state="translated">기본 렌더링</target>
        </trans-unit>
        <trans-unit id="65e91d1b4b736995ff4d507ac478286f0975ca5d" translate="yes" xml:space="preserve">
          <source>Default shell (pw_shell)</source>
          <target state="translated">기본 셸 (pw_shell)</target>
        </trans-unit>
        <trans-unit id="5c5551a2941f050b84d3a93b66d30443bb74f625" translate="yes" xml:space="preserve">
          <source>Default values for the &lt;code&gt;&lt;a href=&quot;system-posix-io#t:OpenFileFlags&quot;&gt;OpenFileFlags&lt;/a&gt;&lt;/code&gt; type. False for each of append, exclusive, noctty, nonBlock, and trunc.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-io#t:OpenFileFlags&quot;&gt;OpenFileFlags&lt;/a&gt;&lt;/code&gt; 유형의 기본값 입니다. append, exclusive, noctty, nonBlock 및 trunc 각각에 대해 False입니다.</target>
        </trans-unit>
        <trans-unit id="58cf1a399dc98cb9b44f28ab805469e4394ccafe" translate="yes" xml:space="preserve">
          <source>Default values for the &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#t:OpenFileFlags&quot;&gt;OpenFileFlags&lt;/a&gt;&lt;/code&gt; type. False for each of append, exclusive, noctty, nonBlock, and trunc.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#t:OpenFileFlags&quot;&gt;OpenFileFlags&lt;/a&gt;&lt;/code&gt; 유형의 기본값 입니다. append, exclusive, noctty, nonBlock 및 trunc 각각에 대해 False입니다.</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="25a9084be6987615bf532ff3db85aaec6121b192" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c014141f4aec21bebb7267f66e0034cb5c55f0ff" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;Nothing&lt;/code&gt;</source>
          <target state="translated">기본 : &lt;code&gt;Nothing&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="192bf7771749870af9f084951e181e6dac6cae06" translate="yes" xml:space="preserve">
          <source>DefaultSignatures</source>
          <target state="translated">DefaultSignatures</target>
        </trans-unit>
        <trans-unit id="7cc46fc0142a8dee62fdf649a99f9134ea28bbf9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftL&quot;&gt;shiftL&lt;/a&gt;&lt;/code&gt; unless defined explicitly by an instance.</source>
          <target state="translated">인스턴스에서 명시 적으로 정의하지 않는 한 기본값은 &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftL&quot;&gt;shiftL&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e4dd3616cf53abc90cfd5af95721703709065a8f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftR&quot;&gt;shiftR&lt;/a&gt;&lt;/code&gt; unless defined explicitly by an instance.</source>
          <target state="translated">인스턴스에서 명시 적으로 정의하지 않는 한 기본값은 &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftR&quot;&gt;shiftR&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7b3259510168746e823df2ab5d55a275dfcbd7d4" translate="yes" xml:space="preserve">
          <source>Defer and group diagnostic messages by severity</source>
          <target state="translated">심각도별로 진단 메시지 연기 및 그룹화</target>
        </trans-unit>
        <trans-unit id="72f021ed354ac0af633a78d4a308f0937d71f608" translate="yes" xml:space="preserve">
          <source>Defer as many type errors as possible until runtime. At compile time you get a warning (instead of an error). At runtime, if you use a value that depends on a type error, you get a runtime error; but you can run any type-correct parts of your code just fine. See &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;</source>
          <target state="translated">런타임까지 가능한 많은 유형 오류를 연기하십시오. 컴파일 타임에 오류 대신 경고가 표시됩니다. 런타임시 유형 오류에 의존하는 값을 사용하면 런타임 오류가 발생합니다. 그러나 코드의 형식이 올바른 부분을 잘 실행할 수 있습니다. &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;런타임에 유형 오류 연기를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d2cb32f86eb368967bdb03dfef9804181ea037f4" translate="yes" xml:space="preserve">
          <source>Defer typed holes errors (errors about names with a leading underscore (e.g., &amp;ldquo;_&amp;rdquo;, &amp;ldquo;_foo&amp;rdquo;, &amp;ldquo;_bar&amp;rdquo;)) until runtime. This will turn the errors produced by &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;typed holes&lt;/a&gt; into warnings. Using a value that depends on a typed hole produces a runtime error, the same as &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt; (which implies this option). See &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; and &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;.</source>
          <target state="translated">런타임까지 입력 된 구멍 오류 (밑줄이 맨 앞에 오는 이름에 대한 오류 (예 :&amp;ldquo;_&amp;rdquo;,&amp;ldquo;_foo&amp;rdquo;,&amp;ldquo;_bar&amp;rdquo;))를 연기하십시오. 이렇게하면 &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;구멍이 뚫린&lt;/a&gt; 오류가 경고로 바뀝니다 . 유형이 지정된 구멍에 의존하는 값을 사용하면 &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; &lt;/a&gt; 와 동일한 런타임 오류가 발생합니다 (이 옵션을 의미 함). &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;형식화 된 구멍&lt;/a&gt; 및 &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;런타임에 형식 오류 연기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3afaadb14e0aef1bc46c0f6b15c2b6cc154e2130" translate="yes" xml:space="preserve">
          <source>Defer variable out-of-scope errors (errors about names without a leading underscore) until runtime. This will turn variable-out-of-scope errors into warnings. Using a value that depends on an out-of-scope variable produces a runtime error, the same as &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt; (which implies this option). See &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; and &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;.</source>
          <target state="translated">런타임까지 변수 범위를 벗어난 오류 (밑줄이없는 이름에 대한 오류)를 연기하십시오. 범위를 벗어난 오류를 경고로 바꿉니다. 범위를 벗어난 변수에 의존하는 값을 사용하면 &lt;a href=&quot;#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; &lt;/a&gt; 와 동일한 런타임 오류가 발생합니다 (이 옵션을 의미 함). &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;형식화 된 구멍&lt;/a&gt; 및 &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;런타임에 형식 오류 연기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57f78b739bcfb11b0a415bf6c3ecc43b06984cbb" translate="yes" xml:space="preserve">
          <source>Define a rewrite rule to be used to optimize a source program.</source>
          <target state="translated">소스 프로그램을 최적화하는 데 사용할 다시 쓰기 규칙을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="7e3e6f54594eb4dd38616ad455411235c21de4e4" translate="yes" xml:space="preserve">
          <source>Define a symbol in the C pre-processor</source>
          <target state="translated">C 전 처리기에서 기호 정의</target>
        </trans-unit>
        <trans-unit id="3c392c395edafe45638e67d31a5849d3754ed6ea" translate="yes" xml:space="preserve">
          <source>Define macro ⟨symbol⟩ in the usual way. When no value is given, the value is taken to be &lt;code&gt;1&lt;/code&gt;. For instance, &lt;code&gt;-DUSE_MYLIB&lt;/code&gt; is equivalent to &lt;code&gt;-DUSE_MYLIB=1&lt;/code&gt;.</source>
          <target state="translated">일반적인 방법으로 매크로 &quot;기호&quot;를 정의하십시오. 값을 지정하지 않으면 값은 &lt;code&gt;1&lt;/code&gt; 이 됩니다. 예를 들어, &lt;code&gt;-DUSE_MYLIB&lt;/code&gt; 는 &lt;code&gt;-DUSE_MYLIB=1&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="406ea1803a723e8639df1cd14de0e65a8b7596ad" translate="yes" xml:space="preserve">
          <source>Define the methods needed for a minimal complete instance of a class.</source>
          <target state="translated">클래스의 최소한의 완전한 인스턴스에 필요한 메소드를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="ff94d5e6cca878f5d2d91fd3547c3aef33954213" translate="yes" xml:space="preserve">
          <source>DefineDosDeviceFlags</source>
          <target state="translated">DefineDosDeviceFlags</target>
        </trans-unit>
        <trans-unit id="cbcd347a3fb278985a44ae054eeb2e83c99b78da" translate="yes" xml:space="preserve">
          <source>Defined as &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt; = &lt;a href=&quot;../base-4.13.0.0/data-void#v:absurd&quot;&gt;absurd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt; = &lt;a href=&quot;../base-4.13.0.0/data-void#v:absurd&quot;&gt;absurd&lt;/a&gt;&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2ee273dc5d62e1927e77f22fac1d526fb4645cd" translate="yes" xml:space="preserve">
          <source>Defined as &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt; = &lt;a href=&quot;../base-4.14.1.0/data-void#v:absurd&quot;&gt;absurd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt; = &lt;a href=&quot;../base-4.14.1.0/data-void#v:absurd&quot;&gt;absurd&lt;/a&gt;&lt;/code&gt; 것으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="015fb98b22e813c01cafbd7bacb2cccf9c2d354e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-foldable&quot;&gt;Data.Foldable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/data-foldable&quot;&gt;Data.Foldable에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="5a72b0803da9ecda14cc7b9999cdc96a6eb0c866" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-functor-const&quot;&gt;Data.Functor.Const&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/data-functor-const&quot;&gt;Data.Functor.Const에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="d86bf45a1340d9b842dd95688d48858474963376" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-proxy&quot;&gt;Data.Proxy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/data-proxy&quot;&gt;Data.Proxy에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="694effb0aa84761f5f01a700f0a0d458cf882e8d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-semigroup&quot;&gt;Data.Semigroup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/data-semigroup&quot;&gt;Data.Semigroup에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="3a43f2083adba7705ad24691fda122270a089c8c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-traversable&quot;&gt;Data.Traversable&lt;/a&gt;</source>
          <target state="translated">데이터에 정의되어 &lt;a href=&quot;../base-4.13.0.0/data-traversable&quot;&gt;있습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="465bfbe34a7e55db5afe848bbc01c7f26eed3a3d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/data-void&quot;&gt;Data.Void&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/data-void&quot;&gt;Data.Void&lt;/a&gt; 에서 정의</target>
        </trans-unit>
        <trans-unit id="c9f9cc786a4b3e356f57dd93139c46df1c0cf447" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/foreign-c-types&quot;&gt;Foreign.C. 유형으로&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="0fefad65e82e92463ee57e119b78e512fd884649" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/foreign-storable&quot;&gt;Foreign.Storable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/foreign-storable&quot;&gt;외국&lt;/a&gt; 에서 정의 됨</target>
        </trans-unit>
        <trans-unit id="585e29cd3e44388e7e52848d7dd4be2388ccd6ce" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-arr&quot;&gt;GHC.Arr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-arr&quot;&gt;GHC.Arr에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="6682a0be15cd20232380e3c77c2909d8bb785af2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-base&quot;&gt;GHC.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-base&quot;&gt;GHC.Base에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="642080d9df46e4f026ade49c237f833ea2d80454" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-conc-sync&quot;&gt;GHC.Conc.Sync&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-conc-sync&quot;&gt;GHC.Conc.Sync에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="0dafd02d3bbe90bafb0908e296be94b10cb0c97b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-exception&quot;&gt;GHC.Exception&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-exception&quot;&gt;GHC.Exception에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="e618a104d4b85ee9464035511f36e03094a0ab80" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-exception-type&quot;&gt;GHC.Exception.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-exception-type&quot;&gt;GHC.Exception.Type에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="dee063271fd368d559bb3ec9f3d15aee5c4d48c8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-io-exception&quot;&gt;GHC.IO.Exception&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-io-exception&quot;&gt;GHC.IO.Exception에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="2968b07f67d3ae338b511b8b0844df9f384ed467" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Types&lt;/a&gt; 에서 정의 됨</target>
        </trans-unit>
        <trans-unit id="6acddbf6703ff006d2816b91356bf89db14e632e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-io-iomode&quot;&gt;GHC.IO.IOMode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-io-iomode&quot;&gt;GHC.IO.IOMode&lt;/a&gt; 에서 정의 됨</target>
        </trans-unit>
        <trans-unit id="e77262ccfb6b20a3767f25aba7f59dd217d66836" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-ioarray&quot;&gt;GHC.IOArray&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-ioarray&quot;&gt;GHC.IOArray에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="90159d1495b2038b0a140e4cc30744a4b2e00a6a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-ioref&quot;&gt;GHC.IORef&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-ioref&quot;&gt;GHC.IORef에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="9de732b334cdc6d912a5248c47c0173866600397" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-ptr&quot;&gt;GHC.Ptr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-ptr&quot;&gt;GHC.Ptr에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="e767af5ec7114bd727101fb24cb02a04ccd835f7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/ghc-read&quot;&gt;GHC.Read&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/ghc-read&quot;&gt;GHC.Read에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="60afc09bbd5bd67475604f8fc347fe7f5c263684" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.13.0.0/system-posix-types&quot;&gt;System.Posix.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.13.0.0/system-posix-types&quot;&gt;System.Posix.Types에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="5f5704e5b02805b5cb7a7d57d2bb1a14d7a7751b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/data-foldable&quot;&gt;Data.Foldable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/data-foldable&quot;&gt;Data.Foldable에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="9f7d08aaf32fe83054b16944c33b7feeb66bd6a0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/data-functor-const&quot;&gt;Data.Functor.Const&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/data-functor-const&quot;&gt;Data.Functor.Const에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="774b7388dd325218f120d2c7230bf1d2a7fbdd95" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/data-proxy&quot;&gt;Data.Proxy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/data-proxy&quot;&gt;Data.Proxy에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="1db7068286772a82d16d844ad82ee3428fc9349b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/data-semigroup&quot;&gt;Data.Semigroup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/data-semigroup&quot;&gt;Data.Semigroup에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="9b08a79e331589a00c03ab2f8c00a07f3de125ca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/data-traversable&quot;&gt;Data.Traversable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/data-traversable&quot;&gt;Data.Traversable에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="71eca54de1c8bf076061b2a9ffa660321ff9e298" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/data-void&quot;&gt;Data.Void&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/data-void&quot;&gt;Data.Void에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="f21197a0579ac05f927996d350b3bbff6b479148" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt; 에서 정의 됨</target>
        </trans-unit>
        <trans-unit id="efd89f30b65a56eea73b34d427ec3921c61d3e92" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/foreign-storable&quot;&gt;Foreign.Storable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/foreign-storable&quot;&gt;외국어로&lt;/a&gt; 정의 됨.</target>
        </trans-unit>
        <trans-unit id="53b1ee2716ba474895f571e5f950da1a3937543b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-arr&quot;&gt;GHC.Arr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-arr&quot;&gt;GHC.Arr에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="8d57b5c4b9bb151ce6054db92e4b832da7a1093d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-base&quot;&gt;GHC.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-base&quot;&gt;GHC.Base&lt;/a&gt; 에서 정의 됨</target>
        </trans-unit>
        <trans-unit id="3d73151feb419842c4bb4aa052bd19798e4a30c1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-conc-sync&quot;&gt;GHC.Conc.Sync&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-conc-sync&quot;&gt;GHC.Conc.Sync에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="dd95e924fbe69a58a2b25cab928d93cfbea0cced" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-exception-type&quot;&gt;GHC.Exception.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-exception-type&quot;&gt;GHC.Exception.Type에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="e7965704e85025f20ac91f35b5017caf6f1f9280" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-io-exception&quot;&gt;GHC.IO.Exception&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-io-exception&quot;&gt;GHC.IO.Exception에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="f93733bfa438aae54a9e391684817895b50860dc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Types에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="a6c2ad34bd0db708484024d453901fd3dbcc15aa" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-io-iomode&quot;&gt;GHC.IO.IOMode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-io-iomode&quot;&gt;GHC.IO.IOMode에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="4aa2e1923e7c7e5b9c1a633f4e99537ffe666f33" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-ioarray&quot;&gt;GHC.IOArray&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-ioarray&quot;&gt;GHC.IOArray에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="eee10065349e94c6cc0a6dc6754d96753b60e52c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-ioref&quot;&gt;GHC.IORef&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-ioref&quot;&gt;GHC.IORef에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="c357647173b6364bf8ece2d55283090ffb0c47c7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-ptr&quot;&gt;GHC.Ptr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-ptr&quot;&gt;GHC.Ptr에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="aed2de5a9445fe63457781984f818edfc2eb2483" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/ghc-read&quot;&gt;GHC.Read&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/ghc-read&quot;&gt;GHC에&lt;/a&gt; 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="303864be5fe5612b61be7b9b1b1a185874a086cc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../base-4.14.1.0/system-posix-types&quot;&gt;System.Posix.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../base-4.14.1.0/system-posix-types&quot;&gt;System.Posix.Types에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="7e7ac8664d8e80fe43385525e5f118e613e10e67" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-builder-internal&quot;&gt;Data.ByteString.Builder.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-builder-internal&quot;&gt;Data.ByteString.Builder.Internal에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="0306090633fd3a7728cd411888e91bcae17c09aa" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-type&quot;&gt;GHC.Integer.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-type&quot;&gt;GHC.Integer.Type에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="8729a09b8ca6cacad9d9cfcdeae375cd58b778d9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../integer-gmp-1.0.3.0/ghc-integer-type&quot;&gt;GHC.Integer.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e656bbe2516aa9c98062a7d7a91ddc2108e05f8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../terminfo-0.4.1.4/system-console-terminfo-base&quot;&gt;System.Console.Terminfo.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../terminfo-0.4.1.4/system-console-terminfo-base&quot;&gt;System.Console.Terminfo.Base에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="a52b00bd327e96cee28c7d9f9cf108f1ca49ef5f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Cont&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Cont에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="a87214f59ca880bf1983161c55aea843948cd0b5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="f795da9bce8d4ce7c446dfffa00397dbdb0817d0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="e4a7e8e69108dc09423680f7dacb17046434b01b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-list&quot;&gt;Control.Monad.Trans.List&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-list&quot;&gt;Control.Monad.Trans.List에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="899f57a8b514b370fa1eab4049f07088cf0cd805" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-reader&quot;&gt;Control.Monad.Trans.Reader&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-reader&quot;&gt;Control.Monad.Trans.Reader에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="caf54115cc0e95ee0ad39ff83932cb7355ecbce8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="b2708461d01aabfbef079144888805b264adc03a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-rws-strict&quot;&gt;Control.Monad.Trans.RWS.Strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-rws-strict&quot;&gt;Control.Monad.Trans.RWS.Strict에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="aa1518141f8b97aad6dee1edee89d64997ca7ebb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-state-lazy&quot;&gt;Control.Monad.Trans.State.Lazy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-state-lazy&quot;&gt;Control.Monad.Trans.State.Lazy에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="86d91a28a0287363be23ae642bbf7c2340983238" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-state-strict&quot;&gt;Control.Monad.Trans.State.Strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-state-strict&quot;&gt;Control.Monad.Trans.State.Strict에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="980790fef836f2b15d8b818a507560c500185d55" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-writer-lazy&quot;&gt;Control.Monad.Trans.Writer.Lazy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-writer-lazy&quot;&gt;Control.Monad.Trans.Writer.Lazy에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="45cfa9662c1ba733371cc375ddf4c980821e258d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-writer-strict&quot;&gt;Control.Monad.Trans.Writer.Strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-writer-strict&quot;&gt;Control.Monad.Trans.Writer.Strict에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="bb2b152a1e8b0b6b4336f8992d85959878823f0a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;../unix-2.7.2.2/system-posix-files-common&quot;&gt;System.Posix.Files.Common&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../unix-2.7.2.2/system-posix-files-common&quot;&gt;System.Posix.Files.Common에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="ae6dca433084901c0d9db49269d14323e168a57d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-applicative&quot;&gt;Control.Applicative&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-applicative&quot;&gt;Control.Applicative에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="b88768e4db2475a89ece2f9bbfa54130dfea5ad6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-applicative-backwards&quot;&gt;Control.Applicative.Backwards&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-applicative-backwards&quot;&gt;Control.Applicative.Backwards에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="d341bebf0b8cd10e3b6c03cc7da4c75f28c77f9c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-applicative-lift&quot;&gt;Control.Applicative.Lift&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-applicative-lift&quot;&gt;Control.Applicative.Lift에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="347c4baf3920cab4738dff573708fee25e1a9a02" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-arrow&quot;&gt;Control.Arrow&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-arrow&quot;&gt;Control.Arrow에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="6aeb55b368de453ca7719b68b13e7337bad751d0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-category&quot;&gt;Control.Category&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-category&quot;&gt;Control.Category&lt;/a&gt; 에서 정의</target>
        </trans-unit>
        <trans-unit id="55a2798f84d75b19b38ab49e1ced04c1617d80bf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-chan&quot;&gt;Control.Concurrent.Chan&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-concurrent-chan&quot;&gt;Control.Concurrent.Chan에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="66341d313e25aa181630f17d7ab0b4099aef1e0f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tarray&quot;&gt;Control.Concurrent.STM.TArray&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-concurrent-stm-tarray&quot;&gt;Control.Concurrent.STM.TArray에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="d7b206a2f8681c9617327ab62ecb8e83f95b30d3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tbqueue&quot;&gt;Control.Concurrent.STM.TBQueue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-concurrent-stm-tbqueue&quot;&gt;Control.Concurrent.STM.TBQueue에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="cd4af52daca653e334b23dd1a3d9885380471573" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tchan&quot;&gt;Control.Concurrent.STM.TChan&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-concurrent-stm-tchan&quot;&gt;Control.Concurrent.STM.TChan에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="32f1c0f7e29ae013c0db096b1300ced1561a5187" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tmvar&quot;&gt;Control.Concurrent.STM.TMVar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-concurrent-stm-tmvar&quot;&gt;Control.Concurrent.STM.TMVar에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="f61f458365e3a87b552b2c2f62ef2c30f44da6ca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tqueue&quot;&gt;Control.Concurrent.STM.TQueue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-concurrent-stm-tqueue&quot;&gt;Control.Concurrent.STM.TQueue에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="191db76eb408e9c97db4c746f761b1d4c0b47b63" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-concurrent-stm-tsem&quot;&gt;Control.Concurrent.STM.TSem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-concurrent-stm-tsem&quot;&gt;Control.Concurrent.STM.TSem에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="a3827818309df1d28240d974c144764fe05a42e7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-deepseq&quot;&gt;Control.DeepSeq&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-deepseq&quot;&gt;Control.DeepSeq에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="d6aa134fc3892f41f26d6ffd899de0cffb4eb0e2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-exception&quot;&gt;Control.Exception에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="2749969a33ce957f4a85389c88958ed7ccb28909" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-catch&quot;&gt;Control.Monad.Catch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433d3bd9b4a683fa3fbdaa7feed86456b02dced1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-catch-pure&quot;&gt;Control.Monad.Catch.Pure&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d385240175645765020865bad6b89e09b93481" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-cont-class&quot;&gt;Control.Monad.Cont.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-cont-class&quot;&gt;Control.Monad.Cont.Class에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
        <trans-unit id="236ee1757bf4297c94beca3cff9d2962fe7b8b0a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-error-class&quot;&gt;Control.Monad.Error.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-error-class&quot;&gt;Control.Monad.Error.Class에&lt;/a&gt; 정의</target>
        </trans-unit>
        <trans-unit id="61b25af32d3e4428d45299bf8d492af0c92f505b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-fail&quot;&gt;Control.Monad.Fail&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-fail&quot;&gt;Control.Monad.Fail에&lt;/a&gt; 정의 됨</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
