<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="d4d9a9419640438dd6271199c2f2ed788d3001ce" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor&quot;&gt;XOR&lt;/a&gt; : &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;비어 있지 않은 &lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;BOOL&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bool#t:Bool&quot;&gt;BOOL &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#xor&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="939a68ca2a2935118d64d321a36bb4da8dbd98d6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-List-NonEmpty.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor&quot;&gt;XOR&lt;/a&gt; : &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;비어 있지 않은 &lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;BOOL&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bool#t:Bool&quot;&gt;BOOL &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-List-NonEmpty.html#xor&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa63398c3b54979dc8544a76b715f1aaf354995e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-Bits.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-Bits.html#xor&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="530e7c2a3ffaea651bb29a7c615a2e0c0f69be3f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a-&amp;gt; a-&amp;gt; a infixl 6 &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#xor&quot;&gt;출처&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="919ad9f8b4e0f0e5a07faa44653bd00de5db9586" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-Bits.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-Bits.html#xor&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a087f4974aa7f997f2e130b860393cd283bc9ec" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor-35-&quot;&gt;xor#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#xor%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor-35-&quot;&gt;xor #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#xor%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09958da32ec3490b7236d950de78cd4d4a0c9b37" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor-35-&quot;&gt;xor#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xor%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor-35-&quot;&gt;xor #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;단어 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;단어 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;단어 # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xor%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d25ed04fbd43cfcbfcc7d9e83dceab0609a459ef" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor-35-&quot;&gt;xor#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/src/GHC-Prim.html#xor%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor-35-&quot;&gt;xor #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/src/GHC-Prim.html#xor%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b837e43941936682a9501d2794e9f585cdbce5f7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#xorBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#xorBigNat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24d28ad144684537da34ce00a9a26a20b5d9718a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorBigNat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a862a26863fced40cfafa856aebd0fcf59230398" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/integer-gmp-1.1/src/GHC-Integer-GMP-Internals.html#xorBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/integer-gmp-1.1/src/GHC-Integer-GMP-Internals.html#xorBigNat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7892841145f449a23a6be7b0331df9abacafcff" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#xorI%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#xorI%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9be03d00f2c7d4fecb4474fa84cffa557d13a930" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xorI%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xorI%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c04091b74ddad4fd085172fe5182e2ccefe4bd6d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/src/GHC-Prim.html#xorI%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/src/GHC-Prim.html#xorI%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec4bc871288862a776d7c7380c1470b3d735ed0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#xorInteger&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#xorInteger&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44308adae0bb9a08e536f89f8fc8f4e901b66613" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorInteger&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorInteger&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="230bc9ab75572f1ddff4776c396d275ccbc4a953" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-Integer.html#xorInteger&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-Integer.html#xorInteger&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb43140c3a396bfb11886cdd13dcbb2efd1b535e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Natural.html#xorNatural&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Natural.html#xorNatural&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8f665cbd702e971d22995cdbc7f56cbe9f14840" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Natural.html#xorNatural&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Natural.html#xorNatural&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1da33cce70a9bf9be61e1113ebde7405f2c5f52a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-Natural.html#xorNatural&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-Natural.html#xorNatural&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e271012b2f45ba5b520a3c671f5a7066088b1adb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yPos&quot;&gt;yPos&lt;/a&gt; :: &lt;a href=&quot;system-win32-types#t:SHORT&quot;&gt;SHORT&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yPos&quot;&gt;yPos&lt;/a&gt; :: &lt;a href=&quot;system-win32-types#t:SHORT&quot;&gt;SHORT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac946fc11e81448083890a0d13208b0c6e557bbb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식 &lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;정수 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59f2d18ef9668d6f27a7ea587d9cd926660bd782" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;정수 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;소스 &lt;/a&gt;&lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e5d74aa14dae0d0c23d56c275911defa680fa2c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;정수 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;소스 &lt;/a&gt;&lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72ca2431488dafe54131e3c0f26fe61f01b4e879" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; ( &lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05c50211c0b4f42fe241ee76ffa59a056de214e0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; ( &lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9455b100fc082212fdd8dc4a00b79d11d83ae73f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; ( &lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9169c7ecd622a69d0c11e8f8f1d74f9cc58fe9a1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; ( &lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba44592263836ea221a321434f7da1911c737476" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; ( &lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53a6e92f36c543c6c59c28b87acb140897b61854" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; ( &lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="211634d802bfe570cc7c03c85aa4fb5c54e363bb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yellow&quot;&gt;yellow&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yellow&quot;&gt;노랑&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;문자열 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f7f6498551c3225efd9f732887ea56cd1deab5a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yellow&quot;&gt;yellow&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yellow&quot;&gt;노란색&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;문자열 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d419caea57b461fff195a8885533876345901f8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yellow&quot;&gt;yellow&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yellow&quot;&gt;노란색&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;문자열 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed28929e20a3046934371a2d315064e30c5dce19" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield&quot;&gt;yield&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Conc-Sync.html#yield&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield&quot;&gt;수율&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Conc-Sync.html#yield&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26e0ac2fb1e5985810cfc3f5b34c7083c03eb81a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield&quot;&gt;yield&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#yield&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield&quot;&gt;수율&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#yield&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca26c68484eda85d9b68e1a18668d8aed8aac74e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield&quot;&gt;yield&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-Conc-Sync.html#yield&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield&quot;&gt;수율&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-Conc-Sync.html#yield&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f759ec00fd646fdc9c8342344fcbcc7976bb9e4a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield-35-&quot;&gt;yield#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#yield%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield-35-&quot;&gt;yield #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#yield%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="501d92b02ea64a354e79ca08b3f9da12b4837653" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield-35-&quot;&gt;yield#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#yield%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield-35-&quot;&gt;yield #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;상태 # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#yield%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d78c9ededd619720e8cd83eabfab87f7f9388727" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield-35-&quot;&gt;yield#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/src/GHC-Prim.html#yield%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield-35-&quot;&gt;yield #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld-&lt;/a&gt; &amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/src/GHC-Prim.html#yield%23&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caf96475f858db10f3c8dd7fb2f3d24121e7025a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zero&quot;&gt;zero&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;Mask&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntSet-Internal.html#zero&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zero&quot;&gt;zero&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;마스크&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;Bool &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntSet-Internal.html#zero&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ce2b6a4dc02730d90955d7da20ee90add79d463" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zero&quot;&gt;zero&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;Mask&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntSet-Internal.html#zero&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zero&quot;&gt;제로&lt;/a&gt; : &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;지능&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;마스크&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-bool#t:Bool&quot;&gt;BOOL &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntSet-Internal.html#zero&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="175be70820c32fc2e823413508993ee454d4e4bb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zero&quot;&gt;zero&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;Mask&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntSet-Internal.html#zero&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zero&quot;&gt;제로&lt;/a&gt; : &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;지능&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;마스크&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-bool#t:Bool&quot;&gt;BOOL &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntSet-Internal.html#zero&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e49be5e9e557e7127ed64b31f15d61a3afcb9f17" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: a b c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Arrow.html#zeroArrow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: abc &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Arrow.html#zeroArrow&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ef76fd5e38504514292db16e67dfb1692008f31" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: a b c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Arrow.html#zeroArrow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: abc &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Arrow.html#zeroArrow&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1d168eb91ce94c04fbba42bac90892a86fd43c4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: a b c &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Control-Arrow.html#zeroArrow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: abc &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Control-Arrow.html#zeroArrow&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="953748e100e560e0f8f65f513a7cb361590ac9ad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#zeroBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#zeroBigNat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44fbdd96218760d3bc073237e9909863b7497cac" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#zeroBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#zeroBigNat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="718b5e963c367037cc4c1109f8b6866ee007e9f0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/integer-gmp-1.1/src/GHC-Integer-GMP-Internals.html#zeroBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/integer-gmp-1.1/src/GHC-Integer-GMP-Internals.html#zeroBigNat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="213eed434f12648a78b3380c2d1dc96433f8ebbd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-Bits.html#zeroBits&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-Bits.html#zeroBits&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6406ef40e2c0088f8db875857ba03d85118db0f9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#zeroBits&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#zeroBits&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99a18527f2f22888844a13a3e9bf54576d9e8d7b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: a &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-Bits.html#zeroBits&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-Bits.html#zeroBits&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c487d1e7153cca8fa679931ef82e6e7b1bc71c9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; : &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bb932a4c607552958745e985b5541c8efd72720" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; : &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6342c7745cf6e35ef488e049188c611c57f02b9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c5aa6c4062caba1cf14a1fcfa38a23cdf6d85ac" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; : &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="623d0cfd7fa763125acf718a9f70c58545e49af6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; : &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be3004979ab860f1851836dc85047766179e5b2a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c411142e6003238a4c60fe156c376b6e0f7f02c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; : &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b74d2f55ef02a49813b861698aced65d01ce7fcf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; : &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c25ab3537ad9483190b1d2564e1c2de2558ea058" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;문자열&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;문서 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5511633e771474aad35e1524315bdb2f83ccb6e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e84f709f7fcc91b94779e0032ad3633bc228e22b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2bdefb9ba385ceaaf0591046db121002d983103" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="708ae2c2903012cd0f24aee5f7289c989bc6faad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45b5a3998c45d9d11f2f2e4cac2e19eccb227f4f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2072e130578bfa821831bc961c4200d203ec0104" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Char8.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a207077d7941690b103485e15d017fd3734bb2e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be67374cc0f1b778e3d8cc7d3e5dcc2508ebe9d2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b06170eb1e77e6d834e5f9dd5254040c70bc2e8d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b920ec4529deb7fafe3f3b59760d552f96fd297" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="568cf57a6d495cf485360f86beed4caaa116fa9e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44c07c0086b3d19e0bed9996f1d8ae6833077ed2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString-&lt;/a&gt; &amp;gt; [( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b043869eb8228f2f4d1119863c4c6585b44efc2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-List-NonEmpty.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty a-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-List-NonEmpty.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b18db9ce077f4c4e1487acd9205e579725a5dbc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty a-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="540e72f5b4f0f5f71e2737828dd52625dea41fd1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-List-NonEmpty.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty a-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-List-NonEmpty.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11d8bd1a076bb8d64ea36431dfcfccd3387b254e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c52c294ea1f275fd590c4163b2a29ec6ccb41b56" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq a-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66105384586f09e1ac56f4575e0cc5a15344595f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq a-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e80bc630c0b714918d774a62638e1b5f1722bc46" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bb394839322eda88803206637f9bb1fd012f7b3" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text.html#zip&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa1a7b90ac7932eb779fba819e92b391784f9b8e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text.html#zip&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91794611ceef22153bd5fdf3e1501f93027f8c18" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21e91b0de07fcb57aedf870784452193bc995eb5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7c50161085d929601d18264980eea09295110ba" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cf5268a4db81db57870b04a8dc99b43a75ddece" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04e26aec0b3943e58a7c02110b2cbc1eaca75108" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef341da7dc7fc49fb3a711f9b7e45f2544dc90c8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zip&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c7d5f3e2328e04ec84f2e9738e2f601de27dc97" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df5a68fa3364f79b0be37f6e8f9acfb343e5863e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;시퀀스 &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;시퀀스&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;시퀀스&lt;/a&gt; c-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;시퀀스&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00273541860b2c17e9b074842ef638aa91db6786" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5945aa3f1436f0135eb3967d4a9b233645f97e32" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zip3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6701660b38979bddaeb3562d2b783e61e1227ea5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8d8d486a5dcccb02b9eba51fbfbef4805014ef8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zip3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="def10cfbd580dded428f6b704c4db8720671ad10" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35fa9f00724ef63cbeba0d94599eebd230790fdd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aa0386e6fda5fc0541ee04a5cc4d8cc1f58f686" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b15b57c796bcf894c4b7d3cde52115c84c9c82" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f7d05f2df4a688dedbd5e0ea3291de1800feb68" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7b2c634331ac7b1e401cb0c59f5fd748a600dea" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89c4968b849e53b3281e736f671cfb92e16988fa" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip5&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d402532575207f54ff8af0ca05a3f52c3445700" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip5&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f30fa9589585f4058a16dc53d24b96d80680928e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip5&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71c51336d91ba93e469c17aafc15ccc612b01fd1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f]-&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip6&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa5e894d7fb64629ebae8d9681f972e88ba7af27" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f]-&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip6&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e2423ec4cf8d7c0e7e261ac1089e99df31560cd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f]-&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip6&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2eeaba6414f0ee6d4ae821af77d9976da0983bdf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f]-&amp;gt; [g]-&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip7&quot;&gt;출처&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cbf6554c1a2db6da3926e391ebfdd47ea6d4f0c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f]-&amp;gt; [g]-&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip7&quot;&gt;출처&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f631b62fa14166f6eac3a7d7d62416db6df7ff29" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f]-&amp;gt; [g]-&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zip7&quot;&gt;출처&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5d52385d7ce26b586591cb53acb4546a8d0386e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;문자&lt;/a&gt; )-&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;문자 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a78242416eaba8ae05cd42d8ae326230a1d931d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;문자&lt;/a&gt; )-&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;문자 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88b739e2293e47f070e9a352e1fa624ce868eace" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3101f4bccdc47b0a11346e0fc140d29eb559480" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87cb31d73572cf41a44768b9fc97c74d87fc2351" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6297a0706669b17c6c28668a940b0d42793046be" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f0edd30116a4ad2df298fbfe7ee1ec2d6d78fde" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : ( &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; ) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a344ba98ef62fff79db139c62dae9178078cd16e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : ( &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; ) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Lazy.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b07bf27d2f265ed055f061e17df941a6f37651d1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="207ff585647eca2f738717508d969fa99f9b39ee" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3eb9fae62b380383d9c7b16023afa1af6c39e5ba" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zipWith&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68ea2001fb93ea93816e8932fda11b85f2b6664c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3aa5d0b46aad0aede4f09967895b3cbcac41a4e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : ( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; ) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;텍스트 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55d4b9ca652904f0b715bbc009993264a35f6d97" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : ( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;숯불&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; ) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;문자&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;텍스트 &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text-Lazy.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4037c525c144e1fa9f0eec4ce2801686ec4c76e8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Char8.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04b24a32d06ab66f6c6d61bf6c2e47cf7d3748e4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;샤아&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be6af5e17b2d4930a3910545758eb5fe90bab182" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="361096cceadbb404cffc0fef8cac183065c2343f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [A] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/bytestring-0.10.12.1/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c00555113bc00d5045882fee94182cac04be4a0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; b &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : (A -&amp;gt; A -&amp;gt; B) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; B &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a63c96c9d0876ec0111dcd37f6b0f4250240910" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; b &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : (A -&amp;gt; A -&amp;gt; B) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; B &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb2a7207f96ca430a44c404930e5e973ffcc973a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; b &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : (A -&amp;gt; A -&amp;gt; B) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;스트림&lt;/a&gt; B &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/text-1.2.4.1/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="846be51654db64b08713fec9f465433d47e17ab6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c)-&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f573092cb1f8cc44544d5622a487f0ead74863e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : (A -&amp;gt; B -&amp;gt; C) -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;비공&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;비공&lt;/a&gt; B -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;비공&lt;/a&gt; C &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af2205f03c95247338f76443fa003b74ce9ce485" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c)-&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee3c3607ede332ec119328fed02c4989c9dacfa9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="272f7bc4faaad76a11afadcb754e2a038cb92db1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; : (A -&amp;gt; B -&amp;gt; C) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; B -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; C &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3ef03ee0fdb692a4b401d0c1bf1c3b0ae6779fc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c)-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="237ab6fa2e141c50bbcbd61b29b00bdb4b510991" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f10fd60e64ec634cbacca9cee3b0840201a3c001" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63cde8d45903f834c1eb724675a307d241f6338a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zipWith&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="832facc60ed4d3cdf71bba6a623f331cb7e7e109" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7dd38c6fc408d5202c6e6258a94d85d293efaa4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; : (A -&amp;gt; B -&amp;gt; C -&amp;gt; D) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; B -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; C -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; D &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;자료&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="134e0df2599ae4d3fdde7fe77feb2c1bf4d5b139" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d)-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6299b0db57607ecfd17f053134b08f7a490c44ad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zipWith3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba4671b9cd1b25703fd05ee7e8f2c0f6b8f9230e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9888447232073bc4768ad7bb9dc670ecc8b8b42f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/GHC-List.html#zipWith3&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2009b1947bef8bf676d3a949aff04311f363b70a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfb41775a5b1aab9c5be5e449ab513969d4b2af0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; : (A -&amp;gt; B -&amp;gt; C -&amp;gt; D -&amp;gt; E) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; A -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; B -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; C -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열의&lt;/a&gt; D -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;서열&lt;/a&gt; 전자 &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b97980584c2bb4021afc76b8dbac26858a836813" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e)-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq &lt;/a&gt;a- &amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d-&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eddfc100b785f732433bf2ba1ca268b2a7c4d3e7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9749546d65289c93b5a36a0e989a6f54d3179bf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62d6b1336e76be8b81c7c3a21d489cb00a9cb8cf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith4&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="799c4501acb2d691b6532b0ba1b89e1fb70bb306" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f ] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith5&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2648f7c57c4dc7ee498ca9c1a17e393cd8d492cd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f ] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith5&quot;&gt;출처&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14240ba8a47b94ab123812ee7f8af0277a6cbb72" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]-&amp;gt; [f ] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith5&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2ce1d1769d88f90cea6bb032c2cd3946935f828" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f-&amp;gt; g)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]- &amp;gt; [f]-&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith6&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f25d935321b22c293df392a27d3bab15bf9ba2e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f-&amp;gt; g)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]- &amp;gt; [f]-&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith6&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c70bb15c594b92d85623dc1e8616ba382b2d24d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f-&amp;gt; g)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [e]- &amp;gt; [f]-&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith6&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c88bd13295e030f10747661950821f9b03e519a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g -&amp;gt; h) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f-&amp;gt; g-&amp;gt; h)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [ e]-&amp;gt; [f]-&amp;gt; [g]-&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith7&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7d85d09b3b770880160f48094e3cdb8014a5821" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g -&amp;gt; h) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f-&amp;gt; g-&amp;gt; h)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [ e]-&amp;gt; [f]-&amp;gt; [g]-&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith7&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b1cf38e3bbff9da498430cf487ecddbad0a829e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g -&amp;gt; h) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: ( a- &amp;gt; b-&amp;gt; c-&amp;gt; d-&amp;gt; e-&amp;gt; f-&amp;gt; g-&amp;gt; h)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; [c]-&amp;gt; [d]-&amp;gt; [ e]-&amp;gt; [f]-&amp;gt; [g]-&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Data-OldList.html#zipWith7&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45cd011ba5e40af5bc7d4f6cf0e8adc93fd33ce5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; fz)-&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6367a18a587b5296567b012d89a8084d64bc25c6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; fz)-&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b663baf593ed8fc8eb14c63b010f3701d8969c8a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; fz)-&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;일치하는&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62ba3473abf0bcee8936ece0035a8c41277f1d6e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; fz)-&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;일치하는&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="605e9b95bdcc985f0a6a8ab982581666e05660a9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7283dfe2b3c60aa8cb2c6b44c0a43b3d8e862438" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a96e9d38819cf4bdaec82c80a2c5dbdc977947fa" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fbb35c950ae3498733b35a04754a228e79817af" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2ce85aec64362f32b85f5368c32566e49b5b058" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;실용적&lt;/a&gt; F =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; FZ) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad210b599f125b5e25d463d4b05e536855849693" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;실용적&lt;/a&gt; F =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; FZ) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3079677eb1ff67db458b0ca193a173ff17c6255b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="612f6565466e2a6bffd4e88832e6bb074df90043" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a571ecd5c9a1b7d84b4bdacca04035a754d4b376" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Monad.html#zipWithM&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; m =&amp;gt; ( a- &amp;gt; b-&amp;gt; mc)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Monad.html#zipWithM&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06bae0751e6f37a563846149c6b9276f28162496" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; m =&amp;gt; ( a- &amp;gt; b-&amp;gt; mc)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1f80c2c0e99ffba84aea28f38acfbb791a4840d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Control-Monad.html#zipWithM&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; m =&amp;gt; ( a- &amp;gt; b-&amp;gt; mc)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Control-Monad.html#zipWithM&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9043f14cf971a78a4cadacdbdca448d7a2ff59cc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Monad.html#zipWithM_&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; m =&amp;gt; ( a- &amp;gt; b-&amp;gt; mc)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Monad.html#zipWithM_&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ee49b85f0da486fdf8b272d84814e3d707d04d1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM_&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; m =&amp;gt; ( a- &amp;gt; b-&amp;gt; mc)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM_&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64b455aefe2573ff48527cf09a532fe24916988c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Control-Monad.html#zipWithM_&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; m =&amp;gt; ( a- &amp;gt; b-&amp;gt; mc)-&amp;gt; [a]-&amp;gt; [b]-&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/src/Control-Monad.html#zipWithM_&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e662a85a54c5b56e9889ae956668eb6e41330e2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; z)-&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0782491da8bfd31194c5afd82f04a4e16f7401fb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; z)-&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84087c21efc94a65bc0f741c7ca88cf1955fc9f8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; z)-&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6904aef8aa9c8ecdcc7da13016f9c8ef8a03255" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; z)-&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="daca6f86d1d7e4cdc6233d44bd7b47b143715842" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0f8b25b322797382cf591095c8884f0a55aafad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aba907681cfc37eab02b82deecb9e54a7aa2e84" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bd48539d5e5c517d43d1411dea2ec6052405fe2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="455697f84a3c340556bd29ad9ad562e48793ad47" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;실용적&lt;/a&gt; F =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; Z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a3e57a4dd113d92547268a0d0726c5fef8410e2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;실용적&lt;/a&gt; F =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; Z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="150875767fc57b31b7f7d2032a5cab5c38fb4fb9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44a5e80073615b6e92db02e9149856a74da43fde" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de5a832d9f96d69342dd2f1872b7080baee39562" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z))-&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt; 소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2db93e06e5ffce876201dfc6b01b7310fd68aa84" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5741dc3deceef1e66ee8906ea424161849858ff4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; F ( &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;어쩌면&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c121b1b1b3dabe45715b521eb37db745fcffc76d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k-&amp;gt; x-&amp;gt; y-&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z))-&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt; 소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f9ae01c1de01cac9ecc06b694d6df85d4a9d1f8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="393c577b1a954dff0881cf087c902028db6757bd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k-&amp;gt; x-&amp;gt; y-&amp;gt; f ( &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z))-&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9347b1bca15ac74e38deee7ef2b13651db4655e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z))-&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt; 소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd033313e86a903aeaa21ad56f86b97049ee3fcf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z))-&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt; 소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="589979246116b455206f98e0189c17b72e3fcc56" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f68844fc0cf795832dce7a368d75d6ece69641d7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b033d239a85593e934eae494172d34ade0932108" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;실용적&lt;/a&gt; F =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; F ( &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;어쩌면&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffced8746406ce2a1de2599e71ab5f8a52827ff1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; f ( &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z))-&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ad7e877f9fc7746f8dbe50d37e2d80c7e5624b2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z)-&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b825b1a07683a73007c116b5295b432345652f7a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; x-&amp;gt; y-&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z)-&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69313d2a10d177b4f9c053932a4acc6459b42eec" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z)-&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51c062a2276a23ab0cd1bb6c5d56b0471825414e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;응용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; z)-&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dc48dacd7f2d21d9da3d2a51e1abe0f9e83fecb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cab0eb69b880cd35f2ea155fcf04f75bcf8327e6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d120b22ac3bac18b6fa4694cb068fe701bdd5f6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b23bc797c638bfcab4de115e20fffbf5fe45a81" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="daa19e803abc7a85746a6e984ed3b6a442192306" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;실용적&lt;/a&gt; F =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;아마&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ee8ee62fca7ce608c9d2ce193dc2b12d7110009" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;실용적&lt;/a&gt; F =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;키&lt;/a&gt; -&amp;gt; X -&amp;gt; Y -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;아마&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;원본&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68ad43383c740d1ad7f9258363249fcc64858ae2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;어쩌면&lt;/a&gt; z)-&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="806e990808552ad3c69afd1b69a50ad570cf91ed" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; f =&amp;gt; (k-&amp;gt; x-&amp;gt; y-&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;어쩌면&lt;/a&gt; z)-&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bb2ee2f584603aff22b397a741b358d0ac7bfe5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2215cc5453778484558384ec86164b81c91a78a0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식 &lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;일&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식 &lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식 &lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04071e943f543066c01b5e812c31c7802f9b1c17" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day &lt;/a&gt;&lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay &lt;/a&gt;&lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;소스 &lt;/a&gt;&lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;형식&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13d512e20aae9c4812f5acb673f58235d937e31e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeToLocalTime&quot;&gt;zonedTimeToLocalTime&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:LocalTime&quot;&gt;LocalTime&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeToLocalTime&quot;&gt;zonedTimeToLocalTime&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:LocalTime&quot;&gt;LocalTime&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="441d37fca8a8ce98d3be5b4c06cb74c588bebc23" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de16a669f7ad36bedd4e399752754c265abd374f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt; 소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9db127222482af18cdc8306e0ad998516cf93dbf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime-&lt;/a&gt; &amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21d4997eedd8f0b71033ff48bad7cec6bbe1e3cf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeZone&quot;&gt;zonedTimeZone&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:TimeZone&quot;&gt;TimeZone&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeZone&quot;&gt;zonedTimeZone&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:TimeZone&quot;&gt;시간대&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc0d4cea834a65211a81bfdb69fff8431db91df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f81b781c836c003ebb556f9b01715a0acdf1dc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7239bed35dcad3b202b95946f3746a75c3d2cfb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-posix#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-posix#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="257ca4b2a577131e219860f0e5c770e531511db5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-windows#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-windows#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="621cdb558274f32d6cbd17557367704635d50d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cbd519d9312d8f6b5dc75a3995c99ea35bd4cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e57b6872c74b46db6b10bc4c1b0ef7d3914906f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;foo&quot;#&lt;/code&gt; has type &lt;code&gt;Addr#&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;foo&quot;#&lt;/code&gt; 에는 &lt;code&gt;Addr#&lt;/code&gt; 유형이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="856676e181361ec322dae4d81af6dc841f1c2f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#const&lt;/code&gt;, &lt;code&gt;#type&lt;/code&gt;, &lt;code&gt;#peek&lt;/code&gt;, &lt;code&gt;#poke&lt;/code&gt; and &lt;code&gt;#ptr&lt;/code&gt; are not hardwired into the &lt;code&gt;hsc2hs&lt;/code&gt;, but are defined in a C template that is included in the C program: &lt;code&gt;template-hsc.h&lt;/code&gt;. Custom constructs and templates can be used too. Any &lt;code&gt;#&lt;/code&gt;-construct with unknown key is expected to be handled by a C template.</source>
          <target state="translated">&lt;code&gt;#const&lt;/code&gt; , &lt;code&gt;#type&lt;/code&gt; , &lt;code&gt;#peek&lt;/code&gt; , &lt;code&gt;#poke&lt;/code&gt; 및 &lt;code&gt;#ptr&lt;/code&gt; 는 에고되지 &lt;code&gt;hsc2hs&lt;/code&gt; 하지만 C 프로그램에 포함 된 C 템플릿에 정의되어 &lt;code&gt;template-hsc.h&lt;/code&gt; . 맞춤 구성 및 템플릿도 사용할 수 있습니다. 모든 &lt;code&gt;#&lt;/code&gt; 알 수없는 키 -construct는 C 템플릿에 의해 처리 될 것으로 예상된다.</target>
        </trans-unit>
        <trans-unit id="38a5a27fe5e5986b5be4375fd5ffcec0e9fde857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$PATH&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;$PATH&lt;/code&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="ceccd8312926e942f7553a8a378b9ca2e0dda07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%%&lt;/code&gt; by &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%%&lt;/code&gt; by &lt;code&gt;%&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abd413f0c023a164031b30d0088207131c28306b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%@&lt;/code&gt; by the current time in 12-hour am/pm format.</source>
          <target state="translated">&lt;code&gt;%@&lt;/code&gt; 12시 오전 / 오후 형식으로 현재 시간에 따라 % @</target>
        </trans-unit>
        <trans-unit id="bf47cb222527b86990578f0f5f52bdb46a672841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%A&lt;/code&gt; by the current time in 24-hour HH:MM format.</source>
          <target state="translated">&lt;code&gt;%A&lt;/code&gt; 24 시간 HH : MM 형식의 현재 시간별 % A</target>
        </trans-unit>
        <trans-unit id="c35bcd0d85a710ef344b9c19f34aad7f73d06260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%N&lt;/code&gt; by the compiler name.</source>
          <target state="translated">&lt;code&gt;%N&lt;/code&gt; 컴파일러 이름 별 % N</target>
        </trans-unit>
        <trans-unit id="0f85e3261202c8e6912c7dee227e74fd7a5c0876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%T&lt;/code&gt; by the current time in 12-hour HH:MM:SS format.</source>
          <target state="translated">&lt;code&gt;%T&lt;/code&gt; 12 시간 HH : MM : SS 형식의 현재 시간별 % T</target>
        </trans-unit>
        <trans-unit id="8d6c87a6796fb44031067e3649d31065460d966f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%V&lt;/code&gt; by the compiler version.</source>
          <target state="translated">&lt;code&gt;%V&lt;/code&gt; 컴파일러 버전 별 % V</target>
        </trans-unit>
        <trans-unit id="7a37fc3de58012ff6c4505ccbd21795fe31b7b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%a&lt;/code&gt; by the machine architecture.</source>
          <target state="translated">&lt;code&gt;%a&lt;/code&gt; 기계 아키텍처에 의한 .</target>
        </trans-unit>
        <trans-unit id="fc33730f3011ebab2d53e3970903c2ca0c043572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%b&lt;/code&gt;, &lt;code&gt;%h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;%b&lt;/code&gt; , &lt;code&gt;%h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="022ee09a64e64212afab66683488512860f6d31b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%call(cmd [args])&lt;/code&gt; by the result of calling &lt;code&gt;cmd args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%call(cmd [args])&lt;/code&gt; 호출의 결과에 의해 &lt;code&gt;cmd args&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="671a7c28d1c66ba8aa01d8ee26b0b9c92e057956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%d&lt;/code&gt; by the date in &amp;ldquo;Weekday Month Date&amp;rdquo; format (e.g., &amp;ldquo;Tue May 26&amp;rdquo;) .</source>
          <target state="translated">&lt;code&gt;%d&lt;/code&gt; &quot;요일 월 날짜&quot;형식의 날짜 (예 : &quot;화 5 월 26 일&quot;)만큼 % d .</target>
        </trans-unit>
        <trans-unit id="976efb5d6e5b9d9b58598d4593737ec3b0968246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%l&lt;/code&gt; by the line number (as referenced in compiler messages) of the current prompt.</source>
          <target state="translated">&lt;code&gt;%l&lt;/code&gt; 현재 프롬프트의 행 번호 (컴파일러 메시지에서 참조)로 % l</target>
        </trans-unit>
        <trans-unit id="6205ad59e1324eb9870f8b1295e5ddf9a5b43933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%o&lt;/code&gt; by the operating system.</source>
          <target state="translated">&lt;code&gt;%o&lt;/code&gt; 운영 체제에 의한 % o .</target>
        </trans-unit>
        <trans-unit id="c9681d68aaa5e358047fe1836578f2a9108205e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%s&lt;/code&gt; by the names of the modules currently in scope.</source>
          <target state="translated">&lt;code&gt;%s&lt;/code&gt; 현재 범위 내에있는 모듈 이름 별 % s</target>
        </trans-unit>
        <trans-unit id="a5716728cebe618db173a2e0c2b4b552ea5a252e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%t&lt;/code&gt; by the current time in 24-hour HH:MM:SS format.</source>
          <target state="translated">&lt;code&gt;%t&lt;/code&gt; 24 시간 HH : MM : SS 형식의 현재 시간으로 % t .</target>
        </trans-unit>
        <trans-unit id="83ff0000a467aebdf0bc9047a3cbc7a80a8aed5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%u&lt;/code&gt; by the username of the current user.</source>
          <target state="translated">&lt;code&gt;%u&lt;/code&gt; 현재 사용자의 사용자 이름으로 % u .</target>
        </trans-unit>
        <trans-unit id="fe36ac6e515e680e39f8850880b3de924c7bcdc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%w&lt;/code&gt; by the current working directory.</source>
          <target state="translated">&lt;code&gt;%w&lt;/code&gt; 현재 작업 디렉토리 별 % w</target>
        </trans-unit>
        <trans-unit id="7019be002e4e33089137c486ac63163b0c2984d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;plusmn;hh:mm&lt;/code&gt; (ISO 8601:2004(E) sec. 4.2.5.1 extended format)</source>
          <target state="translated">&lt;code&gt;&amp;plusmn;hh:mm&lt;/code&gt; (ISO 8601 : 2004 (E) 초 4.2.5.1 확장 형식)</target>
        </trans-unit>
        <trans-unit id="970e824c7cbcc619163395d38d383c5a6d345516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;''T&lt;/code&gt; has type &lt;code&gt;Name&lt;/code&gt;, and names the type constructor &lt;code&gt;T&lt;/code&gt;. That is, &lt;code&gt;''&lt;/code&gt;⟨thing⟩ interprets ⟨thing⟩ in a type context.</source>
          <target state="translated">&lt;code&gt;''T&lt;/code&gt; 는 &lt;code&gt;Name&lt;/code&gt; 유형을 가지며 유형 생성자 이름을 &lt;code&gt;T&lt;/code&gt; 로 지정 합니다. 즉, &lt;code&gt;''&lt;/code&gt; ⟨thing⟩은 유형 컨텍스트에서 ⟨thing⟩을 해석합니다.</target>
        </trans-unit>
        <trans-unit id="33bedf4c8810363bab6dbc508687ee9561d27ab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'f&lt;/code&gt; has type &lt;code&gt;Name&lt;/code&gt;, and names the function &lt;code&gt;f&lt;/code&gt;. Similarly &lt;code&gt;'C&lt;/code&gt; has type &lt;code&gt;Name&lt;/code&gt; and names the data constructor &lt;code&gt;C&lt;/code&gt;. In general &lt;code&gt;'&lt;/code&gt;⟨thing⟩ interprets ⟨thing⟩ in an expression context.</source>
          <target state="translated">&lt;code&gt;'f&lt;/code&gt; 는 &lt;code&gt;Name&lt;/code&gt; 유형을 가지며 함수 &lt;code&gt;f&lt;/code&gt; 의 이름을 지정합니다 . 마찬가지로 &lt;code&gt;'C&lt;/code&gt; 는 &lt;code&gt;Name&lt;/code&gt; 유형 이며 데이터 생성자 &lt;code&gt;C&lt;/code&gt; 의 이름 을 지정합니다 . 일반적으로 &lt;code&gt;'&lt;/code&gt; ⟨thing⟨ ' 은 표현 문맥에서 ⟨thing⟩을 해석합니다.</target>
        </trans-unit>
        <trans-unit id="89549fde881d28e2640d612da9d607d96e9efb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'x'#&lt;/code&gt; has type &lt;code&gt;Char#&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'x'#&lt;/code&gt; 에는 &lt;code&gt;Char#&lt;/code&gt; 유형이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="864de06106fefc4413bf6023c3cff336bdd9149f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#_|#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#_|#)&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (총에서 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; 2)</target>
        </trans-unit>
        <trans-unit id="801e4d76be8f842a632ffa7f6e1fe862bc07a710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#_|#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#_|#)&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (총에서 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; 2)</target>
        </trans-unit>
        <trans-unit id="6e3fa6ba2606046c17b3691a5433bf858972cf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#|_#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 2 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#|_#)&lt;/code&gt; 는 이 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; (총 만점에 2 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; 2)</target>
        </trans-unit>
        <trans-unit id="c581aaa03f50b5b66f819f3f0021af20ea8a1208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#|_#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 2 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#|_#)&lt;/code&gt; 는 이 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; (총 만점에 2 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; 2)</target>
        </trans-unit>
        <trans-unit id="d3df1be2baa709f8c2c3c9e8b9e0e2b1a5e9ffaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(% x)&lt;/code&gt; is an operator section for any operator &lt;code&gt;(%)&lt;/code&gt; except for &lt;code&gt;(-)&lt;/code&gt;. &lt;code&gt;(- x)&lt;/code&gt; is negated &lt;code&gt;x&lt;/code&gt; rather than the right operator section of subtraction. Consequently, it is impossible to write such a section, and users are advised to write &lt;code&gt;(subtract x)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;(% x)&lt;/code&gt; 는 &lt;code&gt;(-)&lt;/code&gt; 를 제외한 모든 연산자 &lt;code&gt;(%)&lt;/code&gt; 에 대한 연산자 섹션입니다 . &lt;code&gt;(- x)&lt;/code&gt; 뺄셈의 오른쪽 연산자 섹션이 아니라 &lt;code&gt;x&lt;/code&gt; 를 부정 합니다. 따라서 이러한 섹션을 작성하는 것은 불가능하며 사용자는 대신 작성 &lt;code&gt;(subtract x)&lt;/code&gt; 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="8b1aea78d69ddb73a398a0e00535f95b01d8a51c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(% x)&lt;/code&gt; is an operator section for any operator &lt;code&gt;(%)&lt;/code&gt;, no exceptions, as long as there&amp;rsquo;s whitespace between &lt;code&gt;%&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(% x)&lt;/code&gt; 는 &lt;code&gt;%&lt;/code&gt; 와 &lt;code&gt;x&lt;/code&gt; 사이에 공백이있는 한 예외없이 모든 연산자 &lt;code&gt;(%)&lt;/code&gt; 에 대한 연산자 섹션입니다 .</target>
        </trans-unit>
        <trans-unit id="e1f0b83158684b5e8ebc7abfb3091aaf93501f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-bool#v:-124--124-&quot;&gt;||&lt;/a&gt;)&lt;/code&gt; short-circuits on &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; values, so the following terminates because there is a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left side:</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-bool#v:-124--124-&quot;&gt;||&lt;/a&gt;)&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 값 에 단락 이 발생하므로 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 값이 왼쪽에서 유한하게 멀리 있기 때문에 다음이 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="89797f11f0baccb1c50e9a642b9d2ace78408a7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; without newtypes is &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;liftA2 (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;. This lifts the &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; over the output of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; 는 &lt;code&gt;liftA2 (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 이없는 경우 &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = liftA2 ( &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; ) 입니다. 이것은 의 출력에 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 연산 &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 을 해제 합니다 .</target>
        </trans-unit>
        <trans-unit id="7b28f96e728dda6f9d3810ef89b5c60f1d9bb6b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on comparisons combines results with &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)
 @Ordering&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 비교시 ( &amp;lt;&amp;gt; ) 는 결과를 &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @Ordering&lt;/code&gt; 과 결합합니다 . &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 ( &amp;lt;&amp;gt; )) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="61cf492510608e7c2bd58b2f98381b0578aa3af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on equivalences uses logical conjunction &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 동등성에 대한 ( &amp;lt;&amp;gt; ) 은 결과에 논리적 결합 &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 (&amp;amp;&amp;amp;)) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d987bfbff07b834479977963c776de4028044044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on predicates uses logical conjunction &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 술어의 ( &amp;lt;&amp;gt; ) 는 결과에 논리적 연결 &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt; 이 없으면 이것은 liftA2 (&amp;amp;&amp;amp;) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b2b3c02a160184ab2d3f46a929c80032392fb167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; without newtypes is &lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;liftA2 (&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;. This lifts the &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation &lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; over the output of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; 는 &lt;code&gt;liftA2 (&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 이없는 경우 &lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = liftA2 ( &lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; ) 입니다. 이것은 의 출력에 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 연산 &lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 을 해제 합니다 .</target>
        </trans-unit>
        <trans-unit id="1cef1f5676bc22ecf0788028dccd610f39f34581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on comparisons combines results with &lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)
 @Ordering&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 비교시 ( &amp;lt;&amp;gt; ) 는 결과를 &lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @Ordering&lt;/code&gt; 과 결합합니다 . &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 ( &amp;lt;&amp;gt; )) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="88dfbe94ce08909485f5a0f11c05e49681c1a07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on equivalences uses logical conjunction &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 동등성에 대한 ( &amp;lt;&amp;gt; ) 은 결과에 논리적 결합 &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 (&amp;amp;&amp;amp;)) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8227eddaa7479ce5df6655564e0d63c08c55f0f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on predicates uses logical conjunction &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 술어의 ( &amp;lt;&amp;gt; ) 는 결과에 논리적 연결 &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt; 이 없으면 이것은 liftA2 (&amp;amp;&amp;amp;) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f82953d24d706d78150b28f03a87d5ebdb7c6b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; without newtypes is &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;liftA2 (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;. This lifts the &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; over the output of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; 는 &lt;code&gt;liftA2 (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 이없는 경우 &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = liftA2 ( &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; ) 입니다. 이것은 의 출력에 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 연산 &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 을 해제 합니다 .</target>
        </trans-unit>
        <trans-unit id="6452f4d2227f5dd81ef4b125c985c3b3d73cd946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on comparisons combines results with &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)
 @Ordering&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 비교시 ( &amp;lt;&amp;gt; ) 는 결과를 &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @Ordering&lt;/code&gt; 과 결합합니다 . &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 ( &amp;lt;&amp;gt; )) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="bc954670ab0d45c81c625ce471fb057c3ab856b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on equivalences uses logical conjunction &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 동등성에 대한 ( &amp;lt;&amp;gt; ) 은 결과에 논리적 결합 &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 (&amp;amp;&amp;amp;)) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="43b7f697541a0db4062def1e24762c335ebf622c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on predicates uses logical conjunction &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 술어의 ( &amp;lt;&amp;gt; ) 는 결과에 논리적 연결 &lt;code&gt;(&lt;a href=&quot;data-bool#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt; 이 없으면 이것은 liftA2 (&amp;amp;&amp;amp;) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="47102935999fa9992c8b43b1bff4830a2e2b30d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;prelude#v:-124--124-&quot;&gt;||&lt;/a&gt;)&lt;/code&gt; short-circuits on &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; values, so the following terminates because there is a &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left side:</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;prelude#v:-124--124-&quot;&gt;||&lt;/a&gt;)&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 값 에 단락 이 발생하므로 &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 값이 왼쪽에서 유한하게 멀리 있기 때문에 다음이 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="db44d146af5e867b4b056aea13e68d92f6afa25f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; without newtypes is &lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;liftA2 (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;. This lifts the &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation &lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; over the output of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(Op a b)&lt;/code&gt; 는 &lt;code&gt;liftA2 (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 이없는 경우 &lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @(b-&amp;gt;a)&lt;/code&gt; = liftA2 ( &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; ) 입니다. 이것은 의 출력에 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 연산 &lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 을 해제 합니다 .</target>
        </trans-unit>
        <trans-unit id="b681cfd295bd93cbd8e41eedee3309ad215abaab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on comparisons combines results with &lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)
 @Ordering&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 비교시 ( &amp;lt;&amp;gt; ) 는 결과를 &lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;) @Ordering&lt;/code&gt; 과 결합합니다 . &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 ( &amp;lt;&amp;gt; )) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="685be5d686827da15ade16d535de44aa42e46504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on equivalences uses logical conjunction &lt;code&gt;(&lt;a href=&quot;prelude#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;
 (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 동등성에 대한 ( &amp;lt;&amp;gt; ) 은 결과에 논리적 결합 &lt;code&gt;(&lt;a href=&quot;prelude#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;))&lt;/code&gt; 이 없으면 이것은 liftA2 ( liftA2 (&amp;amp;&amp;amp;)) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="9293fc14935cca741ece909f3573873e22483400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; on predicates uses logical conjunction &lt;code&gt;(&lt;a href=&quot;prelude#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; on the results. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; 술어의 ( &amp;lt;&amp;gt; ) 는 결과에 논리적 연결 &lt;code&gt;(&lt;a href=&quot;prelude#v:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt;)&lt;/code&gt; 을 사용합니다. &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt; (&amp;amp;&amp;amp;)&lt;/code&gt; 이 없으면 이것은 liftA2 (&amp;amp;&amp;amp;) 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0bfb45b7fd456c8c285dc647ecdd1a861a468e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(a ~ Char)&lt;/code&gt; context was introduced in &lt;code&gt;4.9.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(a ~ Char)&lt;/code&gt; 컨텍스트는 &lt;code&gt;4.9.0.0&lt;/code&gt; 에서 도입되었습니다</target>
        </trans-unit>
        <trans-unit id="659dc7caae542df28b0f2a871e77ece5109e2916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(exposed package)&lt;/code&gt;: Module is available for import.</source>
          <target state="translated">&lt;code&gt;(exposed package)&lt;/code&gt; : 모듈을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8158f65324ac416e5059dd2e9075851ab53611c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(hidden module)&lt;/code&gt;: Module is hidden, and thus will never be available for import.</source>
          <target state="translated">&lt;code&gt;(hidden module)&lt;/code&gt; : 모듈이 숨겨져있어 가져올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="394381e0d5a1133198e183a87c8508ccf7287292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(hidden package)&lt;/code&gt;: This module is in someone&amp;rsquo;s exported-modules list, but that package is hidden.</source>
          <target state="translated">&lt;code&gt;(hidden package)&lt;/code&gt; :이 모듈은 누군가의 내 보낸 모듈 목록에 있지만 해당 패키지는 숨겨져 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cc64b577c649c1f9e4b08b7500b0f9d4baf9df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(hidden reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt;: This module is available from a reexport of some set of hidden packages.</source>
          <target state="translated">&lt;code&gt;(hidden reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt; :이 모듈은 숨겨진 패키지 세트를 다시 내 보내면 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e70327110a6e1e371856c82f8fad9392222951a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(list p)&lt;/code&gt; parses a list of things parsed by &lt;code&gt;p&lt;/code&gt;, using the usual square-bracket syntax.</source>
          <target state="translated">&lt;code&gt;(list p)&lt;/code&gt; 는 일반적인 대괄호 구문을 사용하여 &lt;code&gt;p&lt;/code&gt; 로 구문 분석 된 항목 목록을 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="335b9f1b3faadae17213e9806f00d209b47a9e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(package flag)&lt;/code&gt;: This module export comes from a package flag.</source>
          <target state="translated">&lt;code&gt;(package flag)&lt;/code&gt; :이 모듈 내보내기는 패키지 플래그에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="752ebb0b815ec5530f7122a8bdc4e3e186eb97ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(paren p)&lt;/code&gt; parses &quot;(P0)&quot; where &lt;code&gt;p&lt;/code&gt; parses &quot;P0&quot; in precedence context zero</source>
          <target state="translated">&lt;code&gt;(paren p)&lt;/code&gt; 는 &quot;(P0)&quot;을 구문 분석합니다. 여기서 &lt;code&gt;p&lt;/code&gt; 는 우선 순위 컨텍스트 0에서 &quot;P0&quot;을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="26867d1fbabe82425f62a0dcb21532f59c9facd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(parens p)&lt;/code&gt; parses &quot;P&quot;, &quot;(P0)&quot;, &quot;((P0))&quot;, etc, where &lt;code&gt;p&lt;/code&gt; parses &quot;P&quot; in the current precedence context and parses &quot;P0&quot; in precedence context zero</source>
          <target state="translated">&lt;code&gt;(parens p)&lt;/code&gt; 는 &quot;P&quot;, &quot;(P0)&quot;, &quot;((P0))&quot;등을 구문 분석합니다. 여기서 &lt;code&gt;p&lt;/code&gt; 는 현재 우선 순위 컨텍스트에서 &quot;P&quot;를 구문 분석하고 우선 순위 컨텍스트 0에서 &quot;P0&quot;을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="f1e3aa84183c2f145e953ae789a95b3baa73451b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(prec n p)&lt;/code&gt; checks whether the precedence context is less than or equal to &lt;code&gt;n&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;(prec n p)&lt;/code&gt; 체크 우선 문맥 미만이거나 동일 여부 &lt;code&gt;n&lt;/code&gt; 및</target>
        </trans-unit>
        <trans-unit id="bf2b254f96fb4e778c0f975122b4307344f4d4e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt;: This module is available from a reexport of some set of exposed packages.</source>
          <target state="translated">&lt;code&gt;(reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt; :이 모듈은 노출 된 패키지 세트를 다시 내 보내면 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d5e3823b921d85d2e288289b95745b0d8899671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(unusable module)&lt;/code&gt;: Module is unavailable because the package is unusable.</source>
          <target state="translated">&lt;code&gt;(unusable module)&lt;/code&gt; : 패키지를 사용할 수 없으므로 모듈을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6f0c90017d48e3760305f283406076fbe27907ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x * y) * z&lt;/code&gt; = &lt;code&gt;x * (y * z)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(x * y) * z&lt;/code&gt; = &lt;code&gt;x * (y * z)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60e83e1bf4a8497e11a38b722f66d89610b9c2d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x + y) + z&lt;/code&gt; = &lt;code&gt;x + (y + z)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(x + y) + z&lt;/code&gt; = &lt;code&gt;x + (y + z)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="164950c5c45fcb737d4f482bd1d0175fefa450ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt;, if &lt;code&gt;y&lt;/code&gt; non-empty.</source>
          <target state="translated">&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt; &lt;code&gt;y&lt;/code&gt; 가 비어 있지 않으면 (x $$ y) &amp;lt;&amp;gt; z = x $$ (y &amp;lt;&amp;gt; z) 입니다.</target>
        </trans-unit>
        <trans-unit id="d707cc51fd6baec9b7c558ca87d5e1e2c9d78326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt;, if &lt;code&gt;y&lt;/code&gt; non-empty.</source>
          <target state="translated">&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt; &lt;code&gt;y&lt;/code&gt; 가 비어 있지 않으면 (x $$ y) &amp;lt;&amp;gt; z = x $$ (y &amp;lt;&amp;gt; z) 입니다.</target>
        </trans-unit>
        <trans-unit id="e24c6293815aebf83bf879696e2707c094991fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt;, if &lt;code&gt;y&lt;/code&gt; non-empty.</source>
          <target state="translated">&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt; &lt;code&gt;y&lt;/code&gt; 가 비어 있지 않으면 (x $$ y) &amp;lt;&amp;gt; z = x $$ (y &amp;lt;&amp;gt; z) 입니다.</target>
        </trans-unit>
        <trans-unit id="404a6b98653ac321e7493c0b2289cc9eae2515e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; 는 &lt;code&gt;(&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; 의 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="8bc76d81258c376540f72de20002d16d046ba520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; 는 &lt;code&gt;(&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; 의 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="85b5ff8d8c8c608aaa3f5805f1f9bcae34663386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; 는 &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; 의 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="df69295fdf9b4cef93e52f258e895ab73de162f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; 는 &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; 의 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="2ccdc5a92811d0cf377c1d076be89bf6541d1c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; 는 &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; 의 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="25bd368e21487c6237c21a0e4a071a27f711f8fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt; (on its first argument)</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt; (첫 번째 논쟁에서)</target>
        </trans-unit>
        <trans-unit id="56d2c032eec645ac2dba503d009a6475c46bf6cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt;: Pass an option or argument to GHC</source>
          <target state="translated">&lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; : 옵션 또는 인수를 GHC에 전달</target>
        </trans-unit>
        <trans-unit id="ae71c5a65194ce6c14a8950a13adbb2af6179488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--help&lt;/code&gt;: print usage information.</source>
          <target state="translated">&lt;code&gt;--help&lt;/code&gt; : 사용법 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="6018c730291b540d67a6e769db3e74c314533bc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt;: print version information.</source>
          <target state="translated">&lt;code&gt;--version&lt;/code&gt; : 버전 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="887da299ca473585e8de7938e2b1443fdd9ee27c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt;, &lt;code&gt;-S&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; , &lt;code&gt;-S&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2991edceded4960cbe7b74de011877718754954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Werror=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Werror=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="translated">&lt;code&gt;-Werror=compat&lt;/code&gt; 는 &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt; 옵션 그룹 의 각 경고 플래그에 대해 &lt;code&gt;-Werror=...&lt;/code&gt; 와 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="796a388001e70eb30a45a998cbd962e2337e4b42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Werror=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Werror=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="translated">&lt;code&gt;-Werror=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Werror=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt; option group.</target>
        </trans-unit>
        <trans-unit id="3e680d8646f716820161cd8fbd2a0c35aad18b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Wwarn=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Wwarn=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="translated">&lt;code&gt;-Wwarn=compat&lt;/code&gt; 는 &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt; 옵션 그룹 의 각 경고 플래그에 대해 &lt;code&gt;-Wwarn=...&lt;/code&gt; 과 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="685e71b4710d8f1332e30f87a65f29e0c556345f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Wwarn=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Wwarn=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="translated">&lt;code&gt;-Wwarn=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Wwarn=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt; option group.</target>
        </trans-unit>
        <trans-unit id="3f94133fecb31991fc8a2ee29e7debe48f993a21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-XQualifiedDo&lt;/code&gt; does not affect &lt;code&gt;return&lt;/code&gt; in the monadic &lt;code&gt;do&lt;/code&gt; notation.</source>
          <target state="translated">&lt;code&gt;-XQualifiedDo&lt;/code&gt; 는 모나드 &lt;code&gt;do&lt;/code&gt; 표기법의 &lt;code&gt;return&lt;/code&gt; 에 영향을주지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fcf4d721fc946bbd1b2f9f24a6c7919cd24745cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-XQualifiedDo&lt;/code&gt; does not affect explicit &lt;code&gt;(&amp;gt;&amp;gt;=)&lt;/code&gt; in the monadic &lt;code&gt;do&lt;/code&gt; notation.</source>
          <target state="translated">&lt;code&gt;-XQualifiedDo&lt;/code&gt; 는 모나드 &lt;code&gt;do&lt;/code&gt; 표기법 의 명시 적 &lt;code&gt;(&amp;gt;&amp;gt;=)&lt;/code&gt; 에 영향을주지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="873d34ab24bb7f7c8276c6167225e0224400ae94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-XUnboxedSums&lt;/code&gt; enables new syntax for anonymous, unboxed sum types. The syntax for an unboxed sum type with N alternatives is</source>
          <target state="translated">&lt;code&gt;-XUnboxedSums&lt;/code&gt; 는 익명의 상자없는 합계 유형에 대한 새로운 구문을 활성화합니다. N 개의 대안이있는 박스형 합계 유형의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b3f1c4411a51919b14a5370550711aa9f21aa82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; &amp;mdash; disable all classes</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; &amp;mdash; 모든 클래스를 비활성화합니다</target>
        </trans-unit>
        <trans-unit id="41da22d097da2cdeebc42eb8ae57b63df60f93db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-dinitial-unique=0 -dunique-increment=1&lt;/code&gt; - current sequential &lt;code&gt;UniqSupply&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-dinitial-unique=0 -dunique-increment=1&lt;/code&gt; - 현재 순차 &lt;code&gt;UniqSupply&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d184b462677e351315e61fdfff80e89f7615d8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-dinitial-unique=1 -dunique-increment=PRIME&lt;/code&gt; - where PRIME big enough to overflow often - nonsequential order</source>
          <target state="translated">&lt;code&gt;-dinitial-unique=1 -dunique-increment=PRIME&lt;/code&gt; - 자주 오버 플로우하기에 충분히 큰 PRIME-비 순차 순서</target>
        </trans-unit>
        <trans-unit id="6fa7ffa2ee1ff5e9d8700508a9285d23d02c48ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-dinitial-unique=16777215 -dunique-increment=-1&lt;/code&gt; - &lt;code&gt;UniqSupply&lt;/code&gt; that generates in decreasing order</source>
          <target state="translated">&lt;code&gt;-dinitial-unique=16777215 -dunique-increment=-1&lt;/code&gt; - &lt;code&gt;UniqSupply&lt;/code&gt; 내림차순으로 생성하는</target>
        </trans-unit>
        <trans-unit id="ae088993344d2708bc289cffcd7ddb551ae96b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f /path/to/ghc&lt;/code&gt;: tell runghc the path of GHC executable to use to run the program. By default runghc will search for GHC in the directories in the system search path.</source>
          <target state="translated">&lt;code&gt;-f /path/to/ghc&lt;/code&gt; : runghc에게 프로그램 실행에 사용할 GHC 실행 파일의 경로를 알려줍니다. 기본적으로 runghc는 시스템 검색 경로의 디렉토리에서 GHC를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b3608b4dd63a246dcb5aeb39df75acccda99bfb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-fproc-alignment=64&lt;/code&gt; can be used to limit alignment impact on performance as each function will start at a cache line. However forcing larger alignments in general reduces performance.</source>
          <target state="translated">&lt;code&gt;-fproc-alignment=64&lt;/code&gt; 를 사용하면 각 함수가 캐시 라인에서 시작되므로 성능에 대한 정렬 영향을 제한 할 수 있습니다. 그러나 일반적으로 더 큰 정렬을 사용하면 성능이 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="56d6c2129bd2cf21143407e162bc46399f085fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-fspecialise&lt;/code&gt; will be enabled as the &lt;code&gt;-fno-specialise&lt;/code&gt; is overridden by the &lt;code&gt;-O1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-fspecialise&lt;/code&gt; &lt;code&gt;-fno-specialise&lt;/code&gt; 가 &lt;code&gt;-O1&lt;/code&gt; 에 의해 무시 되므로 -fspecialise 가 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a40868af783d8eaa49ec75aa5c58505aacad4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-fspecialise&lt;/code&gt; will be enabled as the &lt;code&gt;-fno-specialise&lt;/code&gt; is overriden by the &lt;code&gt;-O1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-fspecialise&lt;/code&gt; &lt;code&gt;-fno-specialise&lt;/code&gt; 가 &lt;code&gt;-O1&lt;/code&gt; 에 의해 대체 되면 -fspecialise 가 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="f35ee646fea69003a7dba16f6a9ae639f1cb0536" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-fspecialise&lt;/code&gt; will not be enabled, since the &lt;code&gt;-fno-specialise&lt;/code&gt; overrides the &lt;code&gt;-fspecialise&lt;/code&gt; implied by &lt;code&gt;-O1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-fspecialise&lt;/code&gt; 는 때문에 활성화되지 않습니다 &lt;code&gt;-fno-specialise&lt;/code&gt; 재정 &lt;code&gt;-fspecialise&lt;/code&gt; 암시 &lt;code&gt;-O1&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="3def9b94ec2df44d2f88d2b2be757755fc740c11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g0&lt;/code&gt;: no debug information produced</source>
          <target state="translated">&lt;code&gt;-g0&lt;/code&gt; : 디버그 정보가 생성되지 않습니다</target>
        </trans-unit>
        <trans-unit id="b2392fe7cec3729109380cf981f9f5afab3bb143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g1&lt;/code&gt;: produces stack unwinding records for top-level functions (sufficient for basic backtraces)</source>
          <target state="translated">&lt;code&gt;-g1&lt;/code&gt; : 최상위 기능에 대한 스택 해제 레코드를 생성합니다 (기본 역 추적에 충분 함)</target>
        </trans-unit>
        <trans-unit id="0dba26f5e419b8d0d4f35d19a145925c86e9bd21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g2&lt;/code&gt;: produces stack unwinding records for top-level functions as well as inner blocks (allowing more precise backtraces than with &lt;code&gt;-g1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;-g2&lt;/code&gt; : 내부 블록뿐만 아니라 최상위 기능에 대한 스택 해제 레코드를 생성합니다 ( &lt;code&gt;-g1&lt;/code&gt; 보다 더 정확한 역 추적 허용 ).</target>
        </trans-unit>
        <trans-unit id="553f83a331582237d9731f2b4acd0a7dcc720869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g3&lt;/code&gt;: same as &lt;code&gt;-g2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-g3&lt;/code&gt; : &lt;code&gt;-g2&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="a166323a1f5e3746821d5952f0cbe4bac7841638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m0&lt;/code&gt; requests the band limit to be removed. As many bands as necessary are produced. However no key is produced as it won&amp;rsquo;t fit! It is useful for displaying creation time profiles with many bands.</source>
          <target state="translated">&lt;code&gt;-m0&lt;/code&gt; 은 대역 제한을 제거하도록 요청합니다. 필요한만큼의 밴드가 생성됩니다. 그러나 적합하지 않으므로 키가 생성되지 않습니다! 많은 밴드와 함께 생성 시간 프로파일을 표시하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="27806393938aedb693d140a511f9eb562b67aff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-package&lt;/code&gt; supports thinning and renaming described in &lt;a href=&quot;#package-thinning-and-renaming&quot;&gt;Thinning and renaming modules&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-package&lt;/code&gt; 는 &lt;a href=&quot;#package-thinning-and-renaming&quot;&gt;Thinning 및 Renaming 모듈에&lt;/a&gt; 설명 된 Thinning 및 Renaming을 지원 합니다 .</target>
        </trans-unit>
        <trans-unit id="f5aa924a9e8e61f39f12258f36c6c5551cda9339" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-rtsopts&lt;/code&gt; does not affect RTS options passed via &lt;code&gt;-with-rtsopts&lt;/code&gt;; those are used regardless of &lt;code&gt;-rtsopts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-rtsopts&lt;/code&gt; 는 -with &lt;code&gt;-with-rtsopts&lt;/code&gt; 를 통해 전달 된 RTS 옵션에 영향을 미치지 않습니다 . 이것들은 &lt;code&gt;-rtsopts&lt;/code&gt; 와 상관없이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2d1bc60acc06e846b80883c0f85653d7c7eb1fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t0&lt;/code&gt; requests no trace elements to be removed from the profile, ensuring that all the data will be displayed.</source>
          <target state="translated">&lt;code&gt;-t0&lt;/code&gt; 은 모든 데이터가 표시되도록 프로파일에서 추적 요소 제거를 요청하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09fba409885738e7e3293b42e6afb15e8289d14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-⟨x⟩&lt;/code&gt; &amp;mdash; disable the given class of events, for any event class listed above</source>
          <target state="translated">&lt;code&gt;-⟨x⟩&lt;/code&gt; &amp;mdash; 위에 나열된 이벤트 클래스에 대해 지정된 이벤트 클래스를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="8ff6e2628527b62d9cb31384ed6254560ed7c57c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.hc&lt;/code&gt; or &lt;code&gt;.c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.hc&lt;/code&gt; 또는 &lt;code&gt;.c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1c90a4b1c34e89b2d2bf769a491e30893fcc364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.hc&lt;/code&gt;, &lt;code&gt;.s&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.hc&lt;/code&gt; , &lt;code&gt;.s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="139f7c87cf39cd65bb6ae840341d01159026231c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.hs&lt;/code&gt; (with &lt;code&gt;-cpp&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;.hs&lt;/code&gt; ( &lt;code&gt;-cpp&lt;/code&gt; 사용 )</target>
        </trans-unit>
        <trans-unit id="6cbd732e56bdbdca06f5c3d625563ae3d82bc67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0#&lt;/code&gt; if &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is definitely not a prime.</source>
          <target state="translated">&lt;code&gt;0#&lt;/code&gt; &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; 이 소수가 아닌 경우 0 #</target>
        </trans-unit>
        <trans-unit id="a27e7f460a2236ca1d17fd07c416f3588e359bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; which is represented as a 1-limb.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 은 1- 림으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="be119dd65be819cf327ae6004f71de654945f03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.01&lt;/code&gt; is the same as &lt;code&gt;1/256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.01&lt;/code&gt; 은 &lt;code&gt;1/256&lt;/code&gt; 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="da0bf5fe83fb4819f0187ac5ee76e26fbabaff09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1&lt;/code&gt; is the same as &lt;code&gt;1/16&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1&lt;/code&gt; 은 &lt;code&gt;1/16&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="97e16b3020cce2dbad319b4314b56c5bf4227e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1p-4&lt;/code&gt; is the same as &lt;code&gt;1/256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1p-4&lt;/code&gt; 는 &lt;code&gt;1/256&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="a4bb9c8965e44869786553c787707843f79df510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1p12&lt;/code&gt; is the same as &lt;code&gt;256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1p12&lt;/code&gt; 는 &lt;code&gt;256&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="d2382fd4bbe0055b1cf5044a51cc388ccd2d5754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1p4&lt;/code&gt; is the same as &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1p4&lt;/code&gt; 는 &lt;code&gt;1&lt;/code&gt; 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dae497c696d8d46d1345c86623f665eb1d9138c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0xF.FF&lt;/code&gt; is the same as &lt;code&gt;15 + 15/16 + 15/256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0xF.FF&lt;/code&gt; 는 &lt;code&gt;15 + 15/16 + 15/256&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="848a182a5e20d6bbd54472f2f27db9da3955f2f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1#&lt;/code&gt; if &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is a &lt;em&gt;probable prime&lt;/em&gt;, or</source>
          <target state="translated">&lt;code&gt;1#&lt;/code&gt; &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; 이 &lt;em&gt;소수&lt;/em&gt; 일 &lt;em&gt;가능성&lt;/em&gt; 이있는 경우</target>
        </trans-unit>
        <trans-unit id="d737289d95acfd65f5c88c77f05bfeba4e331acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2#&lt;/code&gt; is returned if &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is definitely prime,</source>
          <target state="translated">&lt;code&gt;2#&lt;/code&gt; &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; 이 확실히 소수 이면 2 # 이 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="37a4c5145d90d0657a413c45ab5cf410e055bff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3##&lt;/code&gt; has type &lt;code&gt;Word#&lt;/code&gt;. In general, any non-negative Haskell integer lexeme followed by &lt;code&gt;##&lt;/code&gt; is a &lt;code&gt;Word#&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;3##&lt;/code&gt; 에는 &lt;code&gt;Word#&lt;/code&gt; 유형이 있습니다. 일반적으로 음수가 아닌 Haskell 정수 lexeme 다음에 &lt;code&gt;##&lt;/code&gt; 이 있으면 &lt;code&gt;Word#&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="809472264c9b3cda25f8db9c19de8c2f07bb6b48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3#&lt;/code&gt; has type &lt;code&gt;Int#&lt;/code&gt;. In general, any Haskell integer lexeme followed by a &lt;code&gt;#&lt;/code&gt; is an &lt;code&gt;Int#&lt;/code&gt; literal, e.g. &lt;code&gt;-0x3A#&lt;/code&gt; as well as &lt;code&gt;32#&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;3#&lt;/code&gt; 에는 &lt;code&gt;Int#&lt;/code&gt; 유형이 있습니다. 일반적으로 &lt;code&gt;#&lt;/code&gt; 다음에 오는 Haskell 정수 lexeme 은 &lt;code&gt;Int#&lt;/code&gt; 리터럴입니다 (예 : &lt;code&gt;-0x3A#&lt;/code&gt; 및 &lt;code&gt;32#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30cfbcf2108a8d771c78517dc7698860ab40b3d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3.2##&lt;/code&gt; has type &lt;code&gt;Double#&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;3.2##&lt;/code&gt; 에는 &lt;code&gt;Double#&lt;/code&gt; 유형이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eeddb35b5b1e9bb90f4ab5701abe8a12226e9d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3.2#&lt;/code&gt; has type &lt;code&gt;Float#&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;3.2#&lt;/code&gt; 에는 &lt;code&gt;Float#&lt;/code&gt; 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ea1bb6035a270af870f5f8f28c44b4270776188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned if the handle was already closed. Otherwise a PID is returned that remains valid as long as the handle is open. The operating system may reuse the PID as soon as the last handle to the process is closed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 핸들이 이미 닫혀 있으면 아무 것도 반환 되지 않습니다 . 그렇지 않으면 핸들이 열려있는 동안 유효한 상태로 유지되는 PID가 리턴됩니다. 프로세스의 마지막 핸들이 닫히 자마자 운영 체제가 PID를 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bcd02571a583f11435895429cd46f8786dc3d8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; capabilities will work with software-based terminal types such as &lt;code&gt;xterm&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt;. However, you should use &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; if compatibility with older terminals is important. Additionally, the &lt;code&gt;visualBell&lt;/code&gt; capability which flashes the screen usually produces its effect with a padding directive, so it will only work with &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 기능은 &lt;code&gt;xterm&lt;/code&gt; 및 &lt;code&gt;linux&lt;/code&gt; 와 같은 소프트웨어 기반 터미널 유형에서 작동합니다. 그러나이전 터미널과의 호환성이 중요한 경우 &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; 을 사용해야합니다. 또한화면을 깜박이는 &lt;code&gt;visualBell&lt;/code&gt; 기능은 일반적으로 패딩 지시문으로 효과를 &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; 에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bdddabeefeed501c7e06590b97c6284d6fd7a56c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s are often passed to functions that require them to be null-terminated. If the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; wasn't null terminated, neither will the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; be. It is the programmers responsibility to guarantee that the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; is indeed null terminated. If in doubt, use &lt;code&gt;useAsCString&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; 은 종종 null로 끝나야하는 함수로 전달됩니다. 원래 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 이 null로 종료되지 않은 경우 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; 도 마찬가지입니다. &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 이 실제로 null로 종료되도록 보장하는 것은 프로그래머의 책임입니다. &lt;code&gt;useAsCString&lt;/code&gt; 경우 useAsCString을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="40bdb818f8a1ed05a96dffff49e80c5a3e4b8f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; deriving</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; 도출</target>
        </trans-unit>
        <trans-unit id="a177d0a03c43d8f4d7516be8ecc65b0dc95b82fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; if the handle is a pipe or socket, and the reading end is closed. (If this is a POSIX system, and the program has not asked to ignore SIGPIPE, then a SIGPIPE may be delivered instead, whose default action is to terminate the program).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; 핸들이 파이프 또는 소켓이고 판독 끝이 닫히면 ResourceVanished 입니다. (이 시스템이 POSIX 시스템이고 프로그램이 SIGPIPE를 무시하도록 요청하지 않은 경우 대신 SIGPIPE가 전달 될 수 있으며 기본 조치는 프로그램을 종료하는 것입니다).</target>
        </trans-unit>
        <trans-unit id="cbcdfda349c50f1a8d22fb86563c3232d3a85a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; 을통해 제공된 핸들 은 자동으로 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2dc084cfdb3f129240bd4d4a087d065e23de9723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; 을통해 제공된 핸들 은 자동으로 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="001e53a137e59bebbe51172dbdef181fe8f6ce05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations in this package may throw any &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;. No other types of exceptions shall be thrown.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 이 패키지의 IO 작업으로 인해 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 가 발생할 수 있습니다. 다른 유형의 예외는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6b36448e55a53b7e52e1c0058f1ad1ff3974bb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources (virtual memory, process file descriptors, physical disk space, etc.) are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행하기에 리소스가 부족합니다 (가상 메모리, 프로세스 파일 디스크립터, 물리 디스크 공간 등). &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f2c71aab301bfa94557cd824b0a13f9ea89d66b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행 할 수있는 리소스가 부족합니다.</target>
        </trans-unit>
        <trans-unit id="059d61b9d057c893c02f83b627b00c09ca8a79e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행 할 수있는 리소스가 부족합니다. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2712b8b8e00758dd16d811f3409320332b670a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행 할 수있는 리소스가 부족합니다. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f7e028b42c651c40b10c913ede3d8536eb7431f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the environment variable does not exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 환경 변수가 없으면 isDoesNotExistError 입니다.</target>
        </trans-unit>
        <trans-unit id="77ecf14281653812e3375e729f35f38ffe7d1f3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 장치가 가득 찬 경우 isFullError ;</target>
        </trans-unit>
        <trans-unit id="a95f95a2369ee402f6d985ce7278559f794192f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 장치가 가득 찬 경우 isFullError ; 또는</target>
        </trans-unit>
        <trans-unit id="abe0127fb83d2a0444e9e620140fd6c7d7bd7685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 시스템 리소스 제한을 초과하면 isPermissionError 이러한 상황에서 버퍼의 문자가 버려지거나 유지되는지 여부는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c511dd6d9aec607ac4049f7f35e8036133da723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned if the handle was already closed. Otherwise a PID is returned that remains valid as long as the handle is open. The operating system may reuse the PID as soon as the last handle to the process is closed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 핸들이 이미 닫혀 있으면 아무 것도 반환 되지 않습니다 . 그렇지 않으면 핸들이 열려있는 동안 유효한 PID가 반환됩니다. 운영 체제는 프로세스에 대한 마지막 핸들이 닫히 자마자 PID를 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="535032173c349a258621664091c8723e768de6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; capabilities will work with software-based terminal types such as &lt;code&gt;xterm&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt;. However, you should use &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; if compatibility with older terminals is important. Additionally, the &lt;code&gt;visualBell&lt;/code&gt; capability which flashes the screen usually produces its effect with a padding directive, so it will only work with &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; capabilities will work with software-based terminal types such as &lt;code&gt;xterm&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt; . However, you should use &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; if compatibility with older terminals is important. Additionally, the &lt;code&gt;visualBell&lt;/code&gt; capability which flashes the screen usually produces its effect with a padding directive, so it will only work with &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d267e48dfdb3dff0f39c237d586bb819236521d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s are often passed to functions that require them to be null-terminated. If the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; wasn't null terminated, neither will the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; be. It is the programmers responsibility to guarantee that the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; is indeed null terminated. If in doubt, use &lt;code&gt;useAsCString&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; s are often passed to functions that require them to be null-terminated. If the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; wasn't null terminated, neither will the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; be. It is the programmers responsibility to guarantee that the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; is indeed null terminated. If in doubt, use &lt;code&gt;useAsCString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18d37ef87eb89402069ac3a60a6b52ddfc0872ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; deriving</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; deriving</target>
        </trans-unit>
        <trans-unit id="37fdac6558adbe18e3bc87e8515a217662920f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; if the handle is a pipe or socket, and the reading end is closed. (If this is a POSIX system, and the program has not asked to ignore SIGPIPE, then a SIGPIPE may be delivered instead, whose default action is to terminate the program).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; if the handle is a pipe or socket, and the reading end is closed. (If this is a POSIX system, and the program has not asked to ignore SIGPIPE, then a SIGPIPE may be delivered instead, whose default action is to terminate the program).</target>
        </trans-unit>
        <trans-unit id="8cb74bdff366fd8ebaa69c1e21b8e4e19b6baf47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; 을통해 제공된 핸들 은 자동으로 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="386a8469006ef5fb151284805141652ac61bce50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; 을통해 제공된 핸들 은 자동으로 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="46cce5e52381daea5e563356cd5a69665194f2f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations in this package may throw any &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;. No other types of exceptions shall be thrown.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations in this package may throw any &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; . No other types of exceptions shall be thrown.</target>
        </trans-unit>
        <trans-unit id="6efda23742927a5e40c89e5a7d4da5c88d154956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources (virtual memory, process file descriptors, physical disk space, etc.) are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources (virtual memory, process file descriptors, physical disk space, etc.) are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7158ccd0c07e772ba56b392de636dcba3236c2b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation.</target>
        </trans-unit>
        <trans-unit id="bc2fadc1472b1de49ccad3721d32ba93cda8cb3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1024bd6ca7d98b416793ded2bbbc75e0ff0adee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db958fa17eaf189debfb45b2f1cbb3e797e9297b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the environment variable does not exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the environment variable does not exist.</target>
        </trans-unit>
        <trans-unit id="1b071d102feddeab122caef2af3b7b0fc1dbba4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full;</target>
        </trans-unit>
        <trans-unit id="218c0a18dbb2f6736310f880bbcce9739829ed72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full; or</target>
        </trans-unit>
        <trans-unit id="59db716d96b331c9ac1b0effe5390501d1d6b7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances.</target>
        </trans-unit>
        <trans-unit id="c747a915d9b1408c53c77c14cbc1c9df64a6112f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:-60--42-&quot;&gt;&amp;lt;*&lt;/a&gt;&lt;/code&gt; takes time and space proportional to the product of the length of its first argument and the logarithm of the length of its second argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:-60--42-&quot;&gt;&amp;lt;*&lt;/a&gt;&lt;/code&gt; 는 첫 번째 인수의 길이와 두 번째 인수의 길이에 대한 로그의 곱에 비례하는 시간과 공간을 취합니다.</target>
        </trans-unit>
        <trans-unit id="ba7acd8e371ecb61a367c04a417f21a096acc9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; each take time and space proportional to the logarithm of the size of their result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; 는 각각 결과 크기의 로그에 비례하는 시간과 공간을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="52c8d5d28baf607dc9b32d392c3610b2dcfb343d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned if the handle was already closed. Otherwise a PID is returned that remains valid as long as the handle is open. The operating system may reuse the PID as soon as the last handle to the process is closed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 핸들이 이미 닫혀 있으면 아무 것도 반환 되지 않습니다 . 그렇지 않으면 핸들이 열려있는 동안 유효한 PID가 반환됩니다. 운영 체제는 프로세스에 대한 마지막 핸들이 닫히 자마자 PID를 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="675390f43d3c29d735201905efa14745d9ec88b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; capabilities will work with software-based terminal types such as &lt;code&gt;xterm&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt;. However, you should use &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; if compatibility with older terminals is important. Additionally, the &lt;code&gt;visualBell&lt;/code&gt; capability which flashes the screen usually produces its effect with a padding directive, so it will only work with &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 기능은 &lt;code&gt;xterm&lt;/code&gt; 및 &lt;code&gt;linux&lt;/code&gt; 와 같은 소프트웨어 기반 터미널 유형에서 작동합니다. 그러나이전 터미널과의 호환성이 중요한 경우 &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; 을 사용해야합니다. 또한화면을 깜박이는 &lt;code&gt;visualBell&lt;/code&gt; 기능은 일반적으로 패딩 지시문을 사용하여 그 효과를 생성하므로 &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; 에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d0827f5334890b7a5f20505d74ed58139ca23152" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s are often passed to functions that require them to be null-terminated. If the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; wasn't null terminated, neither will the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; be. It is the programmers responsibility to guarantee that the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; is indeed null terminated. If in doubt, use &lt;code&gt;&lt;a href=&quot;data-bytestring#v:useAsCString&quot;&gt;useAsCString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; 은 종종 null로 끝나야하는 함수에 전달됩니다. 원래 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 이 null로 종료되지 않은 경우 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; 도 마찬가지입니다. &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 이 실제로 null로 종료되도록 보장하는 것은 프로그래머의 책임입니다. &lt;code&gt;&lt;a href=&quot;data-bytestring#v:useAsCString&quot;&gt;useAsCString&lt;/a&gt;&lt;/code&gt; 경우 useAsCString을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="23742e167f9131763245e7b42a4eb9d2d5a7e83a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; deriving</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; 파생</target>
        </trans-unit>
        <trans-unit id="335aee874f004591c07a97a8e67f839ea1806bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; if the handle is a pipe or socket, and the reading end is closed. (If this is a POSIX system, and the program has not asked to ignore SIGPIPE, then a SIGPIPE may be delivered instead, whose default action is to terminate the program).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; 핸들이 파이프 또는 소켓이고 읽기 끝이 닫힌 경우 ResourceVanished . (이 시스템이 POSIX 시스템이고 프로그램이 SIGPIPE를 무시하도록 요청하지 않은 경우 SIGPIPE가 대신 전달 될 수 있으며 기본 동작은 프로그램을 종료하는 것입니다).</target>
        </trans-unit>
        <trans-unit id="c88d50ed8f19d40889317816ac5de27f01e010b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; 을통해 제공된 핸들 은 자동으로 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a3cf45fd65563aeb7c5207e4dfd0184e39f4a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; 을통해 제공된 핸들 은 자동으로 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a6f4e5aa6fcf9af6dd2feef13a20977916a66e69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations in this package may throw any &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;. No other types of exceptions shall be thrown.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 이 패키지의 IO 작업은 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 를 발생 시킬 수 있습니다. 다른 유형의 예외는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="48d98fdf4764a17aa4c4ced340a67c157ffbbfa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources (virtual memory, process file descriptors, physical disk space, etc.) are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행하는 데 사용할 수있는 리소스 (가상 메모리, 프로세스 파일 설명자, 물리적 디스크 공간 등)가 부족합니다. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d3a8b91d3afd25fbc1c127bac91b6537363d2ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행하는 데 사용할 수있는 리소스가 부족합니다.</target>
        </trans-unit>
        <trans-unit id="3ea7ca400b86eddb1e7c36763331a50a41efb83e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행하는 데 사용할 수있는 리소스가 부족합니다. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3eb379d41846fac126bfcfe68612dfa9570eb83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 작업을 수행하는 데 사용할 수있는 리소스가 부족합니다. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c420b04ab17c8e267a64f7e6e691c94df0dc5d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the environment variable does not exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 환경 변수가 존재하지 않는 경우 isDoesNotExistError 입니다.</target>
        </trans-unit>
        <trans-unit id="0a6edbaa43f095e349b0f9c20bfd857075a2da69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 장치가 가득 찬 경우 isFullError ;</target>
        </trans-unit>
        <trans-unit id="f59e4f5e39aec23c247e5adb1ef6675e328e33da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 장치가 가득 찬 경우 isFullError ; 또는</target>
        </trans-unit>
        <trans-unit id="8d452ec8160615a8667857f9baa923b5df5e46ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 시스템 리소스 제한을 초과하는 경우 isPermissionError 입니다. 이러한 상황에서 버퍼의 문자가 버려지거나 유지되는지 여부는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="064743980f7812542b52b8e77358b40c285462df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;b#v:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; shared substring: 5 words; 20 or 40 bytes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;b#v:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 공유 부분 문자열 : 5 단어; 20 또는 40 바이트.</target>
        </trans-unit>
        <trans-unit id="8af074998272d1dc52885f917568a4906214e410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;b#v:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; unshared: 9 words; 36 or 72 bytes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;b#v:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 공유되지 않은 ByteString : 9 단어; 36 또는 72 바이트.</target>
        </trans-unit>
        <trans-unit id="dc722512e5c50c43da422a998bbd6af06647e5e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent#v:myThreadId&quot;&gt;myThreadId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent#v:myThreadId&quot;&gt;myThreadId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d9b83b369ab8138a70e9847f8a2c09d88b8bd23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="a6b33fd99f4068833805c851d6303d9fe4f7e125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="bd1371ad19ecaffa67a429a7446e704e474120ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="5da42b3fbc3fe76f4a04f453d0990af00d2c939e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; raises an arbitrary exception in the target thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; 대상 스레드에서 임의의 예외를 발생시킵니다 (GHC 만 해당).</target>
        </trans-unit>
        <trans-unit id="388568801e446b218c934adcb9bdd96bef3cc42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; is an abstract type representing an unbounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; 은 무제한 FIFO 채널을 나타내는 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="878ae4949965ef2048b765910a175635a2f93b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; operations are always observed to take place in the order they are written in the program, regardless of the memory model of the underlying machine. This is in contrast to &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; operations which may appear out-of-order to another thread in some cases.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 작업은 기본 시스템의 메모리 모델에 관계없이 프로그램에 작성된 순서대로 항상 수행됩니다. 이는경우에 따라 다른 스레드와 순서가 다르게 나타날 수있는 &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; 작업과 대조됩니다.</target>
        </trans-unit>
        <trans-unit id="9b2ff7bce8cfe6331fc24a8585be5429641daf47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;s offer more flexibility than &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;s, but less flexibility than &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt;. They are appropriate for building synchronization primitives and performing simple interthread communication; however they are very simple and susceptible to race conditions, deadlocks or uncaught exceptions. Do not use them if you need perform larger atomic operations such as reading from multiple variables: use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; 보다 더 많은 유연성을 제공하지만 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; 보다 더 적은 유연성을제공합니다. 동기화 프리미티브를 빌드하고 간단한 스레드 간 통신을 수행하는 데 적합합니다. 그러나 경쟁 조건, 교착 상태 또는 포착되지 않은 예외에 매우 간단하고 취약합니다. 여러 변수에서 읽는 것과 같이 더 큰 원자 연산을 수행해야하는 경우이를 사용하지 마십시오. 대신 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aad1c295086f97746132c22aae6ec6f28cdfb3eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newEmptyMVar&quot;&gt;newEmptyMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newMVar&quot;&gt;newMVar&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newEmptyMVar&quot;&gt;newEmptyMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newMVar&quot;&gt;newMVar&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ffe05a315c590497a031ba474560b9761c07f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes empty, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 는 싱글 웨이크 업입니다. 차단 여러 스레드가있는 경우 즉, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 이 , 그리고 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 빈되고, 하나의 스레드 만이 깨어됩니다. 런타임은 깨어 난 스레드가 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 작업을완료하도록 보장 합니다.</target>
        </trans-unit>
        <trans-unit id="7d63ae75e5613b14d2e96bab37de58191a8ff213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; is multiple-wakeup, so when multiple readers are blocked on an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, all of them are woken up at the same time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 는 다중 웨이크 업이므로 여러 판독기가 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 에서차단되면 모든판독기가동시에 깨어납니다.</target>
        </trans-unit>
        <trans-unit id="eac7956a39f185e8aaaeb7dd4ed02cf9da670b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is definitely full, and conversely &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is definitely empty</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 경우 생성 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 확실히 전체, 반대로하다 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 경우 생성 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 확실히 비어</target>
        </trans-unit>
        <trans-unit id="47084a07ef5c8e6d7e48cbb5e35ddae0b5f1e0da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes full, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 는 싱글 웨이크 업입니다. 차단 여러 스레드가있는 경우 즉, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 이 , 그리고 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 가득 차면, 하나의 스레드 만이 깨어됩니다. 런타임은 깨어 난 스레드가 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 작업을완료하도록 보장 합니다.</target>
        </trans-unit>
        <trans-unit id="20d02f989a568c67798d961cb4e1cc5319f17110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:isEmptyMVar&quot;&gt;isEmptyMVar&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:isEmptyMVar&quot;&gt;isEmptyMVar&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29ac2f42428da8f043e6d8784bbf55bd5dc64d28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt; is an exception-safe wrapper for operating on the contents of an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. This operation is exception-safe: it will replace the original contents of the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; if an exception is raised (see &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;). However, it is only atomic if there are no other producers for this &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt; 는 의 내용에 운영에 대한 예외 안전 래퍼입니다 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . 이 작업은 예외 안전합니다.예외가 발생하면 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 의 원래 내용을 대체합니다(&lt;a href=&quot;control-exception&quot;&gt; Control.Exception&lt;/a&gt; 참조). 그러나이 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 의 다른 생산자가없는 경우에는 원 자성 입니다.</target>
        </trans-unit>
        <trans-unit id="10470ea7eabb3f813e744d134773a1eb9fea0ac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#t:QSem&quot;&gt;QSem&lt;/a&gt;&lt;/code&gt; is a quantity semaphore in which the resource is acquired and released in units of one. It provides guaranteed FIFO ordering for satisfying blocked &lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#v:waitQSem&quot;&gt;waitQSem&lt;/a&gt;&lt;/code&gt; calls.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#t:QSem&quot;&gt;QSem&lt;/a&gt;&lt;/code&gt; 은 자원이 하나의 단위로 획득 및 릴리스되는 수량 세마포어입니다. 차단 된 &lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#v:waitQSem&quot;&gt;waitQSem&lt;/a&gt;&lt;/code&gt; 호출을 만족시키기 위해 보장 된 FIFO 순서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="57adbd171a852b6408aa0ee391c135b85b64c1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#t:QSemN&quot;&gt;QSemN&lt;/a&gt;&lt;/code&gt; is a quantity semaphore in which the resource is acquired and released in units of one. It provides guaranteed FIFO ordering for satisfying blocked &lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#v:waitQSemN&quot;&gt;waitQSemN&lt;/a&gt;&lt;/code&gt; calls.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#t:QSemN&quot;&gt;QSemN&lt;/a&gt;&lt;/code&gt; 은 자원이 하나의 단위로 획득 및 해제되는 수량 세마포어입니다. 차단 된 &lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#v:waitQSemN&quot;&gt;waitQSemN&lt;/a&gt;&lt;/code&gt; 호출을 만족시키기 위해 보장 된 FIFO 순서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="baa0a00c678205cd61458e38e6f5d08dde5e5cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is a bounded version of &lt;code&gt;TQueue&lt;/code&gt;. The queue has a maximum capacity set when it is created. If the queue already contains the maximum number of elements, then &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:writeTBQueue&quot;&gt;writeTBQueue&lt;/a&gt;&lt;/code&gt; blocks until an element is removed from the queue.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 는 의 제한된 버전입니다 &lt;code&gt;TQueue&lt;/code&gt; . 대기열은 생성 될 때 최대 용량으로 설정됩니다. 큐에 이미 최대 개수의 요소가 포함 된 경우 요소가 큐에서 제거 될 때까지 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:writeTBQueue&quot;&gt;writeTBQueue&lt;/a&gt;&lt;/code&gt; 가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="38cc2230cc233c39c3976b3a11f57add18f387ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is an abstract type representing a bounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 는 제한된 FIFO 채널을 나타내는 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="67291e93091172577522c614a58cd27fa06f59b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; is an abstract type representing an unbounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 은 무한 FIFO 채널을 나타내는 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="a2ebc7038586cc31b699bdb96907420cd10eb337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is an abstract type representing an unbounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 는 무제한 FIFO 채널을 나타내는 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="901bf595fcb1ccf460e62703c972d81d5bf0b70b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; is a transactional semaphore. It holds a certain number of units, and units may be acquired or released by &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:signalTSem&quot;&gt;signalTSem&lt;/a&gt;&lt;/code&gt; respectively. When the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; is empty, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; 은 트랜잭션 세마포어입니다. 특정 수의 단위를 보유하며, 단위는각각 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:signalTSem&quot;&gt;signalTSem&lt;/a&gt;&lt;/code&gt; 에 의해 획득 또는 해제 될 수있다. 때 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; 비어 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; 의 블록.</target>
        </trans-unit>
        <trans-unit id="b0ee04a12bf673b21f99b32245e1ddc093e477d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt;: transactional semaphores.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; : 트랜잭션 세마포어.</target>
        </trans-unit>
        <trans-unit id="a9dd4ac92b4520177d7bdf60b6439642ef19e816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; can be useful for forcing pending exceptions, eradicating space leaks, or forcing lazy I/O to happen. It is also useful in conjunction with parallel Strategies (see the &lt;code&gt;parallel&lt;/code&gt; package).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; 는 보류중인 예외를 강제 실행하거나 공간 누출을 제거하거나 지연 I / O를 발생시키는 데 유용 할 수 있습니다. 병렬 전략과 함께 사용하면 유용합니다 ( &lt;code&gt;parallel&lt;/code&gt; 패키지참조).</target>
        </trans-unit>
        <trans-unit id="89f6a6fa7f01287ab72ba6df125445f2130f9384" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; as it traverses data structures deeply, for example, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; will evaluate only to the first constructor in the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; 는데이터 구조를 깊게 통과하므로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; 와 다릅니다.예를 들어 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; 는 목록의 첫 번째 생성자 만 평가합니다.</target>
        </trans-unit>
        <trans-unit id="5e7083c2d06cb2476baa53a418a822fb187866c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; as it traverses data structures deeply, for example, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; will evaluate only to the first constructor in the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; as it traverses data structures deeply, for example, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; will evaluate only to the first constructor in the list:</target>
        </trans-unit>
        <trans-unit id="941c9adf3004c8bf322b9695968bd28ae44a3333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; as it traverses data structures deeply, for example, &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; will evaluate only to the first constructor in the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; 는데이터 구조를 깊게 탐색하므로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; 와 다릅니다.예를 들어 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; 는 목록의 첫 번째 생성자 만 평가합니다.</target>
        </trans-unit>
        <trans-unit id="a01bfa7769768e8ae2414adac41603b61441b16d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt;: fully evaluates the first argument, before returning the second.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; : 두 번째를 반환하기 전에 첫 번째 인수를 완전히 평가합니다.</target>
        </trans-unit>
        <trans-unit id="21ed2aeeb05386f8b706260b2ead022cf48add36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; can be conveniently used in combination with &lt;code&gt;ViewPatterns&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; &lt;code&gt;ViewPatterns&lt;/code&gt; 와 함께 힘 을 편리하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd36ff59c3f224ee6b0fb6af97f9306f24317a01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt; should reduce its argument to normal form (that is, fully evaluate all sub-components), given an argument to reduce &lt;code&gt;a&lt;/code&gt; arguments, and then return &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt; 가 감소 인수 주어, (즉, 완전히 모든 하위 구성 요소를 평가) 정상 형태의 인수를 줄여야합니다인수를 한 후 반환 &lt;code&gt;()&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7778955e3a371a445a0d4d619f79c035bb646ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt; should reduce its argument to normal form (that is, fully evaluate all sub-components), given functions to reduce &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; arguments respectively, and then return &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt; 는 정상적인 형태로 인수를 (즉, 완전히 모든 하위 구성 요소를 평가) 감소한다 줄일 수있는 기능을 제공 &lt;code&gt;a&lt;/code&gt; 하고 &lt;code&gt;b&lt;/code&gt; 각각 인수 한 후 반환 &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1851b7c206dc58e7fa9bdb0f1d57dc2ce6fb69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; should reduce its argument to normal form (that is, fully evaluate all sub-components), and then return &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; 는 인수를 일반 형식 (즉, 모든 하위 구성 요소를 완전히 평가)으로 줄인 다음 &lt;code&gt;()&lt;/code&gt; 을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e273564c08276dd93dae6e6fc1a746349b6fb0ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; was applied to &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 에 적용되었습니다.</target>
        </trans-unit>
        <trans-unit id="2f7d960f0b7e377a693c2a0764e491d6c5dc3e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; is typically used to uncover any exceptions that a lazy value may contain, and possibly handle them.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; 는 일반적으로 지연 값에 포함될 수있는 예외를 발견하고 처리 할 수있는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a942c5f91b693489833ef7af82dddcc380cadd98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; only evaluates to &lt;em&gt;weak head normal form&lt;/em&gt;. If deeper evaluation is needed, the &lt;code&gt;force&lt;/code&gt; function from &lt;code&gt;Control.DeepSeq&lt;/code&gt; may be handy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; 는&lt;em&gt; 약한 머리 정상 형태&lt;/em&gt; 로만 평가됩니다. 보다 심도있는 평가가 필요한 경우 &lt;code&gt;Control.DeepSeq&lt;/code&gt; 의 &lt;code&gt;force&lt;/code&gt; 함수가 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91598790705a8b57d659b0f739546c591a2925cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; (also &lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt;) allows one running thread to raise an arbitrary exception in another thread. The exception is therefore asynchronous with respect to the target thread, which could be doing anything at the time it receives the exception. Great care should be taken with asynchronous exceptions; it is all too easy to introduce race conditions by the over zealous use of &lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; (또한 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; )를 사용하면 실행중인 스레드 하나가 다른 스레드에서 임의의 예외를 발생시킬 수 있습니다. 따라서 예외는 대상 스레드와 관련하여 비동기 적이며 예외를 수신 할 때 수행 할 수있는 작업입니다. 비동기식 예외에주의를 기울여야합니다. &lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; 를 과도하게 사용하여 경쟁 조건을 도입하는 것은 너무 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="199cfc43612e997ee088e3a05147f6949ed7d81f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; raises an arbitrary exception in the target thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; 대상 스레드에서 임의의 예외를 발생시킵니다 (GHC 만 해당).</target>
        </trans-unit>
        <trans-unit id="ec9113c7be07fa87d985ed32f0228aa3c5cdc308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; 은인수가 뒤집힌 &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; 입니다. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5723df6e950c4f3e0a095cfc262e74bd1b622939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; 은인수가 뒤집힌 &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; 입니다. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="14f41773a9b47e35d892b2f7a359716ee922ce45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; 이며 인수가 뒤집 힙니다 . 결과를 무시하지 않는 버전은 &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="35eca2396ff42ef48a57caa7aa7c255717c3409e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt;, but specialised to monadic actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 은 for_ 와 &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 하지만 모나 딕 작업에 특화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1701e4861dac86aeba88361e1a63c3caec780315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) ma = &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) mb&lt;/code&gt; implies &lt;code&gt;&lt;a href=&quot;control-monad-zip#v:munzip&quot;&gt;munzip&lt;/a&gt; (&lt;a href=&quot;control-monad-zip#v:mzip&quot;&gt;mzip&lt;/a&gt; ma mb) = (ma, mb)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) ma = &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) mb&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;control-monad-zip#v:munzip&quot;&gt;munzip&lt;/a&gt; (&lt;a href=&quot;control-monad-zip#v:mzip&quot;&gt;mzip&lt;/a&gt; ma mb) = (ma, mb)&lt;/code&gt; 의미 합니다 ( &lt;a href=&quot;control-monad-zip#v:mzip&quot;&gt;mzip&lt;/a&gt; ma mb) = (ma, mb)</target>
        </trans-unit>
        <trans-unit id="ebfe6e4c0f18b179cac916f688691d52fd99e9cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;, and the following example shows how &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; can apply an &lt;code&gt;IO&lt;/code&gt; action to a &lt;code&gt;List&lt;/code&gt; to produce a structured result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 에대해 &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; 되며 다음 예제는 &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; 이 &lt;code&gt;IO&lt;/code&gt; 작업을 &lt;code&gt;List&lt;/code&gt; 에적용하여구조화 된 결과를 생성하는방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6cd088105ce5b3244f6b831b27d6447d5cd6b5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt;, but specialised to monadic actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; 와 비슷하지만 모나 딕 작업에 특화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a86f32f3f3e763198e55780532e5f578d10336ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:msum&quot;&gt;msum&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:asum&quot;&gt;asum&lt;/a&gt;&lt;/code&gt;, but specialised to &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:msum&quot;&gt;msum&lt;/a&gt;&lt;/code&gt; 은 asum 과 &lt;code&gt;&lt;a href=&quot;data-foldable#v:asum&quot;&gt;asum&lt;/a&gt;&lt;/code&gt; 하지만 MonadPlus 에 특화되어 &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71485ff9fdd1a3f1053ea420349d8626d25d83d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt; n act&lt;/code&gt; performs the action &lt;code&gt;n&lt;/code&gt; times, gathering the results.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt; n act&lt;/code&gt; 는 조치를 &lt;code&gt;n&lt;/code&gt; 번수행하여 결과를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="f9228a7ac7a8f0512448a7d43ebc8ea517fc3b67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt;, but specialised to monadic actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; 와 비슷하지만 모나 딕 작업에 특화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a3b6482b2c00888a6305ad232a10fdd4f0ec1f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; discards or ignores the result of evaluation, such as the return value of an &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 동작의 반환 값과 같은 평가 결과를 무시하거나 무시합니다.</target>
        </trans-unit>
        <trans-unit id="36f8c53f58996e42fa4f5a33183783bad078e505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt;&lt;/code&gt; is the extension of &lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM&quot;&gt;zipWithM&lt;/a&gt;&lt;/code&gt; which ignores the final result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt;&lt;/code&gt; 은최종 결과를 무시하는 &lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM&quot;&gt;zipWithM&lt;/a&gt;&lt;/code&gt; 의 확장입니다.</target>
        </trans-unit>
        <trans-unit id="698766063baddfd4fac5dd9290cec119cd4cc7ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; can be used to add continuation handling to other monads. Here is an example how to combine it with &lt;code&gt;IO&lt;/code&gt; monad:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; 를 사용하여 다른 모나드에 연속 처리를 추가 할 수 있습니다. &lt;code&gt;IO&lt;/code&gt; 모나드와 결합하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a7824b0269c1c76e672c6e52873f1f7ffd5ea35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; is not a functor on the category of monads, and many operations cannot be lifted through it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; 는 모나드 범주의 기능 이 아니며 많은 작업을 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0f2455f1692d24276b4b43b81fa30b2e9ca22ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt;&lt;/code&gt; monad transformer can be used to add error handling to another monad. Here is an example how to combine it with an &lt;code&gt;IO&lt;/code&gt; monad:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt;&lt;/code&gt; 모나드 변환기를 사용하여 다른 모나드에 오류 처리를 추가 할 수 있습니다. &lt;code&gt;IO&lt;/code&gt; 모나드와 결합하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ed4b8f5d73dc64f3e094f053d41d8ae6056ad90f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; monad transformer can be used to add error handling to another monad. Here is an example how to combine it with an &lt;code&gt;IO&lt;/code&gt; monad:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; 모나드 변환기를 사용하여 다른 모나드에 오류 처리를 추가 할 수 있습니다. &lt;code&gt;IO&lt;/code&gt; 모나드와 결합하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8761e4cd3cd69368b5d04ea058b2b04ad9fb0890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; is the least fixed point of the function &lt;code&gt;f&lt;/code&gt;, i.e. the least defined &lt;code&gt;x&lt;/code&gt; such that &lt;code&gt;f x = x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; 함수의 상기 고정 점 인 &lt;code&gt;f&lt;/code&gt; , 즉 상기 정의 된 &lt;code&gt;x&lt;/code&gt; 되도록 &lt;code&gt;f x = x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45b283148f01ec708ddadc08ea2d9b6a13bf7e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h . f)  =  &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h (&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (f . h))&lt;/code&gt;, for strict &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h . f) = &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h (&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (f . h))&lt;/code&gt; 엄격한 &lt;code&gt;h&lt;/code&gt; 에 대한 mfix ( liftM h. f) = liftM h ( mfix (f. h)) .</target>
        </trans-unit>
        <trans-unit id="3e1ffd60008f8758bfd3cb40c03ea595d2233265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;(,) a&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt; a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 에 대한 인스턴스 &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; 에 대한 인스턴스 &lt;code&gt;(,) a&lt;/code&gt; 하고 &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt; a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60fafee8474dd6876b3bada419e2b9263c3418d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 초기 환경 및 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="09f8e2fd068f53ee10167decd1221596f1a4a432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; 은초기 환경 및 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="72a12f9e11c87be8767c053218699960d242faa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 초기 환경 및 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="210c30b435fa1c3e6425cc6f1e1f6fa165f5b2cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; 은초기 환경 및 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="83945982a75ccfb6b7a9b9884f44467948fd4e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; 호출 내부).</target>
        </trans-unit>
        <trans-unit id="59e7f35c18fff31407e103bcebcb993214d8250d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; 호출 내부).</target>
        </trans-unit>
        <trans-unit id="0c335eb28e505be318be38d4ec71606f73704e75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; 호출 내부).</target>
        </trans-unit>
        <trans-unit id="691de6ce30e3dcb71fe19b63fc831959e4faba91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; 호출 내부).</target>
        </trans-unit>
        <trans-unit id="309c39a88860f4949296061aa3654761045f6ba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeDupableInterleaveST&quot;&gt;unsafeDupableInterleaveST&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;ST a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeDupableInterleaveST&quot;&gt;unsafeDupableInterleaveST&lt;/a&gt;&lt;/code&gt; 를 사용하면 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 계산이 느리게 지연 될 수 있습니다. 유형의 값에 전달하면 &lt;code&gt;ST a&lt;/code&gt; 상기 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 의 값의 계산시에만 수행되는 &lt;code&gt;a&lt;/code&gt; 요구된다.</target>
        </trans-unit>
        <trans-unit id="65f0daaca84fb601b03fe27945e5627abc7f7496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeInterleaveST&quot;&gt;unsafeInterleaveST&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;ST a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeInterleaveST&quot;&gt;unsafeInterleaveST&lt;/a&gt;&lt;/code&gt; 를 사용하면 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 계산이 느리게 지연 될 수 있습니다. 유형의 값에 전달하면 &lt;code&gt;ST a&lt;/code&gt; 상기 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 의 값의 계산시에만 수행되는 &lt;code&gt;a&lt;/code&gt; 요구된다.</target>
        </trans-unit>
        <trans-unit id="ba1d8e87af69279a544f5e29ef94f15571547511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="197e5be67488f3f74fa5aac272fbc28bf739243b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="9876d907f27326fed4ec55432296520a8b50c52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="a3452d9c67bb062ea223eb8bd97dc9044b5a5c8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="fb2bceda70a98fe1240e06bad22c4bddaaff3dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-stm#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; catches any exception thrown by &lt;code&gt;m&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt;, using the function &lt;code&gt;f&lt;/code&gt; to handle the exception. If an exception is thrown, any changes made by &lt;code&gt;m&lt;/code&gt; are rolled back, but changes prior to &lt;code&gt;m&lt;/code&gt; persist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-stm#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; 는 예외 처리를 위해 &lt;code&gt;f&lt;/code&gt; 함수를 사용하여 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;m&lt;/code&gt; 에 의해 발생 된 모든 예외를 포착합니다. 예외가 발생하면 &lt;code&gt;m&lt;/code&gt; 에의한 모든 변경 사항이 롤백되지만 &lt;code&gt;m&lt;/code&gt; 이전의 변경 사항은유지됩니다.</target>
        </trans-unit>
        <trans-unit id="119f3d18dbd7ca2cd9d3c9d8c6ff62f182e22994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:add&quot;&gt;add&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:add&quot;&gt;add&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="494e22ba12b97aca4d77b2564abedba9fc5176ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; is an action that fetches all the previously accumulated output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; 은 이전에 누적 된 모든 출력을 가져 오는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="847767a23d1f75af58ec2e83454b87d6d26acdad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; is an action that retrieves a function of the previously accumulated output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; 은 이전에 누적 된 출력의 함수를 검색하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="a6ada2829e2d6bb1f9ca961e29190980627e0077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; is not a functor on the category of monads, and many operations cannot be lifted through it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; 는 모나드 범주의 기능 이 아니며 많은 작업을 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0064419145b5b0fd25beb8d9ce4639e928267932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:liftLocal&quot;&gt;liftLocal&lt;/a&gt; ask local&lt;/code&gt; yields a &lt;code&gt;local&lt;/code&gt; function for &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt; r m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:liftLocal&quot;&gt;liftLocal&lt;/a&gt; ask local&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt; r m&lt;/code&gt; rm에 대한 &lt;code&gt;local&lt;/code&gt; 함수를생성합니다.</target>
        </trans-unit>
        <trans-unit id="e68d2a9c61d5b6b9fcf3034a4ba7044af100a34b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt; m&lt;/code&gt; delimits the continuation of any &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt; m&lt;/code&gt; 임의의 지속 획정 &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 내부 &lt;code&gt;m&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="fedd75407707893d471834545d80a4dbed639827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt; m&lt;/code&gt; delimits the continuation of any &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt; m&lt;/code&gt; 임의의 지속 획정 &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt;&lt;/code&gt; 의 인사이드 &lt;code&gt;m&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b2c5253bbadcd6231f747beb43054d534ecb1bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt; f&lt;/code&gt; captures the continuation up to the nearest enclosing &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; and passes it to &lt;code&gt;f&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt; f&lt;/code&gt; 가까운 바깥 캡쳐 연속을 &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; 하고 건네 &lt;code&gt;f&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b1b77c8d74be46673729bbf4456ce78be79aee4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt; f&lt;/code&gt; captures the continuation up to the nearest enclosing &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt;&lt;/code&gt; and passes it to &lt;code&gt;f&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt; f&lt;/code&gt; 까지 가장 가까운 둘러싸 캡쳐는 계속 &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt;&lt;/code&gt; 과에 전달 &lt;code&gt;f&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="396c35f3d11f522294ffdf1374de1b38e67a49fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="98c3847addecd17900fa667f0186054cc4e09d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="ecdf565949562ae9adb390e3d51ad376f2217153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="4f65808261157a6bea2533c9183f417a1b610d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; 는현재 상태에 &lt;code&gt;f&lt;/code&gt; 를적용한 결과로 상태를 업데이트하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="93065003fa3064601b908d102f8b663edbed2566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="1674ac3f3fea573c9c436e5eaee26d1da34fc85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; 세트에 모나드 내 상태 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82fef3ae413351c10b605089ca602a0403d1c4f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; (&lt;a href=&quot;control-monad-trans-rws-cps#v:mapRWST&quot;&gt;mapRWST&lt;/a&gt; f m) r s = f (&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; m r s)&lt;/code&gt; mapRWST :: (m (a, s, w) -&amp;gt; n (b, s, w')) -&amp;gt; RWST r w s m a -&amp;gt; RWST r w' s n b</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; (&lt;a href=&quot;control-monad-trans-rws-cps#v:mapRWST&quot;&gt;mapRWST&lt;/a&gt; f m) r s = f (&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; m r s)&lt;/code&gt; mapRWST :: (m (a, s, w)-&amp;gt; n (b, s, w '))-&amp;gt; RWST rwsma-&amp;gt; RWST rw'snb</target>
        </trans-unit>
        <trans-unit id="e88ecea7ae61059e63d460764d50bed008ed875b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="705eeac78d7689170ccb3af60582c47a3f6c8484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 초기 환경 및 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="b5140e1fe6cc4e1ec436ab078fdd42b8b03f5c46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; 은초기 환경 및 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="e6530e8391bbe83f87d77c82b689ffda7a5353fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="3e0bea41cefb414c69ffca0f1721f0e77bb605b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="3a240f4de5d7ad104015be49cd313e421a597cd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="c3bc15ddb12d8ddaa0508c4c37236928ea1fd342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; 는현재 상태에 &lt;code&gt;f&lt;/code&gt; 를적용한 결과로 상태를 업데이트하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="e2cc1e583c0e0c93ab49ad5ae730bf00b75e254d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="72dc16540dcf502f2dfddd7ecfb7f2e3e1a037c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; 세트에 모나드 내 상태 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c98f4454e39780ffb79bd92d034ad11a2e6ac800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="ebe6da78b25010c4d7e9ab1580207ab0c2f0d9cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 초기 환경 및 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="da61bc7ac7e13de37dc9b78f815ef936d09725b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; 은초기 환경 및 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="ce8dc2c9f2d74236aaa2759032708d6efc2be004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="0aa5c5c9d57cdae54e02d2f12819cc886d4a992f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="c6f14a60f1e12e9e64b880f011e51a21cea54701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="211075725eddff85444a6eeab4c4a24b46b5fe3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; 는현재 상태에 &lt;code&gt;f&lt;/code&gt; 를적용한 결과로 상태를 업데이트하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="052bda782d9601c8c7749babbe1b5fe808da343a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="75ce6a9fad388082976aa1260bf6aa62ab65503a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; 세트에 모나드 내 상태 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89fae10a88789fc4e9c10d1cfd0886cb6ec1733c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="0fc070d499725015ac5d69349da6e4498ed269f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 초기 환경 및 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="6a59a13698fed4084e51cc698aa6d4bcaea81bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; 은초기 환경 및 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태로조치 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="d65399116a2ecd5ca4afa5fdf8d1116d82bf7943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-select#t:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; is not a functor on the category of monads, and many operations cannot be lifted through it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-select#t:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; 는 모나드 카테고리의 기능 이 아니며 많은 작업을 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea097c197e185944557cecf52b577ee2547699c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; 는현재 상태에 &lt;code&gt;f&lt;/code&gt; 를적용한 결과로 상태를 업데이트하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="f62dc5e0ca7bcdfed4fa90c8c63bd56c3030e479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; 세트에 모나드 내 상태 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20e955b7fdc3c64f389bb462817eb10362ce2ffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="47402fa3fab42d64a75be6adde8625a84757fd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="83d1055019fae23cac3bd4e807e91e2c50876035" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; 는현재 상태에 &lt;code&gt;f&lt;/code&gt; 를적용한 결과로 상태를 업데이트하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="4a98da3eec30ab15d45c3a3e62b1a72c169d836d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; 세트에 모나드 내 상태 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac6618b3bd62691e26085624ea45a1fac4fbf734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="07bcb42793f10512292aef4a7c29940d35102d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; 은 &lt;code&gt;f&lt;/code&gt; 를 적용하여 수정 된 상태에서동작 &lt;code&gt;m&lt;/code&gt; 을실행합니다.</target>
        </trans-unit>
        <trans-unit id="30ce2e6bcde376919088f988d4c38fbd2b83c55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="94b0f75a09583c166211cdd2a8f0772d7aafe4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="a4e3188b60fe8cb6c64a4738d8f9b57256966552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="8ca1c8f5e14d289d380d3c95a66f37656e7a3a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="1720a8c884d1e838847caf5066f4216e36077a29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="b62ef4a3c265d2e27d8cfff090bc43f1853dbab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="20d7675db30f9d984c5cb5033ff3a1937d13a17c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="a355ce487b136a79c714a96ea99b513298851493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="687c25e34d3ef9ec91fccdd2909776efd4aef04a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="28eb6711d36824cef318e92b5ca78764cfe0f763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="16dd8ff7761d65ae71615c719bb585fd9562e1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="73a713921a6d3431d24dabb6c68916860aa6d46e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="fd97b1b2cd86c28979cbe5ee6197ec958220dd56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="64ade79fd45961fa6fd6b1cd9c42c30d16dde6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="75092c13beb4ae8666015ba120d2d9c34e78543b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="4f5ff442b3de1a303deb433f9f2283f3bd921ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="b6f88e969f69728200d64a1ed5c576e69ee9d586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="0df33ce4c6f596f1144e8fe1c688b2c4cfb733c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="08b563258078b3136f3d98017eae29469b87c66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="fc8a08b4fd029fa21b0d73d6b53f89b640b2fc3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="797a0ea6f32ae768eb09e6d0da9893bea11c90bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; embeds a simple writer action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; 는 간단한 라이터 액션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="fb4ddbc8b2b8c9593fd10f85433f6d3410313aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="b8e8a315801fbd58fd7f20bac218606dcbcf986d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="4ee50a76441dc7d837885eba71c945d4639ea4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="2274c5a29bef8a4aa510b9c9c3fc0b527d2acabc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="4f188730ef9d6f4efb4d17ed8711f90118c5aeea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="ae8537445dfe37fdde7a353a20bf0e29a039d034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; embeds a simple writer action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; 는 간단한 라이터 액션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b7b46ef56d3e6ca836d4b26a830c457b663a3a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; 은 조치 &lt;code&gt;m&lt;/code&gt; 을 실행하고함수 &lt;code&gt;f&lt;/code&gt; 를 출력에적용하여 리턴 값을 변경하지 않은조치입니다.</target>
        </trans-unit>
        <trans-unit id="35b0672c5b442aa0e6fb413872d677fc358c0bfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; 은 동작 &lt;code&gt;m&lt;/code&gt; 을 실행하고그 출력을 계산 값에 추가하는 동작입니다.</target>
        </trans-unit>
        <trans-unit id="988aa76554865354bd8172358bc021a638c875c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; 작업 실행되는 액션이다 &lt;code&gt;m&lt;/code&gt; 을 하고 적용한 결과 추가 &lt;code&gt;f&lt;/code&gt; 계산의 값으로 출력한다.</target>
        </trans-unit>
        <trans-unit id="8f0f1a9eac4a0b945f1f0369e206b01b943b3004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; 은 액션 &lt;code&gt;m&lt;/code&gt; 을 실행하는 액션으로, 값과 함수를 반환하고 값을 반환하여 함수를 출력에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="a7afc8ee089c28c39633e8af5e57f8ce2f52969f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; 는 출력 &lt;code&gt;w&lt;/code&gt; 를 생성하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="c4f552f68789baffeb96f136fc9bbd5dc7bd05e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; embeds a simple writer action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; 는 간단한 라이터 액션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6f8f4d31c2d99b8135ca9cba4835aa7d71001e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3b8bda2bb91d5b482bf131b765aa64eecee9f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dca9f411cc94d3fe3c6b59692fa8eaf362189218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt; f&lt;/code&gt; takes an array and an association list and accumulates pairs from the list into the array with the accumulating function &lt;code&gt;f&lt;/code&gt;. Thus &lt;code&gt;&lt;a href=&quot;data-array#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; can be defined using &lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt; f&lt;/code&gt; 는 배열과 연관 목록을 가져 와서 누적 함수 &lt;code&gt;f&lt;/code&gt; 를 사용하여 목록에서 배열로 쌍을 누적합니다. 따라서 &lt;code&gt;&lt;a href=&quot;data-array#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt; 을 사용하여 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29d08c04b5776363a20983b3f73d9433bd4806d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:ixmap&quot;&gt;ixmap&lt;/a&gt;&lt;/code&gt; allows for transformations on array indices. It may be thought of as providing function composition on the right with the mapping that the original array embodies.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:ixmap&quot;&gt;ixmap&lt;/a&gt;&lt;/code&gt; 을 사용하면 배열 인덱스를 변환 할 수 있습니다. 원래 배열이 구현하는 매핑으로 오른쪽에 함수 구성을 제공하는 것으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74b03f9dc3fc31ad7fd43564d6d0038f34aa4b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; - &amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55865a474c342376504fb774cf2efc2a4191d37c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt; - &amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="030ee7e47e2173c5c24c8b7d9d4ef5e3cfe0abd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; - &amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18e9d1ba0fba7a0a9cc5df6cf87b626b7f50793f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; - &amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2973224b257fe531364ae3290f7b30a280486a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; - &amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f64f8f5584331d1ae434ddef2967565c19986dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; - &amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22257e577590a3274320774bf5795c8086bd5f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; identifies foldable structures with two different varieties of elements (as opposed to &lt;code&gt;&lt;a href=&quot;data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt;, which has one variety of element). Common examples are &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;(,)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; 은 두 가지 다른 요소를 가진 접이식 구조를 식별합니다 (하나의 다양한 요소를 갖는 &lt;code&gt;&lt;a href=&quot;data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; 과 반대). 일반적인 예는 &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;(,)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4308834da27fcf6ef846f073a8a5a3f102ee05d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biand&quot;&gt;biand&lt;/a&gt;&lt;/code&gt; returns the conjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biand&quot;&gt;biand&lt;/a&gt;&lt;/code&gt; 는 Bools 컨테이너의 연결을 반환합니다. 결과가 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 가 되려면 컨테이너가 유한해야합니다. &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 그러나, 결과 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 유한 한 멀리 왼쪽 끝에서 값.</target>
        </trans-unit>
        <trans-unit id="2607782d00556fac8ddccfc795d2557ff551f0fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:binotElem&quot;&gt;binotElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bielem&quot;&gt;bielem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:binotElem&quot;&gt;binotElem&lt;/a&gt;&lt;/code&gt; 은 의 부정이다 &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bielem&quot;&gt;bielem&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0e7497d5db5d9f90b57b924e97cb257fd7b153c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bior&quot;&gt;bior&lt;/a&gt;&lt;/code&gt; returns the disjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bior&quot;&gt;bior&lt;/a&gt;&lt;/code&gt; 는 Bools 컨테이너의 분리를 반환합니다. 결과가 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 가 되려면 컨테이너가 유한해야합니다. &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , 그러나, 결과 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 유한 한 멀리 왼쪽 끝에서 값.</target>
        </trans-unit>
        <trans-unit id="61be1bca7faa71f5c736d1ed1ef8323c0e6d9ea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 바이트 시퀀스를 나타냅니다. 그것들은 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 곳들 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 는 길이가 0 인 시퀀스이며 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 는 O (1)에서 실행되는 연결된다.</target>
        </trans-unit>
        <trans-unit id="f03253fa530aa3311f3162aa4d8739a3abeda42f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 바이트 시퀀스를 나타냅니다. 그것들은 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 곳들 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 는 길이가 0 인 시퀀스이며 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 는 O (1)에서 실행되는 연결된다.</target>
        </trans-unit>
        <trans-unit id="2b7ff7dccfe6790589cf29375b0f2f75d80db2e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 바이트 시퀀스를 나타냅니다. 그것들은 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 곳들 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 는 길이가 0 인 시퀀스이며 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 는 O (1)에서 실행되는 연결된다.</target>
        </trans-unit>
        <trans-unit id="4c4e166145b3c9bc2c631daead40017018e72c7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-binary-get#v:Fail&quot;&gt;Fail&lt;/a&gt;&lt;/code&gt; will be returned if it runs into an error, together with a message, the position and the remaining input. If it succeeds it will return &lt;code&gt;&lt;a href=&quot;data-binary-get#v:Done&quot;&gt;Done&lt;/a&gt;&lt;/code&gt; with the resulting value, the position and the remaining input.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-binary-get#v:Fail&quot;&gt;Fail&lt;/a&gt;&lt;/code&gt; 메시지, 위치 및 나머지 입력과 함께 오류가 발생하면 실패 가 반환됩니다. 성공하면결과 값, 위치 및 나머지 입력과 함께 &lt;code&gt;&lt;a href=&quot;data-binary-get#v:Done&quot;&gt;Done&lt;/a&gt;&lt;/code&gt; 를반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e23cbd1094d60ce7f0490ae2401f01a9d9da1d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; identifies bifunctorial data structures whose elements can be traversed in order, performing &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; actions at each element, and collecting a result structure with the same shape.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; 은 각 요소에서 &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 작업을수행하고 동일한 모양으로 결과 구조를 수집할 수있는 요소를 순서대로 순회 할 수있는 이중 함수 데이터 구조를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="3fc4558258f428958d38a43c356206226e713027" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; relates to its superclasses in the following ways:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; 은 다음과 같은 방식으로 수퍼 클래스와 관련됩니다.</target>
        </trans-unit>
        <trans-unit id="8ed10c5b3128fe1bf6b6518112edfdb9576bab78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; with the structure as the first argument. For a version that ignores the results, see &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifor_&quot;&gt;bifor_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt; 이다 &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; 첫 번째 인수로서 구조. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifor_&quot;&gt;bifor_&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0b014210cd26f54f35aa47a1327d8069fc68fbb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; (t . f) (t . g) &amp;equiv; t . &lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; f g&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; (t . f) (t . g) &amp;equiv; t . &lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; f g&lt;/code&gt; 모든 실용적 변환 용 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b25affbdcb6fcb5b1e4588545e571ed55af492b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:countLeadingZeros&quot;&gt;countLeadingZeros&lt;/a&gt;&lt;/code&gt; can be used to compute log base 2 via</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:countLeadingZeros&quot;&gt;countLeadingZeros&lt;/a&gt;&lt;/code&gt; 를 통해 로그베이스 2를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d2a434e8ec3c4040c812b931eb15c56b0b3f11f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt; x i&lt;/code&gt; rotates &lt;code&gt;x&lt;/code&gt; left by &lt;code&gt;i&lt;/code&gt; bits if &lt;code&gt;i&lt;/code&gt; is positive, or right by &lt;code&gt;-i&lt;/code&gt; bits otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt; x i&lt;/code&gt; &lt;code&gt;i&lt;/code&gt; 가 양수이면 &lt;code&gt;x&lt;/code&gt; 를 &lt;code&gt;i&lt;/code&gt; 비트만큼왼쪽으로,그렇지 않으면 &lt;code&gt;-i&lt;/code&gt; 비트만큼오른쪽으로회전합니다.</target>
        </trans-unit>
        <trans-unit id="0204cfc77645dff974ce858e0bac968a15e4bf27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt; x i&lt;/code&gt; shifts &lt;code&gt;x&lt;/code&gt; left by &lt;code&gt;i&lt;/code&gt; bits if &lt;code&gt;i&lt;/code&gt; is positive, or right by &lt;code&gt;-i&lt;/code&gt; bits otherwise. Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the &lt;code&gt;x&lt;/code&gt; is negative and with 0 otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt; x i&lt;/code&gt; 이동은 &lt;code&gt;x&lt;/code&gt; 를 왼쪽 &lt;code&gt;i&lt;/code&gt; 비트도 &lt;code&gt;i&lt;/code&gt; 의해 긍정적 또는 권리 &lt;code&gt;-i&lt;/code&gt; 달리 비트. 오른쪽 시프트는 부호있는 숫자 유형에서 부호 확장을 수행합니다. 즉, &lt;code&gt;x&lt;/code&gt; 가 음수이면 최상위 비트를 1로 채우고그렇지 않으면 0으로채 웁니다.</target>
        </trans-unit>
        <trans-unit id="02d5197ccd184f9fc9d231ede2541f22d9893e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt; is the value with all bits unset.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt; 는 모든 비트가 설정되지 않은 값입니다.</target>
        </trans-unit>
        <trans-unit id="f00a142c8e1bdb42af1e50bd46560b6a73ec009a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if bound threads are supported. If &lt;code&gt;rtsSupportsBoundThreads&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent#v:isCurrentThreadBound&quot;&gt;isCurrentThreadBound&lt;/a&gt;&lt;/code&gt; will always return &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; and both &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent#v:runInBoundThread&quot;&gt;runInBoundThread&lt;/a&gt;&lt;/code&gt; will fail.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 바인딩 된 스레드가 지원되면 true 입니다. 경우 &lt;code&gt;rtsSupportsBoundThreads&lt;/code&gt; 이 있다 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent#v:isCurrentThreadBound&quot;&gt;isCurrentThreadBound&lt;/a&gt;&lt;/code&gt; 는 항상 반환 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 모두 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt; 을 하고 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:runInBoundThread&quot;&gt;runInBoundThread&lt;/a&gt;&lt;/code&gt; 는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="b2fe25f3c9e48edead3895c08fa9ff6afb46061b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE &quot;not-a-number&quot; (NaN) value</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 인수가 IEEE &quot;숫자&quot;(NaN) 값인 경우 참</target>
        </trans-unit>
        <trans-unit id="042c18414e44de6afc3475fc16a197923bd64f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE floating point number</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 인수가 IEEE 부동 소수점 숫자 인 경우 참</target>
        </trans-unit>
        <trans-unit id="acfe78efc36c045764172795375babd03dff8cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE infinity or negative infinity</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 인수가 IEEE 무한대 또는 음의 무한대이면 참</target>
        </trans-unit>
        <trans-unit id="9d1b73738b03e58fd7509c3e3cabd5cd16b9c10d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE negative zero</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 인수가 IEEE 음수 인 경우 참</target>
        </trans-unit>
        <trans-unit id="90906bd5104bae9431696045f8666032eff0a8b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is too small to be represented in normalized format</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 인수가 너무 작아서 정규화 된 형식으로 표현할 수없는 경우 참</target>
        </trans-unit>
        <trans-unit id="925fe6db268e1f46b1cf48e48304216b3b0c2115" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; is defined as the value &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;. It helps to make guards more readable. eg.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 값으로 정의됩니다. 가드를 더 읽기 쉽게 만드는 데 도움이됩니다. 예.</target>
        </trans-unit>
        <trans-unit id="bf7e445916d71ae49094632dc3c5c5a61123d862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5c177467307dab7367093bb8d7a8499d4ccbaaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70050fb87e99f2aae2b70f3cec8b9d06b58f7f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49048d12d2f0d5746d8058563a828f81859230de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakByte&quot;&gt;breakByte&lt;/a&gt;&lt;/code&gt; breaks its ByteString argument at the first occurence of the specified byte. It is more efficient than &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; as it is implemented with &lt;code&gt;memchr(3)&lt;/code&gt;. I.e.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakByte&quot;&gt;breakByte&lt;/a&gt;&lt;/code&gt; 는 지정된 바이트가 처음 나타날 때 ByteString 인수를 분리합니다. &lt;code&gt;memchr(3)&lt;/code&gt; 구현되므로 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; 보다 효율적입니다. 즉</target>
        </trans-unit>
        <trans-unit id="814d2591f45f2ac2241967feaf572be0fff86eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; 처럼 동작하지만 ByteString 의 끝 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce1f0320a6669caccb40683ce9ca4ea268d8be9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 반환합니다 후 남아있는 접미사 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f8b69e025b87deab3e886ec92955b841f180971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:dropWhileEnd&quot;&gt;dropWhileEnd&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the prefix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p
 xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:dropWhileEnd&quot;&gt;dropWhileEnd&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 반환합니다 후에 남아있는 접두사 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9ec408b4a3abb30eb82e4a987ecc1927f38e5b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 이진 연산자 시작 값 (전형적으로 운전자의 왼쪽 아이덴티티)와 ByteString인가, 왼쪽에서 오른쪽으로 이진 연산자를 사용 ByteString을 감소시킨다.</target>
        </trans-unit>
        <trans-unit id="9af08e815de2113b910c01944dd370421022af7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 과 같지만 누산기는 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="6db66366f746824cc0b4eaf55d08a90e3e398731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s. An exception will be thrown in the case of an empty ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에 적용해야합니다. 빈 ByteString의 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b87be8315731fe7ab44b3a5a6789b6d4ab1e28e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;. An exception will be thrown in the case of an empty ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;ByteStrings&lt;/code&gt; 에 적용해야합니다. 빈 ByteString의 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b3750fc4b5e98cc041210f7b3d17533c517645dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator. An exception will be thrown in the case of an empty ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 과 같지만 누산기는 엄격합니다. 빈 ByteString의 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d619695c9612199cbee13912587a6d2c03d9fae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 이진 연산자, 시작 값 (일반적으로 연산자의 오른쪽 ID) 및 ByteString에 적용되는 foldr 은 이진수 연산자를 사용하여 오른쪽에서 왼쪽으로 ByteString을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="58d937918819553f46fcccff3b7ad25317536533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 와 비슷하지만 어큐뮬레이터에서는 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="6747eee2d2a86ecf6dc3dc123f9f4df38fded661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s An exception will be thrown in the case of an empty ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 의 변형으로비어 있지 않은 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에 적용되어야합니다. 빈 ByteString 의 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="549072b964e3da71ece075603043bb808ede4ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1-39-&quot;&gt;foldr1'&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt;, but is strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1-39-&quot;&gt;foldr1'&lt;/a&gt;&lt;/code&gt; 의 변종이다 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; 하지만 축적에 엄격하다.</target>
        </trans-unit>
        <trans-unit id="3e20f14daf1c3f52c8eba40e2f2b4f505b9b17a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; 는 측면에서 구현 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c32ca139445b6d87660501354bdf4600476ccb2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="758ef70ead484b1b071c1bdd0901424625d4384a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; 는 측면에서 구현 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ded16728e931ee5bc65014bd9226f8baf3b71328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 은 유사하다 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 했으나 왼쪽 연속 감소 된 값의 목록을 반환합니다. 이 기능은 퓨즈입니다.</target>
        </trans-unit>
        <trans-unit id="bfc41b5104721edce4a147cd2583a193925ddedb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 의 변형입니다. 이 기능은 퓨즈입니다.</target>
        </trans-unit>
        <trans-unit id="d815ff110c0ffc55443e28a602dc7efeb8763841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; 의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="69d606d2f7c1c5921b2ca5e320ff4273ddf01ab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 는 ByteString을 두 개의 세그먼트로 나눕니다. 그것은 동일하다 &lt;code&gt;(&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec26108245136e66432e70cd36352ca29526a91b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. We have</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; 같은 동작합니다 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; 하지만 끝에서 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . 우리는</target>
        </trans-unit>
        <trans-unit id="6cc4fcf5475892b6109ae9d3bdf0314f7bced609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 와 ByteString의 &lt;code&gt;xs&lt;/code&gt; ,의 (하늘의) 가장 긴 접두사 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a8fbdac0316b37fe4afe2bfa8ec058fc2b1b06c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest suffix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 와 ByteString의 &lt;code&gt;xs&lt;/code&gt; ,의 (하늘의) 가장 긴 접미사 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91cba81bd76b09e3ff2c131246dfb09a0d15acf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 는 튜플 링 함수 대신 첫 번째 인수로 제공된 함수로 압축하여 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 을일반화합니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; 는 두 개의 ByteString에 적용되어 해당 합계 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="400318b02dea0c256c94b0ecaf903a2fa97af736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 실행할 빌더</target>
        </trans-unit>
        <trans-unit id="d32148183d294ca5197aff3f1abec6956419e8c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s are used to efficiently construct sequences of bytes from smaller parts. Typically, such a construction is part of the implementation of an &lt;em&gt;encoding&lt;/em&gt;, i.e., a function for converting Haskell values to sequences of bytes. Examples of encodings are the generation of the sequence of bytes representing a HTML document to be sent in a HTTP response by a web application or the serialization of a Haskell value using a fixed binary format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 작은 부분에서 바이트 시퀀스를 효율적으로 구성하는 데 사용됩니다. 일반적으로 이러한 구성은&lt;em&gt; 인코딩&lt;/em&gt; 구현, 즉 Haskell 값을 바이트 시퀀스로 변환하는 함수의 일부입니다. 인코딩의 예는 웹 응용 프로그램에 의해 HTTP 응답으로 전송 될 HTML 문서를 나타내는 바이트 시퀀스 생성 또는 고정 이진 형식을 사용하는 Haskell 값의 직렬화입니다.</target>
        </trans-unit>
        <trans-unit id="3b5766e08a6ca06be7c1b0532b50c33472ef57a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 바이트 시퀀스를 나타냅니다. 그것들은 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 곳들 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 는 길이가 0 인 시퀀스이며 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 는 O (1)에서 실행되는 연결된다.</target>
        </trans-unit>
        <trans-unit id="313b3a7e823d675b0824aac76ab978c244a39843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</target>
        </trans-unit>
        <trans-unit id="0643f79aa0c18b49f06a3a07efc252c643164f37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 바이트 시퀀스를 나타냅니다. 그것들은 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 곳들 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 는 길이가 0 인 시퀀스이며 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 는 O (1)에서 실행되는 연결된다.</target>
        </trans-unit>
        <trans-unit id="d145a1aef6a3fb97e6a2b210eb98455f939ce5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildSignal&quot;&gt;BuildSignal&lt;/a&gt;&lt;/code&gt;s abstract signals to the caller of a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;. There are three signals: &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt;, or 'insertChunks signals</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildSignal&quot;&gt;BuildSignal&lt;/a&gt;&lt;/code&gt; 은 BuildStep 의 호출자에게 추상 신호를 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt; 또는 'insertChunks 신호의세 가지 신호가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b278c6bf1b39978c7c5e2af2ff5da6eadbb5d553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; that first writes the byte stream of this &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; and then yields the computed value using the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; signal.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 의 바이트 스트림을 쓴다음 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; 신호를사용하여 계산 된 값을 산출하는 BuildStep .</target>
        </trans-unit>
        <trans-unit id="63b362ab22c1aa510574369c64e24f888fe3bee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; that writes the byte stream of this &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; and signals &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; upon completion.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 의 바이트 스트림을 작성 하고 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; 시 완료된신호를 작성하는 BuildStep .</target>
        </trans-unit>
        <trans-unit id="9ad848a32d7ce3d287f565a89e7732474f6233d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 실행할 BuildStep</target>
        </trans-unit>
        <trans-unit id="0f742d93fc7fc396302c32c5fa4cc5139acfd65d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to run on next &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 다음 BufferRange 에서 실행할 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0f2eb2ceb32c6399fd061a346fe8e2934a7def9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to run on the next &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;. This &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; may assume that it is called with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; of at least the required minimal size; i.e., the caller of this &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; must guarantee this.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 에서 실행할 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; 입니다. 이 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 은최소한 필요한 최소 크기의 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; 로호출되었다고 가정 할 수 있습니다. 즉,이 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 의 호출자는이를 보증해야합니다.</target>
        </trans-unit>
        <trans-unit id="785590d74b7131ca518af0a5157873272d536817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;s may be called *multiple times* and they must not rise an async. exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 은 * 다중 번 *이라고 불리며 비 동기화 되지 않아야합니다. 예외.</target>
        </trans-unit>
        <trans-unit id="5bfcaf542915c49e92ce1dd3be18072ff8ad5609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 실행할 빌더</target>
        </trans-unit>
        <trans-unit id="7f395dd725a311873438a74f7e5edcbbf7d48e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to run</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 실행할 빌더</target>
        </trans-unit>
        <trans-unit id="325eb71ceaed27c2de7d59edf77336aabfab872d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 바이트 시퀀스를 나타냅니다. 그것들은 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 곳들 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 는 길이가 0 인 시퀀스이며 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 는 O (1)에서 실행되는 연결된다.</target>
        </trans-unit>
        <trans-unit id="18161b6726dcafe08ce97249e84aaa43ba8b4b54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</target>
        </trans-unit>
        <trans-unit id="5430b3e5da8235ef8b6c22f1c5f161cf08417754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 는 바이트 시퀀스를 나타냅니다. 그것들은 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 곳들 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 는 길이가 0 인 시퀀스이며 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 는 O (1)에서 실행되는 연결된다.</target>
        </trans-unit>
        <trans-unit id="14b9bf3298f4b6b1b928a28d0a2e5cb2f1c4368b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; actions are isomorphic to &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s. The functions &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:putBuilder&quot;&gt;putBuilder&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:fromPut&quot;&gt;fromPut&lt;/a&gt;&lt;/code&gt; convert between these two types. Where possible, you should use &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s, as sequencing them is slightly cheaper than sequencing &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s because they do not carry around a computed value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; 액션은 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 에 동형입니다. &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:putBuilder&quot;&gt;putBuilder&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:fromPut&quot;&gt;fromPut&lt;/a&gt;&lt;/code&gt; 함수는이 두 유형 사이에서 변환됩니다. 가능한 경우,시퀀싱은 계산 된 값을 전달하지 않기 때문에시퀀싱 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 보다 약간 저렴하므로 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="28516125777a3e91b5c7da1aa4ef89b5b5438980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="1c226a7dda188ea306bb621f13744c4d2de199f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are a generalization of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s. The typical use case is the implementation of an encoding that might fail (e.g., an interface to the &lt;a href=&quot;https://hackage.haskell.org/package/zlib&quot;&gt;zlib&lt;/a&gt; compression library or the conversion from Base64 encoded data to 8-bit data). For a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;, the only way to handle and report such a failure is ignore it or call &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;. In contrast, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; actions are expressive enough to allow reportng and handling such a failure in a pure fashion.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 의일반화입니다. 일반적인 사용 사례는 실패 할 수있는 인코딩 구현입니다 (예 :&lt;a href=&quot;https://hackage.haskell.org/package/zlib&quot;&gt; zlib&lt;/a&gt; 압축 라이브러리에대한 인터페이스또는 Base64 인코딩 데이터에서 8 비트 데이터로의 변환). A에 대한 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; , 그런 실패를 처리하고보고 할 수있는 유일한 방법은 그것을 또는 통화 무시하다 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; . 대조적으로, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 작업은 그러한 실패를 순수한 방식으로보고하고 처리 할 수있을만큼 충분히 표현 적입니다.</target>
        </trans-unit>
        <trans-unit id="d2613edfde5d01fe61eb572e3b17bf2c93246280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are a generalization of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s. The typical use case is the implementation of an encoding that might fail (e.g., an interface to the &lt;code&gt;zlib&lt;/code&gt; compression library or the conversion from Base64 encoded data to 8-bit data). For a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;, the only way to handle and report such a failure is ignore it or call &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;. In contrast, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; actions are expressive enough to allow reportng and handling such a failure in a pure fashion.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 의일반화입니다. 일반적인 사용 사례는 실패 할 수있는 인코딩 구현 (예 : &lt;code&gt;zlib&lt;/code&gt; 압축 라이브러리에대한 인터페이스또는 Base64 인코딩 데이터에서 8 비트 데이터로의 변환)입니다. A에 대한 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; , 그런 실패를 처리하고보고 할 수있는 유일한 방법은 그것을 또는 통화 무시하다 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; . 대조적으로, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 조치는 그러한 실패를 순수한 방식으로보고하고 처리 할 수있을 정도로 표현력이 충분합니다.</target>
        </trans-unit>
        <trans-unit id="0e0ed8a2e170c305e885e9403f220a3253ae209d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are a generalization of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s. The typical use case is the implementation of an encoding that might fail (e.g., an interface to the &lt;code&gt;zlib&lt;/code&gt; compression library or the conversion from Base64 encoded data to 8-bit data). For a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;, the only way to handle and report such a failure is ignore it or call &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;. In contrast, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; actions are expressive enough to allow reportng and handling such a failure in a pure fashion.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; s are a generalization of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s. The typical use case is the implementation of an encoding that might fail (e.g., an interface to the &lt;code&gt;zlib&lt;/code&gt; compression library or the conversion from Base64 encoded data to 8-bit data). For a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; , the only way to handle and report such a failure is ignore it or call &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; . In contrast, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; actions are expressive enough to allow reportng and handling such a failure in a pure fashion.</target>
        </trans-unit>
        <trans-unit id="70828cc190b33e93bb24f051fabc71f65592e8db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:ensureFree&quot;&gt;ensureFree&lt;/a&gt; n&lt;/code&gt; ensures that there are at least &lt;code&gt;n&lt;/code&gt; free bytes for the following &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:ensureFree&quot;&gt;ensureFree&lt;/a&gt; n&lt;/code&gt; 은다음 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 에 대해최소한 &lt;code&gt;n&lt;/code&gt; 개의 여유 바이트가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6259121adec8057275e645a770e122ae792fce7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e20ee2631572cd3418378617a6b39fb1b3d7ed0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb51ab98c23afdbbf95369461d7ad4f7b47fa19f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1779d7062a7b9d2e0cf8038095e5fd44412988b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; 처럼 동작하지만 ByteString 의 끝 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a82ed44bce70e0589c650a74124fc5710a20b82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropSpace&quot;&gt;dropSpace&lt;/a&gt;&lt;/code&gt; efficiently returns the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; argument with white space Chars removed from the front. It is more efficient than calling dropWhile for removing whitespace. I.e.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropSpace&quot;&gt;dropSpace&lt;/a&gt;&lt;/code&gt; 는 전면에서 공백 문자를 제거한 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 인수를효율적으로 반환합니다. 공백을 제거하기 위해 dropWhile을 호출하는 것보다 더 효율적입니다. 즉</target>
        </trans-unit>
        <trans-unit id="97cf7cdaa1fbdf0da52c1726bf84b8eecad49015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the prefix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p
 xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 반환합니다 후에 남아있는 접두사 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de908e89fcd71a714f73e02fe967c7464ee43a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 반환합니다 후 남아있는 접미사 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25b6f2a5df3dec6e64aacb22516bd44359882b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 이진 연산자 시작 값 (전형적으로 운전자의 왼쪽 아이덴티티)와 ByteString인가, 왼쪽에서 오른쪽으로 이진 연산자를 사용 ByteString을 감소시킨다.</target>
        </trans-unit>
        <trans-unit id="c70b4cacdf42f61d048c68f864d54cd18b74ff87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like foldl, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; 은 foldl과 같지만 어큐뮬레이터에서는 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="08d414ecb049c042abca981afd843a4f605ee803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4df93e4558ff853b49fb772930abaa54f0db105b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;ByteStrings&lt;/code&gt; 에 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3380643737b226992e90d034c89b4da85a2701e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a packed string, reduces the packed string using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 이진 연산자에 적용되는 foldr , 시작 값 (일반적으로 연산자의 오른쪽 ID) 및 묶음 문자열은 이진 연산자를 사용하여 묶음 문자열을 오른쪽에서 왼쪽으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="532fcd7131ac66e085e552a1b8e49aca1dc2c636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; is a strict variant of foldr</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; 는 foldr 의 엄격한 변형입니다</target>
        </trans-unit>
        <trans-unit id="fa85433d3779461442be4bd86b0a944e37a22af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; 은 의 변종이다 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 값없이 인수를 시작했다, 따라서 비어에 적용해야합니다 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 의</target>
        </trans-unit>
        <trans-unit id="5c809f7a67fee724a73504afc9cb81685462e1df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; 는 측면에서 구현 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12e616350352a4f534855d6e461cf5bd0b44bf5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="236ebf6755dc270d44d4188dc020be97ae2087ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; 는 측면에서 구현 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="359cdd096e19a92c4dae430a8ffb82e716ab8273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of ByteStrings at newline Chars (&lt;code&gt;'\n'&lt;/code&gt;). The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 은 개행 문자 ( &lt;code&gt;'\n'&lt;/code&gt; )에서 ByteString을 ByteString 목록으로 나눕니다. 결과 문자열에는 줄 바꿈이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c43f0ff7401e01504ce875520bfd783a6b8dc983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of ByteStrings at newline Chars. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 은 ByteString을 줄 바꿈 문자의 ByteString 목록으로 나눕니다. 결과 문자열에는 줄 바꿈이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="424eb331c92ebbbb3a4981be7875a219753d0720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; returns the maximum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에서 최대 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="c2679835322a165d84955340ee3adf56ea942979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; returns the minimum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에서 최소값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b2af16668f08a480c78fa3c78f938bbf51e9f930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 은 유사하다 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 했으나 왼쪽 연속 감소 된 값의 목록을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="1e1ed3aefd29b97ec72fa93ff3b7b62516ac204b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="9b7ba4dc005673b183182fc40c0040abf6192128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; 의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="12a4aa7c1193e751d0bfa19733a577294128f78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 는 ByteString을 두 개의 세그먼트로 나눕니다. 그것은 동일하다 &lt;code&gt;(&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3881481245c3d38ec088e956e450597f8729c4bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. We have</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; 같은 동작합니다 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; 하지만 끝에서 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . 우리는</target>
        </trans-unit>
        <trans-unit id="1d7fcb99613d90b0f2d9cd56ef6de3d631726ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 와 ByteString의 &lt;code&gt;xs&lt;/code&gt; ,의 (하늘의) 가장 긴 접두사 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de013faeb24a0cb6640ac84b81579ad929f84eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest suffix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhileEnd&quot;&gt;takeWhileEnd&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 와 ByteString의 &lt;code&gt;xs&lt;/code&gt; ,의 (하늘의) 가장 긴 접미사 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e667258ffe15b8bbeebbbda08eefba1e8f103848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; 에 역 동작이다 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . 각각에 새 줄 바꿈을 추가 한 후 행을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="ae4e0355c15fd4dd38e8c63a95919f9de21f0c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforms a list of pairs of Chars into a pair of ByteStrings. Note that this performs two &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; 은 Char 쌍 목록을 ByteString 쌍으로 변환합니다. 이작업은 두 가지 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 작업을수행합니다.</target>
        </trans-unit>
        <trans-unit id="090063b4cab35d4e6765c1a78f2836fedec300a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of words, which were delimited by Chars representing white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 는 ByteString을 단어 목록으로 나누고 공백을 나타내는 Chars로 구분합니다.</target>
        </trans-unit>
        <trans-unit id="8b8bb505917b6a014422fda172177dfb7897b3b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 는 튜플 링 함수 대신 첫 번째 인수로 제공된 함수로 압축하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 을일반화합니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; 는 두 개의 ByteString에 적용되어 해당 합계 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="151d4dab32d14a4a55709b5339eefca471e21945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="242996ba6325d0417c385cecb868add36f955a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ab4caa8123ba737cd0c3060f0de7ba1a1e1e9ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0bd15fc1d44bf6b5d2df186402c0be1aeda9780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite ByteString into a circular one, or equivalently, the infinite repetition of the original ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 은 유한 한 ByteString을 원형으로 묶거나 원래 ByteString의 무한 반복으로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="0219cc434dc5f14e7aa2d22e1fa1374ea94481bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 반환합니다 후 남아있는 접미사 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fadaf40facdb46311f0b253aabfd4a249cbf45b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 이진 연산자 시작 값 (전형적으로 운전자의 왼쪽 아이덴티티)와 ByteString인가, 왼쪽에서 오른쪽으로 이진 연산자를 사용 ByteString을 감소시킨다.</target>
        </trans-unit>
        <trans-unit id="637b4b1ae7de090939d1501baf59b05c6b379b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 과 같지만 누산기는 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="8949d3aea021c0062417f8240fc27c9fa6ef4a94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="38706bf8bcda5bb152bdadd2bad97f2f16c0362f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;ByteStrings&lt;/code&gt; 에 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2093c659ced7a21150b96dd391c8e3888ef2b8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 과 같지만 누산기는 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="569e332d5a21b09df525eca4e7052b1941987723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 이진 연산자, 시작 값 (일반적으로 연산자의 오른쪽 ID) 및 ByteString에 적용되는 foldr 은 이진수 연산자를 사용하여 오른쪽에서 왼쪽으로 ByteString을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="cf50c8d2fc12653b3c7d86d7b1cdeb9cc8850238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; 은 의 변종이다 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 값없이 인수를 시작했다, 따라서 비어에 적용해야합니다 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 의</target>
        </trans-unit>
        <trans-unit id="f2f33f6db161ebfff3ca891cb8da754d402393d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; returns an infinite ByteString of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; 반복적으로 적용 무한 ByteString 반환 &lt;code&gt;f&lt;/code&gt; 에 &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="96bbfaf607a708c3811399a361d04f7b7d4cf84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; is an infinite ByteString, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; 함께 무한 ByteString 인 &lt;code&gt;x&lt;/code&gt; 각 요소의 값.</target>
        </trans-unit>
        <trans-unit id="0363ad05ec2d2dc4b1c954860242b98451f0db15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 은 유사하다 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 했으나 왼쪽 연속 감소 된 값의 목록을 반환합니다. 이 기능은 퓨즈입니다.</target>
        </trans-unit>
        <trans-unit id="c0d244d5aa3ef0785af5bd8b75998f48fedd67cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 는 ByteString을 두 개의 세그먼트로 나눕니다. 그것은 동일하다 &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="623d60d5a2ab5a24d2906c9551e0417f9aecdbb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 와 ByteString의 &lt;code&gt;xs&lt;/code&gt; ,의 (하늘의) 가장 긴 접두사 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37ac37f79289343bf19b065f750e3bf9cf378479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 는 튜플 링 함수 대신 첫 번째 인수로 제공된 함수로 압축하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 을일반화합니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; 는 두 개의 ByteString에 적용되어 해당 합계 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2cc90c20473c1ecd1f5daa9ad1aa28d44089fd39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f91ef5677a2cd4b07b9a0e6bab48e4b9c497f98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e4e1b624e6b2c4c7a9677fdd4f240ab843cd4bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7446723c5744081e426f0c68f66f3757ce896ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite ByteString into a circular one, or equivalently, the infinite repetition of the original ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 은 유한 한 ByteString을 원형으로 묶거나 원래 ByteString의 무한 반복으로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="93eae0dd8a677f5e6c557557f531ed87657a455a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 반환합니다 후 남아있는 접미사 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1826b29d8fb20478b485a25f1dd28e52178bce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 이진 연산자 시작 값 (전형적으로 운전자의 왼쪽 아이덴티티)와 ByteString인가, 왼쪽에서 오른쪽으로 이진 연산자를 사용 ByteString을 감소시킨다.</target>
        </trans-unit>
        <trans-unit id="1fcf53c62761b162c8305634c382c19038a4b4e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like foldl, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; 은 foldl과 같지만 어큐뮬레이터에서는 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="eb81b6c144187df28e72e33648dcceeb5b5d5f6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="82f74b552d46d49b2565d579b3c5a5a02e9c764a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 의 변형이므로 비어 있지 않은 &lt;code&gt;ByteStrings&lt;/code&gt; 에 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="325a3decb3bfb6cda2467fd8a10350dd9300f3e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; 과 같지만 누산기는 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="569f75b64b3fc4f3746a72a6e817f9a9b9adef2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a packed string, reduces the packed string using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 이진 연산자에 적용되는 foldr , 시작 값 (일반적으로 연산자의 오른쪽 ID) 및 묶음 문자열은 이진 연산자를 사용하여 묶음 문자열을 오른쪽에서 왼쪽으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="6dc9b69bac3a35fcb3da0090cf0d397e24abb308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; 은 의 변종이다 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 값없이 인수를 시작했다, 따라서 비어에 적용해야합니다 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 의</target>
        </trans-unit>
        <trans-unit id="b308b0398322ef72f763ca8708657195357a35c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; returns an infinite ByteString of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; 반복적으로 적용 무한 ByteString 반환 &lt;code&gt;f&lt;/code&gt; 에 &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f243d78fa3df07b41902afb810303732eb37ead3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of ByteStrings at newline Chars (&lt;code&gt;'\n'&lt;/code&gt;). The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 은 개행 문자 ( &lt;code&gt;'\n'&lt;/code&gt; )에서 ByteString을 ByteString 목록으로 나눕니다. 결과 문자열에는 줄 바꿈이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="734c989c0581155fc3c40ecb0495412534befdc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of ByteStrings at newline Chars. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 은 ByteString을 줄 바꿈 문자의 ByteString 목록으로 나눕니다. 결과 문자열에는 줄 바꿈이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9142293bc3569e7c4eeebb4fc06306b0fd26e4d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; returns the maximum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에서 최대 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="0c73cda03c3c28a246f7653e1fed2ab0065f3583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; returns the minimum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 에서 최소값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="70e0d5a7b9b68c43daa9661716c6caf2b782d299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; is an infinite ByteString, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; 함께 무한 ByteString 인 &lt;code&gt;x&lt;/code&gt; 각 요소의 값.</target>
        </trans-unit>
        <trans-unit id="8cca0cb060471abf20e45753a3219ac297b08afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 은 유사하다 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 했으나 왼쪽 연속 감소 된 값의 목록을 반환합니다. 이 기능은 퓨즈입니다.</target>
        </trans-unit>
        <trans-unit id="12edc84f1c4696c637d33e4f7acb39260212a7a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 는 ByteString을 두 개의 세그먼트로 나눕니다. 그것은 동일하다 &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8203bbc7abb1550e2252baa6dcb14bf6a84a00bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 와 ByteString의 &lt;code&gt;xs&lt;/code&gt; ,의 (하늘의) 가장 긴 접두사 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d58cb271d54a691f148ceb44ed361defb00b77a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; 에 역 동작이다 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . 각각에 새 줄 바꿈을 추가 한 후 행을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="e530c8bb5652916eac9c9f9df4955c3e0fb3cef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of words, which were delimited by Chars representing white space. And</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 는 ByteString을 단어 목록으로 나누고 공백을 나타내는 Chars로 구분합니다. 과</target>
        </trans-unit>
        <trans-unit id="ad56e4b49a938fe1f3e80f8f402a8c312fdaeabd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 는 튜플 링 함수 대신 첫 번째 인수로 제공된 함수로 압축하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 을일반화합니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; 는 두 개의 ByteString에 적용되어 해당 합계 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="329983f85b087c850a5ccb1bd56ee80d5dcf0ce4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt;: 4 words; 16 or 32 bytes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; : 4 단어; 16 또는 32 바이트</target>
        </trans-unit>
        <trans-unit id="5d76a8baa4b918f3c183054588a8a873dd25abde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-complex#v:cis&quot;&gt;cis&lt;/a&gt; t&lt;/code&gt; is a complex value with magnitude &lt;code&gt;1&lt;/code&gt; and phase &lt;code&gt;t&lt;/code&gt; (modulo &lt;code&gt;2*&lt;a href=&quot;numeric#v:pi&quot;&gt;pi&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-complex#v:cis&quot;&gt;cis&lt;/a&gt; t&lt;/code&gt; 는 크기 &lt;code&gt;1&lt;/code&gt; 및 위상 &lt;code&gt;t&lt;/code&gt; (모듈로 &lt;code&gt;2*&lt;a href=&quot;numeric#v:pi&quot;&gt;pi&lt;/a&gt;&lt;/code&gt; )의 복소수 값입니다.</target>
        </trans-unit>
        <trans-unit id="9e63de9563335b37a43219af45dcdab137f1f6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast1&quot;&gt;dataCast1&lt;/a&gt;&lt;/code&gt; should be defined as &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast1&quot;&gt;gcast1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast1&quot;&gt;dataCast1&lt;/a&gt;&lt;/code&gt; 는 로 정의되어야한다 &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast1&quot;&gt;gcast1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ebefbd3940b6ffe12c9649942e286513e51ad0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast2&quot;&gt;dataCast2&lt;/a&gt;&lt;/code&gt; should be defined as &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast2&quot;&gt;gcast2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast2&quot;&gt;dataCast2&lt;/a&gt;&lt;/code&gt; 는 로 정의되어야한다 &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast2&quot;&gt;gcast2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc62eb41f91e7b2e875fb6cefb9bf5723a3e0d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="818f2926ad6d9aa6217ebfa029e556150ec908a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; returns the conjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; Bools의 컨테이너의 연계를 반환합니다. 결과가 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 가 되려면 컨테이너가 유한해야합니다. &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 그러나, 결과 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 유한 한 멀리 왼쪽 끝에서 값.</target>
        </trans-unit>
        <trans-unit id="24c45f84f128a40d88772404163ae50b72954a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:asum&quot;&gt;asum&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:msum&quot;&gt;msum&lt;/a&gt;&lt;/code&gt;, but generalised to &lt;code&gt;&lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:asum&quot;&gt;asum&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:msum&quot;&gt;msum&lt;/a&gt;&lt;/code&gt; 과 같지만 &lt;code&gt;&lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; 로 일반화됩니다.</target>
        </trans-unit>
        <trans-unit id="09c64733b3cbba386f6416f88a406a90b79b23b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; 이며 인수가 뒤집 힙니다 . 결과를 무시하지 않는 버전은 &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="23b5ecb66f403bc2453f4b143a7bff7c52caef3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt;, but specialised to monadic actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 은 for_ 와 &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 하지만 모나 딕 작업에 특화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6abaa003bb2958f17b4c25c91f182467a165f9dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 는인수가 반전 된 &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; 입니다. 버전의 경우 그 결과를보고 무시하지 않습니다 &lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f393ed0677bf606d2d894074c46a94d0f2245edb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt;. This is &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; generalised to &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 는인수가 뒤집힌 &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; 입니다. 결과를 무시하지 않는 버전 &lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; . 이것은 &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 조치에 &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 일반화 된 forM_ 입니다.</target>
        </trans-unit>
        <trans-unit id="ed66fab3100d7699ebe9c9bbb6ce1fc5d96eeae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt;, but generalised to &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 과 같지만 &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 작업으로일반화됩니다.</target>
        </trans-unit>
        <trans-unit id="83442e9a1bd2a67acc2a20386b2d940b6e1083ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt;, but specialised to monadic actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; 와 비슷하지만 모나 딕 작업에 특화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3694c2f976dd6cca5817c476c8041751ef28b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:msum&quot;&gt;msum&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:asum&quot;&gt;asum&lt;/a&gt;&lt;/code&gt;, but specialised to &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:msum&quot;&gt;msum&lt;/a&gt;&lt;/code&gt; 은 asum 과 &lt;code&gt;&lt;a href=&quot;data-foldable#v:asum&quot;&gt;asum&lt;/a&gt;&lt;/code&gt; 하지만 MonadPlus 에 특화되어 &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77ed5f6754b7a36eabe1c5aa3ba9fe6a28a03db5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;data-foldable#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; 의 부정 &lt;code&gt;&lt;a href=&quot;data-foldable#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f63891731e14267bc206e4a36b844bc4bbc00341" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:null&quot;&gt;null&lt;/a&gt;&lt;/code&gt; is expected to terminate even for infinite structures. The default implementation terminates provided the structure is bounded on the left (there is a left-most element).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:null&quot;&gt;null&lt;/a&gt;&lt;/code&gt; 무한 구조의 경우에도 null 이 종료 될 것으로 예상됩니다. 구조가 왼쪽에 경계가 지정되어 있으면 기본 구현이 종료됩니다 (가장 왼쪽에있는 요소가 있음).</target>
        </trans-unit>
        <trans-unit id="e86f572d0a95734f99c2f335fa4012221ec9ab3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; returns the disjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; Bools 컨테이너의 분리를 반환합니다. 결과가 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 가 되려면 컨테이너가 유한해야합니다. &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; A로부터 그러나, 결과 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 유한 한 멀리 왼쪽 끝에서 값.</target>
        </trans-unit>
        <trans-unit id="54eed1a4dfcc59eb72fe7d64bf370da26cbd8014" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt;, but generalised to &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; 와 비슷하지만 &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 작업으로일반화됩니다.</target>
        </trans-unit>
        <trans-unit id="b7d3b3bf2290bb4119dd1b32dd590121cf8cda13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt;, but specialised to monadic actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; 와 비슷하지만 모나 딕 작업에 특화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2707947bf1e1f25a957cd574dc93b21df62292eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; is just like &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt;, but generalised to &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; actions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; 과 비슷 하지만 &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 작업으로일반화됩니다.</target>
        </trans-unit>
        <trans-unit id="f0b4fa340bcd1803dd46f9ad92aad6e0876012b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; is a reverse application operator. This provides notational convenience. Its precedence is one higher than that of the forward application operator &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt;, which allows &lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; to be nested in &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; 는 역 응용 연산자입니다. 이것은 표기법의 편리함을 제공합니다. 그 우선 순위는 순방향 애플리케이션 오퍼레이터보다 하나 높은 &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; 허용 &lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; 중첩 될 &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1730c5686998b78a3501c910101604876ebc6067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; is the least fixed point of the function &lt;code&gt;f&lt;/code&gt;, i.e. the least defined &lt;code&gt;x&lt;/code&gt; such that &lt;code&gt;f x = x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; 함수의 상기 고정 점 인 &lt;code&gt;f&lt;/code&gt; , 즉 상기 정의 된 &lt;code&gt;x&lt;/code&gt; 되도록 &lt;code&gt;f x = x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfc2f2d88b56286c1ebf9ed3d80daa53fd96e905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; takes its (first) two arguments in the reverse order of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; 역순으로의 (제 1) 2 개 개의 인수를 취하는 &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37e5bd55f93a77fdfca4edbda89e3cbbe06f6bba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt; b u x y&lt;/code&gt; runs the binary function &lt;code&gt;b&lt;/code&gt;&lt;em&gt;on&lt;/em&gt; the results of applying unary function &lt;code&gt;u&lt;/code&gt; to two arguments &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. From the opposite perspective, it transforms two inputs and combines the outputs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt; b u x y&lt;/code&gt; 이진 함수 실행 &lt;code&gt;b&lt;/code&gt; &lt;em&gt;에&lt;/em&gt; 단항 함수 적용의 결과 &lt;code&gt;u&lt;/code&gt; 두 개의 인자로 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; . 반대 관점에서 두 입력을 변환하고 출력을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="62e9e0d5cd073da4d6b7c6378fa6edc99955e292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; discards or ignores the result of evaluation, such as the return value of an &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 동작의 반환 값과 같은 평가 결과를 무시하거나 무시합니다.</target>
        </trans-unit>
        <trans-unit id="8de5809cf1322027425d66e0e26a6f07dc2283c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt; rp1 rp2 n c'&lt;/code&gt; matches the name of a binary data constructor and then parses its arguments using &lt;code&gt;rp1&lt;/code&gt; and &lt;code&gt;rp2&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt; rp1 rp2 n c'&lt;/code&gt; 는 이진 데이터 생성자의 이름을 일치시킨 다음각각 &lt;code&gt;rp1&lt;/code&gt; 과 &lt;code&gt;rp2&lt;/code&gt; 를 사용하여 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="ccf72b90ad816dea1b11908877441a74beee7d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readData&quot;&gt;readData&lt;/a&gt; p&lt;/code&gt; is a parser for datatypes where each alternative begins with a data constructor. It parses the constructor and passes it to &lt;code&gt;p&lt;/code&gt;. Parsers for various constructors can be constructed with &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt;&lt;/code&gt;, and combined with &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--124--62-&quot;&gt;(&amp;lt;|&amp;gt;)&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;&lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readData&quot;&gt;readData&lt;/a&gt; p&lt;/code&gt; 는 각 대안이 데이터 생성자로 시작하는 데이터 유형에 대한 파서입니다. 생성자를 구문 분석하고 &lt;code&gt;p&lt;/code&gt; 에 전달합니다. 다양한 생성자에 대한 파서로 구성 될 수있다 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt;&lt;/code&gt; 과 함께 &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--124--62-&quot;&gt;(&amp;lt;|&amp;gt;)&lt;/a&gt;&lt;/code&gt; 으로부터 &lt;code&gt;&lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4fd7d89575dc73aa7d75babcbe5618f3b2ca31aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt; rp n c'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;rp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt; rp n c'&lt;/code&gt; 는 단항 데이터 생성자의 이름을 찾은 다음 &lt;code&gt;rp&lt;/code&gt; 를 사용하여 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="ee47685d28202b9bc0ca12619f1cd0bebcd04d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt; n c n'&lt;/code&gt; matches the name of a binary data constructor and then parses its arguments using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt; n c n'&lt;/code&gt; 은 이진 데이터 생성자의 이름과 일치 한 다음 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt; 을 사용하여 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="75b5d12ec307d4525dd4577645cf26777df6a9fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinaryWith&quot;&gt;readsBinaryWith&lt;/a&gt; rp1 rp2 n c n'&lt;/code&gt; matches the name of a binary data constructor and then parses its arguments using &lt;code&gt;rp1&lt;/code&gt; and &lt;code&gt;rp2&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinaryWith&quot;&gt;readsBinaryWith&lt;/a&gt; rp1 rp2 n c n'&lt;/code&gt; 은 이진 데이터 생성자의 이름과 일치 한 다음 &lt;code&gt;rp1&lt;/code&gt; 을 사용하여 인수를 구문 분석합니다. 각각 과 &lt;code&gt;rp2&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="d9f16bab2111fe95700fed25029573a3d2d398c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsData&quot;&gt;readsData&lt;/a&gt; p d&lt;/code&gt; is a parser for datatypes where each alternative begins with a data constructor. It parses the constructor and passes it to &lt;code&gt;p&lt;/code&gt;. Parsers for various constructors can be constructed with &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt;&lt;/code&gt;, and combined with &lt;code&gt;mappend&lt;/code&gt; from the &lt;code&gt;Monoid&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsData&quot;&gt;readsData&lt;/a&gt; p d&lt;/code&gt; 는 각 대안이 데이터 생성자로 시작하는 데이터 유형에 대한 파서입니다. 생성자를 구문 분석하고 &lt;code&gt;p&lt;/code&gt; 에 전달합니다. 다양한 생성자위한 파서로 구성 될 수 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt;&lt;/code&gt; 와 결합 &lt;code&gt;mappend&lt;/code&gt; 로부터 &lt;code&gt;Monoid&lt;/code&gt; 클래스.</target>
        </trans-unit>
        <trans-unit id="c6e68175751ac7ad4e7ba2cc464dac95d4c7bacf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt; n c n'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt; n c n'&lt;/code&gt; 은 단항 데이터 생성자의 이름과 일치 한 다음 &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 를 사용하여 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="565705a2355c81f8c4e2407294fc04361b15cb5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt; n c n'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt; n c n'&lt;/code&gt; 은 단항 데이터 생성자의 이름과 일치 한 다음 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt; 을 사용하여 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="d859c3c1c9433e4e320b3df0fb6021b75e688ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnaryWith&quot;&gt;readsUnaryWith&lt;/a&gt; rp n c n'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;rp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnaryWith&quot;&gt;readsUnaryWith&lt;/a&gt; rp n c n'&lt;/code&gt; 은 단항 데이터 생성자의 이름과 일치 한 다음 &lt;code&gt;rp&lt;/code&gt; 를 사용하여 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="e3c172d2a7ad86490cf652f24903c3649b1aa189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinary1&quot;&gt;showsBinary1&lt;/a&gt; n d x y&lt;/code&gt; produces the string representation of a binary data constructor with name &lt;code&gt;n&lt;/code&gt; and arguments &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinary1&quot;&gt;showsBinary1&lt;/a&gt; n d x y&lt;/code&gt; 는우선 순위 컨텍스트 &lt;code&gt;d&lt;/code&gt; 에서이름 &lt;code&gt;n&lt;/code&gt; 과 인수 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 를 가진 이진 데이터 생성자의 문자열 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9a300ad3475e1a78c005d5d6ddfa8b2b8e08adb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinaryWith&quot;&gt;showsBinaryWith&lt;/a&gt; sp1 sp2 n d x y&lt;/code&gt; produces the string representation of a binary data constructor with name &lt;code&gt;n&lt;/code&gt; and arguments &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinaryWith&quot;&gt;showsBinaryWith&lt;/a&gt; sp1 sp2 n d x y&lt;/code&gt; 는우선 순위 컨텍스트 &lt;code&gt;d&lt;/code&gt; 에서이름 &lt;code&gt;n&lt;/code&gt; 과 인수 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 를 가진 이진 데이터 생성자의 문자열 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d47a16643a75a3c5fab1e61ce0611140717494a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary&quot;&gt;showsUnary&lt;/a&gt; n d x&lt;/code&gt; produces the string representation of a unary data constructor with name &lt;code&gt;n&lt;/code&gt; and argument &lt;code&gt;x&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary&quot;&gt;showsUnary&lt;/a&gt; n d x&lt;/code&gt; 는우선 순위 컨텍스트 &lt;code&gt;d&lt;/code&gt; 에서이름 &lt;code&gt;n&lt;/code&gt; 과 인수 &lt;code&gt;x&lt;/code&gt; 를 가진 단항 데이터 생성자의 문자열 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b9b0f1af708a14962b0ccd97c41e17ccbff7c404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary1&quot;&gt;showsUnary1&lt;/a&gt; n d x&lt;/code&gt; produces the string representation of a unary data constructor with name &lt;code&gt;n&lt;/code&gt; and argument &lt;code&gt;x&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary1&quot;&gt;showsUnary1&lt;/a&gt; n d x&lt;/code&gt; 는우선 순위 컨텍스트 &lt;code&gt;d&lt;/code&gt; 에서이름 &lt;code&gt;n&lt;/code&gt; 과 인수 &lt;code&gt;x&lt;/code&gt; 를 가진 단항 데이터 생성자의 문자열 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="93f3519c64292852fc53002ce6cba77a64fcdd1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnaryWith&quot;&gt;showsUnaryWith&lt;/a&gt; sp n d x&lt;/code&gt; produces the string representation of a unary data constructor with name &lt;code&gt;n&lt;/code&gt; and argument &lt;code&gt;x&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnaryWith&quot;&gt;showsUnaryWith&lt;/a&gt; sp n d x&lt;/code&gt; 는우선 순위 컨텍스트 &lt;code&gt;d&lt;/code&gt; 에서이름이 &lt;code&gt;n&lt;/code&gt; 이고 인수가 &lt;code&gt;x&lt;/code&gt; 인단항 데이터 생성자의 문자열 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e22281113e9dd1cbe3e2bf5cacab917c5656c03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; functors, sometimes referred to colloquially as &lt;code&gt;Cofunctor&lt;/code&gt;, even though the dual of a &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; is just a &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;. As with &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; the definition of &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; for a given ADT is unambiguous.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; 펑은 때때로으로 구어체로 언급 &lt;code&gt;Cofunctor&lt;/code&gt; a의 이중에도 불구하고, &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; 단지입니다 &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; 와 마찬가지로, 주어진 ADT에 대한 &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; 의 정의는 분명합니다.</target>
        </trans-unit>
        <trans-unit id="b42c9aeed70440c2245e1bdc0fcccba94bfdeddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; 는 주어진 맵에 있거나 없을 수있는 개별 키로 작업하기위한 가장 일반적인 작업입니다.</target>
        </trans-unit>
        <trans-unit id="2ae38a1a4793bb3007d6c675532b7dda58a09433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; 는 로 이동 &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4039febd01d4ad929bda656385767f1832c4f1b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; 는 로 이동 &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac4af7cbb1d410440a980688c976f3fe3c5ff9d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; 모든 키를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="79ad5f723e1b7d3813183bfa40d49217771fd0e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 사용하지 않습니다 문맥을 .</target>
        </trans-unit>
        <trans-unit id="bae7c1b83aea69ace89fdf31420608f09cce39b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</target>
        </trans-unit>
        <trans-unit id="7e5c9fe1679dca6bee4ccbedab353e71a7814619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 컨텍스트를사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d957addf52db3e0213174fd9c1cf59d71de9f689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 에는 2 개의 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵이 필요합니다. 전술을 사용하여 맵을 병합합니다. 기본 동작 인 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; 를 통해 동작을 이해하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="723244082bcaaebee329d80c4dcbafe795c08afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 은 먼저이 맵을 키로 &quot;정렬&quot;합니다.</target>
        </trans-unit>
        <trans-unit id="c66bf261b0f59a091bea447b5e9d24a00bd2565f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; 는 2 개의 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵을 취 합니다. 전술을 사용하여 맵을 병합합니다. 그것의 행동은 기본적인 전술, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; 를 통해 가장 잘 이해됩니다. .</target>
        </trans-unit>
        <trans-unit id="3f09eafeaf43973b2b4ef052ceb1d95ba6373ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; 는 맵들을 키로 &quot;정렬&quot;합니다 :</target>
        </trans-unit>
        <trans-unit id="2347113bc06e17f32ecf291f762e9885cac24fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; 은 모든 항목을 둡니다.</target>
        </trans-unit>
        <trans-unit id="50c663f83c135e82902f8082bebb4a53a45e651f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; 모든 키를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="db2a604a33c67a06ac112eaa1312583a9b365e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 에는 2 개의 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵이 필요합니다. 전술을 사용하여 맵을 병합합니다. 그 행동은 기본적인 전술, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; 를 통해 가장 잘 이해됩니다. .</target>
        </trans-unit>
        <trans-unit id="b90b5585b71b6245394bbd3159a3e9d4e8e2ce16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 은 먼저이 맵을 키로 &quot;정렬&quot;합니다.</target>
        </trans-unit>
        <trans-unit id="d2913faa37c5de84e945d7fcad5503f42328bb22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; 는 2 개의 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵을 취 합니다. 전술을 사용하여 맵을 병합합니다. 그것의 행동은 기본적인 전술, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; 를 통해 가장 잘 이해됩니다 .</target>
        </trans-unit>
        <trans-unit id="014a1f0b8624ffd74df3114df2903b00b9900bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; 는 먼저이 맵들을 키로 &quot;정렬&quot;합니다 :</target>
        </trans-unit>
        <trans-unit id="a5df82aec10b0ea129154f63ba5d40a88364ec99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; 은 모든 항목을 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="4891503ae61af9eb3f8ccdce6c57547ed7f1c24e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; 는 주어진 맵에 있거나 없을 수있는 개별 키로 작업하기위한 가장 일반적인 작업입니다.</target>
        </trans-unit>
        <trans-unit id="008f5e2416d622a3b4d999e903757574cfc3eb8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; 는 로 이동 &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11d8ccf2d98e7c5a960cd8ff74b21f462cc5d0c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; 는 로 이동 &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b376f16d49952e6c57ad03e3f8587fca1f0a7f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; 는 주어진 맵에 있거나 없을 수있는 개별 키로 작업하기위한 가장 일반적인 작업입니다.</target>
        </trans-unit>
        <trans-unit id="7a711168233422c9c61c28211e2d2a8a244ec4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; 는 로 이동 &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6cbf78f1132522114c918dec1daf7d2cdc9dc3dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; 는 로 이동 &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14c8ab7835216390da8de4e36d5dcbfe869e0aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intset#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-intset#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt;, but works only when &lt;code&gt;f&lt;/code&gt; is strictly increasing. &lt;em&gt;The precondition is not checked.&lt;/em&gt; Semi-formally, we have:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intset#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-intset#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt; 이지만 &lt;code&gt;f&lt;/code&gt; 가 엄격하게 증가하는경우에만 작동합니다. &lt;em&gt;전제 조건은 확인되지 않습니다 .. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ &lt;/em&gt;반 공식적으로 우리는 다음을 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f034357fe9650ed6aac938a68a80035daa5a8a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intset-internal#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-intset-internal#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt;, but works only when &lt;code&gt;f&lt;/code&gt; is strictly increasing. &lt;em&gt;The precondition is not checked.&lt;/em&gt; Semi-formally, we have:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intset-internal#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-intset-internal#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt; 이지만 &lt;code&gt;f&lt;/code&gt; 가 엄격하게 증가하는경우에만 작동합니다. &lt;em&gt;전제 조건은 확인되지 않습니다 .. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ &lt;/em&gt;반 공식적으로 우리는 다음을 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="75fdd3247c18a6f969cc6727a449fcc698c96ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; acts as a barrier to reordering. Multiple &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; operations occur in strict program order. An &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; is never observed to take place ahead of any earlier (in program order) &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; operations, or after any later &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; 는 재정렬의 장벽 역할을합니다. 여러 &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; 작업이 엄격한 프로그램 순서로 발생합니다. &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; 은 (프로그램 순서에서) 이전의 모든 앞서 자리를 차지할 관찰되지 않습니다 &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; 의 작업을 모든 상위 후 &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; 작업.</target>
        </trans-unit>
        <trans-unit id="fc4c8d1102aac436b8f0f5793df40e7ad1a26754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; does not apply the function strictly. This is important to know even if all you are doing is replacing the value. For example, this will leak memory:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; 는 함수를 엄격하게 적용하지 않습니다. 당신이하는 모든 일이 가치를 대체하는 경우에도 알아야합니다. 예를 들어 메모리가 누수됩니다.</target>
        </trans-unit>
        <trans-unit id="910220a4bf99619613452961e0bdc476f9d31613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; 인스턴스 :</target>
        </trans-unit>
        <trans-unit id="17402b6d5cdd5dee68d32bd78a550574909d97f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ix#v:range&quot;&gt;range&lt;/a&gt; (l,u) !! &lt;a href=&quot;data-ix#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;data-ix#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ix#v:range&quot;&gt;range&lt;/a&gt; (l,u) !! &lt;a href=&quot;data-ix#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ix#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt; (l, u) i 일 때</target>
        </trans-unit>
        <trans-unit id="0767e85692cf7971c7128a051317950f4934ce8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ix#v:range&quot;&gt;range&lt;/a&gt; (l,u) &lt;a href=&quot;ghc-list#v:-33--33-&quot;&gt;!!&lt;/a&gt; &lt;a href=&quot;data-ix#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;data-ix#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ix#v:range&quot;&gt;range&lt;/a&gt; (l,u) &lt;a href=&quot;ghc-list#v:-33--33-&quot;&gt;!!&lt;/a&gt; &lt;a href=&quot;data-ix#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-ix#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt; (l, u) i 일 때 인덱스 (l, u) i == i</target>
        </trans-unit>
        <trans-unit id="bf08b6775117ab370780f3fa38a2974114429e1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; returns the conjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; Bools의 컨테이너의 연계를 반환합니다. 결과가 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 가 되려면 컨테이너가 유한해야합니다. &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; A로부터 그러나, 결과 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 유한 한 멀리 왼쪽 끝에서 값.</target>
        </trans-unit>
        <trans-unit id="74756822459bc859224ae76949ca4d8451713bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns a tuple where first element is longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that &lt;em&gt;do not satisfy&lt;/em&gt;&lt;code&gt;p&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; 술어 &lt;code&gt;p&lt;/code&gt; 및 목록 &lt;code&gt;xs&lt;/code&gt; 에 적용되는 break 는 첫 번째 요소가 &lt;code&gt;p&lt;/code&gt; 를&lt;em&gt;만족하지 않는 &lt;/em&gt; &lt;code&gt;xs&lt;/code&gt; 의 요소중 가장 긴 접두사 (비어있을 수 있음) 인 튜플을 반환합니다.&lt;em&gt;&lt;/em&gt; 와 두 번째 요소하면 목록의 나머지 부분입니다 :</target>
        </trans-unit>
        <trans-unit id="210cd952b09d40fb666c64e9889ffe2f63e9f918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; p 는 아님 ) .</target>
        </trans-unit>
        <trans-unit id="fb8872c784d6122597f203ddf289f73e17b45998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite list into a circular one, or equivalently, the infinite repetition of the original list. It is the identity on infinite lists.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 은 유한 목록을 원형 목록 또는 원래 목록의 무한 반복에 묶습니다. 무한 목록의 정체성입니다.</target>
        </trans-unit>
        <trans-unit id="fae9a76b8168bb610e4b93a69e4545a40f8a957a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns the suffix of &lt;code&gt;xs&lt;/code&gt; after the first &lt;code&gt;n&lt;/code&gt; elements, or &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; 는처음 &lt;code&gt;n&lt;/code&gt; 요소뒤의 &lt;code&gt;xs&lt;/code&gt; 접미사를 반환하거나 &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs 인 경우 &lt;code&gt;[]&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac47277d251f5f62697c191a6f31151f02eac22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns the suffix of &lt;code&gt;xs&lt;/code&gt; after the first &lt;code&gt;n&lt;/code&gt; elements, or &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; 는첫 번째 &lt;code&gt;n&lt;/code&gt; 요소다음에 &lt;code&gt;xs&lt;/code&gt; 의 접미사를 반환하거나 &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;길이&lt;/a&gt; xs 인 경우 &lt;code&gt;[]&lt;/code&gt; 를 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="8b2b0e904bb38a04d2ef1dee542a51826ccfea34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 반환합니다 후 남아있는 접미사 &lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a78ffb53dec25cd5b26be402229d91422497247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 후에 남아있는 접미사 반환 &lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;p xs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f06c0a3fece83ba56f78ea746b56887b41e3ca0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:intercalate&quot;&gt;intercalate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;xs xss&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;ghc-list#v:concat&quot;&gt;concat&lt;/a&gt; (&lt;a href=&quot;data-list#v:intersperse&quot;&gt;intersperse&lt;/a&gt; xs xss))&lt;/code&gt;. It inserts the list &lt;code&gt;xs&lt;/code&gt; in between the lists in &lt;code&gt;xss&lt;/code&gt; and concatenates the result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:intercalate&quot;&gt;intercalate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;xs xss&lt;/code&gt; 는 &lt;code&gt;(&lt;a href=&quot;ghc-list#v:concat&quot;&gt;concat&lt;/a&gt; (&lt;a href=&quot;data-list#v:intersperse&quot;&gt;intersperse&lt;/a&gt; xs xss))&lt;/code&gt; . &lt;code&gt;xss&lt;/code&gt; 의 목록 사이에 &lt;code&gt;xs&lt;/code&gt; 목록을 삽입하고 결과를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="7aa94079a6d414e0c1d2fbdbedec3c39781ae71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:isSubsequenceOf&quot;&gt;isSubsequenceOf&lt;/a&gt; x y&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt; x (&lt;a href=&quot;data-list#v:subsequences&quot;&gt;subsequences&lt;/a&gt; y)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:isSubsequenceOf&quot;&gt;isSubsequenceOf&lt;/a&gt; x y&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt; x (&lt;a href=&quot;data-list#v:subsequences&quot;&gt;subsequences&lt;/a&gt; y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fea0c7dee1646151d0c41cf7561f5599cf5879c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;f x&lt;/code&gt; returns an infinite list of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;f x&lt;/code&gt; 반복적으로 적용 무한리스트 반환 &lt;code&gt;f&lt;/code&gt; 에 &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="be77988f619aa34215190c1ce1269e29eb43ec7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; is the strict version of &lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; 은 엄격한 &lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; 버전입니다. .</target>
        </trans-unit>
        <trans-unit id="a6b355bf6db9bddb3ef42dcc92acecadb62b4464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of strings at newline characters. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 은 줄 바꿈 문자에서 문자열을 문자열 목록으로 나눕니다. 결과 문자열에는 줄 바꿈이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c7c3c526138429917d875b2ee9459d8aae6ac070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt; 의 부정입니다.</target>
        </trans-unit>
        <trans-unit id="dfec54f2de5cc7b963530c56b33fbe8dee87494a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:null&quot;&gt;null&lt;/a&gt;&lt;/code&gt; is expected to terminate even for infinite structures. The default implementation terminates provided the structure is bounded on the left (there is a left-most element).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:null&quot;&gt;null&lt;/a&gt;&lt;/code&gt; 무한 구조의 경우에도 null 이 종료 될 것으로 예상됩니다. 구조가 왼쪽에 경계가 지정되어 있으면 기본 구현이 종료됩니다 (가장 왼쪽에있는 요소가 있음).</target>
        </trans-unit>
        <trans-unit id="3af813451fee92108450896cacd3ba43d040b727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; returns the disjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; Bools 컨테이너의 분리를 반환합니다. 결과가 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 가 되려면 컨테이너가 유한해야합니다. &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , 그러나, 결과 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 유한 한 멀리 왼쪽 끝에서 값.</target>
        </trans-unit>
        <trans-unit id="dda93e3b54862e727a709d21bb63838307051d98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt;&lt;code&gt;x&lt;/code&gt; is an infinite list, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 는 무한리스트이며 &lt;code&gt;x&lt;/code&gt; 는 모든 원소의 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bcfd09366714050409a6d88c2b27dc4f007eb601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n x&lt;/code&gt; is a list of length &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt; the value of every element. It is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n x&lt;/code&gt; 길이의 목록 &lt;code&gt;n&lt;/code&gt; 과 &lt;code&gt;x&lt;/code&gt; 각 요소의 값. 보다 일반적인 &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; 의 인스턴스이며,여기서 &lt;code&gt;n&lt;/code&gt; 은 일체형 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7447df1dc1e931b7aec5beeb8af2ebc65ca0b42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;&lt;code&gt;xs&lt;/code&gt; returns the elements of &lt;code&gt;xs&lt;/code&gt; in reverse order. &lt;code&gt;xs&lt;/code&gt; must be finite.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; &lt;code&gt;xs&lt;/code&gt; 의 요소를 반환 &lt;code&gt;xs&lt;/code&gt; 역순으로합니다. &lt;code&gt;xs&lt;/code&gt; 는 유한해야합니다.</target>
        </trans-unit>
        <trans-unit id="083fae862aceed4ce7a648fe3ae0933d70dfe52c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns a tuple where first element is longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; 술어 &lt;code&gt;p&lt;/code&gt; 및 목록 &lt;code&gt;xs&lt;/code&gt; 에 적용되는 span 은 첫 번째 요소가 &lt;code&gt;p&lt;/code&gt; 를 만족하는 &lt;code&gt;xs&lt;/code&gt; 요소 중 가장 긴 접두사 (비어있을 수 있음) 인 튜플을 반환합니다. 이고 두 번째 요소가 목록의 나머지 부분 인 합니다.</target>
        </trans-unit>
        <trans-unit id="39942b62d01cd98ef4b7a143e20d00797166b9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 는 &lt;code&gt;(&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c35e4d5660c3e9b14cdff6f38dd2a70bf23cb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns a tuple where first element is &lt;code&gt;xs&lt;/code&gt; prefix of length &lt;code&gt;n&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; 는 첫 번째 요소가길이 &lt;code&gt;n&lt;/code&gt; 의 &lt;code&gt;xs&lt;/code&gt; 접두사이고 두 번째 요소가 목록의 나머지 부분 인튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a3ecfcbbda562b1500d97e220e4e5b73ea2716b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;, applied to a list &lt;code&gt;xs&lt;/code&gt;, returns the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;xs&lt;/code&gt; itself if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; , 목록 &lt;code&gt;xs&lt;/code&gt; 에 적용,길이 &lt;code&gt;n&lt;/code&gt; 의 &lt;code&gt;xs&lt;/code&gt; 접두사또는 &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;길이&lt;/a&gt; xs 인 경우 &lt;code&gt;xs&lt;/code&gt; 자체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="466cc5d84ae667a0ce4b010de26dcd0964f6b445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;, applied to a list &lt;code&gt;xs&lt;/code&gt;, returns the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;xs&lt;/code&gt; itself if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; 리스트 &lt;code&gt;xs&lt;/code&gt; 에 적용되는 &lt;code&gt;n&lt;/code&gt; 을취 하면길이 &lt;code&gt;n&lt;/code&gt; 의 &lt;code&gt;xs&lt;/code&gt; 접두어를 반환하거나 &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;길이&lt;/a&gt; xs 이면 &lt;code&gt;xs&lt;/code&gt; 자체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="07e5e536d308159f982214b45875ba86dac0bedc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 술어에 적용, &lt;code&gt;p&lt;/code&gt; 및 목록 &lt;code&gt;xs&lt;/code&gt; 의 (하늘의) 가장 긴 접두사 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="833b596b8f1f8e4d1db0bf86d8918d3a5fc252ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 및 목록 &lt;code&gt;xs&lt;/code&gt; , 가장 긴 접두사 (하늘의) 반환 &lt;code&gt;xs&lt;/code&gt; 충족의 그 요소의 &lt;code&gt;p&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd2190a79520de0176952fdf49bdfd43f47d37aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; 에 역 동작이다 &lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . 각각에 새 줄 바꿈을 추가 한 후 행을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="2e4a5cb1dbbcdce4dfaa8d5831150a104e973434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt;. It joins words with separating spaces.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; 에 역 동작 인 &lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; . 공백을 구분하여 단어를 결합합니다.</target>
        </trans-unit>
        <trans-unit id="0c363ff83c052f1a5fda294cf437002219baf309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforms a list of pairs into a list of first components and a list of second components.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; 은 쌍 목록을 첫 번째 구성 요소 목록과 두 번째 구성 요소 목록으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e9cc205824bdb63c5735dae1cb71a0d4e0ab9fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of words, which were delimited by white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 는 문자열을 단어 목록으로 나누고 공백으로 구분합니다.</target>
        </trans-unit>
        <trans-unit id="58678d61bcb15e844547c926f2c586eeb14116c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 은 목록 융합이 가능하지만 첫 번째 목록 인수와 결과 목록으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="d7e3524c7b6d4f0b5d222eb042dd3e54b3295ebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 가 게으르다 :</target>
        </trans-unit>
        <trans-unit id="b350edd90b6983dc064b861394a52cbc6d0f70aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; takes three lists and returns a list of triples, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; 은 세 개의 목록을 가져와 &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 과 유사한 트리플 목록을 반환합니다. 목록 융합은 가능하지만 첫 번째 목록 인수와 결과 목록으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="ee942aefc23cf3c09c0a308b45b8c40b86ed3734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 는 목록 융합이 가능하지만 첫 번째 목록 인수와 결과 목록으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="77e19f46c95897a3af5d30db0ed569e6d75608e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 는 게으른 것입니다 :</target>
        </trans-unit>
        <trans-unit id="7f2f7b1856e138b6cd58236babce33ec043d03da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:cycle&quot;&gt;cycle&lt;/a&gt; xs&lt;/code&gt; returns the infinite repetition of &lt;code&gt;xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:cycle&quot;&gt;cycle&lt;/a&gt; xs&lt;/code&gt; 반환에게의 무한 반복 &lt;code&gt;xs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="054af56edff9d20937f110f2ab9d51b9a0040c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:drop&quot;&gt;drop&lt;/a&gt; n xs&lt;/code&gt; drops the first &lt;code&gt;n&lt;/code&gt; elements off the front of the sequence &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:drop&quot;&gt;drop&lt;/a&gt; n xs&lt;/code&gt; 는 첫 번째 &lt;code&gt;n&lt;/code&gt; 요소를 시퀀스 &lt;code&gt;xs&lt;/code&gt; 앞쪽에서떨어 뜨립니다.</target>
        </trans-unit>
        <trans-unit id="584327d6b02c14505b5ba028043a2580e98bace9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; 반환합니다 후 남아있는 접미사 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e431f5d29be52591f9b0f25baede2048beda700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:filter&quot;&gt;filter&lt;/a&gt; p xs&lt;/code&gt; removes any elements from &lt;code&gt;xs&lt;/code&gt; that do not satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:filter&quot;&gt;filter&lt;/a&gt; p xs&lt;/code&gt; 어떠한 요소 제거 &lt;code&gt;xs&lt;/code&gt; 만족하지 않는 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71eba07ca95b057934a7e3b90c50564141d3ba82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;, but uses the knowledge that its input is non-empty to produce guaranteed non-empty output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; 처럼 작동하지만 입력이 비어 있지 않다는 지식을 사용하여 비어 있지 않은 출력을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="f35615eb1cc908ec41c35802dbe3be7ae73d94f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt;, but sorts the list first so that each equivalence class has, at most, one list in the output</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; 이 처럼 작동 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; 하지만, 출력에 첫 각각의 등가 클래스가 가지고있는, 최대, 하나 개의 목록을 목록을 정렬</target>
        </trans-unit>
        <trans-unit id="1e239517a9fe5ea1cb9170104c3d8431f12aee87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith1&quot;&gt;groupAllWith1&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith1&quot;&gt;groupAllWith1&lt;/a&gt;&lt;/code&gt; 는 이다 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; 로 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; 이 이다 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97691675b79e2594cbfe7764e120cd20ba5ce58d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;, but uses the provided equality predicate instead of &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; 과 유사하게 작동하지만 &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; 대신 제공된 등식 술어를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6eb7284e219aa035c9e6dfc373f64002dcb799b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy1&quot;&gt;groupBy1&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy1&quot;&gt;groupBy1&lt;/a&gt;&lt;/code&gt; 는 이다 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; 로 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; 이다 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35233c6d489657e293fdb9ffa426c238f04eee9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;, but uses the provided projection when comparing for equality</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; 처럼 작동하지만 동등성을 비교할 때 제공된 투영을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="74b150652bfa039cb7cbac8551f8a113391218f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; 는 이다 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; 로 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; 는 이다 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f0c2464ce2c6c1562dacab4bbc3b28c939a742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:insert&quot;&gt;insert&lt;/a&gt; x xs&lt;/code&gt; inserts &lt;code&gt;x&lt;/code&gt; into the last position in &lt;code&gt;xs&lt;/code&gt; where it is still less than or equal to the next element. In particular, if the list is sorted beforehand, the result will also be sorted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:insert&quot;&gt;insert&lt;/a&gt; x xs&lt;/code&gt; 인서트 &lt;code&gt;x&lt;/code&gt; 의 최종 위치로 &lt;code&gt;xs&lt;/code&gt; 는 여전히보다 작거나 다음 요소와 동일. 특히 목록이 미리 정렬되어 있으면 결과도 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="e9dad5c32b3e3017653d01d42887df4a7b9c12ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; produces the infinite sequence of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; 를 반복 하면 &lt;code&gt;f&lt;/code&gt; 에서 &lt;code&gt;x&lt;/code&gt; 까지반복되는 무한 반복 시퀀스가 ​​생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4f96f44d2963142a21029600eb3038c18489dbd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nonEmpty&quot;&gt;nonEmpty&lt;/a&gt;&lt;/code&gt; efficiently turns a normal list into a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; stream, producing &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the input is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nonEmpty&quot;&gt;nonEmpty&lt;/a&gt;&lt;/code&gt; 는 일반 목록을 효율적으로 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; 스트림으로 변환하여 입력이 비어 있으면 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7dd15d1693ab0823fdd43a8b9040f11bd5d73ffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; returns a constant stream, where all elements are equal to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; 는 모든 요소가 &lt;code&gt;x&lt;/code&gt; 와 동일한 상수 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e1d3d7ca5b5b25879b4b578aa032169572f514bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; a finite NonEmpty stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; 유한 NonEmpty 스트림을 반전 시킵니다.</target>
        </trans-unit>
        <trans-unit id="e49ec9e9c616e86e9d7f6c0d3739b142a25da82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a stream of successive reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 은 유사하다 &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 했으나 왼쪽 연속 감소 값의 스트림을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="c227a365ed6370eb69767b2b0a5537af15cea9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="95c281c8e92c5cb31d27882f1ac940f3ec359f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; is the right-to-left dual of &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt;. Note that</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; 는 오른쪽에서 왼쪽으로 이중입니다 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; . 참고</target>
        </trans-unit>
        <trans-unit id="05394d6659db57721ced63e56767a4eb3d58188c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; 의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="28ce503ec823f7566d170cda10bd6082f83f458f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:some1&quot;&gt;some1&lt;/a&gt; x&lt;/code&gt; sequences &lt;code&gt;x&lt;/code&gt; one or more times.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:some1&quot;&gt;some1&lt;/a&gt; x&lt;/code&gt; 시퀀스 &lt;code&gt;x&lt;/code&gt; 1 회 이상</target>
        </trans-unit>
        <trans-unit id="f9968cda9de8e1dcf33132950a70615f3594fc75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt;, behaves the same as &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; 의sortBy 는 &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; 와 동일하게 동작합니다</target>
        </trans-unit>
        <trans-unit id="aafd464b59de1f767b81b50e03dfc7e7dba1d729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortWith&quot;&gt;sortWith&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt;, behaves the same as:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortWith&quot;&gt;sortWith&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; 의 경우 sortWith 는다음과 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a0fe060d05959a2a7dd93da15b7b0431e9a15228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:span&quot;&gt;span&lt;/a&gt; p xs&lt;/code&gt; returns the longest prefix of &lt;code&gt;xs&lt;/code&gt; that satisfies &lt;code&gt;p&lt;/code&gt;, together with the remainder of the stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:span&quot;&gt;span&lt;/a&gt; p xs&lt;/code&gt; 는나머지 스트림과 함께 &lt;code&gt;p&lt;/code&gt; 를 만족하는 &lt;code&gt;xs&lt;/code&gt; 의 가장 긴 접두사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c11d64a4425643ad97e2869f0795a2189ceb65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:splitAt&quot;&gt;splitAt&lt;/a&gt; n xs&lt;/code&gt; returns a pair consisting of the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt; and the remaining stream immediately following this prefix.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:splitAt&quot;&gt;splitAt&lt;/a&gt; n xs&lt;/code&gt; 는길이 &lt;code&gt;n&lt;/code&gt; 의 &lt;code&gt;xs&lt;/code&gt; 접두사와이 접두사 바로 다음의 나머지 스트림으로 구성된 쌍을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7fa2880890e75dc6279af041efe79530a31916d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:take&quot;&gt;take&lt;/a&gt; n xs&lt;/code&gt; returns the first &lt;code&gt;n&lt;/code&gt; elements of &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:take&quot;&gt;take&lt;/a&gt; n xs&lt;/code&gt; 반환 처음 &lt;code&gt;n&lt;/code&gt; 개의 요소 &lt;code&gt;xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfff5e0c1961ce72da33aacb70bc3e52b00de0c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; returns the longest prefix of the stream &lt;code&gt;xs&lt;/code&gt; for which the predicate &lt;code&gt;p&lt;/code&gt; holds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; 는술어 &lt;code&gt;p&lt;/code&gt; 가 보유하는스트림 &lt;code&gt;xs&lt;/code&gt; 의 가장 긴 접 두부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="aae16adbf20336b4f8d0731d0b64642a76abd6d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt;, behaves the same as &lt;code&gt;&lt;a href=&quot;data-list#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; The rows/columns need not be the same length, in which case &amp;gt; transpose . transpose /= id</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; 용 &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; , 동일한 동작 &lt;code&gt;&lt;a href=&quot;data-list#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; 행 / 열은 동일한 길이의 경우&amp;gt; 전치 될 필요는 없다. 전치 / = id</target>
        </trans-unit>
        <trans-unit id="b72393d40baafdabb1e85c4305e84cd69b6f5e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:uncons&quot;&gt;uncons&lt;/a&gt;&lt;/code&gt; produces the first element of the stream, and a stream of the remaining elements, if any.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:uncons&quot;&gt;uncons&lt;/a&gt;&lt;/code&gt; 는 스트림의 첫 번째 요소와 나머지 요소의 스트림 (있는 경우)을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4d772ed13de87ae9af2e65ec8fdf8d4ac8ca681b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unfold&quot;&gt;unfold&lt;/a&gt;&lt;/code&gt; produces a new stream by repeatedly applying the unfolding function to the seed value to produce an element of type &lt;code&gt;b&lt;/code&gt; and a new seed value. When the unfolding function returns &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; instead of a new seed value, the stream ends.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unfold&quot;&gt;unfold&lt;/a&gt;&lt;/code&gt; 는 펼침 기능을 시드 값에 반복적으로 적용하여 유형 &lt;code&gt;b&lt;/code&gt; 의 요소와 새로운 시드 값을생성하여 새 스트림을 생성합니다. 전개 함수가새로운 시드 값 대신 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을반환하면 스트림이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="e63e5ab49acf2e686a345f2b62fd1ba3ac5342e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; , it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; . However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</target>
        </trans-unit>
        <trans-unit id="6f19443e8765ba74231c687d4090021e7219a2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; 는 주어진 맵에 있거나 없을 수있는 개별 키로 작업하기위한 가장 일반적인 작업입니다. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; 같은 사소한 functor와 함께 사용하면 &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; 과같은 특수화 된 결합기보다 약간 느립니다. 그러나 functor가 사소하지 않고 키 비교가 특히 저렴하지 않은 경우 가장 빠른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="60f093c7a00f8f7fd651a5bb814332ae5278d6bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; 는 주어진 맵에있을 수도 있고 없을 수도있는 개별 키로 작업하기위한 가장 일반적인 작업입니다. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; 와같은 사소한 펑터와 함께 사용하면 &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; 와같은 더 전문화 된 결합 자보다 약간 느립니다. 그러나 functor가 사소하지 않고 키 비교가 특별히 저렴하지 않은 경우 가장 빠른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="429ed4dd642c042da53964b688f98097a1d73eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; 은 모든 키를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="c184b6f2a6aba47930850c16198b142c0568ecf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 문맥을사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="19a0fb0fc670464e82a77824d6c9a10126a42325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</target>
        </trans-unit>
        <trans-unit id="8ee32cffe72ae62bf24561569f0d055dced04e6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 컨텍스트를사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="58e8082e4ea4ec3d98a00b0c4747fe627af06250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 에는 2 개의 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵이 필요합니다. 전술을 사용하여 맵을 병합합니다. 기본 동작 인 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; 를 통해 동작을 가장 잘 이해할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="5d3f936b3f66cc055ff9f3cb9b908c2fac2ab7aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 은 먼저이 맵을 키로 &quot;정렬&quot;합니다.</target>
        </trans-unit>
        <trans-unit id="013f79227dfa20297b778672c05e0b43bd63dd8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; 는 2 개의 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵을 취 합니다. 전술을 사용하여 맵을 병합합니다. 그것의 행동은 기본적인 전술, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; 를 통해 가장 잘 이해됩니다.</target>
        </trans-unit>
        <trans-unit id="793964e4243d7b404fc7cec82a1480ebf9992aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; 은 모든 항목을 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="9d15a27af8d72ad74218e26425c0ff8b310666c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; 은 모든 키를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="ee79e76d399e0968ddbfd51345f30450a442260e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 에는 2 개의 &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵이 필요합니다. 전술을 사용하여 맵을 병합합니다. 기본 동작 인 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; 를 통해 동작을 가장 잘 이해할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="09051217dd35d0a7762f1543822b6ef7f86d5218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 은 먼저이 맵을 키로 &quot;정렬&quot;합니다.</target>
        </trans-unit>
        <trans-unit id="cf3106bb37c3e7721b8913515442f392089c68a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; 는 2 개의 &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; 전술, &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; 전술 및 2 개의 맵을 취 합니다. 전술을 사용하여 맵을 병합합니다. 그것의 행동은 기본적인 전술, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; 를 통해 가장 잘 이해됩니다.</target>
        </trans-unit>
        <trans-unit id="5bdce71467f909a0006caef007b6a4c488f00f40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; inconsistency</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; 의 불일치</target>
        </trans-unit>
        <trans-unit id="5305ea5f19cbe3258939a5429c4619f0ce44095c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; 은 모든 항목을 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="b160283fdd8783b175ef47a35061d76f5f823dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; , it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; . However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</target>
        </trans-unit>
        <trans-unit id="039dbc286771a53e2f671d926b118226f632815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; 는 주어진 맵에 있거나 없을 수있는 개별 키로 작업하기위한 가장 일반적인 작업입니다. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; 같은 사소한 functor와 함께 사용하면 &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; 과같은 특수화 된 결합기보다 약간 느립니다. 그러나 functor가 사소하지 않고 키 비교가 특히 저렴하지 않은 경우 가장 빠른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="9f1cea6f4ae071c212b2404320b378aa61886a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; 는 주어진 맵에있을 수도 있고 없을 수도있는 개별 키로 작업하기위한 가장 일반적인 작업입니다. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; 와같은 사소한 펑터와 함께 사용하면 &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; 와같은 더 전문화 된 결합 자보다 약간 느립니다. 그러나 functor가 사소하지 않고 키 비교가 특별히 저렴하지 않은 경우 가장 빠른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="05343277431320ef1bd18b74646a1bba1283ae83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a&lt;/code&gt; is isomorphic to &lt;code&gt;&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt;, but precedes it historically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt; 와 동형이지만 역사적으로 선행합니다.</target>
        </trans-unit>
        <trans-unit id="88e7ab0a03c3bd6f249b097acf0e14dc54a28943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#t:Last&quot;&gt;Last&lt;/a&gt; a&lt;/code&gt; is isomorphic to &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a)&lt;/code&gt;, and thus to &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#t:Last&quot;&gt;Last&lt;/a&gt; a&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a)&lt;/code&gt; 과isomorphic이므로 &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cace9a3bcb54ed62f5823f78eea2884fd4570e80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt; @(Op a b)&lt;/code&gt; without newtypes is &lt;code&gt;mempty @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;_ -&amp;gt; mempty&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt; @(Op a b)&lt;/code&gt; 는 &lt;code&gt;mempty @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;_ -&amp;gt; mempty&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2ca71ec332f93ec501b1abf2bfc9b555b6155321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; on comparisons always returns &lt;code&gt;EQ&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; EQ)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 비교시 mempty 는 항상 &lt;code&gt;EQ&lt;/code&gt; 를 반환합니다. 뉴 타입이 없으면 이것은 &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; EQ)&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="0166c65dded54e6d981f04ff117ed7f140d5c1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; on equivalences always returns &lt;code&gt;True&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; True)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 에 대한 mempty 는 항상 &lt;code&gt;True&lt;/code&gt; 를 반환합니다. newtype이 없으면 이것은 &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; True)&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="8df5142fa9d636f30017345a1e7b31e6706631e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; on predicates always returns &lt;code&gt;True&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 술어에 대한 mempty 는 항상 &lt;code&gt;True&lt;/code&gt; 를 반환합니다. newtype이 없으면 이것은 &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt; True&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="6135655f2ed4d64be31cb32841c5492efb402109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; 인스턴스 :</target>
        </trans-unit>
        <trans-unit id="8d84ec0f4f68b48892f925c1b4c9273bf7fe62a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-proxy#t:Proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/code&gt; is a type that holds no data, but has a phantom parameter of arbitrary type (or even kind). Its use is to provide type information, even though there is no value available of that type (or it may be too costly to create one).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-proxy#t:Proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/code&gt; 는 데이터를 보유하지 않는 유형이지만 임의 유형 (또는 종류)의 팬텀 매개 변수를 갖습니다. 해당 유형에 사용 가능한 값이 없더라도 유형 정보를 제공하는 데 사용됩니다 (또는이를 작성하기에는 너무 비용이 많이들 수 있음).</target>
        </trans-unit>
        <trans-unit id="d79a8f4b37526f6439cf4cc61e020ede1b643b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-proxy#v:asProxyTypeOf&quot;&gt;asProxyTypeOf&lt;/a&gt;&lt;/code&gt; is a type-restricted version of &lt;code&gt;&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;. It is usually used as an infix operator, and its typing forces its first argument (which is usually overloaded) to have the same type as the tag of the second.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-proxy#v:asProxyTypeOf&quot;&gt;asProxyTypeOf&lt;/a&gt;&lt;/code&gt; 는 유형이 제한된 &lt;code&gt;&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; 버전입니다. 일반적으로 중위 연산자로 사용되며, 입력하면 첫 번째 인수 (일반적으로 오버로드 됨)가 두 번째 태그와 동일한 유형이되도록합니다.</target>
        </trans-unit>
        <trans-unit id="0d3b1fa648ace6d53bef761e60145ede65d3b6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ratio#v:approxRational&quot;&gt;approxRational&lt;/a&gt;&lt;/code&gt;, applied to two real fractional numbers &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;epsilon&lt;/code&gt;, returns the simplest rational number within &lt;code&gt;epsilon&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt;. A rational number &lt;code&gt;y&lt;/code&gt; is said to be &lt;em&gt;simpler&lt;/em&gt; than another &lt;code&gt;y'&lt;/code&gt; if</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ratio#v:approxRational&quot;&gt;approxRational&lt;/a&gt;&lt;/code&gt; 이 실제 분수에 적용, &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;epsilon&lt;/code&gt; , 내 간단한 유리수 반환 &lt;code&gt;epsilon&lt;/code&gt; 의 &lt;code&gt;x&lt;/code&gt; . 유리수의 &lt;code&gt;y&lt;/code&gt; 것으로 알려져&lt;em&gt; 간단하게&lt;/em&gt; 다른 것보다 &lt;code&gt;y'&lt;/code&gt; 의 경우</target>
        </trans-unit>
        <trans-unit id="dfcf97bb565223c6eb3b9255f09be91cc447203d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y &amp;lt;= &lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y &amp;lt;= &lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="494ad043d6868962e52a2773f2aa5a2535882016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Arg&quot;&gt;Arg&lt;/a&gt;&lt;/code&gt; isn't itself a &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; in its own right, but it can be placed inside &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Max&quot;&gt;Max&lt;/a&gt;&lt;/code&gt; to compute an arg min or arg max.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Arg&quot;&gt;Arg&lt;/a&gt;&lt;/code&gt; 자체는 자체적으로 &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 이 아니지만 &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Max&quot;&gt;Max&lt;/a&gt;&lt;/code&gt; 안에 배치하여 arg min 또는 arg max를 계산할수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85a172a729ba1788b3aeb5176a5da93886becde4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; is effectively &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; with a better instance of &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, built off of an underlying &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instead of an underlying &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; 효과적이다 &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; 더 나은 인스턴스 &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 기본이되는의 오프 내장, &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 대신의 기본 &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cca66035d14498dff127111ab13edf2f86047cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt; p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt; (not . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt; p&lt;/code&gt; 는 동등 &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt; (not . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8caccf3a1775fed521dc05355f03674544d090a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakr&quot;&gt;breakr&lt;/a&gt; p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt; (not . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakr&quot;&gt;breakr&lt;/a&gt; p&lt;/code&gt; 동일하다 &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt; (not . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcacd5db44abf09d0a398b9275ce2e7be37d4dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt; 와 같습니다 ( dropWhileL p ( reverse xs)) .</target>
        </trans-unit>
        <trans-unit id="349549513fa6e9a97510a4275de631ceeb9ba95b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; finds the leftmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; 은 지정된 요소가있는 경우 가장 왼쪽에있는 색인을 찾고 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b4df59ca3d89b7dae91c6e31367dc1e0860a390a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; finds the leftmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; finds the leftmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72426d1922d6fcd47812fef69456b2bd604585f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; finds the leftmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; 은 지정된 요소의 맨 왼쪽 인덱스 (있는 경우)를 찾고 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="16d0d95868c96af6e27bcc9a9570707b0dbe5779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; finds the rightmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; 은 지정된 요소가있는 경우 가장 오른쪽에있는 색인을 찾고 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="2afe2c3b77000f687143a284cf5dffe5c00981b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; finds the rightmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; finds the rightmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34400b421771e3f981dc74c375662ac3aecec7f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; finds the rightmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; 은 지정된 요소의 맨 오른쪽 인덱스 (있는 경우)를 찾고, 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="061c4174b412d693dcfc45ad346e8e75d113372b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesL&quot;&gt;elemIndicesL&lt;/a&gt;&lt;/code&gt; finds the indices of the specified element, from left to right (i.e. in ascending order).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesL&quot;&gt;elemIndicesL&lt;/a&gt;&lt;/code&gt; 은 지정된 요소의 색인을 왼쪽에서 오른쪽으로 (오름차순으로) 찾습니다.</target>
        </trans-unit>
        <trans-unit id="76efe3cf412c604fb24f66dd2ff0725296c8be3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesR&quot;&gt;elemIndicesR&lt;/a&gt;&lt;/code&gt; finds the indices of the specified element, from right to left (i.e. in descending order).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesR&quot;&gt;elemIndicesR&lt;/a&gt;&lt;/code&gt; 은 지정된 요소의 색인을 오른쪽에서 왼쪽으로 (내림차순으로) 찾습니다.</target>
        </trans-unit>
        <trans-unit id="62adb3cdaec36b26dbe66c755e69747f56a2bb08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexL&quot;&gt;findIndexL&lt;/a&gt; p xs&lt;/code&gt; finds the index of the leftmost element that satisfies &lt;code&gt;p&lt;/code&gt;, if any exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexL&quot;&gt;findIndexL&lt;/a&gt; p xs&lt;/code&gt; 최 좌측 요소를 만족하는 인덱스 발견 &lt;code&gt;p&lt;/code&gt; , 어떤 경우가 존재한다.</target>
        </trans-unit>
        <trans-unit id="2ea02d02ac5428cd396fc026379247aa243b8682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexR&quot;&gt;findIndexR&lt;/a&gt; p xs&lt;/code&gt; finds the index of the rightmost element that satisfies &lt;code&gt;p&lt;/code&gt;, if any exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexR&quot;&gt;findIndexR&lt;/a&gt; p xs&lt;/code&gt; 최 우측 요소를 만족하는 인덱스 발견 &lt;code&gt;p&lt;/code&gt; , 어떤 경우가 존재한다.</target>
        </trans-unit>
        <trans-unit id="9279c9214a03e64428bb02c5943066d81d1abcc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesL&quot;&gt;findIndicesL&lt;/a&gt; p&lt;/code&gt; finds all indices of elements that satisfy &lt;code&gt;p&lt;/code&gt;, in ascending order.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesL&quot;&gt;findIndicesL&lt;/a&gt; p&lt;/code&gt; 모든 요소 인덱스의 발견이 충족 &lt;code&gt;p&lt;/code&gt; 승순.</target>
        </trans-unit>
        <trans-unit id="a7e7261cd25b3d825e8fdce65620db0c440b194d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesR&quot;&gt;findIndicesR&lt;/a&gt; p&lt;/code&gt; finds all indices of elements that satisfy &lt;code&gt;p&lt;/code&gt;, in descending order.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesR&quot;&gt;findIndicesR&lt;/a&gt; p&lt;/code&gt; 는 모든 요소 인덱스의 발견이 충족 &lt;code&gt;p&lt;/code&gt; 내림차순를.</target>
        </trans-unit>
        <trans-unit id="e8f64face9d076d01d64b8a54df12491cc3e7d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; 는각 요소의 인덱스에 대한 액세스를 제공하는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 버전입니다.</target>
        </trans-unit>
        <trans-unit id="83961628ff65837cd3310448b4a835452d5495fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</target>
        </trans-unit>
        <trans-unit id="9b2aed3eabebff6a7f450efdc81203ceb09b6704" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; 는각 요소의 인덱스에 대한 액세스도 제공하는 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 버전입니다.</target>
        </trans-unit>
        <trans-unit id="f96009108889952d16914b9ab7ccdb823f360a66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; 는 버전이다 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 각 요소의 인덱스에 대한 액세스를 제공한다.</target>
        </trans-unit>
        <trans-unit id="480354c796fae071fc816fa7abac9b01052d8cc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</target>
        </trans-unit>
        <trans-unit id="8c900c6875194c9aa2757a690c303354e87a3ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; 는각 요소의 색인에 대한 액세스도 제공하는 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 버전입니다.</target>
        </trans-unit>
        <trans-unit id="d4db6ab233b28447dd68b4c782c2ae20cbe02fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:fromFunction&quot;&gt;fromFunction&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:intersperse&quot;&gt;intersperse&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;data-sequence#v:cycleTaking&quot;&gt;cycleTaking&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:fromFunction&quot;&gt;fromFunction&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:intersperse&quot;&gt;intersperse&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-sequence#v:cycleTaking&quot;&gt;cycleTaking&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc238de9d9d47fc4e5fa2aa4d2033667cd7f02b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9b9543c71540293f3ba846ef7b16bd03296fda3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, and makes \( O(\log n) \) calls to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; 는 입니다 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 버전 &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; 및 차종 \ (O (\ 로그 n)은 \)에 대한 호출 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b7bf3edc950c74a56b8f5fafc89d4e5267297d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, and makes \( O(\log n) \) calls to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; , and makes \( O(\log n) \) calls to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b1dada898fd188b06cf89ac2edf83b64ea555e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, and makes \( O(\log n) \) calls to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; 는 입니다 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 버전 &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; 및 차종 \ (O (\ 로그 n)은 \)에 대한 호출 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68643ac47486e773c84168944b45f31691ec1371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; is a sequence counterpart of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; 는 일련의 대조이다 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8b8417783932edb90faf79d724db2fa0ae85836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; is a sequence counterpart of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; is a sequence counterpart of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aac950bc671e6a736dd56b8d590367cc56665177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; is a sequence counterpart of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; 는 일련의 대조이다 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="054a7ca578764ac27c8ffd1aa457876e90476850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a sequence of reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 은 비슷 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 했으나 왼쪽 감소 된 값들의 시퀀스를 반환</target>
        </trans-unit>
        <trans-unit id="747f164f3e3e8ce155637740756db7691ef80099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a sequence of reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , but returns a sequence of reduced values from the left:</target>
        </trans-unit>
        <trans-unit id="345a3c6a2041aff776df738aacb125007350f3a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a sequence of reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 은 비슷 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; 했으나 왼쪽 감소 된 값들의 시퀀스를 반환</target>
        </trans-unit>
        <trans-unit id="b14fb9573b4bd472b455f2e5e149321aca041d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; 의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="2391c9de1ef61ba5444f9c5f78a01c0b1ea066f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; is the right-to-left dual of &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; 는 오른쪽에서 왼쪽으로 이중입니다 &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cecf7b887bfa3e2a7cfbdeb00889eb6d41cfe5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; 은시작 값 인수가없는 &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; 의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="de41aee0a3a6df5296ef619f27fac555f8859179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt; 와 같습니다 ( takeWhileL p ( reverse xs)) .</target>
        </trans-unit>
        <trans-unit id="ba12c6568bcc79d6937e06fa90d530b2ff5adcbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; that also offers access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; 는각 요소의 인덱스에 대한 액세스를 제공하는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; 버전입니다.</target>
        </trans-unit>
        <trans-unit id="c17246ae5777e24eb87beb59d57fc5f68d6f9769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; that also offers access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; that also offers access to the index of each element.</target>
        </trans-unit>
        <trans-unit id="17bd6a56d8ea1bbe0c66f575c00785e24d9a861a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; that also offers access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; 는각 요소의 인덱스에 대한 액세스도 제공하는 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; 버전입니다.</target>
        </trans-unit>
        <trans-unit id="2b95f1dbacdc04439227115b9f4757db6b5aa836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt; 와 같습니다 ( unfoldr ( fmap swap. f) x) .</target>
        </trans-unit>
        <trans-unit id="bd53bff77f3a10cf0251fbab7a2c35cc773e04d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bff236ae6e4e2241f25a5abe18aeaa7825a6c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.15.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd7a51c6fd275d001537d03bea729af274e113b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeIQ&quot;&gt;mergeIQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedQueue&quot;&gt;IndexedQueue&lt;/a&gt;&lt;/code&gt;s, taking into account the original position of the elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeIQ&quot;&gt;mergeIQ&lt;/a&gt;&lt;/code&gt; 는 두 병합 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedQueue&quot;&gt;IndexedQueue&lt;/a&gt;&lt;/code&gt; 고려 요소의 원래 위치를 고려하여 S.</target>
        </trans-unit>
        <trans-unit id="29e3eecfe9a58cf32d6258380ce6d3ecb89a8837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeITQ&quot;&gt;mergeITQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedTaggedQueue&quot;&gt;IndexedTaggedQueue&lt;/a&gt;&lt;/code&gt;s, based on the tag value, taking into account the original position of the elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeITQ&quot;&gt;mergeITQ&lt;/a&gt;&lt;/code&gt; 는 두 병합 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedTaggedQueue&quot;&gt;IndexedTaggedQueue&lt;/a&gt;&lt;/code&gt; 고려 요소의 원래 위치를 고려하여, 태그 값에 기초하여, S.</target>
        </trans-unit>
        <trans-unit id="ef4a1b58344038614face687cc10d222f6eb5e5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeQ&quot;&gt;mergeQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:Queue&quot;&gt;Queue&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeQ&quot;&gt;mergeQ&lt;/a&gt;&lt;/code&gt; 는 두 개의 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:Queue&quot;&gt;Queue&lt;/a&gt;&lt;/code&gt; 병합합니다.</target>
        </trans-unit>
        <trans-unit id="eadfd2f5a60225cf2b4b2522a244deea77577331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeTQ&quot;&gt;mergeTQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:TaggedQueue&quot;&gt;TaggedQueue&lt;/a&gt;&lt;/code&gt;s, based on the tag value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeTQ&quot;&gt;mergeTQ&lt;/a&gt;&lt;/code&gt; 는태그 값에 따라두 개의 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:TaggedQueue&quot;&gt;TaggedQueue&lt;/a&gt;&lt;/code&gt; 를 병합합니다.</target>
        </trans-unit>
        <trans-unit id="389439fa053a85ce69e40e0adcb65eaf2ceac3a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-set#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-set#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt;, but works only when &lt;code&gt;f&lt;/code&gt; is strictly increasing. &lt;em&gt;The precondition is not checked.&lt;/em&gt; Semi-formally, we have:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-set#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-set#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt; 이지만 &lt;code&gt;f&lt;/code&gt; 가 엄격하게 증가하는경우에만 작동합니다. &lt;em&gt;전제 조건이 점검되지 않았습니다. &lt;/em&gt;반 공식적으로, 우리는 :</target>
        </trans-unit>
        <trans-unit id="c4501fd973aa63bdd700bbf1dea84ac185fe54b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of strings at newline characters. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 은 줄 바꿈 문자에서 문자열을 문자열 목록으로 나눕니다. 결과 문자열에는 줄 바꿈이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="338f0b65219243f996d4bd0a9df7839ef28540da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; 에 역 동작이다 &lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . 각각에 새 줄 바꿈을 추가 한 후 행을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="15579fcea85a7ce171343c2db61ceebf2ba06fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt;. It joins words with separating spaces.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; 에 역 동작 인 &lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; . 공백을 구분하여 단어를 결합합니다.</target>
        </trans-unit>
        <trans-unit id="9bf9d8612f422a3804220034c29ed3447bc56b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of words, which were delimited by white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 는 문자열을 단어 목록으로 나누고 공백으로 구분합니다.</target>
        </trans-unit>
        <trans-unit id="8da7f5dd24b977f3e8d3da7980b697bc40240950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeLatin1&quot;&gt;decodeLatin1&lt;/a&gt;&lt;/code&gt; is semantically equivalent to &lt;code&gt;Data.Text.pack . Data.ByteString.Char8.unpack&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeLatin1&quot;&gt;decodeLatin1&lt;/a&gt;&lt;/code&gt; 은 의미 적으로 &lt;code&gt;Data.Text.pack . Data.ByteString.Char8.unpack&lt;/code&gt; 과 같습니다 . Data.ByteString.Char8.unpack</target>
        </trans-unit>
        <trans-unit id="5210c279f2048323795906a4d0d43dc5d4273ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; 반환합니다 후 남아있는 접미사 &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="539da5209b7a20f470b14e79366f65b244d088f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a stream, reduces the stream using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 이진 연산자, 시작 값 (일반적으로 연산자의 오른쪽 ID) 및 스트림에 적용되는 foldr 은 이진수 연산자를 사용하여 오른쪽에서 왼쪽으로 스트림을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="3d197d08dbdd44037e2bd5a659b157af2a664c3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a stream, returns the longest prefix (possibly empty) of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 는 , 술어에 적용 &lt;code&gt;p&lt;/code&gt; 와 스트림 만족의 그 요소의 (하늘의) 가장 긴 접두사 반환 &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d31f65b4e2ca1004f666bfa0e541865796fb44f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite, non-empty &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; into a circular one, or equivalently, the infinite repetition of the original &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 은 비어 있지 않은 유한 &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 를 원형으로 묶거나 원본 &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 의 무한 반복으로 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="089e0f9b13fe124baa9f8fda724f4357a753ff47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; returns an infinite &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; 반환 무한 &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 의 반복 응용 프로그램의 &lt;code&gt;f&lt;/code&gt; 에 &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="73c1e290e2545227a128295edcd8bbf2ff598503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; is an infinite &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; 무한하다 &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 로, &lt;code&gt;x&lt;/code&gt; 의 모든 요소의 값.</target>
        </trans-unit>
        <trans-unit id="203e04e7646f439ab01ff7c92d4ec3efdae219c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; is time returned by system clock functions. Its semantics depends on the clock function, but the epoch is typically the beginning of 1970. Note that &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; of 1E9 to 2E9-1 can be used to represent leap seconds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; 은 시스템 시계 기능에 의해 반환 된 시간입니다. 시맨틱은 클럭 기능에 따라 다르지만, 에포크는 일반적으로 1970 년 초입니다.1N9에서 2E9-1의 &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; 를 사용하여 윤초를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e65df23d7b285300818c83d4a41208886c38a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-time-format#v:knownTimeZones&quot;&gt;knownTimeZones&lt;/a&gt;&lt;/code&gt; contains only the ten time-zones mentioned in RFC 822 sec. 5: &quot;UT&quot;, &quot;GMT&quot;, &quot;EST&quot;, &quot;EDT&quot;, &quot;CST&quot;, &quot;CDT&quot;, &quot;MST&quot;, &quot;MDT&quot;, &quot;PST&quot;, &quot;PDT&quot;. Note that the parsing functions will regardless parse &quot;UTC&quot;, single-letter military time-zones, and +HHMM format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-time-format#v:knownTimeZones&quot;&gt;knownTimeZones&lt;/a&gt;&lt;/code&gt; 에는 RFC 822 초에 언급 된 10 개의 시간대 만 포함됩니다. 5 : &quot;UT&quot;, &quot;GMT&quot;, &quot;EST&quot;, &quot;EDT&quot;, &quot;CST&quot;, &quot;CDT&quot;, &quot;MST&quot;, &quot;MDT&quot;, &quot;PST&quot;, &quot;PDT&quot;. 구문 분석 기능은 &quot;UTC&quot;, 단일 문자 군 시간대 및 + HHMM 형식을 구문 분석하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ebaa4a3ebeda8675079818e26bd2cc5130b40e08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; 있다 &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; 반전의 인수. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="abe4245503f49fc7bbf513317fda1b499e1646a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; 은인수가 뒤집힌 &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; 입니다. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="81c9b48fe5e0651ad060029d8805137d14e22df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;, and the following example shows how &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; can apply an &lt;code&gt;IO&lt;/code&gt; action to a &lt;code&gt;List&lt;/code&gt; to produce a structured result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 에대해 &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; 되며 다음 예제는 &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; 이 &lt;code&gt;IO&lt;/code&gt; 작업을 &lt;code&gt;List&lt;/code&gt; 에적용하여구조화 된 결과를 생성하는방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6c51fb3deb885bf0df875c455b03d4ffcd0ab7e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-tuple#v:curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt; converts an uncurried function to a curried function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-tuple#v:curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt; 는 커리되지 않은 함수를 커리 된 함수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4825b3755accbb0d41237e97ab94b7a36428ba32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-tuple#v:uncurry&quot;&gt;uncurry&lt;/a&gt;&lt;/code&gt; converts a curried function to a function on pairs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-tuple#v:uncurry&quot;&gt;uncurry&lt;/a&gt;&lt;/code&gt; 는 카레 함수를 쌍 함수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="96ea250d7a3dff5ce82f8a8f0afeb370fe8abfa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-typeable#t:Proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/code&gt; is a type that holds no data, but has a phantom parameter of arbitrary type (or even kind). Its use is to provide type information, even though there is no value available of that type (or it may be too costly to create one).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-typeable#t:Proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/code&gt; 는 데이터를 보유하지 않는 유형이지만 임의 유형 (또는 종류)의 팬텀 매개 변수를 갖습니다. 해당 유형에 사용 가능한 값이 없더라도 유형 정보를 제공하는 데 사용됩니다 (또는이를 작성하기에는 너무 비용이 많이들 수 있음).</target>
        </trans-unit>
        <trans-unit id="c2ba92390d73bc2a9127ace548e08aedddbc6ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; is equivalent to</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; 은</target>
        </trans-unit>
        <trans-unit id="f380e7567ff4ca778862a3861f8a67c77e3a1970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; is equivalent to</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; 은</target>
        </trans-unit>
        <trans-unit id="d370aae332cc82e1aa3e0ed85ed16e403d22b193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt; f&lt;/code&gt; executes the computation &lt;code&gt;f&lt;/code&gt;, passing as argument a pointer to a temporarily allocated block of memory sufficient to hold values of type &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt; f&lt;/code&gt; 실행 연산 &lt;code&gt;f&lt;/code&gt; , 형의 보류 값에 충분한 메모리의 임시 할당 된 블록을 인수로 포인터를 전달. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8b5bfddf16c1319601903a5477a3f8e7ff255d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:allocaBytes&quot;&gt;allocaBytes&lt;/a&gt; n f&lt;/code&gt; executes the computation &lt;code&gt;f&lt;/code&gt;, passing as argument a pointer to a temporarily allocated block of memory of &lt;code&gt;n&lt;/code&gt; bytes. The block of memory is sufficiently aligned for any of the basic foreign types that fits into a memory block of the allocated size.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:allocaBytes&quot;&gt;allocaBytes&lt;/a&gt; n f&lt;/code&gt; 는 계산 &lt;code&gt;f&lt;/code&gt; 를 실행하여 &lt;code&gt;n&lt;/code&gt; 바이트의 임시 할당 된 메모리 블록에 대한 포인터를 인수로 전달합니다. 메모리 블록은 할당 된 크기의 메모리 블록에 맞는 기본 외부 유형에 맞게 충분히 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="c935d212124073d935f23b9d558ad1b8e217ad39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:with&quot;&gt;with&lt;/a&gt; val f&lt;/code&gt; executes the computation &lt;code&gt;f&lt;/code&gt;, passing as argument a pointer to a temporarily allocated block of memory into which &lt;code&gt;val&lt;/code&gt; has been marshalled (the combination of &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;foreign-storable#v:poke&quot;&gt;poke&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:with&quot;&gt;with&lt;/a&gt; val f&lt;/code&gt; 실행 연산 &lt;code&gt;f&lt;/code&gt; ,되는 메모리에 일시적으로 할당 된 블록을 인수로 포인터를 전달 &lt;code&gt;val&lt;/code&gt; 배열 된 (조합 된 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt; 를 하고 &lt;code&gt;&lt;a href=&quot;foreign-storable#v:poke&quot;&gt;poke&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1759923536bb28cb8e4c6954e3270de3e9c724ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;foreign-storable#v:alignment&quot;&gt;alignment&lt;/a&gt; (&lt;a href=&quot;prelude#v:undefined&quot;&gt;undefined&lt;/a&gt; :: CT)&lt;/code&gt; matches the alignment constraint enforced by the C implementation for &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-storable#v:alignment&quot;&gt;alignment&lt;/a&gt; (&lt;a href=&quot;prelude#v:undefined&quot;&gt;undefined&lt;/a&gt; :: CT)&lt;/code&gt; 는 &lt;code&gt;t&lt;/code&gt; 의 C 구현에 의해 시행되는 정렬 제약 조건과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="840991abba1942f24f5480bb6d2c0ca9d4f60b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt; (&lt;a href=&quot;prelude#v:undefined&quot;&gt;undefined&lt;/a&gt; :: CT)&lt;/code&gt; will yield the same value as &lt;code&gt;sizeof (t)&lt;/code&gt; in C.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt; (&lt;a href=&quot;prelude#v:undefined&quot;&gt;undefined&lt;/a&gt; :: CT)&lt;/code&gt; 는C에서 &lt;code&gt;sizeof (t)&lt;/code&gt; 와 동일한 값을 산출합니다.</target>
        </trans-unit>
        <trans-unit id="5adb7a338cc831fb14e8c3be02388b83427bd8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-arr#v:accum&quot;&gt;accum&lt;/a&gt; f&lt;/code&gt; takes an array and an association list and accumulates pairs from the list into the array with the accumulating function &lt;code&gt;f&lt;/code&gt;. Thus &lt;code&gt;&lt;a href=&quot;ghc-arr#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; can be defined using &lt;code&gt;&lt;a href=&quot;ghc-arr#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-arr#v:accum&quot;&gt;accum&lt;/a&gt; f&lt;/code&gt; 는 배열과 연관 목록을 가져 와서 누적 함수 &lt;code&gt;f&lt;/code&gt; 를 사용하여 목록에서 배열로 쌍을 누적합니다. 따라서 &lt;code&gt;&lt;a href=&quot;ghc-arr#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-arr#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt; 을 사용하여 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d859ae1e1f8967212796be0cb2c4140a98966f92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-arr#v:ixmap&quot;&gt;ixmap&lt;/a&gt;&lt;/code&gt; allows for transformations on array indices. It may be thought of as providing function composition on the right with the mapping that the original array embodies.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-arr#v:ixmap&quot;&gt;ixmap&lt;/a&gt;&lt;/code&gt; 을 사용하면 배열 인덱스를 변환 할 수 있습니다. 원래 배열이 구현하는 매핑으로 오른쪽에 함수 구성을 제공하는 것으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cb1406817e4fe0eb59c70a25564a337270decad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-arr#v:range&quot;&gt;range&lt;/a&gt; (l,u) !! &lt;a href=&quot;ghc-arr#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;ghc-arr#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-arr#v:range&quot;&gt;range&lt;/a&gt; (l,u) !! &lt;a href=&quot;ghc-arr#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-arr#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt; (l, u) i 일 때</target>
        </trans-unit>
        <trans-unit id="5efc13485e08a7dccc198526097948778c8fcb96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-arr#v:range&quot;&gt;range&lt;/a&gt; (l,u) &lt;a href=&quot;ghc-list#v:-33--33-&quot;&gt;!!&lt;/a&gt; &lt;a href=&quot;ghc-arr#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;ghc-arr#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-arr#v:range&quot;&gt;range&lt;/a&gt; (l,u) &lt;a href=&quot;ghc-list#v:-33--33-&quot;&gt;!!&lt;/a&gt; &lt;a href=&quot;ghc-arr#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-arr#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt; (l, u) i 일 때 인덱스 (l, u) i == i</target>
        </trans-unit>
        <trans-unit id="00df7ae954477de9252212698ce145cee5485760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:asTypeOf&quot;&gt;asTypeOf&lt;/a&gt;&lt;/code&gt; is a type-restricted version of &lt;code&gt;&lt;a href=&quot;ghc-base#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;. It is usually used as an infix operator, and its typing forces its first argument (which is usually overloaded) to have the same type as the second.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:asTypeOf&quot;&gt;asTypeOf&lt;/a&gt;&lt;/code&gt; 는 형식이 제한된 &lt;code&gt;&lt;a href=&quot;ghc-base#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; 버전입니다. 일반적으로 중위 연산자로 사용되며, 입력하면 첫 번째 인수 (일반적으로 오버로드 됨)가 두 번째와 동일한 유형이되도록합니다.</target>
        </trans-unit>
        <trans-unit id="04b5934ffbeb247bfa7e82a12dbc868c719945d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; takes its (first) two arguments in the reverse order of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; 역순으로의 (제 1) 2 개 개의 인수를 취하는 &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21bb7a86450066d21b2830c2400ba41f06589c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a list, reduces the list using the binary operator, from right to left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 이진 연산자에 적용되는 foldr , 시작 값 (일반적으로 연산자의 오른쪽 ID) 및 목록은 이진 연산자를 사용하여 오른쪽에서 왼쪽으로 목록을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="421bab1454071991b4e996e24c51a81910a8a1ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:mapM&quot;&gt;mapM&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;ghc-base#v:sequence&quot;&gt;sequence&lt;/a&gt; . &lt;a href=&quot;ghc-base#v:map&quot;&gt;map&lt;/a&gt; f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:mapM&quot;&gt;mapM&lt;/a&gt; f&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-base#v:sequence&quot;&gt;sequence&lt;/a&gt; . &lt;a href=&quot;ghc-base#v:map&quot;&gt;map&lt;/a&gt; f&lt;/code&gt; 와 같습니다 . 지도 f .</target>
        </trans-unit>
        <trans-unit id="c3ad9887590e26e6633e32f1572457964fe5db6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt; @(Op a b)&lt;/code&gt; without newtypes is &lt;code&gt;mempty @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;_ -&amp;gt; mempty&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt; @(Op a b)&lt;/code&gt; 는 &lt;code&gt;mempty @(b-&amp;gt;a)&lt;/code&gt; = &lt;code&gt;_ -&amp;gt; mempty&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f71de2c4cedddc54ca9c01eb5fcdee4689150b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; on comparisons always returns &lt;code&gt;EQ&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; EQ)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 비교시 mempty 는 항상 &lt;code&gt;EQ&lt;/code&gt; 를 반환합니다. 뉴 타입이 없으면 이것은 &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; EQ)&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="60bf820246079dd00141ab18aa02a753d0829130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; on equivalences always returns &lt;code&gt;True&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; True)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 에 대한 mempty 는 항상 &lt;code&gt;True&lt;/code&gt; 를 반환합니다. newtype이 없으면 이것은 &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; True)&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="d47e4fa712775acacfdf3a0abedc82eafe223ae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; on predicates always returns &lt;code&gt;True&lt;/code&gt;. Without newtypes this equals &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; 술어에 대한 mempty 는 항상 &lt;code&gt;True&lt;/code&gt; 를 반환합니다. newtype이 없으면 이것은 &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt; True&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d72501241ba806f5d1249d29edf7f40459b3ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; is defined as the value &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;. It helps to make guards more readable. eg.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 값으로 정의됩니다. 가드를 더 읽기 쉽게 만드는 데 도움이됩니다. 예.</target>
        </trans-unit>
        <trans-unit id="2863abaa9408ebe6cb47205fd5c42baf42648542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-base#v:until&quot;&gt;until&lt;/a&gt; p f&lt;/code&gt; yields the result of applying &lt;code&gt;f&lt;/code&gt; until &lt;code&gt;p&lt;/code&gt; holds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#v:until&quot;&gt;until&lt;/a&gt; p f&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 가 유지될 때까지 &lt;code&gt;f&lt;/code&gt; 를 적용한 결과를 pf 까지 산출합니다.</target>
        </trans-unit>
        <trans-unit id="acfeddc7e083d97c7411dff14f9a8b43eed63a8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; catches any exception thrown by &lt;code&gt;m&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt;, using the function &lt;code&gt;f&lt;/code&gt; to handle the exception. If an exception is thrown, any changes made by &lt;code&gt;m&lt;/code&gt; are rolled back, but changes prior to &lt;code&gt;m&lt;/code&gt; persist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; 는 예외 처리를 위해 &lt;code&gt;f&lt;/code&gt; 함수를 사용하여 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;m&lt;/code&gt; 이 던진 예외를 모두 포착합니다. 예외가 발생하면 &lt;code&gt;m&lt;/code&gt; 에의한 모든 변경 사항이 롤백되지만 &lt;code&gt;m&lt;/code&gt; 이전의 변경 사항은유지됩니다.</target>
        </trans-unit>
        <trans-unit id="195372a24c024b33e5c43a289a2fa19bcd373651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="5635e16042f53942b929e63bf938df55eb4e00ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="b8640f922fdaa12104f5ab665eba92c58ff1809b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="7c76e2c08727a1f1a64cad6cc93ac6aca1b22807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; stores a string as identifier for this thread if you built a RTS with debugging support. This identifier will be used in the debugging output to make distinction of different threads easier (otherwise you only have the thread state object's address in the heap).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; 는 디버깅 지원으로 RTS를 빌드 한 경우이 스레드의 식별자로 문자열을 저장합니다. 이 식별자는 다른 스레드를보다 쉽게 ​​구별하기 위해 디버깅 출력에 사용됩니다 (그렇지 않으면 힙에 스레드 상태 객체의 주소 만 있음).</target>
        </trans-unit>
        <trans-unit id="5a9bd6c00e06304b1874cac076433b3688b996db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; raises an arbitrary exception in the target thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; 대상 스레드에서 임의의 예외를 발생시킵니다 (GHC 만 해당).</target>
        </trans-unit>
        <trans-unit id="7944dcad379f05654498cb9c0209cb19ebfc9e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; catches any exception thrown by &lt;code&gt;m&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt;, using the function &lt;code&gt;f&lt;/code&gt; to handle the exception. If an exception is thrown, any changes made by &lt;code&gt;m&lt;/code&gt; are rolled back, but changes prior to &lt;code&gt;m&lt;/code&gt; persist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; 는 예외 처리를 위해 &lt;code&gt;f&lt;/code&gt; 함수를 사용하여 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;m&lt;/code&gt; 이 던진 예외를 모두 포착합니다. 예외가 발생하면 &lt;code&gt;m&lt;/code&gt; 에의한 모든 변경 사항이 롤백되지만 &lt;code&gt;m&lt;/code&gt; 이전의 변경 사항은유지됩니다.</target>
        </trans-unit>
        <trans-unit id="382cad31b7898627842a56e6a94b69c4a230a63c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="d19ecb16622dfbe6b11da075e3d675c735b8287e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="908b2d3d00c2830ef3233cd0c0a8e35133e38569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 가 제기 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 주어진 스레드 예외 (GHC 만).</target>
        </trans-unit>
        <trans-unit id="f29156d19180fb72a2c72ccac69a1c12ea56de3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; stores a string as identifier for this thread if you built a RTS with debugging support. This identifier will be used in the debugging output to make distinction of different threads easier (otherwise you only have the thread state object's address in the heap).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; 는 디버깅 지원으로 RTS를 빌드 한 경우이 스레드의 식별자로 문자열을 저장합니다. 이 식별자는 다른 스레드를보다 쉽게 ​​구별하기 위해 디버깅 출력에 사용됩니다 (그렇지 않으면 힙에 스레드 상태 객체의 주소 만 있음).</target>
        </trans-unit>
        <trans-unit id="ccd5026d31375f275b8d3d71ee9b5459e6f4b3d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; raises an arbitrary exception in the target thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; 대상 스레드에서 임의의 예외를 발생시킵니다 (GHC 만 해당).</target>
        </trans-unit>
        <trans-unit id="1d179add2b633c0f6ab44596c9cfd1f96b989f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-enum#v:enumFrom&quot;&gt;enumFrom&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-enum#v:enumFromThen&quot;&gt;enumFromThen&lt;/a&gt;&lt;/code&gt; should be defined with an implicit bound, thus:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-enum#v:enumFrom&quot;&gt;enumFrom&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;ghc-enum#v:enumFromThen&quot;&gt;enumFromThen&lt;/a&gt;&lt;/code&gt; 은 암시 적 바운드로 정의되어야합니다.</target>
        </trans-unit>
        <trans-unit id="72c0f5b014335b37ddeff4f326bc86ae94f479d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-enum#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-enum#v:toEnum&quot;&gt;toEnum&lt;/a&gt;&lt;/code&gt; should give a runtime error if the result value is not representable in the result type. For example, &lt;code&gt;&lt;a href=&quot;ghc-enum#v:toEnum&quot;&gt;toEnum&lt;/a&gt; 7 :: &lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; is an error.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-enum#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; 결과 값에서 결과 값을 표시 할 수없는 경우 fromEnum 및 &lt;code&gt;&lt;a href=&quot;ghc-enum#v:toEnum&quot;&gt;toEnum&lt;/a&gt;&lt;/code&gt; 은 런타임 오류를 제공해야합니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;ghc-enum#v:toEnum&quot;&gt;toEnum&lt;/a&gt; 7 :: &lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="d21122f735c22d761c15a9a21d4d24b96f47dd4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-err#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; stops execution and displays an error message.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-err#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 는 실행을 중지하고 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c4fec0a7d5c442e811a1ce3be394c7f30e3e3c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;s are a lightweight method of obtaining a partial call-stack at any point in the program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 은 프로그램의 어느 지점에서나 부분 호출 스택을 얻는 간단한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="81b11f068788df264879a0d84b77ca4fa65b8877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;s do not interact with the RTS and do not require compilation with &lt;code&gt;-prof&lt;/code&gt;. On the other hand, as they are built up explicitly via the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; constraints, they will generally not contain as much information as the simulated call-stacks maintained by the RTS.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 은 RTS와 상호 작용하지 않으며 &lt;code&gt;-prof&lt;/code&gt; 로 컴파일 할 필요가 없습니다. 반면에 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; 제약 조건을통해 명시 적으로 구축되므로 일반적으로 RTS에서 유지 관리하는 시뮬레이션 된 콜 스택만큼 많은 정보를 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa6d69a5084469a55f99376c2ab827fc50b42c79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-exts#t:SPEC&quot;&gt;SPEC&lt;/a&gt;&lt;/code&gt; is used by GHC in the &lt;code&gt;SpecConstr&lt;/code&gt; pass in order to inform the compiler when to be particularly aggressive. In particular, it tells GHC to specialize regardless of size or the number of specializations. However, not all loops fall into this category.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exts#t:SPEC&quot;&gt;SPEC&lt;/a&gt;&lt;/code&gt; 은 GHC가 &lt;code&gt;SpecConstr&lt;/code&gt; 패스에서 특히 공격적 일 때 컴파일러에 알리기 위해 사용됩니다. 특히 규모 나 전문화 수에 관계없이 GHC에게 전문화하라고 지시합니다. 그러나 모든 루프가이 범주에 속하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a8a54bf3d2d5478e8c21a4965d26ae6feea749c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-exts#v:oneShot&quot;&gt;oneShot&lt;/a&gt;&lt;/code&gt; is representation polymorphic: the type variables may refer to lifted or unlifted types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exts#v:oneShot&quot;&gt;oneShot&lt;/a&gt;&lt;/code&gt; 은 다형성 표현입니다. 유형 변수는 리프트 또는 리프트 해제 유형을 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc6ca8f750423e03405e4ddbabb60b9288c08157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-exts#v:the&quot;&gt;the&lt;/a&gt;&lt;/code&gt; ensures that all the elements of the list are identical and then returns that unique element</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exts#v:the&quot;&gt;the&lt;/a&gt;&lt;/code&gt; 보장리스트의 모든 요소가 동일하고 복귀하는 것을 고유 요소</target>
        </trans-unit>
        <trans-unit id="93d7a92981e2dc7e8c3f5d6254414c523ce2fb9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:castFloatToWord32&quot;&gt;castFloatToWord32&lt;/a&gt; f&lt;/code&gt; does a bit-for-bit copy from a floating-point value to an integral value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:castFloatToWord32&quot;&gt;castFloatToWord32&lt;/a&gt; f&lt;/code&gt; 는 부동 소수점 값에서 정수 값으로 비트 단위 복사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="86f3672afd528edc6c7afcad2d27f40c090018bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:castWord32ToFloat&quot;&gt;castWord32ToFloat&lt;/a&gt; w&lt;/code&gt; does a bit-for-bit copy from an integral value to a floating-point value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:castWord32ToFloat&quot;&gt;castWord32ToFloat&lt;/a&gt; w&lt;/code&gt; 는 정수 값에서 부동 소수점 값으로 비트 단위 복사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="eca4e8815846962386a6cf78fe70c0a50e215597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:castWord64ToDouble&quot;&gt;castWord64ToDouble&lt;/a&gt; w&lt;/code&gt; does a bit-for-bit copy from an integral value to a floating-point value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:castWord64ToDouble&quot;&gt;castWord64ToDouble&lt;/a&gt; w&lt;/code&gt; 는 정수 값에서 부동 소수점 값으로 비트 단위 복사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="4d7fab245fee0faddfb7cb21095450e02d876c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt;&lt;/code&gt; performs the inverse of &lt;code&gt;&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt; in the sense that for finite &lt;code&gt;x&lt;/code&gt; with the exception of &lt;code&gt;-0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#v:uncurry&quot;&gt;uncurry&lt;/a&gt; &lt;a href=&quot;ghc-float#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; (&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) = x&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;ghc-float#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; m n&lt;/code&gt; is one of the two closest representable floating-point numbers to &lt;code&gt;m*b^^n&lt;/code&gt; (or &lt;code&gt;&amp;plusmn;Infinity&lt;/code&gt; if overflow occurs); usually the closer, but if &lt;code&gt;m&lt;/code&gt; contains too many bits, the result may be rounded in the wrong direction.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt;&lt;/code&gt; 은 의 역 수행 &lt;code&gt;&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt; 을 감각이 유한 대한 &lt;code&gt;x&lt;/code&gt; 제외한 &lt;code&gt;-0.0&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;prelude#v:uncurry&quot;&gt;uncurry&lt;/a&gt; &lt;a href=&quot;ghc-float#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; (&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) = x&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;ghc-float#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; m n&lt;/code&gt; 은 &lt;code&gt;m*b^^n&lt;/code&gt; 가장 가까운 두 개의 부동 소수점 숫자 중 하나입니다(또는오버플로가 발생하면 &lt;code&gt;&amp;plusmn;Infinity&lt;/code&gt; ). 일반적으로 더 가까이 있지만 &lt;code&gt;m&lt;/code&gt; 에 비트가 너무 많으면 결과가 잘못된 방향으로 반올림 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66387ccac62472faf7c3632e9f5350c41f7bf4da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:expm1&quot;&gt;expm1&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;ghc-float#v:exp&quot;&gt;exp&lt;/a&gt; x - 1&lt;/code&gt;, but provides more precise results for small (absolute) values of &lt;code&gt;x&lt;/code&gt; if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:expm1&quot;&gt;expm1&lt;/a&gt; x&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-float#v:exp&quot;&gt;exp&lt;/a&gt; x - 1&lt;/code&gt; 계산하지만가능한 경우 &lt;code&gt;x&lt;/code&gt; 의 작은 (절대) 값에 대해보다 정확한 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8372cfeae719833ae34de678677073860c90affe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt;&lt;/code&gt; corresponds to the second component of &lt;code&gt;&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt; 0 = 0&lt;/code&gt; and for finite nonzero &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt; x = snd (&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) + &lt;a href=&quot;ghc-float#v:floatDigits&quot;&gt;floatDigits&lt;/a&gt; x&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is a finite floating-point number, it is equal in value to &lt;code&gt;&lt;a href=&quot;ghc-float#v:significand&quot;&gt;significand&lt;/a&gt; x * b ^^ &lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt; x&lt;/code&gt;, where &lt;code&gt;b&lt;/code&gt; is the floating-point radix. The behaviour is unspecified on infinite or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt; 의 두 번째 구성 요소에 해당 합니다. &lt;code&gt;&lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt; 0 = 0&lt;/code&gt; 이고 0이 아닌 유한 &lt;code&gt;x&lt;/code&gt; 의 경우 &lt;code&gt;&lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt; x = snd (&lt;a href=&quot;ghc-float#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) + &lt;a href=&quot;ghc-float#v:floatDigits&quot;&gt;floatDigits&lt;/a&gt; x&lt;/code&gt; 입니다. 경우 &lt;code&gt;x&lt;/code&gt; 유한 한 부동 소수점 숫자이고,이 값에 동일 &lt;code&gt;&lt;a href=&quot;ghc-float#v:significand&quot;&gt;significand&lt;/a&gt; x * b ^^ &lt;a href=&quot;ghc-float#v:exponent&quot;&gt;exponent&lt;/a&gt; x&lt;/code&gt; , 여기서 &lt;code&gt;b&lt;/code&gt; 부동 소수점 기수이다. 무한대 또는 &lt;code&gt;NaN&lt;/code&gt; 값에서는 동작이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2aede196738b3a4593c59cd0683cfd291c731a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:floatToDigits&quot;&gt;floatToDigits&lt;/a&gt;&lt;/code&gt; takes a base and a non-negative &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; number, and returns a list of digits and an exponent. In particular, if &lt;code&gt;x&amp;gt;=0&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:floatToDigits&quot;&gt;floatToDigits&lt;/a&gt;&lt;/code&gt; 는 기본 및 음이 아닌 &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 숫자를 사용하여 숫자 목록과 지수를 반환합니다. 특히 &lt;code&gt;x&amp;gt;=0&lt;/code&gt; 이면</target>
        </trans-unit>
        <trans-unit id="355e8543305c96266a67afc57efcb6b259268eca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:log1mexp&quot;&gt;log1mexp&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;ghc-float#v:log&quot;&gt;log&lt;/a&gt; (1 - &lt;a href=&quot;ghc-float#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt;, but provides more precise results if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:log1mexp&quot;&gt;log1mexp&lt;/a&gt; x&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-float#v:log&quot;&gt;log&lt;/a&gt; (1 - &lt;a href=&quot;ghc-float#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt; 계산하지만 가능한 경우보다 정확한 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f06041194ada4a908986816bbff19c95d6ded526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:log1p&quot;&gt;log1p&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;ghc-float#v:log&quot;&gt;log&lt;/a&gt; (1 + x)&lt;/code&gt;, but provides more precise results for small (absolute) values of &lt;code&gt;x&lt;/code&gt; if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:log1p&quot;&gt;log1p&lt;/a&gt; x&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-float#v:log&quot;&gt;log&lt;/a&gt; (1 + x)&lt;/code&gt; 계산하지만가능한 경우 &lt;code&gt;x&lt;/code&gt; 의 작은 (절대) 값에 대해보다 정확한 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5c18ea350b6260593eb8f1595839529d6661d6ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-float#v:log1pexp&quot;&gt;log1pexp&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;ghc-float#v:log&quot;&gt;log&lt;/a&gt; (1 + &lt;a href=&quot;ghc-float#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt;, but provides more precise results if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-float#v:log1pexp&quot;&gt;log1pexp&lt;/a&gt; x&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-float#v:log&quot;&gt;log&lt;/a&gt; (1 + &lt;a href=&quot;ghc-float#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt; 계산하지만 가능한 경우보다 정확한 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="08ec8ba77af59051f85e94516aaa9a3ab53ad9dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:CFinalizers&quot;&gt;CFinalizers&lt;/a&gt;&lt;/code&gt;: The first &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:addForeignPtrFinalizer&quot;&gt;addForeignPtrFinalizer&lt;/a&gt;&lt;/code&gt; call uses &lt;code&gt;&lt;a href=&quot;ghc-exts#v:mkWeakNoFinalizer-35-&quot;&gt;mkWeakNoFinalizer#&lt;/a&gt;&lt;/code&gt; to create a &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; is preserved in the &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:CFinalizers&quot;&gt;CFinalizers&lt;/a&gt;&lt;/code&gt; data constructor. Both the first call and subsequent calls (goal 2) use &lt;code&gt;&lt;a href=&quot;ghc-exts#v:addCFinalizerToWeak-35-&quot;&gt;addCFinalizerToWeak#&lt;/a&gt;&lt;/code&gt; to attach finalizers to the &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; itself. Also, see Note [MallocPtr finalizers] for discussion of the key and value of this &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:CFinalizers&quot;&gt;CFinalizers&lt;/a&gt;&lt;/code&gt; : 첫 번째 &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:addForeignPtrFinalizer&quot;&gt;addForeignPtrFinalizer&lt;/a&gt;&lt;/code&gt; 호출은 &lt;code&gt;&lt;a href=&quot;ghc-exts#v:mkWeakNoFinalizer-35-&quot;&gt;mkWeakNoFinalizer#&lt;/a&gt;&lt;/code&gt; 를 사용하여 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; 을 만듭니다. &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; 에 보존 &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:CFinalizers&quot;&gt;CFinalizers&lt;/a&gt;&lt;/code&gt; 의 데이터 생성자. 첫 번째 호출과 후속 호출 (목표 2) 모두 &lt;code&gt;&lt;a href=&quot;ghc-exts#v:addCFinalizerToWeak-35-&quot;&gt;addCFinalizerToWeak#&lt;/a&gt;&lt;/code&gt; 을사용하여 종료자를 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; 자체에 연결합니다. 또한이 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; 의 키와 값에 대한 설명은 Note [MallocPtr finalizers]를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5212a6e7798c91b5a2228722fd3e579e3ae17e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:HaskellFinalizers&quot;&gt;HaskellFinalizers&lt;/a&gt;&lt;/code&gt;: The first &lt;code&gt;addForeignPtrConcFinalizer_&lt;/code&gt; call uses &lt;code&gt;&lt;a href=&quot;ghc-exts#v:mkWeak-35-&quot;&gt;mkWeak#&lt;/a&gt;&lt;/code&gt; to attach the finalizer &lt;code&gt;foreignPtrFinalizer&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;ghc-exts#t:MutVar-35-&quot;&gt;MutVar#&lt;/a&gt;&lt;/code&gt;. The resulting &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; is discarded (see &lt;code&gt;addForeignPtrConcFinalizer_&lt;/code&gt;). Subsequent calls to &lt;code&gt;addForeignPtrConcFinalizer_&lt;/code&gt; (goal 2) just add finalizers onto the list in the &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:HaskellFinalizers&quot;&gt;HaskellFinalizers&lt;/a&gt;&lt;/code&gt; data constructor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:HaskellFinalizers&quot;&gt;HaskellFinalizers&lt;/a&gt;&lt;/code&gt; : 첫 번째 &lt;code&gt;addForeignPtrConcFinalizer_&lt;/code&gt; 의 호출이 사용 &lt;code&gt;&lt;a href=&quot;ghc-exts#v:mkWeak-35-&quot;&gt;mkWeak#&lt;/a&gt;&lt;/code&gt; 종료자를 연결하는 &lt;code&gt;foreignPtrFinalizer&lt;/code&gt; 을 받는 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:MutVar-35-&quot;&gt;MutVar#&lt;/a&gt;&lt;/code&gt; . 결과 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Weak-35-&quot;&gt;Weak#&lt;/a&gt;&lt;/code&gt; 은 삭제됩니다 ( &lt;code&gt;addForeignPtrConcFinalizer_&lt;/code&gt; 참조). &lt;code&gt;addForeignPtrConcFinalizer_&lt;/code&gt; (목표 2)에 대한후속 호출은 &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:HaskellFinalizers&quot;&gt;HaskellFinalizers&lt;/a&gt;&lt;/code&gt; 데이터 생성자의 목록에 종료자를 추가하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="1739e79eaa88f577671c542e8aa936f1a9eaeb70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; is equivalent to</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; 은</target>
        </trans-unit>
        <trans-unit id="8189fb45d71a609f2fa14bab5b7ed69386e0b9cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; for which only &lt;em&gt;n&lt;/em&gt;-th bit is set. Undefined behaviour for negative &lt;em&gt;n&lt;/em&gt; values.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; &lt;em&gt;n&lt;/em&gt; 번째 비트만설정되는 정수 입니다. 음수&lt;em&gt; n&lt;/em&gt; 값에대해 정의되지 않은 동작.</target>
        </trans-unit>
        <trans-unit id="f970033cce52342d4d8c0129e7064ebd30af2324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; is a monad, so &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; actions can be combined using either the do-notation or the &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operations from the &lt;code&gt;&lt;a href=&quot;prelude#v:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 는 모나드이므로, do-notation 또는 &lt;code&gt;&lt;a href=&quot;prelude#v:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 클래스의 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 작업을사용하여 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 작업을 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d66bd1c0a9a631bb529870b9b59cb564cfef574f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; is typically used to uncover any exceptions that a lazy value may contain, and possibly handle them.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; 는 일반적으로 게으른 값에 포함될 수있는 예외를 발견하고 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="e5f96e8297888f4c8cb6d6026f6a35358c46d796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; only evaluates to &lt;em&gt;weak head normal form&lt;/em&gt;. If deeper evaluation is needed, the &lt;code&gt;force&lt;/code&gt; function from &lt;code&gt;Control.DeepSeq&lt;/code&gt; may be handy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; 는&lt;em&gt; 약한 머리 정상 형태&lt;/em&gt; 로만 평가됩니다. 보다 심도있는 평가가 필요한 경우 &lt;code&gt;Control.DeepSeq&lt;/code&gt; 의 &lt;code&gt;force&lt;/code&gt; 함수가 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="116ec0fe55e8a757ceb15f43bd0fa2050c4526aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafeDupableInterleaveIO&quot;&gt;unsafeDupableInterleaveIO&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;IO a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafeDupableInterleaveIO&quot;&gt;unsafeDupableInterleaveIO&lt;/a&gt;&lt;/code&gt; 를 사용하면 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 계산이 느리게 지연 될 수 있습니다. 유형의 값 통과 할 때 &lt;code&gt;IO a&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 는 의 값 경우에만 수행됩니다 &lt;code&gt;a&lt;/code&gt; 요구한다.</target>
        </trans-unit>
        <trans-unit id="494cc332291310179e2975709d8c88cef5c103a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafeInterleaveIO&quot;&gt;unsafeInterleaveIO&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;IO a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded. This is used to implement lazy file reading, see &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafeInterleaveIO&quot;&gt;unsafeInterleaveIO&lt;/a&gt;&lt;/code&gt; 를 사용하면 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 계산이 느리게 지연 될 수 있습니다. 유형의 값 통과 할 때 &lt;code&gt;IO a&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 는 의 값 경우에만 수행됩니다 &lt;code&gt;a&lt;/code&gt; 요구한다. 게으른 파일 읽기를 구현하는 데 사용됩니다 ( &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="5c06be92bbf38d1cfa44849b676d89a93a1f4b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; if the handle is a pipe or socket, and the reading end is closed. (If this is a POSIX system, and the program has not asked to ignore SIGPIPE, then a SIGPIPE may be delivered instead, whose default action is to terminate the program).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; 핸들이 파이프 또는 소켓이고 판독 끝이 닫히면 ResourceVanished 입니다. (이 시스템이 POSIX 시스템이고 프로그램이 SIGPIPE를 무시하도록 요청하지 않은 경우 대신 SIGPIPE가 전달 될 수 있으며 기본 조치는 프로그램을 종료하는 것입니다).</target>
        </trans-unit>
        <trans-unit id="ce50c13fb1a1136000d974e9cc4493060de8a385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and reads bytes directly.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 의 일반적인 &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; 를무시하고바이트를 직접 읽습니다.</target>
        </trans-unit>
        <trans-unit id="3a4706f00e9d226ab177ee1df387b12eedfabe1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; never raises an EOF exception, instead it returns a value smaller than &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; 는 EOF 예외를 발생 시키지 않으며 대신 &lt;code&gt;count&lt;/code&gt; 보다 작은 값을 리턴합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
