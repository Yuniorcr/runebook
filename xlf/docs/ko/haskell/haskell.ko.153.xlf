<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="a6b59c2a24f70ab0117e6d82553cb44f5db5beaa" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; make the following assumptions, which derived instances of &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; obey:</source>
          <target state="translated">파생 된 &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 인스턴스는 다음 가정을 수행하며, &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 의 인스턴스는 파생되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6947cc5e83ec08116f180f0084417ea9147b7ec8" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;ghc-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 의 파생 인스턴스 는 다음을 만족시킵니다.</target>
        </trans-unit>
        <trans-unit id="06759cd5f2f9ac1dee8725d2ed5c223be364fd0b" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;prelude#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 의 파생 인스턴스 는 다음을 만족시킵니다.</target>
        </trans-unit>
        <trans-unit id="684a097e34ae0d764b8c6d51d39b29b0bee71756" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 의 파생 인스턴스 는 다음을 만족시킵니다.</target>
        </trans-unit>
        <trans-unit id="d35280b93ea95fe4cfad9a5536bfcac8252796d5" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; have the following properties, which are compatible with derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">파생 된 &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 인스턴스 에는 다음 파생 속성이 있으며 &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 의 파생 인스턴스와 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="2d3eb08429b0f16f1c8d975887c13e374c0c7b2d" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;Typeable&lt;/code&gt; may be declared if the &lt;a href=&quot;#extension-DeriveDataTypeable&quot;&gt;&lt;code&gt;DeriveDataTypeable&lt;/code&gt;&lt;/a&gt; extension is enabled, but they are ignored, and they may be reported as an error in a later version of the compiler.</source>
          <target state="translated">&lt;a href=&quot;#extension-DeriveDataTypeable&quot;&gt; &lt;code&gt;DeriveDataTypeable&lt;/code&gt; &lt;/a&gt; 확장이 활성화 된 경우 &lt;code&gt;Typeable&lt;/code&gt; 의 파생 인스턴스 가 선언 될 수 있지만 무시되며 이후 버전의 컴파일러에서 오류로보고 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a625a3b23199e215bf7df844e541ee51cd2c14af" translate="yes" xml:space="preserve">
          <source>Deriving Instances of &lt;code&gt;Ix&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ix&lt;/code&gt; 인스턴스 파생</target>
        </trans-unit>
        <trans-unit id="428fbad96d4b8ec2719fed6a4776f441996a9137" translate="yes" xml:space="preserve">
          <source>DerivingStrategies</source>
          <target state="translated">DerivingStrategies</target>
        </trans-unit>
        <trans-unit id="fe61dddbfff25d8c6f4e861cf329e0378c1227af" translate="yes" xml:space="preserve">
          <source>DerivingVia</source>
          <target state="translated">DerivingVia</target>
        </trans-unit>
        <trans-unit id="f419666b5473ff64b074baa6f839b4e5f716f4ea" translate="yes" xml:space="preserve">
          <source>Describes the behaviour of a thread when an asynchronous exception is received.</source>
          <target state="translated">비동기 예외가 수신 될 때 스레드의 동작을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="86900d9cb87f0a3aa156e73560563051573b4e85" translate="yes" xml:space="preserve">
          <source>Describes the command-line used to start the program.</source>
          <target state="translated">프로그램을 시작하는 데 사용되는 명령 줄을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="941b3bfdb3648c4b28d9fad695d39fad50af9b18" translate="yes" xml:space="preserve">
          <source>Describes the device that this file represents.</source>
          <target state="translated">이 파일이 나타내는 장치를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="11d01c4f36a0a75f8a99eb0de66f7d84bf6f2299" translate="yes" xml:space="preserve">
          <source>Describes the end of a block comment. Use the empty string if the language doesn't support block comments. For example &quot;*/&quot;.</source>
          <target state="translated">블록 주석의 끝을 설명합니다. 언어가 블록 주석을 지원하지 않으면 빈 문자열을 사용하십시오. 예를 들어 &quot;* /&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="d7bff92e73c18f05e4411deb8d1a3718ab87200f" translate="yes" xml:space="preserve">
          <source>Describes the environment variables present in the program&amp;rsquo;s environment.</source>
          <target state="translated">프로그램의 환경에있는 환경 변수를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ea0b90de96397190987435a48046f3bfb75ee3c5" translate="yes" xml:space="preserve">
          <source>Describes the name and version of the runtime system responsible for the indicated capability set.</source>
          <target state="translated">표시된 기능 세트를 담당하는 런타임 시스템의 이름과 버전을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="94cbf5af412213168fb9d1323337ae940fd5e4dd" translate="yes" xml:space="preserve">
          <source>Describes the occupancy of the &lt;em&gt;blk_sz&lt;/em&gt; sub-heap.</source>
          <target state="translated">&lt;em&gt;blk_sz&lt;/em&gt; 의 점유를 설명합니다.&lt;em&gt;&lt;/em&gt; 하위 힙 .</target>
        </trans-unit>
        <trans-unit id="fa3af7a3a791014a64cc184c4c9203e30dadf724" translate="yes" xml:space="preserve">
          <source>Describes the start of a block comment. Use the empty string if the language doesn't support block comments. For example &quot;/*&quot;.</source>
          <target state="translated">블록 주석의 시작을 설명합니다. 언어가 블록 주석을 지원하지 않으면 빈 문자열을 사용하십시오. 예를 들어 &quot;/ *&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="59d11a1c054df2eb6d5242a65c23f393e88cf3af" translate="yes" xml:space="preserve">
          <source>Describes the start of a line comment. Use the empty string if the language doesn't support line comments. For example &quot;//&quot;.</source>
          <target state="translated">줄 설명의 시작을 설명합니다. 언어가 줄 설명을 지원하지 않으면 빈 문자열을 사용하십시오. 예를 들어 &quot;//&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="5dd24f6e6200b326116289a831774b916249d831" translate="yes" xml:space="preserve">
          <source>Describes whether an option takes an argument or not, and if so how the argument is injected into a value of type &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">옵션이 인수를 취할지 여부와 인수가 a 유형 &lt;code&gt;a&lt;/code&gt; 값에 삽입되는 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="5f24581e20094da08a0af1b1e32762dbc881fc4e" translate="yes" xml:space="preserve">
          <source>Description of field formatting for &lt;code&gt;&lt;a href=&quot;text-printf#v:formatArg&quot;&gt;formatArg&lt;/a&gt;&lt;/code&gt;. See UNIX &lt;code&gt;printf(3)&lt;/code&gt; for a description of how field formatting works.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-printf#v:formatArg&quot;&gt;formatArg&lt;/a&gt;&lt;/code&gt; 의 필드 형식에 대한 설명입니다 . 필드 형식 지정 방법에 대한 설명은 UNIX &lt;code&gt;printf(3)&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf9ea2204692c52628a518a3e5ebb549e5280444" translate="yes" xml:space="preserve">
          <source>Despite appearances &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;Constraint&lt;/code&gt; aren&amp;rsquo;t really distinct kinds in the compiler&amp;rsquo;s internal representation and can be unified producing unexpected results. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;#11715&lt;/a&gt; for one example.</source>
          <target state="translated">외관에도 불구하고 &lt;code&gt;*&lt;/code&gt; 및 &lt;code&gt;Constraint&lt;/code&gt; 는 컴파일러의 내부 표현에서 실제로 구별되는 종류가 아니며 통합되어 예기치 않은 결과를 생성 할 수 있습니다. &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;# 11715&lt;/a&gt; 참조한 가지 예는 를 .</target>
        </trans-unit>
        <trans-unit id="c5aaf0f3b8a198bd1d899712fa287db57bbdb362" translate="yes" xml:space="preserve">
          <source>Despite appearances &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;Constraint&lt;/code&gt; aren&amp;rsquo;t really distinct kinds in the compiler&amp;rsquo;s internal representation and can be unified producing unexpected results. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;Issue #11715&lt;/a&gt; for one example.</source>
          <target state="translated">모양에도 불구하고 &lt;code&gt;*&lt;/code&gt; 와 &lt;code&gt;Constraint&lt;/code&gt; 은 컴파일러의 내부 표현에서 실제로 다른 종류가 아니며 예기치 않은 결과를 생성하여 통합 될 수 있습니다. 한 가지 예는 &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;문제 # 11715&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e20cef624cada757ea9786710b628ae5d86a2bc" translate="yes" xml:space="preserve">
          <source>Despite sequences being structurally strict from a semantic standpoint, they are in fact implemented using laziness internally. As a result, many operations can be performed &lt;em&gt;incrementally&lt;/em&gt;, producing their results as they are demanded. This greatly improves performance in some cases. These functions include</source>
          <target state="translated">시맨틱 관점에서 구조적으로 엄격한 시퀀스에도 불구하고 실제로는 내부적으로 게으름을 사용하여 구현됩니다. 결과적으로 많은 작업을 &lt;em&gt;증 분식&lt;/em&gt; 으로 수행 하여 필요에 따라 결과를 생성 할 수 있습니다 . 경우에 따라 성능이 크게 향상됩니다. 이러한 기능에는 다음이 포함됩니다</target>
        </trans-unit>
        <trans-unit id="d42713493ca811109d8a2a18c46b93f70cff4c27" translate="yes" xml:space="preserve">
          <source>Destination</source>
          <target state="translated">Destination</target>
        </trans-unit>
        <trans-unit id="2a8acf95fbf5e4a22b63df20b3c2077c316bd245" translate="yes" xml:space="preserve">
          <source>Destination file</source>
          <target state="translated">대상 파일</target>
        </trans-unit>
        <trans-unit id="40bd946a96ec72755557f358fa5f47bc0ffa8544" translate="yes" xml:space="preserve">
          <source>Destination filename</source>
          <target state="translated">대상 파일 이름</target>
        </trans-unit>
        <trans-unit id="5539f35a8561f4131af1dc4fb9c1298a915c8d2b" translate="yes" xml:space="preserve">
          <source>Destination handle</source>
          <target state="translated">대상 핸들</target>
        </trans-unit>
        <trans-unit id="3f49bdaae42dfc22e5cd36ab1aed1e2ad22d1f82" translate="yes" xml:space="preserve">
          <source>Destination offset</source>
          <target state="translated">대상 오프셋</target>
        </trans-unit>
        <trans-unit id="86bf83cd5081d943de301e189d741852e800fda4" translate="yes" xml:space="preserve">
          <source>Detailed performance information</source>
          <target state="translated">자세한 성능 정보</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="d703cafc57e08c9f23093d31c197dc9a9c0f55a5" translate="yes" xml:space="preserve">
          <source>Details about the most recent GC</source>
          <target state="translated">가장 최근 GC에 대한 세부 사항</target>
        </trans-unit>
        <trans-unit id="e39e62c54937259d2e217bafb98c5464b1409e32" translate="yes" xml:space="preserve">
          <source>Detect if the minus sign stands for negation during lexical analysis by checking for the surrounding whitespace.</source>
          <target state="translated">주변 공백을 확인하여 어휘 분석 중에 마이너스 기호가 부정을 의미하는지 감지합니다.</target>
        </trans-unit>
        <trans-unit id="7136385935ff1570aefb13ece38b6782a9e64310" translate="yes" xml:space="preserve">
          <source>Detecting the end of input</source>
          <target state="translated">입력 끝 감지</target>
        </trans-unit>
        <trans-unit id="6113c904a4bc89590f714d2c9c2b9d8e49c7c6e0" translate="yes" xml:space="preserve">
          <source>Determine the number of NUMA nodes (N) by querying the OS.</source>
          <target state="translated">OS를 쿼리하여 NUMA 노드 수 (N)를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="f1277b45c28500950a752d82f4685ae0833d4973" translate="yes" xml:space="preserve">
          <source>Determine the ordering relationship between two &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt;s, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; in the indeterminate case.</source>
          <target state="translated">두 &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; 사이의 순서 관계를 결정 하거나 불확실한 경우 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 결정하십시오 .</target>
        </trans-unit>
        <trans-unit id="47064c9e50a4f4913442f4cab22b8f5c9b59dec8" translate="yes" xml:space="preserve">
          <source>Determine the ordering relationship between two &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt;s, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; in the indeterminate case.</source>
          <target state="translated">두 &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; 간의 순서 관계를 결정 하거나 불확실한 경우 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="01874ea47aa8393a0c387d9291f894c301e44b7a" translate="yes" xml:space="preserve">
          <source>Determine the ordering relationship between two &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt;s, or &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; in the indeterminate case.</source>
          <target state="translated">두 &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; 간의 순서 관계를 결정 하거나 불확실한 경우 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="214a854127ae5c1d43ac5aacd484fafbafee72c6" translate="yes" xml:space="preserve">
          <source>Determine whether a &lt;code&gt;ByteArray#&lt;/code&gt; is guaranteed not to move during GC.</source>
          <target state="translated">GC 동안 &lt;code&gt;ByteArray#&lt;/code&gt; 가 이동하지 않을지 여부를 결정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e300655b1ab00113c9e7e23b9ca3980c09ab173" translate="yes" xml:space="preserve">
          <source>Determine whether a &lt;code&gt;MutableByteArray#&lt;/code&gt; is guaranteed not to move during GC.</source>
          <target state="translated">GC 동안 &lt;code&gt;MutableByteArray#&lt;/code&gt; 가 이동하지 않을지 여부를 결정하십시오 .</target>
        </trans-unit>
        <trans-unit id="bc34627b7f335d0a986bd66dcbdc58081e4a1b06" translate="yes" xml:space="preserve">
          <source>Determine whether the given language extension is enabled in the &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">주어진 언어 확장이 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; 모나드 에서 활성화되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="72201c36036bffd54a64987e2b923c24e2ee1612" translate="yes" xml:space="preserve">
          <source>Determine whether the given language extension is enabled in the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">주어진 언어 확장이 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; 모나드 에서 활성화되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="aca9ce3b0f74c3bafc07e5ee5b59cd2fa1e7a809" translate="yes" xml:space="preserve">
          <source>Determines whether a character can be accurately encoded in a &lt;code&gt;&lt;a href=&quot;foreign-c-string#v:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-c-string#v:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; 으로 문자를 정확하게 인코딩 할 수 있는지 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="9495c2608dd8f0d1ca0a04adddfa4fc925722421" translate="yes" xml:space="preserve">
          <source>Determines whether all elements of the structure satisfy the predicate.</source>
          <target state="translated">구조의 모든 요소가 술어를 만족시키는 지 판별합니다.</target>
        </trans-unit>
        <trans-unit id="27984746c670fc9545d09ec3026387b389d946d0" translate="yes" xml:space="preserve">
          <source>Determines whether all elements of the structure satisfy their appropriate predicate argument.</source>
          <target state="translated">구조의 모든 요소가 해당 술어 인수를 만족시키는 지 여부를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="aa4808c226a1f53f295127c92d1385605b155378" translate="yes" xml:space="preserve">
          <source>Determines whether all elements of the structure satisfy their appropriate predicate argument. Empty structures yield &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 모든 요소가 적절한 술어 인수를 충족하는지 여부를 판별합니다. 빈 구조는 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="892f6b6fd734b6c09f0abee08ea5bc4f09d48ab2" translate="yes" xml:space="preserve">
          <source>Determines whether any element of the structure satisfies its appropriate predicate argument.</source>
          <target state="translated">구조의 요소가 해당 술어 인수를 만족시키는 지 여부를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="58f0a1ad43741dfac772162b80a4be2cf905b59d" translate="yes" xml:space="preserve">
          <source>Determines whether any element of the structure satisfies its appropriate predicate argument. Empty structures yield &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 요소가 적절한 술어 인수를 충족하는지 여부를 판별합니다. 빈 구조는 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="47b5dd9822dde948bc1a29e16ea405a27b285feb" translate="yes" xml:space="preserve">
          <source>Determines whether any element of the structure satisfies the predicate.</source>
          <target state="translated">구조의 요소가 술어를 만족시키는 지 판별합니다.</target>
        </trans-unit>
        <trans-unit id="49072c605c4961cf1b7a74e2dc24b8ce17195be8" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports holes in partial type signatures as warnings. Has no effect unless &lt;a href=&quot;exts/partial_type_signatures#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;PartialTypeSignatures&lt;/code&gt;&lt;/a&gt; is enabled, which controls whether errors should be generated for holes in types or not. See &lt;a href=&quot;exts/partial_type_signatures#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;.</source>
          <target state="translated">컴파일러가 부분 형식 서명의 구멍을 경고로보고하는지 여부를 결정합니다. 유형의 구멍에 대해 오류를 생성할지 여부를 제어하는 &lt;a href=&quot;exts/partial_type_signatures#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;PartialTypeSignatures&lt;/code&gt; &lt;/a&gt; 가 활성화되어 있지 않으면 효과 가 없습니다. &lt;a href=&quot;exts/partial_type_signatures#partial-type-signatures&quot;&gt;부분 유형 서명을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a44b1134e11e008b60f36bb4619c3d242202e8b" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports holes in partial type signatures as warnings. Has no effect unless &lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;-XPartialTypeSignatures&lt;/code&gt;&lt;/a&gt; is enabled, which controls whether errors should be generated for holes in types or not. See &lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;.</source>
          <target state="translated">컴파일러가 부분 유형 시그니처의 허점을 경고로보고하는지 여부를 결정합니다. &lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;-XPartialTypeSignatures&lt;/code&gt; &lt;/a&gt; 를 사용 하지 않으면 효과 가 없습니다. 이는 유형의 구멍에 대해 오류를 생성해야하는지 여부를 제어합니다. &lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;부분 유형 서명을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97fc5cbf9de97707167dfe1f5761eaaf0989fc93" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports holes in partial type signatures as warnings. Has no effect unless &lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;PartialTypeSignatures&lt;/code&gt;&lt;/a&gt; is enabled, which controls whether errors should be generated for holes in types or not. See &lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;.</source>
          <target state="translated">컴파일러가 부분 형식 서명의 구멍을 경고로보고하는지 여부를 결정합니다. 유형의 구멍에 대해 오류를 생성할지 여부를 제어하는 &lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;PartialTypeSignatures&lt;/code&gt; &lt;/a&gt; 가 활성화되어 있지 않으면 효과 가 없습니다. &lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;부분 유형 서명을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a44817b3ae97c9ce55fd6074731035008c6379a4" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports typed holes warnings. Has no effect unless typed holes errors are deferred until runtime. See &lt;a href=&quot;exts/typed_holes#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; and &lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;</source>
          <target state="translated">컴파일러가 형식화 된 구멍 경고를보고하는지 여부를 결정합니다. 입력 된 구멍 오류가 런타임까지 연기되지 않는 한 효과가 없습니다. &lt;a href=&quot;exts/typed_holes#typed-holes&quot;&gt;유형이 지정된 구멍&lt;/a&gt; 및 &lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;런타임에 유형 오류 연기를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f431a9ba1bae1cfa166d77546d20920a103270f7" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports typed holes warnings. Has no effect unless typed holes errors are deferred until runtime. See &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; and &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;</source>
          <target state="translated">컴파일러가 입력 된 홀 경고를보고하는지 여부를 결정합니다. 타입 홀 에러가 런타임까지 지연되지 않는 한 영향을 미치지 않습니다. &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;형식화 된 구멍&lt;/a&gt; 및 &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;런타임에 형식 오류 연기를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fc7beedb94964df847b4aa906db879eeba9578fe" translate="yes" xml:space="preserve">
          <source>Determining and changing the size of a file</source>
          <target state="translated">파일 크기 결정 및 변경</target>
        </trans-unit>
        <trans-unit id="7f41f23ed4f57c117066f517ac4dc726235a4fbe" translate="yes" xml:space="preserve">
          <source>DeviceID</source>
          <target state="translated">DeviceID</target>
        </trans-unit>
        <trans-unit id="05bc2f368e09519a6203b8364adf1c1b8ccd2c30" translate="yes" xml:space="preserve">
          <source>DiffTime</source>
          <target state="translated">DiffTime</target>
        </trans-unit>
        <trans-unit id="b16f1f66543d3256c7320f66ff9ae94cbd849539" translate="yes" xml:space="preserve">
          <source>Difference</source>
          <target state="translated">Difference</target>
        </trans-unit>
        <trans-unit id="6b25764c6f644c28733592e6ddd01625443fe25e" translate="yes" xml:space="preserve">
          <source>Difference lists of a semigroup</source>
          <target state="translated">세미 그룹의 차이점 목록</target>
        </trans-unit>
        <trans-unit id="da462bf728a859cd53e329310195e79cca4ceae7" translate="yes" xml:space="preserve">
          <source>Different Haskell implementations have different characteristics with regard to which operations block &lt;em&gt;all&lt;/em&gt; threads.</source>
          <target state="translated">다른 Haskell 구현은 &lt;em&gt;모든&lt;/em&gt; 스레드를 차단하는 작업과 관련하여 다른 특성을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="bf981156eb7ca8624ed198fab08fb4abb9adf0d8" translate="yes" xml:space="preserve">
          <source>Different length lists means that the last cell gets padded. If you want more power, then use the system above, or build tables explicitly.</source>
          <target state="translated">길이 목록이 다르면 마지막 셀이 채워집니다. 더 많은 전력을 원한다면 위의 시스템을 사용하거나 명시 적으로 테이블을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="52728fe1ecbead3e66faefd7d9da5ae96ba8c9cc" translate="yes" xml:space="preserve">
          <source>Different operating systems and/or C libraries often support different values of &lt;code&gt;errno&lt;/code&gt;. This module defines the common values, but due to the open definition of &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; users may add definitions which are not predefined.</source>
          <target state="translated">다른 운영 체제 및 / 또는 C 라이브러리는 종종 다른 값의 &lt;code&gt;errno&lt;/code&gt; 를 지원합니다 . 이 모듈은 공통 값을 정의하지만 &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; 의 공개 정의로 인해 사전 정의되지 않은 정의를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5699958536be85054b2076d4e7a7e8a82a2601d6" translate="yes" xml:space="preserve">
          <source>Dir Name</source>
          <target state="translated">디렉토리 이름</target>
        </trans-unit>
        <trans-unit id="6bde2e9bac6af1c1cdb712cc851fdef9fdab0e53" translate="yes" xml:space="preserve">
          <source>Dir Names</source>
          <target state="translated">디렉토리 이름</target>
        </trans-unit>
        <trans-unit id="29e04aa66e34d1ccd3a0ba74aacb689cffa8e89f" translate="yes" xml:space="preserve">
          <source>DirStream</source>
          <target state="translated">DirStream</target>
        </trans-unit>
        <trans-unit id="4a51e26d85d37a1b100bbb7d21a8a02eecf64c6c" translate="yes" xml:space="preserve">
          <source>DirStreamOffset</source>
          <target state="translated">DirStreamOffset</target>
        </trans-unit>
        <trans-unit id="77b27e4ec40fedbfbf0af6e0ce0421f51b392c1d" translate="yes" xml:space="preserve">
          <source>Direct &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; equivalent of &lt;code&gt;&lt;a href=&quot;data-list#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">직접 &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-list#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="4b892fe0c040fa8a944037d1d2817c41ab7da958" translate="yes" xml:space="preserve">
          <source>Directory</source>
          <target state="translated">Directory</target>
        </trans-unit>
        <trans-unit id="7f06a107ec78fc0edd366ec1c7a5d4a85eb86376" translate="yes" xml:space="preserve">
          <source>Directory in which to create the file</source>
          <target state="translated">파일을 작성하는 디렉토리</target>
        </trans-unit>
        <trans-unit id="c19c937f7b8beb14c248ef377833b4144600dcc0" translate="yes" xml:space="preserve">
          <source>Directory to execute in</source>
          <target state="translated">실행할 디렉토리</target>
        </trans-unit>
        <trans-unit id="29aac0cc614a09bd8c59c51c1f4d8cfa14a498e5" translate="yes" xml:space="preserve">
          <source>DirectoryLink</source>
          <target state="translated">DirectoryLink</target>
        </trans-unit>
        <trans-unit id="8b95a6ddeadcd18ff8c0fa0629a884ef1617fafd" translate="yes" xml:space="preserve">
          <source>Disable &lt;a href=&quot;exts/safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;exts/safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; 비활성화</target>
        </trans-unit>
        <trans-unit id="7cf56260d9de1855a2a4e0f5584f4fa6e8c62629" translate="yes" xml:space="preserve">
          <source>Disable &lt;a href=&quot;http://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13&quot;&gt;pattern guards&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13&quot;&gt;패턴 가드를&lt;/a&gt; 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="23c32d6ebc66d23eaefb0b9ae52123aa4bd1cd9f" translate="yes" xml:space="preserve">
          <source>Disable &lt;a href=&quot;https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13&quot;&gt;pattern guards&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13&quot;&gt;패턴 가드를&lt;/a&gt; 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="7bbf11b2c8f2d0f19f9a084bec0efba0128d1ab6" translate="yes" xml:space="preserve">
          <source>Disable all non-essential messages (this is the default).</source>
          <target state="translated">필수적이지 않은 모든 메시지를 비활성화합니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="c3554bdc6821d999726cb37748dc3d87ec341121" translate="yes" xml:space="preserve">
          <source>Disable all processing of RTS options. If &lt;code&gt;+RTS&lt;/code&gt; appears anywhere on the command line, then the program will abort with an error message. If the &lt;code&gt;GHCRTS&lt;/code&gt; environment variable is set, then the program will emit a warning message, &lt;code&gt;GHCRTS&lt;/code&gt; will be ignored, and the program will run as normal.</source>
          <target state="translated">모든 RTS 옵션 처리를 비활성화합니다. 경우 &lt;code&gt;+RTS&lt;/code&gt; 가 어디 명령 줄에 나타난 후 프로그램이 오류 메시지와 함께 중단됩니다. 는 IF &lt;code&gt;GHCRTS&lt;/code&gt; 의 환경 변수가 설정되어, 다음 프로그램은 경고 메시지를 내 보냅니다 &lt;code&gt;GHCRTS&lt;/code&gt; 이 무시되고, 프로그램은 정상적으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="43655bd43ad758f0291fb7c2329ae7bf443548c3" translate="yes" xml:space="preserve">
          <source>Disable allocation limit processing for the current thread.</source>
          <target state="translated">현재 스레드에 대한 할당 제한 처리를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6847234dec82ea3a4f7f8f9894b0e8288a53efb8" translate="yes" xml:space="preserve">
          <source>Disable automatic migration for load balancing. Normally the runtime will automatically try to schedule threads across the available CPUs to make use of idle CPUs; this option disables that behaviour. Note that migration only applies to threads; sparks created by &lt;code&gt;par&lt;/code&gt; are load-balanced separately by work-stealing.</source>
          <target state="translated">로드 밸런싱을위한 자동 마이그레이션을 비활성화합니다. 일반적으로 런타임은 유휴 CPU를 사용하기 위해 사용 가능한 CPU에서 스레드를 자동으로 예약하려고 시도합니다. 이 옵션은 해당 동작을 비활성화합니다. 마이그레이션은 스레드에만 적용됩니다. &lt;code&gt;par&lt;/code&gt; 에 의해 생성 된 spark 는 work-stealing에 의해 별도로로드 밸런싱됩니다.</target>
        </trans-unit>
        <trans-unit id="af28e4cac3862db95d9255f65a5b05d14c383530" translate="yes" xml:space="preserve">
          <source>Disable completion altogether.</source>
          <target state="translated">완료를 완전히 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="df78952591e28060ba8968a01a7adf1a3322175e" translate="yes" xml:space="preserve">
          <source>Disable one or more breakpoints by number (use &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt;&lt;code&gt;:show breaks&lt;/code&gt;&lt;/a&gt; to see the number and state of each breakpoint). The &lt;code&gt;*&lt;/code&gt; form disables all the breakpoints.</source>
          <target state="translated">숫자로 하나 이상의 중단 점을 비활성화합니다 ( 각 중단 점의 숫자와 상태를 보려면 &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt; &lt;code&gt;:show breaks&lt;/code&gt; &lt;/a&gt; 를 사용 ). &lt;code&gt;*&lt;/code&gt; 폼 비활성화 모든 중단 점.</target>
        </trans-unit>
        <trans-unit id="2ea669916f99d9391d56c67c834b771a2ed90d80" translate="yes" xml:space="preserve">
          <source>Disable optimisations (default)</source>
          <target state="translated">최적화 비활성화 (기본값)</target>
        </trans-unit>
        <trans-unit id="4d9cc51168cfd10376ded1fd243416b8b3c0585d" translate="yes" xml:space="preserve">
          <source>Disable pattern guards. Implied by &lt;a href=&quot;#extension-Haskell98&quot;&gt;&lt;code&gt;Haskell98&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">패턴 가드를 비활성화합니다. &lt;a href=&quot;#extension-Haskell98&quot;&gt; &lt;code&gt;Haskell98&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="93d65f510839a1171fd9933ad741b89f3739443c" translate="yes" xml:space="preserve">
          <source>Disable pattern guards. Implied by &lt;a href=&quot;control#extension-Haskell98&quot;&gt;&lt;code&gt;Haskell98&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">패턴 가드를 비활성화합니다. &lt;a href=&quot;control#extension-Haskell98&quot;&gt; &lt;code&gt;Haskell98&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="f65fbe541003015c3c31f4a5de6abc2b1102f444" translate="yes" xml:space="preserve">
          <source>Disable pattern guards. Implied by &lt;code&gt;Haskell98&lt;/code&gt;.</source>
          <target state="translated">패턴 가드를 비활성화합니다. &lt;code&gt;Haskell98&lt;/code&gt; 에 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="b0c1db6c578d0c7aa3363bb624d93f128e9c2288" translate="yes" xml:space="preserve">
          <source>Disable reading of &lt;code&gt;.ghci&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;.ghci&lt;/code&gt; 파일 읽기 비활성화</target>
        </trans-unit>
        <trans-unit id="528833c29584adc3559965f54fc01d57c2510947" translate="yes" xml:space="preserve">
          <source>Disable support for traditional record syntax (as supported by Haskell 98) &lt;code&gt;C {f = x}&lt;/code&gt;</source>
          <target state="translated">기존 레코드 구문에 대한 지원 비활성화 (Haskell 98에서 지원) &lt;code&gt;C {f = x}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ce61bde28943f4349e9623a98b59c15b9020a5b" translate="yes" xml:space="preserve">
          <source>Disable the monomorphism restriction.</source>
          <target state="translated">단일성 제한을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="648cfd653017f3126e2003fd9dfd13eb8c6aaeaf" translate="yes" xml:space="preserve">
          <source>Disabled breakpoints can be (re-)enabled with the &lt;a href=&quot;#ghci-cmd-:enable&quot;&gt;&lt;code&gt;:enable&lt;/code&gt;&lt;/a&gt; command. The parameters of the &lt;a href=&quot;#ghci-cmd-:disable&quot;&gt;&lt;code&gt;:disable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ghci-cmd-:enable&quot;&gt;&lt;code&gt;:enable&lt;/code&gt;&lt;/a&gt; commands are identical.</source>
          <target state="translated">비활성화 된 중단 점은 &lt;a href=&quot;#ghci-cmd-:enable&quot;&gt; &lt;code&gt;:enable&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 (다시) 활성화 할 수 있습니다 . &lt;a href=&quot;#ghci-cmd-:disable&quot;&gt; &lt;code&gt;:disable&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#ghci-cmd-:enable&quot;&gt; &lt;code&gt;:enable&lt;/code&gt; &lt;/a&gt; 의 매개 변수 명령 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="64707ce12094153150fea1d675adee54c3c59d87" translate="yes" xml:space="preserve">
          <source>Disables all processing of RTS options. Unlike &lt;code&gt;none&lt;/code&gt; this treats all RTS flags appearing on the command line the same way as regular arguments. (Passing them on to your program as arguments). &lt;code&gt;GHCRTS&lt;/code&gt; options will be processed normally.</source>
          <target state="translated">모든 RTS 옵션 처리를 비활성화합니다. 달리 &lt;code&gt;none&lt;/code&gt; 이 취급하는 모든 RTS 플래그는 명령 행에서 일반 인수와 같은 방식으로 표시. (논쟁으로 프로그램에 전달). &lt;code&gt;GHCRTS&lt;/code&gt; 옵션은 정상적으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="eb7d302197ad1a9b0f46e77a955ef1dd60914bc2" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; 에&lt;/a&gt; 의해 활성화 된 모든 경고를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="eac7b7c968689ca48aa206b857412f0368a124ff" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; 에&lt;/a&gt; 의해 활성화 된 모든 경고를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="b86bd129d8deed9d2707d728156b614d944d2936" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;using-warnings#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;using-warnings#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; 에&lt;/a&gt; 의해 활성화 된 모든 경고를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="c21fa7cd41b8d79e39e0c052bfe9b3466f989b7e" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;using-warnings#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;using-warnings#ghc-flag--Wno-compat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; 에&lt;/a&gt; 의해 활성화 된 모든 경고를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="a4ee080902d234083bc8ff48dafed803edc5d0fc" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fno-prof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">이전의 &lt;a href=&quot;#ghc-flag--fno-prof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="ed1bb6b149e62aa411f8f79bf450da5c51163f1e" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fno-prof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이전 &lt;a href=&quot;#ghc-flag--fno-prof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="2f756aae6895abadc248bc8ab530c40af6fa9f3e" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">이전의 &lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="288ab69ec018b5c48af064023237fdd6e2c36c0d" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fprof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이전의 &lt;a href=&quot;#ghc-flag--fprof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="d8bfef393675b76f8a2b81ce9e23e9ea8e089b4e" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fno-prof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">이전의 &lt;a href=&quot;profiling#ghc-flag--fno-prof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="71430acfde73d239a283021b6fb7bb31842fd7a0" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fno-prof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이전 &lt;a href=&quot;profiling#ghc-flag--fno-prof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="4c4f20df362a2ff22da3d04daead7abe8aca2ab3" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fprof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">이전의 &lt;a href=&quot;profiling#ghc-flag--fprof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="0854c1c52f3c3de17c4b81e5aa3621c74ccc811d" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fprof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이전의 &lt;a href=&quot;profiling#ghc-flag--fprof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="f9c2a32c122872ba218265f195d9b5658b66219b" translate="yes" xml:space="preserve">
          <source>Disables showing a list of valid hole fits for typed holes in type error messages.</source>
          <target state="translated">유형 오류 메시지에서 유형이 지정된 구멍에 유효한 구멍 맞춤리스트를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2504ef9edd5aa064161469bc4b453285677662a9" translate="yes" xml:space="preserve">
          <source>Disables the RTS&amp;rsquo;s normal behaviour of garbage-collecting CAFs (Constant Applicative Forms, in other words top-level expressions). This option is useful for specialised applications that do runtime dynamic linking, where code dynamically linked in the future might require the value of a CAF that would otherwise be garbage-collected.</source>
          <target state="translated">가비지 수집 CAF (일정한 적용 양식, 즉 최상위 식)의 RTS의 정상적인 동작을 비활성화합니다. 이 옵션은 런타임 동적 링크를 수행하는 특수 응용 프로그램에 유용합니다. 나중에 동적으로 링크 된 코드는 가비지 수집되는 CAF 값이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73a88f9774a80f3e446c767977f8b962e2f3af78" translate="yes" xml:space="preserve">
          <source>Disables the sorting of the list of valid hole fits for typed holes in type error messages.</source>
          <target state="translated">유형 오류 메시지에서 유형이 지정된 구멍에 대한 유효한 구멍 맞춤 목록을 정렬하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e7d4ffecb0d4ef6b4a054f74984b146f763c3ab" translate="yes" xml:space="preserve">
          <source>Disallow use of record syntax.</source>
          <target state="translated">레코드 구문을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="124fa9f39efa7c4b8000be08ba3b7a85a3c1d84f" translate="yes" xml:space="preserve">
          <source>DisambiguateRecordFields</source>
          <target state="translated">DisambiguateRecordFields</target>
        </trans-unit>
        <trans-unit id="973fb7fdcc867209f1bea4f98625a8bc33cbefa7" translate="yes" xml:space="preserve">
          <source>Discard the result of an &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 조치 의 결과를 버리십시오 .</target>
        </trans-unit>
        <trans-unit id="4e8c1602e460f8c2abe067ec7f516aa7b4b5e843" translate="yes" xml:space="preserve">
          <source>Discard the return value of an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 액션 의 반환 값을 버리십시오</target>
        </trans-unit>
        <trans-unit id="60ee0a81ff5767711f12e71d66be39bfdc4ed3f4" translate="yes" xml:space="preserve">
          <source>Discard the type annotation and produce a plain Template Haskell expression</source>
          <target state="translated">유형 주석을 버리고 일반 Template Haskell 표현식을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d490a2102a5d94032dca75684dab9f5839e20b0e" translate="yes" xml:space="preserve">
          <source>Disjoint</source>
          <target state="translated">Disjoint</target>
        </trans-unit>
        <trans-unit id="fd84e33b9acb6770f15968d9176f3a6299e305da" translate="yes" xml:space="preserve">
          <source>Display a list of the cycles in the module graph. This is useful when trying to eliminate such cycles.</source>
          <target state="translated">모듈 그래프에 사이클 목록을 표시하십시오. 이러한 사이클을 제거하려고 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8b51a5988be33f48aac63a10173d8b6f08d92477" translate="yes" xml:space="preserve">
          <source>Display a summary of the available flags and exit successfully.</source>
          <target state="translated">사용 가능한 플래그 요약을 표시하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="cb69db93cb7727c8208327260fe3f741e1f1b2f2" translate="yes" xml:space="preserve">
          <source>Display equation incompatibilities in closed type families</source>
          <target state="translated">닫힌 유형 패밀리에서 방정식 비 호환성 표시</target>
        </trans-unit>
        <trans-unit id="87a01a2d90029f7ec813289df19d8e72278f7de2" translate="yes" xml:space="preserve">
          <source>Display help</source>
          <target state="translated">도움말 표시</target>
        </trans-unit>
        <trans-unit id="41c1ba6ec87ec36765c9e53b50cd13c7f4803ada" translate="yes" xml:space="preserve">
          <source>Display some stats after evaluating each expression, including the elapsed time and number of bytes allocated. NOTE: the allocation figure is only accurate to the size of the storage manager&amp;rsquo;s allocation area, because it is calculated at every GC. Hence, you might see values of zero if no GC has occurred.</source>
          <target state="translated">경과 시간 및 할당 된 바이트 수를 포함하여 각 표현식을 평가 한 후 일부 통계를 표시합니다. 참고 : 할당 수치는 모든 GC에서 계산되므로 스토리지 관리자의 할당 영역 크기에만 정확합니다. 따라서 GC가 발생하지 않으면 0 값이 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="095ebe4ebcb9b310b40079498b0d7af564dcfc43" translate="yes" xml:space="preserve">
          <source>Display the heap profile using a postscript viewer such as Ghostview, or print it out on a Postscript-capable printer.</source>
          <target state="translated">Ghostview와 같은 포스트 스크립트 뷰어를 사용하여 힙 프로파일을 표시하거나 포스트 스크립트 가능 프린터에서 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="42ed514ac8dc6c7f2b5a0e7efded5f227d9a05b4" translate="yes" xml:space="preserve">
          <source>Display the history of evaluation steps. With a number, displays that many steps (default: 20). For use with &lt;a href=&quot;#ghci-cmd-:trace&quot;&gt;&lt;code&gt;:trace&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;#tracing&quot;&gt;Tracing and history&lt;/a&gt;. To set the number of history entries stored by GHCi, use the &lt;a href=&quot;#ghc-flag--fghci-hist-size=%E2%9F%A8n%E2%9F%A9&quot;&gt;&lt;code&gt;-fghci-hist-size=⟨n⟩&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">평가 단계 기록을 표시합니다. 숫자와 함께 많은 단계를 표시합니다 (기본값 : 20). &lt;a href=&quot;#ghci-cmd-:trace&quot;&gt; &lt;code&gt;:trace&lt;/code&gt; &lt;/a&gt; 와 함께 사용 ; &lt;a href=&quot;#tracing&quot;&gt;추적 및 히스토리를&lt;/a&gt; 참조하십시오 . GHCi가 저장 한 히스토리 항목 수를 설정하려면 &lt;a href=&quot;#ghc-flag--fghci-hist-size=%E2%9F%A8n%E2%9F%A9&quot;&gt; &lt;code&gt;-fghci-hist-size=⟨n⟩&lt;/code&gt; &lt;/a&gt; 플래그를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b8cfeba43652d20b5638feecf9437ecf8b9376dd" translate="yes" xml:space="preserve">
          <source>Display the internal structure of a lazy &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">게으른 &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 의 내부 구조를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="7e6b712246e619a1b870cd3a0c97e6f1acc5850a" translate="yes" xml:space="preserve">
          <source>Display the type of each variable bound after a statement is entered at the prompt. If the statement is a single expression, then the only variable binding will be for the variable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">프롬프트에서 명령문을 입력 한 후 바인드 된 각 변수의 유형을 표시하십시오. 문은 유일한 변수는 변수가 될 것입니다 바인딩 하나의 표현 인 경우 &lt;code&gt;it&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7dda305b30fb3dbdd4efa96b217338aa714c6a16" translate="yes" xml:space="preserve">
          <source>Displays Safe Haskell information about the given module (or the current module if omitted). This includes the trust type of the module and its containing package.</source>
          <target state="translated">지정된 모듈 (또는 생략 된 경우 현재 모듈)에 대한 Safe Haskell 정보를 표시합니다. 여기에는 모듈의 트러스트 유형과 포함 패키지가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0903e2a9efe00f957be2b9970cc65b68dba2de82" translate="yes" xml:space="preserve">
          <source>Displays a list of the available commands.</source>
          <target state="translated">사용 가능한 명령 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="00f913d8e9427d6b6873bc6ec90e73b8e1bf395a" translate="yes" xml:space="preserve">
          <source>Displays all the class instances available to the argument ⟨type⟩. The command will match ⟨type⟩ with the first parameter of every instance and then check that all constraints are satisfiable.</source>
          <target state="translated">⟨type⟩ 인수에 사용할 수있는 모든 클래스 인스턴스를 표시합니다. 이 명령은 ⟨type⟩을 모든 인스턴스의 첫 번째 매개 변수와 일치시킨 다음 모든 제약 조건이 충족되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3f097a99f355d3baa3c2e92b951e6f2e97243b4e" translate="yes" xml:space="preserve">
          <source>Displays information about the given name(s). For example, if ⟨name⟩ is a class, then the class methods and their types will be printed; if ⟨name⟩ is a type constructor, then its definition will be printed; if ⟨name⟩ is a function, then its type will be printed. If ⟨name⟩ has been loaded from a source file, then GHCi will also display the location of its definition in the source.</source>
          <target state="translated">주어진 이름에 대한 정보를 표시합니다. 예를 들어, ⟨name⟩이 클래스 인 경우 클래스 메소드와 해당 유형이 인쇄됩니다. ⟨name⟩이 유형 생성자 인 경우 해당 정의가 인쇄됩니다. ⟨name⟩이 (가) 함수이면 해당 유형이 인쇄됩니다. filename⟩이 소스 파일에서로드 된 경우 GHCi는 소스에서 해당 정의의 위치도 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1eb2d713386d408497901eec0a5c87552a0dd449" translate="yes" xml:space="preserve">
          <source>Displays the documentation for the given name. Currently the command is restricted to displaying the documentation directly on the declaration in question, ignoring documentation for arguments, constructors etc.</source>
          <target state="translated">주어진 이름에 대한 문서를 표시합니다. 현재이 명령은 인수, 생성자 등에 대한 문서를 무시하고 해당 선언에 문서를 직접 표시하도록 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cab81b5bbad5c1379a099054e1e3e147089139c" translate="yes" xml:space="preserve">
          <source>Displays the identifiers exported by the module ⟨module⟩, which must be either loaded into GHCi or be a member of a package. If ⟨module⟩ is omitted, the most recently-loaded module is used.</source>
          <target state="translated">모듈 ⟨module⟩에서 내 보낸 식별자를 표시합니다.이 식별자는 GHCi에로드되거나 패키지의 구성원이어야합니다. ⟨module⟩을 생략하면 가장 최근에로드 된 모듈이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c07c0ac0aeeee456ea39d578dfc80e8faa06b52c" translate="yes" xml:space="preserve">
          <source>Displays the specified setting (see &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">지정된 설정을 표시합니다 ( &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="dac6c3514011877960a86400d6ad6779a0444dee" translate="yes" xml:space="preserve">
          <source>Dissolve the association between the stable pointer and the Haskell value. Afterwards, if the stable pointer is passed to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt;, the behaviour is undefined. However, the stable pointer may still be passed to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, but the &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; value returned by &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, in this case, is undefined (in particular, it may be &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt;). Nevertheless, the call to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; is guaranteed not to diverge.</source>
          <target state="translated">안정 포인터와 Haskell 값 사이의 연관을 해석하십시오. 그 후, 안정적인 포인터가 &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt; 로 전달 되면 동작이 정의되지 않습니다. 그러나, 안정된 포인터는 여전히 전달 될 수 &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 있지만 &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; 에 의해 리턴 된 값 &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 는 (특히 될 수있다,이 경우, 정의되지 &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; ). 그럼에도 불구하고 &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 에 대한 호출 은 분기되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4078e7979db0e46b40bfa1c03f0ed005646b8c2f" translate="yes" xml:space="preserve">
          <source>Dissolve the association between the stable pointer and the Haskell value. Afterwards, if the stable pointer is passed to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-stable#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt;, the behaviour is undefined. However, the stable pointer may still be passed to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, but the &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; value returned by &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, in this case, is undefined (in particular, it may be &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt;). Nevertheless, the call to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; is guaranteed not to diverge.</source>
          <target state="translated">안정 포인터와 Haskell 값 사이의 연관을 해석하십시오. 그 후, 안정적인 포인터가 &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;ghc-stable#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt; 로 전달 되면 동작이 정의되지 않습니다. 그러나, 안정된 포인터는 여전히 전달 될 수 &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 있지만 &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; 에 의해 리턴 된 값 &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 는 (특히 될 수있다,이 경우, 정의되지 &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; ). 그럼에도 불구하고 &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 에 대한 호출 은 분기되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f13e9a0d0cc1d2eed857d3ca8de0106c74f457a" translate="yes" xml:space="preserve">
          <source>Distinguish between equality relations when printing</source>
          <target state="translated">인쇄시 평등 관계 구분</target>
        </trans-unit>
        <trans-unit id="b64bc1a66b8a2696a92255fb001f01c7882809a4" translate="yes" xml:space="preserve">
          <source>Distributivity:</source>
          <target state="translated">Distributivity:</target>
        </trans-unit>
        <trans-unit id="8377b564d917a304f9a667fc60e3608448e58a22" translate="yes" xml:space="preserve">
          <source>Distrust all packages by default. See &lt;a href=&quot;exts/safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt;.</source>
          <target state="translated">기본적으로 모든 패키지를 신뢰하지 않습니다. &lt;a href=&quot;exts/safe_haskell#safe-haskell&quot;&gt;Safe Haskell을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27db5ed42b204a0a3e614e52e6864b8444eff91c" translate="yes" xml:space="preserve">
          <source>Distrust all packages by default. See &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt;.</source>
          <target state="translated">기본적으로 모든 패키지를 불신하십시오. &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="828ed4fb7d499eca2ce8a3461d66b961315b9609" translate="yes" xml:space="preserve">
          <source>Ditto for C-- level.</source>
          <target state="translated">C- 레벨도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="529f8d920909015b979708e636eb1b0583481347" translate="yes" xml:space="preserve">
          <source>Ditto for C-\- level.</source>
          <target state="translated">C-\-레벨에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="afe8900fa287c03fd30dbd6b3a6829235fe8571c" translate="yes" xml:space="preserve">
          <source>Ditto for STG level.</source>
          <target state="translated">STG 레벨에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="fb7c5e4b77643e7474e2d21dd2896fc952052045" translate="yes" xml:space="preserve">
          <source>Div</source>
          <target state="translated">Div</target>
        </trans-unit>
        <trans-unit id="0e0428eb4b4eab54f44920a7df647e270ec33bbb" translate="yes" xml:space="preserve">
          <source>Divide two vectors element-wise.</source>
          <target state="translated">두 벡터를 요소별로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="3e2e4874af75becbe44cb2b0a6d9f2352f708762" translate="yes" xml:space="preserve">
          <source>DivideByZero</source>
          <target state="translated">DivideByZero</target>
        </trans-unit>
        <trans-unit id="1ecabac4d0f19a622dc8aec70a1ba17d35bd21ce" translate="yes" xml:space="preserve">
          <source>Division (round down) of natural numbers. &lt;code&gt;Div x 0&lt;/code&gt; is undefined (i.e., it cannot be reduced).</source>
          <target state="translated">자연수의 나눗셈 (내림차순). &lt;code&gt;Div x 0&lt;/code&gt; 은 정의되어 있지 않습니다 (즉, 줄일 수 없습니다).</target>
        </trans-unit>
        <trans-unit id="66b0fa82a2f7aee8b06be80588b47c3331c7e6d0" translate="yes" xml:space="preserve">
          <source>Divisor must be non-zero otherwise the GHC runtime will terminate with a division-by-zero fault.</source>
          <target state="translated">제수는 0이 아니어야합니다. 그렇지 않으면 GHC 런타임이 0으로 나누기 오류로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="cf24473d5239f6c1149dcebbe7d98b5f716e68dd" translate="yes" xml:space="preserve">
          <source>Do a prefix lookup on the list of built-in commands - if a built-in command matches, but a macro is defined with the same name as the built-in defined, pick the macro.</source>
          <target state="translated">내장 명령 목록에서 접두어 조회를 수행하십시오. 내장 명령이 일치하지만 내장 정의와 동일한 이름으로 매크로가 정의 된 경우 매크로를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="037d9991f38e83b758fc25c6be1e5f31fd146548" translate="yes" xml:space="preserve">
          <source>Do a prefix lookup on the list of built-in commands.</source>
          <target state="translated">내장 명령 목록에서 접두사 조회를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="8963462aecb5ee357d5df2911ad470bfc1bb7cf5" translate="yes" xml:space="preserve">
          <source>Do a prefix lookup on the list of defined macros.</source>
          <target state="translated">정의 된 매크로 목록에서 접두사 조회를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="31d96ab2a5de1288ed2e70f884fb130e2a57d688" translate="yes" xml:space="preserve">
          <source>Do no newline translation at all.</source>
          <target state="translated">개행 번역을 전혀하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="fb0d094004e4e74866bcf3d621d782be625c225a" translate="yes" xml:space="preserve">
          <source>Do not collect entry counts</source>
          <target state="translated">참가 횟수를 수집하지 마십시오</target>
        </trans-unit>
        <trans-unit id="736a6d9ac84a5d48ffc66785f18269f75f39b751" translate="yes" xml:space="preserve">
          <source>Do not embed the manifest in the executable (Windows only)</source>
          <target state="translated">실행 파일에 매니페스트를 포함시키지 마십시오 (Windows 만 해당)</target>
        </trans-unit>
        <trans-unit id="5415eea28f1415b37d7e8be1c9b45f9616d70fd9" translate="yes" xml:space="preserve">
          <source>Do not garbage-collect CAFs (top-level expressions) at runtime</source>
          <target state="translated">런타임시 CAF (최상위 표현식)를 가비지 수집하지 마십시오</target>
        </trans-unit>
        <trans-unit id="1ccdfa79f69f2e2c9d61bbc5ecbc0e4193e9335f" translate="yes" xml:space="preserve">
          <source>Do not generate a manifest file (Windows only)</source>
          <target state="translated">매니페스트 파일을 생성하지 마십시오 (Windows 만 해당)</target>
        </trans-unit>
        <trans-unit id="4466b2081efed55135f318c50f3327de278c969c" translate="yes" xml:space="preserve">
          <source>Do not mix &lt;code&gt;&lt;a href=&quot;control-monad-catch-pure#t:CatchT&quot;&gt;CatchT&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Choose one or the other for the bottom of your transformer stack!</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-catch-pure#t:CatchT&quot;&gt;CatchT&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 와 혼합하지 마십시오 . 변압기 스택의 맨 아래에 둘 중 하나를 선택하십시오!</target>
        </trans-unit>
        <trans-unit id="fda0d71489641bdd4a31929643fa008fb56fc480" translate="yes" xml:space="preserve">
          <source>Do not mix &lt;code&gt;&lt;a href=&quot;control-monad-catch-pure#t:CatchT&quot;&gt;CatchT&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Choose one or the other for the bottom of your transformer stack!</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-catch-pure#t:CatchT&quot;&gt;CatchT&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 와 혼합하지 마십시오 . 변압기 스택의 맨 아래에 둘 중 하나를 선택하십시오!</target>
        </trans-unit>
        <trans-unit id="5392bc3c52b9fa354617880ddb7859d1b93664b7" translate="yes" xml:space="preserve">
          <source>Do not recompile modules just to match changes to HPC flags. This is especially useful for avoiding recompilation when using GHCi, and is enabled by default for GHCi.</source>
          <target state="translated">변경 사항을 HPC 플래그와 일치시키기 위해 모듈을 다시 컴파일하지 마십시오. 이는 GHCi를 사용할 때 재 컴파일을 피하는 데 특히 유용하며 GHCi에 대해 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e46e9af60a96e738bb4c88cac87acbe426215d4f" translate="yes" xml:space="preserve">
          <source>Do not recompile modules just to match changes to optimisation flags. This is especially useful for avoiding recompilation when using GHCi, and is enabled by default for GHCi.</source>
          <target state="translated">변경 사항을 최적화 플래그와 일치시키기 위해 모듈을 다시 컴파일하지 마십시오. 이는 GHCi를 사용할 때 재 컴파일을 피하는 데 특히 유용하며 GHCi에 대해 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="41f908f21de70ffede2089b76edda985f1ea753d" translate="yes" xml:space="preserve">
          <source>Do not retain CAFs. Everything reachable from foreign exports will be retained, due to the StablePtrs created by the module initialisation code. unloadObj frees these StablePtrs, which will allow the CAFs to be GC'd and the code to be removed.</source>
          <target state="translated">CAF를 유지하지 마십시오. 모듈 초기화 코드에 의해 생성 된 StablePtr로 인해 해외 수출에서 도달 할 수있는 모든 것이 유지됩니다. unloadObj는 이러한 StablePtr을 해제하여 CAF를 GC하고 코드를 제거 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="07c09dc6b41b9db1639cff240740686e8a041a1a" translate="yes" xml:space="preserve">
          <source>Do not talk about &quot;safe&quot;! You do not know what is safe!</source>
          <target state="translated">&quot;안전&quot;에 대해 이야기하지 마십시오! 당신은 안전한 것이 무엇인지 모른다!</target>
        </trans-unit>
        <trans-unit id="b85e0c586de2cc364d439565dc8cfa050ca7477e" translate="yes" xml:space="preserve">
          <source>DoAndIfThenElse</source>
          <target state="translated">DoAndIfThenElse</target>
        </trans-unit>
        <trans-unit id="740ce5dce4c207feb69807b48d6241ef4b8ca2d8" translate="yes" xml:space="preserve">
          <source>DoCostCentres</source>
          <target state="translated">DoCostCentres</target>
        </trans-unit>
        <trans-unit id="78d51926f0369308927d7a960b8aca1c05154647" translate="yes" xml:space="preserve">
          <source>DoHeapProfile</source>
          <target state="translated">DoHeapProfile</target>
        </trans-unit>
        <trans-unit id="baa45cb7e6a3cef8d1fd896f21b79dcf75dea6e3" translate="yes" xml:space="preserve">
          <source>DoTrace</source>
          <target state="translated">DoTrace</target>
        </trans-unit>
        <trans-unit id="cdba60a525e91017acace2575a32341fe23198be" translate="yes" xml:space="preserve">
          <source>Doc</source>
          <target state="translated">Doc</target>
        </trans-unit>
        <trans-unit id="1c36a0c213108bbab0ac5b5c094f39ffb5618089" translate="yes" xml:space="preserve">
          <source>Document end.</source>
          <target state="translated">문서 끝.</target>
        </trans-unit>
        <trans-unit id="4b337e3c24c7d3fec0dc81bc2bff801f3dc35c49" translate="yes" xml:space="preserve">
          <source>Does *not* include the call-site of &lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt; 의 호출 사이트를 * not * 포함하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="39606dbe4b603cccba14523562abfc58e42d8ce9" translate="yes" xml:space="preserve">
          <source>Does a path have a drive.</source>
          <target state="translated">경로에 드라이브가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1b9bc44e360eaf702a2c65231ae3f1eb8be34fa" translate="yes" xml:space="preserve">
          <source>Does automatic cleanup when the action finishes. If there is an exception in the body then it ensures that the process gets terminated and any &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s are closed. In particular this means that if the Haskell thread is killed (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt;), that the external process is also terminated.</source>
          <target state="translated">작업이 완료되면 자동 정리를 수행합니다. 본문에 예외가 있으면 프로세스가 종료되고 &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 이 닫힙니다. 특히 이것은 Haskell 스레드가 종료되면 (예 : &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; ) 외부 프로세스도 종료됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f5ff72bedcfa081bc6c44835f29f6bfea616ec97" translate="yes" xml:space="preserve">
          <source>Does automatic cleanup when the action finishes. If there is an exception in the body then it ensures that the process gets terminated and any &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s are closed. In particular this means that if the Haskell thread is killed (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt;), that the external process is also terminated.</source>
          <target state="translated">작업이 완료되면 자동 정리를 수행합니다. 본문에 예외가 있으면 프로세스가 종료되고 모든 &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 이 닫힙니다. 특히 이것은 Haskell 스레드가 종료되면 (예 : &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; ) 외부 프로세스도 종료됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6e4b22adbad6f83fc55255c2f50228c98691e109" translate="yes" xml:space="preserve">
          <source>Does automatic cleanup when the action finishes. If there is an exception in the body then it ensures that the process gets terminated and any &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s are closed. In particular this means that if the Haskell thread is killed (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt;), that the external process is also terminated.</source>
          <target state="translated">작업이 완료되면 자동 정리를 수행합니다. 본문에 예외가 있으면 프로세스가 종료되고 모든 &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 이 닫힙니다. 특히 이것은 Haskell 스레드가 종료되면 (예 : &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; ) 외부 프로세스도 종료됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4e324583d057fe2d54724a305a15cd269b994f12" translate="yes" xml:space="preserve">
          <source>Does the element occur in the structure?</source>
          <target state="translated">요소가 구조에서 발생합니까?</target>
        </trans-unit>
        <trans-unit id="7462a03355a66c6cc7733858f716523c27b76845" translate="yes" xml:space="preserve">
          <source>Does the given filename have an extension?</source>
          <target state="translated">주어진 파일 이름 확장자가 있습니까?</target>
        </trans-unit>
        <trans-unit id="cb3186d40e2f31843ee738ec131900b0395f45bc" translate="yes" xml:space="preserve">
          <source>Does the given filename have the specified extension?</source>
          <target state="translated">주어진 파일 이름에 지정된 확장자가 있습니까?</target>
        </trans-unit>
        <trans-unit id="f459d72b3027c47a3cbe09793bd8bff6a34463ad" translate="yes" xml:space="preserve">
          <source>Doing I/O with &lt;code&gt;IOUArray&lt;/code&gt;s</source>
          <target state="translated">이렇게 I / O와 &lt;code&gt;IOUArray&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="22a1c09f4dcfe0f3391657f63999bd2faa2e4b34" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t assume this program contains &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">이 프로그램이 &lt;code&gt;main&lt;/code&gt; 포함한다고 가정하지 마십시오</target>
        </trans-unit>
        <trans-unit id="7e8ddfddc306586c42eb0e231f9979a650f34685" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t automatically link in the base and rts packages.</source>
          <target state="translated">base 및 rts 패키지에서 자동으로 연결하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a28495d847c5e5628a67e1b5272bca25d90662d8" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget to use the same &lt;code&gt;-package&lt;/code&gt; options on the &lt;code&gt;ghc -M&lt;/code&gt; command line as you would when compiling; this enables the dependency generator to locate any imported modules that come from packages. The package modules won&amp;rsquo;t be included in the dependencies generated, though (but see the &lt;code&gt;-include-pkg-deps&lt;/code&gt; option below).</source>
          <target state="translated">&lt;code&gt;ghc -M&lt;/code&gt; 명령 행에서 컴파일 할 때 와 동일한 &lt;code&gt;-package&lt;/code&gt; 옵션 을 사용하는 것을 잊지 마십시오 . 이를 통해 종속성 생성기는 패키지에서 가져온 가져온 모듈을 찾을 수 있습니다. 패키지 모듈은 생성 된 종속성에 포함되지 않습니다 (하지만 아래의 &lt;code&gt;-include-pkg-deps&lt;/code&gt; 옵션 참조).</target>
        </trans-unit>
        <trans-unit id="75227b7f6fe7db5af00cd801b113e12971a2d1ab" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate an import library for a DLL (Windows only)</source>
          <target state="translated">DLL에 대한 가져 오기 라이브러리를 생성하지 마십시오 (Windows 만 해당)</target>
        </trans-unit>
        <trans-unit id="06340015fed29dc4c6ccc3f2461b687097477348" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate bindings for Typeable methods</source>
          <target state="translated">Typeable 메서드에 대한 바인딩을 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="4453c66d4a1a97f6cad0665a9418492411c64ac3" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate interface pragmas. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O0&quot;&gt;&lt;code&gt;-O0&lt;/code&gt;&lt;/a&gt; only.</source>
          <target state="translated">인터페이스 pragma를 생성하지 마십시오. &lt;a href=&quot;using-optimisation#ghc-flag--O0&quot;&gt; &lt;code&gt;-O0&lt;/code&gt; 에&lt;/a&gt; 의해서만 암시 됩니다.</target>
        </trans-unit>
        <trans-unit id="340037e0f52ee07d17ba8d256dfe80a484c293dd" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate interface pragmas. Implied by &lt;code&gt;-O0&lt;/code&gt; only.</source>
          <target state="translated">인터페이스 pragma를 생성하지 마십시오. &lt;code&gt;-O0&lt;/code&gt; 으로 만 암시 됩니다.</target>
        </trans-unit>
        <trans-unit id="1fc04e1914ca12dca0b4ce5bbe8d203561ccadc5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t guess&amp;mdash;look it up.</source>
          <target state="translated">추측하지 마십시오. 찾아보십시오.</target>
        </trans-unit>
        <trans-unit id="41f62d6c2ddb9dd50b8b7d440a270bcd71c1dd99" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t implicitly &lt;code&gt;import Prelude&lt;/code&gt;. Implied by &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt;&lt;code&gt;RebindableSyntax&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import Prelude&lt;/code&gt; 암시 적으로 가져 오지 마십시오 . &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt; &lt;code&gt;RebindableSyntax&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="f52b58362b628628dfdceaa29de5977c8b9b687c" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t implicitly &lt;code&gt;import Prelude&lt;/code&gt;. Implied by &lt;a href=&quot;rebindable_syntax#extension-RebindableSyntax&quot;&gt;&lt;code&gt;RebindableSyntax&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">암시 적으로 &lt;code&gt;import Prelude&lt;/code&gt; 오지 마십시오 . &lt;a href=&quot;rebindable_syntax#extension-RebindableSyntax&quot;&gt; &lt;code&gt;RebindableSyntax&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="c68a69dd8f2ba8c15d4bd8740bcb119252369d38" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t import &lt;code&gt;Prelude&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;Prelude&lt;/code&gt; 를 기본적으로 가져 오지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="d176a6874cc34f178506c7c284bbee21178b8c11" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t print RTS suggestions about linking with &lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt; 와의 링크에 대한 RTS 제안을 인쇄하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="5faa911d368e94e06d73bdb5789b5d465919a8ef" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read either &lt;code&gt;./.ghci&lt;/code&gt; or the other startup files when starting up.</source>
          <target state="translated">시작할 때 &lt;code&gt;./.ghci&lt;/code&gt; 또는 다른 시작 파일을 읽지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="c2598a50a4502b0a29e358b93372146110ed0dfd" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use absolute paths in &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;configure&lt;/code&gt; &amp;amp; co if there is any chance that those might be passed to GHC (or to GHC-compiled programs). Relative paths are fine because cygwin tools are happy with them and GHC accepts &lt;code&gt;/&lt;/code&gt; as path-separator. And relative paths don&amp;rsquo;t depend on where Cygwin&amp;rsquo;s root directory is located, or on which partition or network drive your source tree happens to reside, as long as you &lt;code&gt;cd&lt;/code&gt; there first.</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; , &lt;code&gt;configure&lt;/code&gt; &amp;amp; co 에서 절대 경로를 사용하지 마십시오. GHC (또는 GHC 컴파일 프로그램)에 전달 될 가능성이있는 경우. Cygwin 도구가 만족스럽고 GHC가 &lt;code&gt;/&lt;/code&gt; 를 경로 구분 기호로 허용하므로 상대 경로가 좋습니다. 그리고 상대 경로 Cygwin에서의 루트 디렉토리의 위치에 따라, 또는 어떤 파티션 또는 네트워크에서 소스 트리만큼으로, 상주에 발생하는 운전하지 않는 &lt;code&gt;cd&lt;/code&gt; 가 처음.</target>
        </trans-unit>
        <trans-unit id="8bb09fa2f1f1816bc53537ab9f5401dc72f90736" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use too much memory!</source>
          <target state="translated">너무 많은 메모리를 사용하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="e564d92c057c9704dbb560fe9722f7cb93c81e7f" translate="yes" xml:space="preserve">
          <source>Don't assume this program contains &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">이 프로그램에 &lt;code&gt;main&lt;/code&gt; 이 포함되어 있다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="33a0f3ef8b5d6e2fa9f4e0a54d3aa0d4004a9a31" translate="yes" xml:space="preserve">
          <source>Don't automatically link in the base and rts packages.</source>
          <target state="translated">기본 및 rts 패키지에서 자동으로 링크하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="2dd5162998b1834bcbae5757ca817a12eb3b53d6" translate="yes" xml:space="preserve">
          <source>Don't generate an import library for a DLL (Windows only)</source>
          <target state="translated">DLL에 대한 가져 오기 라이브러리를 생성하지 마십시오 (Windows에만 해당).</target>
        </trans-unit>
        <trans-unit id="a71a6a9b99e9afc284ef82609f391b535c1cee76" translate="yes" xml:space="preserve">
          <source>Don't generate bindings for Typeable methods</source>
          <target state="translated">Typeable 메서드에 대한 바인딩을 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c702b7196e560516aca4439c1db56db549999ae3" translate="yes" xml:space="preserve">
          <source>Don't generate interface pragmas. Implied by &lt;code&gt;-O0&lt;/code&gt; only.</source>
          <target state="translated">인터페이스 pragma를 생성하지 마십시오. &lt;code&gt;-O0&lt;/code&gt; 으로 만 암시 됩니다.</target>
        </trans-unit>
        <trans-unit id="faa62399bc1df205a2d3392983761eb1a762b020" translate="yes" xml:space="preserve">
          <source>Don't implicitly &lt;code&gt;import Prelude&lt;/code&gt;. Implied by &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt;&lt;code&gt;RebindableSyntax&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import Prelude&lt;/code&gt; 암시 적으로 가져 오지 마십시오 . &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt; &lt;code&gt;RebindableSyntax&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="4fdedfba24394026760f3a1da02e404624b18d59" translate="yes" xml:space="preserve">
          <source>Don't print RTS suggestions about linking with &lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt; 와의 연결에 대한 RTS 제안을 인쇄하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="e9b450d14bc2363d292c84f17cfad5cfbd58a458" translate="yes" xml:space="preserve">
          <source>Done</source>
          <target state="translated">Done</target>
        </trans-unit>
        <trans-unit id="213400b3ee4d6020b68a233e95fe1dd4e29e408e" translate="yes" xml:space="preserve">
          <source>DontRetainCAFs</source>
          <target state="translated">DontRetainCAFs</target>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="translated">Double</target>
        </trans-unit>
        <trans-unit id="00311dcff3e799ccf5d3c2ac4d62afe57994747c" translate="yes" xml:space="preserve">
          <source>Double each element of a list:</source>
          <target state="translated">목록의 각 요소를 두 배로 :</target>
        </trans-unit>
        <trans-unit id="3687347d7d57e49606871a3a6af4b47d9ec1a473" translate="yes" xml:space="preserve">
          <source>Double methods</source>
          <target state="translated">이중 방법</target>
        </trans-unit>
        <trans-unit id="23f1d9a09da6fc8de594c342e86e01b153cb1588" translate="yes" xml:space="preserve">
          <source>Double#</source>
          <target state="translated">Double#</target>
        </trans-unit>
        <trans-unit id="7cf21adbef6d8f21393444145f63a3ea0ccfe6a6" translate="yes" xml:space="preserve">
          <source>Double-precision floating point numbers. It is desirable that this type be at least equal in range and precision to the IEEE double-precision type.</source>
          <target state="translated">배정 밀도 부동 소수점 숫자 이 유형은 IEEE 배정 밀도 유형과 범위 및 정밀도가 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="2243a5207550c66bb35891b6dd6fb879fba1f299" translate="yes" xml:space="preserve">
          <source>Double/Int conversions, wrapped primops</source>
          <target state="translated">이중 / Int 변환, 랩핑 된 Primops</target>
        </trans-unit>
        <trans-unit id="92ea8780f2c88da169c501d9f5a6eafd910cb137" translate="yes" xml:space="preserve">
          <source>DoubleElemRep</source>
          <target state="translated">DoubleElemRep</target>
        </trans-unit>
        <trans-unit id="7217110a5c20b3a2f172c557a592ffb918982435" translate="yes" xml:space="preserve">
          <source>DoubleRep</source>
          <target state="translated">DoubleRep</target>
        </trans-unit>
        <trans-unit id="6c1febe2ce469f0565ae59196635387aa770ad72" translate="yes" xml:space="preserve">
          <source>DoubleX2#</source>
          <target state="translated">DoubleX2#</target>
        </trans-unit>
        <trans-unit id="63df93d7ebc4ec3e0887172bebf1f334a2a857c7" translate="yes" xml:space="preserve">
          <source>DoubleX4#</source>
          <target state="translated">DoubleX4#</target>
        </trans-unit>
        <trans-unit id="47b58b78faecef175261b9a5ad9e3442df9cb594" translate="yes" xml:space="preserve">
          <source>DoubleX8#</source>
          <target state="translated">DoubleX8#</target>
        </trans-unit>
        <trans-unit id="bf93e5ce8bc1228c2585b3f5a368053c9fe8346a" translate="yes" xml:space="preserve">
          <source>Down</source>
          <target state="translated">Down</target>
        </trans-unit>
        <trans-unit id="73cf3343ddf7ff2d3e85d01a3ba5669fa59ac42f" translate="yes" xml:space="preserve">
          <source>Drive functions</source>
          <target state="translated">구동 기능</target>
        </trans-unit>
        <trans-unit id="903b70fb4a770994ae91e55515970e768a05239a" translate="yes" xml:space="preserve">
          <source>DriveType</source>
          <target state="translated">DriveType</target>
        </trans-unit>
        <trans-unit id="7fd455412b98120fb90d79f2704908afa5eca57d" translate="yes" xml:space="preserve">
          <source>Drop a given number of elements in order, beginning with the smallest ones.</source>
          <target state="translated">가장 작은 요소부터 시작하여 주어진 수의 요소를 순서대로 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="2cecce9eaecfe88abb3c6fa1f98b1cd0ae12bb3d" translate="yes" xml:space="preserve">
          <source>Drop a given number of entries in key order, beginning with the smallest keys.</source>
          <target state="translated">가장 작은 키부터 시작하여 주어진 수의 항목을 키 순서대로 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="bfedb66baeb222a48529aa5534e5dbd3b7123746" translate="yes" xml:space="preserve">
          <source>Drop a previous file descriptor registration, without waking the event manager thread. The return value indicates whether the event manager ought to be woken.</source>
          <target state="translated">이벤트 관리자 스레드를 깨우지 않고 이전 파일 디스크립터 등록을 삭제하십시오. 리턴 값은 이벤트 관리자를 깨워 야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f9015dacdb506ba00308d42d97360cfcbf78516d" translate="yes" xml:space="preserve">
          <source>Drop a previous file descriptor registration.</source>
          <target state="translated">이전 파일 디스크립터 등록을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="79e60d380f1468e5869091d0043510e56426b4f2" translate="yes" xml:space="preserve">
          <source>Drop all extensions.</source>
          <target state="translated">모든 확장을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="ec241b3fdfdd648035146e2048041d6e79937705" translate="yes" xml:space="preserve">
          <source>Drop all the entries whose keys are missing from the other map.</source>
          <target state="translated">다른 맵에서 키가 누락 된 모든 항목을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="5e790e96afa648e046b5c5782cf585b2082c53cc" translate="yes" xml:space="preserve">
          <source>Drop the filename. Unlike &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt;, this function will leave a trailing path separator on the directory.</source>
          <target state="translated">파일 이름을 삭제하십시오. &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; 와 달리이 함수는 디렉토리에 후행 경로 구분 기호를 남깁니다.</target>
        </trans-unit>
        <trans-unit id="cd6eb14ec4ef74fb7103025e2ffb966000ac3cd3" translate="yes" xml:space="preserve">
          <source>Drop the filename. Unlike &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt;, this function will leave a trailing path separator on the directory.</source>
          <target state="translated">파일 이름을 삭제하십시오. &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; 와 달리이 함수는 디렉토리에 후행 경로 구분 기호를 남깁니다.</target>
        </trans-unit>
        <trans-unit id="8ef03a6b16e0c0e0e0ab7dd465278c04304793d5" translate="yes" xml:space="preserve">
          <source>Drop the given extension from a FilePath, and the &lt;code&gt;&quot;.&quot;&lt;/code&gt; preceding it. Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the FilePath does not have the given extension, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and the part before the extension if it does.</source>
          <target state="translated">FilePath 및 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 에서 지정된 확장자를 삭제하십시오 . 그 전에. FilePath에 지정된 확장자가없는 경우 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 반환 하고, 확장자가있는 경우 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; 와 확장자 앞에있는 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cd867dbc57d5f49ae22b888e7af98e917ae162b2" translate="yes" xml:space="preserve">
          <source>Drop the given extension from a FilePath, and the &lt;code&gt;&quot;.&quot;&lt;/code&gt; preceding it. Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the FilePath does not have the given extension, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and the part before the extension if it does.</source>
          <target state="translated">FilePath에서 지정된 확장자를 삭제하고 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 그 앞에. FilePath에 지정된 확장자가 없으면 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 반환 하고 확장자가있는 경우 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; 와 확장자 앞 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3c5ce6a7f03a184737e5a27047fefb72da694fb0" translate="yes" xml:space="preserve">
          <source>Drop the given extension from a FilePath, and the &lt;code&gt;&quot;.&quot;&lt;/code&gt; preceding it. Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the FilePath does not have the given extension, or &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and the part before the extension if it does.</source>
          <target state="translated">FilePath에서 지정된 확장자를 삭제하고 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 그 앞에. FilePath에 지정된 확장자가 없으면 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 을 반환 하고 확장자가있는 경우 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; 와 확장자 앞 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="89e4fa7c6e21bf128815cf184349592868a477ce" translate="yes" xml:space="preserve">
          <source>Dual</source>
          <target state="translated">Dual</target>
        </trans-unit>
        <trans-unit id="655c0d6bf7281807bd22458afa1d00662a4a5f21" translate="yes" xml:space="preserve">
          <source>Dual arrows</source>
          <target state="translated">이중 화살표</target>
        </trans-unit>
        <trans-unit id="2e543ebbb4af8cf0f7b3656d8911643d4d21f6a7" translate="yes" xml:space="preserve">
          <source>Dual function arrows.</source>
          <target state="translated">이중 기능 화살표.</target>
        </trans-unit>
        <trans-unit id="f1468c9bed9c9c70d85acbb71f95a186f63482e4" translate="yes" xml:space="preserve">
          <source>Due to platform limitations, GHC may fail to produce profiled object files on 32-bit Windows (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/15934&quot;&gt;Issue #15934&lt;/a&gt;).</source>
          <target state="translated">플랫폼 제한으로 인해 GHC는 32 비트 Windows에서 프로파일 된 오브젝트 파일을 생성하지 못할 수 있습니다 ( &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/15934&quot;&gt;문제 # 15934&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="65d8a952cd925701fd59b3b3f4efd3613d4f5471" translate="yes" xml:space="preserve">
          <source>Due to the nature of GHC&amp;rsquo;s heap and the heavy optimization that it performs, it is quite difficult to probe the values of bindings at runtime. In this way, the debugging experience of a Haskell program with DWARF support is still a bit impoverished compared to typical imperative debuggers.</source>
          <target state="translated">GHC 힙의 특성과 수행하는 강력한 최적화로 인해 런타임시 바인딩 값을 조사하기가 매우 어렵습니다. 이런 식으로 DWARF를 지원하는 Haskell 프로그램의 디버깅 경험은 여전히 ​​전형적인 명령형 디버거에 비해 약간 빈곤합니다.</target>
        </trans-unit>
        <trans-unit id="ba2139e8301d215890f5d68d2f42cdbee76e9754" translate="yes" xml:space="preserve">
          <source>Due to the semantic consistency guarantee of Safe Haskell, we must restrict the function of overlapping instances. We don&amp;rsquo;t restrict their ability to be defined, as this is a global property and not something we can determine by looking at a single module. Instead, when a module calls a function belonging to a type-class, we check that the instance resolution done is considered &amp;lsquo;safe&amp;rsquo;. This check is enforced for modules compiled with both &lt;code&gt;-XSafe&lt;/code&gt; and &lt;code&gt;-XTrustworthy&lt;/code&gt;.</source>
          <target state="translated">Safe Haskell의 의미 일관성 보장으로 인해 중복 인스턴스의 기능을 제한해야합니다. 우리는 정의 할 수있는 능력을 제한하지 않습니다. 이것은 전역 속성이며 단일 모듈을보고 결정할 수있는 것이 아닙니다. 대신, 모듈이 유형 클래스에 속하는 함수를 호출 할 때 수행 된 인스턴스 확인이 '안전한'것으로 간주되는지 확인합니다. 이 검사는 &lt;code&gt;-XSafe&lt;/code&gt; 및 &lt;code&gt;-XTrustworthy&lt;/code&gt; 로 컴파일 된 모듈에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d0a40e820d02f2af4f8fa686fd0cc49b8c113f1" translate="yes" xml:space="preserve">
          <source>Due to this, it is suggested that when compiling untrusted source code that has had no manual inspection done, the following precautions be taken:</source>
          <target state="translated">이로 인해 수동 검사를 수행하지 않은 신뢰할 수없는 소스 코드를 컴파일 할 때는 다음과 같은 예방 조치를 취하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0813c26645464878824800d05116758b8072b060" translate="yes" xml:space="preserve">
          <source>Dump &amp;ldquo;occurrence analysis&amp;rdquo; output</source>
          <target state="translated">&quot;발생 분석&quot;출력 덤프</target>
        </trans-unit>
        <trans-unit id="3c7b8e8db706a258b893fcfacdb2550d3aac68d0" translate="yes" xml:space="preserve">
          <source>Dump &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) to &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; in base-256 representation.</source>
          <target state="translated">base-256 표현의 &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; 에 부호없이 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 덤프 하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e12efa200228ae8d5981ea2dc31d9b9fa120798b" translate="yes" xml:space="preserve">
          <source>Dump &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) to mutable byte-array in base-256 representation.</source>
          <target state="translated">기수 256 표현의 가변 바이트 배열에 부호없이 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 덤프 하십시오.</target>
        </trans-unit>
        <trans-unit id="9fb9e2ad65c9852b2a45c4d7c448785358eeee6f" translate="yes" xml:space="preserve">
          <source>Dump &lt;code&gt;foreign export&lt;/code&gt; stubs</source>
          <target state="translated">&lt;code&gt;foreign export&lt;/code&gt; 스텁 덤프</target>
        </trans-unit>
        <trans-unit id="2200074d36b15a0618d530a80978d37ca45554a8" translate="yes" xml:space="preserve">
          <source>Dump CPR analysis output</source>
          <target state="translated">CPR 분석 출력 덤프</target>
        </trans-unit>
        <trans-unit id="99490dc74db343e9d7239abcdd07b612f6950251" translate="yes" xml:space="preserve">
          <source>Dump CPR signatures</source>
          <target state="translated">CPR 서명 덤프</target>
        </trans-unit>
        <trans-unit id="c8afeb9e1140b7d0ae16be767a5b0a2c265f9e2e" translate="yes" xml:space="preserve">
          <source>Dump CSE output</source>
          <target state="translated">CSE 출력 덤프</target>
        </trans-unit>
        <trans-unit id="d5c576cbe483d0abbcceba42533580cec2f96456" translate="yes" xml:space="preserve">
          <source>Dump Constructed Product Result analysis output</source>
          <target state="translated">구축 된 제품 결과 분석 출력 덤프</target>
        </trans-unit>
        <trans-unit id="337294c14dc89bc6509ddc94c979b26bce651a1e" translate="yes" xml:space="preserve">
          <source>Dump Constructed Product Result signatures</source>
          <target state="translated">생성 된 제품 결과 서명 덤프</target>
        </trans-unit>
        <trans-unit id="fb49d295916e05bed64252b939c8d43ae827d011" translate="yes" xml:space="preserve">
          <source>Dump LLVM intermediate code.</source>
          <target state="translated">LLVM 중간 코드를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="b6f787bc067d4542fcee491891c915b097d447db" translate="yes" xml:space="preserve">
          <source>Dump STG-to-C-\- output</source>
          <target state="translated">STG-to-C-\-출력 덤프</target>
        </trans-unit>
        <trans-unit id="10f4f2b7f4fad48e04dfdc3deced740448e5d2f8" translate="yes" xml:space="preserve">
          <source>Dump TH spliced expressions, and what they evaluate to</source>
          <target state="translated">TH 스플 라이스 표현식 덤프 및 평가 대상</target>
        </trans-unit>
        <trans-unit id="e48a78682f63662da2108e21bc01e6c0bcc49b0a" translate="yes" xml:space="preserve">
          <source>Dump Template Haskell expressions that we splice in, and what Haskell code the expression evaluates to.</source>
          <target state="translated">우리가 결합한 Haskell 표현식 템플릿과 그 표현식이 평가하는 Haskell 코드를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="bba50fee96a6704c36476f0ad263c881d07fb4af" translate="yes" xml:space="preserve">
          <source>Dump a mapping of modules to where they come from, and how:</source>
          <target state="translated">모듈의 위치와 방법에 대한 모듈 맵핑을 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="11e57091ff18e5b2ebfb8dab55c0d2b6b2fa66d9" translate="yes" xml:space="preserve">
          <source>Dump a minimal set of imports</source>
          <target state="translated">최소 수입 세트 덤프</target>
        </trans-unit>
        <trans-unit id="37711c76dcf1b697cab593998275b607cfd202b0" translate="yes" xml:space="preserve">
          <source>Dump a type signature for each value defined at the top level of the module. The list is sorted alphabetically. Using &lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt;&lt;code&gt;-dppr-debug&lt;/code&gt;&lt;/a&gt; dumps a type signature for all the imported and system-defined things as well; useful for debugging the compiler.</source>
          <target state="translated">모듈의 최상위 레벨에 정의 된 각 값에 대한 유형 서명을 덤프하십시오. 목록은 알파벳순으로 정렬됩니다. &lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt; &lt;code&gt;-dppr-debug&lt;/code&gt; 를&lt;/a&gt; 사용 하면 가져온 모든 시스템 정의 항목에 대한 유형 서명이 덤프됩니다. 컴파일러 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="28c7cf2e47d59329fa85255bf0488930a43e3d06" translate="yes" xml:space="preserve">
          <source>Dump assembly augmented with register liveness</source>
          <target state="translated">레지스터 활성으로 보강 된 덤프 어셈블리</target>
        </trans-unit>
        <trans-unit id="02188d511d5c3b4fbca6682ec2d233274f7ae9ef" translate="yes" xml:space="preserve">
          <source>Dump byte-code objects (BCOs) produced for the GHC&amp;rsquo;s byte-code interpreter.</source>
          <target state="translated">GHC의 바이트 코드 인터프리터를 위해 생성 된 바이트 코드 객체 (BCO)를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="9b231f4c39ae6cc08daaa6815ab557a44252f01d" translate="yes" xml:space="preserve">
          <source>Dump common subexpression elimination (CSE) pass output</source>
          <target state="translated">CSE (Common Subexpression Elimination) 패스 출력 덤프</target>
        </trans-unit>
        <trans-unit id="6868986664ce80714b911305183ec7357c71bdad" translate="yes" xml:space="preserve">
          <source>Dump derived instances</source>
          <target state="translated">파생 인스턴스 덤프</target>
        </trans-unit>
        <trans-unit id="24dc256cae601af2b000ee6d22955356a9285111" translate="yes" xml:space="preserve">
          <source>Dump deriving output</source>
          <target state="translated">덤프 도출 출력</target>
        </trans-unit>
        <trans-unit id="527e0a55856d6ed53d7367b6cefa5659f9ba0051" translate="yes" xml:space="preserve">
          <source>Dump desugarer output.</source>
          <target state="translated">설탕 제거기 출력을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="c73448d87710f2966f233c39809e209e02e0da2b" translate="yes" xml:space="preserve">
          <source>Dump desugarer output. &lt;a href=&quot;#ghc-flag--ddump-ds&quot;&gt;&lt;code&gt;-ddump-ds&lt;/code&gt;&lt;/a&gt; dumps the output after the very simple optimiser has run (which discards a lot of clutter and hence is a sensible default. &lt;a href=&quot;#ghc-flag--ddump-ds-preopt&quot;&gt;&lt;code&gt;-ddump-ds-preopt&lt;/code&gt;&lt;/a&gt; shows the output after desugaring but before the very simple optimiser.</source>
          <target state="translated">설탕 제거기 출력을 덤프합니다. &lt;a href=&quot;#ghc-flag--ddump-ds&quot;&gt; &lt;code&gt;-ddump-ds&lt;/code&gt; &lt;/a&gt; 는 매우 간단한 옵티마이 저가 실행 된 후 출력을 덤프합니다 (많은 혼란을 버리고 따라서 합리적인 기본값입니다. &lt;a href=&quot;#ghc-flag--ddump-ds-preopt&quot;&gt; &lt;code&gt;-ddump-ds-preopt&lt;/code&gt; &lt;/a&gt; 는 디설 거링 후이지만 매우 간단한 옵티 마이저 전에 출력을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="fccfe136ecfc96df4c44ed654e4f374fc75eefeb" translate="yes" xml:space="preserve">
          <source>Dump detailed rule firing info</source>
          <target state="translated">자세한 규칙 발사 정보 덤프</target>
        </trans-unit>
        <trans-unit id="ee562cb3b3b57360106f67130ddf642e7dd69749" translate="yes" xml:space="preserve">
          <source>Dump error messages as JSON documents</source>
          <target state="translated">오류 메시지를 JSON 문서로 덤프</target>
        </trans-unit>
        <trans-unit id="d283c606b0ed78618185162090d235c3b8ced04b" translate="yes" xml:space="preserve">
          <source>Dump error messages as JSON documents. This is intended to be consumed by external tooling. A good way to use it is in conjunction with &lt;a href=&quot;#ghc-flag--ddump-to-file&quot;&gt;&lt;code&gt;-ddump-to-file&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오류 메시지를 JSON 문서로 덤프하십시오. 이는 외부 툴링에서 사용하기위한 것입니다. 이를 사용하는 좋은 방법은 &lt;a href=&quot;#ghc-flag--ddump-to-file&quot;&gt; &lt;code&gt;-ddump-to-file&lt;/code&gt; &lt;/a&gt; 과 함께 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="0050e0d60f3f1b7388eabf9c78cba92a236af143" translate="yes" xml:space="preserve">
          <source>Dump evaluated TH declarations into &lt;code&gt;*.th.hs&lt;/code&gt; files</source>
          <target state="translated">평가 된 TH 선언을 &lt;code&gt;*.th.hs&lt;/code&gt; 파일 로 덤프</target>
        </trans-unit>
        <trans-unit id="4ff607170d2b94843fed54c30cfe1789f84f3e44" translate="yes" xml:space="preserve">
          <source>Dump expansions of all top-level Template Haskell splices into &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.th.hs&lt;/code&gt; for each file &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.hs&lt;/code&gt;.</source>
          <target state="translated">모든 최상위 템플릿 Haskell 스플 라이스의 확장 파일을 각 파일 &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.hs&lt;/code&gt; .hs 에 대해 &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.th.hs&lt;/code&gt; 로 덤프 하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e829bb3f18b4b7ef7423614b071264be59184aa2" translate="yes" xml:space="preserve">
          <source>Dump final STG</source>
          <target state="translated">최종 STG 덤프</target>
        </trans-unit>
        <trans-unit id="bf538e6fa8362c058449d980970d4120ef551407" translate="yes" xml:space="preserve">
          <source>Dump final assembly</source>
          <target state="translated">최종 어셈블리 덤프</target>
        </trans-unit>
        <trans-unit id="b552a6d93b544d292febc1fb7b62ee990baf743a" translate="yes" xml:space="preserve">
          <source>Dump final simplifier output</source>
          <target state="translated">최종 단순화 기 출력 덤프</target>
        </trans-unit>
        <trans-unit id="108559f7b61b62f2ad06e278fb303816ab78b2dc" translate="yes" xml:space="preserve">
          <source>Dump flags</source>
          <target state="translated">덤프 플래그</target>
        </trans-unit>
        <trans-unit id="4db4a7ef3d79a2ae9f904af2f6ab167689ce9ed8" translate="yes" xml:space="preserve">
          <source>Dump foreign export stubs.</source>
          <target state="translated">외국 수출 스텁을 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="88bbfbce8dfd5f0f1ca845ff72cbe64d38fb53da" translate="yes" xml:space="preserve">
          <source>Dump information about inlining decisions</source>
          <target state="translated">인라인 의사 결정에 대한 정보 덤프</target>
        </trans-unit>
        <trans-unit id="5f26f688516caea9d2e60902da05a55c993455af" translate="yes" xml:space="preserve">
          <source>Dump information about potential rule application</source>
          <target state="translated">잠재적 규칙 적용에 대한 정보 덤프</target>
        </trans-unit>
        <trans-unit id="546d3dff3f41adc73d9301832312f9c2a91ac047" translate="yes" xml:space="preserve">
          <source>Dump initial assembly</source>
          <target state="translated">초기 어셈블리 덤프</target>
        </trans-unit>
        <trans-unit id="59359efca9bf7ef3714b4dd5f0776dc9ef36494a" translate="yes" xml:space="preserve">
          <source>Dump inlining info</source>
          <target state="translated">인라인 정보 덤프</target>
        </trans-unit>
        <trans-unit id="4fa0c9dc2733aa7a8af8adbf12df037001abeae9" translate="yes" xml:space="preserve">
          <source>Dump interpreter byte code</source>
          <target state="translated">인터프리터 바이트 코드 덤프</target>
        </trans-unit>
        <trans-unit id="d52abc7a027a69db0ee1117813843ae5c1fa6158" translate="yes" xml:space="preserve">
          <source>Dump module cycles</source>
          <target state="translated">덤프 모듈 사이클</target>
        </trans-unit>
        <trans-unit id="9770ea68ad1c287ebadf8bee22203cf4e887a3e6" translate="yes" xml:space="preserve">
          <source>Dump occurrence analysis output</source>
          <target state="translated">덤프 발생 분석 출력</target>
        </trans-unit>
        <trans-unit id="0407ce5aa4d2aad65ba8327aa3d9c89e19c0c90d" translate="yes" xml:space="preserve">
          <source>Dump output from each simplifier iteration</source>
          <target state="translated">각 단순화 기 반복에서 덤프 출력</target>
        </trans-unit>
        <trans-unit id="9053208dacd524bac619745451a2b0135c51a259" translate="yes" xml:space="preserve">
          <source>Dump output from main C-- pipeline stages. In case of &lt;code&gt;.cmm&lt;/code&gt; compilation this also dumps the result of file parsing. Not included are passes run by the chosen backend. Currently only the NCG backends runs additional passes ( &lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt;&lt;code&gt;-ddump-opt-cmm&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">메인 C-파이프 라인 단계에서 출력을 덤프합니다. &lt;code&gt;.cmm&lt;/code&gt; 컴파일의 경우 파일 구문 분석 결과도 덤프됩니다. 선택한 백엔드에서 실행되는 패스는 포함되지 않습니다. 현재 NCG 백엔드 만 추가 패스 ( &lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt; &lt;code&gt;-ddump-opt-cmm&lt;/code&gt; &lt;/a&gt; )를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="100187303aacd37a6052d46415cf92d84ce9daa8" translate="yes" xml:space="preserve">
          <source>Dump output from main C-\- pipeline stages. In case of &lt;code&gt;.cmm&lt;/code&gt; compilation this also dumps the result of file parsing. Not included are passes run by the chosen backend. Currently only the NCG backends runs additional passes ( &lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt;&lt;code&gt;-ddump-opt-cmm&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">주요 C-\-파이프 라인 단계에서 출력을 덤프합니다. &lt;code&gt;.cmm&lt;/code&gt; 컴파일의 경우 파일 구문 분석 결과도 덤프됩니다. 선택한 백엔드에 의해 실행되는 패스는 포함되지 않습니다. 현재 NCG 백엔드 만 추가 패스 ( &lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt; &lt;code&gt;-ddump-opt-cmm&lt;/code&gt; &lt;/a&gt; )를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7debd784d3811d64f4787526bed485db7f829794" translate="yes" xml:space="preserve">
          <source>Dump output of Core preparation pass</source>
          <target state="translated">코어 준비 패스의 덤프 출력</target>
        </trans-unit>
        <trans-unit id="0d591cc247d9b2299456acdb197fbdb5996c8d1a" translate="yes" xml:space="preserve">
          <source>Dump output of STG-to-STG passes</source>
          <target state="translated">STG-to-STG 패스의 덤프 출력</target>
        </trans-unit>
        <trans-unit id="a20db43cde7efdd9c836885644e37efb3de580fa" translate="yes" xml:space="preserve">
          <source>Dump output of specialisation pass</source>
          <target state="translated">전문화 패스의 덤프 출력</target>
        </trans-unit>
        <trans-unit id="35403a77603331b84c3309f5f71430c1313c7e0b" translate="yes" xml:space="preserve">
          <source>Dump parse tree</source>
          <target state="translated">덤프 구문 분석 트리</target>
        </trans-unit>
        <trans-unit id="2c5edc4f898e525772affb884da0812b91579f35" translate="yes" xml:space="preserve">
          <source>Dump parser output</source>
          <target state="translated">덤프 파서 출력</target>
        </trans-unit>
        <trans-unit id="a5eda7dfeb3755117a1f344805c6d4476d07135c" translate="yes" xml:space="preserve">
          <source>Dump parser output as a syntax tree</source>
          <target state="translated">구문 분석기 출력을 구문 트리로 덤프</target>
        </trans-unit>
        <trans-unit id="35fa3c0e461755b2a0d0a191aad69300b0c15669" translate="yes" xml:space="preserve">
          <source>Dump per-pass timing and allocation statistics</source>
          <target state="translated">통과 당 타이밍 및 할당 통계 덤프</target>
        </trans-unit>
        <trans-unit id="03fb42a7d1bea17007bc0ad2947b4a4e12e79b12" translate="yes" xml:space="preserve">
          <source>Dump prepared core</source>
          <target state="translated">준비된 코어 덤프</target>
        </trans-unit>
        <trans-unit id="2d2836bf3489c0017fa48acabda4fe7b0df5e506" translate="yes" xml:space="preserve">
          <source>Dump raw C-\-</source>
          <target state="translated">원시 C-\-덤프</target>
        </trans-unit>
        <trans-unit id="be02bd4aac8ff2ab8319bf407b32e1b5625971cd" translate="yes" xml:space="preserve">
          <source>Dump renamer output</source>
          <target state="translated">덤프 이름 바꾸기 출력</target>
        </trans-unit>
        <trans-unit id="4b4d9007442a6c2a7a100dc61dab9b5feb262db1" translate="yes" xml:space="preserve">
          <source>Dump renamer output as a syntax tree</source>
          <target state="translated">구문 트리로 덤프 이름 바꾸기 출력</target>
        </trans-unit>
        <trans-unit id="2b3ce293442e38047f9b268435b905fc7a5e5be8" translate="yes" xml:space="preserve">
          <source>Dump rewrite rules</source>
          <target state="translated">재 작성 규칙 덤프</target>
        </trans-unit>
        <trans-unit id="74c7d00a52516c084382f57d7dc19614b8bacf91" translate="yes" xml:space="preserve">
          <source>Dump rule firing info</source>
          <target state="translated">룰 발생 정보 덤프</target>
        </trans-unit>
        <trans-unit id="ce4a884762251353a363d7b56b87ded7bf25330f" translate="yes" xml:space="preserve">
          <source>Dump simplifier output (Core-to-Core passes)</source>
          <target state="translated">덤프 단순화 기 출력 (코어-코어 패스)</target>
        </trans-unit>
        <trans-unit id="b849659e6d93dee6e7e7a225ba7e42dccaf833ef" translate="yes" xml:space="preserve">
          <source>Dump simplifier stats</source>
          <target state="translated">덤프 단순화 통계</target>
        </trans-unit>
        <trans-unit id="f60baa3d517607a881beb83f9211ec93c3595da6" translate="yes" xml:space="preserve">
          <source>Dump specialiser output</source>
          <target state="translated">덤프 전문가 출력</target>
        </trans-unit>
        <trans-unit id="5422c0dac9a7709e75f5ce194b43c3cde0b8c7e5" translate="yes" xml:space="preserve">
          <source>Dump statistics about how many of each kind of transformation took place. If you add &lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt;&lt;code&gt;-dppr-debug&lt;/code&gt;&lt;/a&gt; you get more detailed information.</source>
          <target state="translated">각 종류의 변환이 발생한 횟수에 대한 통계를 덤프하십시오. &lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt; &lt;code&gt;-dppr-debug&lt;/code&gt; &lt;/a&gt; 를 추가 하면 더 자세한 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c89a39caac4abaa3527f07c29e08b722e5a625f" translate="yes" xml:space="preserve">
          <source>Dump statistics from the register allocator.</source>
          <target state="translated">레지스터 할당 자에서 통계를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="809e488abbdae36b02a8470bf29a560648b54387" translate="yes" xml:space="preserve">
          <source>Dump strictness analyser output</source>
          <target state="translated">덤프 엄격 분석기 출력</target>
        </trans-unit>
        <trans-unit id="46b875c223c6c0a291dd58758551fb6b8f7b078f" translate="yes" xml:space="preserve">
          <source>Dump strictness signatures</source>
          <target state="translated">엄격 서명 덤프</target>
        </trans-unit>
        <trans-unit id="e69e6e62000494f9e7cd883b10f96d4194c00e6d" translate="yes" xml:space="preserve">
          <source>Dump the &amp;ldquo;raw&amp;rdquo; C--.</source>
          <target state="translated">&quot;원시&quot;C--를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="cf5c5d67a13de615b1b53e9bdedb0bd0c6cf664a" translate="yes" xml:space="preserve">
          <source>Dump the &amp;ldquo;raw&amp;rdquo; C-\-.</source>
          <target state="translated">&quot;원시&quot;C-\-를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="bc7068e51f6dc64f22f2ab7797a295b2e53c36ea" translate="yes" xml:space="preserve">
          <source>Dump the assumed weights of the CFG.</source>
          <target state="translated">CFG의 추정 중량을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="5981b57fcba527ebdccbbf5c1b24f51dbc579264" translate="yes" xml:space="preserve">
          <source>Dump the build/spill stages of the &lt;a href=&quot;using-optimisation#ghc-flag--fregs-graph&quot;&gt;&lt;code&gt;-fregs-graph&lt;/code&gt;&lt;/a&gt; register allocator.</source>
          <target state="translated">&lt;a href=&quot;using-optimisation#ghc-flag--fregs-graph&quot;&gt; &lt;code&gt;-fregs-graph&lt;/code&gt; &lt;/a&gt; 레지스터 할당 자의 빌드 / 스필 단계를 덤프하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2d33781661e3972ef831bcda5018dd028dfa035" translate="yes" xml:space="preserve">
          <source>Dump the code instrumented by HPC (&lt;a href=&quot;profiling#hpc&quot;&gt;Observing Code Coverage&lt;/a&gt;).</source>
          <target state="translated">HPC ( &lt;a href=&quot;profiling#hpc&quot;&gt;Observing Code Coverage&lt;/a&gt; )에서 계측 한 코드를 덤프하십시오 .</target>
        </trans-unit>
        <trans-unit id="51d14e506ec9927066781b1d98b33f145735cceb" translate="yes" xml:space="preserve">
          <source>Dump the final C-\- output</source>
          <target state="translated">최종 C-\-출력 덤프</target>
        </trans-unit>
        <trans-unit id="66d05181645e20167228dd9111eeebf923c7d626" translate="yes" xml:space="preserve">
          <source>Dump the final assembly produced by the native code generator.</source>
          <target state="translated">기본 코드 생성기가 생성 한 최종 어셈블리를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="63fc3ba953e810a9218d54451ce86bc57ab9555c" translate="yes" xml:space="preserve">
          <source>Dump the hie file syntax tree</source>
          <target state="translated">hie 파일 구문 트리 덤프</target>
        </trans-unit>
        <trans-unit id="8f7dea79ed4248c38c33bae275890c3a552c4c6d" translate="yes" xml:space="preserve">
          <source>Dump the hie file syntax tree if we are generating extended interface files</source>
          <target state="translated">확장 인터페이스 파일을 생성하는 경우 hie 파일 구문 트리를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="1a2e30954ac8cbf1a9fc16d8df7cabb3a2f66baf" translate="yes" xml:space="preserve">
          <source>Dump the initial assembler output produced from C--.</source>
          <target state="translated">C--에서 생성 된 초기 어셈블러 출력을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="243303fe5999e1c4d1a52dd11619877c28d15c19" translate="yes" xml:space="preserve">
          <source>Dump the initial assembler output produced from C-\-.</source>
          <target state="translated">C-\-에서 생성 된 초기 어셈블러 출력을 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="c128a39811af4e5abe74d87e7f534aa66d0b760e" translate="yes" xml:space="preserve">
          <source>Dump the new interface to stdout</source>
          <target state="translated">새 인터페이스를 stdout에 덤프</target>
        </trans-unit>
        <trans-unit id="5a09ccb21e02baf9fe334e37504f06acafcbf2c0" translate="yes" xml:space="preserve">
          <source>Dump the result of STG-to-C-- conversion</source>
          <target state="translated">STG에서 C로 변환 결과 덤프</target>
        </trans-unit>
        <trans-unit id="794c5493558c47b611a8466223be159dde0292b0" translate="yes" xml:space="preserve">
          <source>Dump the result of STG-to-C-\- conversion</source>
          <target state="translated">STG에서 C로 변환 한 결과를 덤프</target>
        </trans-unit>
        <trans-unit id="dbc8d8f66e05784518b254d4e5474ec211e366e9" translate="yes" xml:space="preserve">
          <source>Dump the result of register allocation</source>
          <target state="translated">레지스터 할당 결과 덤프</target>
        </trans-unit>
        <trans-unit id="434af440925b479c6546edd068e96cbf2ff5d924" translate="yes" xml:space="preserve">
          <source>Dump the result of the C-- pipeline processing</source>
          <target state="translated">C-- 파이프 라인 처리 결과 덤프</target>
        </trans-unit>
        <trans-unit id="d85ab0c6627d51ea957889ce3b7d612b626f7263" translate="yes" xml:space="preserve">
          <source>Dump the result of the C-\- pipeline processing</source>
          <target state="translated">C-\-파이프 라인 처리 결과 덤프</target>
        </trans-unit>
        <trans-unit id="8748d5ba6162ba24134740abfbbc90d9f3737d62" translate="yes" xml:space="preserve">
          <source>Dump the result of the register allocation pass.</source>
          <target state="translated">레지스터 할당 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="4855ab0ef074dab6d138ebeaab56e4f4755a27fd" translate="yes" xml:space="preserve">
          <source>Dump the result of the register liveness pass.</source>
          <target state="translated">레지스터 라이브 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="bef11d513ae4c614691ca62a3829348766209052" translate="yes" xml:space="preserve">
          <source>Dump the result of the synthetic instruction expansion pass.</source>
          <target state="translated">합성 명령어 확장 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="9151d7b10653889ad8f3d875e1225a7ec3b7ca18" translate="yes" xml:space="preserve">
          <source>Dump the results of C-- to C-- optimising passes performed by the NCG.</source>
          <target state="translated">NCG에서 수행 한 C--에서 C-- 최적화 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="109c64c1f32b475b99a8917baba10cff166e6db3" translate="yes" xml:space="preserve">
          <source>Dump the results of C-\- to C-\- optimising passes</source>
          <target state="translated">C-\-에서 C-\-최적화 패스의 결과 덤프</target>
        </trans-unit>
        <trans-unit id="f41d481f2d49d2d74de572c00b7ce4747ad01cf3" translate="yes" xml:space="preserve">
          <source>Dump the results of C-\- to C-\- optimising passes performed by the NCG.</source>
          <target state="translated">NCG가 수행 한 C-\-에서 C-\-최적화 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="9702696af697d87684b9cf2929356b92e16b137c" translate="yes" xml:space="preserve">
          <source>Dump the results of common block elimination</source>
          <target state="translated">공통 블록 제거 결과 덤프</target>
        </trans-unit>
        <trans-unit id="1ce37265406b886f2cf61a54d0cd477f74bdced3" translate="yes" xml:space="preserve">
          <source>Dump the results of proc-point analysis</source>
          <target state="translated">프로세스 포인트 분석 결과 덤프</target>
        </trans-unit>
        <trans-unit id="7e624dbbb2faf7696d629efaa05ffc2846f517fd" translate="yes" xml:space="preserve">
          <source>Dump the results of switch lowering passes</source>
          <target state="translated">스위치 하강 패스 결과 덤프</target>
        </trans-unit>
        <trans-unit id="c935ba943dd727826b180315560c0396d347ea8b" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- CAF analysis pass.</source>
          <target state="translated">C-- CAF 분석 통과의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="62e3f97a9c2dc548e69776f06d988ce75c214241" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- Common Block Elimination (CBE) pass.</source>
          <target state="translated">C-- Common Block Elimination (CBE) 통과의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="f034683077efee8edc7df23ce5d14f186c176789" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- control flow optimisation pass.</source>
          <target state="translated">C-- 제어 흐름 최적화 통과의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="b4f3e766ca01c28a41520486336cc59bd810e3b9" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- info table augmentation pass.</source>
          <target state="translated">C-- info 테이블 확장 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="be8adabb8bfb0505c4506cf8ea098b6106abcbaa" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- proc-point analysis pass.</source>
          <target state="translated">C-- proc-point 분석 통과의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="84011326d0f6be4b599112dc1a9f983e2ad6df67" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- proc-point map pass.</source>
          <target state="translated">C-- proc-point 맵 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="1c12152f187dce2e2794948b8ef9803b1f5e86fc" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- proc-point splitting pass.</source>
          <target state="translated">C-- proc-point 분할 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="6609d623524961b60582fc46a73616eec7bee483" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- sinking pass.</source>
          <target state="translated">C-- 싱킹 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="977366cd86ca5f6f8813e37504f5b577ea55b54b" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- stack layout pass.</source>
          <target state="translated">C-- 스택 레이아웃 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="bc3fef2cfdfa69747361b357a9e91f1538aeec97" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- switch lowering pass.</source>
          <target state="translated">C- 스위치 하강 패스의 결과를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="31114fa4eca8f37a749752ea735e83cd26ff5476" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- CAF analysis pass.</source>
          <target state="translated">C-\-CAF 분석 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="9f0270e0f39faab667801f8b91e06aab79d85929" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- Common Block Elimination (CBE) pass.</source>
          <target state="translated">C-\-CBE (Common Block Elimination) 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="3edb6ec5581edc56df009c90eb8994d10b48a3a1" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- control flow optimisation pass.</source>
          <target state="translated">C-\-제어 흐름 최적화 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="2298ea815f68063944468111dfb9e9b06c506a87" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- info table augmentation pass.</source>
          <target state="translated">C-\-info 테이블 기능 보강 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="f4a61cc819f719687fe0d324bf86aa11b0c5a0e7" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- proc-point analysis pass.</source>
          <target state="translated">C-\-proc-point 분석 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="a683680869bbe5e1a58f09e64af36f1ee17f624d" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- proc-point map pass.</source>
          <target state="translated">C-\-proc-point 맵 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="bb26c0e187162e90ebb5faa57ecee094d35efe7f" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- proc-point splitting pass.</source>
          <target state="translated">C-\-proc-point splitting pass의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="50a38d2827e2f6b8c9625f3686a3f60d389fc02c" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- sinking pass.</source>
          <target state="translated">C-\-싱킹 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="3ef2327f6f204e47a5bc0d1aef5b87baa9f07467" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- stack layout pass.</source>
          <target state="translated">C-\-stack 레이아웃 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="2fc80a5a82cef2ba0cdd824d4125007d8feebb1e" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- switch lowering pass.</source>
          <target state="translated">C-\-스위치 하강 패스의 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="edd3932935d93a1f0239c9baa7280de34918d385" translate="yes" xml:space="preserve">
          <source>Dump the results of the CPS pass</source>
          <target state="translated">CPS 패스 결과를 덤프</target>
        </trans-unit>
        <trans-unit id="0fec6030b4a3f00cafb0b5d693a31af52511269f" translate="yes" xml:space="preserve">
          <source>Dump the results of the CPS pass.</source>
          <target state="translated">CPS 패스 결과를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="ebae1608b050aa340450d48e8dda70429ce6b29d" translate="yes" xml:space="preserve">
          <source>Dump the state of the module mapping database.</source>
          <target state="translated">모듈 맵핑 데이터베이스의 상태를 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="400aaf16f0eede4d584bcc7742e9f30d1098088e" translate="yes" xml:space="preserve">
          <source>Dump to files instead of stdout</source>
          <target state="translated">표준 출력 대신 파일로 덤프</target>
        </trans-unit>
        <trans-unit id="58fb855feb0066ee1b181ffc0577bdb091ae4c1b" translate="yes" xml:space="preserve">
          <source>Dump to the file &lt;code&gt;&lt;em&gt;M&lt;/em&gt;.imports&lt;/code&gt; (where ⟨M⟩ is the name of the module being compiled) a &amp;ldquo;minimal&amp;rdquo; set of import declarations. The directory where the &lt;code&gt;.imports&lt;/code&gt; files are created can be controlled via the &lt;a href=&quot;#ghc-flag--dumpdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt;&lt;code&gt;-dumpdir ⟨dir⟩&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;M&lt;/em&gt;.imports&lt;/code&gt; 파일로 덤프하십시오 (여기서 ⟨M⟩은 컴파일되는 모듈의 이름). &quot;최소&quot;의 가져 오기 선언 세트. &lt;code&gt;.imports&lt;/code&gt; 파일이 작성 되는 디렉토리 는 &lt;a href=&quot;#ghc-flag--dumpdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt; &lt;code&gt;-dumpdir ⟨dir⟩&lt;/code&gt; &lt;/a&gt; 옵션을 통해 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51d1b39768fb34b1975cfde813f64a5150dbdd8e" translate="yes" xml:space="preserve">
          <source>Dump type signatures</source>
          <target state="translated">덤프 유형 서명</target>
        </trans-unit>
        <trans-unit id="3541c46d06060a469d5a67933901822d22730fa0" translate="yes" xml:space="preserve">
          <source>Dump typechecker output</source>
          <target state="translated">덤프 유형 검사기 출력</target>
        </trans-unit>
        <trans-unit id="4cdd29a1f3c16f63f5d377910bfaf20f37fe06e8" translate="yes" xml:space="preserve">
          <source>Dump typechecker output as a syntax tree</source>
          <target state="translated">구문 트리로 덤프 유형 검사기 출력</target>
        </trans-unit>
        <trans-unit id="23a07f98934136c2b5ab814007d007d3992ec543" translate="yes" xml:space="preserve">
          <source>Dump typechecker output. Note that this hides a great deal of detail by default; you might consider using this with &lt;a href=&quot;using#ghc-flag--fprint-typechecker-elaboration&quot;&gt;&lt;code&gt;-fprint-typechecker-elaboration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">덤프 유형 검사기 출력. 이것은 기본적으로 많은 세부 사항을 숨 깁니다. 이것을 &lt;a href=&quot;using#ghc-flag--fprint-typechecker-elaboration&quot;&gt; &lt;code&gt;-fprint-typechecker-elaboration&lt;/code&gt; &lt;/a&gt; 과 함께 사용하는 것을 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5c0ba3f2143944d55990ba68e18ef5e3e91aaa6" translate="yes" xml:space="preserve">
          <source>Dump worker-wrapper output</source>
          <target state="translated">작업자 랩퍼 출력 덤프</target>
        </trans-unit>
        <trans-unit id="3c5141516fb7db7b134544c4dae8cdc3e506a772" translate="yes" xml:space="preserve">
          <source>Dump worker/wrapper split output</source>
          <target state="translated">덤프 작업자 / 래퍼 분할 출력</target>
        </trans-unit>
        <trans-unit id="41c7d27084b2cd7a013b989d52cce82c765dc60a" translate="yes" xml:space="preserve">
          <source>Dumping out compiler intermediate structures</source>
          <target state="translated">컴파일러 중간 구조 덤핑</target>
        </trans-unit>
        <trans-unit id="33db655119880520601c7986f7bc4bb70b40ff0b" translate="yes" xml:space="preserve">
          <source>Dumps all rewrite rules specified in this module; see &lt;a href=&quot;exts/rewrite_rules#controlling-rules&quot;&gt;Controlling what&amp;rsquo;s going on in rewrite rules&lt;/a&gt;.</source>
          <target state="translated">이 모듈에 지정된 모든 다시 쓰기 규칙을 덤프합니다. &lt;a href=&quot;exts/rewrite_rules#controlling-rules&quot;&gt;다시 쓰기 규칙에서 진행되는 작업 제어를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b3dfaf02fdf5f7e31315c383e384508021a0114" translate="yes" xml:space="preserve">
          <source>Dumps all rewrite rules specified in this module; see &lt;a href=&quot;glasgow_exts#controlling-rules&quot;&gt;Controlling what&amp;rsquo;s going on in rewrite rules&lt;/a&gt;.</source>
          <target state="translated">이 모듈에 지정된 모든 다시 쓰기 규칙을 덤프합니다. &lt;a href=&quot;glasgow_exts#controlling-rules&quot;&gt;다시 쓰기 규칙에서 진행중인 작업 제어를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5171cd4d9fb57198c543082264a4ebbcb8f54d9" translate="yes" xml:space="preserve">
          <source>Dumps detailed information about all rules that fired in this module</source>
          <target state="translated">이 모듈에서 시작된 모든 규칙에 대한 자세한 정보를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="965dc0e8c60c3ec615e97efdc15c76d7f8e22022" translate="yes" xml:space="preserve">
          <source>Dumps inlining info from the simplifier. Note that if used in conjunction with &lt;a href=&quot;#ghc-flag--dverbose-core2core&quot;&gt;&lt;code&gt;-dverbose-core2core&lt;/code&gt;&lt;/a&gt; the compiler will also dump the inlinings that it considers but passes up, along with its rationale.</source>
          <target state="translated">단순화에서 인라인 정보를 덤프합니다. &lt;a href=&quot;#ghc-flag--dverbose-core2core&quot;&gt; &lt;code&gt;-dverbose-core2core&lt;/code&gt; &lt;/a&gt; 와 함께 사용 하면 컴파일러는 이론적 근거와 함께 고려하지만 지나친 인라이닝도 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="1196cdb7287e3f32506173e885bfbcb732b511f7" translate="yes" xml:space="preserve">
          <source>Dumps the CFG with weights used by the new block layout code. Each CFG is dumped in dot format graph making it easy to visualize them.</source>
          <target state="translated">새로운 블록 레이아웃 코드에 사용 된 가중치로 CFG를 덤프합니다. 각 CFG는 도트 형식 그래프로 덤프되어 쉽게 시각화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f93c7d8e829621bfbb6714d4d1f0d5916fe88ade" translate="yes" xml:space="preserve">
          <source>Dumps the names of all rules that fired in this module</source>
          <target state="translated">이 모듈에서 시작된 모든 규칙의 이름을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="89f444f89550ecc987b264d74ae875c03128d547" translate="yes" xml:space="preserve">
          <source>Dumps the new interface to standard output.</source>
          <target state="translated">새 인터페이스를 표준 출력으로 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="fb6bd1b7fcaf9bad1bd2c83240bbfe2d8b9e7a66" translate="yes" xml:space="preserve">
          <source>Duplicate a &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;: the duplicate channel begins empty, but data written to either channel from then on will be available from both. Hence this creates a kind of broadcast channel, where data written by anyone is seen by everyone else.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; 복제 : 중복 채널이 비어 있기 시작하지만 그때부터 어느 한 채널에 쓰여진 데이터는 두 데이터에서 모두 사용할 수 있습니다. 따라서 이것은 누군가가 쓴 데이터를 다른 사람이 볼 수있는 일종의 방송 채널을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cef44fc7b8bfa4e990e594a92f03f940596f68cb" translate="yes" xml:space="preserve">
          <source>Duplicate a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;: the duplicate channel begins empty, but data written to either channel from then on will be available from both. Hence this creates a kind of broadcast channel, where data written by anyone is seen by everyone else.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 복제 : 중복 채널이 비어 있기 시작하지만 그때부터 어느 한 채널에 쓰여진 데이터는 두 데이터에서 모두 사용할 수 있습니다. 따라서 이것은 누군가가 쓴 데이터를 다른 사람이 볼 수있는 일종의 방송 채널을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="132faeffc45103c317a99edeef034b25c6b7c438" translate="yes" xml:space="preserve">
          <source>DuplicateRecordFields</source>
          <target state="translated">DuplicateRecordFields</target>
        </trans-unit>
        <trans-unit id="1f2d301bb78760374d8d19151653e6586fc17308" translate="yes" xml:space="preserve">
          <source>Duplicates, and elements of the first list, are removed from the the second list, but if the first list contains duplicates, so will the result. It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">첫 번째 목록의 중복 항목과 요소는 두 번째 목록에서 제거되지만 첫 번째 목록에 중복 항목이 있으면 결과도 마찬가지입니다. 이는 &lt;code&gt;&lt;a href=&quot;data-list#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt; 의 특수한 경우로 , 프로그래머가 자체 평등 테스트를 제공 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="47fb6bcae78a3892081e57c651f9e890a89b96aa" translate="yes" xml:space="preserve">
          <source>Duplicates, and elements of the first list, are removed from the the second list, but if the first list contains duplicates, so will the result. It is a special case of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">첫 번째 목록의 중복 항목과 요소는 두 번째 목록에서 제거되지만 첫 번째 목록에 중복 항목이 있으면 결과도 마찬가지입니다. 이는 &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt; 의 특수한 경우로 , 프로그래머가 자체 평등 테스트를 제공 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="6d35b652ffd9612c4c69094c159289360ebfc712" translate="yes" xml:space="preserve">
          <source>Duplicating file descriptors</source>
          <target state="translated">파일 디스크립터 복제</target>
        </trans-unit>
        <trans-unit id="0a0f656186f4211a1d4b5028c23aaeca200bec49" translate="yes" xml:space="preserve">
          <source>Duration types</source>
          <target state="translated">기간 유형</target>
        </trans-unit>
        <trans-unit id="1c34669bc7ce5e24c6ddda27e23b30c8fac3dad9" translate="yes" xml:space="preserve">
          <source>During a multiline interaction, the user can interrupt and return to the top-level prompt.</source>
          <target state="translated">여러 줄로 상호 작용하는 동안 사용자는 중단하고 최상위 프롬프트로 돌아갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7eebdebfc42373c2fb63090d5ad79b9b7a030f37" translate="yes" xml:space="preserve">
          <source>During constraint solving, GHC repeatedly calls &lt;code&gt;tcPluginSolve&lt;/code&gt;. This function is provided with the current set of constraints, and should return a &lt;code&gt;TcPluginResult&lt;/code&gt; that indicates whether a contradiction was found or progress was made. If the plugin solver makes progress, GHC will re-start the constraint solving pipeline, looping until a fixed point is reached.</source>
          <target state="translated">제약 조건 해결 중 GHC는 반복적으로 &lt;code&gt;tcPluginSolve&lt;/code&gt; 를 호출 합니다 . 이 함수는 현재 제한 조건 세트와 함께 제공되며 모순이 있는지 또는 진행되었는지를 나타내는 &lt;code&gt;TcPluginResult&lt;/code&gt; 를 리턴해야합니다 . 플러그인 솔버가 진행되면 GHC는 구속 점 해결 파이프 라인을 다시 시작하여 고정 점에 도달 할 때까지 반복합니다.</target>
        </trans-unit>
        <trans-unit id="042c122055066b89cce054fc335addc2fd2dd906" translate="yes" xml:space="preserve">
          <source>During typechecking, GHC will replace an occurrence of an overloaded label like &lt;code&gt;#foo&lt;/code&gt; with &lt;code&gt;fromLabel @&quot;foo&quot;&lt;/code&gt;. This will have some type &lt;code&gt;alpha&lt;/code&gt; and require the solution of a class constraint &lt;code&gt;IsLabel &quot;foo&quot; alpha&lt;/code&gt;.</source>
          <target state="translated">유형 검사 중에 GHC는 &lt;code&gt;#foo&lt;/code&gt; 와 같은 오버로드 된 레이블 발생을 &lt;code&gt;fromLabel @&quot;foo&quot;&lt;/code&gt; 로 바꿉니다 . 여기에는 일부 유형의 &lt;code&gt;alpha&lt;/code&gt; 가 있으며 클래스 제약 조건 &lt;code&gt;IsLabel &quot;foo&quot; alpha&lt;/code&gt; 의 솔루션이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="ceb739dfaa883916a2f3db6aaa122bce70006b53" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="translated">Dynamic</target>
        </trans-unit>
        <trans-unit id="58f56a133d75feb9fb85bc8122468a74f40762ee" translate="yes" xml:space="preserve">
          <source>Dynamic allocation</source>
          <target state="translated">동적 할당</target>
        </trans-unit>
        <trans-unit id="c24e0b778ffbc04a50fcf88406bf389c322f4273" translate="yes" xml:space="preserve">
          <source>Dynamic binding constraints behave just like other type class constraints in that they are automatically propagated. Thus, when a function is used, its implicit parameters are inherited by the function that called it. For example, our &lt;code&gt;sort&lt;/code&gt; function might be used to pick out the least value in a list:</source>
          <target state="translated">동적 바인딩 제약 조건은 자동으로 전파된다는 점에서 다른 유형 클래스 제약 조건과 동일하게 작동합니다. 따라서 함수가 사용될 때 암시 적 매개 변수는이를 호출 한 함수에 의해 상속됩니다. 예를 들어 &lt;code&gt;sort&lt;/code&gt; 함수를 사용하여 목록에서 가장 작은 값을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e2f14ceb4c7f3daaf1b4584e2c201e7ec71a3fb" translate="yes" xml:space="preserve">
          <source>Dynamic link libraries, Win32 DLLs, Win32 On Win32 platforms, the compiler is capable of both producing and using dynamic link libraries (DLLs) containing ghc-compiled code. This section shows you how to make use of this facility.</source>
          <target state="translated">동적 링크 라이브러리, Win32 DLL, Win32 Win32 플랫폼에서 컴파일러는 ghc로 컴파일 된 코드가 포함 된 동적 링크 라이브러리 (DLL)를 생성하고 사용할 수 있습니다. 이 섹션에서는이 기능을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="12fb59bccf3f9eba38cf1b4ff2ca42f6c9c5369f" translate="yes" xml:space="preserve">
          <source>Dynamic linker support through dlopen()</source>
          <target state="translated">dlopen ()을 통한 동적 링커 지원</target>
        </trans-unit>
        <trans-unit id="3995867c81ed886e9eef2e83f19757df386aea2c" translate="yes" xml:space="preserve">
          <source>Dynamic: A dynamic flag may be used on the command line, in a &lt;code&gt;OPTIONS_GHC&lt;/code&gt; pragma in a source file, or set using &lt;a href=&quot;ghci#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; in GHCi.</source>
          <target state="translated">동적 : 동적 플래그는 명령 행, 소스 파일 의 &lt;code&gt;OPTIONS_GHC&lt;/code&gt; pragma에서 사용되거나 GHCi에서 &lt;a href=&quot;ghci#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; 을 사용하여 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31491dcd755ff3b5e68f67dbe3dbed5a36c073c7" translate="yes" xml:space="preserve">
          <source>Dynamically binding a variable (unhygenic)</source>
          <target state="translated">변수를 동적으로 바인딩 (비유 전자)</target>
        </trans-unit>
        <trans-unit id="f7769edcd8c3dfbb5b076a151df913664ac8ff89" translate="yes" xml:space="preserve">
          <source>E.g. translation:</source>
          <target state="translated">예 : 번역 :</target>
        </trans-unit>
        <trans-unit id="ddb0b8bbf60b728fce9ace252db2a1eef68119c7" translate="yes" xml:space="preserve">
          <source>E0</source>
          <target state="translated">E0</target>
        </trans-unit>
        <trans-unit id="07460df10583e94e946fbaccc6e1e861aabd5e23" translate="yes" xml:space="preserve">
          <source>E1</source>
          <target state="translated">E1</target>
        </trans-unit>
        <trans-unit id="21812d19d24db4a9270f22c787d05c1e87579083" translate="yes" xml:space="preserve">
          <source>E12</source>
          <target state="translated">E12</target>
        </trans-unit>
        <trans-unit id="16d509a7146781ec37fe7fba349b58e79ee2f65b" translate="yes" xml:space="preserve">
          <source>E2</source>
          <target state="translated">E2</target>
        </trans-unit>
        <trans-unit id="04cf543b0b92601f0116cc36df4b8942b670408a" translate="yes" xml:space="preserve">
          <source>E3</source>
          <target state="translated">E3</target>
        </trans-unit>
        <trans-unit id="2b699093a4e81395e4b6239d9a24e1ac3f6e3726" translate="yes" xml:space="preserve">
          <source>E6</source>
          <target state="translated">E6</target>
        </trans-unit>
        <trans-unit id="bd9485408996478efd229b846194172187992fcc" translate="yes" xml:space="preserve">
          <source>E9</source>
          <target state="translated">E9</target>
        </trans-unit>
        <trans-unit id="cda4aab5bcbd0ed38717196ad5a3684cd59490a3" translate="yes" xml:space="preserve">
          <source>EOF</source>
          <target state="translated">EOF</target>
        </trans-unit>
        <trans-unit id="c41a4b4ae13ef007bf159e37752b1d297454b600" translate="yes" xml:space="preserve">
          <source>EQ</source>
          <target state="translated">EQ</target>
        </trans-unit>
        <trans-unit id="bb9cc4d2e2b7af57429adcc9ba853cc2aa4659a4" translate="yes" xml:space="preserve">
          <source>EUserInterrupt</source>
          <target state="translated">EUserInterrupt</target>
        </trans-unit>
        <trans-unit id="8dc0db4609110702fc87118461353c4c6d2a48a8" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL! DON'T USE.</source>
          <target state="translated">실험적! 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="54be8c783f08e7c58ac3b02f03bde20d63e77eae" translate="yes" xml:space="preserve">
          <source>Each (term) variable mentioned in a rule must either be in scope (e.g. &lt;code&gt;map&lt;/code&gt;), or bound by the &lt;code&gt;forall&lt;/code&gt; (e.g. &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;xs&lt;/code&gt;). The variables bound by the &lt;code&gt;forall&lt;/code&gt; are called the &lt;em&gt;pattern&lt;/em&gt; variables. They are separated by spaces, just like in a type &lt;code&gt;forall&lt;/code&gt;.</source>
          <target state="translated">규칙에 언급 된 각 (term) 변수는 범위 (예 : &lt;code&gt;map&lt;/code&gt; )에 있거나 &lt;code&gt;forall&lt;/code&gt; (예 : &lt;code&gt;f&lt;/code&gt; , &lt;code&gt;g&lt;/code&gt; , &lt;code&gt;xs&lt;/code&gt; )에 묶여 있어야합니다 . &lt;code&gt;forall&lt;/code&gt; 에 의해 바인딩 된 변수를 &lt;em&gt;패턴&lt;/em&gt; 변수 라고합니다 . 그것들은 &lt;code&gt;forall&lt;/code&gt; 유형과 마찬가지로 공백으로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="0f1b880de36f0e590e324a4b8637992dcd4b5339" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;system-console-getopt#t:OptDescr&quot;&gt;OptDescr&lt;/a&gt;&lt;/code&gt; describes a single option.</source>
          <target state="translated">각 &lt;code&gt;&lt;a href=&quot;system-console-getopt#t:OptDescr&quot;&gt;OptDescr&lt;/a&gt;&lt;/code&gt; 은 단일 옵션을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="11f6f94dd48069174e0ab16e6de6a00d0a3b140d" translate="yes" xml:space="preserve">
          <source>Each Haskell source module should be placed in a file on its own.</source>
          <target state="translated">각 Haskell 소스 모듈은 자체 파일에 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="baeff76bc6c21da93fc63e5ca7e4eeba38b13f1e" translate="yes" xml:space="preserve">
          <source>Each declaration group is mutually recursive only within the group. Declaration groups can refer to definitions within previous groups, but not later ones.</source>
          <target state="translated">각 선언 그룹은 그룹 내에서만 상호 재귀 적입니다. 선언 그룹은 이전 그룹 내의 정의를 참조 할 수 있지만 나중에는 정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2819ca0cadcdc8cc3b23fe7e0ffdbdb30064f7e8" translate="yes" xml:space="preserve">
          <source>Each entry in &lt;code&gt;cost_centres&lt;/code&gt; is an object describing a cost-centre of the program having the following properies,</source>
          <target state="translated">&lt;code&gt;cost_centres&lt;/code&gt; 의 각 항목 은 다음과 같은 특성을 갖는 프로그램의 비용 중심을 설명하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="2d2642fb1a4ef903d8bf3fa6eacb6d5469384c4c" translate="yes" xml:space="preserve">
          <source>Each entry in &lt;code&gt;cost_centres&lt;/code&gt; is an object describing a cost-centre of the program having the following properties,</source>
          <target state="translated">&lt;code&gt;cost_centres&lt;/code&gt; 의 각 항목 은 다음 속성을 갖는 프로그램의 비용 센터를 설명하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="d63db4d1687a729641cee510563e2f601ae8d8b5" translate="yes" xml:space="preserve">
          <source>Each event is associated with a timestamp which is the number of nanoseconds since the start of executation of the running program. This is the elapsed time, not the CPU time.</source>
          <target state="translated">각 이벤트는 실행중인 프로그램의 실행 시작 이후 나노초 수인 타임 스탬프와 연결됩니다. 이것은 CPU 시간이 아니라 경과 시간입니다.</target>
        </trans-unit>
        <trans-unit id="4c88b19977dedb54c08a50d2d5aa67df8ce2c878" translate="yes" xml:space="preserve">
          <source>Each file system object is referenced by a &lt;em&gt;path&lt;/em&gt;. There is normally at least one absolute path to each file system object. In some operating systems, it may also be possible to have paths which are relative to the current directory.</source>
          <target state="translated">각 파일 시스템 객체는 &lt;em&gt;경로&lt;/em&gt; 로 참조됩니다 . 일반적으로 각 파일 시스템 객체에는 하나 이상의 절대 경로가 있습니다. 일부 운영 체제에서는 현재 디렉토리에 상대적인 경로를 가질 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0aba67c3d4e3d2bff2623bdb806f3ca6971acd5" translate="yes" xml:space="preserve">
          <source>Each function has a variant, whose name is suffixed with -&lt;code&gt;With&lt;/code&gt;, that gives greater control over the handling of decoding errors. For instance, &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; will throw an exception, but &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; allows the programmer to determine what to do on a decoding error.</source>
          <target state="translated">- 각각의 기능은 그 이름 접미사 변형 가지고 &lt;code&gt;With&lt;/code&gt; , 복호 에러 핸들링을보다 제어 할 수 있습니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; 은 예외를 발생 시키지만, &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; 를 사용하면 프로그래머가 디코딩 오류에 대해 수행 할 작업을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b781d3fecf13d8a18045c2932491a53246255cf7" translate="yes" xml:space="preserve">
          <source>Each function has a variant, whose name is suffixed with -&lt;code&gt;With&lt;/code&gt;, that gives greater control over the handling of decoding errors. For instance, &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; will throw an exception, but &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; allows the programmer to determine what to do on a decoding error.</source>
          <target state="translated">- 각각의 기능은 그 이름 접미사 변형 가지고 &lt;code&gt;With&lt;/code&gt; , 복호 에러 핸들링을보다 제어 할 수 있습니다. 예를 들어, &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; 은 예외를 발생 시키지만, &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; 를 사용하면 프로그래머가 디코딩 오류에 대해 수행 할 작업을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bddcc921aad16288e5932e06c84e180129b74763" translate="yes" xml:space="preserve">
          <source>Each function in this module is careful to force values before installing them in a &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;. This is usually more efficient when laziness is not necessary. When laziness &lt;em&gt;is&lt;/em&gt; required, use the functions in &lt;a href=&quot;data-map-lazy&quot;&gt;Data.Map.Lazy&lt;/a&gt;.</source>
          <target state="translated">이 모듈의 각 기능은 값을 &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; 설치하기 전에 값을 강제로 설정합니다 . 게으름이 필요하지 않을 때 일반적으로 더 효율적입니다. 게으름 &lt;em&gt;이&lt;/em&gt; 필요한 경우 &lt;a href=&quot;data-map-lazy&quot;&gt;Data.Map.Lazy&lt;/a&gt; 의 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="01065edd435e0a8ab1f31c27f877162d2af1adff" translate="yes" xml:space="preserve">
          <source>Each function in this module is careful to force values before installing them in an &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This is usually more efficient when laziness is not necessary. When laziness &lt;em&gt;is&lt;/em&gt; required, use the functions in &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt;.</source>
          <target state="translated">이 모듈의 각 함수는 &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; 에 값을 설치하기 전에 값을 강제로 설정합니다 . 게으름이 필요하지 않을 때 일반적으로 더 효율적입니다. 게으름 &lt;em&gt;이&lt;/em&gt; 필요한 경우 &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; 의 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6e7ecec6ffa3690b78c0dfda9f07a670482c748" translate="yes" xml:space="preserve">
          <source>Each function in this module is careful to force values before installing them in an &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This is usually more efficient when laziness is not necessary. When laziness &lt;em&gt;is&lt;/em&gt; required, use the functions in &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt;.</source>
          <target state="translated">이 모듈의 각 함수는 &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; 에 값을 설치하기 전에 값을 강제로 설정합니다 . 게으름이 필요하지 않을 때 일반적으로 더 효율적입니다. 게으름 &lt;em&gt;이&lt;/em&gt; 필요한 경우 &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; 의 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1a815af3d2877eac4cb934e724aa6521c69d997" translate="yes" xml:space="preserve">
          <source>Each function in this module is documented with several examples, which are also used as tests.</source>
          <target state="translated">이 모듈의 각 기능은 몇 가지 예와 함께 문서화되어 있으며 테스트로도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6415e03e627926288b1d2c5583f7c32c2ac54ae3" translate="yes" xml:space="preserve">
          <source>Each installed package has a unique identifier (the &amp;ldquo;installed package ID&amp;rdquo;), which distinguishes it from all other installed packages on the system. To see the installed package IDs associated with each installed package, use &lt;code&gt;ghc-pkg list -v&lt;/code&gt;:</source>
          <target state="translated">설치된 각 패키지에는 시스템에 설치된 다른 모든 패키지와 구별되는 고유 식별자 (&amp;ldquo;설치된 패키지 ID&amp;rdquo;)가 있습니다. 설치된 각 패키지와 연관된 설치된 패키지 ID를 보려면 &lt;code&gt;ghc-pkg list -v&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="42fea67aafd63a00e9f18a101ef3edf8a6772532" translate="yes" xml:space="preserve">
          <source>Each line of a &lt;code&gt;.haskeline&lt;/code&gt; file defines one field of the &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; datatype; field names are case-insensitive and unparseable lines are ignored. For example:</source>
          <target state="translated">&lt;code&gt;.haskeline&lt;/code&gt; 파일 의 각 줄은 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; 데이터 유형 의 한 필드를 정의합니다 . 필드 이름은 대소 문자를 구분하지 않으며 구문 분석 할 수없는 행은 무시됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="163beec3ec1c97a0d35d2abb6afc4e865af24b10" translate="yes" xml:space="preserve">
          <source>Each module provides an almost identical API, with the main difference being that the strict module uses &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values for lengths and counts, while the lazy module uses &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; lengths.</source>
          <target state="translated">각 모듈은 거의 동일한 API를 제공하는데, 가장 큰 차이점은 엄격한 모듈은 길이와 카운트에 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 값을 사용하고 게으른 모듈은 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 길이를 사용한다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="5f6385a7915665fd9d1292d5abb94d072b3c768b" translate="yes" xml:space="preserve">
          <source>Each module provides an almost identical API, with the main difference being that the strict module uses &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values for lengths and counts, while the lazy module uses &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; lengths.</source>
          <target state="translated">각 모듈은 거의 동일한 API를 제공하지만 엄격한 모듈은 길이와 개수에 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 값을 사용 하는 반면 지연 모듈은 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 길이를 사용 한다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="2413fe4fc1d516160370c522399f1f1da4f5cfea" translate="yes" xml:space="preserve">
          <source>Each module provides an almost identical API, with the main difference being that the strict module uses &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values for lengths and counts, while the lazy module uses &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; lengths.</source>
          <target state="translated">각 모듈은 거의 동일한 API를 제공하지만 엄격한 모듈은 길이와 개수에 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 값을 사용 하는 반면 지연 모듈은 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 길이를 사용 한다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="97816826f892d968b2bbb56d0faa5ecdafa0fccb" translate="yes" xml:space="preserve">
          <source>Each monad transformer also comes with an operation &lt;code&gt;run&lt;/code&gt;&lt;em&gt;XXX&lt;/em&gt;&lt;code&gt;T&lt;/code&gt; to unwrap the transformer, exposing a computation of the inner monad. (Currently these functions are defined as field labels, but in the next major release they will be separate functions.)</source>
          <target state="translated">각 모나드 트랜스포머 에는 트랜스포머 포장을 풀기 위한 작업 &lt;code&gt;run&lt;/code&gt; &lt;em&gt;XXX &lt;/em&gt; &lt;code&gt;T&lt;/code&gt; 도 포함 되어있어 내부 모나드의 계산이 노출됩니다. (현재 이러한 기능은 필드 레이블로 정의되지만 다음 주요 릴리스에서는 별도의 기능이됩니다.)</target>
        </trans-unit>
        <trans-unit id="196e4ec00a2cf167108ae0cfde65cddfc9eed197" translate="yes" xml:space="preserve">
          <source>Each of GHC&amp;rsquo;s command line options is classified as dynamic or mode:</source>
          <target state="translated">각 GHC의 명령 행 옵션은 동적 또는 모드로 분류됩니다.</target>
        </trans-unit>
        <trans-unit id="472e874ed8cb03d9e3d8a65e24430e1347e6df3f" translate="yes" xml:space="preserve">
          <source>Each of the monad transformers introduces relevant operations. In a sequence of monad transformers, most of these operations.can be lifted through other transformers using &lt;code&gt;&lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; or the &lt;code&gt;map&lt;/code&gt;&lt;em&gt;XXX&lt;/em&gt;&lt;code&gt;T&lt;/code&gt; combinator, but a few with more complex type signatures require specialized lifting combinators, called &lt;code&gt;lift&lt;/code&gt;&lt;em&gt;Op&lt;/em&gt; (see &lt;a href=&quot;control-monad-signatures&quot;&gt;Control.Monad.Signatures&lt;/a&gt;).</source>
          <target state="translated">각 모나드 변압기는 관련 작동을 소개합니다. 일련의 모나드 변압기에서 이러한 작업의 대부분은 &lt;code&gt;&lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;map&lt;/code&gt; &lt;em&gt;XXX &lt;/em&gt; &lt;code&gt;T&lt;/code&gt; 콤비 &lt;em&gt;네이터를&lt;/em&gt; 사용하여 다른 트랜스포머를 통해 들어 올릴 수 있지만 좀 더 복잡한 유형의 서명이있는 경우 &lt;code&gt;lift&lt;/code&gt; &lt;em&gt;Op&lt;/em&gt; 라는 특수 리프팅 콤비 네이터가 필요합니다 ( &lt;a href=&quot;control-monad-signatures&quot;&gt;Control.Monad.Signatures&lt;/a&gt; 참조). ).</target>
        </trans-unit>
        <trans-unit id="c641f44835c555e61d6d59f7e4fcbafe86d8bbd8" translate="yes" xml:space="preserve">
          <source>Each of these functions is structured something like this:</source>
          <target state="translated">이러한 각 기능은 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="38a2b36fc82a511d40a5940bf1b9349a24ad2a6b" translate="yes" xml:space="preserve">
          <source>Each of these turn off path processing completely by the Win32 API and the paths are passed untouched to the filesystem.</source>
          <target state="translated">이들 각각은 Win32 API에 의해 경로 처리를 완전히 해제하고 경로는 그대로 파일 시스템으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="94f7511a7c7bd26f41493475ebe3be46444fdcd3" translate="yes" xml:space="preserve">
          <source>Each quantified constraint, taken by itself, must satisfy the termination rules for an instance declaration.</source>
          <target state="translated">자체 수량화 된 제약 조건은 인스턴스 선언에 대한 종료 규칙을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="68fd1d23d1c064f1705705c91a1ed7f6be4997b7" translate="yes" xml:space="preserve">
          <source>Each reference is given a key which can be used to locate it at runtime with &lt;a href=&quot;../../libraries/base-4.15.0.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; which uses a global and immutable table called the Static Pointer Table. The compiler includes entries in this table for all static forms found in the linked modules. The value can be obtained from the reference via &lt;a href=&quot;../../libraries/base-4.15.0.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr&lt;/a&gt;.</source>
          <target state="translated">각 참조 에는 정적 포인터 테이블이라고하는 전역적이고 변경 불가능한 테이블을 사용하는 &lt;a href=&quot;../../libraries/base-4.15.0.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; 을 사용하여 런타임에이를 찾는 데 사용할 수있는 키가 제공됩니다 . 컴파일러는 링크 된 모듈에있는 모든 정적 양식에 대한 항목을이 테이블에 포함합니다. 이 값은 &lt;a href=&quot;../../libraries/base-4.15.0.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr을&lt;/a&gt; 통해 참조에서 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec1c93b2adf3ced89b8f6c17aa137104772cb785" translate="yes" xml:space="preserve">
          <source>Each reference is given a key which can be used to locate it at runtime with &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; which uses a global and immutable table called the Static Pointer Table. The compiler includes entries in this table for all static forms found in the linked modules. The value can be obtained from the reference via &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr&lt;/a&gt;.</source>
          <target state="translated">각 참조 에는 정적 포인터 테이블이라는 전역 및 불변 테이블을 사용하는 &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; 을 사용하여 런타임에 찾을 수있는 키가 제공됩니다 . 컴파일러는 링크 된 모듈에서 발견 된 모든 정적 양식에 대한이 표의 항목을 포함합니다. 이 값은 &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr을&lt;/a&gt; 통해 참조에서 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="30db01765587d860054796d9a32a8070a6271125" translate="yes" xml:space="preserve">
          <source>Each reference is given a key which can be used to locate it at runtime with &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; which uses a global and immutable table called the Static Pointer Table. The compiler includes entries in this table for all static forms found in the linked modules. The value can be obtained from the reference via &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr&lt;/a&gt;.</source>
          <target state="translated">각 참조 에는 정적 포인터 테이블이라고하는 전역적이고 변경 불가능한 테이블을 사용하는 &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; 을 사용하여 런타임에이를 찾는 데 사용할 수있는 키가 제공됩니다 . 컴파일러는 링크 된 모듈에있는 모든 정적 양식에 대한 항목을이 테이블에 포함합니다. 이 값은 &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr을&lt;/a&gt; 통해 참조에서 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa9a5ff05a6a6ba4b4f9df03bf11a8a1ceb9c49" translate="yes" xml:space="preserve">
          <source>Each rule has a name, enclosed in double quotes. The name itself has no significance at all. It is only used when reporting how many times the rule fired.</source>
          <target state="translated">각 규칙에는 큰 따옴표로 묶은 이름이 있습니다. 이름 자체는 전혀 의미가 없습니다. 규칙이 몇 번이나 발생했는지보고 할 때만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad6e326c72d1a167df7655c39566d558a261e7ee" translate="yes" xml:space="preserve">
          <source>Each type in a &lt;code&gt;default&lt;/code&gt; declaration must be an instance of &lt;code&gt;Num&lt;/code&gt;&lt;em&gt;or&lt;/em&gt; of &lt;code&gt;IsString&lt;/code&gt;.</source>
          <target state="translated">A의 각 유형의 &lt;code&gt;default&lt;/code&gt; 선언의 인스턴스 여야합니다 &lt;code&gt;Num&lt;/code&gt; &lt;em&gt;또는&lt;/em&gt; 의 &lt;code&gt;IsString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03466bcb98d5f0c01e62f838fba0b63506f28a4f" translate="yes" xml:space="preserve">
          <source>Each user-written type signature is subjected to an &lt;em&gt;ambiguity check&lt;/em&gt;. The ambiguity check rejects functions that can never be called. For example:</source>
          <target state="translated">각 사용자 작성 유형 서명은 &lt;em&gt;모호성 검사를&lt;/em&gt; 받습니다. 모호성 검사는 호출 할 수없는 함수를 거부합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="5ff261534d92cf31184bbdd9017c8aa8f7d0a566" translate="yes" xml:space="preserve">
          <source>Each user-written type signature is subjected to an &lt;em&gt;ambiguity check&lt;/em&gt;. The ambiguity check rejects functions that can never be called; for example:</source>
          <target state="translated">각 사용자 작성 형식 서명에는 &lt;em&gt;모호성 검사&lt;/em&gt; 가 적용됩니다 . 모호성 검사는 호출 할 수없는 기능을 거부합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d08dc1c124399643e88edb955dbfbbd4a38f946" translate="yes" xml:space="preserve">
          <source>Each value is expected to be a &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code#graphics&quot;&gt;Select Graphic Rendition (SGR) substring&lt;/a&gt;. The formatting of each element can inherit from parent elements. For example, if &lt;code&gt;header&lt;/code&gt; is left empty, it will inherit the formatting of &lt;code&gt;message&lt;/code&gt;. Alternatively if &lt;code&gt;header&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt; (bold), it will be bolded but still inherits the color of &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">각 값은 &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code#graphics&quot;&gt;SGR (Select Graphic Rendition) 하위 문자열&lt;/a&gt; 이어야합니다 . 각 요소의 서식은 상위 요소에서 상속 될 수 있습니다. 예를 들어, &lt;code&gt;header&lt;/code&gt; 가 비어 있으면 &lt;code&gt;message&lt;/code&gt; 형식을 상속합니다 . 또는 &lt;code&gt;header&lt;/code&gt; 가 &lt;code&gt;1&lt;/code&gt; (굵게) 로 설정 되면 굵게 표시되지만 여전히 &lt;code&gt;message&lt;/code&gt; 의 색상을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="9c3844d15fa9fd775d876cb5f6cdd6036a19e4aa" translate="yes" xml:space="preserve">
          <source>Early versions of this function operated under the mistaken belief that setting an environment variable to the &lt;em&gt;empty string&lt;/em&gt; on Windows removes that environment variable from the environment. For the sake of compatibility, it adopted that behavior on POSIX. In particular</source>
          <target state="translated">이 기능의 초기 버전은 Windows 에서 환경 변수를 &lt;em&gt;빈 문자열로&lt;/em&gt; 설정하면 해당 환경 변수가 환경에서 제거된다는 잘못된 생각으로 작동했습니다 . 호환성을 위해 POSIX에서 해당 동작을 채택했습니다. 특히</target>
        </trans-unit>
        <trans-unit id="02801ac97091cd1f6dc10ea0e42f596755df8b24" translate="yes" xml:space="preserve">
          <source>EchoErase</source>
          <target state="translated">EchoErase</target>
        </trans-unit>
        <trans-unit id="e65667cc87c5f78280b543ab589c321c06de8e54" translate="yes" xml:space="preserve">
          <source>EchoKill</source>
          <target state="translated">EchoKill</target>
        </trans-unit>
        <trans-unit id="2ff2fe0be286792fe70b32e0c745ec16205da699" translate="yes" xml:space="preserve">
          <source>EchoLF</source>
          <target state="translated">EchoLF</target>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="fc2e145c24b2ba20bdeb2ad32eb2b5f28d08e575" translate="yes" xml:space="preserve">
          <source>Edward Kmett &amp;lt;ekmett@gmail.com&amp;gt;</source>
          <target state="translated">에드워드 크멧 &amp;lt;ekmett@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5bb9b7dcfd97e9a89509c0e3e9f08529d081c74e" translate="yes" xml:space="preserve">
          <source>Effects other than throwing an error are also overriden by the deeper layers. For example, &lt;code&gt;StateT s Maybe a&lt;/code&gt; represents a value of type &lt;code&gt;s -&amp;gt; Maybe (a,
 s)&lt;/code&gt;, so if an error thrown from &lt;code&gt;f&lt;/code&gt; causes this function to return &lt;code&gt;Nothing&lt;/code&gt;, any changes to the state which &lt;code&gt;f&lt;/code&gt; also performed will be erased. As a result, &lt;code&gt;g&lt;/code&gt; will see the state as it was before &lt;code&gt;f&lt;/code&gt;. Once &lt;code&gt;g&lt;/code&gt; completes, &lt;code&gt;f&lt;/code&gt;'s error will be rethrown, so &lt;code&gt;g&lt;/code&gt;' state changes will be erased as well. This is the normal interaction between effects in a monad transformer stack.</source>
          <target state="translated">오류를 던지는 것 이외의 효과도 더 깊은 계층에 의해 무시됩니다. 예를 들어 &lt;code&gt;StateT s Maybe a&lt;/code&gt; 는 &lt;code&gt;s -&amp;gt; Maybe (a, s)&lt;/code&gt; 유형 의 값을 나타내 므로 &lt;code&gt;f&lt;/code&gt; 에서 발생한 오류로 인해이 함수가 &lt;code&gt;Nothing&lt;/code&gt; 을 반환하면 &lt;code&gt;f&lt;/code&gt; 도 수행 한 상태의 모든 변경 사항 이 지워집니다. 결과적으로 &lt;code&gt;g&lt;/code&gt; 는 &lt;code&gt;f&lt;/code&gt; 이전의 상태를 볼 수 있습니다. 일단 &lt;code&gt;g&lt;/code&gt; 의 완료 &lt;code&gt;f&lt;/code&gt; 'S하므로 에러가 재 throw 것 &lt;code&gt;g&lt;/code&gt; 상태 변경도 소거한다.' 이것은 모나드 트랜스포머 스택에서 이펙트 간의 정상적인 상호 작용입니다.</target>
        </trans-unit>
        <trans-unit id="66aeb9f404372ac311d4d671cb40871d11099a90" translate="yes" xml:space="preserve">
          <source>Efficiency note</source>
          <target state="translated">효율성 참고</target>
        </trans-unit>
        <trans-unit id="3df81390854254514ad0646369d182a75f3f5996" translate="yes" xml:space="preserve">
          <source>Efficiency note:</source>
          <target state="translated">효율성 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="6fca2fd29db7761ae9ddc43141f7e2119736f412" translate="yes" xml:space="preserve">
          <source>Efficiency: When the same view function is applied in multiple branches of a function definition or a case expression (e.g., in &lt;code&gt;size&lt;/code&gt; above), GHC makes an attempt to collect these applications into a single nested case expression, so that the view function is only applied once. Pattern compilation in GHC follows the matrix algorithm described in Chapter 4 of &lt;a href=&quot;http://research.microsoft.com/~simonpj/Papers/slpj-book-1987/&quot;&gt;The Implementation of Functional Programming Languages&lt;/a&gt;. When the top rows of the first column of a matrix are all view patterns with the &amp;ldquo;same&amp;rdquo; expression, these patterns are transformed into a single nested case. This includes, for example, adjacent view patterns that line up in a tuple, as in</source>
          <target state="translated">효율성 : 동일한 뷰 함수가 함수 정의의 여러 분기 또는 사례 표현식 (예 : 위의 &lt;code&gt;size&lt;/code&gt; )에 적용되는 경우 GHC는 이러한 애플리케이션을 단일 중첩 된 사례 표현식으로 수집하여보기 함수 만 한 번 적용됩니다. GHC에서의 패턴 컴파일 &lt;a href=&quot;http://research.microsoft.com/~simonpj/Papers/slpj-book-1987/&quot;&gt;은 함수형 프로그래밍 언어 구현의&lt;/a&gt; 4 장에 설명 된 매트릭스 알고리즘을 따릅니다 . 행렬의 첫 번째 열의 맨 위 행이 &quot;동일한&quot;표현식을 가진 모든 뷰 패턴 인 경우 이러한 패턴은 하나의 중첩 된 대소 문자로 변환됩니다. 여기에는 예를 들어 튜플에 정렬 된 인접 뷰 패턴이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7893e8f884ad5b27e53b381462308df0b54cbfb3" translate="yes" xml:space="preserve">
          <source>Efficient construction of lazy &lt;code&gt;Text&lt;/code&gt; values. The principal operations on a &lt;code&gt;Builder&lt;/code&gt; are &lt;code&gt;singleton&lt;/code&gt;, &lt;code&gt;fromText&lt;/code&gt;, and &lt;code&gt;fromLazyText&lt;/code&gt;, which construct new builders, and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;, which concatenates two builders.</source>
          <target state="translated">게으른 &lt;code&gt;Text&lt;/code&gt; 값 의 효율적인 구성 . A의 주요 작업 &lt;code&gt;Builder&lt;/code&gt; 입니다 &lt;code&gt;singleton&lt;/code&gt; , &lt;code&gt;fromText&lt;/code&gt; 및 &lt;code&gt;fromLazyText&lt;/code&gt; , 구조 새 빌더 및 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 이 빌더를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="68d48c8394d584a5e8731db36c33bd50d868f17f" translate="yes" xml:space="preserve">
          <source>Efficient construction of lazy &lt;code&gt;Text&lt;/code&gt; values. The principal operations on a &lt;code&gt;Builder&lt;/code&gt; are &lt;code&gt;singleton&lt;/code&gt;, &lt;code&gt;fromText&lt;/code&gt;, and &lt;code&gt;fromLazyText&lt;/code&gt;, which construct new builders, and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;, which concatenates two builders.</source>
          <target state="translated">게으른 &lt;code&gt;Text&lt;/code&gt; 값 의 효율적인 구성 . A의 주요 작업 &lt;code&gt;Builder&lt;/code&gt; 입니다 &lt;code&gt;singleton&lt;/code&gt; , &lt;code&gt;fromText&lt;/code&gt; 및 &lt;code&gt;fromLazyText&lt;/code&gt; , 구조 새 빌더 및 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 이 빌더를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="760611d2b2ced2af72bcadeb0a70ba5424ff0805" translate="yes" xml:space="preserve">
          <source>Efficient construction of lazy &lt;code&gt;Text&lt;/code&gt; values. The principal operations on a &lt;code&gt;Builder&lt;/code&gt; are &lt;code&gt;singleton&lt;/code&gt;, &lt;code&gt;fromText&lt;/code&gt;, and &lt;code&gt;fromLazyText&lt;/code&gt;, which construct new builders, and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;, which concatenates two builders.</source>
          <target state="translated">게으른 &lt;code&gt;Text&lt;/code&gt; 값 의 효율적인 구성 . A의 주요 작업 &lt;code&gt;Builder&lt;/code&gt; 입니다 &lt;code&gt;singleton&lt;/code&gt; , &lt;code&gt;fromText&lt;/code&gt; 및 &lt;code&gt;fromLazyText&lt;/code&gt; , 구조 새 빌더 및 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; 이 빌더를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="7bd556c346e2026184f0b2652c49f750a4c67d40" translate="yes" xml:space="preserve">
          <source>Efficient constructions of lazy bytestrings.</source>
          <target state="translated">게으른 바이트 스트링의 효율적인 구성.</target>
        </trans-unit>
        <trans-unit id="95be912ad55993cfcb1a9f4187870161bd10a608" translate="yes" xml:space="preserve">
          <source>Efficient encoding of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s as decimal numbers is performed by &lt;code&gt;intDec&lt;/code&gt;. Optimization potential exists for the escaping of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s. The above implementation has two optimization opportunities. First, the buffer-free checks of the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s for escaping double quotes and backslashes can be fused. Second, the concatenations performed by &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; can be eliminated. The following implementation exploits these optimizations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 십진수로 효율적으로 인코딩하는 것은 &lt;code&gt;intDec&lt;/code&gt; 에 의해 수행됩니다 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 이스케이프에 대한 최적화 가능성이 있습니다 . 위의 구현에는 두 가지 최적화 기회가 있습니다. 먼저, 큰 따옴표와 백 슬래시를 이스케이프 처리하기위한 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 의 버퍼없는 검사를 통합 할 수 있습니다. 둘째, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; 에 의해 수행 된 연결 이 제거 될 수 있습니다. 다음 구현은 이러한 최적화를 활용합니다.</target>
        </trans-unit>
        <trans-unit id="e44bdca6e855940187dbb32c7e1a2676b810f5e7" translate="yes" xml:space="preserve">
          <source>Efficient encoding of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s as decimal numbers is performed by &lt;code&gt;intDec&lt;/code&gt;. Optimization potential exists for the escaping of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s. The above implementation has two optimization opportunities. First, the buffer-free checks of the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s for escaping double quotes and backslashes can be fused. Second, the concatenations performed by &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; can be eliminated. The following implementation exploits these optimizations.</source>
          <target state="translated">&lt;code&gt;intDec&lt;/code&gt; 의해 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 십진수로 효율적으로 인코딩 합니다. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 의 이스케이프에 대한 최적화 가능성이 있습니다 . 위의 구현에는 두 가지 최적화 기회가 있습니다. 첫째, 큰 따옴표와 백 슬래시를 이스케이프하기위한 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 의 버퍼없는 검사를 융합 할 수 있습니다. 둘째, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; 에 의해 수행되는 연결 제거 할 수 있습니다. 다음 구현은 이러한 최적화를 활용합니다.</target>
        </trans-unit>
        <trans-unit id="822c36df4647c85fdd4e97e1620b876021e3ad94" translate="yes" xml:space="preserve">
          <source>Efficient encoding of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s as decimal numbers is performed by &lt;code&gt;intDec&lt;/code&gt;. Optimization potential exists for the escaping of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s. The above implementation has two optimization opportunities. First, the buffer-free checks of the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s for escaping double quotes and backslashes can be fused. Second, the concatenations performed by &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; can be eliminated. The following implementation exploits these optimizations.</source>
          <target state="translated">&lt;code&gt;intDec&lt;/code&gt; 의해 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 십진수로 효율적으로 인코딩 합니다. &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 의 이스케이프에 대한 최적화 가능성이 있습니다 . 위의 구현에는 두 가지 최적화 기회가 있습니다. 첫째, 큰 따옴표와 백 슬래시를 이스케이프하기위한 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 의 버퍼없는 검사를 융합 할 수 있습니다. 둘째, &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; 에 의해 수행 된 연결을 제거 할 수 있습니다. 다음 구현은 이러한 최적화를 활용합니다.</target>
        </trans-unit>
        <trans-unit id="0c5abdbf896d89ff91516a7f19ba739a5afe7067" translate="yes" xml:space="preserve">
          <source>Efficient locale-sensitive support for lazy text I/O.</source>
          <target state="translated">지연 텍스트 I / O를위한 효율적인 로케일 구분 지원.</target>
        </trans-unit>
        <trans-unit id="728147d66fb07c7c8ea62a639ad6f2059b2beb2d" translate="yes" xml:space="preserve">
          <source>Efficient locale-sensitive support for text I/O.</source>
          <target state="translated">텍스트 I / O에 대한 효율적인 로케일 구분 지원.</target>
        </trans-unit>
        <trans-unit id="09a4bcbb66b93da2b8aa39d16c65da958c56a911" translate="yes" xml:space="preserve">
          <source>Efficient serialisation for GHCi Instruction arrays</source>
          <target state="translated">GHCi 명령어 어레이를위한 효율적인 직렬화</target>
        </trans-unit>
        <trans-unit id="236872a34cfb9b32f593202813531293f45b2bc8" translate="yes" xml:space="preserve">
          <source>Efficient, machine-independent access to the components of a floating-point number.</source>
          <target state="translated">부동 소수점 숫자의 구성 요소에 대한 효율적인 기계 독립적 액세스</target>
        </trans-unit>
        <trans-unit id="ff6862489cd39e592fb63bf232ca8c04d8c28485" translate="yes" xml:space="preserve">
          <source>Efficiently read the entire contents of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; into a list. This function never retries.</source>
          <target state="translated">의 전체 내용을 효율적으로 읽으십시오 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 목록으로. 이 기능은 다시 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4b5400e4e4b35fe0b27486d02606bda28585c9c" translate="yes" xml:space="preserve">
          <source>Efficiently read the entire contents of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; into a list. This function never retries.</source>
          <target state="translated">의 전체 내용을 효율적으로 읽으십시오 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 목록으로. 이 기능은 다시 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3609dfc83c372cf57cfbb5c44f6fed5be88ca56" translate="yes" xml:space="preserve">
          <source>Efficiently write a byte into the output buffer</source>
          <target state="translated">출력 버퍼에 바이트를 효율적으로 작성</target>
        </trans-unit>
        <trans-unit id="7a0c100d8363db97a2bf761ba5ddd84de20eb9d0" translate="yes" xml:space="preserve">
          <source>Efficiently write a signed byte into the output buffer</source>
          <target state="translated">서명 된 바이트를 출력 버퍼에 효율적으로 작성</target>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="8c2dcf9f933e92cf2ad231fa70c163bc33d66ff9" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&quot;32&quot;&lt;/code&gt; or &lt;code&gt;&quot;64&quot;&lt;/code&gt;, reflecting the word size of the target platform.</source>
          <target state="translated">어느 &lt;code&gt;&quot;32&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;64&quot;&lt;/code&gt; , 타겟 플랫폼의 워드 크기를 반영.</target>
        </trans-unit>
        <trans-unit id="ca3894f874e2092ee02f84659d2912f6008fd9fb" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89cf84a36bd2bee9686ff85afd2c344462b021ac" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a82fa6858921c60a5822b17571a31b5c49da1a6" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73ace3176890c2a9fb09f0fce8f3e71a2393dd94" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aeb17092582999cdf852ab53980b9e25cc4e32d5" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d16f2be83547edc8a7a20cfbe2ea62109fd8ba03" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">어느 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eae768106e62c463cb756728f03a2fb1d55c1259" translate="yes" xml:space="preserve">
          <source>Either \(IX\) is &lt;em&gt;overlappable&lt;/em&gt;, or \(IY\) is &lt;em&gt;overlapping&lt;/em&gt;. (This &amp;ldquo;either/or&amp;rdquo; design, rather than a &amp;ldquo;both/and&amp;rdquo; design, allow a client to deliberately override an instance from a library, without requiring a change to the library.)</source>
          <target state="translated">\ (IX \)가 &lt;em&gt;겹칠 수&lt;/em&gt; 있거나 \ (IY \)가 &lt;em&gt;겹칩니다&lt;/em&gt; . ( &quot;두 가지 / 그리고&quot;디자인이 아닌이 &quot;어느 하나 / 또는&quot;디자인은 클라이언트가 라이브러리를 변경할 필요없이 라이브러리에서 인스턴스를 의도적으로 재정의 할 수 있도록합니다.)</target>
        </trans-unit>
        <trans-unit id="e108ebea64a42e14b97d7be81de9358fdfc63409" translate="yes" xml:space="preserve">
          <source>Either hcat or vcat</source>
          <target state="translated">hcat 또는 vcat</target>
        </trans-unit>
        <trans-unit id="4a34f5a5cb2d6ae98a36d4adf57cdcb0049a752c" translate="yes" xml:space="preserve">
          <source>Either hsep or vcat</source>
          <target state="translated">hsep 또는 vcat</target>
        </trans-unit>
        <trans-unit id="b09741fbf221c146ff8a067164108559586ca7d9" translate="yes" xml:space="preserve">
          <source>Element contents</source>
          <target state="translated">요소 내용</target>
        </trans-unit>
        <trans-unit id="778d63305633845c783ba5d6e454b0cfdcb9c51d" translate="yes" xml:space="preserve">
          <source>Element name</source>
          <target state="translated">요소 이름</target>
        </trans-unit>
        <trans-unit id="f59967abba502e964b7f020cc8b5a7f5325fe6de" translate="yes" xml:space="preserve">
          <source>Element of a SIMD vector type</source>
          <target state="translated">SIMD 벡터 유형의 요소</target>
        </trans-unit>
        <trans-unit id="f98aca35f2959af196794c23d01e912f92465447" translate="yes" xml:space="preserve">
          <source>Elements are arranged from from lowest to highest, keeping duplicates in the order they appeared in the input.</source>
          <target state="translated">요소는 입력 순서에 표시된 순서대로 복제본을 유지하면서 가장 낮은 것부터 가장 높은 것까지 배열됩니다.</target>
        </trans-unit>
        <trans-unit id="0cd990c539a574eb461235d162a7c624f2540597" translate="yes" xml:space="preserve">
          <source>Elements are arranged from lowest to highest, keeping duplicates in the order they appeared in the input.</source>
          <target state="translated">요소는 가장 낮은 것부터 가장 높은 것까지 배열되어 입력에 나타난 순서대로 중복을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="ae1b54ec88a25966ebe0451c5b086e8093800252" translate="yes" xml:space="preserve">
          <source>Elements in XHTML Strict</source>
          <target state="translated">XHTML 엄격한 요소</target>
        </trans-unit>
        <trans-unit id="615f199cd3fbc38e1e27bbeea1e73fdb4abac6d5" translate="yes" xml:space="preserve">
          <source>Eliminate any candidate \(IX\) for which there is another candidate \(IY\) such that both of the following hold:</source>
          <target state="translated">다음 두 가지 모두를 보유 할 수있는 다른 후보 인 \ (IY \)가있는 후보자 \ (IX \)를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="52b274f44ee359523469b15453109497a69e6fbc" translate="yes" xml:space="preserve">
          <source>Elimination</source>
          <target state="translated">Elimination</target>
        </trans-unit>
        <trans-unit id="ca9189e8b45feaa94cb4019195418b4ef3d7a93b" translate="yes" xml:space="preserve">
          <source>Eliminator for &lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; 제거기 .</target>
        </trans-unit>
        <trans-unit id="83dd28bfea5c32f2bf2c82619195683ac46076ea" translate="yes" xml:space="preserve">
          <source>Embed a simple state action into the monad.</source>
          <target state="translated">모나드에 간단한 상태 동작을 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="b340faa98a6b348180fa991a2183d51aae5e734c" translate="yes" xml:space="preserve">
          <source>Embed a strict state thread in an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. The &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 작업 에 엄격한 상태 스레드를 포함 시킵니다. &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; 의 매개 변수는에 의해 사용되는 내부 상태를 나타냅니다 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 의 계산이 특정에 의해 제공된 하나 &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 모나드과의 호출에 의해 사용되는 것과 별개 따라서 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c387e9378b498d788feea39b5ce84573125c480" translate="yes" xml:space="preserve">
          <source>Embed a strict state thread in an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. The &lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 작업 에 엄격한 상태 스레드를 포함 시킵니다. &lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; 의 매개 변수는에 의해 사용되는 내부 상태를 나타냅니다 &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 의 계산이 특정에 의해 제공된 하나 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 모나드과의 호출에 의해 사용되는 것과 별개 따라서 &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f55737d101cc9f1d134f9358f73f0df04030c72" translate="yes" xml:space="preserve">
          <source>Embed a strict state thread in an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. The &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 작업 에 엄격한 상태 스레드를 포함 시킵니다. &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; 의 매개 변수는에 의해 사용되는 내부 상태를 나타냅니다 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 의 계산이 특정에 의해 제공된 하나 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 모나드과의 호출에 의해 사용되는 것과 별개 따라서 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a6fc326f19cade7df34990008d8ecf6c0ee55c7" translate="yes" xml:space="preserve">
          <source>Emit a foreign file which will be compiled and linked to the object for the current module. Currently only languages that can be compiled with the C compiler are supported, and the flags passed as part of -optc will be also applied to the C compiler invocation that will compile them.</source>
          <target state="translated">컴파일되고 현재 모듈의 오브젝트에 링크 될 외부 파일을 방출하십시오. 현재 C 컴파일러로 컴파일 할 수있는 언어 만 지원되며 -optc의 일부로 전달 된 플래그는 컴파일 할 C 컴파일러 호출에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ddb34401314a7a78ca02c089f749afef294c419b" translate="yes" xml:space="preserve">
          <source>Emit debug information in object code. Currently only DWARF debug information is supported on x86-64 and i386. Currently debug levels 0 through 3 are accepted:</source>
          <target state="translated">객체 코드에서 디버그 정보를 방출합니다. 현재 x86-64 및 i386에서는 DWARF 디버그 정보 만 지원됩니다. 현재 디버그 레벨 0-3이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="23e5ca18fb048a259419389c5fa109f10e636849" translate="yes" xml:space="preserve">
          <source>Emit profile samples to the &lt;a href=&quot;runtime_control#rts-eventlog&quot;&gt;GHC event log&lt;/a&gt;. This format is both more expressive than the old &lt;code&gt;.hp&lt;/code&gt; format and can be correlated with other events over the program&amp;rsquo;s runtime. See &lt;a href=&quot;eventlog-formats#heap-profiler-events&quot;&gt;Heap profiler event log output&lt;/a&gt; for details on the produced event structure.</source>
          <target state="translated">프로파일 샘플을 &lt;a href=&quot;runtime_control#rts-eventlog&quot;&gt;GHC 이벤트 로그&lt;/a&gt; 로 방출합니다 . 이 형식은 이전 &lt;code&gt;.hp&lt;/code&gt; 형식 보다 표현력이 뛰어나며 프로그램 실행 시간 동안 다른 이벤트와 상관 될 수 있습니다. 생성 된 이벤트 구조에 대한 세부 사항 은 &lt;a href=&quot;eventlog-formats#heap-profiler-events&quot;&gt;힙 프로파일 러 이벤트 로그 출력&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a579761215973983c3266981fb3734fda72fbddc" translate="yes" xml:space="preserve">
          <source>Emit the full description of every package, in the form of an &lt;code&gt;InstalledPackageInfo&lt;/code&gt;. Multiple package descriptions are separated by the string &lt;code&gt;---&lt;/code&gt; on a line by itself.</source>
          <target state="translated">&lt;code&gt;InstalledPackageInfo&lt;/code&gt; 형식으로 모든 패키지에 대한 전체 설명을 내 보냅니다 . 여러 패키지 설명은 한 줄로 문자열 &lt;code&gt;---&lt;/code&gt; 로 구분 됩니다.</target>
        </trans-unit>
        <trans-unit id="eedc94b0824c69aeb74f17ea3571fc1dc9262b1d" translate="yes" xml:space="preserve">
          <source>Emit the full description of the specified package. The description is in the form of an &lt;code&gt;InstalledPackageInfo&lt;/code&gt;, the same as the input file format for &lt;code&gt;ghc-pkg register&lt;/code&gt;. See &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: a package specification&lt;/a&gt; for details.</source>
          <target state="translated">지정된 패키지의 전체 설명을 방출하십시오. 설명은 &lt;code&gt;ghc-pkg register&lt;/code&gt; 의 입력 파일 형식과 동일한 &lt;code&gt;InstalledPackageInfo&lt;/code&gt; 형식입니다 . 자세한 내용은 &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo : 패키지 사양&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2a31f0708a9eb6b217864b6a042884e7d78ca64b" translate="yes" xml:space="preserve">
          <source>Emits a marker event via the RTS tracing framework. The contents of the event is the zero-terminated byte string passed as the first argument. The event will be emitted either to the &lt;code&gt;.eventlog&lt;/code&gt; file, or to stderr, depending on the runtime RTS flags.</source>
          <target state="translated">RTS 추적 프레임 워크를 통해 마커 이벤트를 생성합니다. 이벤트의 내용은 첫 번째 인수로 전달 된 0으로 끝나는 바이트 문자열입니다. 런타임 RTS 플래그에 따라 이벤트가 &lt;code&gt;.eventlog&lt;/code&gt; 파일 또는 stderr로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="1e57bf33f4f40534adc2a346130d490b186fbe68" translate="yes" xml:space="preserve">
          <source>Emits a warning if GHC cannot specialise an overloaded function, usually because the function needs an &lt;code&gt;INLINABLE&lt;/code&gt; pragma. Reports all such situations.</source>
          <target state="translated">일반적으로 함수에 &lt;code&gt;INLINABLE&lt;/code&gt; pragma가 필요하기 때문에 GHC가 오버로드 된 함수를 특수화 할 수없는 경우 경고가 발생합니다 . 그러한 모든 상황을보고합니다.</target>
        </trans-unit>
        <trans-unit id="fe8a4015db73a571dcf0a872bd93d8a88b777e6a" translate="yes" xml:space="preserve">
          <source>Emits a warning if GHC cannot specialise an overloaded function, usually because the function needs an &lt;code&gt;INLINABLE&lt;/code&gt; pragma. Reports when the situation arises during specialisation of an imported function.</source>
          <target state="translated">일반적으로 함수에 &lt;code&gt;INLINABLE&lt;/code&gt; pragma가 필요하기 때문에 GHC가 오버로드 된 함수를 특수화 할 수없는 경우 경고가 발생합니다 . 가져온 함수를 특수화하는 동안 상황이 발생하는시기를보고합니다.</target>
        </trans-unit>
        <trans-unit id="121c5bf965e65cb881c4cee1ecbc608d94908569" translate="yes" xml:space="preserve">
          <source>Emits an event via the RTS tracing framework. The contents of the event is the binary object passed as the first argument with the given length passed as the second argument. The event will be emitted to the &lt;code&gt;.eventlog&lt;/code&gt; file.</source>
          <target state="translated">RTS 추적 프레임 워크를 통해 이벤트를 생성합니다. 이벤트의 내용은 주어진 길이가 두 번째 인수로 전달 된 첫 번째 인수로 전달 된 이진 객체입니다. 이벤트는 &lt;code&gt;.eventlog&lt;/code&gt; 파일로 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="81efd878636ba7b56197416e3998ec81ce5bd56b" translate="yes" xml:space="preserve">
          <source>Emits an event via the RTS tracing framework. The contents of the event is the binary object passed as the first argument with the the given length passed as the second argument. The event will be emitted to the &lt;code&gt;.eventlog&lt;/code&gt; file.</source>
          <target state="translated">RTS 추적 프레임 워크를 통해 이벤트를 생성합니다. 이벤트의 내용은 주어진 길이와 두 번째 인수로 전달 된 첫 번째 인수로 전달 된 이진 객체입니다. 이벤트는 &lt;code&gt;.eventlog&lt;/code&gt; 파일로 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="abad5cfce117eeca2c66c0bbdaad4250524ee6c8" translate="yes" xml:space="preserve">
          <source>Emits an event via the RTS tracing framework. The contents of the event is the zero-terminated byte string passed as the first argument. The event will be emitted either to the &lt;code&gt;.eventlog&lt;/code&gt; file, or to stderr, depending on the runtime RTS flags.</source>
          <target state="translated">RTS 추적 프레임 워크를 통해 이벤트를 생성합니다. 이벤트의 내용은 첫 번째 인수로 전달 된 0으로 끝나는 바이트 문자열입니다. 런타임 RTS 플래그에 따라 이벤트가 &lt;code&gt;.eventlog&lt;/code&gt; 파일 또는 stderr로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6fdc5d4715bb601f6a4a08e47b3447c293e821ad" translate="yes" xml:space="preserve">
          <source>Employ rebindable syntax. Implies &lt;a href=&quot;#extension-NoImplicitPrelude&quot;&gt;&lt;code&gt;NoImplicitPrelude&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리 바인드 가능한 구문을 사용하십시오. 의미 &lt;a href=&quot;#extension-NoImplicitPrelude&quot;&gt; &lt;code&gt;NoImplicitPrelude&lt;/code&gt; 는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b27275e9ef177705e866df7b27ebcf26632ab902" translate="yes" xml:space="preserve">
          <source>Employ rebindable syntax. Implies &lt;a href=&quot;rebindable_syntax#extension-NoImplicitPrelude&quot;&gt;&lt;code&gt;NoImplicitPrelude&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리 바인딩 가능한 구문을 사용합니다. &lt;a href=&quot;rebindable_syntax#extension-NoImplicitPrelude&quot;&gt; &lt;code&gt;NoImplicitPrelude&lt;/code&gt; 를&lt;/a&gt; 의미 합니다 .</target>
        </trans-unit>
        <trans-unit id="3159fe421b3221381b3c778dc1c3c26e4540be37" translate="yes" xml:space="preserve">
          <source>Empty</source>
          <target state="translated">Empty</target>
        </trans-unit>
        <trans-unit id="40ff3edd120c1ced1fce1c0e3fc3ee548054d166" translate="yes" xml:space="preserve">
          <source>Empty datatypes: &lt;code&gt;V1&lt;/code&gt;</source>
          <target state="translated">빈 데이터 유형 : &lt;code&gt;V1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d72b3ceb9581b4b61225c58829613c7b50aaf28b" translate="yes" xml:space="preserve">
          <source>Empty paths are treated as the current directory.</source>
          <target state="translated">빈 경로는 현재 디렉토리로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="768362a03c422e7525195a6966a695f5b96eb76b" translate="yes" xml:space="preserve">
          <source>Empty structures always yield &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">빈 구조는 항상 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 생성 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="db9babd32d23143d96b5652a86c81305ed34a073" translate="yes" xml:space="preserve">
          <source>Empty structures yield &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">빈 구조는 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="c950dc8e714230e78e180309311fc45d5699ac0a" translate="yes" xml:space="preserve">
          <source>Empty structures yield &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">빈 구조는 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="33bd5284f3fdf0a1c04092ada20be09f70b844f3" translate="yes" xml:space="preserve">
          <source>Empty the import directory list</source>
          <target state="translated">가져 오기 디렉토리 목록 비우기</target>
        </trans-unit>
        <trans-unit id="3c6fa73218916bf9e5650f1088ae097d6d991448" translate="yes" xml:space="preserve">
          <source>EmptyCallStack</source>
          <target state="translated">EmptyCallStack</target>
        </trans-unit>
        <trans-unit id="d85d9c6b43aaa2442efab95ab8650d364ba56534" translate="yes" xml:space="preserve">
          <source>EmptyCase</source>
          <target state="translated">EmptyCase</target>
        </trans-unit>
        <trans-unit id="417d43f0c5b3fcc933643e9fb018ddfb8ad5da18" translate="yes" xml:space="preserve">
          <source>EmptyDataDecls</source>
          <target state="translated">EmptyDataDecls</target>
        </trans-unit>
        <trans-unit id="a5fae12a58d1ccb6a9471a85a20708d3fa493c44" translate="yes" xml:space="preserve">
          <source>EmptyDataDeriving</source>
          <target state="translated">EmptyDataDeriving</target>
        </trans-unit>
        <trans-unit id="113fee850c5dca5a7e5e7ea397edce2bd639098a" translate="yes" xml:space="preserve">
          <source>EmptyL</source>
          <target state="translated">EmptyL</target>
        </trans-unit>
        <trans-unit id="2a980ff896dd1960377c7d2f7ecf38b75e8da98a" translate="yes" xml:space="preserve">
          <source>EmptyR</source>
          <target state="translated">EmptyR</target>
        </trans-unit>
        <trans-unit id="bf827ffaed769c9b19a5a71a24f7deec95310936" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;exts/safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; trusted package requirement for trustworthy modules.</source>
          <target state="translated">신뢰할 수있는 모듈에 대해 &lt;a href=&quot;exts/safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; 신뢰할 수있는 패키지 요구 사항을 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="f69258f941b24f0f2c7269217de659be06225b36" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Unsafe mode.</source>
          <target state="translated">&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Unsafe 모드를 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="069ce88d7ccf1e2bfb7a2d33766b2a8b1d18d2e6" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; trusted package requirement for trustworthy modules.</source>
          <target state="translated">신뢰할 수있는 모듈에 &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell의&lt;/a&gt; 신뢰할 수있는 패키지 요구 사항을 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="f063bddb13a247daafa8897d3a96b2939bb2b007" translate="yes" xml:space="preserve">
          <source>Enable &lt;em&gt;all&lt;/em&gt; RTS option processing, both on the command line and through the &lt;code&gt;GHCRTS&lt;/code&gt; environment variable.</source>
          <target state="translated">명령 행 및 &lt;code&gt;GHCRTS&lt;/code&gt; 환경 변수를 통해 &lt;em&gt;모든&lt;/em&gt; RTS 옵션 처리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ef9d4f847354709b1746e1615f525879cefea09" translate="yes" xml:space="preserve">
          <source>Enable Applicative do-notation desugaring</source>
          <target state="translated">Applicative do-notation desugaring 활성화</target>
        </trans-unit>
        <trans-unit id="eddf2f8555096c1ec853e903d2c0345c507bc972" translate="yes" xml:space="preserve">
          <source>Enable Cmm common block elimination. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cmm 공통 블록 제거를 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="50b4a085a4cd714922af488444cc6233a03ee900" translate="yes" xml:space="preserve">
          <source>Enable Cmm sinking. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cmm 싱킹을 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="c551cf97bec7897ab12112f2050b0d95e788d841" translate="yes" xml:space="preserve">
          <source>Enable GHC&amp;rsquo;s cunning generalised deriving mechanism for &lt;code&gt;newtype&lt;/code&gt;s</source>
          <target state="translated">대한 GHC의 교활한 일반화 유도 메커니즘을 사용 &lt;code&gt;newtype&lt;/code&gt; 이란 들</target>
        </trans-unit>
        <trans-unit id="ba65d37a24d61ff44622efb5dd6a5c0c4e257d90" translate="yes" xml:space="preserve">
          <source>Enable Implicit Parameters.</source>
          <target state="translated">암시 적 매개 변수를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0b525a2c8105aab9b18ed7c57bda3ea71f57609f" translate="yes" xml:space="preserve">
          <source>Enable Implicit Parameters. Implies &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">암시 적 매개 변수를 활성화하십시오. &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; 를&lt;/a&gt; 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="fef928af9b9c30c1642025404a66357e046fb2a2" translate="yes" xml:space="preserve">
          <source>Enable NUMA-aware memory allocation in the runtime (only available with &lt;code&gt;-threaded&lt;/code&gt;, and only on Linux and Windows currently).</source>
          <target state="translated">런타임에서 NUMA 인식 메모리 할당을 활성화하십시오 ( &lt;code&gt;-threaded&lt;/code&gt; 에서만 사용 가능하며 현재 Linux 및 Windows 에서만 사용 가능 ).</target>
        </trans-unit>
        <trans-unit id="291b4fb36fad0712361533c59ea70c0605c66516" translate="yes" xml:space="preserve">
          <source>Enable Template Haskell Quasi-quotation syntax.</source>
          <target state="translated">Template Haskell Quasi-quotation 구문을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="ac80bd2cafc75b34f2bb8a394b32c1276e68b3d8" translate="yes" xml:space="preserve">
          <source>Enable Template Haskell&amp;rsquo;s splice and quotation syntax.</source>
          <target state="translated">템플릿 Haskell의 스플 라이스 및 인용 구문을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="7d394c959731485258f393bf684401a5c5ac79ae" translate="yes" xml:space="preserve">
          <source>Enable Template Haskell.</source>
          <target state="translated">템플릿 Haskell을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="28822fecbe1fad5f17ca8ff430bf88454401d40d" translate="yes" xml:space="preserve">
          <source>Enable a breakpoint</source>
          <target state="translated">중단 점 사용</target>
        </trans-unit>
        <trans-unit id="9c459274135d3bd5f5c45d4ac444f4af2a38db67" translate="yes" xml:space="preserve">
          <source>Enable a kind of constraints.</source>
          <target state="translated">일종의 제약 조건을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="76055f87cf54c2a66ffe8cf3790dc5a331545767" translate="yes" xml:space="preserve">
          <source>Enable all breakpoints and begin evaluating an expression in single-stepping mode. In this mode evaluation will be stopped after every reduction, allowing local variables to be inspected. If ⟨expr⟩ is not given, evaluation will resume at the last breakpoint. See &lt;a href=&quot;#single-stepping&quot;&gt;Single-stepping&lt;/a&gt;.</source>
          <target state="translated">모든 중단 점을 활성화하고 단일 스테핑 모드에서 표현식 평가를 시작하십시오. 이 모드에서는 모든 감소 후에 평가가 중지되어 지역 변수를 검사 할 수 있습니다. ⟨expr⟩을 제공하지 않으면 마지막 중단 점에서 평가가 다시 시작됩니다. &lt;a href=&quot;#single-stepping&quot;&gt;단일 스테핑을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8055dbadcd3b5579ede66a722ccbadd6da09583f" translate="yes" xml:space="preserve">
          <source>Enable arrow notation extension</source>
          <target state="translated">화살표 표기법 확장 사용</target>
        </trans-unit>
        <trans-unit id="6be736051511fcf4febf53e62c4dabd115f20b9a" translate="yes" xml:space="preserve">
          <source>Enable arrow notation.</source>
          <target state="translated">화살표 표기법을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0c872500562e5ca75c4e55d785a878085588e1e7" translate="yes" xml:space="preserve">
          <source>Enable automatic deriving of instances for the &lt;code&gt;Data&lt;/code&gt; typeclass</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 클래스에 대한 인스턴스 자동 파생 사용</target>
        </trans-unit>
        <trans-unit id="d7959a814cac78116290abc8478b2844f4d03800" translate="yes" xml:space="preserve">
          <source>Enable automatic deriving of instances for the &lt;code&gt;Lift&lt;/code&gt; typeclass for Template Haskell.</source>
          <target state="translated">Template Haskell 의 &lt;code&gt;Lift&lt;/code&gt; 유형 클래스에 대한 인스턴스 자동 파생을 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="fa86dc099d47783f7d0a58549192b8b1097a006b" translate="yes" xml:space="preserve">
          <source>Enable bang patterns.</source>
          <target state="translated">뱅 패턴을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ce03f1b9615a0bdf3af1244ec00f58cf7e15705f" translate="yes" xml:space="preserve">
          <source>Enable call-arity analysis.</source>
          <target state="translated">통화 특성 분석을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="a6d8cccdebeaa96f1c87e386dd213d85d8c4b3e4" translate="yes" xml:space="preserve">
          <source>Enable call-arity optimisation. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">콜-어리 티 최적화를 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="edb3d168a7ff318fcc62f41abd3e0763c1a58347" translate="yes" xml:space="preserve">
          <source>Enable case-merging. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대소 문자 병합을 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="329be79f930f74bf497584814b87c2c155375955" translate="yes" xml:space="preserve">
          <source>Enable code coverage for the current module or modules being compiled.</source>
          <target state="translated">컴파일중인 현재 모듈에 대한 코드 적용 범위를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="3aff91029ec6e38fdb215c8e3b44b892e704d3dd" translate="yes" xml:space="preserve">
          <source>Enable common sub-expression elimination on the STG intermediate language</source>
          <target state="translated">STG 중급 언어에서 공통 하위 표현식 제거 사용</target>
        </trans-unit>
        <trans-unit id="5f0b9143ca2f7eea23068bca92c859bebe41895d" translate="yes" xml:space="preserve">
          <source>Enable common sub-expression elimination. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">공통 하위 표현식 제거를 사용하십시오. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d3ed727245863b71054eb06acb626045606ec13" translate="yes" xml:space="preserve">
          <source>Enable constant folding in case expressions. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사례 표현식에서 상수 접기를 사용합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="13cd8c57ae87c71141911af34102116592fd7527" translate="yes" xml:space="preserve">
          <source>Enable constrained class methods.</source>
          <target state="translated">제한된 클래스 메서드를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="3fbc82f3bcf16c76192c7fb3b8ca8dbf4dbce0f9" translate="yes" xml:space="preserve">
          <source>Enable datatype promotion.</source>
          <target state="translated">데이터 유형 승격을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ff32c64c61689ffe5a6c40671818819d8191da4d" translate="yes" xml:space="preserve">
          <source>Enable default signatures.</source>
          <target state="translated">기본 서명을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1c2941d8f6c9a6d5ec9b9eb1e900d02e6c1a708f" translate="yes" xml:space="preserve">
          <source>Enable default strict datatype fields.</source>
          <target state="translated">기본 엄격한 데이터 유형 필드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="869e4b0536e0526fd5a85d8d25fcd822ba328f40" translate="yes" xml:space="preserve">
          <source>Enable deriving for any class.</source>
          <target state="translated">모든 클래스에 대해 파생을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="e3ae1cb943b6225f86153e69258d71b5e21c711e" translate="yes" xml:space="preserve">
          <source>Enable deriving for the &lt;code&gt;Data&lt;/code&gt; class. Implied by (deprecated) &lt;code&gt;AutoDeriveTypeable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 클래스에 대한 파생을 활성화합니다 . (더 이상 사용되지 않음) &lt;code&gt;AutoDeriveTypeable&lt;/code&gt; 에 의해 암시 됨 .</target>
        </trans-unit>
        <trans-unit id="49a68b363801cf0cc3bc177a831341d507a713b6" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Data class. Implied by (deprecated) &lt;code&gt;AutoDeriveTypeable&lt;/code&gt;.</source>
          <target state="translated">Data 클래스 파생을 활성화합니다. (더 이상 사용되지 않음) &lt;code&gt;AutoDeriveTypeable&lt;/code&gt; 에 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3c1b3b7cb3a9e77f53e391a5c1c0372d82968933" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Foldable class. Implied by &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Foldable 클래스 파생을 활성화합니다. &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad8aba46607e7e37c27ec3f19d0e7c6a169127d1" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Foldable class. Implied by &lt;a href=&quot;deriving_extra#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Foldable 클래스에 대한 파생을 활성화합니다. &lt;a href=&quot;deriving_extra#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="007821c6a972fb297c8c9f2ef8491de0ee0e4f70" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Functor class. Implied by &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Functor 클래스 파생을 활성화합니다. &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="a70009dbb31d14f2f12d011685c1c871ddc4aff3" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Functor class. Implied by &lt;a href=&quot;deriving_extra#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Functor 클래스에 대한 파생을 활성화합니다. &lt;a href=&quot;deriving_extra#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="79443ff4d96d3376b5cbb13a6027d47a8fe69bbe" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Generic class.</source>
          <target state="translated">Generic 클래스 파생을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="07948bf0a3eb1a3cc8f80ece5b9b75ce73b2fa96" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Lift class</source>
          <target state="translated">리프트 클래스에 대한 파생 활성화</target>
        </trans-unit>
        <trans-unit id="239f48f68a661aebbe8ede751ef0e9fb5a6a1982" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Traversable class. Implies &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt;&lt;code&gt;DeriveFunctor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt;&lt;code&gt;DeriveFoldable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Traversable 클래스 파생을 활성화합니다. 의미 &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt; &lt;code&gt;DeriveFunctor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt; &lt;code&gt;DeriveFoldable&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7de0c2232e8e2388218ca9f0df9defc3e1cf8a66" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Traversable class. Implies &lt;a href=&quot;deriving_extra#extension-DeriveFunctor&quot;&gt;&lt;code&gt;DeriveFunctor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deriving_extra#extension-DeriveFoldable&quot;&gt;&lt;code&gt;DeriveFoldable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Traversable 클래스에 대한 파생을 활성화합니다. &lt;a href=&quot;deriving_extra#extension-DeriveFunctor&quot;&gt; &lt;code&gt;DeriveFunctor&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;deriving_extra#extension-DeriveFoldable&quot;&gt; &lt;code&gt;DeriveFoldable&lt;/code&gt; 을&lt;/a&gt; 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="7ca186309ec5f9bab137da64b7e528c8f14f30ff" translate="yes" xml:space="preserve">
          <source>Enable deriving instances &lt;code&gt;via&lt;/code&gt; types of the same runtime representation. Implies &lt;a href=&quot;#extension-DerivingStrategies&quot;&gt;&lt;code&gt;DerivingStrategies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">동일한 런타임 표현 유형을 &lt;code&gt;via&lt;/code&gt; 인스턴스 파생을 활성화 합니다. 의미 &lt;a href=&quot;#extension-DerivingStrategies&quot;&gt; &lt;code&gt;DerivingStrategies&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3924da0272dbecf0299d62fbea78a09f37d9c90d" translate="yes" xml:space="preserve">
          <source>Enable deriving instances &lt;code&gt;via&lt;/code&gt; types of the same runtime representation. Implies &lt;a href=&quot;deriving_strategies#extension-DerivingStrategies&quot;&gt;&lt;code&gt;DerivingStrategies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">동일한 런타임 표현 유형을 &lt;code&gt;via&lt;/code&gt; 인스턴스 파생을 활성화 합니다. 의미 &lt;a href=&quot;deriving_strategies#extension-DerivingStrategies&quot;&gt; &lt;code&gt;DerivingStrategies&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97e1b6323e539b78ba0ee5e17b3e87bbcbd4ea87" translate="yes" xml:space="preserve">
          <source>Enable detection of complete user-supplied kind signatures.</source>
          <target state="translated">사용자가 제공 한 완전한 종류의 서명을 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26b597a764796dacd29afee1df47f3d5f838f48f" translate="yes" xml:space="preserve">
          <source>Enable do not generalise local bindings. Implied by &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-GADTs&quot;&gt;&lt;code&gt;GADTs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로컬 바인딩을 일반화하지 마십시오. &lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-GADTs&quot;&gt; &lt;code&gt;GADTs&lt;/code&gt; &lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="ca0c8ed03968fb631bd32d7dcffda2a4ecf4e4a2" translate="yes" xml:space="preserve">
          <source>Enable do not generalise local bindings. Implied by &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gadt#extension-GADTs&quot;&gt;&lt;code&gt;GADTs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로컬 바인딩을 일반화하지 않습니다. &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;gadt#extension-GADTs&quot;&gt; &lt;code&gt;GADTs&lt;/code&gt; &lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="a0be8cbc4d765a0837fafb8803bb02065cc1399b" translate="yes" xml:space="preserve">
          <source>Enable eta-reduction. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에타 감소를 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec8da65fee4b98e4b8c2714f873dc076859c7eee" translate="yes" xml:space="preserve">
          <source>Enable excess intermediate precision</source>
          <target state="translated">과도한 중간 정밀도 사용</target>
        </trans-unit>
        <trans-unit id="850b8f3261961cee008dc7e870d004b739205cdd" translate="yes" xml:space="preserve">
          <source>Enable explicit universal quantification. Implied by &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#extension-LiberalTypeSynonyms&quot;&gt;&lt;code&gt;LiberalTypeSynonyms&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt;&lt;code&gt;ExistentialQuantification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명시적인 범용 정량화를 활성화합니다. &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#extension-LiberalTypeSynonyms&quot;&gt; &lt;code&gt;LiberalTypeSynonyms&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt; &lt;code&gt;ExistentialQuantification&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a2069a36e4aed148dcc4b93acbe879d71f1612e" translate="yes" xml:space="preserve">
          <source>Enable explicit universal quantification. Implied by &lt;a href=&quot;scoped_type_variables#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;liberal_type_synonyms#extension-LiberalTypeSynonyms&quot;&gt;&lt;code&gt;LiberalTypeSynonyms&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;rank_polymorphism#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;existential_quantification#extension-ExistentialQuantification&quot;&gt;&lt;code&gt;ExistentialQuantification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명시적인 범용 정량화를 활성화합니다. &lt;a href=&quot;scoped_type_variables#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;liberal_type_synonyms#extension-LiberalTypeSynonyms&quot;&gt; &lt;code&gt;LiberalTypeSynonyms&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;rank_polymorphism#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;existential_quantification#extension-ExistentialQuantification&quot;&gt; &lt;code&gt;ExistentialQuantification&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1e23f92b67b82dae5978c28208084dc00d729ba" translate="yes" xml:space="preserve">
          <source>Enable flexible contexts.</source>
          <target state="translated">유연한 컨텍스트를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="4326272602235d776243b0be7267eabd4e4123f0" translate="yes" xml:space="preserve">
          <source>Enable flexible contexts. Implied by &lt;a href=&quot;#extension-ImplicitParams&quot;&gt;&lt;code&gt;ImplicitParams&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유연한 컨텍스트를 활성화하십시오. &lt;a href=&quot;#extension-ImplicitParams&quot;&gt; &lt;code&gt;ImplicitParams&lt;/code&gt; 에&lt;/a&gt; 의해 암시 됩니다.</target>
        </trans-unit>
        <trans-unit id="2bbf0112c1fe0e363a981405dda84c247bdba5ab" translate="yes" xml:space="preserve">
          <source>Enable flexible instances. Implies &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt;&lt;code&gt;TypeSynonymInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유연한 인스턴스를 활성화합니다. &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt; &lt;code&gt;TypeSynonymInstances&lt;/code&gt; 를&lt;/a&gt; 의미 합니다. .</target>
        </trans-unit>
        <trans-unit id="3352a1b4750a9aa10f1917af624b39ab936b924e" translate="yes" xml:space="preserve">
          <source>Enable flexible instances. Implies &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt;&lt;code&gt;TypeSynonymInstances&lt;/code&gt;&lt;/a&gt;. Implied by &lt;a href=&quot;#extension-ImplicitParams&quot;&gt;&lt;code&gt;ImplicitParams&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유연한 인스턴스를 활성화하십시오. 의미 &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt; &lt;code&gt;TypeSynonymInstances&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;#extension-ImplicitParams&quot;&gt; &lt;code&gt;ImplicitParams&lt;/code&gt; 에&lt;/a&gt; 의해 암시 됩니다.</target>
        </trans-unit>
        <trans-unit id="d26805fb37a973e7ee147bc664c35d1b340be680" translate="yes" xml:space="preserve">
          <source>Enable flexible instances. Implies &lt;a href=&quot;instances#extension-TypeSynonymInstances&quot;&gt;&lt;code&gt;TypeSynonymInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유연한 인스턴스를 활성화합니다. &lt;a href=&quot;instances#extension-TypeSynonymInstances&quot;&gt; &lt;code&gt;TypeSynonymInstances&lt;/code&gt; 를&lt;/a&gt; 의미 합니다 .</target>
        </trans-unit>
        <trans-unit id="41869def57dfc8e97f499d482e8a86e12eb096c1" translate="yes" xml:space="preserve">
          <source>Enable foreign function interface.</source>
          <target state="translated">외부 기능 인터페이스를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="0f8cf2b2ab3b0a3fd67079783e6bea9aa1aac099" translate="yes" xml:space="preserve">
          <source>Enable functional dependencies. Implies &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt;&lt;code&gt;MultiParamTypeClasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기능적 종속성을 활성화합니다. 의미 &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt; &lt;code&gt;MultiParamTypeClasses&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afd9df6dc1902e7ad4bd691642a100b0f3ad9bb4" translate="yes" xml:space="preserve">
          <source>Enable functional dependencies. Implies &lt;a href=&quot;multi_param_type_classes#extension-MultiParamTypeClasses&quot;&gt;&lt;code&gt;MultiParamTypeClasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기능적 종속성을 활성화합니다. &lt;a href=&quot;multi_param_type_classes#extension-MultiParamTypeClasses&quot;&gt; &lt;code&gt;MultiParamTypeClasses&lt;/code&gt; 를&lt;/a&gt; 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="d5e0f11a4cbb70ef7bbd7353f832b89ad0273ea4" translate="yes" xml:space="preserve">
          <source>Enable generalised algebraic data type syntax.</source>
          <target state="translated">일반화 된 대수 데이터 형식 구문을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e5e6667007f1410282ee8aee1040f24c3e4a48dd" translate="yes" xml:space="preserve">
          <source>Enable generalised algebraic data types. Implies &lt;a href=&quot;#extension-GADTSyntax&quot;&gt;&lt;code&gt;GADTSyntax&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반화 된 대수 데이터 형식을 사용합니다. &lt;a href=&quot;#extension-GADTSyntax&quot;&gt; &lt;code&gt;GADTSyntax&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; 를&lt;/a&gt; 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="11cd644627084063ad498a41c752ecc0987eeda4" translate="yes" xml:space="preserve">
          <source>Enable generalised algebraic data types. Implies &lt;a href=&quot;gadt_syntax#extension-GADTSyntax&quot;&gt;&lt;code&gt;GADTSyntax&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;let_generalisation#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반화 된 대수 데이터 유형을 사용합니다. &lt;a href=&quot;gadt_syntax#extension-GADTSyntax&quot;&gt; &lt;code&gt;GADTSyntax&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;let_generalisation#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; 를&lt;/a&gt; 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="50529dff39e89ed3c622cc4057f4bb947711bdc1" translate="yes" xml:space="preserve">
          <source>Enable generalised list comprehensions.</source>
          <target state="translated">일반화 된 목록 이해를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ad1061ac767434e280e0b9813bd1ee84f4e48a5f" translate="yes" xml:space="preserve">
          <source>Enable impredicative types. Implies &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Impredicative 유형을 사용하십시오. 의미 &lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd129253926b631b21a6cc200080ef9d21c612a9" translate="yes" xml:space="preserve">
          <source>Enable impredicative types. Implies &lt;a href=&quot;rank_polymorphism#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">impredicative 유형을 사용하십시오. &lt;a href=&quot;rank_polymorphism#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; 를&lt;/a&gt; 의미 합니다 .</target>
        </trans-unit>
        <trans-unit id="e41c57bb0980f5fdd76c940172f9efa34ea742d4" translate="yes" xml:space="preserve">
          <source>Enable incoherent instances. Implies &lt;a href=&quot;#extension-OverlappingInstances&quot;&gt;&lt;code&gt;OverlappingInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">불일치 인스턴스를 활성화합니다. &lt;a href=&quot;#extension-OverlappingInstances&quot;&gt; &lt;code&gt;OverlappingInstances&lt;/code&gt; 를&lt;/a&gt; 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="49227c64b728e44739b066893b79b4bfe3caaa6b" translate="yes" xml:space="preserve">
          <source>Enable incoherent instances. Implies &lt;a href=&quot;instances#extension-OverlappingInstances&quot;&gt;&lt;code&gt;OverlappingInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일관성없는 인스턴스를 활성화합니다. &lt;a href=&quot;instances#extension-OverlappingInstances&quot;&gt; &lt;code&gt;OverlappingInstances&lt;/code&gt; 를&lt;/a&gt; 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="57cf64c8f515c1d111db120414d8daba9910d89d" translate="yes" xml:space="preserve">
          <source>Enable injective type families. Implies &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인젝 티브 유형 패밀리를 사용하십시오. 의미 &lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33fd544223e9dc72295b439f2d29220ca23fdb8a" translate="yes" xml:space="preserve">
          <source>Enable injective type families. Implies &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주입 형 패밀리를 활성화합니다. &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; 를&lt;/a&gt; 의미 합니다 .</target>
        </trans-unit>
        <trans-unit id="95405195ca714f7bd874c9fad51414b5d2df5941" translate="yes" xml:space="preserve">
          <source>Enable instance signatures.</source>
          <target state="translated">인스턴스 서명을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="f026ddefab7b52844aaa5c0a7c4d2299590328c7" translate="yes" xml:space="preserve">
          <source>Enable interruptible FFI.</source>
          <target state="translated">인터럽트 가능한 FFI를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="f8bec893b8de6e24dabe9baf592c86e228746d47" translate="yes" xml:space="preserve">
          <source>Enable kind polymorphism. Implies &lt;a href=&quot;#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">종류 다형성을 활성화하십시오. 의미 &lt;a href=&quot;#extension-KindSignatures&quot;&gt; &lt;code&gt;KindSignatures&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e60d92685e5c8bb79d15fe7fc8bce572fb39736" translate="yes" xml:space="preserve">
          <source>Enable kind polymorphism. Implies &lt;a href=&quot;kind_signatures#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">종류 다형성을 활성화합니다. &lt;a href=&quot;kind_signatures#extension-KindSignatures&quot;&gt; &lt;code&gt;KindSignatures&lt;/code&gt; 를&lt;/a&gt; 의미 합니다 .</target>
        </trans-unit>
        <trans-unit id="28c592367c7c5720ed04c4526a2bf15c61e75796" translate="yes" xml:space="preserve">
          <source>Enable kind signatures. Implied by &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">종류 서명을 사용합니다. &lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-PolyKinds&quot;&gt; &lt;code&gt;PolyKinds&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="39ebe8e63ea029f16915668cfa0424a6547bf1f1" translate="yes" xml:space="preserve">
          <source>Enable kind signatures. Implied by &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;poly_kinds#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">종류 서명을 활성화합니다. &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;poly_kinds#extension-PolyKinds&quot;&gt; &lt;code&gt;PolyKinds&lt;/code&gt; 에서&lt;/a&gt; 암시합니다 .</target>
        </trans-unit>
        <trans-unit id="cc71c763b3552a388011fca4127d28ce00a0eb1e" translate="yes" xml:space="preserve">
          <source>Enable lambda eta-expansion. Always enabled by default.</source>
          <target state="translated">람다 에타 확장을 활성화합니다. 항상 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="689ead6570e480b4e1ffb504a261ea5b1e0ed010" translate="yes" xml:space="preserve">
          <source>Enable lambda-case expressions.</source>
          <target state="translated">람다 케이스 표현식을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c06b11c156a14e83368d8563b0b34e00c0d677da" translate="yes" xml:space="preserve">
          <source>Enable late lambda lifting on the STG intermediate language. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt;&lt;code&gt;-O2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">STG 중급 언어에서 늦은 람다 리프팅을 사용하십시오. &lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt; &lt;code&gt;-O2&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3633c2d467dbf2065cdace37c5a7616a0a0f2767" translate="yes" xml:space="preserve">
          <source>Enable level 1 optimisations</source>
          <target state="translated">레벨 1 최적화 사용</target>
        </trans-unit>
        <trans-unit id="c47ff74ce4aab15323051d4ceb4d898c6d32f098" translate="yes" xml:space="preserve">
          <source>Enable level 2 optimisations</source>
          <target state="translated">레벨 2 최적화 사용</target>
        </trans-unit>
        <trans-unit id="439cb1edc272b23893b8c0260417223d1cae4680" translate="yes" xml:space="preserve">
          <source>Enable lexical scoping of type variables explicitly introduced with &lt;code&gt;forall&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forall&lt;/code&gt; 로 명시 적으로 도입 된 유형 변수의 어휘 범위를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="9fa1fe31d1863a7ed67358a79bb9989a519db23c" translate="yes" xml:space="preserve">
          <source>Enable lexically-scoped type variables.</source>
          <target state="translated">어휘 범위 유형 변수를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="24f9edb5057a87aedc95c9bdc722b549a452ae19" translate="yes" xml:space="preserve">
          <source>Enable liberalised type synonyms.</source>
          <target state="translated">자유화 된 유형 동의어를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a8073355dc56ffd3c50e6691ec021e8dbeafccab" translate="yes" xml:space="preserve">
          <source>Enable linear types.</source>
          <target state="translated">선형 유형을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="bfdaec126af72722e10a1c8b3eee19954a886d31" translate="yes" xml:space="preserve">
          <source>Enable list comprehension syntax for arbitrary monads.</source>
          <target state="translated">임의 모나드에 대해 목록 이해 구문을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="945cecd75646ac2b05bb1b2cc0c956dc0e8ca4cf" translate="yes" xml:space="preserve">
          <source>Enable monad comprehensions.</source>
          <target state="translated">모나드 이해를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="697b56ee8c9edbaa577fbb0c301b9944e1291bc8" translate="yes" xml:space="preserve">
          <source>Enable monadfail desugaring.</source>
          <target state="translated">monadfail 탈당을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="650df673a1f730b2b32deb98dfea55a4a4e7231a" translate="yes" xml:space="preserve">
          <source>Enable multi parameter type classes. Implied by &lt;a href=&quot;#extension-FunctionalDependencies&quot;&gt;&lt;code&gt;FunctionalDependencies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다중 매개 변수 유형 클래스를 사용하십시오. &lt;a href=&quot;#extension-FunctionalDependencies&quot;&gt; &lt;code&gt;FunctionalDependencies&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f69a4b6ad84d9ae4807f8453e3b64104873e1fb" translate="yes" xml:space="preserve">
          <source>Enable multi parameter type classes. Implied by &lt;a href=&quot;functional_dependencies#extension-FunctionalDependencies&quot;&gt;&lt;code&gt;FunctionalDependencies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다중 매개 변수 유형 클래스를 활성화합니다. &lt;a href=&quot;functional_dependencies#extension-FunctionalDependencies&quot;&gt; &lt;code&gt;FunctionalDependencies&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="75f6401e1cbb85d3018480be84448da53cee9797" translate="yes" xml:space="preserve">
          <source>Enable multi-way if-expressions.</source>
          <target state="translated">다 방향 if- 표현식을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="4a22cd162bf275df1679f9356e0b6ce892b43386" translate="yes" xml:space="preserve">
          <source>Enable named wildcards.</source>
          <target state="translated">명명 된 와일드 카드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e8cee99420e623d815d4e4e8e750c760013f5905" translate="yes" xml:space="preserve">
          <source>Enable negative numeric literals.</source>
          <target state="translated">음수 리터럴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="269c68a2f9c2eaacb202b8ac73d35fbab7f80f1c" translate="yes" xml:space="preserve">
          <source>Enable newtype deriving.</source>
          <target state="translated">newtype 파생을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="c5bfd283c7c90abdc7195043d24e79fcf5733c81" translate="yes" xml:space="preserve">
          <source>Enable one or more disabled breakpoints by number (use &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt;&lt;code&gt;:show breaks&lt;/code&gt;&lt;/a&gt; to see the number and state of each breakpoint). The &lt;code&gt;*&lt;/code&gt; form enables all the disabled breakpoints.</source>
          <target state="translated">하나 이상의 비활성화 된 중단 점을 숫자로 활성화합니다 ( 각 중단 점의 숫자와 상태를 보려면 &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt; &lt;code&gt;:show breaks&lt;/code&gt; &lt;/a&gt; 를 사용 ). &lt;code&gt;*&lt;/code&gt; 양식은 모든 장애인 중단 점을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9efaa31c4711f7aa0d53be180b0d6d7dcd212d60" translate="yes" xml:space="preserve">
          <source>Enable only Template Haskell&amp;rsquo;s quotation syntax.</source>
          <target state="translated">Template Haskell의 인용 구문 만 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="77f7c18a24e32054383c4147d6eed25085f3bc49" translate="yes" xml:space="preserve">
          <source>Enable only breakpoints in the current module and resume evaluation at the last breakpoint.</source>
          <target state="translated">현재 모듈에서 중단 점 만 활성화하고 마지막 중단 점에서 평가를 재개하십시오.</target>
        </trans-unit>
        <trans-unit id="226341053ffc8cb7f6b6a76bdb04dd3185b7e9e9" translate="yes" xml:space="preserve">
          <source>Enable only breakpoints in the current top-level binding and resume evaluation at the last breakpoint. Continuation with &lt;a href=&quot;#ghci-cmd-:steplocal&quot;&gt;&lt;code&gt;:steplocal&lt;/code&gt;&lt;/a&gt; is not possible if this last breakpoint was hit by an error (&lt;a href=&quot;#ghc-flag--fbreak-on-error&quot;&gt;&lt;code&gt;-fbreak-on-error&lt;/code&gt;&lt;/a&gt;) or an exception (&lt;a href=&quot;#ghc-flag--fbreak-on-exception&quot;&gt;&lt;code&gt;-fbreak-on-exception&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">현재 최상위 바인딩에서 중단 점 만 활성화하고 마지막 중단 점에서 평가를 재개하십시오. 와 연속은 &lt;a href=&quot;#ghci-cmd-:steplocal&quot;&gt; &lt;code&gt;:steplocal&lt;/code&gt; &lt;/a&gt; 이 마지막 중단 점 오류 (맞았다이 불가능합니다 &lt;a href=&quot;#ghc-flag--fbreak-on-error&quot;&gt; &lt;code&gt;-fbreak-on-error&lt;/code&gt; &lt;/a&gt; ) 또는 예외 ( &lt;a href=&quot;#ghc-flag--fbreak-on-exception&quot;&gt; &lt;code&gt;-fbreak-on-exception&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7d8cf1812fdb008144911eca332e9b07e66bcaaf" translate="yes" xml:space="preserve">
          <source>Enable or disable a set of language extensions.</source>
          <target state="translated">언어 확장 세트를 활성화 또는 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="2c7e3b43e6842c61f6fe6edf51795fa10bd54f78" translate="yes" xml:space="preserve">
          <source>Enable overlapping instances.</source>
          <target state="translated">겹치는 인스턴스를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="5e2791d5eaaaccedd90a9949c14b44bbbd93211e" translate="yes" xml:space="preserve">
          <source>Enable overloaded labels.</source>
          <target state="translated">오버로드 된 레이블을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="641b0cc24aa13f86fd26dcdc8abcf7da3131460f" translate="yes" xml:space="preserve">
          <source>Enable overloaded list syntax (e.g. desugaring of lists via the &lt;code&gt;IsList&lt;/code&gt; class).</source>
          <target state="translated">오버로드 된 목록 구문을 활성화합니다 (예 : &lt;code&gt;IsList&lt;/code&gt; 클래스 를 통한 목록의 설탕 제거 ).</target>
        </trans-unit>
        <trans-unit id="b63255c2a1397689b0ba26aa64b623dabb168284" translate="yes" xml:space="preserve">
          <source>Enable overloaded lists.</source>
          <target state="translated">오버로드 된 목록을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="b5bdf703c8f658e2365911c201df7fb2e9394e0e" translate="yes" xml:space="preserve">
          <source>Enable overloaded string literals (e.g. string literals desugared via the &lt;code&gt;IsString&lt;/code&gt; class).</source>
          <target state="translated">오버로드 된 문자열 리터럴 (예 : &lt;code&gt;IsString&lt;/code&gt; 클래스 를 통해 desugared 문자열 리터럴)을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="fc4205d1d9f1beedfb1fc204f80752496dd47ca1" translate="yes" xml:space="preserve">
          <source>Enable overloaded string literals.</source>
          <target state="translated">오버로드 된 문자열 리터럴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f1d808f54af51a55c6a6292b94ade473c37c27d9" translate="yes" xml:space="preserve">
          <source>Enable package-qualified imports.</source>
          <target state="translated">패키지 인증 가져 오기를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="55bc462a3b3673fab3a44a5354f3245f1525e80a" translate="yes" xml:space="preserve">
          <source>Enable parallel list comprehensions.</source>
          <target state="translated">병렬 목록 이해를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c274ac88417ae44be8662fc75bda264408b01b7a" translate="yes" xml:space="preserve">
          <source>Enable parsing of multiline commands. A multiline command is prompted for when the current input line contains open layout contexts (see &lt;a href=&quot;#ghci-multiline&quot;&gt;Multiline input&lt;/a&gt;).</source>
          <target state="translated">여러 줄 명령 구문 분석을 활성화합니다. 현재 입력 행에 열린 레이아웃 컨텍스트가 포함 된 경우 다중 행 명령이 프롬프트됩니다 (여러 행 &lt;a href=&quot;#ghci-multiline&quot;&gt;입력&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="03fc9b03b528176197da9f66dcdc4951b4a029a2" translate="yes" xml:space="preserve">
          <source>Enable partial type signatures.</source>
          <target state="translated">부분 유형 서명을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="678039de73b40ca6f06a8dfe6603f405d52d83e5" translate="yes" xml:space="preserve">
          <source>Enable pattern synonyms.</source>
          <target state="translated">패턴 동의어를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f857aa688ce9ab4daed865d31f56108bd493683f" translate="yes" xml:space="preserve">
          <source>Enable postfix operators.</source>
          <target state="translated">접미사 연산자를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="73a97faacd508b20643d8bb8196ee56547056fee" translate="yes" xml:space="preserve">
          <source>Enable prim calling convention. Intended for internal use only.</source>
          <target state="translated">prim 호출 규칙을 활성화합니다. 내부 전용입니다.</target>
        </trans-unit>
        <trans-unit id="83571375f453273f065a1dc278b6a453a424eb12" translate="yes" xml:space="preserve">
          <source>Enable qualified do-notation desugaring.</source>
          <target state="translated">정규화 된 do-notation desugaring을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="15c1c905af86cff768f0755bc1a68c853ae506ac" translate="yes" xml:space="preserve">
          <source>Enable quasiquotation.</source>
          <target state="translated">준 따옴표를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b7a8e551e6ca57f67e46c1da907086b96dcc303a" translate="yes" xml:space="preserve">
          <source>Enable quotation subset of &lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt; 의 인용 부분 집합을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="0019a3747f51fd3cd1b6ca7fa1ba25069839ea78" translate="yes" xml:space="preserve">
          <source>Enable quotation subset of &lt;a href=&quot;template_haskell#template-haskell&quot;&gt;Template Haskell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;template_haskell#template-haskell&quot;&gt;템플릿 Haskell&lt;/a&gt; 의 인용 부분 집합을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="ebc1ef5709306d9971dcb9eda2236b99dc7d59a4" translate="yes" xml:space="preserve">
          <source>Enable rank-2 types. Synonym for &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순위 -2 유형을 사용하십시오. 동의어 &lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6cde8422d2250960fb77ec8c9d6bde3646c99029" translate="yes" xml:space="preserve">
          <source>Enable rank-2 types. Synonym for &lt;a href=&quot;rank_polymorphism#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순위 2 유형을 활성화합니다. &lt;a href=&quot;rank_polymorphism#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; 의&lt;/a&gt; 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="f13aafaba00d9d488792001162ff3906e6002af5" translate="yes" xml:space="preserve">
          <source>Enable rank-N types. Implied by &lt;a href=&quot;#extension-ImpredicativeTypes&quot;&gt;&lt;code&gt;ImpredicativeTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">rank-N 유형을 활성화하십시오. &lt;a href=&quot;#extension-ImpredicativeTypes&quot;&gt; &lt;code&gt;ImpredicativeTypes&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="e61568d046f38c0ba8963b80d5c59b4e7d397c9d" translate="yes" xml:space="preserve">
          <source>Enable rank-N types. Implied by &lt;a href=&quot;impredicative_types#extension-ImpredicativeTypes&quot;&gt;&lt;code&gt;ImpredicativeTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순위 N 유형을 활성화합니다. &lt;a href=&quot;impredicative_types#extension-ImpredicativeTypes&quot;&gt; &lt;code&gt;ImpredicativeTypes&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="35d201b78f29300ae754944a4864d3e077be53c6" translate="yes" xml:space="preserve">
          <source>Enable rebinding of a variety of usually-built-in operations.</source>
          <target state="translated">일반적으로 내장 된 다양한 작업을 리 바인드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eba90e2bda1bc60145ef2cb456c93bafe9dce514" translate="yes" xml:space="preserve">
          <source>Enable record field disambiguation. Implied by &lt;a href=&quot;#extension-RecordWildCards&quot;&gt;&lt;code&gt;RecordWildCards&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레코드 필드 명확성을 활성화합니다. &lt;a href=&quot;#extension-RecordWildCards&quot;&gt; &lt;code&gt;RecordWildCards&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="72464359f4fb7d208a012b51cc88eaa3a5ae43ad" translate="yes" xml:space="preserve">
          <source>Enable record field disambiguation. Implied by &lt;a href=&quot;record_wildcards#extension-RecordWildCards&quot;&gt;&lt;code&gt;RecordWildCards&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레코드 필드 명확성을 사용합니다. &lt;a href=&quot;record_wildcards#extension-RecordWildCards&quot;&gt; &lt;code&gt;RecordWildCards&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="c9fffa2ce9dcd6b56aaae36fb207b3163dc5fe35" translate="yes" xml:space="preserve">
          <source>Enable record puns.</source>
          <target state="translated">레코드 펑크를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="08ed55fa823e92ab0f2dd6ff3b40e3583eb7b86a" translate="yes" xml:space="preserve">
          <source>Enable record wildcards. Implies &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt;&lt;code&gt;DisambiguateRecordFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레코드 와일드 카드를 사용하십시오. 의미 &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt; &lt;code&gt;DisambiguateRecordFields&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a43d72d917f54d3a7e8515324432a2e470439ed5" translate="yes" xml:space="preserve">
          <source>Enable record wildcards. Implies &lt;a href=&quot;disambiguate_record_fields#extension-DisambiguateRecordFields&quot;&gt;&lt;code&gt;DisambiguateRecordFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레코드 와일드 카드를 활성화합니다. 의미 &lt;a href=&quot;disambiguate_record_fields#extension-DisambiguateRecordFields&quot;&gt; &lt;code&gt;DisambiguateRecordFields&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af1aee07cc13edf44a2f7485797c3d50700fceab" translate="yes" xml:space="preserve">
          <source>Enable recursive do (mdo) notation.</source>
          <target state="translated">재귀 do (mdo) 표기법을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0915be3c2ddaf49145787e8ab924f6a78739c9bf" translate="yes" xml:space="preserve">
          <source>Enable role annotations.</source>
          <target state="translated">역할 주석을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="019d98d3d4770ef574e87f03f5cdcae2b6cb8d5a" translate="yes" xml:space="preserve">
          <source>Enable runtime event tracing</source>
          <target state="translated">런타임 이벤트 추적 사용</target>
        </trans-unit>
        <trans-unit id="1d1749d20b52484ae18ca58af95d49ebe1d925ca" translate="yes" xml:space="preserve">
          <source>Enable shortcutting on assembly. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt;&lt;code&gt;-O2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어셈블리에서 바로 가기를 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt; &lt;code&gt;-O2&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="9668de77754998933dd077a21972cda44cd10687" translate="yes" xml:space="preserve">
          <source>Enable standalone deriving.</source>
          <target state="translated">독립형 파생을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="52987a1b0824395fb0ad3ae3052eb53a03496d86" translate="yes" xml:space="preserve">
          <source>Enable static control flow prediction. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정적 제어 흐름 예측을 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="2482a8aa9f2b1686343623a30bc0aeac1d9db536" translate="yes" xml:space="preserve">
          <source>Enable static pointers.</source>
          <target state="translated">정적 포인터를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="08f61575d4970021c256263b7054dabd22fe0c95" translate="yes" xml:space="preserve">
          <source>Enable support for &amp;lsquo;fractional&amp;rsquo; integer literals.</source>
          <target state="translated">'fractional'정수 리터럴을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="88f7cfee7e3ae047f18724e5731359b05036df6d" translate="yes" xml:space="preserve">
          <source>Enable support for 'fractional' integer literals.</source>
          <target state="translated">'분수'정수 리터럴에 대한 지원을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="2f1c5860147458c9c411dce48e0a991123369a9a" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;#hex-float-literals&quot;&gt;hexadecimal floating point literals&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#hex-float-literals&quot;&gt;16 진 부동 소수점 리터럴을&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="f8c3de3c7f853349418e080d1b858062c189cb63" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;#numeric-underscores&quot;&gt;numeric underscores&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numeric-underscores&quot;&gt;숫자 밑줄&lt;/a&gt; 지원을 활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="e0660cf7055af5f1702e620c124792044575f822" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;hex_float_literals#hex-float-literals&quot;&gt;hexadecimal floating point literals&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;hex_float_literals#hex-float-literals&quot;&gt;16 진 부동 소수점 리터럴에&lt;/a&gt; 대한 지원을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="d992db339c1dc29764ea18bbc1c7a267b24a2ef6" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;numeric_underscores#numeric-underscores&quot;&gt;numeric underscores&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numeric_underscores#numeric-underscores&quot;&gt;숫자 밑줄&lt;/a&gt; 지원을 활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="667eff18cad8e297ca4abf33aa62556fdeeac7fa" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;code&gt;n+k&lt;/code&gt; patterns. Implied by &lt;a href=&quot;#extension-Haskell98&quot;&gt;&lt;code&gt;Haskell98&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;n+k&lt;/code&gt; 패턴 지원을 활성화 합니다. &lt;a href=&quot;#extension-Haskell98&quot;&gt; &lt;code&gt;Haskell98&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="534b21cb01ec0cfc145ee689f861563ba2b2e0e0" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;code&gt;n+k&lt;/code&gt; patterns. Implied by &lt;a href=&quot;control#extension-Haskell98&quot;&gt;&lt;code&gt;Haskell98&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;n+k&lt;/code&gt; 패턴에 대한 지원을 활성화 합니다. &lt;a href=&quot;control#extension-Haskell98&quot;&gt; &lt;code&gt;Haskell98&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a1c68e2c3edf441d78bf352f8acf0ee0a7ac228" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;code&gt;n+k&lt;/code&gt; patterns. Implied by &lt;code&gt;Haskell98&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n+k&lt;/code&gt; 패턴 지원을 활성화 합니다. &lt;code&gt;Haskell98&lt;/code&gt; 에 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="7649e181db1c35c42e859bc3fa4b856831e31805" translate="yes" xml:space="preserve">
          <source>Enable support for binary literals.</source>
          <target state="translated">이진 리터럴을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="415d32b3d2f203f6b845a097cdb0d0d61f76cc62" translate="yes" xml:space="preserve">
          <source>Enable support for negative literals.</source>
          <target state="translated">음수 리터럴을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="189de576dfb6ff1d6f6ad811522267b7af45de77" translate="yes" xml:space="preserve">
          <source>Enable the &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Safe mode.</source>
          <target state="translated">&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Safe 모드를 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="25743af593811888b0518508cbca8eade3f31a83" translate="yes" xml:space="preserve">
          <source>Enable the &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Trustworthy mode.</source>
          <target state="translated">&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Trustworthy 모드를 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="80e923385798897248e04ccad5edca39571e9258" translate="yes" xml:space="preserve">
          <source>Enable the C preprocessor.</source>
          <target state="translated">C 전처리기를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="dc9abd71cf353e243958088900a198f5ed332904" translate="yes" xml:space="preserve">
          <source>Enable the CAPI calling convention.</source>
          <target state="translated">CAPI 호출 규칙을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f7495ced2060bbe81be5403148d082f6169f2708" translate="yes" xml:space="preserve">
          <source>Enable the concurrent mark-and-sweep garbage collector for old generation collectors. Typically GHC uses a stop-the-world copying garbage collector for all generations. This can cause long pauses in execution during major garbage collections. &lt;a href=&quot;#rts-flag---nonmoving-gc&quot;&gt;&lt;code&gt;--nonmoving-gc&lt;/code&gt;&lt;/a&gt; enables the use of a concurrent mark-and-sweep garbage collector for oldest generation collections. Under this collection strategy oldest-generation garbage collection can proceed concurrently with mutation.</source>
          <target state="translated">이전 세대 수집기에 대해 동시 표시 및 청소 가비지 수집기를 활성화합니다. 일반적으로 GHC는 모든 세대에 대해 stop-the-world 복사 가비지 수집기를 사용합니다. 이로 인해 주요 가비지 수집 중에 실행이 오래 일시 중지 될 수 있습니다. &lt;a href=&quot;#rts-flag---nonmoving-gc&quot;&gt; &lt;code&gt;--nonmoving-gc&lt;/code&gt; &lt;/a&gt; 사용하면 가장 오래된 세대 컬렉션에 대해 동시 표시 및 청소 가비지 수집기를 사용할 수 있습니다. 이 수집 전략에서 가장 오래된 가비지 수집은 변이와 동시에 진행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90cdb31a72c8f91e0a19b2f80b0fa1065ba9659d" translate="yes" xml:space="preserve">
          <source>Enable the linear arrow &lt;code&gt;a %1 -&amp;gt; b&lt;/code&gt; and the multiplicity-polymorphic arrow &lt;code&gt;a %m -&amp;gt; b&lt;/code&gt;.</source>
          <target state="translated">선형 화살표 &lt;code&gt;a %1 -&amp;gt; b&lt;/code&gt; 및 다중 다형성 화살표 &lt;code&gt;a %m -&amp;gt; b&lt;/code&gt; 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="67ee8d0579fc9a4c046a67aa96e53c7ab16186e4" translate="yes" xml:space="preserve">
          <source>Enable the use of Unicode characters in place of their equivalent ASCII sequences.</source>
          <target state="translated">동등한 ASCII 순서 대신 유니 코드 문자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2137854175d16983fc62d36f41242c31b90c4a78" translate="yes" xml:space="preserve">
          <source>Enable the use of a &lt;a href=&quot;phases#pre-processor&quot;&gt;pre-processor&lt;/a&gt; (set with &lt;code&gt;-pgmF ⟨cmd⟩&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;phases#pre-processor&quot;&gt;전 처리기&lt;/a&gt; 사용 가능 ( &lt;code&gt;-pgmF ⟨cmd⟩&lt;/code&gt; 로 설정 )</target>
        </trans-unit>
        <trans-unit id="749d1c5007a0d54b14b5649235afad1ebddb11aa" translate="yes" xml:space="preserve">
          <source>Enable the use of newtypes over types with non-lifted runtime representations.</source>
          <target state="translated">해제되지 않은 런타임 표현이있는 유형에 대한 newtypes 사용을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="c650956f9c6e6cf54a39137e8948643662ea120b" translate="yes" xml:space="preserve">
          <source>Enable the use of un-parenthesized negative numeric literals.</source>
          <target state="translated">괄호로 묶지 않은 음수 리터럴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c45610b771fe1f9a6fb3b1aacc4532670857c5e2" translate="yes" xml:space="preserve">
          <source>Enable the use of unboxed sum syntax.</source>
          <target state="translated">박스형 합계 구문 사용을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="03679c5ccfe3358d6087ae69e2701d4ca5a4c2d2" translate="yes" xml:space="preserve">
          <source>Enable the use of unboxed tuple syntax.</source>
          <target state="translated">박스형 튜플 구문 사용을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="5a2b1709df1369d2b6be5f52fd59db2a6a7be699" translate="yes" xml:space="preserve">
          <source>Enable the worker-wrapper transformation after a strictness analysis pass. Implied by &lt;a href=&quot;#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;, and by &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt;&lt;code&gt;-fstrictness&lt;/code&gt;&lt;/a&gt;. Disabled by &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt;&lt;code&gt;-fno-strictness&lt;/code&gt;&lt;/a&gt;. Enabling &lt;a href=&quot;#ghc-flag--fworker-wrapper&quot;&gt;&lt;code&gt;-fworker-wrapper&lt;/code&gt;&lt;/a&gt; while strictness analysis is disabled (by &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt;&lt;code&gt;-fno-strictness&lt;/code&gt;&lt;/a&gt;) has no effect.</source>
          <target state="translated">엄격 성 분석 통과 후 작업자-래퍼 변환을 활성화합니다. &lt;a href=&quot;#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt; &lt;code&gt;-fstrictness&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 . &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt; &lt;code&gt;-fno-strictness&lt;/code&gt; 에&lt;/a&gt; 의해 비활성화됩니다 . 엄격 성 분석이 비활성화되어있는 동안 ( &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt; &lt;code&gt;-fno-strictness&lt;/code&gt; 에&lt;/a&gt; 의해) &lt;a href=&quot;#ghc-flag--fworker-wrapper&quot;&gt; &lt;code&gt;-fworker-wrapper&lt;/code&gt; &lt;/a&gt; 를 활성화 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fa2a2dda0b31f9f928c6d58570c000540a18e432" translate="yes" xml:space="preserve">
          <source>Enable the worker-wrapper transformation.</source>
          <target state="translated">작업자 래퍼 변환을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9f93dd5661b6acbc1e51b9f475abea6695396ac8" translate="yes" xml:space="preserve">
          <source>Enable ticky-ticky profiling.</source>
          <target state="translated">까다로운 프로파일 링을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="48ddd56d64e06a3b8ce12335f20c3fee95537562" translate="yes" xml:space="preserve">
          <source>Enable tuple sections.</source>
          <target state="translated">튜플 섹션을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6dcf335b3bf4cfebf060e12a3add25aaf101fa39" translate="yes" xml:space="preserve">
          <source>Enable type application syntax in terms and types.</source>
          <target state="translated">용어 및 유형에서 유형 애플리케이션 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4a7ac86d0b32a41f907046e6e8c4f6bb355da9c9" translate="yes" xml:space="preserve">
          <source>Enable type families. Implies &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt;&lt;code&gt;ExplicitNamespaces&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형 군을 활성화합니다. &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt; &lt;code&gt;ExplicitNamespaces&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#extension-KindSignatures&quot;&gt; &lt;code&gt;KindSignatures&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; 를&lt;/a&gt; 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="4597b2380b3a69d9ec738244fea58cce0fa2b1d8" translate="yes" xml:space="preserve">
          <source>Enable type families. Implies &lt;a href=&quot;explicit_namespaces#extension-ExplicitNamespaces&quot;&gt;&lt;code&gt;ExplicitNamespaces&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kind_signatures#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;let_generalisation#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형 패밀리를 활성화합니다. 의미 &lt;a href=&quot;explicit_namespaces#extension-ExplicitNamespaces&quot;&gt; &lt;code&gt;ExplicitNamespaces&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kind_signatures#extension-KindSignatures&quot;&gt; &lt;code&gt;KindSignatures&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;let_generalisation#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f131239dcaeae55c90482a0ebe8d8ffa4c94719" translate="yes" xml:space="preserve">
          <source>Enable type operators. Implies &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt;&lt;code&gt;ExplicitNamespaces&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형 연산자를 활성화하십시오. &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt; &lt;code&gt;ExplicitNamespaces&lt;/code&gt; 를&lt;/a&gt; 암시 합니다.</target>
        </trans-unit>
        <trans-unit id="1d3cec713be8dcc452db0f765e36897775787274" translate="yes" xml:space="preserve">
          <source>Enable type operators. Implies &lt;a href=&quot;explicit_namespaces#extension-ExplicitNamespaces&quot;&gt;&lt;code&gt;ExplicitNamespaces&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형 연산자를 활성화합니다. &lt;a href=&quot;explicit_namespaces#extension-ExplicitNamespaces&quot;&gt; &lt;code&gt;ExplicitNamespaces&lt;/code&gt; 를&lt;/a&gt; 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="02d25617d434cac48bef1bb71b64ea74a3dab539" translate="yes" xml:space="preserve">
          <source>Enable type synonyms in instance heads. Implied by &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인스턴스 헤드에서 유형 동의어를 활성화합니다. &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3194e617b814832daf668371de53dd977a527975" translate="yes" xml:space="preserve">
          <source>Enable type synonyms in instance heads. Implied by &lt;a href=&quot;instances#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인스턴스 헤드에서 유형 동의어를 활성화합니다. &lt;a href=&quot;instances#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f256112b76d0ff73c0778a50bf9f7f749fa9546" translate="yes" xml:space="preserve">
          <source>Enable unboxed sums.</source>
          <target state="translated">박스형 합계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8950dbd6753cb55c68f3b36b9f54468dae288119" translate="yes" xml:space="preserve">
          <source>Enable undecidable instances.</source>
          <target state="translated">결정 불가능한 인스턴스를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="86a271d0c6de75affc7b29be9c1a8526a871bbe4" translate="yes" xml:space="preserve">
          <source>Enable unicode syntax.</source>
          <target state="translated">유니 코드 구문을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="6ca85839b62537fed50de348574384ebdebe5e8f" translate="yes" xml:space="preserve">
          <source>Enable unlifted FFI types</source>
          <target state="translated">해제되지 않은 FFI 유형 활성화</target>
        </trans-unit>
        <trans-unit id="867577b46e27e5ce64e3429f2edb8849a716ea71" translate="yes" xml:space="preserve">
          <source>Enable unlifted newtypes.</source>
          <target state="translated">해제되지 않은 새로운 유형을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="a3fc6982af8002e906b1fc895fc95f73b9bd1210" translate="yes" xml:space="preserve">
          <source>Enable use of &lt;code&gt;n+k&lt;/code&gt; patterns.</source>
          <target state="translated">&lt;code&gt;n+k&lt;/code&gt; 패턴 사용을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="c3e458ca0803a00d717f91c063a373430c0b5912" translate="yes" xml:space="preserve">
          <source>Enable use of explicit namespaces in module export lists.</source>
          <target state="translated">모듈 내보내기 목록에서 명시 적 네임 스페이스 사용을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="368969223f79a3c9857720fbb2b722cc770acb6b" translate="yes" xml:space="preserve">
          <source>Enable use of the &lt;code&gt;#foo&lt;/code&gt; overloaded label syntax.</source>
          <target state="translated">의 사용 가능 &lt;code&gt;#foo&lt;/code&gt; 과부하 레이블 구문을.</target>
        </trans-unit>
        <trans-unit id="17796a3400f2ffd4a892cd990173e9f4b6f2b2fd" translate="yes" xml:space="preserve">
          <source>Enable using the keyword &lt;code&gt;type&lt;/code&gt; to specify the namespace of entries in imports and exports (&lt;a href=&quot;#explicit-namespaces&quot;&gt;Explicit namespaces in import/export&lt;/a&gt;). Implied by &lt;a href=&quot;#extension-TypeOperators&quot;&gt;&lt;code&gt;TypeOperators&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키워드 &lt;code&gt;type&lt;/code&gt; 을 사용하여 가져 오기 및 내보내기에서 항목의 네임 스페이스를 지정하십시오 ( &lt;a href=&quot;#explicit-namespaces&quot;&gt;import / export의 명시 적 네임 스페이스&lt;/a&gt; ). &lt;a href=&quot;#extension-TypeOperators&quot;&gt; &lt;code&gt;TypeOperators&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="4bce96023cbd697ad15c689c4c1ce193b97e00eb" translate="yes" xml:space="preserve">
          <source>Enable using the keyword &lt;code&gt;type&lt;/code&gt; to specify the namespace of entries in imports and exports (&lt;a href=&quot;explicit_namespaces#explicit-namespaces&quot;&gt;Explicit namespaces in import/export&lt;/a&gt;). Implied by &lt;a href=&quot;type_operators#extension-TypeOperators&quot;&gt;&lt;code&gt;TypeOperators&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키워드 &lt;code&gt;type&lt;/code&gt; 을 사용하여 가져 오기 및 내보내기에서 항목의 네임 스페이스를 지정합니다 ( &lt;a href=&quot;explicit_namespaces#explicit-namespaces&quot;&gt;import / export의 명시 적 네임 스페이스&lt;/a&gt; ). &lt;a href=&quot;type_operators#extension-TypeOperators&quot;&gt; &lt;code&gt;TypeOperators&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;type_families#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; 에서&lt;/a&gt; 암시합니다 .</target>
        </trans-unit>
        <trans-unit id="ee2d0b320ebd6756514d2fec9373813030807f6e" translate="yes" xml:space="preserve">
          <source>Enable view patterns.</source>
          <target state="translated">뷰 패턴을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="2f3ba31beddd336417507be0850e6e16844e3291" translate="yes" xml:space="preserve">
          <source>EnableEcho</source>
          <target state="translated">EnableEcho</target>
        </trans-unit>
        <trans-unit id="6b864fdbf8dc7330bc94244b55316332116a3627" translate="yes" xml:space="preserve">
          <source>EnableParity</source>
          <target state="translated">EnableParity</target>
        </trans-unit>
        <trans-unit id="9a6462b0bc14cae13883ef4d3fcb336fa2412048" translate="yes" xml:space="preserve">
          <source>Enabled by &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt;, GHC supports explicit kind quantification, as in these examples:</source>
          <target state="translated">&lt;a href=&quot;#extension-PolyKinds&quot;&gt; &lt;code&gt;PolyKinds&lt;/code&gt; &lt;/a&gt; 에 의해 활성화 된 GHC는 다음 예제와 같이 명시적인 종류 수량화를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="570db5bed1f35fb2ef71b63b8fc35d70e100a1c9" translate="yes" xml:space="preserve">
          <source>Enables an alternative algorithm for choosing where to use &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; in conjunction with the &lt;code&gt;ApplicativeDo&lt;/code&gt; language extension. This algorithm always finds the optimal solution, but it is expensive: &lt;code&gt;O(n^3)&lt;/code&gt;, so this option can lead to long compile times when there are very large &lt;code&gt;do&lt;/code&gt; expressions (over 100 statements). The default &lt;code&gt;ApplicativeDo&lt;/code&gt; algorithm is &lt;code&gt;O(n^2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ApplicativeDo&lt;/code&gt; 언어 확장 과 함께 &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; 를 사용할 위치를 선택하기위한 대체 알고리즘을 사용 합니다. 이 알고리즘은 항상 최적의 솔루션을 찾지 만 비용이 많이 듭니다. &lt;code&gt;O(n^3)&lt;/code&gt; 옵션은 매우 큰 &lt;code&gt;do&lt;/code&gt; 표현식 (100 개 이상의 명령문) 이있는 경우 컴파일 시간이 길어질 수 있습니다 . 기본 &lt;code&gt;ApplicativeDo&lt;/code&gt; 알고리즘은 &lt;code&gt;O(n^2)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9260d5891afd6ba2346cc006c3967644a1da15f" translate="yes" xml:space="preserve">
          <source>Enables deriving strategies.</source>
          <target state="translated">파생 전략을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="4f809060a13ee7b99539f37d1ede8c8ded1cb5d3" translate="yes" xml:space="preserve">
          <source>Enables exitification optimisation. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">종료 최적화를 활성화합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; 에&lt;/a&gt; 의해 암시됩니다 .</target>
        </trans-unit>
        <trans-unit id="ac714ded291c5a5bdf8b9427e8d106e357ec5204" translate="yes" xml:space="preserve">
          <source>Enables the allocation counter to be treated as a limit for the current thread. When the allocation limit is enabled, if the allocation counter counts down below zero, the thread will be sent the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; asynchronous exception. When this happens, the counter is reinitialised (by default to 100K, but tunable with the &lt;code&gt;+RTS -xq&lt;/code&gt; option) so that it can handle the exception and perform any necessary clean up. If it exhausts this additional allowance, another &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is sent, and so forth. Like other asynchronous exceptions, the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is deferred while the thread is inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or an exception handler in &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">할당 카운터를 현재 스레드에 대한 제한으로 처리 할 수 ​​있습니다. 할당 제한이 활성화 된 경우 할당 카운터가 0 미만으로 카운트 다운하면 스레드에 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 비동기 예외 가 전송됩니다 . 이 경우 카운터가 다시 초기화되어 (기본값은 100K이지만 &lt;code&gt;+RTS -xq&lt;/code&gt; 옵션으로 조정 가능 ) 예외를 처리하고 필요한 정리를 수행 할 수 있습니다. 이 추가 허용치를 소진하면 또 다른 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 예외가 전송됩니다. 다른 비동기 예외와 마찬가지로 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 예외는 스레드가 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 또는 예외 처리기에있는 동안 지연 됩니다.</target>
        </trans-unit>
        <trans-unit id="b3e75c6bf31a91bd7e99fda469599bdbd9828868" translate="yes" xml:space="preserve">
          <source>Enables the allocation counter to be treated as a limit for the current thread. When the allocation limit is enabled, if the allocation counter counts down below zero, the thread will be sent the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; asynchronous exception. When this happens, the counter is reinitialised (by default to 100K, but tunable with the &lt;code&gt;+RTS -xq&lt;/code&gt; option) so that it can handle the exception and perform any necessary clean up. If it exhausts this additional allowance, another &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is sent, and so forth. Like other asynchronous exceptions, the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is deferred while the thread is inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or an exception handler in &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">할당 카운터를 현재 스레드의 제한으로 처리 할 수 ​​있습니다. 할당 제한이 활성화 된 경우 할당 카운터가 0 미만으로 카운트 다운되면 스레드에 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 비동기 예외 가 전송됩니다 . 이 경우 카운터가 다시 초기화되어 (기본적으로 100K로 설정되지만 &lt;code&gt;+RTS -xq&lt;/code&gt; 옵션으로 조정 가능 ) 예외를 처리하고 필요한 정리를 수행 할 수 있습니다. 이 추가 허용량을 모두 사용하면 다른 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 예외 등이 전송됩니다. 다른 비동기 예외와 마찬가지로 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 예외는 스레드가 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 안에 있거나 예외 핸들러가 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; 에 있는 동안 지연 됩니다.</target>
        </trans-unit>
        <trans-unit id="0abff2cbf91a144fa0809fd0b3d4874957a0e43b" translate="yes" xml:space="preserve">
          <source>Enables the allocation counter to be treated as a limit for the current thread. When the allocation limit is enabled, if the allocation counter counts down below zero, the thread will be sent the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; asynchronous exception. When this happens, the counter is reinitialised (by default to 100K, but tunable with the &lt;code&gt;+RTS -xq&lt;/code&gt; option) so that it can handle the exception and perform any necessary clean up. If it exhausts this additional allowance, another &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is sent, and so forth. Like other asynchronous exceptions, the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is deferred while the thread is inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or an exception handler in &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">할당 카운터를 현재 스레드에 대한 제한으로 처리 할 수 ​​있습니다. 할당 제한이 활성화 된 경우 할당 카운터가 0 미만으로 카운트 다운하면 스레드에 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 비동기 예외 가 전송됩니다 . 이 경우 카운터가 다시 초기화되어 (기본값은 100K이지만 &lt;code&gt;+RTS -xq&lt;/code&gt; 옵션으로 조정 가능 ) 예외를 처리하고 필요한 정리를 수행 할 수 있습니다. 이 추가 허용치를 소진하면 또 다른 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 예외가 전송됩니다. 다른 비동기 예외와 마찬가지로 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 예외는 스레드가 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 또는 예외 처리기에있는 동안 지연 됩니다.</target>
        </trans-unit>
        <trans-unit id="c451aa055a30393b99ffcf8ecd4bd4a1c53d6f21" translate="yes" xml:space="preserve">
          <source>Enables the common block elimination optimisation in the code generator. This optimisation attempts to find identical Cmm blocks and eliminate the duplicates.</source>
          <target state="translated">코드 생성기에서 공통 블록 제거 최적화를 활성화합니다. 이 최적화는 동일한 Cmm 블록을 찾고 중복을 제거하려고합니다.</target>
        </trans-unit>
        <trans-unit id="b8754a3b23474feb34e9367779a442f21260173e" translate="yes" xml:space="preserve">
          <source>Enables the common-sub-expression elimination optimisation on the STG intermediate language, where it is able to common up some subexpressions that differ in their types, but not their representation.</source>
          <target state="translated">STG 중간 언어에서 공통 하위 표현식 제거 최적화를 사용합니다. 여기서 유형은 다르지만 표현이 아닌 일부 하위 표현식을 공통화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15a6626910e73e8446327a51cfa672d3f5b20c56" translate="yes" xml:space="preserve">
          <source>Enables the common-sub-expression elimination optimisation on the STG intermediate language, where it is able to common up some subexpressions that differ in their types, but not their represetation.</source>
          <target state="translated">STG 중급 언어에서 공통 하위 표현식 제거 최적화를 사용합니다. 여기서는 유형이 다르지만 사전 설정이 아닌 일부 하위 표현식을 공통 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62ecd2ee2e18345e7bbf27c9add3700b4a4cfa3a" translate="yes" xml:space="preserve">
          <source>Enables the common-sub-expression elimination optimisation. Switching this off can be useful if you have some &lt;code&gt;unsafePerformIO&lt;/code&gt; expressions that you don&amp;rsquo;t want commoned-up.</source>
          <target state="translated">공통 하위 표현식 제거 최적화를 사용합니다. 이 기능을 해제하면 &lt;code&gt;unsafePerformIO&lt;/code&gt; 이지 않은 unsafePerformIO 식이 있는 경우 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1dacc415c3e39c6361985f4ee72cac6e04e0bc70" translate="yes" xml:space="preserve">
          <source>Enables the floating of exit paths out of recursive functions.</source>
          <target state="translated">재귀 함수에서 종료 경로를 플로팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a85b9ae8246d563a134d4be7b7f7ad268156d1cb" translate="yes" xml:space="preserve">
          <source>Enables the late lambda lifting optimisation on the STG intermediate language. This selectively lifts local functions to top-level by converting free variables into function parameters.</source>
          <target state="translated">STG 중급 언어에서 후기 람다 리프팅 최적화를 사용합니다. 자유 변수를 함수 매개 변수로 변환하여 로컬 함수를 선택적으로 최상위 레벨로 올립니다.</target>
        </trans-unit>
        <trans-unit id="ce87742ac7c2e01074dc14bd4196d2029c039582" translate="yes" xml:space="preserve">
          <source>Enables the sinking pass in the code generator. This optimisation attempts to find identical Cmm blocks and eliminate the duplicates attempts to move variable bindings closer to their usage sites. It also inlines simple expressions like literals or registers.</source>
          <target state="translated">코드 생성기에서 싱크 패스를 활성화합니다. 이 최적화는 동일한 Cmm 블록을 찾고 중복 된 바인딩을 사용 사이트에 더 가깝게 이동하려는 시도를 제거합니다. 또한 리터럴 또는 레지스터와 같은 간단한 표현식을 인라인합니다.</target>
        </trans-unit>
        <trans-unit id="320405bad159b2f180b9746d6564118b20760520" translate="yes" xml:space="preserve">
          <source>Enables the use of the hash character (&lt;code&gt;#&lt;/code&gt;) as an identifier suffix.</source>
          <target state="translated">해시 문자 ( &lt;code&gt;#&lt;/code&gt; )를 식별자 접미사로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1a3dc388b226a3761de91a45ee12fa69de755b4" translate="yes" xml:space="preserve">
          <source>Enables warnings when the compiler encounters a &lt;code&gt;-W...&lt;/code&gt; flag that is not recognised.</source>
          <target state="translated">컴파일러에서 인식되지 않는 &lt;code&gt;-W...&lt;/code&gt; 플래그 가 발생하면 경고를 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="d7b2a7511f8a93a2df5ff635ed4d40b97ea4e027" translate="yes" xml:space="preserve">
          <source>Enabling these options is the &lt;em&gt;only&lt;/em&gt; effect of &lt;code&gt;-fglasgow-exts&lt;/code&gt;. We are trying to move away from this portmanteau flag, and towards enabling features individually.</source>
          <target state="translated">이러한 옵션을 활성화하는 것이 &lt;code&gt;-fglasgow-exts&lt;/code&gt; 의 &lt;em&gt;유일한&lt;/em&gt; 효과입니다 . 우리는이 portmanteau 플래그에서 벗어나 기능을 개별적으로 활성화하기 위해 노력하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="c59054451c27c7c8382d2bfe7777c9c79c5e1784" translate="yes" xml:space="preserve">
          <source>EnclosingMark</source>
          <target state="translated">EnclosingMark</target>
        </trans-unit>
        <trans-unit id="95e1c3c906cb41877e2dbf888df31b873a46619f" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서와 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="8effb4dad1529c8c374a2ec7483d9cb11c1a1234" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">4 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="984671271f38042fd930198f3adbbcdd613bdf05" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서와 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="5154b63d465f103690baa0ce617eef4b46780832" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="772213176284292f69eab1d53df9e417ea223f31" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서와 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="e612065ea567739afa43a1778229e7adf4282157" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="a177299d2260ce8a6bdf4a2856599c60d1e24d4b" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; using 2 nibbles (hexadecimal digits).</source>
          <target state="translated">2 개의 니블 (16 진수)을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="f70084aa63a8fdb7c33bdd336b6a6e5fee286c38" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">큰 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e58ee0fcd9fbccd93c7c349daaf847fc4d73916" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="1917737b38a7a19c941c871a3e1ed45403953ba5" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c547bac5eba32200290503c5236ff6fc0056c75" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">4 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a1fee47953316027c274cda8e1e2e455d19e93a" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">큰 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5507b0f18decf38efebb2baf95899e32741bd94" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="77bf20d91ceb476f6b9ea2842825823e4604ec77" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="24fb42bb11b50fc7ce69ee30065d1973f47224a8" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="56a1f3a811131d09d0335cf08bcb0dc990d07652" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">큰 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="05432a5fd8c339fe215b088dc62e9c4db0f5ad4f" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="de8130999c3da1a518c6762523cf34aa16e35e31" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서와 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="0a6451dcfee7930103c165c01294315d2a6e1e29" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="e47596a84833c882daecf2ad7d965729fc04eb6e" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using 2 nibbles (hexadecimal digits).</source>
          <target state="translated">2 니블 (16 진수)을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f3c21864f38f632a39e1c67bfff3991e7e21b64" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="e3547c43fa7a25fd14c5cb90f254957678c4920d" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">Little endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="75fd3f074d457c33976db0851c5799ea77a0e354" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서와 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="70de18b4c581fc3ead7fa0c2d7edf18811db5502" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native host order.</source>
          <target state="translated">기본 호스트 순서 로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4c199d06aaa7e0f8ae4b8d7d339534925fc711d" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="110f0a6326198f1f16294034cc9bda201684e613" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 리틀 엔디안 형식으로 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="05e3fa4b66c04bb7d1aa9610293690a81749f7a6" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native host order and host endianness. Values written this way are not portable to different endian machines, without conversion.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 . 이 방법으로 작성된 값은 변환없이 다른 엔디 언 머신으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c486f39e022239360aadec78edcbd84b8104b3f9" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native host order. Values encoded this way are not portable to different endian machines, without conversion.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 고유 호스트 순서로 인코딩하십시오 . 이 방법으로 인코딩 된 값은 변환없이 다른 엔디 언 머신으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4aa216110f68f4aefcb2b995cef482fa886e846e" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 네이티브 호스트 순서와 호스트 엔디안으로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="5c6ed9394caa84c980d605e1aafe3e67fe08b0ba" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">니블 4 개를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="fb5af823493b5832be87a33f468f44386fac2659" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 네이티브 호스트 순서 및 호스트 엔디안으로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="efea09c0269185b4b3f24edfc6fafffae2cecf8f" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="712881f2d6292fa3cc9fda5d7f12910320862a3e" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 네이티브 호스트 순서 및 호스트 엔디안으로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="98ea0d6d775f03613a3c6945d463056b62066541" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="0f72bcca8071b7d103c5906e4c46ea6082f351c2" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; using 2 nibbles (hexadecimal digits).</source>
          <target state="translated">2 개의 니블 (16 진수)을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="6ccf6e425b5b21f2f52878ed729b70f32a03ea62" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Big endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="402755f6cbcb2ee0c9cf1d7d0c124651f9de2ff2" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="02b2505af0b35f23ba983e185d7fdaa5b2abe28a" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="445f1f5aba78e7464e522a9c0102ac7bd7abdf15" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">니블 4 개를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="ad039b54722a5a6082c9c5ba587922590d688e99" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Big endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="14f037f1470656ef667fda01f211a04b7aac854d" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">Little Endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="a046c39e2ffe9d7170545917e3ce63c848cece48" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="7083296bae0699e6577bbbc3ff5b9eada373d98c" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="3f0dd56fc239baea7cf6aeb82a1fb2303c45ca5a" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Big endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="b05ccf8ddbf56fb9e5ab34f06e659a892a9fb8a0" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="e7f6f321f342f6c75dec3581cf7d28f4c897ecf9" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="1ccf9b684d21cb244df1628210fe3c7ad8bdda44" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="e1c2f1b17afb5893fa06cac13620c6305ab428d1" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using 2 nibbles (hexadecimal digits).</source>
          <target state="translated">니블 2 개 (16 진수)를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="e2dd5a89e80eefeb2ca6b2a09b68ed59f9e60c29" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="f52207abcde1a04fbdc9ff35529e075ff05935b1" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 little endian 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="ed39eccab9a59a93f4a62cdae9f1da0a03795fe0" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서와 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="37c66581a891d9d2fc686612796458dfe37347b8" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native host order.</source>
          <target state="translated">기본 호스트 순서 로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="a439ed5c8e1b7fbddb0aec689f6189ffd98cce4b" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="62ca91a5838111f968750fa4f25c98f1b043cc90" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">Little Endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="dc733b84b9c6644425002e0fa3dadbc365d0147b" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native host order and host endianness. Values written this way are not portable to different endian machines, without conversion.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . 이 방법으로 작성된 값은 변환없이 다른 엔디안 머신으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="983ae67e153cf5fc0adbdc4ce9f42f3e87bb18a7" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native host order. Values encoded this way are not portable to different endian machines, without conversion.</source>
          <target state="translated">기본 호스트 순서 로 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . 이러한 방식으로 인코딩 된 값은 변환없이 다른 엔디안 머신으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8f1df138a519516cae8937f687988d017a81bc57" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 네이티브 호스트 순서와 호스트 엔디안으로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="f889e9ae17bb6fa3583e171c056418d0f53300f4" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">니블 4 개를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="2afc3f3bb9189e4ad2cb4f53c0a54bd01bacfb74" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 네이티브 호스트 순서 및 호스트 엔디안으로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="cc130f7509a76334bf374a5f408f91dfbcea0f3e" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="0663ae5cc4e6058fd7a5e4176bc8c7200d12f080" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 네이티브 호스트 순서 및 호스트 엔디안으로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="7fa7d28352e969cc27a6834368dabe7409c27db3" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="3b042a814a2c23190b7cb92312a3a8f8a8e39e8d" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; using 2 nibbles (hexadecimal digits).</source>
          <target state="translated">2 개의 니블 (16 진수)을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="bbbc169c1c906ebead5e30c2f1dd30eb3f7bebb5" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="d9dfb6eefb861db27cbc09e5b2b5c69f5aee2e61" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="0497b85180b6c65862ba8c5ef32abd01ba5f876f" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="e7c83a0c48cfe882b3b738767025830d17a691a3" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">니블 4 개를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="00d9af8095dd18909c2287f951eda843176d073a" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Big endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="d3a00126449a4c7a571c11a363ee55ff891d253c" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="a6e778a4608337e614b1255304b177ac7ac94046" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="452ba60413e78d066a1dd9d49c12f28c3731a3ab" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="9f0abd65af9e43496b3679cdf9a5a25ac65e2bc7" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Big endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="6dd84581503106a4f104ee0cad1aebff41655c0b" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="a73b2c66d927daeef9701ce7976e16648c0ed8bb" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="1f202056a7acf34f0b232ec813460991143919a1" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 개의 니블을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="c21a5bca8d648b2094bb5a69c44126cfc7da736f" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using 2 nibbles (hexadecimal digits).</source>
          <target state="translated">니블 2 개 (16 진수)를 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="dd2e23ffdb596402be6cd39d8e6fd0b747f6f4de" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="249405986ebaa6593998a20ef6806c946bca2d78" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 little endian 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="8e0e1bcc90e442300d3f6eec0478c7ad800c9b54" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="6854677899f5aa327cec1bde1dc6f5ad337c0358" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native host order.</source>
          <target state="translated">기본 호스트 순서 로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="913a1dafc259d05eafb78252f18076724107c5d1" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="6ccbca3e2ab48f71379e2b6c9494b2caa7a0655b" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">Little Endian 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="002af97eab20ddfb00cc6c9929d34c064ef2a37f" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native host order and host endianness. Values written this way are not portable to different endian machines, without conversion.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안 으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . 이러한 방식으로 작성된 값은 변환없이 다른 엔디안 머신으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cd9f9d0daff85de4197aab540cbdf2727c5117d3" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native host order. Values encoded this way are not portable to different endian machines, without conversion.</source>
          <target state="translated">기본 호스트 순서 로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . 이 방식으로 인코딩 된 값은 변환없이 다른 엔디안 머신으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f7e56de8587325adb822aafd3ad0008419a05a05" translate="yes" xml:space="preserve">
          <source>Encode a list of values from left-to-right with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 을 사용하여 왼쪽에서 오른쪽으로 값 목록을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="52680765f8cb407781abe2bb95b3b01bf0ac66c6" translate="yes" xml:space="preserve">
          <source>Encode a list of values in the Put monad. The default implementation may be overridden to be more efficient but must still have the same encoding format.</source>
          <target state="translated">Put 모나드에 값 목록을 인코딩하십시오. 기본 구현은 더 효율적으로 재정의 될 수 있지만 여전히 동일한 인코딩 형식을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="9ac4d7d6613a49fc30249c64b85339a83d4efa2d" translate="yes" xml:space="preserve">
          <source>Encode a list of values represented as an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-oldlist#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-oldlist#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; 사용하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 로 표시되는 값 목록을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="a36c7ba2dba11a42c819a6c8af11aa4a580b2a49" translate="yes" xml:space="preserve">
          <source>Encode a list of values represented as an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-oldlist#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-oldlist#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; 사용하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 폴더 로 표시된 값 목록을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="3b18e4e6d4bbfb76e91c0f38046cadd65ba73286" translate="yes" xml:space="preserve">
          <source>Encode a list of values represented as an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-oldlist#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-oldlist#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; 사용하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 폴더 로 표시된 값 목록을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="3cb80ca4fae88d7af160291637be0b60ac0fbe16" translate="yes" xml:space="preserve">
          <source>Encode a pair by encoding its first component and then its second component.</source>
          <target state="translated">첫 번째 구성 요소와 두 번째 구성 요소를 인코딩하여 쌍을 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="9b4dc855c8520e328527e36870470d7b176ddbc9" translate="yes" xml:space="preserve">
          <source>Encode a signed &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; according to &lt;code&gt;&lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;&lt;/code&gt; and optionally requested precision.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;&lt;/code&gt; 및 선택적으로 요청 된 정밀도 에 따라 서명 된 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed6eb34f4b4cf25e990c7d99f27115fc07ed1871" translate="yes" xml:space="preserve">
          <source>Encode a signed &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; according to &lt;code&gt;&lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;&lt;/code&gt; and optionally requested precision.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;&lt;/code&gt; 및 선택적으로 요청 된 정밀도 에 따라 서명 된 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="67e1518299bc3702b40435f22f3b92d507482683" translate="yes" xml:space="preserve">
          <source>Encode a signed &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; according to &lt;code&gt;&lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;&lt;/code&gt; and optionally requested precision.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;&lt;/code&gt; 및 선택적으로 요청 된 정밀도 에 따라 서명 된 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="28a468228b2ecbd7096265f5e4c24a662e719aef" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is encoded in host order, host endian form, for the machine you're on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or int sized machines, without conversion.</source>
          <target state="translated">단일 기본 시스템 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 당신이하고있는 기계, 호스트 순서, 호스트 엔디안 형식으로 인코딩됩니다. 64 비트 시스템에서 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 시스템에서 4 바이트입니다. 이 방법으로 인코딩 된 값은 변환없이 다른 엔디 언 또는 int 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="07ddfcedbad4c3903c9f8baf226fa7b40803cbf6" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s is encoded in host order, host endian form, for the machine you are on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or integer sized machines, without conversion.</source>
          <target state="translated">단일 기본 시스템 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의이 호스트 순서로 인코딩, 호스트 엔디 언 형태는 기계 당신은에 있습니다. 64 비트 시스템에서 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 시스템에서 4 바이트입니다. 이 방법으로 인코딩 된 값은 변환없이 다른 엔디 언 또는 정수 크기의 시스템으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5d1362011cdbdd4ae2c3179bd1b99581e3d7495d" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is encoded in host order, host endian form, for the machine you're on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or word sized machines, without conversion.</source>
          <target state="translated">단일 기본 머신 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 당신이하고있는 기계, 호스트 순서, 호스트 엔디안 형식으로 인코딩됩니다. 64 비트 시스템에서 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 시스템에서 4 바이트입니다. 이 방법으로 인코딩 된 값은 변환없이 다른 엔디 언 또는 워드 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1ece10ce9953c6ed58448ecd9e9a621f8fcc7752" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;s is encoded in host order, host endian form, for the machine you are on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or word sized machines, without conversion.</source>
          <target state="translated">단일 기본 머신 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 . &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 의이 호스트 순서로 인코딩, 호스트 엔디 언 형태는 기계 당신은에 있습니다. 64 비트 시스템에서 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 시스템에서 4 바이트입니다. 이 방법으로 인코딩 된 값은 변환없이 다른 엔디 언 또는 워드 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="02efd15e348f5d31db2110ffb035aea2264744fb" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is encoded in host order, host endian form, for the machine you're on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or int sized machines, without conversion.</source>
          <target state="translated">단일 네이티브 머신 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 당신이하고있는 기계, 호스트 순서, 호스트 엔디안 형식으로 인코딩됩니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이 방식으로 인코딩 된 값은 변환없이 다른 endian 또는 int 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="060d0f91967e6833bd03d9f720a6997d060eecc5" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s is encoded in host order, host endian form, for the machine you are on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or integer sized machines, without conversion.</source>
          <target state="translated">단일 네이티브 머신 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의이 호스트 순서로 인코딩, 호스트 엔디 언 형태는 기계 당신은에 있습니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이러한 방식으로 인코딩 된 값은 변환없이 다른 엔디안 또는 정수 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e9e63256da19a6c703950f8fc9a426f1efd3ce46" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is encoded in host order, host endian form, for the machine you're on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or word sized machines, without conversion.</source>
          <target state="translated">단일 네이티브 컴퓨터 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 당신이하고있는 기계, 호스트 순서, 호스트 엔디안 형식으로 인코딩됩니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이러한 방식으로 인코딩 된 값은 변환없이 다른 엔디안 또는 단어 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="65984467f82bedb4536b0cfd090237a93f024ea2" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;s is encoded in host order, host endian form, for the machine you are on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or word sized machines, without conversion.</source>
          <target state="translated">단일 네이티브 머신 인코딩 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 를. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 의이 호스트 순서로 인코딩, 호스트 엔디 언 형태는 기계 당신은에 있습니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이러한 방식으로 인코딩 된 값은 변환없이 다른 엔디안 또는 단어 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="50beb642b7a8e4dd116daa16a062ad85f8b74610" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is encoded in host order, host endian form, for the machine you're on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or int sized machines, without conversion.</source>
          <target state="translated">단일 네이티브 머신 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 당신이하고있는 기계, 호스트 순서, 호스트 엔디안 형식으로 인코딩됩니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이 방식으로 인코딩 된 값은 변환없이 다른 endian 또는 int 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0942d161db478f722ee612de2ce23037e013338f" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s is encoded in host order, host endian form, for the machine you are on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or integer sized machines, without conversion.</source>
          <target state="translated">단일 네이티브 머신 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의이 호스트 순서로 인코딩, 호스트 엔디 언 형태는 기계 당신은에 있습니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이러한 방식으로 인코딩 된 값은 변환없이 다른 엔디안 또는 정수 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b86bf1f5fadc8a6b561885ea7c06eab55ccf37ba" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is encoded in host order, host endian form, for the machine you're on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or word sized machines, without conversion.</source>
          <target state="translated">단일 기본 컴퓨터 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 당신이하고있는 기계, 호스트 순서, 호스트 엔디안 형식으로 인코딩됩니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이러한 방식으로 인코딩 된 값은 변환없이 다른 엔디안 또는 단어 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f8c9dd5d7c78124915af8797697669cda9362e06" translate="yes" xml:space="preserve">
          <source>Encode a single native machine &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;s is encoded in host order, host endian form, for the machine you are on. On a 64 bit machine the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an 8 byte value, on a 32 bit machine, 4 bytes. Values encoded this way are not portable to different endian or word sized machines, without conversion.</source>
          <target state="translated">단일 기본 컴퓨터 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 . &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 의이 호스트 순서로 인코딩, 호스트 엔디 언 형태는 기계 당신은에 있습니다. 64 비트 컴퓨터에서 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 는 8 바이트 값이고 32 비트 컴퓨터에서는 4 바이트입니다. 이러한 방식으로 인코딩 된 값은 변환없이 다른 엔디안 또는 단어 크기의 컴퓨터로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6983fe28a05ea17871e3e37244b8fff0a1a6de40" translate="yes" xml:space="preserve">
          <source>Encode a single signed byte as-is.</source>
          <target state="translated">단일 부호있는 바이트를 그대로 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="eadd08112f8d09e24c196f8618105247237461cc" translate="yes" xml:space="preserve">
          <source>Encode a single unsigned byte as-is.</source>
          <target state="translated">부호없는 단일 바이트를 그대로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="2ab8d13229d792d7032c2d8dffeaabfc039aa2a9" translate="yes" xml:space="preserve">
          <source>Encode a value in the Put monad.</source>
          <target state="translated">Put 모나드에 값을 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="295eee5eda3dfb1cdafe4f73f2fab92721d77178" translate="yes" xml:space="preserve">
          <source>Encode a value using binary serialisation to a lazy ByteString.</source>
          <target state="translated">이진 직렬화를 사용하여 값을 게으른 ByteString으로 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="ca5d12fcad4675a27ee1a0f8c6cd20af5c7a065b" translate="yes" xml:space="preserve">
          <source>Encode a value with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 으로 값을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="816b95d1ae7b699a928b4e934e3b69bf3deda236" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="translated">인 코드 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 제 이용 가치 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 위한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 값과 상기 제 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 를 위해 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="9a1858f223015d2a34d17553b36246894fb278ba" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="translated">인 코드 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 제 이용 가치 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 위한 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 값과 상기 제 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 를 위해 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="a20e4c0260c34eabcda6737eaca75397190fe586" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 빅 엔디안 형식으로 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="27c363b1cea1b9334505a0e76647586bbfb117b6" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="2afa695117a27359f39f00a5d5edd1f7a269d4a4" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">큰 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0b070b434519b10bf41e9c539c59214733388f8" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="cddeb450b2b4e00c4e4b63eb4f576681a94d3b96" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">큰 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="a34b4ace3553ece51c60c38e8cf31e6083d2066d" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="b45a3f592ff26715863ce4de58b1836a398bf501" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</target>
        </trans-unit>
        <trans-unit id="d520489fda806347c1fc745b5771901fd2d9d36c" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</target>
        </trans-unit>
        <trans-unit id="988b1343a9e3131c6916f0fac27dc20a4818c642" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in big endian format.</target>
        </trans-unit>
        <trans-unit id="6a60db99b2e1a233ced440ab963f1ee351c0879a" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in little endian format.</target>
        </trans-unit>
        <trans-unit id="8ab4b55ed842d32e51e89d7abd505b7dea3b67e2" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in big endian format.</target>
        </trans-unit>
        <trans-unit id="89d8a00daaf7278d0a5c46e4a795448b84ac3b73" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in little endian format.</target>
        </trans-unit>
        <trans-unit id="645aea83e39ff9baad2e6f019e97fdac12020e81" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in big endian format.</target>
        </trans-unit>
        <trans-unit id="ae3dd13d6ddaef6b42177f65733e8f3e687df1d8" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">Encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in little endian format.</target>
        </trans-unit>
        <trans-unit id="fe823d52c823bac2a09de438799bffe91b4f02a3" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="translated">인 코드 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 제 이용 가치 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 위한 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 값과 상기 제 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 를 위해 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="65cc84e6fb115b0903dd842f51b2bb96d140352c" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; value using the first &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values and the second &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="translated">인 코드 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 제 이용 가치 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 위한 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 값과 상기 제 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 를 위해 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="6a7204c942a2104e24ad8ce4ff46b12860bbc423" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="b9273c235ea0bbcdadcdf00055e933ea97dc0e50" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 리틀 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="6e80dd9786d15a1012ef15a57c7c3c94e05b8bf3" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="d7345d2741d32bbd4b00f4f62a20fc2837ad0d1f" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 리틀 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="c4c8301420127df6c0cfd95691f2554e35d40ef3" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="ccb5559a000083dc52cdb9f3df918708054d0d90" translate="yes" xml:space="preserve">
          <source>Encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 리틀 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="734c97b3bab50170f831f09db84db97f76726007" translate="yes" xml:space="preserve">
          <source>Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 니블을 사용하여 IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="58ee0d970e194ca48821f050f6d3d589d99fce99" translate="yes" xml:space="preserve">
          <source>Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 개의 니블을 사용하여 IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="8a7cde0922837691efb9ea2758cd4d7fe5b765fc" translate="yes" xml:space="preserve">
          <source>Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</target>
        </trans-unit>
        <trans-unit id="5884c4a44c8e4ba871b0804a115c719334f7c22f" translate="yes" xml:space="preserve">
          <source>Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</target>
        </trans-unit>
        <trans-unit id="a373fbde1c4212304f3c85916da05ce76017988a" translate="yes" xml:space="preserve">
          <source>Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16 개의 니블을 사용하여 IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="26d25208120afc7a7286649d4505ab87b1797a0a" translate="yes" xml:space="preserve">
          <source>Encode an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8 개의 니블을 사용하여 IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="c988172a402a6d55b3e1cec74295bdd51feadcad" translate="yes" xml:space="preserve">
          <source>Encode each byte of a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using its fixed-width hex encoding.</source>
          <target state="translated">고정 너비 16 진 인코딩을 사용하여 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 각 바이트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="4d747d4b3e668d03e5b26568421bbf6ff1c830b5" translate="yes" xml:space="preserve">
          <source>Encode each byte of a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; using its fixed-width hex encoding.</source>
          <target state="translated">고정 폭 16 진 인코딩을 사용하여 지연 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 각 바이트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="50e8df369613004661e233b3150a712b1b125e87" translate="yes" xml:space="preserve">
          <source>Encode text to a ByteString &lt;code&gt;&lt;a href=&quot;../binary-0.8.7.0/data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; using UTF-8 encoding.</source>
          <target state="translated">UTF-8 인코딩을 사용하여 텍스트를 ByteString &lt;code&gt;&lt;a href=&quot;../binary-0.8.7.0/data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 로 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="5d82ee4a70f3c101adbcce10273dabe5bf257062" translate="yes" xml:space="preserve">
          <source>Encode text to a ByteString &lt;code&gt;&lt;a href=&quot;../binary-0.8.8.0/data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; using UTF-8 encoding.</source>
          <target state="translated">UTF-8 인코딩을 사용하여 텍스트를 ByteString &lt;code&gt;&lt;a href=&quot;../binary-0.8.8.0/data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="e24eeb5caad506acc65db2f597ad86a426c5b090" translate="yes" xml:space="preserve">
          <source>Encode text using UTF-8 encoding and escape the ASCII characters using a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">UTF-8 인코딩을 사용하여 텍스트를 인코딩하고 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 을 사용하여 ASCII 문자를 이스케이프하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9f09e64e5e950c1c40f2eb3d97126294332ae0c" translate="yes" xml:space="preserve">
          <source>Encode text using UTF-8 encoding and escape the ASCII characters using a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">UTF-8 인코딩을 사용하여 텍스트를 인코딩하고 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; 을 사용하여 ASCII 문자를 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="d2aa7ceb9cf7b097bb29afde43f62c84129f056c" translate="yes" xml:space="preserve">
          <source>Encode text using UTF-8 encoding.</source>
          <target state="translated">UTF-8 인코딩을 사용하여 텍스트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="4f778249ad913d8903fa8e30ff5beab5df190501" translate="yes" xml:space="preserve">
          <source>Encode text using big endian UTF-16 encoding.</source>
          <target state="translated">빅 엔디안 UTF-16 인코딩을 사용하여 텍스트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="cffe1cdf6650f44bb3d69562eabcbee35f12ac4b" translate="yes" xml:space="preserve">
          <source>Encode text using big endian UTF-32 encoding.</source>
          <target state="translated">빅 엔디안 UTF-32 인코딩을 사용하여 텍스트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="b79cfbbb486c5edaf80b30dad4573a8f560a52d1" translate="yes" xml:space="preserve">
          <source>Encode text using little endian UTF-16 encoding.</source>
          <target state="translated">리틀 엔디안 UTF-16 인코딩을 사용하여 텍스트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="30f47ea13d701fb0848435569da3b44a624ee2f1" translate="yes" xml:space="preserve">
          <source>Encode text using little endian UTF-32 encoding.</source>
          <target state="translated">리틀 엔디안 UTF-32 인코딩을 사용하여 텍스트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="d7329fd2e51a31101515e82c495c178a56a6d904" translate="yes" xml:space="preserve">
          <source>Encode the least 7-bits of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; using the ASCII encoding.</source>
          <target state="translated">ASCII 인코딩을 사용하여 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 의 최소 ​​7 비트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="65b6e928feeb3ecc32dc7a285943574c8043022d" translate="yes" xml:space="preserve">
          <source>Encode the least 7-bits of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; using the ASCII encoding.</source>
          <target state="translated">Encode the least 7-bits of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; using the ASCII encoding.</target>
        </trans-unit>
        <trans-unit id="27af087dfa2d4f39981134d4d177a42acb44c69e" translate="yes" xml:space="preserve">
          <source>Encode the least 7-bits of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; using the ASCII encoding.</source>
          <target state="translated">ASCII 인코딩을 사용하여 최소 7 비트의 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="5629ccc7bab757e312c896d21953efdb17f0d62a" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">큰 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="cac14e5d174e2e3d136dc629f772d7cf8b8c29ee" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="5d97094ed35ff2254ceb3044617a15498976d087" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">고유 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="f100612fb6229f9609b9da07fb8c9bcc7629adc5" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="3cd54b9d6c3e24dd48274894a0e494dc895b5a3e" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="275549ff4d16e08f8f38d088615c4683b9db3c59" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="e3f2f7db49cd435a9c1b9208c153c406f75e8865" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="e87eb3bdf58daa3f9e898524ae95529e81f64b53" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="1f0bd65d7a38151e79459228eed2053dc4bebcd5" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="818630ea4202156c74ab646ef4acdd130a0960a0" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="f94074f3e3de7899535b8f5be4c54510830ccb1b" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="946f004554ffd3b01043149d1399ade28820c183" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">고유 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="c8558c84b81ad99d7e8becbb5986f2484d25183b" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="0a0e7b91b4dcd673faa71a534c3d4d60d19c1c00" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="3989971f4f1f09b2e687b1c68d4495a6e986c38e" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">고유 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="efa885bc0ab0f549bb33ab63f9730ed6d68778c7" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="29250053443101258403c48776c24a24c17df7f0" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 인코딩</target>
        </trans-unit>
        <trans-unit id="41552969da89bfde3a0bbc340f161b7509e292a2" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">기본 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="a47395e1c4ad92c62d0ebb55cc13116a731c5caf" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; s in big endian format.</target>
        </trans-unit>
        <trans-unit id="fb4874e22971124eb3bbe6fe9b8a923c6c1aad92" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; s in little endian format.</target>
        </trans-unit>
        <trans-unit id="cc0a2a82cf1add3ccd71c95124bf1c6fda6e18fc" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; s in native host order and host endianness.</target>
        </trans-unit>
        <trans-unit id="6c4f671291e7414a2bef669632c0138c5183c9e8" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; s in big endian format.</target>
        </trans-unit>
        <trans-unit id="fef858ae12902bb7a112479524819f643cd75d2f" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; s in little endian format.</target>
        </trans-unit>
        <trans-unit id="182802b73a0463674481e76e6191af4f6287c178" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; s in native host order and host endianness.</target>
        </trans-unit>
        <trans-unit id="7a69831ea2f25e7b8d86896bc9255392a3e3e158" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; s in big endian format.</target>
        </trans-unit>
        <trans-unit id="bd4e934d8e298351f881f8f916b6cde40ada6b50" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; s in little endian format.</target>
        </trans-unit>
        <trans-unit id="93797d052a60f76a9684e30ca3eb2a52edbe698a" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; s in native host order and host endianness.</target>
        </trans-unit>
        <trans-unit id="31a191f895a5d929c6915541d4ee1ca1343362dd" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; s in big endian format.</target>
        </trans-unit>
        <trans-unit id="de3ba13865820411c6e0ca1049af9fae86aef917" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; s in little endian format.</target>
        </trans-unit>
        <trans-unit id="b7ba51ae1fc742e39791b024ba0048ea5065e1c8" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; s in native host order and host endianness.</target>
        </trans-unit>
        <trans-unit id="0aa025369305610fcc9bbb6bee031445a4d5fdba" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; s in big endian format.</target>
        </trans-unit>
        <trans-unit id="96e8fc85735f03e10cd5f524e5f3712b0ce86421" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; s in little endian format.</target>
        </trans-unit>
        <trans-unit id="d157a26640e8f0e7a0d608ab91e98d5dba14152a" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; s in native host order and host endianness.</target>
        </trans-unit>
        <trans-unit id="14a505698f0bdc78abb1f61fe12f29c9b5a42162" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; s in big endian format.</target>
        </trans-unit>
        <trans-unit id="a667351f3074855f275a37252d70cada4d3d1e68" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; s in little endian format.</target>
        </trans-unit>
        <trans-unit id="b23a9e65b1ea847f0763c2c2147c2fb42231d152" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">Encoding &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; s in native host order and host endianness.</target>
        </trans-unit>
        <trans-unit id="133e2308ad3a6e6440534aa9bd5579f6df32d69e" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="2ba3752241178418e62524d24aa59d96048414e6" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="3f037744db0553f034caab3949a4fb176124a249" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다 .</target>
        </trans-unit>
        <trans-unit id="6208c9faddf73cb1e5bd55955e70909c668848b2" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="9eabd6e47171cc896a085da7a4dcadccbc020ad7" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="ea1b2349bd3bea74bfd48920b7d62e98841b47c5" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="8c1c1d7d99fdca2a41920bb10cb53f743daf4f75" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 빅 엔디안 형식으로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="aef7fe7e0f3fadf699adc732386ba240ecb60a03" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="5b1b829b76d6c9a4299afacc549d7652911055a7" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="8ed4e400b8be4eb1c7f89b4847b0ba659f6c8869" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="ce395ec92de7110b10f5f934dcd5afe729a5d851" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="3f5a625a363606bde5bc5e2845b00a04325cd0a3" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 을 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="63b7677801a5ea4f88080831ac2c751bc546bd92" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="b4f07e9e1d1769f7524a70ace770de27914cca11" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="67f3513166784a5ed7401c5a3d1abbbbee75043c" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 를 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="d6587ca84fa8d3e9c836272b59c49e39b6f65fdc" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in big endian format.</source>
          <target state="translated">빅 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 인코딩 .</target>
        </trans-unit>
        <trans-unit id="d3cfb79e2dbff60dd7f3cbe5d36dc0e5a085f42b" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in little endian format.</source>
          <target state="translated">리틀 엔디안 형식으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 인코딩 .</target>
        </trans-unit>
        <trans-unit id="ba9a76a680ee097bd5c9a0b3aa246d95d1218f1a" translate="yes" xml:space="preserve">
          <source>Encoding &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;s in native host order and host endianness.</source>
          <target state="translated">네이티브 호스트 순서 및 호스트 엔디안으로 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 인코딩 .</target>
        </trans-unit>
        <trans-unit id="5089e4a874aae297eb0b00a478a1b4bc7a6a789b" translate="yes" xml:space="preserve">
          <source>Encoding Text to ByteStrings</source>
          <target state="translated">텍스트를 ByteString으로 인코딩</target>
        </trans-unit>
        <trans-unit id="79f2d7c39657d6a65cd03f2d06e10ed7d7e13d60" translate="yes" xml:space="preserve">
          <source>Encoding Text using ByteString Builders</source>
          <target state="translated">ByteString Builders를 사용하여 텍스트 인코딩</target>
        </trans-unit>
        <trans-unit id="841dba880fd6eb57eaecb641d27407305c1f6429" translate="yes" xml:space="preserve">
          <source>Encoding and decoding errors are always detected and reported, except during lazy I/O (&lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;), where a decoding error merely results in termination of the character stream, as with other I/O errors.</source>
          <target state="translated">지연 I / O ( &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;system-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; )를 제외하고 인코딩 및 디코딩 오류는 항상 감지 및보고됩니다. 여기서 디코딩 오류로 인해 다른 I / O 오류와 마찬가지로 문자 스트림이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="4a8a145ae5bc2628ee4f2687bb51fe872ddd6d02" translate="yes" xml:space="preserve">
          <source>Encoding as UTF-8</source>
          <target state="translated">UTF-8로 인코딩</target>
        </trans-unit>
        <trans-unit id="753be8523292b47d27e2730dd2ca1228ffe0ba3b" translate="yes" xml:space="preserve">
          <source>Encoding positive integers as hexadecimal numbers using lower-case ASCII characters. The shortest possible representation is used. For example,</source>
          <target state="translated">소문자 ASCII 문자를 사용하여 양의 정수를 16 진수로 인코딩합니다. 가능한 가장 짧은 표현이 사용됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="015792365f0898e93a1de286fdb2953224cbe957" translate="yes" xml:space="preserve">
          <source>Encoding single signed bytes as-is.</source>
          <target state="translated">단일 부호있는 바이트를 그대로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="280e5e71232d43700ed2a3d47e96e3c1695951c0" translate="yes" xml:space="preserve">
          <source>Encoding single unsigned bytes as-is.</source>
          <target state="translated">부호없는 단일 바이트를 그대로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="dda76ca073f8bb497b391abdae7ec301f4b4b0f7" translate="yes" xml:space="preserve">
          <source>Encoding the bytes of fixed-width types as hexadecimal numbers using lower-case ASCII characters. For example,</source>
          <target state="translated">고정 너비 유형의 바이트를 소문자 ASCII 문자를 사용하여 16 진수로 인코딩합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="11840c3369b647cd4a9c1b1f9b819d015789e1d4" translate="yes" xml:space="preserve">
          <source>End Simple MAPI-session</source>
          <target state="translated">간단한 MAPI 세션 종료</target>
        </trans-unit>
        <trans-unit id="4708b3fa5453d8a1cdd3846f92491cf6dd4b63e9" translate="yes" xml:space="preserve">
          <source>EndOfFile</source>
          <target state="translated">EndOfFile</target>
        </trans-unit>
        <trans-unit id="00970a05f650b06b47f9ab3ddb566bfd82b7c750" translate="yes" xml:space="preserve">
          <source>EndOfLine</source>
          <target state="translated">EndOfLine</target>
        </trans-unit>
        <trans-unit id="f4112c54a28a76be92dd5b2f113f6ad2150348ff" translate="yes" xml:space="preserve">
          <source>Ending an annotation.</source>
          <target state="translated">주석을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="66860744d813ef040d496b71a45d7d542ff19965" translate="yes" xml:space="preserve">
          <source>Endo</source>
          <target state="translated">Endo</target>
        </trans-unit>
        <trans-unit id="f72216773e3a3df470d6d1615a05c4fbd2d1e497" translate="yes" xml:space="preserve">
          <source>Enforcing strict type safety at compile time</source>
          <target state="translated">컴파일 타임에 엄격한 유형 안전 강화</target>
        </trans-unit>
        <trans-unit id="18d376d4deea55e77009ce7a05bc2312dc4560af" translate="yes" xml:space="preserve">
          <source>Enocode/Decode mutibyte charactor using Win32 API.</source>
          <target state="translated">Win32 API를 사용하여 멀티 바이트 문자를 Enocode / Decode합니다.</target>
        </trans-unit>
        <trans-unit id="c7afe4ea6d828d944d100d6f9b7b8dcc8b7f1fa6" translate="yes" xml:space="preserve">
          <source>Enqueue a bit. This works by shifting the queue right one bit, then setting the most significant bit as requested.</source>
          <target state="translated">조금 대기열에 넣습니다. 이것은 대기열을 오른쪽으로 한 비트 이동 한 다음 요청에 따라 최상위 비트를 설정하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="222da4bf0c88432288f763fe13cde48dc73f78ab" translate="yes" xml:space="preserve">
          <source>Ensure that &lt;code&gt;&lt;a href=&quot;data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt; 가 동일한 지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2995c08772c9e1c4dd0b1af0d23e586ed37706a" translate="yes" xml:space="preserve">
          <source>Ensure that &lt;code&gt;n&lt;/code&gt; many elements are available, and then use &lt;code&gt;f&lt;/code&gt; to write some elements into the memory.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 개의 요소를 사용할 수 있는지 확인한 다음 &lt;code&gt;f&lt;/code&gt; 를 사용 하여 일부 요소를 메모리에 씁니다.</target>
        </trans-unit>
        <trans-unit id="93b18736d5081aa8c6ede68225214442c3eec30b" translate="yes" xml:space="preserve">
          <source>Ensure that all untrusted code is imported as a &lt;a href=&quot;#safe-imports&quot;&gt;safe import&lt;/a&gt; and that the &lt;a href=&quot;#ghc-flag--fpackage-trust&quot;&gt;&lt;code&gt;-fpackage-trust&lt;/code&gt;&lt;/a&gt; flag (see &lt;a href=&quot;#safe-package-trust&quot;&gt;flag&lt;/a&gt;) is used with packages from untrusted sources being marked as untrusted.</source>
          <target state="translated">모든 신뢰할 수없는 코드가로 수입되어 있는지 확인 &lt;a href=&quot;#safe-imports&quot;&gt;안전한 수입&lt;/a&gt; 하고 있음을 &lt;a href=&quot;#ghc-flag--fpackage-trust&quot;&gt; &lt;code&gt;-fpackage-trust&lt;/code&gt; &lt;/a&gt; 플래그 (참조 &lt;a href=&quot;#safe-package-trust&quot;&gt;플래그를&lt;/a&gt; 신뢰할 수없는 출처에서 패키지와 함께 사용)를 신뢰할 수없는 것으로 표시된다.</target>
        </trans-unit>
        <trans-unit id="b9d56604e7671e16d3f563dd3e82fe7e54a5990a" translate="yes" xml:space="preserve">
          <source>Ensure that there are at least &lt;code&gt;n&lt;/code&gt; free bytes for the following &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">다음 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 대해 최소 &lt;code&gt;n&lt;/code&gt; 개의 사용 가능 바이트 가 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c53ae562e91c4c501f92cf95566d4bd6e871f10" translate="yes" xml:space="preserve">
          <source>Ensure that there are at least &lt;code&gt;n&lt;/code&gt; many elements available.</source>
          <target state="translated">사용 가능한 요소가 적어도 &lt;code&gt;n&lt;/code&gt; 개 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0af74831d06739115781598a1020a4b548bfd721" translate="yes" xml:space="preserve">
          <source>Ensures that the suspensions under evaluation by the current thread are unique; that is, the current thread is not evaluating anything that is also under evaluation by another thread that has also executed &lt;code&gt;&lt;a href=&quot;ghc-io#v:noDuplicate&quot;&gt;noDuplicate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 스레드에서 평가중인 서스펜션이 고유한지 확인하십시오. 즉, 현재 스레드는 &lt;code&gt;&lt;a href=&quot;ghc-io#v:noDuplicate&quot;&gt;noDuplicate&lt;/a&gt;&lt;/code&gt; 도 실행 한 다른 스레드에 의해 평가중인 항목을 평가하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6aaa26bc536ec36d8980fc44ae8078a4d12fa476" translate="yes" xml:space="preserve">
          <source>Ensures that the suspensions under evaluation by the current thread are unique; that is, the current thread is not evaluating anything that is also under evaluation by another thread that has also executed &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:noDuplicate&quot;&gt;noDuplicate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 스레드에서 평가중인 서스펜션이 고유한지 확인하십시오. 즉, 현재 스레드는 &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:noDuplicate&quot;&gt;noDuplicate&lt;/a&gt;&lt;/code&gt; 도 실행 한 다른 스레드에 의해 평가중인 항목을 평가하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="2fe9a2208a23a4e0bf7cdd2a0e7eb454c81e8967" translate="yes" xml:space="preserve">
          <source>Enumerate moduless using Module32First and Module32Next</source>
          <target state="translated">Module32First 및 Module32Next를 사용하여 모듈 열거</target>
        </trans-unit>
        <trans-unit id="c9c4f2efb477721f7ada4876507def206f990d00" translate="yes" xml:space="preserve">
          <source>Enumerate processes using Process32First and Process32Next</source>
          <target state="translated">Process32First 및 Process32Next를 사용하여 프로세스 열거</target>
        </trans-unit>
        <trans-unit id="fe83140b3e01ec4aa706a5a295ae6abd3470bab5" translate="yes" xml:space="preserve">
          <source>Enumerations of &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt; and &lt;code&gt;Char&lt;/code&gt; (e.g. &lt;code&gt;['a'..'z']&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Int&lt;/code&gt; , &lt;code&gt;Integer&lt;/code&gt; 및 &lt;code&gt;Char&lt;/code&gt; 열거 형 (예 : &lt;code&gt;['a'..'z']&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d443a1185575c125d61e0af393b044d7b06ef572" translate="yes" xml:space="preserve">
          <source>Environment</source>
          <target state="translated">Environment</target>
        </trans-unit>
        <trans-unit id="6f5e71e71e29733b06d021985981b03479853e7b" translate="yes" xml:space="preserve">
          <source>Environment Strings</source>
          <target state="translated">환경 문자열</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="e746894bcb0da4fa5b65dec632c54a168ccc7747" translate="yes" xml:space="preserve">
          <source>EpochTime</source>
          <target state="translated">EpochTime</target>
        </trans-unit>
        <trans-unit id="afcfba63ae8c7c116df2f46471e75a3359724931" translate="yes" xml:space="preserve">
          <source>Eq</source>
          <target state="translated">Eq</target>
        </trans-unit>
        <trans-unit id="024d606ca7f5b6a5020eab3615d0ef3313c25417" translate="yes" xml:space="preserve">
          <source>Eq1</source>
          <target state="translated">Eq1</target>
        </trans-unit>
        <trans-unit id="0a8d730034e04185b7ca3ae8c71b1e717cdccf65" translate="yes" xml:space="preserve">
          <source>Eq2</source>
          <target state="translated">Eq2</target>
        </trans-unit>
        <trans-unit id="7a9900d84e1403f9c455cfd34c5bb3f62971e633" translate="yes" xml:space="preserve">
          <source>Equality</source>
          <target state="translated">Equality</target>
        </trans-unit>
        <trans-unit id="dd932b5c22b6fac63dce314620bdab9a740d54d2" translate="yes" xml:space="preserve">
          <source>Equality constraints can also appear in class and instance contexts. The former enable a simple translation of programs using functional dependencies into programs using family synonyms instead. The general idea is to rewrite a class declaration of the form</source>
          <target state="translated">동등 제약 조건은 클래스 및 인스턴스 컨텍스트에도 나타날 수 있습니다. 전자는 기능적 종속성을 사용하는 프로그램을 대신 가족 동의어를 사용하는 프로그램으로 간단하게 변환 할 수 있습니다. 일반적인 아이디어는 폼의 클래스 선언을 다시 작성하는 것입니다</target>
        </trans-unit>
        <trans-unit id="67252bcc828e69acf9480ba5a7ff926382fa5470" translate="yes" xml:space="preserve">
          <source>Equality constraints; e.g. &lt;code&gt;ord True&lt;/code&gt; gives rise to an insoluble equality constraint &lt;code&gt;Char ~ Bool&lt;/code&gt;, which can be deferred.</source>
          <target state="translated">평등 제약; 예를 들어 &lt;code&gt;ord True&lt;/code&gt; 는 불용성 평등 제약 &lt;code&gt;Char ~ Bool&lt;/code&gt; 을 발생 시키며 이는 연기 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d92f07e210fc007fc6c4cb74e6030a1cb502ad3a" translate="yes" xml:space="preserve">
          <source>Equality of constructors</source>
          <target state="translated">생성자의 평등</target>
        </trans-unit>
        <trans-unit id="f5ff16eadf101b0bcfe8309c969f2d55e963d450" translate="yes" xml:space="preserve">
          <source>Equality of two &lt;code&gt;&lt;a href=&quot;system-filepath-posix#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;s. If you call &lt;code&gt;System.Directory.canonicalizePath&lt;/code&gt; first this has a much better chance of working. Note that this doesn't follow symlinks or DOSNAM~1s.</source>
          <target state="translated">두 개의 &lt;code&gt;&lt;a href=&quot;system-filepath-posix#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; 가 동일합니다. &lt;code&gt;System.Directory.canonicalizePath&lt;/code&gt; 를 먼저 호출하면 작업 가능성이 훨씬 높아집니다. 이것은 심볼릭 링크 또는 DOSNAM ~ 1을 따르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad75f68260f94bce3877de28af5c0b5e93a0db1c" translate="yes" xml:space="preserve">
          <source>Equality of two &lt;code&gt;&lt;a href=&quot;system-filepath-windows#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;s. If you call &lt;code&gt;System.Directory.canonicalizePath&lt;/code&gt; first this has a much better chance of working. Note that this doesn't follow symlinks or DOSNAM~1s.</source>
          <target state="translated">두 개의 &lt;code&gt;&lt;a href=&quot;system-filepath-windows#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; 가 동일합니다. &lt;code&gt;System.Directory.canonicalizePath&lt;/code&gt; 를 먼저 호출하면 작업 가능성이 훨씬 높아집니다. 이것은 심볼릭 링크 또는 DOSNAM ~ 1을 따르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28c9f6ed6a6738230006d38e856551b5666d9115" translate="yes" xml:space="preserve">
          <source>Equality on &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; that does not require that the types of the arguments match.</source>
          <target state="translated">인수 유형이 일치하지 않아도되는 &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; 의 동일성</target>
        </trans-unit>
        <trans-unit id="1f57c35e09cef44fb38e7acf20e2c72b6579104c" translate="yes" xml:space="preserve">
          <source>Equality on &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; that does not require that the types of the arguments match.</source>
          <target state="translated">인수 유형이 일치하지 않아도되는 &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; 의 동일성</target>
        </trans-unit>
        <trans-unit id="2a6aa35f8013684cff4ad26bb51395662e2921e2" translate="yes" xml:space="preserve">
          <source>Equality operators</source>
          <target state="translated">평등 연산자</target>
        </trans-unit>
        <trans-unit id="98643c6066d5f22cae71ce8b985feead0064db50" translate="yes" xml:space="preserve">
          <source>EqualityT</source>
          <target state="translated">EqualityT</target>
        </trans-unit>
        <trans-unit id="45de971d824fe3e849e875891b71d1111691e1c8" translate="yes" xml:space="preserve">
          <source>Equations</source>
          <target state="translated">Equations</target>
        </trans-unit>
        <trans-unit id="1be8b8d468eacba7d12d48c32f39b3f8bb53844d" translate="yes" xml:space="preserve">
          <source>Equipped with this guaranteed to be non-empty data structure, we can combine values using &lt;code&gt;&lt;a href=&quot;data-semigroup#v:sconcat&quot;&gt;sconcat&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; of our choosing. We can try the &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Max&quot;&gt;Max&lt;/a&gt;&lt;/code&gt; instances of &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; which pick the smallest, or largest number respectively:</source>
          <target state="translated">비어 있지 않은 데이터 구조를 보장이 장착, 우리는 사용하여 값 결합 할 수 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:sconcat&quot;&gt;sconcat&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 우리의 선택에의합니다. 가장 작은 숫자 또는 가장 큰 숫자를 각각 선택하는 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Max&quot;&gt;Max&lt;/a&gt;&lt;/code&gt; 인스턴스를 사용해 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ab39d71e2233de54bc6c355380c3c9f96c02e36" translate="yes" xml:space="preserve">
          <source>Equivalence</source>
          <target state="translated">Equivalence</target>
        </trans-unit>
        <trans-unit id="3a71b2c82131485fcbda2a2cc630d1c446facacb" translate="yes" xml:space="preserve">
          <source>Equivalence Relations</source>
          <target state="translated">동등성 관계</target>
        </trans-unit>
        <trans-unit id="15fb20d5041620de529d540a5907d9bfb084f5a6" translate="yes" xml:space="preserve">
          <source>Equivalence relations are &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt;, because you can apply the contramapped function to each input to the equivalence relation.</source>
          <target state="translated">등가 관계는 각 입력에 등가 관계를 적용 할 수 있기 때문에 &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2e0a17cc88967d4bc91912b0297baf9041f8a6d3" translate="yes" xml:space="preserve">
          <source>Equivalence relations are expected to satisfy three laws:</source>
          <target state="translated">동등성 관계는 다음 세 가지 법을 충족시킬 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="881f23d22c221433312c2bae30cb0ee2cc8acae8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt; ReaderT k (ReaderT x (MaybeT f)) &lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt; ReaderT k (ReaderT x (MaybeT f)) &lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b45705d685bf19551f2d63e2de12728a889d2851" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt; ReaderT k (ReaderT x (ReaderT y (MaybeT f))) &lt;/code&gt;</source>
          <target state="translated">상당 &lt;code&gt; ReaderT k (ReaderT x (ReaderT y (MaybeT f))) &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0708116639e47eadf2274507cf6cf38d16e968d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Prim.html#v:word2Int-35-&quot;&gt;word2Int#&lt;/a&gt; . &lt;a href=&quot;ghc-integer-gmp-internals#v:bigNatToWord&quot;&gt;bigNatToWord&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Prim.html#v:word2Int-35-&quot;&gt;word2Int#&lt;/a&gt; . &lt;a href=&quot;ghc-integer-gmp-internals#v:bigNatToWord&quot;&gt;bigNatToWord&lt;/a&gt;&lt;/code&gt; 와 동일합니다 . &lt;a href=&quot;ghc-integer-gmp-internals#v:bigNatToWord&quot;&gt;bigNatToWord&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cf712fcbf260af1603149a967b9adaa1f8284c5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#v:word2Int-35-&quot;&gt;word2Int#&lt;/a&gt; . &lt;a href=&quot;ghc-integer-gmp-internals#v:bigNatToWord&quot;&gt;bigNatToWord&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#v:word2Int-35-&quot;&gt;word2Int#&lt;/a&gt; . &lt;a href=&quot;ghc-integer-gmp-internals#v:bigNatToWord&quot;&gt;bigNatToWord&lt;/a&gt;&lt;/code&gt; 와 같습니다 . &lt;a href=&quot;ghc-integer-gmp-internals#v:bigNatToWord&quot;&gt;bigNatToWord&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="906bbfdfac46546b457ced747c0a691073231d2c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;ReaderT Key (ReaderT x (ReaderT y (MaybeT f)))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ReaderT Key (ReaderT x (ReaderT y (MaybeT f)))&lt;/code&gt; 와 동일 (ReaderT x (ReaderT y (MaybeT f)))</target>
        </trans-unit>
        <trans-unit id="3d60b7c4dc5a57d332d9f48b3f3cd21fe42b4773" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;ReaderT k (ReaderT x (MaybeT f))&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;ReaderT k (ReaderT x (MaybeT f))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13f6fba897c7e0b2ab37c14a299d3729c84096bf" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;\x -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt; x ()&lt;/code&gt;.</source>
          <target state="translated">당량 &lt;code&gt;\x -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt; x ()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05a351c6cc888eec691303c0ff94b661ae11b8ec" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;\x -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt; x ()&lt;/code&gt;.</source>
          <target state="translated">Equivalent to &lt;code&gt;\x -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt; x ()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="132773b09696a13f09f822f97147bf5e445b5761" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;\x -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt; x ()&lt;/code&gt;.</source>
          <target state="translated">당량 &lt;code&gt;\x -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt; x ()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cef6b7d8e5475105537180bb4c447ea38b08587" translate="yes" xml:space="preserve">
          <source>Erase</source>
          <target state="translated">Erase</target>
        </trans-unit>
        <trans-unit id="d0f7d3ea9b25f957e7dacf60a72d1119835befe7" translate="yes" xml:space="preserve">
          <source>ErrCode</source>
          <target state="translated">ErrCode</target>
        </trans-unit>
        <trans-unit id="d8bf3fea74cb51ac9ebccafa9b5bfc9e28b1c902" translate="yes" xml:space="preserve">
          <source>Errno</source>
          <target state="translated">Errno</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="f54c5e2e6bb107cd0b387e03051c9312af598081" translate="yes" xml:space="preserve">
          <source>Error handling types</source>
          <target state="translated">오류 처리 유형</target>
        </trans-unit>
        <trans-unit id="38a2998cc83b4215b89f0b96917e58d59fdfae52" translate="yes" xml:space="preserve">
          <source>Error messages</source>
          <target state="translated">오류 메시지</target>
        </trans-unit>
        <trans-unit id="c2b00462bab8d44263c68877ef507452d68e3572" translate="yes" xml:space="preserve">
          <source>Error operations</source>
          <target state="translated">오류 연산</target>
        </trans-unit>
        <trans-unit id="779dde82828bf4f8960a376f01324829ef99bc79" translate="yes" xml:space="preserve">
          <source>ErrorCall</source>
          <target state="translated">ErrorCall</target>
        </trans-unit>
        <trans-unit id="ef367152f80f2e35230bf8ad27669a634ddd3298" translate="yes" xml:space="preserve">
          <source>ErrorList</source>
          <target state="translated">ErrorList</target>
        </trans-unit>
        <trans-unit id="8232c64535a7ea041a276a2bb3e8bb3f6e9161c9" translate="yes" xml:space="preserve">
          <source>ErrorMessage</source>
          <target state="translated">ErrorMessage</target>
        </trans-unit>
        <trans-unit id="235ef823e9943d1f3f30f8b899d5c9bdad3f3814" translate="yes" xml:space="preserve">
          <source>ErrorOnCodingFailure</source>
          <target state="translated">ErrorOnCodingFailure</target>
        </trans-unit>
        <trans-unit id="9dc18b43615220b6ff75baf381cdb2b68d93926a" translate="yes" xml:space="preserve">
          <source>ErrorT</source>
          <target state="translated">ErrorT</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="d939ff3b4cb782382d61f9a09384c51db343fbff" translate="yes" xml:space="preserve">
          <source>Errors are reported &lt;em&gt;lazily&lt;/em&gt; (when attempting to solve a constraint), rather than &lt;em&gt;eagerly&lt;/em&gt; (when the instances themselves are defined). Consider, for example</source>
          <target state="translated">오류가보고 &lt;em&gt;느리게&lt;/em&gt; 보다는, (제약 조건을 해결하기 위해 시도 할 때) &lt;em&gt;열심히&lt;/em&gt; (인스턴스 자신이 정의 된 경우). 예를 들어</target>
        </trans-unit>
        <trans-unit id="3f8a28883b809e9afa35470a86f86e3e24cdbf2b" translate="yes" xml:space="preserve">
          <source>Esa Ilari Vuokko &amp;lt;ei@vuokko.info&amp;gt;</source>
          <target state="translated">에사 일 라리 뷰코 &amp;lt;ei@vuokko.info&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7ac544e7340762ce97c0d16f40c4ca9025ca9fec" translate="yes" xml:space="preserve">
          <source>Essential invariants:</source>
          <target state="translated">필수 불변량 :</target>
        </trans-unit>
        <trans-unit id="c08c3bf663d6c761128d41298a81ff90e9861422" translate="yes" xml:space="preserve">
          <source>Establishes a weak pointer to &lt;code&gt;k&lt;/code&gt;, with value &lt;code&gt;v&lt;/code&gt; and a finalizer.</source>
          <target state="translated">값 &lt;code&gt;v&lt;/code&gt; 와 종료 자를 사용하여 &lt;code&gt;k&lt;/code&gt; 에 대한 약한 포인터를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="fa73f5f806aef3a9c2cf308941c972c61aa06d4a" translate="yes" xml:space="preserve">
          <source>Eta-expand let-bindings to increase their arity.</source>
          <target state="translated">Eta-expand let-bindings는 그들의 신성을 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="aef703e135cd421c9e00e6cdf19278c5fa4e1103" translate="yes" xml:space="preserve">
          <source>Eta-reduce lambda expressions, if doing so gets rid of a whole group of lambdas.</source>
          <target state="translated">람다 식을 제거하면 전체 람다 그룹이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b56f4d5159f46e4ce448beb87a82c5d223b09604" translate="yes" xml:space="preserve">
          <source>EvalExpr</source>
          <target state="translated">EvalExpr</target>
        </trans-unit>
        <trans-unit id="4a4a4d67eeae56d8c536fd8dc5f9bf2bf8707629" translate="yes" xml:space="preserve">
          <source>EvalOpts</source>
          <target state="translated">EvalOpts</target>
        </trans-unit>
        <trans-unit id="aaff208217b0da64aa7669ad3b2a794af7339538" translate="yes" xml:space="preserve">
          <source>EvalResult</source>
          <target state="translated">EvalResult</target>
        </trans-unit>
        <trans-unit id="e9db83c0176792c5159a1db6fb3a831430700a62" translate="yes" xml:space="preserve">
          <source>EvalStatus</source>
          <target state="translated">EvalStatus</target>
        </trans-unit>
        <trans-unit id="32e8dcb877d33a8b6be87a78578cbe26fb0b02d7" translate="yes" xml:space="preserve">
          <source>EvalStatus_</source>
          <target state="translated">EvalStatus_</target>
        </trans-unit>
        <trans-unit id="793b83cfd66d3728db79e4e49e17fad265bc1cbd" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;code&gt;expr&lt;/code&gt;; see &lt;a href=&quot;using#eval-mode&quot;&gt;Expression evaluation mode&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; 평가 ; 자세한 내용은 &lt;a href=&quot;using#eval-mode&quot;&gt;식 평가 모드&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a00547e6b2983863aa614cbec89441585f4c7061" translate="yes" xml:space="preserve">
          <source>Evaluate a TH computation.</source>
          <target state="translated">TH 계산을 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="f1ef9c08f16f14c3a70e32394decb704d73e3860" translate="yes" xml:space="preserve">
          <source>Evaluate a computation with the given initial state and environment, returning the final state and output, discarding the final value.</source>
          <target state="translated">주어진 초기 상태 및 환경으로 계산을 평가하고 최종 상태를 반환하고 최종 값을 버립니다.</target>
        </trans-unit>
        <trans-unit id="5ce33b7119a1fcbbe3bea4a7d4ded00281d81b80" translate="yes" xml:space="preserve">
          <source>Evaluate a computation with the given initial state and environment, returning the final value and output, discarding the final state.</source>
          <target state="translated">주어진 초기 상태와 환경으로 계산을 평가하여 최종 값과 출력을 반환하고 최종 상태를 버립니다.</target>
        </trans-unit>
        <trans-unit id="5120b791c97275bfdab439ed5f408a9c14ba728c" translate="yes" xml:space="preserve">
          <source>Evaluate a state computation with the given initial state and return the final state, discarding the final value.</source>
          <target state="translated">주어진 초기 상태로 상태 계산을 평가하고 최종 값을 버리고 최종 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b97d0220a8ca2af7c82b7da3b6ba16d8000505a2" translate="yes" xml:space="preserve">
          <source>Evaluate a state computation with the given initial state and return the final value, discarding the final state.</source>
          <target state="translated">주어진 초기 상태로 상태 계산을 평가하고 최종 상태를 버리고 최종 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a930ebfd5fb1cacbafa73ebf67b0180221424b7" translate="yes" xml:space="preserve">
          <source>Evaluate a statement</source>
          <target state="translated">성명서 평가</target>
        </trans-unit>
        <trans-unit id="10b1615bc5fe3be87badd7f322df122d7263f0e6" translate="yes" xml:space="preserve">
          <source>Evaluate an accumulation computation with the given initial output history and return the final value, discarding the final output.</source>
          <target state="translated">주어진 초기 출력 이력으로 누적 계산을 평가하고 최종 출력을 버리고 최종 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fcea707fea238821ed4197374c1152c03b1b0ac8" translate="yes" xml:space="preserve">
          <source>Evaluate each action in the sequence from left to right, and collect the results.</source>
          <target state="translated">왼쪽에서 오른쪽으로 순서대로 각 조치를 평가하고 결과를 수집하십시오.</target>
        </trans-unit>
        <trans-unit id="683c5e18f9f4969c8903352565b7c40f13f7a1a2" translate="yes" xml:space="preserve">
          <source>Evaluate each action in the structure from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 각 조치를 왼쪽에서 오른쪽으로 평가하고 결과를 수집하십시오. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b79f750a8d1b02ad391c2774298dc7a6fd704a1" translate="yes" xml:space="preserve">
          <source>Evaluate each action in the structure from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 각 조치를 왼쪽에서 오른쪽으로 평가하고 결과를 무시하십시오. 결과를 무시하지 않는 버전은 &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b431a52bddcb68d44c1dd429faeea8f23fdc88b5" translate="yes" xml:space="preserve">
          <source>Evaluate each action in the structure from left to right, and ignore the results. For a version that doesn't ignore the results, see &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bisequence&quot;&gt;bisequence&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 각 조치를 왼쪽에서 오른쪽으로 평가하고 결과를 무시하십시오. 결과를 무시하지 않는 버전은 &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bisequence&quot;&gt;bisequence&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d87ab7bdf1f1692f0fea7d7c8bf6df1efb7330d6" translate="yes" xml:space="preserve">
          <source>Evaluate each monadic action in the structure from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;control-monad#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 각 모나드 동작을 왼쪽에서 오른쪽으로 평가하고 결과를 수집합니다. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;control-monad#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d397057e5945dba899dd4e1514d774561fd9fc37" translate="yes" xml:space="preserve">
          <source>Evaluate each monadic action in the structure from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조에서 각 모나 딕 동작을 왼쪽에서 오른쪽으로 평가하고 결과를 수집합니다. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a754dcb1de057242c1930c62a209f7fd6b6132a" translate="yes" xml:space="preserve">
          <source>Evaluate each monadic action in the structure from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;prelude#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 각 모나드 동작을 왼쪽에서 오른쪽으로 평가하고 결과를 수집합니다. 결과를 무시하는 버전은 &lt;code&gt;&lt;a href=&quot;prelude#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc11e71e709359c3c1e669f66d6d423d48161940" translate="yes" xml:space="preserve">
          <source>Evaluate each monadic action in the structure from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구조의 각 모나 딕 동작을 왼쪽에서 오른쪽으로 평가하고 결과를 무시하십시오. 결과를 무시하지 않는 버전은 &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6063e6194a70062b52c361c98f4c7128f36a77fd" translate="yes" xml:space="preserve">
          <source>Evaluate something of type &lt;code&gt;IO ()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IO ()&lt;/code&gt; 유형의 무언가를 평가하십시오 ()</target>
        </trans-unit>
        <trans-unit id="e2a3bf0d57f8c64c06fdec8818cb5c85283c2792" translate="yes" xml:space="preserve">
          <source>Evaluate something of type &lt;code&gt;IO String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IO String&lt;/code&gt; 유형을 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="6eecdb8df1d52cba306e7b9906768bc34faacbd7" translate="yes" xml:space="preserve">
          <source>Evaluate something of type &lt;code&gt;String -&amp;gt; IO String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String -&amp;gt; IO String&lt;/code&gt; 유형의 무언가를 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="e494ca5e6198cd08e7b47b6be6bc4945a4d44bdb" translate="yes" xml:space="preserve">
          <source>Evaluate something. This is used to support :force in GHCi.</source>
          <target state="translated">무언가를 평가하십시오. GHCi에서 : force를 지원하는 데 사용됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
