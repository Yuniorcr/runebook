<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="3923d4c847731e9498f0e85f056ea723a3948e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; &amp;mdash; scheduler events, including Haskell thread creation and start/stop events. Enabled by default.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; - 하스켈 스레드 생성 및 시작 / 정지 이벤트를 포함 스케줄러 이벤트. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="36bb8b9f5b49f0248d1a78893f02454f60534738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; - The state.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; - 상태</target>
        </trans-unit>
        <trans-unit id="68bd906be5272ad750e3c56fccd45549df340855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: the state variable argument for the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 유형 의 상태 변수 인수</target>
        </trans-unit>
        <trans-unit id="8c6429e6d8889099651756a94a20ea03db85310f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: the state variable argument for the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 유형에 대한 상태 변수 인수</target>
        </trans-unit>
        <trans-unit id="8bf86667dcbdbef19ee4100e32cda797ca48d1c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: the state variable argument for the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 유형에 대한 상태 변수 인수</target>
        </trans-unit>
        <trans-unit id="207537d27d8ae7f188d92ab61ff49bb12848f7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: the state variable argument for the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 유형 의 상태 변수 인수</target>
        </trans-unit>
        <trans-unit id="c42b28513e488d4362f2dccd9d0d96c921e9f416" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scheduleAlarm i&lt;/code&gt; calls &lt;code&gt;alarm&lt;/code&gt; to schedule a real time alarm at least &lt;code&gt;i&lt;/code&gt; seconds in the future.</source>
          <target state="translated">&lt;code&gt;scheduleAlarm i&lt;/code&gt; 는 &lt;code&gt;alarm&lt;/code&gt; 을 호출 하여 향후 &lt;code&gt;i&lt;/code&gt; 초 이상 실시간 알람 을 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="b241c731169644e013bae8079e23dda9697ded53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sendBreak fd duration&lt;/code&gt; calls &lt;code&gt;tcsendbreak&lt;/code&gt; to transmit a continuous stream of zero-valued bits on &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; for the specified implementation-dependent &lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sendBreak fd duration&lt;/code&gt; 은 &lt;code&gt;tcsendbreak&lt;/code&gt; 를 호출 하여 지정된 구현 종속 &lt;code&gt;duration&lt;/code&gt; &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 에서 0 값 비트의 연속 스트림을 전송합니다 .</target>
        </trans-unit>
        <trans-unit id="932b7380a5c3d8b991073fc982fdfa0124a38a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy p sep&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy p sep&lt;/code&gt; 파싱은 &lt;em&gt;제로&lt;/em&gt; 또는 그 이상의 사건 &lt;code&gt;p&lt;/code&gt; ,에 의해 분리 &lt;code&gt;sep&lt;/code&gt; . &lt;code&gt;p&lt;/code&gt; 가 반환 한 값 목록을 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="d753d6b553c2ce2fda36548d1af42e8658527e8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy p sep&lt;/code&gt; parses zero or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy p sep&lt;/code&gt; 파싱은 0 개 이상의 어커런스 &lt;code&gt;p&lt;/code&gt; ,에 의해 분리 &lt;code&gt;sep&lt;/code&gt; . &lt;code&gt;p&lt;/code&gt; 가 반환 한 값 목록을 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="b4683bfa7aac305771a4a95bac801e3f83e796a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy1 p sep&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy1 p sep&lt;/code&gt; 파싱 &lt;em&gt;하나 명&lt;/em&gt; 의 이상의 발생 &lt;code&gt;p&lt;/code&gt; 로 구분 &lt;code&gt;sep&lt;/code&gt; . &lt;code&gt;p&lt;/code&gt; 가 반환 한 값 목록을 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="a36ce76f271256567b0fccdc5bddcc30dbb27a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy1 p sep&lt;/code&gt; parses one or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy1 p sep&lt;/code&gt; 의 하나 이상의 어커런스 파싱 &lt;code&gt;p&lt;/code&gt; 로 분리 &lt;code&gt;sep&lt;/code&gt; . &lt;code&gt;p&lt;/code&gt; 가 반환 한 값 목록을 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="d4514573ecb7ee67cbba21f7d6e4bf8c60569679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepEndBy p sep&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and optionally ended by &lt;code&gt;sep&lt;/code&gt;, ie. haskell style statements. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepEndBy p sep&lt;/code&gt; 는 &lt;em&gt;0&lt;/em&gt; 개 이상의 &lt;code&gt;p&lt;/code&gt; 발생을 구문 분석 하고 , &lt;code&gt;sep&lt;/code&gt; 로 구분되고 선택적으로 끝납니다 . 하스켈 스타일 문. &lt;code&gt;p&lt;/code&gt; 가 반환 한 값 목록을 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="15f8af570dc63730d757c1ef207b9f8df71771f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepEndBy1 p sep&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and optionally ended by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepEndBy1 p sep&lt;/code&gt; 는 분리하여 선택적으로 &lt;code&gt;sep&lt;/code&gt; 로 끝나는 &lt;em&gt;하나&lt;/em&gt; 이상의 &lt;code&gt;p&lt;/code&gt; 발생을 구문 분석 합니다. &lt;code&gt;p&lt;/code&gt; 가 반환 한 값 목록을 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="a3a27f76df4d4fb5d967bac56e73e4bdf074f5cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setByteArray# ba off len c&lt;/code&gt; sets the byte range &lt;code&gt;[off, off+len]&lt;/code&gt; of the &lt;code&gt;MutableByteArray#&lt;/code&gt; to the byte &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setByteArray# ba off len c&lt;/code&gt; 바이트 범위를 설정한다 &lt;code&gt;[off, off+len]&lt;/code&gt; 의 &lt;code&gt;MutableByteArray#&lt;/code&gt; 바이트로 &lt;code&gt;c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58e35895811f37bfd4db9306e73a869a809a08bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setEffectiveGroupID uid&lt;/code&gt; calls &lt;code&gt;setegid&lt;/code&gt; to set the effective group-id associated with the current process to &lt;code&gt;gid&lt;/code&gt;. This does not update the real group-id or set-group-id.</source>
          <target state="translated">&lt;code&gt;setEffectiveGroupID uid&lt;/code&gt; 는 &lt;code&gt;setegid&lt;/code&gt; 를 호출 하여 현재 프로세스와 연관된 유효 그룹 ID를 &lt;code&gt;gid&lt;/code&gt; 로 설정합니다. 합니다. 실제 group-id 또는 set-group-id는 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5578ba6a4f348fd36d3a550923fc508b1a6c88a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setEffectiveUserID uid&lt;/code&gt; calls &lt;code&gt;seteuid&lt;/code&gt; to set the effective user-id associated with the current process to &lt;code&gt;uid&lt;/code&gt;. This does not update the real user-id or set-user-id.</source>
          <target state="translated">&lt;code&gt;setEffectiveUserID uid&lt;/code&gt; 는 &lt;code&gt;seteuid&lt;/code&gt; 를 호출 하여 현재 프로세스와 연관된 유효 사용자 ID를 &lt;code&gt;uid&lt;/code&gt; 로 설정 합니다. 실제 사용자 ID 또는 set-user-id는 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81fcdecb45f79ccf1f68cffd11144812c0eb7951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setEnv name value&lt;/code&gt; sets the specified environment variable to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setEnv name value&lt;/code&gt; 은 지정된 환경 변수를 &lt;code&gt;value&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="56843a81fcccdcb43ea574b7311cb41248a05565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFdMode fd mode&lt;/code&gt; acts like &lt;code&gt;setFileMode&lt;/code&gt; but uses a file descriptor &lt;code&gt;fd&lt;/code&gt; instead of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setFdMode fd mode&lt;/code&gt; 는 &lt;code&gt;setFileMode&lt;/code&gt; 처럼 작동 하지만 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; 대신 파일 디스크립터 &lt;code&gt;fd&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="7eb32e620d3c7d1d6f887e0a29119dd6bca99be4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFdMode fd mode&lt;/code&gt; acts like &lt;code&gt;setFileMode&lt;/code&gt; but uses a file descriptor &lt;code&gt;fd&lt;/code&gt; instead of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setFdMode fd mode&lt;/code&gt; 는 &lt;code&gt;setFileMode&lt;/code&gt; 처럼 작동 하지만 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; 대신 파일 설명자 &lt;code&gt;fd&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b3cb294c5bdad39e6e2cb5c22700d1b534433391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFdMode fd mode&lt;/code&gt; acts like &lt;code&gt;setFileMode&lt;/code&gt; but uses a file descriptor &lt;code&gt;fd&lt;/code&gt; instead of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setFdMode fd mode&lt;/code&gt; 는 &lt;code&gt;setFileMode&lt;/code&gt; 처럼 작동 하지만 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; 대신 파일 설명자 &lt;code&gt;fd&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ffda38437b74002f3ab73764cb13b7c93039a299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileCreationMask mode&lt;/code&gt; sets the file mode creation mask to &lt;code&gt;mode&lt;/code&gt;. Modes set by this operation are subtracted from files and directories upon creation. The previous file creation mask is returned.</source>
          <target state="translated">&lt;code&gt;setFileCreationMask mode&lt;/code&gt; 는 파일 모드 작성 마스크를 &lt;code&gt;mode&lt;/code&gt; 로 설정합니다. . 이 조작으로 설정된 모드는 작성시 파일 및 디렉토리에서 뺍니다. 이전 파일 생성 마스크가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8eb867a5a2013f449224127aa025bb592268a99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileMode path mode&lt;/code&gt; changes permission of the file given by &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;mode&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; doesn't exist or if the effective user ID of the current process is not that of the file's owner.</source>
          <target state="translated">&lt;code&gt;setFileMode path mode&lt;/code&gt; 는 &lt;code&gt;path&lt;/code&gt; 로 지정된 파일의 권한을 mode로 변경 &lt;code&gt;mode&lt;/code&gt; . &lt;code&gt;path&lt;/code&gt; 가 존재하지 않거나 현재 프로세스의 유효 사용자 ID가 파일 소유자의 ID가 아닌 경우 &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 과 함께이 조작이 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5a727db0eead596618d8587d321ff8bbace2092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileMode path mode&lt;/code&gt; changes permission of the file given by &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;mode&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; doesn't exist or if the effective user ID of the current process is not that of the file's owner.</source>
          <target state="translated">&lt;code&gt;setFileMode path mode&lt;/code&gt; 는 &lt;code&gt;path&lt;/code&gt; 로 지정된 파일의 권한을 mode로 변경 &lt;code&gt;mode&lt;/code&gt; . &lt;code&gt;path&lt;/code&gt; 가 존재하지 않거나 현재 프로세스의 유효 사용자 ID가 파일 소유자의 ID가 아닌 경우 &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 과 함께이 조작이 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b178f8ce3d50ce801bf6b2f53e4f64dee92925da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileTimes path atime mtime&lt;/code&gt; sets the access and modification times associated with file &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;atime&lt;/code&gt; and &lt;code&gt;mtime&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;setFileTimes path atime mtime&lt;/code&gt; 파일과 연관된 액세스 및 수정 시간 설정 &lt;code&gt;path&lt;/code&gt; 까지 &lt;code&gt;atime&lt;/code&gt; 및 &lt;code&gt;mtime&lt;/code&gt; 에 각각이.</target>
        </trans-unit>
        <trans-unit id="dfa90c6531c31f16f0794119cacd3d6de78a6275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setGroupID gid&lt;/code&gt; calls &lt;code&gt;setgid&lt;/code&gt; to set the real, effective, and saved set-group-id associated with the current process to &lt;code&gt;gid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setGroupID gid&lt;/code&gt; &lt;code&gt;setgid&lt;/code&gt; 를 호출 하여 현재 프로세스와 연관된 실제 유효하고 저장된 set-group-id를 &lt;code&gt;gid&lt;/code&gt; 로 설정합니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="cda9d847ff408053039c5d76348b7eca00aa0682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setGroups&lt;/code&gt; calls &lt;code&gt;setgroups&lt;/code&gt; to set the list of supplementary &lt;code&gt;GroupID&lt;/code&gt;s associated with the current process.</source>
          <target state="translated">&lt;code&gt;setGroups&lt;/code&gt; 호출 &lt;code&gt;setgroups&lt;/code&gt; 을을 보충의 목록을 설정하는 &lt;code&gt;GroupID&lt;/code&gt; 하여 현재 프로세스와 연관된 .</target>
        </trans-unit>
        <trans-unit id="05b6623dc4a1393e991d4276e89fa7b1f65a2ce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setInput input&lt;/code&gt; continues parsing with &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;text-parsec#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;setInput&lt;/code&gt; functions can for example be used to deal with #include files.</source>
          <target state="translated">&lt;code&gt;setInput input&lt;/code&gt; 은 input 과 구문 분석을 계속 &lt;code&gt;input&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;text-parsec#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; 에 와 &lt;code&gt;setInput&lt;/code&gt; 에 기능은 예를 들어 #INCLUDE 파일을 처리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a31195ceeff2a888e07bb6bd9f69c7f061eb088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setInput input&lt;/code&gt; continues parsing with &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;setInput&lt;/code&gt; functions can for example be used to deal with #include files.</source>
          <target state="translated">&lt;code&gt;setInput input&lt;/code&gt; 은 input 과 구문 분석을 계속 &lt;code&gt;input&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; 에 와 &lt;code&gt;setInput&lt;/code&gt; 에 기능은 예를 들어 #INCLUDE 파일을 처리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6865a1400c35697d031421a20797f3c0de3a07c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setInput input&lt;/code&gt; continues parsing with &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;setInput&lt;/code&gt; functions can for example be used to deal with #include files.</source>
          <target state="translated">&lt;code&gt;setInput input&lt;/code&gt; 은 input 과 구문 분석을 계속 &lt;code&gt;input&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; 에 와 &lt;code&gt;setInput&lt;/code&gt; 에 기능은 예를 들어 #INCLUDE 파일을 처리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13049f33a3ce6b4e3ddf9125c0b60ccceb35438d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setOwnerAndGroup path uid gid&lt;/code&gt; changes the owner and group of &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;setOwnerAndGroup path uid gid&lt;/code&gt; 는 소유자 및 &lt;code&gt;path&lt;/code&gt; 그룹 을 &lt;code&gt;uid&lt;/code&gt; 및 &lt;code&gt;gid&lt;/code&gt; 로 변경합니다. 각각.</target>
        </trans-unit>
        <trans-unit id="5f6b2ce14924773d071cdb89feac6b506ff3391d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setParserState st&lt;/code&gt; set the full parser state to &lt;code&gt;st&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setParserState st&lt;/code&gt; 전체 파서 상태를 &lt;code&gt;st&lt;/code&gt; 로 설정 .</target>
        </trans-unit>
        <trans-unit id="59f8d0f2b216a37317940928988683ccd8a49ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setPosition pos&lt;/code&gt; sets the current source position to &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setPosition pos&lt;/code&gt; 는 현재 소스 위치를 &lt;code&gt;pos&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="90d7a07e5e261bb44aed049c3d7024d386eace35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setSignalMask mask&lt;/code&gt; calls &lt;code&gt;sigprocmask&lt;/code&gt; with &lt;code&gt;SIG_SETMASK&lt;/code&gt; to block all interrupts in &lt;code&gt;mask&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setSignalMask mask&lt;/code&gt; 는 &lt;code&gt;SIG_SETMASK&lt;/code&gt; 와 함께 &lt;code&gt;sigprocmask&lt;/code&gt; 를 호출 하여 &lt;code&gt;mask&lt;/code&gt; 의 모든 인터럽트를 차단합니다 .</target>
        </trans-unit>
        <trans-unit id="9b62df21d578e60086418669f594c90551b40b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setTerminalAttributes fd attr ts&lt;/code&gt; calls &lt;code&gt;tcsetattr&lt;/code&gt; to change the &lt;code&gt;TerminalAttributes&lt;/code&gt; associated with &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; to &lt;code&gt;attr&lt;/code&gt;, when the terminal is in the state indicated by &lt;code&gt;ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setTerminalAttributes fd attr ts&lt;/code&gt; 는 터미널이 &lt;code&gt;ts&lt;/code&gt; 로 표시된 상태에있을 때 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 와 연관된 &lt;code&gt;TerminalAttributes&lt;/code&gt; 를 &lt;code&gt;attr&lt;/code&gt; 로 변경하기 위해 &lt;code&gt;tcsetattr&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c3ccc3e3331d7159eb6aaad72d38f33f90d07516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setTerminalProcessGroupID fd pgid&lt;/code&gt; calls &lt;code&gt;tcsetpgrp&lt;/code&gt; to set the &lt;code&gt;ProcessGroupID&lt;/code&gt; of the foreground process group associated with the terminal attached to &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setTerminalProcessGroupID fd pgid&lt;/code&gt; 호출 &lt;code&gt;tcsetpgrp&lt;/code&gt; 를 세트에 &lt;code&gt;ProcessGroupID&lt;/code&gt; 를 부착 단말과 연관된 전경 프로세스기로 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 에 &lt;code&gt;pgid&lt;/code&gt; 가이 .</target>
        </trans-unit>
        <trans-unit id="71352b8c5016c5719f130ce4158d5795f5364762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setUserID uid&lt;/code&gt; calls &lt;code&gt;setuid&lt;/code&gt; to set the real, effective, and saved set-user-id associated with the current process to &lt;code&gt;uid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setUserID uid&lt;/code&gt; &lt;code&gt;setuid&lt;/code&gt; 를 호출 하여 현재 프로세스와 연관된 실제 유효하고 저장된 set-user-id를 &lt;code&gt;uid&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="36b060ea85ca0f12ed8fd7d54fc896de2be3fbe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signalProcess int pid&lt;/code&gt; calls &lt;code&gt;kill&lt;/code&gt; to signal process &lt;code&gt;pid&lt;/code&gt; with interrupt signal &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;signalProcess int pid&lt;/code&gt; 호출 은 인터럽트 신호 &lt;code&gt;int&lt;/code&gt; 로 프로세스 &lt;code&gt;pid&lt;/code&gt; 신호를 보내기 &lt;code&gt;kill&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="768bd67e3ea95321f64a00ec87bddccb6e083afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signalProcessGroup int pgid&lt;/code&gt; calls &lt;code&gt;kill&lt;/code&gt; to signal all processes in group &lt;code&gt;pgid&lt;/code&gt; with interrupt signal &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;signalProcessGroup int pgid&lt;/code&gt; 통화를 &lt;code&gt;kill&lt;/code&gt; 그룹의 모든 프로세스 신호를 &lt;code&gt;pgid&lt;/code&gt; 가 인터럽트 신호와 &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13c91da54236e45c36fd001f1da561745fa1f864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipMany p&lt;/code&gt; applies the parser &lt;code&gt;p&lt;/code&gt;&lt;em&gt;zero&lt;/em&gt; or more times, skipping its result.</source>
          <target state="translated">&lt;code&gt;skipMany p&lt;/code&gt; 는 파서 &lt;code&gt;p&lt;/code&gt; &lt;em&gt;0을&lt;/em&gt; 적용합니다&lt;em&gt;&lt;/em&gt; 번 이상 하고 결과를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="fd3243666dc2a4a55dea6762c3d734849c5a827b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipMany1 p&lt;/code&gt; applies the parser &lt;code&gt;p&lt;/code&gt;&lt;em&gt;one&lt;/em&gt; or more times, skipping its result.</source>
          <target state="translated">&lt;code&gt;skipMany1 p&lt;/code&gt; 는 구문 분석기 &lt;code&gt;p&lt;/code&gt; 를&lt;em&gt;한&lt;/em&gt; 번 이상 적용 하고 결과를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="fe87a301df3e166696a7e70dde2bd92b693b50d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stock&lt;/code&gt;: Have GHC implement a &amp;ldquo;standard&amp;rdquo; instance for a data type, if possible (e.g., &lt;code&gt;Eq&lt;/code&gt;, &lt;code&gt;Ord&lt;/code&gt;, &lt;code&gt;Generic&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt;, &lt;code&gt;Functor&lt;/code&gt;, etc.)</source>
          <target state="translated">&lt;code&gt;stock&lt;/code&gt; : 가능한 경우 GHC가 데이터 유형에 대해 &quot;표준&quot;인스턴스를 구현하도록하십시오 (예 : &lt;code&gt;Eq&lt;/code&gt; , &lt;code&gt;Ord&lt;/code&gt; , &lt;code&gt;Generic&lt;/code&gt; , &lt;code&gt;Data&lt;/code&gt; , &lt;code&gt;Functor&lt;/code&gt; 등)</target>
        </trans-unit>
        <trans-unit id="74986175d8266038caefa62ac5e59f42996dccf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string s&lt;/code&gt; parses a sequence of characters given by &lt;code&gt;s&lt;/code&gt;. Returns the parsed string (i.e. &lt;code&gt;s&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;string s&lt;/code&gt; 구문 분석에 의해 주어진 일련의 문자 &lt;code&gt;s&lt;/code&gt; . 파싱 ​​된 문자열을 반환합니다 (예 : &lt;code&gt;s&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0be1cb00b935dd01926cf0627d3bcb71ec27635f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;product&lt;/code&gt;, &lt;code&gt;maximum&lt;/code&gt;, and &lt;code&gt;minimum&lt;/code&gt; should all be essentially equivalent to &lt;code&gt;foldMap&lt;/code&gt; forms, such as</source>
          <target state="translated">&lt;code&gt;sum&lt;/code&gt; , &lt;code&gt;product&lt;/code&gt; , &lt;code&gt;maximum&lt;/code&gt; 및 &lt;code&gt;minimum&lt;/code&gt; 은 모두 기본적으로 &lt;code&gt;foldMap&lt;/code&gt; 과 동일해야합니다. 양식</target>
        </trans-unit>
        <trans-unit id="9cde322f2c41ade8bb79e24597dc2f44ca5b188b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; 모든 실용적 변환 용 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="286fbc3f2e24c73982d6a63e429fda7383660524" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; 모든 적용 변환에 대한 트래버스 (t.f) &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c4e16b6f9802162989c29abe9e129094dafee5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; 모든 실용적 변환 용 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b73b395dd285ab403cad7df445e6f3f3082f0aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; 모든 적용 변환에 대한 트래버스 (t.f) &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efd6d2cfb064cae50fe766decb5dfdb2f6546e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; , &lt;code&gt;filter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71919383e786fc02ffee26a3052be3266871a72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeMVar&lt;/code&gt; can be interrupted by an asynchronous exception. If this happens, the callback in C will still run at some point in the future, will still write the result, and will still call &lt;code&gt;hs_try_putmvar()&lt;/code&gt;. Therefore we have to arrange that the memory for the result stays alive until the callback has run, so if an exception is thrown during &lt;code&gt;takeMVar&lt;/code&gt; we fork another thread to wait for the callback and hold the memory alive using &lt;code&gt;touchForeignPtr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;takeMVar&lt;/code&gt; 는 비동기 예외에 의해 중단 될 수 있습니다. 이런 일이 발생하면 C의 콜백은 앞으로도 어느 시점에서 계속 실행되어 결과를 &lt;code&gt;hs_try_putmvar()&lt;/code&gt; 여전히 hs_try_putmvar ()을 호출 합니다. 따라서 콜백이 실행될 때까지 결과에 대한 메모리가 &lt;code&gt;takeMVar&lt;/code&gt; 상태로 유지되도록해야합니다. 따라서 takeMVar 중에 예외가 발생하면 다른 스레드를 분기하여 콜백을 대기하고 &lt;code&gt;touchForeignPtr&lt;/code&gt; 을 사용하여 메모리를 활성 상태로 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="0806004cd897adf5e3fdbdd1689fe81a85a3a193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;touchFile path&lt;/code&gt; sets the access and modification times associated with file &lt;code&gt;path&lt;/code&gt; to the current time.</source>
          <target state="translated">&lt;code&gt;touchFile path&lt;/code&gt; 는 파일 &lt;code&gt;path&lt;/code&gt; 와 관련된 액세스 및 수정 시간 을 현재 시간으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="546955895ba67a1f2fe78c3bc4bc41e85564c2d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; declarations:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 선언 :</target>
        </trans-unit>
        <trans-unit id="c0ac793228c71dc7fba088328f57689df799d75a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt; &amp;mdash; user events. These are events emitted from Haskell code using functions such as &lt;code&gt;Debug.Trace.traceEvent&lt;/code&gt;. Enabled by default.</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; &amp;mdash; 사용자 이벤트. 이는 &lt;code&gt;Debug.Trace.traceEvent&lt;/code&gt; 와 같은 함수를 사용하여 Haskell 코드에서 생성 된 이벤트입니다. 입니다. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bac91f676ff505dab80496e846b4a80e14109200" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unblockSignals mask&lt;/code&gt; calls &lt;code&gt;sigprocmask&lt;/code&gt; with &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; to remove all interrupts in &lt;code&gt;mask&lt;/code&gt; from the set of blocked interrupts.</source>
          <target state="translated">&lt;code&gt;unblockSignals mask&lt;/code&gt; 는 &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; 과 함께 &lt;code&gt;sigprocmask&lt;/code&gt; 를 호출 하여 차단 된 인터럽트 세트 에서 &lt;code&gt;mask&lt;/code&gt; 모든 인터럽트를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="e19ffa0ebfa12476abcd767472f619bfcd6954de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unfoldForest f seeds&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; on each seed value.</source>
          <target state="translated">&lt;code&gt;unfoldForest f seeds&lt;/code&gt; 는 각 seed 값에 대해 &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="488e34b3c85668e310a79644972e6a0cc0f4c050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unfoldTree f b&lt;/code&gt; constructs a tree by starting with the tree &lt;code&gt;Node { rootLabel=b, subForest=[] }&lt;/code&gt; and repeatedly applying &lt;code&gt;f&lt;/code&gt; to each &lt;code&gt;&lt;a href=&quot;data-tree#v:rootLabel&quot;&gt;rootLabel&lt;/a&gt;&lt;/code&gt; value in the tree's leaves to generate its &lt;code&gt;&lt;a href=&quot;data-tree#v:subForest&quot;&gt;subForest&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unfoldTree f b&lt;/code&gt; 는 트리 &lt;code&gt;Node { rootLabel=b, subForest=[] }&lt;/code&gt; 로 시작하여 나무 잎의 각 &lt;code&gt;&lt;a href=&quot;data-tree#v:rootLabel&quot;&gt;rootLabel&lt;/a&gt;&lt;/code&gt; 값에 &lt;code&gt;f&lt;/code&gt; 를 반복적으로 적용 하여 &lt;code&gt;&lt;a href=&quot;data-tree#v:subForest&quot;&gt;subForest&lt;/a&gt;&lt;/code&gt; 를 생성하여 트리를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="c5c0d0af382bafc12f77e85f32fa88d99b7374cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unloadObj&lt;/code&gt; drops the given dynamic library from the symbol table as well as enables the library to be removed from memory during a future major GC.</source>
          <target state="translated">&lt;code&gt;unloadObj&lt;/code&gt; 는 심볼 테이블에서 지정된 동적 라이브러리를 삭제하고 향후 주요 GC 중에 라이브러리에서 메모리에서 제거 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="101f2ddd29363fd0306605ede235ffe98e99f70e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unpackClosure# closure&lt;/code&gt; copies the closure and pointers in the payload of the given closure into two new arrays, and returns a pointer to the first word of the closure's info table, a non-pointer array for the raw bytes of the closure, and a pointer array for the pointers in the payload.</source>
          <target state="translated">&lt;code&gt;unpackClosure# closure&lt;/code&gt; 는 주어진 클로저의 페이로드에있는 클로저와 포인터를 두 개의 새로운 배열로 복사하고 클로저 정보 테이블의 첫 번째 단어에 대한 포인터, 클로저의 원시 바이트에 대한 비 포인터 배열 및 포인터를 반환합니다. 페이로드의 포인터 배열.</target>
        </trans-unit>
        <trans-unit id="fe56c4063908142ae106b6be5163c142c0d52eba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsetEnv name&lt;/code&gt; removes the specified environment variable from the environment of the current process.</source>
          <target state="translated">&lt;code&gt;unsetEnv name&lt;/code&gt; 은 현재 프로세스 환경에서 지정된 환경 변수를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="c1d5594570a9a04161ca74be624f7960c0fdf72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip&lt;/code&gt;, &lt;code&gt;unzip2&lt;/code&gt;, &lt;code&gt;unzip3&lt;/code&gt;, &lt;code&gt;unzip4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unzip&lt;/code&gt; , &lt;code&gt;unzip2&lt;/code&gt; , &lt;code&gt;unzip3&lt;/code&gt; , &lt;code&gt;unzip4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc234395126813de5787b2ab0844753677fb6e91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzipWith&lt;/code&gt; produces its two results in lockstep. If you calculate &lt;code&gt; unzipWith f xs &lt;/code&gt; and fully force &lt;em&gt;either&lt;/em&gt; of the results, then the entire structure of the &lt;em&gt;other&lt;/em&gt; one will be built as well. This behavior allows the garbage collector to collect each calculated pair component as soon as it dies, without having to wait for its mate to die. If you do not need this behavior, you may be better off simply calculating the sequence of pairs and using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; to extract each component sequence.</source>
          <target state="translated">&lt;code&gt;unzipWith&lt;/code&gt; 는 두 단계의 잠금 단계를 생성합니다. &lt;code&gt; unzipWith f xs &lt;/code&gt; 를 계산 하고 결과 &lt;em&gt;중 하나&lt;/em&gt; 를 완전히 강제 하면 &lt;em&gt;다른&lt;/em&gt; 구조의 전체 구조 도 빌드됩니다. 이 동작을 통해 가비지 수집기는 메이트가 죽을 때까지 기다릴 필요없이 계산 된 각 쌍 구성 요소가 죽 자마자 수집 할 수 있습니다. 이 동작이 필요하지 않으면 단순히 쌍의 시퀀스를 계산하고 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 을 사용하는 것이 좋습니다. 을 각 구성 요소 시퀀스를 추출 .</target>
        </trans-unit>
        <trans-unit id="1df0cc89a47dbe6ce6069d94344a03d90896a9bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzipWith&lt;/code&gt; produces its two results in lockstep. If you calculate &lt;code&gt; unzipWith f xs &lt;/code&gt; and fully force &lt;em&gt;either&lt;/em&gt; of the results, then the entire structure of the &lt;em&gt;other&lt;/em&gt; one will be built as well. This behavior allows the garbage collector to collect each calculated pair component as soon as it dies, without having to wait for its mate to die. If you do not need this behavior, you may be better off simply calculating the sequence of pairs and using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; to extract each component sequence.</source>
          <target state="translated">&lt;code&gt;unzipWith&lt;/code&gt; 는 lockstep에서 두 가지 결과를 생성합니다. &lt;code&gt; unzipWith f xs &lt;/code&gt; 를 계산 하고 결과 &lt;em&gt;중 하나&lt;/em&gt; 를 완전히 강제 하면 &lt;em&gt;다른&lt;/em&gt; 하나 의 전체 구조 도 빌드됩니다. 이 동작을 통해 가비지 수집기는 메이트가 죽을 때까지 기다릴 필요없이 죽 자마자 계산 된 각 쌍 구성 요소를 수집 할 수 있습니다. 이 동작이 필요하지 않은 경우 단순히 쌍의 시퀀스를 계산하고 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 을 사용하여 각 구성 요소 시퀀스를 추출 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1346709e2f648a16f0c23a4333d8dd4ef0ff8555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzipWith&lt;/code&gt; produces its two results in lockstep. If you calculate &lt;code&gt; unzipWith f xs &lt;/code&gt; and fully force &lt;em&gt;either&lt;/em&gt; of the results, then the entire structure of the &lt;em&gt;other&lt;/em&gt; one will be built as well. This behavior allows the garbage collector to collect each calculated pair component as soon as it dies, without having to wait for its mate to die. If you do not need this behavior, you may be better off simply calculating the sequence of pairs and using &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; to extract each component sequence.</source>
          <target state="translated">&lt;code&gt;unzipWith&lt;/code&gt; 는 lockstep에서 두 가지 결과를 생성합니다. &lt;code&gt; unzipWith f xs &lt;/code&gt; 를 계산 하고 결과 &lt;em&gt;중 하나&lt;/em&gt; 를 완전히 강제 하면 &lt;em&gt;다른&lt;/em&gt; 하나 의 전체 구조 도 빌드됩니다. 이 동작을 통해 가비지 수집기는 메이트가 죽을 때까지 기다릴 필요없이 죽 자마자 계산 된 각 쌍 구성 요소를 수집 할 수 있습니다. 이 동작이 필요하지 않은 경우 단순히 쌍의 시퀀스를 계산하고 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 을 사용하여 각 구성 요소 시퀀스를 추출 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="416424db0eea8d026587dff582e683bbd81b80a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updateParserState f&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to the parser state.</source>
          <target state="translated">&lt;code&gt;updateParserState f&lt;/code&gt; 함수 적용 &lt;code&gt;f&lt;/code&gt; 를 파서 상태에 .</target>
        </trans-unit>
        <trans-unit id="d2b7da99b42f639297b767e8ff67542f1759d842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v1..vn&lt;/code&gt; are type variables, and &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;s1..sk&lt;/code&gt;, &lt;code&gt;t1..tj&lt;/code&gt; are types.</source>
          <target state="translated">&lt;code&gt;v1..vn&lt;/code&gt; 은 유형 변수이며 &lt;code&gt;t&lt;/code&gt; , &lt;code&gt;s1..sk&lt;/code&gt; , &lt;code&gt;t1..tj&lt;/code&gt; 는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="357002452d362f6cfb47953c8fae798bd5f57c66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vertexFromKey :: key -&amp;gt; Maybe Vertex&lt;/code&gt; returns the &lt;code&gt;Int&lt;/code&gt; vertex for the key if it exists in the graph, &lt;code&gt;Nothing&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;vertexFromKey :: key -&amp;gt; Maybe Vertex&lt;/code&gt; 는 키에 &lt;code&gt;Int&lt;/code&gt; 꼭짓점이 있으면 그래프에 &lt;code&gt;Nothing&lt;/code&gt; 반환 하지 않습니다. 그렇지 않으면 반환 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2f29f83800fb5491f61584614b81837f63da046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;via&lt;/code&gt;: Use &lt;a href=&quot;#extension-DerivingVia&quot;&gt;&lt;code&gt;DerivingVia&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;#deriving-via&quot;&gt;Deriving via&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;via&lt;/code&gt; : &lt;a href=&quot;#extension-DerivingVia&quot;&gt; &lt;code&gt;DerivingVia&lt;/code&gt; &lt;/a&gt; 사용 ( &lt;a href=&quot;#deriving-via&quot;&gt;Deriving via&lt;/a&gt; 참조 ) )</target>
        </trans-unit>
        <trans-unit id="28f46e95a603f5b928c00b3ce82a1346bf8b9829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;via&lt;/code&gt;: Use &lt;a href=&quot;deriving_via#extension-DerivingVia&quot;&gt;&lt;code&gt;DerivingVia&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;deriving_via#deriving-via&quot;&gt;Deriving via&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;via&lt;/code&gt; : 사용 &lt;a href=&quot;deriving_via#extension-DerivingVia&quot;&gt; &lt;code&gt;DerivingVia&lt;/code&gt; &lt;/a&gt; (참조 &lt;a href=&quot;deriving_via#deriving-via&quot;&gt;도출을 통해&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a16dd80212d6b6ff9f1328d470ef1b17023bdf9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;w&lt;/code&gt; - the output to accumulate.</source>
          <target state="translated">&lt;code&gt;w&lt;/code&gt; 누적되는 출력</target>
        </trans-unit>
        <trans-unit id="5ae241bd707600cfac66e75bb696f2fab5ccfa4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;compare x y == GT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;compare x y == GT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ad96211a0464e341b29628255c9196c833c6b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;y &amp;lt; x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;y &amp;lt; x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21e206a9fafe0d666e622b4a7c2cc3622dbf3f78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt;= y&lt;/code&gt; = &lt;code&gt;y &amp;lt;= x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= y&lt;/code&gt; = &lt;code&gt;y &amp;lt;= x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5aa3feae6a58a1951e17fb22c0c5dcde77347f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;compare x y == LT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;compare x y == LT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a9c7cfb5259bcfba9ab0dd4ebcc6ea895494fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;x &amp;lt;= y &amp;amp;&amp;amp; x /= y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;x &amp;lt;= y &amp;amp;&amp;amp; x /= y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0566b8324fef43fa53a2e00b874148a34ed135cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; (in &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt; 에서) )</target>
        </trans-unit>
        <trans-unit id="df851ee1aa0a627d07400ff7d24ff292f310106f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; (in &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt; 에서) )</target>
        </trans-unit>
        <trans-unit id="0e543755ace2ae50599cf3a46be72a5c50c36024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae323fb462f45fd714b64e9e0e517235a5743af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5847085f71415dd64a10a3ce4c86668cee52ef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x * fromInteger 1&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;fromInteger 1 * x&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x * fromInteger 1&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;fromInteger 1 * x&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb3af3bd4ac91546545e6e62f7ae83fb9fa6691b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x * recip x&lt;/code&gt; = &lt;code&gt;recip x * x&lt;/code&gt; = &lt;code&gt;fromInteger 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x * recip x&lt;/code&gt; = &lt;code&gt;recip x * x&lt;/code&gt; = &lt;code&gt;fromInteger 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0db8141a78e42c3a72acceb8bcef50d72e32db11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x + fromInteger 0&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x + fromInteger 0&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="329576ccdcce234a221f901194ef52303fc77904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x + negate x&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x + negate x&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8628b8534b0bc7e99ec149abde799f2ba773658c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x + y&lt;/code&gt; = &lt;code&gt;y + x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x + y&lt;/code&gt; = &lt;code&gt;y + x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf4724f88cb57f27ab7b605e932de14bbcc85988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x /= y&lt;/code&gt; = &lt;code&gt;not (x == y)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x /= y&lt;/code&gt; = &lt;code&gt;not (x == y)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21fdaa9c0b28d2e6457c85b6d8d0dc0eaa54189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 법)</target>
        </trans-unit>
        <trans-unit id="dac335da7d714294b4d21d230cb3b6ae9c38b26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 법칙)</target>
        </trans-unit>
        <trans-unit id="040988963f92cff3b8feb05f8aa360692b593bb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 법칙)</target>
        </trans-unit>
        <trans-unit id="5dd2c97c423b20f70854c0cff7205332082d21fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 법)</target>
        </trans-unit>
        <trans-unit id="be2da3669cdcb52cb3ee73a2b65c9a829f34930b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 법)</target>
        </trans-unit>
        <trans-unit id="5d0de2d5e3f27b15cb77f8c3c340f938ed7df7d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 법)</target>
        </trans-unit>
        <trans-unit id="c84d85e90b905ea5d153c2e0e814ac1f301d5cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 인 경우 비어</target>
        </trans-unit>
        <trans-unit id="e9391da006c7f19060d8cf8ccc10b373d54d3f13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 인 경우 비어</target>
        </trans-unit>
        <trans-unit id="3f50b0eb9de4bb7f00d66b4586a69b27604f7656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 인 경우 비어</target>
        </trans-unit>
        <trans-unit id="8e2ac0b3b48aa34bb5e8880b2bcbb579362b11b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f84a736278499a1263563c915ebbb19128e9bacd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d66f413f4cdc855e0b3fe3756077f1da3b373e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;compare x y == EQ&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;compare x y == EQ&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="601b2d6b723d90b16f4b9e84daa0b87ef9fa6a82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;y == x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;y == x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c15f4082bad64847b2240917d3e12b1e3b9d34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x `clearBit` i&lt;/code&gt; is the same as &lt;code&gt;x .&amp;amp;. complement (bit i)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x `clearBit` i&lt;/code&gt; 는 &lt;code&gt;x .&amp;amp;. complement (bit i)&lt;/code&gt; 와 동일 합니다. 보수 (비트 i)</target>
        </trans-unit>
        <trans-unit id="c0ea9caeb1827a2f4126e11b0540e03dc0d9cf05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x `complementBit` i&lt;/code&gt; is the same as &lt;code&gt;x `xor` bit i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x `complementBit` i&lt;/code&gt; &lt;code&gt;x `xor` bit i&lt;/code&gt; i 는 x`xor` 비트 i 와 동일</target>
        </trans-unit>
        <trans-unit id="05d9716de33bb9f08b4a4690f0c099084b01f466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x `setBit` i&lt;/code&gt; is the same as &lt;code&gt;x .|. bit i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x `setBit` i&lt;/code&gt; 는 &lt;code&gt;x .|. bit i&lt;/code&gt; 와 같습니다 . |. 나 조금</target>
        </trans-unit>
        <trans-unit id="742d686f46836a5cc3c066d1186e0122de824d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x `testBit` i&lt;/code&gt; is the same as &lt;code&gt;x .&amp;amp;. bit n /= 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x `testBit` i&lt;/code&gt; 는 &lt;code&gt;x .&amp;amp;. bit n /= 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7982d2b1e3786a2550caade576c79f50aa8da8e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * div x y + mod x y&lt;/code&gt; with &lt;code&gt;mod x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; or &lt;code&gt;f (mod x y)&lt;/code&gt; &amp;lt; &lt;code&gt;f y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * div x y + mod x y&lt;/code&gt; 로 &lt;code&gt;mod x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; 또는 &lt;code&gt;f (mod x y)&lt;/code&gt; &amp;lt; &lt;code&gt;f y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d569428b655a245498a73da1168b267093dea2d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * quot x y + rem x y&lt;/code&gt; with &lt;code&gt;rem x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; or &lt;code&gt;g (rem x y)&lt;/code&gt; &amp;lt; &lt;code&gt;g y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * quot x y + rem x y&lt;/code&gt; with &lt;code&gt;rem x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; 또는 &lt;code&gt;g (rem x y)&lt;/code&gt; &amp;lt; &lt;code&gt;g y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e222eb3b2732525891741d8fd5b65ec684d36fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xs !! n&lt;/code&gt; returns the element of the stream &lt;code&gt;xs&lt;/code&gt; at index &lt;code&gt;n&lt;/code&gt;. Note that the head of the stream has index 0.</source>
          <target state="translated">&lt;code&gt;xs !! n&lt;/code&gt; 은 인덱스 &lt;code&gt;n&lt;/code&gt; 의 스트림 &lt;code&gt;xs&lt;/code&gt; 요소를 반환합니다 . 스트림 헤드의 인덱스는 0입니다.</target>
        </trans-unit>
        <trans-unit id="b5370b7f8201938b5ed2347f8567872fae6d4ba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-dd&lt;/code&gt; (ISO 8601:2004(E) sec. 4.1.2.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-dd&lt;/code&gt; (ISO 8601 : 2004 (E) 초 4.1.2.2 확장 형식)</target>
        </trans-unit>
        <trans-unit id="8e41d3d8eebba40636821057acdc4ac6f852d3b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&amp;plusmn;hh:mm&lt;/code&gt; (ISO 8601:2004(E) sec. 4.3.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&amp;plusmn;hh:mm&lt;/code&gt; (ISO 8601 : 2004 (E) 초 4.3.2 확장 형식)</target>
        </trans-unit>
        <trans-unit id="5bc9d75ce0ced05428136eb2d477a013f2242efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&lt;/code&gt; (ISO 8601:2004(E) sec. 4.3.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&lt;/code&gt; (ISO 8601 : 2004 (E) 초 4.3.2 확장 형식)</target>
        </trans-unit>
        <trans-unit id="107b9eb89699287951fb08339c754900dcfed7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]Z&lt;/code&gt; (ISO 8601:2004(E) sec. 4.3.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]Z&lt;/code&gt; (ISO 8601 : 2004 (E) 초 4.3.2 확장 형식)</target>
        </trans-unit>
        <trans-unit id="365adfe40f8a5c6e9d0a613a2e994422a5f6ceaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;z&lt;/code&gt; stack squeezing &amp;amp; lazy blackholing</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; 스택 압착 및 게으른 블랙홀 링</target>
        </trans-unit>
        <trans-unit id="f066afb123e9bdff92af0060a807878ad49bd101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;zipWith&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;zipWith&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9bb6877312ac648655613406340d15e406705f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;zipWith&lt;/code&gt; (but on one argument only; if both are good producers, &lt;code&gt;zip&lt;/code&gt; will fuse with one but not the other)</source>
          <target state="translated">&lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;zipWith&lt;/code&gt; (하나의 인수에만 해당; 둘 다 좋은 생산자 인 경우 &lt;code&gt;zip&lt;/code&gt; 은 하나와 융합하지만 다른 하나는 융합되지 않음)</target>
        </trans-unit>
        <trans-unit id="dec683c6c6f4a929a3a633e0aa9cea036ac78cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ #x }&lt;/code&gt; ( Overloaded label )</source>
          <target state="translated">&lt;code&gt;{ #x }&lt;/code&gt; (과부하 라벨)</target>
        </trans-unit>
        <trans-unit id="65f3bf090257dbf312605b17d03be9ddeb722510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ ?x }&lt;/code&gt; ( Implicit parameter )</source>
          <target state="translated">&lt;code&gt;{ ?x }&lt;/code&gt; (암시 적 매개 변수)</target>
        </trans-unit>
        <trans-unit id="83c4403cae263b04afc2cd60c28f77504c1bf11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ do { p &amp;lt;- e1; e2 }  }&lt;/code&gt; or a qualified do if the module name is present</source>
          <target state="translated">&lt;code&gt;{ do { p &amp;lt;- e1; e2 } }&lt;/code&gt; 또는 모듈 이름이있는 경우 정규화 된 do</target>
        </trans-unit>
        <trans-unit id="1c976af6ba839b19b1de65cd5f093bb39685ea4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ mdo { x &amp;lt;- e1 y; y &amp;lt;- e2 x; } }&lt;/code&gt; or a qualified mdo if the module name is present</source>
          <target state="translated">&lt;code&gt;{ mdo { x &amp;lt;- e1 y; y &amp;lt;- e2 x; } }&lt;/code&gt; 또는 모듈 이름이있는 경우 정규화 된 mdo</target>
        </trans-unit>
        <trans-unit id="b742b01ff7fc5676d44094a9a942f4ee62692d0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p }&lt;/code&gt; unidirectional or &lt;code&gt;{ pattern P v1 v2 .. vn = p  }&lt;/code&gt; implicit bidirectional or &lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p
        where P v1 v2 .. vn = e  }&lt;/code&gt; explicit bidirectional</source>
          <target state="translated">&lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p }&lt;/code&gt; 단방향 또는 &lt;code&gt;{ pattern P v1 v2 .. vn = p }&lt;/code&gt; 암시 적 양방향 또는 &lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p where P v1 v2 .. vn = e }&lt;/code&gt; 명시 적 양방향</target>
        </trans-unit>
        <trans-unit id="1b208bc494b2701ff488406108c28f650ac65992" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(&lt;a href=&quot;#id2&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;#id8&quot;&gt;2&lt;/a&gt;)&lt;/em&gt; In practice, the FFI should not be used for a task as simple as reading bytes from a &lt;code&gt;MutableByteArray#&lt;/code&gt;. Users should prefer &lt;code&gt;GHC.Exts.readWord8Array#&lt;/code&gt; for this.</source>
          <target state="translated">&lt;em&gt;( &lt;a href=&quot;#id2&quot;&gt;1&lt;/a&gt; , &lt;a href=&quot;#id8&quot;&gt;2&lt;/a&gt; )&lt;/em&gt; 실제로 FFI는 &lt;code&gt;MutableByteArray#&lt;/code&gt; 에서 바이트를 읽는 것처럼 간단한 작업에 사용해서는 안됩니다 . 사용자는 이를 위해 &lt;code&gt;GHC.Exts.readWord8Array#&lt;/code&gt; 를 선호해야합니다 .</target>
        </trans-unit>
        <trans-unit id="08f08f91cafaaeed1e2f80fb876e8abf6eb37748" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(deprecated)&lt;/em&gt; warn about polymorphic local bindings without signatures</source>
          <target state="translated">&lt;em&gt;(더 이상 사용되지 않음)&lt;/em&gt; 서명이없는 다형성 로컬 바인딩에 대해 경고</target>
        </trans-unit>
        <trans-unit id="b3856f9d445424436029ce02ffea084bea60b0f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(deprecated)&lt;/em&gt; warn about top-level functions without signatures, only if they are exported. takes precedence over -Wmissing-signatures</source>
          <target state="translated">&lt;em&gt;(더 이상 사용되지 않음)&lt;/em&gt; 서명이없는 최상위 함수는 내보내는 경우에만 경고합니다. -Wissing-signatures보다 우선합니다</target>
        </trans-unit>
        <trans-unit id="82289b73295a37e000437a3a2561ca5ef13c5b45" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(deprecated)&lt;/em&gt; warn when a &lt;code&gt;.hi&lt;/code&gt; file in the current directory shadows a library</source>
          <target state="translated">&lt;em&gt;(더 이상 사용되지 않음)&lt;/em&gt; 현재 디렉토리 의 &lt;code&gt;.hi&lt;/code&gt; 파일이 라이브러리를 섀도 잉 할 때 경고</target>
        </trans-unit>
        <trans-unit id="5434178603c89ab9c0003e067becad16160ce143" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A New Notation for Arrows&lt;/em&gt;, by Ross Paterson, in &lt;em&gt;ICFP 2001&lt;/em&gt;, Firenze, Italy, pp229-240.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Ross Paterson의 &lt;em&gt;ICFP 2001&lt;/em&gt; , Firenze, Italy, pp229-240의 &lt;em&gt;화살표&lt;/em&gt; 에 &lt;em&gt;대한 새로운 표기법&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7dd53ed299ffea23c0efeba5f0f67ff24095eae8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A historical note.&lt;/em&gt; GHC used to impose some more restrictive and less principled conditions on type signatures. For type &lt;code&gt;forall tv1..tvn (c1, ...,cn) =&amp;gt; type&lt;/code&gt; GHC used to require</source>
          <target state="translated">&lt;em&gt;역사적 메모. &lt;/em&gt;GHC는 형식 서명에 대해 좀 더 제한적이고 덜 원칙적인 조건을 부과하는 데 사용되었습니다. 모든 &lt;code&gt;forall tv1..tvn (c1, ...,cn) =&amp;gt; type&lt;/code&gt; 유형의 경우 (c1, ..., cn) =&amp;gt; 필요한 GHC 유형</target>
        </trans-unit>
        <trans-unit id="2a00c3f3848ad82951e14175e94f6a827986c411" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A semantics for imprecise exceptions&lt;/em&gt;, by Simon Peyton Jones, Alastair Reid, Tony Hoare, Simon Marlow, Fergus Henderson, in &lt;em&gt;PLDI'99&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;em&gt;PLDI'99&lt;/em&gt; 에서 Simon Peyton Jones, Alastair Reid, Tony Hoare, Simon Marlow, Fergus Henderson의 &lt;em&gt;부정확 한 예외에 대한 의미론&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="09c6a41a7c624e1766c417db16cd4d57741cd08c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;All&lt;/em&gt; bindings not marked INLINE, whether exported or not, top level or nested, will be given automatic &lt;code&gt;SCC&lt;/code&gt; annotations. Functions marked INLINE must be given a cost centre manually.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;수출 여부에 상관없이 INLINE으로 표시되지 않은 &lt;em&gt;모든&lt;/em&gt; 바인딩에는 자동 &lt;code&gt;SCC&lt;/code&gt; 주석 이 제공됩니다 . INLINE으로 표시된 기능에는 코스트 센터가 수동으로 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="eabcd5305055073d7c098ef6fb1bbbe77609b9d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An Extensible Dynamically-Typed Hierarchy of Exceptions&lt;/em&gt;, by Simon Marlow, in &lt;em&gt;Haskell '06&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Simon Marlow의 &lt;em&gt;Haskell '06&lt;/em&gt; 에서 &lt;em&gt;확장 가능한 동적 유형 예외의 계층 구조&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a159a782aa2062cb24e8bedbd52d57211a37694f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Asynchronous exceptions in Haskell&lt;/em&gt;, by Simon Marlow, Simon Peyton Jones, Andy Moran and John Reppy, in &lt;em&gt;PLDI'01&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;하스켈에서 비동기 예외&lt;/em&gt; 사이먼 말로우, 사이먼 페이튼 존스, 앤디 모란과 존 레피에 의해, &lt;em&gt;PLDI'01&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ceb4edf2d3bf3be61162934272e34eec9c7133ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Beware&lt;/em&gt;: a negative or out-of-bounds index will cause an error.</source>
          <target state="translated">&lt;em&gt;주의&lt;/em&gt; : 음수 또는 범위를 벗어난 인덱스는 오류를 유발합니다.</target>
        </trans-unit>
        <trans-unit id="87e33a6ffeff3f5fd99e5613b63ed994c721b2ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bounded(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes that is no larger than a predetermined bound. That is, the bound is independent of the value that is encoded but the actual length will depend on the value. An example for a bounded primitive is the UTF-8 encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, which can be 1,2,3 or 4 bytes long, so the bound is 4 bytes.</source>
          <target state="translated">&lt;em&gt;바운딩 된 (-size) 프리미티브&lt;/em&gt; 는 빌더 프리미티브로, 미리 정해진 바인드보다 크지 않은 바이트 시퀀스를 항상 생성합니다. 즉, 바운드는 인코딩 된 값과 독립적이지만 실제 길이는 값에 따라 다릅니다. 바운딩 된 프리미티브의 예는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 의 UTF-8 인코딩으로 길이는 1,2,3 또는 4 바이트 일 수 있으며, 바인드는 4 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="a55cd548f9ce635bab44c817ce4170e41a9a84ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bounded(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes that is no larger than a predetermined bound. That is, the bound is independent of the value that is encoded but the actual length will depend on the value. An example for a bounded primitive is the UTF-8 encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, which can be 1,2,3 or 4 bytes long, so the bound is 4 bytes.</source>
          <target state="translated">&lt;em&gt;Bounded (-size) 기본 요소&lt;/em&gt; 는 항상 미리 결정된 경계보다 크지 않은 바이트 시퀀스를 생성하는 빌더 기본 요소입니다. 즉, 경계는 인코딩 된 값과 무관하지만 실제 길이는 값에 따라 달라집니다. 바운드 프리미티브의 예는 1 , 2, 3 또는 4 바이트 길이가 될 수 있는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 의 UTF-8 인코딩 이므로 바운드는 4 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="74d80b4d2cf4252b8c647092718f7ceb5abf6e9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bounded(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes that is no larger than a predetermined bound. That is, the bound is independent of the value that is encoded but the actual length will depend on the value. An example for a bounded primitive is the UTF-8 encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, which can be 1,2,3 or 4 bytes long, so the bound is 4 bytes.</source>
          <target state="translated">&lt;em&gt;Bounded (-size) 프리미티브&lt;/em&gt; 는 항상 미리 결정된 바인드보다 크지 않은 바이트 시퀀스를 생성하는 빌더 프리미티브입니다. 즉, 경계는 인코딩 된 값과 무관하지만 실제 길이는 값에 따라 달라집니다. 바운드 프리미티브의 예는 1 , 2, 3 또는 4 바이트 길이가 될 수 있는 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 의 UTF-8 인코딩 이므로 바운드는 4 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="1d5d31373296c3101d3eceeac03e8610ad0a71ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Changes since 1.2.3.0:&lt;/em&gt; The function has been altered to be more robust and has the same exception behavior as &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;1.2.3.0 이후의 변경 사항 :&lt;/em&gt; 이 함수는보다 강력하게 변경되었으며 &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt; 와 동일한 예외 동작을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="a86c602774d4cd617593f2c4c7874eb80693a5ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Changes since 1.3.0.0:&lt;/em&gt; The function no longer preserves the trailing path separator. File symbolic links that appear in the middle of a path are properly dereferenced. Case canonicalization and symbolic link expansion are now performed on Windows.</source>
          <target state="translated">&lt;em&gt;1.3.0.0 이후 변경 사항 :&lt;/em&gt; 이 함수는 더 이상 후행 경로 구분 기호를 유지하지 않습니다. 경로 중간에 나타나는 파일 심볼릭 링크가 올바르게 역 참조됩니다. Windows에서 사례 표준화 및 기호 링크 확장이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="bfb3e1295f6692bfe6aaae665399f93c2bc26cb4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compatibility note:&lt;/em&gt; Prior to base 4.7, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; was a combination of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. This mean that in the presence of other threads attempting to &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; could block. Furthermore, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; would not receive the next &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if there was already a pending thread blocked on &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The old behavior can be recovered by implementing 'readMVar as follows:</source>
          <target state="translated">&lt;em&gt;호환성 노트 :&lt;/em&gt; 기본 4.7 이전에, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 가 의 조합이었다 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 가 . 이는 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 를 시도하는 다른 스레드가 있는 경우 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 가 차단 될 수 있음을 의미합니다 . 또한, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 는 다음받을 것 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 을 이미 차단 계류중인 스레드가 있다면 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; . 다음과 같이 'readMVar'를 구현하면 이전 동작을 복구 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="319ca43387d89f62710ae2d4d129701ab966ab80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compatibility note:&lt;/em&gt; Prior to base 4.7, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; was a combination of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. This mean that in the presence of other threads attempting to &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; could block. Furthermore, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; would not receive the next &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if there was already a pending thread blocked on &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The old behavior can be recovered by implementing 'readMVar as follows:</source>
          <target state="translated">&lt;em&gt;호환성 노트 :&lt;/em&gt; 기본 4.7 이전에, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 가 의 조합이었다 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 가 . 이는 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 를 시도하는 다른 스레드가 있는 경우 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 가 차단 될 수 있음을 의미합니다 . 또한, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 는 다음받을 것 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 을 이미 차단 계류중인 스레드가 있다면 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; . 다음과 같이 'readMVar'를 구현하면 이전 동작을 복구 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2ac360117f063d2978509684266f81d0b959b00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compatibility note:&lt;/em&gt; Prior to base 4.7, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; was a combination of &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. This mean that in the presence of other threads attempting to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; could block. Furthermore, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; would not receive the next &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if there was already a pending thread blocked on &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The old behavior can be recovered by implementing 'readMVar as follows:</source>
          <target state="translated">&lt;em&gt;호환성 노트 :&lt;/em&gt; 기본 4.7 이전에, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 가 의 조합이었다 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 가 . 이는 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 를 시도하는 다른 스레드가 있는 경우 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 가 차단 될 수 있음을 의미합니다 . 또한, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 는 다음받을 것 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 을 이미 차단 계류중인 스레드가 있다면 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; . 다음과 같이 'readMVar'를 구현하면 이전 동작을 복구 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c030f78766179d99d8e90f096f9040d5014a348c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Composable memory transactions&lt;/em&gt;, by Tim Harris, Simon Marlow, Simon Peyton Jones, and Maurice Herlihy, in &lt;em&gt;ACM Conference on Principles and Practice of Parallel Programming&lt;/em&gt; 2005. &lt;a href=&quot;https://www.microsoft.com/en-us/research/publication/composable-memory-transactions/&quot;&gt;https://www.microsoft.com/en-us/research/publication/composable-memory-transactions/&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;em&gt;병렬 프로그래밍의 원칙과 실무에 관한 ACM 컨퍼런스에서&lt;/em&gt; Tim Harris, Simon Marlow, Simon Peyton Jones 및 Maurice Herlihy의 &lt;em&gt;작곡 가능한 메모리 트랜잭션&lt;/em&gt; . &lt;a href=&quot;https://www.microsoft.com/en-us/research/publication/composable-memory-transactions/&quot;&gt;https://www.microsoft.com/en-us/research/publication/composable 메모리 거래 /&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1384236f2def3ab4fc185f94284fcd38ee43b6a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Concurrency&lt;/em&gt; means implementing a program by using multiple I/O-performing threads. While a concurrent Haskell program &lt;em&gt;can&lt;/em&gt; run on a parallel machine, the primary goal of using concurrency is not to gain performance, but rather because that is the simplest and most direct way to write the program. Since the threads perform I/O, the semantics of the program is necessarily non-deterministic.</source>
          <target state="translated">&lt;em&gt;동시성&lt;/em&gt; 은 다중 I / O 수행 스레드를 사용하여 프로그램을 구현하는 것을 의미합니다. 동시 Haskell 프로그램 &lt;em&gt;은&lt;/em&gt; 병렬 시스템에서 실행될 &lt;em&gt;수&lt;/em&gt; 있지만 동시성 을 사용하는 주요 목표는 성능을 얻는 것이 아니라 프로그램을 작성하는 가장 단순하고 직접적인 방법이기 때문입니다. 스레드가 I / O를 수행하기 때문에 프로그램의 의미는 반드시 비 결정적입니다.</target>
        </trans-unit>
        <trans-unit id="9769d80734ce4bf34dc95f0640efe2c479cd90ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;현재 느립니다. &lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="ab5e6587c0995d55a3684ee1cd14c3397310ad1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;현재 느립니다. &lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="a7c470140844c8efa9ac7828527d2f6848e1675a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;현재 느립니다. &lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="501105d057ba603d5e0fe6107331cbb752e4f08a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;현재 느립니다. &lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="ed785bb7a18dc3129746f574de4c99b4b1ddbbd6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;현재 느립니다. &lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 의 10 진수 인코딩 .</target>
        </trans-unit>
        <trans-unit id="255d45ce435cd7cfaf78bfe1b70ffc4960d5798d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;현재 느립니다. &lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 의 십진 인코딩 .</target>
        </trans-unit>
        <trans-unit id="cef633ea41ab3c775f849cd0c8d5925778e5fd72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deprecated&lt;/em&gt;. Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing 7-bit ASCII encoded text.</source>
          <target state="translated">&lt;em&gt;더 이상 사용되지 않습니다&lt;/em&gt; . 7 비트 ASCII 인코딩 텍스트를 포함 하는 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="91ee4edb7c2f2b18337228cf9f871bffb2ce6152" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deprecated&lt;/em&gt;. Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing 7-bit ASCII encoded text.</source>
          <target state="translated">&lt;em&gt;더 이상 사용되지 않습니다&lt;/em&gt; . 7 비트 ASCII 인코딩 텍스트를 포함 하는 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 디코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="6587719ee839def4397854c915e327d0c7ab7343" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deprecated&lt;/em&gt;. Decode a &lt;code&gt;ByteString&lt;/code&gt; containing 7-bit ASCII encoded text.</source>
          <target state="translated">&lt;em&gt;더 이상 사용되지 않습니다&lt;/em&gt; . 7 비트 ASCII 인코딩 텍스트를 포함 하는 &lt;code&gt;ByteString&lt;/code&gt; 을 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="35a4beb7d9ace7831ced9f276401139e209978e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Either&lt;/em&gt; the class has no functional dependencies, and none of the type constructors in the instance head is declared in &lt;code&gt;M&lt;/code&gt;; &lt;em&gt;or&lt;/em&gt; there is a functional dependency for which none of the type constructors mentioned in the &lt;em&gt;non-determined&lt;/em&gt; part of the instance head is defined in &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;어느&lt;/em&gt; 클래스는 기능적인 종속성이없고, 머리에 선언 된 인스턴스의 타입 생성자 없음 &lt;code&gt;M&lt;/code&gt; ; &lt;em&gt;또는&lt;/em&gt; 인스턴스 헤드의 &lt;em&gt;결정되지 않은&lt;/em&gt; 부분 에서 언급 된 유형 생성자 가 &lt;code&gt;M&lt;/code&gt; 에 정의되어 있지 않은 기능적 종속성 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="69d233ec3e7419b821cebae877ba853dd31f9606" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 1:&lt;/em&gt; Find the possible locations of a Haskell module &lt;code&gt;Test&lt;/code&gt; imported from module &lt;code&gt;Main&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;예제 1 : &lt;/em&gt; &lt;code&gt;Main&lt;/code&gt; 모듈에서 가져온 Haskell 모듈 &lt;code&gt;Test&lt;/code&gt; 의 가능한 위치 찾기 :</target>
        </trans-unit>
        <trans-unit id="36ca18a44d985a8cfc24a08857c736aaad181a9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 2:&lt;/em&gt; Download a file from &lt;code&gt;url&lt;/code&gt; and save it to disk:</source>
          <target state="translated">&lt;em&gt;예 2 : &lt;/em&gt; &lt;code&gt;url&lt;/code&gt; 에서 파일을 다운로드 하여 디스크에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="ae3939ddef267bbf4bf180d9366e5d8818f80256" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 3:&lt;/em&gt; Compile a Haskell file, putting the &lt;code&gt;.hi&lt;/code&gt; file under &lt;code&gt;interface&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;예제 3 :&lt;/em&gt; Haskell 파일을 컴파일하여 &lt;code&gt;.hi&lt;/code&gt; 파일을 &lt;code&gt;interface&lt;/code&gt; 아래에 둡니다 .</target>
        </trans-unit>
        <trans-unit id="a6a420b71e7be83e3bb04156ec688b47d49eebd5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Experimental.&lt;/em&gt; Read a single chunk of strict text from a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The size of the chunk depends on the amount of input currently buffered.</source>
          <target state="translated">&lt;em&gt;실험적. &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 에서 하나의 엄격한 텍스트 덩어리를 읽습니다 . 청크의 크기는 현재 버퍼링 된 입력량에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="39e21225898ad6f4f2b9d2d7c7214272aa1a6530" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Experimental.&lt;/em&gt; Read a single chunk of strict text from a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The size of the chunk depends on the amount of input currently buffered.</source>
          <target state="translated">&lt;em&gt;실험적. &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 에서 엄격한 텍스트 한 덩어리를 읽습니다 . 청크의 크기는 현재 버퍼링 된 입력의 양에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9423b0c8dc39b873f5e8f1da2ec0fe66dd8d51ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Experimental.&lt;/em&gt; Read a single chunk of strict text from a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The size of the chunk depends on the amount of input currently buffered.</source>
          <target state="translated">&lt;em&gt;실험적. &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 에서 엄격한 텍스트 한 덩어리를 읽습니다 . 청크의 크기는 현재 버퍼링 된 입력의 양에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5944546a01ded45bf6275d83e88add520a72327d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Explicit&lt;/em&gt; &amp;mdash; This gives your library a stable Safe Haskell type that others can depend on. However, it will increase the chance of compilation failure when your package dependencies change.</source>
          <target state="translated">&lt;em&gt;명시 적&lt;/em&gt; &amp;mdash; 라이브러리에 다른 사람이 신뢰할 수있는 안정적인 Safe Haskell 유형을 제공합니다. 그러나 패키지 종속성이 변경되면 컴파일 실패 가능성이 높아집니다.</target>
        </trans-unit>
        <trans-unit id="f9fb7085892243540161ce1e4eca53598f72dc30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixed size&lt;/em&gt;: All event records of a fixed-sized type are of the same length, given in the header event-log header.</source>
          <target state="translated">&lt;em&gt;고정 크기&lt;/em&gt; : 고정 크기 유형의 모든 이벤트 레코드는 헤더 이벤트 로그 헤더에 지정된 길이가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ea33a4779416b430a5ae6cc265baf4a73107f69f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixed(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes of a fixed length. That is, the length is independent of the value that is encoded. An example of a fixed size primitive is the big-endian encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;, which always results in exactly 8 bytes.</source>
          <target state="translated">&lt;em&gt;고정 (-크기) 프리미티브&lt;/em&gt; 는 항상 고정 길이의 바이트 시퀀스를 생성하는 빌더 프리미티브입니다. 즉, 길이는 인코딩 된 값과 무관합니다. 고정 크기 프리미티브의 예는 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 의 빅 엔디안 인코딩으로 , 항상 정확히 8 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="e3a525b75e447e5dd355cddf7b622e8bf3ab9d4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixed(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes of a fixed length. That is, the length is independent of the value that is encoded. An example of a fixed size primitive is the big-endian encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;, which always results in exactly 8 bytes.</source>
          <target state="translated">&lt;em&gt;Fixed (-size) 기본 요소&lt;/em&gt; 는 항상 고정 길이의 바이트 시퀀스를 생성하는 빌더 기본 요소입니다. 즉, 길이는 인코딩 된 값과 무관합니다. 고정 크기 프리미티브의 예는 항상 정확히 8 바이트를 생성 하는 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 의 빅 엔디안 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="2a46598d47bec7b7f4393291f76ff696cfaed5e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixed(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes of a fixed length. That is, the length is independent of the value that is encoded. An example of a fixed size primitive is the big-endian encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;, which always results in exactly 8 bytes.</source>
          <target state="translated">&lt;em&gt;Fixed (-size) 기본 요소&lt;/em&gt; 는 항상 고정 길이의 바이트 시퀀스를 생성하는 빌더 기본 요소입니다. 즉, 길이는 인코딩 된 값과 무관합니다. 고정 크기 프리미티브의 예는 항상 정확히 8 바이트를 생성 하는 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 의 빅 엔디안 인코딩입니다 .</target>
        </trans-unit>
        <trans-unit id="3289dcdadb15f8d3934b93eb40f90927bb216d11" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Since GHC uses signals for its internal clock, a call to &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will usually be interrupted immediately. That makes &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; unusable in a program compiled with GHC, unless the RTS timer is disabled (with &lt;code&gt;+RTS -V0&lt;/code&gt;). Furthermore, without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has none of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC 참고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 가 더 나은 선택입니다. GHC는 내부 클럭에 신호를 사용하기 때문에 일반적으로 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 호출이 즉시 중단됩니다. 그 차종은 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; RTS 타이머가 (에 사용하지 않는 한, GHC로 컴파일 된 프로그램에서 사용할 수 없게 &lt;code&gt;+RTS -V0&lt;/code&gt; ). 또한 &lt;code&gt;-threaded&lt;/code&gt; 옵션이 없으면 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 은 다른 모든 사용자 스레드를 차단합니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션을 사용 하더라도 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 에는 자체 OS 풀이 필요합니다. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 에는 이러한 단점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a15d5da49c36e04ca679f2d22b36974f7d9740c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has neither of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC 참고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 가 더 나은 선택입니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션이 없으면 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 은 다른 모든 사용자 스레드를 차단합니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션을 사용 하더라도 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 에는 전체 OS 스레드가 필요합니다. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 에는 이러한 단점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="8554363f3811b7724bb7944656ead45e58c9ca22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Since GHC uses signals for its internal clock, a call to &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will usually be interrupted immediately. That makes &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; unusable in a program compiled with GHC, unless the RTS timer is disabled (with &lt;code&gt;+RTS -V0&lt;/code&gt;). Furthermore, without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has none of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC 참고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 가 더 나은 선택입니다. GHC는 내부 클럭에 신호를 사용하기 때문에 일반적으로 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 호출이 즉시 중단됩니다. 그 차종은 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; RTS 타이머가 (에 사용하지 않는 한, GHC로 컴파일 된 프로그램에서 사용할 수 없게 &lt;code&gt;+RTS -V0&lt;/code&gt; ). 또한 &lt;code&gt;-threaded&lt;/code&gt; 옵션이 없으면 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 은 다른 모든 사용자 스레드를 차단합니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션을 사용 하더라도 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 에는 전체 OS 스레드가 필요합니다. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 에는 이러한 단점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a6525d7f5973bf76c3974e6f50a56f3a9b6b4511" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has neither of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC 참고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 가 더 나은 선택입니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션이 없으면 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 은 다른 모든 사용자 스레드를 차단합니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션을 사용 하더라도 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 은 전체 OS 스레드가 필요합니다. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 에는 이러한 단점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="09474117915d755e94f86f8497d962b5c5b0af15" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Since GHC uses signals for its internal clock, a call to &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will usually be interrupted immediately. That makes &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; unusable in a program compiled with GHC, unless the RTS timer is disabled (with &lt;code&gt;+RTS -V0&lt;/code&gt;). Furthermore, without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has none of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC 참고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 가 더 나은 선택입니다. GHC는 내부 클럭에 신호를 사용하기 때문에 일반적으로 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 호출이 즉시 중단됩니다. 그 차종은 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; RTS 타이머가 (에 사용하지 않는 한, GHC로 컴파일 된 프로그램에서 사용할 수 없게 &lt;code&gt;+RTS -V0&lt;/code&gt; ). 또한 &lt;code&gt;-threaded&lt;/code&gt; 옵션이 없으면 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 은 다른 모든 사용자 스레드를 차단합니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션을 사용 하더라도 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 에는 전체 OS 스레드가 필요합니다. &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 에는 이러한 단점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="ccb86800cefbefba0ce89c7729475eab67e94be0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has neither of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC 참고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 가 더 나은 선택입니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션이 없으면 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 은 다른 모든 사용자 스레드를 차단합니다. &lt;code&gt;-threaded&lt;/code&gt; 옵션을 사용 하더라도 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 은 전체 OS 스레드가 필요합니다. &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 에는 이러한 단점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c83e572121dc84da38a01487077757af11bf4ef2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: the comment for &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; also applies here.</source>
          <target state="translated">&lt;em&gt;GHC 참고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 에 대한 주석 도 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="45ed8bb553ac516567f209502f17b7cd7842b213" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generalising Monads to Arrows&lt;/em&gt;, by John Hughes, &lt;em&gt;Science of Computer Programming&lt;/em&gt; 37, pp67-111, May 2000.</source>
          <target state="translated">&lt;em&gt;Monads to Arrows 일반화&lt;/em&gt; , John Hughes, &lt;em&gt;컴퓨터 프로그래밍 과학&lt;/em&gt; 37, pp67-111, 2000 년 5 월.</target>
        </trans-unit>
        <trans-unit id="cf486314cf99cc4ced55abbd834a237e04e41a59" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generic instances&lt;/em&gt; for the function, implementing it for most of the representation type constructors introduced above.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;위에서 소개 한 대부분의 표현 유형 생성자를 위해 함수를 구현하는 &lt;em&gt;일반 인스턴스&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b308dc3ee1f74f1a781f4782dc2dad4ef82ae33f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Haskell Language&lt;/em&gt; &amp;mdash; Restricted to Safe Language</source>
          <target state="translated">&lt;em&gt;하스켈 언어&lt;/em&gt; &amp;mdash; 안전한 언어로 제한</target>
        </trans-unit>
        <trans-unit id="aad50340bc609ad76fc76adb4f31485b5cd83ba8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Haskell Language&lt;/em&gt; &amp;mdash; Unrestricted</source>
          <target state="translated">&lt;em&gt;하스켈 언어&lt;/em&gt; &amp;mdash; 무제한</target>
        </trans-unit>
        <trans-unit id="5ebaf0411167ad857d8dc7d2ae7807288079f228" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Haskell Language&lt;/em&gt; &amp;mdash; Unrestricted, except only safe overlapping instances allowed.</source>
          <target state="translated">&lt;em&gt;Haskell Language&lt;/em&gt; &amp;mdash; 안전한 겹치는 인스턴스 만 허용하는 것을 제외하고는 무제한입니다.</target>
        </trans-unit>
        <trans-unit id="8151fcb8906a3769463bbe914723d5ffce1fc8d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Encode all bytes of a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; from left-to-right with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;무거운 인라인. &lt;/em&gt;게으른 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 의 모든 바이트 를 왼쪽에서 오른쪽으로 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 으로 인코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="214dabd485077503a8b6a7f38e082f535e1df6da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Encode all bytes of a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; from left-to-right with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;. This function is quite versatile. For example, we can use it to construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that maps every byte before copying it to the buffer to be filled.</source>
          <target state="translated">&lt;em&gt;무거운 인라인. &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 을 사용하여 엄격한 ByteString 의 모든 바이트 를 왼쪽에서 오른쪽으로 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; . 이 기능은 매우 다양합니다. 예를 들어,이를 사용하여 채워질 버퍼에 복사하기 전에 모든 바이트를 맵핑 하는 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0fed53e9a2b24ad96627ee523d518c9c0c02b955" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Execute a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; with custom execution parameters.</source>
          <target state="translated">&lt;em&gt;무거운 인라인. &lt;/em&gt;사용자 정의 실행 매개 변수를 사용 하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="22fb4fc692075d9d0e85632e980c98ab05962217" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Execute a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; with custom execution parameters.</source>
          <target state="translated">&lt;em&gt;무거운 인라인. &lt;/em&gt;사용자 정의 실행 매개 변수를 사용 하여 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="407e90695fb9cc9626dbcdc9743dd1dd428fd272" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Hint:&lt;/em&gt; You can obtain information about the code being generated from GHC by passing the &lt;code&gt;-ddump-deriv&lt;/code&gt; flag. In GHCi, you can expand a type family such as &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;:kind!&lt;/code&gt; command.</source>
          <target state="translated">&lt;em&gt;힌트 : &lt;/em&gt; &lt;code&gt;-ddump-deriv&lt;/code&gt; 플래그를 전달하여 GHC에서 생성되는 코드에 대한 정보를 얻을 수 있습니다 . GHCi 에서 &lt;code&gt;:kind!&lt;/code&gt; 를 사용하여 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; 와 같은 유형 군을 확장 할 수 있습니다 . 명령.</target>
        </trans-unit>
        <trans-unit id="276947b2d66c76922669549b0556dd0c2280a221" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IMPORTANT&lt;/em&gt;: the size of the annotation string does NOT figure into the layout of the document, so the document will lay out as though the annotations are not present.</source>
          <target state="translated">&lt;em&gt;중요&lt;/em&gt; : 주석 문자열의 크기는 문서의 레이아웃을 나타내지 않으므로 주석이없는 것처럼 문서가 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="0ccc6401af7612d98c635a53bcda561bc1cbd018" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Imported Modules&lt;/em&gt; &amp;mdash; All forced to be safe imports, all must be trusted.</source>
          <target state="translated">&lt;em&gt;Imported Modules (가져온 모듈)&lt;/em&gt; &amp;mdash; 모두 안전하게 가져 오도록 강요되며 모두 신뢰할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3177944c79160b113c3e6825a1110e135d8482a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Imported Modules&lt;/em&gt; &amp;mdash; Under control of module author which ones must be trusted.</source>
          <target state="translated">&lt;em&gt;가져온 모듈&lt;/em&gt; &amp;mdash; 신뢰할 수 있어야하는 모듈 작성자의 제어하에 있습니다.</target>
        </trans-unit>
        <trans-unit id="5929f52816170952b5022cd518be1d190e68180d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inferred&lt;/em&gt; &amp;mdash; This works well and adds no dependencies on the Safe Haskell type of any modules in other packages. It does mean that the Safe Haskell type of your own modules could change without warning if a dependency changes. One way to deal with this is through the use of &lt;a href=&quot;#safe-flag-summary&quot;&gt;Safe Haskell warning flags&lt;/a&gt; that will warn if GHC infers a Safe Haskell type different from expected.</source>
          <target state="translated">&lt;em&gt;유추&lt;/em&gt; &amp;mdash; 이것은 잘 작동하며 다른 패키지에있는 모든 모듈의 Safe Haskell 유형에 대한 종속성을 추가하지 않습니다. 이는 의존성이 변경 될 경우 Safe Haskell 유형의 자체 모듈이 경고없이 변경 될 수 있음을 의미합니다. 이를 처리하는 한 가지 방법은 GHC가 예상과 다른 Safe Haskell 유형을 유추하는 경우 &lt;a href=&quot;#safe-flag-summary&quot;&gt;경고&lt;/a&gt; 하는 Safe Haskell 경고 플래그를 사용 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e324661ef3cfb26e07739b2998871807a6d64fbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Linux&lt;/em&gt;: Use your package management tool.</source>
          <target state="translated">&lt;em&gt;Linux&lt;/em&gt; : 패키지 관리 도구를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0a054eafd72b0536034dcbbe0d2010494e24e9e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mac OS X&lt;/em&gt;: Clang is included by default on recent OS X machines when XCode is installed (from 10.6 and later). LLVM is not included. In order to use the LLVM based code generator, you should install the &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; package manager for OS X. Alternatively you can download binaries for LLVM and Clang from &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Mac OS X&lt;/em&gt; : CCode는 XCode가 설치 될 때 최신 OS X 시스템에 기본적으로 포함됩니다 (10.6 이상). LLVM은 포함되어 있지 않습니다. LLVM 기반 코드 생성기를 사용하려면 OS X 용 &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; 패키지 관리자를 설치해야합니다. 또는 LLVM 및 Clang 용 바이너리를 &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;여기&lt;/a&gt; 에서 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="00e93d4ed6d5ea7079faa5a2a3e3003a4f1ddfef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mac OS X&lt;/em&gt;: Clang is included by default on recent OS X machines when Xcode is installed (from 10.6 and later). LLVM is not included. In order to use the LLVM based code generator, you should install the &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; package manager for OS X. Alternatively you can download binaries for LLVM and Clang from &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Mac OS X&lt;/em&gt; : Clang은 Xcode가 설치 될 때 (10.6 이상부터) 최신 OS X 컴퓨터에 기본적으로 포함됩니다. LLVM은 포함되어 있지 않습니다. LLVM 기반 코드 생성기를 사용하려면 OS X 용 &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; 패키지 관리자를 설치해야합니다. 또는 &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;여기&lt;/a&gt; 에서 LLVM 및 Clang 용 바이너리를 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77e71d6b5869582f63be3f454d1d32d5768eb81e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mac OS X&lt;/em&gt;: Clang is included by default on recent OS X machines when Xcode is installed (from 10.6 and later). LLVM is not included. In order to use the LLVM based code generator, you should install the &lt;a href=&quot;https://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; package manager for OS X. Alternatively you can download binaries for LLVM and Clang from &lt;a href=&quot;https://llvm.org/releases/download.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Mac OS X&lt;/em&gt; : Clang은 Xcode가 설치 될 때 (10.6 이상부터) 최신 OS X 컴퓨터에 기본적으로 포함됩니다. LLVM은 포함되어 있지 않습니다. LLVM 기반 코드 생성기를 사용하려면 OS X 용 &lt;a href=&quot;https://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; 패키지 관리자를 설치해야합니다. 또는 &lt;a href=&quot;https://llvm.org/releases/download.html&quot;&gt;여기&lt;/a&gt; 에서 LLVM 및 Clang 용 바이너리를 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccf1b145735dbf1e0dd404a06c2e1f539013cc07" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; &amp;mdash; No</source>
          <target state="translated">&lt;em&gt;신뢰할 수있는 모듈&lt;/em&gt; &amp;mdash; 아니요</target>
        </trans-unit>
        <trans-unit id="8844cafd0561a033b1cb5d1b26abfcaf377275d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; &amp;mdash; Yes</source>
          <target state="translated">&lt;em&gt;신뢰할 수있는 모듈&lt;/em&gt; &amp;mdash; 예</target>
        </trans-unit>
        <trans-unit id="7e2e89c9e9c52676de7c3b95d3a7e6d106f82d06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; &amp;mdash; Yes.</source>
          <target state="translated">&lt;em&gt;신뢰할 수있는 모듈&lt;/em&gt; &amp;mdash; 예.</target>
        </trans-unit>
        <trans-unit id="b4df3316e20037d36a201ec12b627c6791628c00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; (&lt;a href=&quot;#ghc-flag--fpackage-trust&quot;&gt;&lt;code&gt;-fpackage-trust&lt;/code&gt;&lt;/a&gt; enabled) &amp;mdash; Yes but only if the package the module resides in is also trusted.</source>
          <target state="translated">&lt;em&gt;신뢰할 수있는 모듈&lt;/em&gt; ( &lt;a href=&quot;#ghc-flag--fpackage-trust&quot;&gt; &lt;code&gt;-fpackage-trust&lt;/code&gt; &lt;/a&gt; enabled) &amp;mdash; 예이지만 모듈이있는 패키지도 신뢰할 수있는 경우에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="62db890e544c1cb820e640dc6716e0a5d3efb852" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module boundary control&lt;/em&gt; &amp;mdash; Only symbols that are publicly available through other module export lists can be accessed in the safe language. Values using data constructors not exported by the defining module, cannot be examined or created. As such, if a module &lt;code&gt;M&lt;/code&gt; establishes some invariants through careful use of its export list, then code written in the safe language that imports &lt;code&gt;M&lt;/code&gt; is guaranteed to respect those invariants.</source>
          <target state="translated">&lt;em&gt;모듈 경계 제어&lt;/em&gt; &amp;mdash; 다른 모듈 내보내기 목록을 통해 공개적으로 사용 가능한 기호 만 안전한 언어로 액세스 할 수 있습니다. 정의 모듈에서 내 보내지 않은 데이터 생성자를 사용하는 값은 검사하거나 만들 수 없습니다. 따라서, 모듈의 경우 &lt;code&gt;M&lt;/code&gt; 은 수출 목록, 수입하는 안전 언어로 작성된 다음 코드의주의 사용을 통해 몇 가지 불변 설정 &lt;code&gt;M&lt;/code&gt; 은 그 불변을 존중이 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="af6f97a5db3c64ddd8971103b6bc9da3d0737912" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NB:&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;numeric#v:readInt&quot;&gt;readInt&lt;/a&gt;&lt;/code&gt; is the 'dual' of &lt;code&gt;&lt;a href=&quot;numeric#v:showIntAtBase&quot;&gt;showIntAtBase&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;numeric#v:readDec&quot;&gt;readDec&lt;/a&gt;&lt;/code&gt; is the `dual' of &lt;code&gt;&lt;a href=&quot;numeric#v:showInt&quot;&gt;showInt&lt;/a&gt;&lt;/code&gt;. The inconsistent naming is a historical accident.</source>
          <target state="translated">&lt;em&gt;NB : &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;numeric#v:readInt&quot;&gt;readInt&lt;/a&gt;&lt;/code&gt; 가 의 '듀얼'이다 &lt;code&gt;&lt;a href=&quot;numeric#v:showIntAtBase&quot;&gt;showIntAtBase&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;numeric#v:readDec&quot;&gt;readDec&lt;/a&gt;&lt;/code&gt; 은 의 '는'듀얼입니다 &lt;code&gt;&lt;a href=&quot;numeric#v:showInt&quot;&gt;showInt&lt;/a&gt;&lt;/code&gt; . 일치하지 않는 이름 지정은 역사적 사고입니다.</target>
        </trans-unit>
        <trans-unit id="e48f754a7962be3b071f5b5a712d019942041e44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt; The action is only run if an &lt;em&gt;exception&lt;/em&gt; is thrown. If the monad supports other ways of aborting the computation, the action won't run if those other kinds of errors are thrown. See &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onError&quot;&gt;onError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; 조치는 &lt;em&gt;예외&lt;/em&gt; 가 발생 하는 경우에만 실행됩니다 . 모나드가 계산을 중단하는 다른 방법을 지원하는 경우 다른 종류의 오류가 발생하면 작업이 실행되지 않습니다. &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onError&quot;&gt;onError&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c9e66d3857b9c976809777d4836429e0cf6a181" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt; This catches all &lt;em&gt;exceptions&lt;/em&gt;, but if the monad supports other ways of aborting the computation, those other kinds of errors will not be caught.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; 이것은 모든 &lt;em&gt;예외를&lt;/em&gt; 포착 하지만 모나드가 계산을 중단하는 다른 방법을 지원하는 경우 다른 종류의 오류는 포착되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="520c8b82816e228add0c9d7273086c4950a5fcf4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt; This method was added in version 0.9.0 of this library. Previously, implementation of functions like &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt; in this module were based on the &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; functions only, disallowing some classes of tranformers from having &lt;code&gt;MonadMask&lt;/code&gt; instances (notably multi-exit-point transformers like &lt;code&gt;&lt;a href=&quot;../mtl-2.2.2/control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt;). If you are a library author, you'll now need to provide an implementation for this method. The &lt;code&gt;StateT&lt;/code&gt; implementation demonstrates most of the subtleties:</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; 이 방법은이 라이브러리의 버전 0.9.0에서 추가되었다. 이전에는 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt; 으로이 모듈 과 같은 함수 구현 이 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; 마스크 함수만을 기반으로하여 일부 &lt;code&gt;MonadMask&lt;/code&gt; 클래스가 MonadMask 인스턴스 (특히 ExceptT와 같은 다중 종료점 변환기)를 사용하지 &lt;code&gt;&lt;a href=&quot;../mtl-2.2.2/control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; . 라이브러리 작성자 인 경우 이제이 메서드에 대한 구현을 제공해야합니다. &lt;code&gt;StateT&lt;/code&gt; 의 구현은 대부분의 미묘한 보여줍니다</target>
        </trans-unit>
        <trans-unit id="bca180f17751f120e4fc116efb72dc04296161c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This is included for backwards compatibility.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;참고 : 이전 버전과의 호환성을 위해 포함되었습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3699309a32757a05c18bbf210b56e81ae43c34b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The &lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array.IArray&lt;/a&gt; module provides a more general interface to immutable arrays: it defines operations with the same names as those defined below, but with more general types, and also defines &lt;code&gt;&lt;a href=&quot;data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; instances of the relevant classes. To use that more general interface, import &lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array.IArray&lt;/a&gt; but not &lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;참고 : &lt;/em&gt;&lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array.IArray의&lt;/a&gt; 좀 더 일반적인 유형을 아래에 정의 된 것과 동일한 이름을 가진 작업을 정의하지만 함께, 또한 정의 모듈은 불변의 배열에 더 일반적인 인터페이스를 제공 &lt;code&gt;&lt;a href=&quot;data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 관련 클래스의 인스턴스를. 보다 일반적인 인터페이스를 사용하려면 &lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array가&lt;/a&gt; 아닌 &lt;a href=&quot;data-array&quot;&gt;Data.Array.IArray를&lt;/a&gt; 가져 오십시오 .</target>
        </trans-unit>
        <trans-unit id="99a1736f2957ab2831f3fb2c06b8e3ef16a472ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This module will be removed in a future release. Instead, use &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;, which does not restrict the exception type, and also includes a base exception monad.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이 모듈은 향후 릴리스에서 제거 될 예정입니다. 대신, 예외 유형을 제한하지 않으며 기본 예외 모나드도 포함하는 &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except를&lt;/a&gt; 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="cf3e60fafda98a23cbcee79e00d6faf14e067641" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; You should use &lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt; instead of this module if:</source>
          <target state="translated">&lt;em&gt;참고 : 다음&lt;/em&gt; 과 같은 경우이 모듈 대신 &lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7ef42cb512999221456657d1ed0873d9c3a0dd04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; this does not yield a monad unless the argument monad is commutative.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 모나드 인수가 정식이 아닌 한 모나드를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b10853fe07ed106cc40e33aa049552c45deb62e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; this is valid only on architectures where data and function pointers range over the same set of addresses, and should only be used for bindings to external libraries whose interface already relies on this assumption.</source>
          <target state="translated">&lt;em&gt;참고 :&lt;/em&gt; 이것은 데이터 및 함수 포인터가 동일한 주소 집합에 걸쳐있는 아키텍처에서만 유효하며 인터페이스가 이미이 가정에 의존하는 외부 라이브러리에 바인딩하는 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d46668e6afc2ef7a4c00f5c45217e100c43a41ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: For fixed-width integer types, this function does not attempt to detect overflow, so a sufficiently long input may give incorrect results. If you are worried about overflow, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; for your result type.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 고정 너비 정수 유형의 경우이 함수는 오버플로를 감지하지 않으므로 충분히 긴 입력은 잘못된 결과를 초래할 수 있습니다. 오버플로가 걱정되면 결과 유형에 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="19a4d49d03ab86da41b355406934433c7c3cbd4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: For fixed-width integer types, this function does not attempt to detect overflow, so a sufficiently long input may give incorrect results. If you are worried about overflow, use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; for your result type.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 고정 너비 정수 유형의 경우이 함수는 오버 플로우를 감지하지 않으므로 충분히 긴 입력은 잘못된 결과를 제공 할 수 있습니다. 오버플로가 걱정된다면 결과 유형에 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 를 사용 하세요.</target>
        </trans-unit>
        <trans-unit id="282595c0146b38e5f6431e344c722ffea1c02820" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: For fixed-width integer types, this function does not attempt to detect overflow, so a sufficiently long input may give incorrect results. If you are worried about overflow, use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; for your result type.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 고정 너비 정수 유형의 경우이 함수는 오버 플로우를 감지하지 않으므로 충분히 긴 입력은 잘못된 결과를 제공 할 수 있습니다. 오버플로가 걱정된다면 결과 유형에 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 를 사용 하세요.</target>
        </trans-unit>
        <trans-unit id="4beca137cb65d5e5734601659db1bb31ff532dee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: In some languages, case conversion is a locale- and context-dependent operation. The case conversion functions in this module are &lt;em&gt;not&lt;/em&gt; locale sensitive. Programs that require locale sensitivity should use appropriate versions of the &lt;a href=&quot;http://hackage.haskell.org/package/text-icu-0.6.3.7/docs/Data-Text-ICU.html#g:4&quot;&gt;case mapping functions from the text-icu package&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 일부 언어에서 경우 변환은 로캘 및 상황에 따른 작업입니다. 이 모듈의 대소 문자 변환 기능은 로케일에 민감 &lt;em&gt;하지 않습니다&lt;/em&gt; . 로케일 구분이 필요한 프로그램 &lt;a href=&quot;http://hackage.haskell.org/package/text-icu-0.6.3.7/docs/Data-Text-ICU.html#g:4&quot;&gt;은 text-icu 패키지에서&lt;/a&gt; 적절한 버전의 케이스 맵핑 기능을 사용해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="3dd00c5d984d66770edba44770274d29c4ab3caa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: In some languages, case conversion is a locale- and context-dependent operation. The case conversion functions in this module are &lt;em&gt;not&lt;/em&gt; locale sensitive. Programs that require locale sensitivity should use appropriate versions of the &lt;a href=&quot;https://hackage.haskell.org/package/text-icu-0.6.3.7/docs/Data-Text-ICU.html#g:4&quot;&gt;case mapping functions from the text-icu package&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : 일부 언어에서 대소 문자 변환은 로케일 및 컨텍스트 종속 작업입니다. 이 모듈의 대소 문자 변환 기능은 로케일을 구분 &lt;em&gt;하지 않습니다&lt;/em&gt; . 로케일 구분이 필요한 프로그램 &lt;a href=&quot;https://hackage.haskell.org/package/text-icu-0.6.3.7/docs/Data-Text-ICU.html#g:4&quot;&gt;은 text-icu 패키지에서&lt;/a&gt; 적절한 버전의 대소 문자 매핑 기능을 사용해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="6daf5267275b3ec6a8acadfb74c700b91109e913" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Read below the synopsis for important notes on the use of this module.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 모듈 사용에 대한 중요한 참고 사항은 아래 개요를 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="dfe49f9a1b9803fa8045d1cd893d57c7cca1fc13" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: The behaviour of functions in this module depends on the version of GHC you are using.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 모듈의 기능 동작은 사용중인 GHC 버전에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ab507f138df0f9821f8c05dc187d168b78752b2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This function is almost ten times faster than &lt;code&gt;&lt;a href=&quot;data-text-lazy-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt;, but is slightly less accurate.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 기능은 &lt;code&gt;&lt;a href=&quot;data-text-lazy-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; 것보다 거의 10 배 빠르지 만 정확도는 약간 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="fc1b3f8e0b226adbcd2f02ea9dc1633a3659acbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This function is almost ten times faster than &lt;code&gt;&lt;a href=&quot;data-text-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt;, but is slightly less accurate.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 기능은 &lt;code&gt;&lt;a href=&quot;data-text-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; 것보다 거의 10 배 빠르지 만 정확도는 약간 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="56157e5c45db589d39d9fd25447e4e607a3dfb9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This operation is highly unsafe, as it can introduce externally visible non-determinism into an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 작업은 외부에서 볼 수있는 비결 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 작업에 도입 할 수 있으므로 안전하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f09da456d469d433a9d3b90f8da9be8438d4e2d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This operation is highly unsafe, as it can introduce externally visible non-determinism into an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 작업은 보안 목표 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 작업에 외부 적으로 보이는 비결 정성을 도입 할 수 있으므로 매우 안전하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="390930e081313d11bd3e28c127e26350f4399cb7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This operation is highly unsafe, as it can introduce externally visible non-determinism into an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 작업은 보안 목표 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 작업에 외부 적으로 보이는 비결 정성을 도입 할 수 있으므로 매우 안전하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="db2c98782f53c435c668ec2d9e1db82df6eb2ab6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: in GHC, if you have a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;, you essentially have a pointer to the thread itself. This means the thread itself can't be garbage collected until you drop the &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. This misfeature will hopefully be corrected at a later date.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : GHC에서 &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 가 있으면 본질적으로 스레드 자체에 대한 포인터가 있습니다. 이것은 &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 삭제할 때까지 스레드 자체를 가비지 수집 할 수 없음을 의미합니다 . 이 기능은 나중에 수정 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="3aeab860b4eeed250ea1a07689f81707d8979a70" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: in GHC, if you have a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;, you essentially have a pointer to the thread itself. This means the thread itself can't be garbage collected until you drop the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. This misfeature will hopefully be corrected at a later date.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : GHC에서 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 가 있으면 본질적으로 스레드 자체에 대한 포인터가 있습니다. 이것은 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 삭제할 때까지 스레드 자체를 가비지 수집 할 수 없음을 의미합니다 . 이 기능은 나중에 수정 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="82625db6b0d8147f8dac816f8114b6297c4e4718" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: in GHC, if you have a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;, you essentially have a pointer to the thread itself. This means the thread itself can't be garbage collected until you drop the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. This misfeature will hopefully be corrected at a later date.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; : GHC에서 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 가 있으면 본질적으로 스레드 자체에 대한 포인터가 있습니다. 이것은 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; 를 삭제할 때까지 스레드 자체를 가비지 수집 할 수 없음을 의미합니다 . 이 기능은 나중에 수정 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="be1a1b117be20cf2f08d99126acdd91a639256ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: this function does not take language or culture specific rules into account. For instance, in English, different style guides disagree on whether the book name &quot;The Hill of the Red Fox&quot; is correctly title cased&amp;mdash;but this function will capitalize &lt;em&gt;every&lt;/em&gt; word.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 기능은 언어 또는 문화 별 규칙을 고려하지 않습니다. 예를 들어 영어로 된 다른 스타일 가이드는 책 이름 &quot;The Red Fox의 언덕&quot;이 정확하게 제목을 붙 였는지 여부에 동의하지 않지만이 함수는 &lt;em&gt;모든&lt;/em&gt; 단어 를 대문자로 표시 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="20250cede5659fe8bf002a7115317e6d98ec119e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: this function is &lt;em&gt;not&lt;/em&gt; lazy, as it must decode its entire input before it can return a result. If you need lazy (streaming) decoding, use &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; in lenient mode.</source>
          <target state="translated">&lt;em&gt;참고&lt;/em&gt; :이 함수는 결과를 반환하기 전에 전체 입력을 디코딩해야하므로 지연 &lt;em&gt;되지 않습니다&lt;/em&gt; . 지연 (스트리밍) 디코딩이 필요한 경우 &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; 모드에서 decodeUtf8With 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="b62e2da0e17d12769884b1aa2ba415a21c18dd0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Only applies in combination with the native code generator.&lt;/em&gt; Use the graph colouring register allocator for register allocation in the native code generator. By default, GHC uses a simpler, faster linear register allocator. The downside being that the linear register allocator usually generates worse code.</source>
          <target state="translated">&lt;em&gt;기본 코드 생성기와 함께 만 적용됩니다. &lt;/em&gt;원시 코드 생성기의 레지스터 할당에 그래프 색상 지정 레지스터 할당자를 사용하십시오. 기본적으로 GHC는 더 단순하고 빠른 선형 레지스터 할당자를 사용합니다. 단점은 선형 레지스터 할당자가 일반적으로 더 나쁜 코드를 생성한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fa91af8cf761e521aabf547672f18803ac273063" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Only applies in combination with the native code generator.&lt;/em&gt; Use the iterative coalescing graph colouring register allocator for register allocation in the native code generator. This is the same register allocator as the &lt;a href=&quot;#ghc-flag--fregs-graph&quot;&gt;&lt;code&gt;-fregs-graph&lt;/code&gt;&lt;/a&gt; one but also enables iterative coalescing during register allocation.</source>
          <target state="translated">&lt;em&gt;기본 코드 생성기와 함께 만 적용됩니다. &lt;/em&gt;기본 코드 생성기에서 레지스터 할당에 반복 병합 그래프 색상 지정 레지스터 할당자를 사용하십시오. 이것은 &lt;a href=&quot;#ghc-flag--fregs-graph&quot;&gt; &lt;code&gt;-fregs-graph&lt;/code&gt; &lt;/a&gt; 와 동일한 레지스터 할당 자 이지만 레지스터 할당 중에 반복 병합을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="e45b4e85e98a22a00d832409ff973eebd06b5740" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Open type families&lt;/em&gt; Open type families are typechecked incrementally. This means that when a module is imported type family instances contained in that module are checked against instances present in already imported modules.</source>
          <target state="translated">&lt;em&gt;개방형 패밀리&lt;/em&gt; 개방형 패밀리는 점진적으로 유형 검사됩니다. 이는 모듈을 가져올 때 해당 모듈에 포함 된 유형의 패밀리 인스턴스를 이미 가져온 모듈에있는 인스턴스와 비교하여 검사 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7113721ad76d60dd94d004e6812d911541ae5431" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Package database stack:&lt;/em&gt; Package databases are arranged in a stack structure. When GHC starts up it adds the global and the user package databases to the stack, in that order, unless &lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt;&lt;/a&gt; is specified. When &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; is specified then it will determine the initial database stack. Several command line options described below can further manipulate this initial stack. You can see GHC&amp;rsquo;s effective package database stack by running GHC with the &lt;a href=&quot;using#ghc-flag--v&quot;&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">&lt;em&gt;패키지 데이터베이스 스택 :&lt;/em&gt; 패키지 데이터베이스는 스택 구조로 배열됩니다. GHC가 시작되면 &lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; &lt;/a&gt; 가 지정 되지 않은 경우 전역 및 사용자 패키지 데이터베이스를 순서대로 스택에 추가 합니다. &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; 가 지정 되면 초기 데이터베이스 스택이 결정됩니다. 아래에 설명 된 여러 명령 줄 옵션은이 초기 스택을 추가로 조작 할 수 있습니다. &lt;a href=&quot;using#ghc-flag--v&quot;&gt; &lt;code&gt;-v&lt;/code&gt; &lt;/a&gt; 플래그 와 함께 GHC를 실행하면 GHC의 효과적인 패키지 데이터베이스 스택을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3290aca1792d3baafd6652be0ab62eee820c25a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Package shadowing:&lt;/em&gt; When multiple package databases are in use it is possible, though rarely, that the same installed package id is present in more than one database. In that case, packages closer to the top of the stack will override (&lt;em&gt;shadow&lt;/em&gt;) those below them. If the conflicting packages are found to be equivalent (by ABI hash comparison) then one of them replaces all references to the other, otherwise the overridden package and all those depending on it will be removed.</source>
          <target state="translated">&lt;em&gt;패키지 섀도 잉 :&lt;/em&gt; 여러 패키지 데이터베이스를 사용하는 경우, 설치된 동일한 패키지 ID가 둘 이상의 데이터베이스에 존재할 가능성은 거의 없습니다. 이 경우 스택의 상단에 가까운 패키지는 그 아래의 패키지보다 우선합니다 ( &lt;em&gt;shadow&lt;/em&gt; ). 충돌하는 패키지가 ABI 해시 비교에 의해 동등한 것으로 판명되면 패키지 중 하나가 다른 모든 참조를 대체합니다. 그렇지 않으면 재정의 된 패키지와 패키지에 따라 모든 패키지가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="912b6dba6e6e1a26c1c6c1b4ec3b984dd9aa9c87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Package version selection:&lt;/em&gt; When selecting a package, GHC will search for packages in all available databases. If multiple versions of the same package are available the latest non-broken version will be chosen.</source>
          <target state="translated">&lt;em&gt;패키지 버전 선택 : 패키지를 선택할&lt;/em&gt; 때 GHC는 사용 가능한 모든 데이터베이스에서 패키지를 검색합니다. 동일한 패키지의 여러 버전이 사용 가능한 경우 최신의 최신 버전이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="d0a2b1f35156dec789ec1cde8499bf3f8439c973" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Parallelism&lt;/em&gt; means running a Haskell program on multiple processors, with the goal of improving performance. Ideally, this should be done invisibly, and with no semantic changes.</source>
          <target state="translated">&lt;em&gt;병렬 처리&lt;/em&gt; 는 성능 향상을 목표로 여러 프로세서에서 Haskell 프로그램을 실행하는 것을 의미합니다. 이상적으로는 눈에 보이지 않고 의미 론적 변화가 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="0261c851960dca416433683c95d0391ecabea5a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Parsing Permutation Phrases,&lt;/em&gt; by Arthur Baars, Andres Loh and Doaitse Swierstra. Published as a functional pearl at the Haskell Workshop 2001.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Arthur Baars, Andres Loh 및 Doaitse Swierstra의 해석 &lt;em&gt;구문 분석 구문 분석 &lt;/em&gt;Haskell Workshop 2001에서 기능성 진주로 출판.</target>
        </trans-unit>
        <trans-unit id="1cf75643fba70a9e965c9a0d56f5ecd26f9a996c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please note that fold will be deprecated in the future and removed.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;접기는 앞으로 더 이상 사용되지 않으며 제거 될 예정입니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b4461f500d5286b1fbbf5fde66a9dce3cef7a3d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Referential transparency&lt;/em&gt; &amp;mdash; The types can be trusted. Any pure function, is guaranteed to be pure. Evaluating them is deterministic and won&amp;rsquo;t cause any side effects. Functions in the &lt;code&gt;IO&lt;/code&gt; monad are still allowed and behave as usual. So, for example, the &lt;code&gt;unsafePerformIO :: IO a -&amp;gt; a&lt;/code&gt; function is disallowed in the safe language to enforce this property.</source>
          <target state="translated">&lt;em&gt;참조 투명성&lt;/em&gt; &amp;mdash; 형식을 신뢰할 수 있습니다. 모든 순수한 기능은 순수한 것으로 보장됩니다. 그것들을 평가하는 것은 결정 론적이며 부작용을 일으키지 않습니다. &lt;code&gt;IO&lt;/code&gt; 모나드의 기능 은 여전히 ​​허용되며 평소와 같이 작동합니다. 예를 들어 &lt;code&gt;unsafePerformIO :: IO a -&amp;gt; a&lt;/code&gt; 함수는이 속성을 적용하기 위해 안전한 언어로 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="705e87f1f4b75ba77eb74be2111fcfa0a7270e06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Break down the graph by biography. Biographical profiling is described in more detail below (&lt;a href=&quot;#biography-prof&quot;&gt;Biographical Profiling&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;: ghc-flag :`-prof`가 필요합니다. &lt;/em&gt;전기로 그래프를 분류하십시오. 전기 프로파일 링은 아래에서보다 상세하게 설명됩니다 ( &lt;a href=&quot;#biography-prof&quot;&gt;전기 프로파일 링&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="42f2b1f3a6341c4a533f0870768e002177176b61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Break down the graph by retainer set. Retainer profiling is described in more detail below (&lt;a href=&quot;#retainer-prof&quot;&gt;Retainer Profiling&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;: ghc-flag :`-prof`가 필요합니다. &lt;/em&gt;리테이너 세트별로 그래프를 분류하십시오. 리테이너 프로파일 링은 아래에 자세히 설명되어 있습니다 ( &lt;a href=&quot;#retainer-prof&quot;&gt;리테이너 프로파일 링&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e8fb77f52aacf2a8ea7260f93819ef43bb939eb9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Break down the live heap by the module containing the code which produced the data.</source>
          <target state="translated">&lt;em&gt;: ghc-flag :`-prof`가 필요합니다. &lt;/em&gt;데이터를 생성 한 코드가 포함 된 모듈로 라이브 힙을 분류하십시오.</target>
        </trans-unit>
        <trans-unit id="a0658daba7f9f5546286f9552e60fcd18e33daa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Breaks down the graph by closure description. For actual data, the description is just the constructor name, for other closures it is a compiler-generated string identifying the closure.</source>
          <target state="translated">&lt;em&gt;: ghc-flag :`-prof`가 필요합니다. &lt;/em&gt;클로저 설명으로 그래프를 세분화합니다. 실제 데이터의 경우 설명은 생성자 이름이며 다른 클로저의 경우 클로저를 식별하는 컴파일러 생성 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="123d7cdc18e17372a1940b984b00aee65bc8b638" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Breaks down the graph by the cost-centre stack which produced the data.</source>
          <target state="translated">&lt;em&gt;: ghc-flag :`-prof`가 필요합니다.&lt;/em&gt; 데이터를 생성 한 비용 중심 스택별로 그래프를 세분화합니다.</target>
        </trans-unit>
        <trans-unit id="57721a591ecc617b70db041058504ed77707be00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Breaks down the graph by type. For closures which have function type or unknown/polymorphic type, the string will represent an approximation to the actual type.</source>
          <target state="translated">&lt;em&gt;: ghc-flag :`-prof`가 필요합니다. &lt;/em&gt;유형별로 그래프를 세분화합니다. 함수 유형 또는 알 수없는 / 다형성 유형이있는 클로저의 경우 문자열은 실제 유형에 대한 근사값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="462386cf81a5d9ff64647c9902f04e34274934c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Break down the graph by biography. Biographical profiling is described in more detail below (&lt;a href=&quot;#biography-prof&quot;&gt;Biographical Profiling&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; 가&lt;/a&gt;&lt;em&gt; 필요합니다&lt;/em&gt; . 전기별로 그래프를 분류합니다. 전기 프로파일 링은 아래에 자세히 설명되어 있습니다 ( &lt;a href=&quot;#biography-prof&quot;&gt;전기 프로파일 링&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="81e800810d90bf54a05dd074d7404e3f55f6dfe5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Break down the graph by retainer set. Retainer profiling is described in more detail below (&lt;a href=&quot;#retainer-prof&quot;&gt;Retainer Profiling&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; 가&lt;/a&gt;&lt;em&gt; 필요합니다&lt;/em&gt; . 리테이너 세트별로 그래프를 분류합니다. 리테이너 프로파일 링은 아래에 자세히 설명되어 있습니다 ( &lt;a href=&quot;#retainer-prof&quot;&gt;리테이너 프로파일 링&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1b33582c594205ec781a8f4ce93138e6af6938cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Break down the live heap by the module containing the code which produced the data.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; 가&lt;/a&gt;&lt;em&gt; 필요합니다&lt;/em&gt; . 데이터를 생성 한 코드가 포함 된 모듈별로 라이브 힙을 분류합니다.</target>
        </trans-unit>
        <trans-unit id="2a74b213feb21230452d654c07f48705359ea420" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Breaks down the graph by closure description. For actual data, the description is just the constructor name, for other closures it is a compiler-generated string identifying the closure.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; 가&lt;/a&gt;&lt;em&gt; 필요합니다&lt;/em&gt; . 마감 설명으로 그래프를 분류합니다. 실제 데이터의 경우 설명은 생성자 이름 일 뿐이고 다른 클로저의 경우에는 클로저를 식별하는 컴파일러 생성 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="47b3758b9f4d5b38e4146a2f02b81f8056d08bbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Breaks down the graph by the cost-centre stack which produced the data.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; 가&lt;/a&gt;&lt;em&gt; 필요합니다&lt;/em&gt; . 데이터를 생성 한 비용 센터 스택별로 그래프를 분류합니다.</target>
        </trans-unit>
        <trans-unit id="40a816f0ee8634bf396e7c364e4e63d3ce40f49f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Breaks down the graph by type. For closures which have function type or unknown/polymorphic type, the string will represent an approximation to the actual type.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; 가&lt;/a&gt;&lt;em&gt; 필요합니다&lt;/em&gt; . 유형별로 그래프를 분류합니다. 함수 유형 또는 알 수없는 / 다형성 유형이있는 클로저의 경우 문자열은 실제 유형에 대한 근사치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b425bb33f0cf5570e1aae023075a9a1ba7f42526" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Semantic consistency&lt;/em&gt; &amp;mdash; For any module that imports a module written in the safe language, expressions that compile both with and without the safe import have the same meaning in both cases. That is, importing a module written in the safe language cannot change the meaning of existing code that isn&amp;rsquo;t dependent on that module. So, for example, there are some restrictions placed on the use of &lt;a href=&quot;glasgow_exts#instance-overlap&quot;&gt;OverlappingInstances&lt;/a&gt;, as these can violate this property.</source>
          <target state="translated">&lt;em&gt;의미 일관성&lt;/em&gt; &amp;mdash; 안전한 언어로 작성된 모듈을 가져 오는 모듈의 경우, 안전한 가져 오기가 있거나없는 컴파일은 두 경우 모두 동일한 의미를 갖습니다. 즉, 안전한 언어로 작성된 모듈을 가져 오면 해당 모듈에 의존하지 않는 기존 코드의 의미를 변경할 수 없습니다. 예를 들어, 이 속성을 위반할 수 있으므로 &lt;a href=&quot;glasgow_exts#instance-overlap&quot;&gt;OverlappingInstances&lt;/a&gt; 사용에 일부 제한 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fdbea60bb75dd61529df1e9ecd5f6589015c62d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Semantic consistency&lt;/em&gt; &amp;mdash; For any module that imports a module written in the safe language, expressions that compile both with and without the safe import have the same meaning in both cases. That is, importing a module written in the safe language cannot change the meaning of existing code that isn&amp;rsquo;t dependent on that module. So, for example, there are some restrictions placed on the use of &lt;a href=&quot;instances#instance-overlap&quot;&gt;OverlappingInstances&lt;/a&gt;, as these can violate this property.</source>
          <target state="translated">&lt;em&gt;의미 적 일관성&lt;/em&gt; &amp;mdash; 안전한 언어로 작성된 모듈을 가져 오는 모듈의 경우 안전한 가져 오기를 사용하거나 사용하지 않고 컴파일하는 표현식은 두 경우 모두 동일한 의미를 갖습니다. 즉, 안전한 언어로 작성된 모듈을 가져 오면 해당 모듈에 종속되지 않는 기존 코드의 의미를 변경할 수 없습니다. 예를 &lt;a href=&quot;instances#instance-overlap&quot;&gt;들어이&lt;/a&gt; 속성을 위반할 수 있으므로 OverlappingInstances 사용에 몇 가지 제한 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="89de00924cd3479beec6109e9b79b70ef0022bcc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Strict subset&lt;/em&gt; &amp;mdash; The safe language is strictly a subset of Haskell as implemented by GHC. Any expression that compiles in the safe language has the same meaning as it does when compiled in normal Haskell.</source>
          <target state="translated">&lt;em&gt;엄격한 하위 집합&lt;/em&gt; &amp;mdash; 안전한 언어는 GHC에서 구현 한 Haskell의 하위 집합입니다. 안전한 언어로 컴파일되는 표현식은 일반적인 Haskell에서 컴파일 할 때와 같은 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3db8e3e352c0b76e2e5b6b872c0aa32b584fb409" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Structuring Depth-First Search Algorithms in Haskell&lt;/em&gt;, by David King and John Launchbury, &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.6526&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.6526&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;David King과 John Launchbury의 &lt;em&gt;Haskell에서 깊이 우선 검색 알고리즘&lt;/em&gt; 구조화, &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.6526&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.6526&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6953c31e452f3102215b2750c3df5ff2d08c0540" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Switching off the ambiguity check.&lt;/em&gt; Even if a function has an ambiguous type according the &amp;ldquo;guiding principle&amp;rdquo;, it is possible that the function is callable. For example:</source>
          <target state="translated">&lt;em&gt;모호성 검사를 끕니다. &lt;/em&gt;&quot;안내 원칙&quot;에 따라 함수가 모호한 유형을 갖는 경우에도 해당 함수를 호출 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd24557230310fb95b7f692527566f5517548ba4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Switching off the ambiguity check.&lt;/em&gt; Even if a function has an ambiguous type according to the &amp;ldquo;guiding principle&amp;rdquo;, it is possible that the function is callable. For example:</source>
          <target state="translated">&lt;em&gt;모호성 검사를 끕니다. &lt;/em&gt;&quot;안내 원리&quot;에 따라 함수가 모호한 유형을 가지더라도 함수가 호출 가능할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="0dcbc9c8d506fce1593616196ad42863caef94f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This module is DEPRECATED and will be removed in the future!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;이 모듈은 더 이상 사용되지 않으며 향후 제거 될 예정입니다!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4511ddab48f01e74dbb8517f44eb7eeb29128bed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Variable size&lt;/em&gt;: Each event record includes a length field.</source>
          <target state="translated">&lt;em&gt;가변 크기&lt;/em&gt; : 각 이벤트 레코드에는 길이 필드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5957913496482cb50d556eae277fd4fdc650517b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Version conflict resolution:&lt;/em&gt; If multiple instances of a package version chosen by GHC are available then GHC will choose an unspecified instance.</source>
          <target state="translated">&lt;em&gt;버전 충돌 해결 :&lt;/em&gt; GHC에서 선택한 패키지 버전의 여러 인스턴스를 사용할 수있는 경우 GHC는 지정되지 않은 인스턴스를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f205a3e455ddcfcad3d33dabd9244ab103b9a8a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: The size of the map must not exceed &lt;code&gt;maxBound::Int&lt;/code&gt;. Violation of this condition is not detected and if the size limit is exceeded, its behaviour is undefined.</source>
          <target state="translated">&lt;em&gt;경고&lt;/em&gt; : 맵의 크기는 &lt;code&gt;maxBound::Int&lt;/code&gt; 초과하지 않아야합니다 . 이 조건을 위반하면 감지되지 않으며 크기 제한을 초과하면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b585db4fa55353109462192344937f67dbb88de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: the &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; operation holds a semi-closed handle on the file until the entire contents of the file have been consumed. It follows that an attempt to write to a file (using &lt;code&gt;&lt;a href=&quot;system-io#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt;, for example) that was earlier opened by &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; will usually result in failure with &lt;code&gt;&lt;a href=&quot;system-io-error#v:isAlreadyInUseError&quot;&gt;isAlreadyInUseError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;경고&lt;/em&gt; : &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 작업은 파일의 전체 내용이 소비 될 때까지 파일에 반쯤 닫힌 핸들을 유지합니다. &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 에 의해 이전에 열린 파일에 쓰기를 시도하면 ( 예를 들어 &lt;code&gt;&lt;a href=&quot;system-io#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt; 사용 ) &lt;code&gt;&lt;a href=&quot;system-io-error#v:isAlreadyInUseError&quot;&gt;isAlreadyInUseError&lt;/a&gt;&lt;/code&gt; 로 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="93166860cf34225f1627c354dd12c3b2a1360b00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: this is an internal module, and does not have a stable API or name. Functions in this module may not check or enforce preconditions expected by public modules. Use at your own risk!</source>
          <target state="translated">&lt;em&gt;경고&lt;/em&gt; : 이것은 내부 모듈이며 안정적인 API 또는 이름이 없습니다. 이 모듈의 기능은 공용 모듈에서 예상되는 사전 조건을 확인하거나 시행하지 않을 수 있습니다. 자신의 책임하에 사용하십시오!</target>
        </trans-unit>
        <trans-unit id="82ff565161479f911aee1e9f05ae8c38c6c1a1ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: this is an internal module, and does not have a stable API or name. Use at your own risk!</source>
          <target state="translated">&lt;em&gt;경고&lt;/em&gt; : 이것은 내부 모듈이며 안정적인 API 또는 이름이 없습니다. 자신의 책임하에 사용하십시오!</target>
        </trans-unit>
        <trans-unit id="d127c14d0847810ba261c5a1deb29d3cf81d4266" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When there is a right-hand side, GHC infers the most polymorphic kind consistent with the right-hand side.&lt;/em&gt; Examples: ordinary data type and GADT declarations, class declarations. In the case of a class declaration the role of &amp;ldquo;right hand side&amp;rdquo; is played by the class method signatures.</source>
          <target state="translated">&lt;em&gt;우변이있을 때, GHC는 우변과 일치하는 가장 다형성을 유추합니다. &lt;/em&gt;예 : 일반 데이터 유형 및 GADT 선언, 클래스 선언 클래스 선언의 경우 &quot;오른쪽&quot;의 역할은 클래스 메소드 서명에 의해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="4a842e58b2e8acdebedf4712bca8d844fe2498be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When there is no right hand side, GHC defaults argument and result kinds to ``Type``, except when directed otherwise by a kind signature&lt;/em&gt;. Examples: data and open type family declarations.</source>
          <target state="translated">&lt;em&gt;오른쪽이없는 경우 GHC는 기본적으로 인수 및 결과 종류를``Type ''으로 지정합니다 (단, 시그니처 서명으로 다르게 지시 된 경우 제외)&lt;/em&gt; . 예 : 데이터 및 개방형 패밀리 선언</target>
        </trans-unit>
        <trans-unit id="1e05b771a102da6f304b117af84315f6dc8b5c77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Windows&lt;/em&gt;: You should download binaries for LLVM and clang from &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Windows&lt;/em&gt; : &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;여기&lt;/a&gt; 에서 LLVM 및 clang 용 바이너리를 다운로드해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="66ec252aac7c3f16d214053f38370b7aaacd2bc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Windows&lt;/em&gt;: You should download binaries for LLVM and clang from &lt;a href=&quot;https://llvm.org/releases/download.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Windows&lt;/em&gt; : &lt;a href=&quot;https://llvm.org/releases/download.html&quot;&gt;여기&lt;/a&gt; 에서 LLVM 및 clang 용 바이너리를 다운로드해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="6af027013ec6f51c280fb0597f2fd4c106c7bf92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;block-buffering&lt;/em&gt;: the entire buffer is written out whenever it overflows, a &lt;code&gt;&lt;a href=&quot;system-io#v:hFlush&quot;&gt;hFlush&lt;/a&gt;&lt;/code&gt; is issued, or the handle is closed.</source>
          <target state="translated">&lt;em&gt;블록 버퍼링&lt;/em&gt; : 오버 플로우, &lt;code&gt;&lt;a href=&quot;system-io#v:hFlush&quot;&gt;hFlush&lt;/a&gt;&lt;/code&gt; 가 발행되거나 핸들이 닫힐 때마다 전체 버퍼가 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="1901683a0c6e558dfccb8534c6966e16024d0d8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;block-buffering&lt;/em&gt;: when the buffer for the handle becomes empty, the next block of data is read into the buffer.</source>
          <target state="translated">&lt;em&gt;블록 버퍼링&lt;/em&gt; : 핸들의 버퍼가 비면 다음 데이터 블록을 버퍼로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b0340ad16d07ec96bb2504108540acb1c146d9b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 1.5.&lt;/em&gt; Tweak unfolding settings.</source>
          <target state="translated">&lt;em&gt;기본값 : 1.5 &lt;/em&gt;전개 설정을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="ba3bd94b864debb797d82bfbb7cd27973100bd8c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 10.&lt;/em&gt; If a worker has that many arguments, none will be unpacked anymore.</source>
          <target state="translated">&lt;em&gt;기본값 : 10.&lt;/em&gt; 워커에 많은 인수가 있으면 더 이상 압축을 풀지 않습니다.</target>
        </trans-unit>
        <trans-unit id="88ee08fc4c0a7a5204937839fac290d990d17857" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 10.&lt;/em&gt; Maximum number of value arguments for a worker.</source>
          <target state="translated">&lt;em&gt;기본값 : 10.&lt;/em&gt; 작업자의 최대 값 인수 수입니다.</target>
        </trans-unit>
        <trans-unit id="dbb8ed31ccd6df47346abb7598b47e697227828a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 100.&lt;/em&gt; Set the percentage factor for simplifier ticks.</source>
          <target state="translated">&lt;em&gt;기본값 : 100.&lt;/em&gt; 단순화 틱의 백분율 비율을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fbc0d417bcfc504227e8112e6dca42d7c3aaea0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 128.&lt;/em&gt; Set the maximum size of inline array allocations to ⟨n⟩ bytes (default: 128).</source>
          <target state="translated">&lt;em&gt;기본값 : 128.&lt;/em&gt; 인라인 배열 할당의 최대 크기를 ⟨n⟩ 바이트로 설정하십시오 (기본값 : 128).</target>
        </trans-unit>
        <trans-unit id="ab1832052f42184d393c3eb43373f14903eb89d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 2.&lt;/em&gt; Set the number of phases for the simplifier. Ignored with &lt;a href=&quot;using-optimisation#ghc-flag--O0&quot;&gt;&lt;code&gt;-O0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;기본값 : 2.&lt;/em&gt; 단순화 기의 위상 수를 설정합니다. &lt;a href=&quot;using-optimisation#ghc-flag--O0&quot;&gt; &lt;code&gt;-O0&lt;/code&gt; 에서는&lt;/a&gt; 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="00fe8eed139c131f8e18576a466d4c952bc4e27a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 2.&lt;/em&gt; Set the number of phases for the simplifier. Ignored with &lt;code&gt;-O0&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;기본값 : 2.&lt;/em&gt; 단순화 기의 위상 수를 설정합니다. &lt;code&gt;-O0&lt;/code&gt; 과 함께 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="56f15f9ce02b409d9f7e46eb4a89a719b1e5012a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 2000.&lt;/em&gt; Set the size threshold for the SpecConstr transformation to ⟨n⟩.</source>
          <target state="translated">&lt;em&gt;기본값 : 2000.&lt;/em&gt; SpecConstr 변환의 크기 임계 값을 ⟨n⟩으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c655cc112b7ed5c7ca9741662cf8c6779a6f8177" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 2000.&lt;/em&gt; Set the size threshold for the liberate-case transformation to ⟨n⟩</source>
          <target state="translated">&lt;em&gt;기본값 : 2000.&lt;/em&gt; 자유 사례 변환의 크기 임계 값을 ⟨n⟩으로 설정</target>
        </trans-unit>
        <trans-unit id="6f1b4d5c97dad5c5a106b959262f15a1c318a9f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 30.&lt;/em&gt; Tweak unfolding settings.</source>
          <target state="translated">&lt;em&gt;기본값 : 30.&lt;/em&gt; 펼치기 설정을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="1241f270dc5e335c4b01d15265a80629f14e31a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 32.&lt;/em&gt; Inline &lt;code&gt;memcpy&lt;/code&gt; calls if they would generate no more than ⟨n⟩ pseudo instructions.</source>
          <target state="translated">&lt;em&gt;기본값 : 32.&lt;/em&gt; 인라인 &lt;code&gt;memcpy&lt;/code&gt; 호출이 &quot;nn&quot;유사 명령어를 생성하지 않는 경우 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5a6ac9927fe1507c25b62f65c90eba325586aae0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 32.&lt;/em&gt; Inline &lt;code&gt;memset&lt;/code&gt; calls if they would generate no more than ⟨n⟩ pseudo instructions</source>
          <target state="translated">&lt;em&gt;기본값 : 32.&lt;/em&gt; 인라인 &lt;code&gt;memset&lt;/code&gt; 호출이 &quot;nn&quot;유사 명령어를 생성하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="b59aec965922f4dc73c9f2da8ed5c48f2f20691f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 4.&lt;/em&gt; Set the max iterations for the simplifier.</source>
          <target state="translated">&lt;em&gt;기본값 : 4.&lt;/em&gt; 단순화 기의 최대 반복을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a294d93c903207af9c7b790b91c7aa98bda90c93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 4.&lt;/em&gt; Set the maximum number of patterns to display in warnings about non-exhaustive ones.</source>
          <target state="translated">&lt;em&gt;기본값 : 4.&lt;/em&gt; 전체가 아닌 패턴에 대한 경고에 표시 할 최대 패턴 수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5921e346c0bb0cd2972663956cb7770d5f1cf53c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 500K.&lt;/em&gt; Tweak assembly generator for binary blobs.</source>
          <target state="translated">&lt;em&gt;기본값 : 500K. &lt;/em&gt;이진 Blob에 대한 어셈블리 생성기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="1e30faafbf8521827d76e823fa4ddc209c6e2739" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 6.&lt;/em&gt; Set the maximum number of bindings to display in type error messages.</source>
          <target state="translated">&lt;em&gt;기본값 : 6.&lt;/em&gt; 유형 오류 메시지에 표시 할 최대 바인딩 수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6ab69fcd31865ccf755a4cc88eac3b019c307013" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 6.&lt;/em&gt; Set the maximum number of refinement hole fits for typed holes to display in type error messages.</source>
          <target state="translated">&lt;em&gt;기본값 : 6.&lt;/em&gt; 유형 오류 메시지에 유형이 지정된 구멍에 표시 할 다듬기 구멍의 최대 개수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ac8ec35bf8f101e89db5a4b4da3cb0ced8d45144" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 6.&lt;/em&gt; Set the maximum number of valid hole fits for typed holes to display in type error messages.</source>
          <target state="translated">&lt;em&gt;기본값 : 6.&lt;/em&gt; 유형 오류 메시지에 유형이 지정된 구멍에 대해 유효한 최대 구멍 맞춤 수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="dcc6cffac49010d97323977d3bededdd9ba6b795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 60.&lt;/em&gt; Tweak unfolding settings.</source>
          <target state="translated">&lt;em&gt;기본값 : 60.&lt;/em&gt; 펼치기 설정을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="2401d9e9999705d3f626464c2a8a3303b13d69f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 750.&lt;/em&gt; Tweak unfolding settings.</source>
          <target state="translated">&lt;em&gt;기본값 : 750.&lt;/em&gt; 펼치기 설정을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="d8e17fffc052d893f52c76c9dee229e5acf497c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: 80.&lt;/em&gt; Tweak unfolding settings.</source>
          <target state="translated">&lt;em&gt;기본값 : 80.&lt;/em&gt; 전개 설정을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="f41c12b8c177895930a8d06f59f98a495f04de1b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: off.&lt;/em&gt; Sets the level of refinement of the refinement hole fits, where level &lt;code&gt;n&lt;/code&gt; means that hole fits of up to &lt;code&gt;n&lt;/code&gt; holes will be considered.</source>
          <target state="translated">&lt;em&gt;기본값 : 꺼짐. &lt;/em&gt;다듬기 구멍 맞춤의 다듬기 레벨을 설정합니다. 여기서 &lt;code&gt;n&lt;/code&gt; 레벨 은 최대 &lt;code&gt;n&lt;/code&gt; 개의 구멍 맞춤을 고려함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8adfdc9d37212eaa819c06c21afbd255fc13422f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default: off.&lt;/em&gt; Toggles whether refinements where one or more of the holes are abstract are reported.</source>
          <target state="translated">&lt;em&gt;기본값 : 꺼짐. &lt;/em&gt;하나 이상의 구멍이 추상 인 미세 조정이보고되는지 여부를 토글합니다.</target>
        </trans-unit>
        <trans-unit id="bc1b93947a99c9254f4b2a1a9e912169d80b7571" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;extension&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;extension&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b3799c19bebf5ae6f60a687f1d5b7f47119adce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;left tightening&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;왼쪽 조임&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bae31a01663ca469814ebb7d942cec142c459ee7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;line-buffering&lt;/em&gt;: the entire output buffer is flushed whenever a newline is output, the buffer overflows, a &lt;code&gt;&lt;a href=&quot;system-io#v:hFlush&quot;&gt;hFlush&lt;/a&gt;&lt;/code&gt; is issued, or the handle is closed.</source>
          <target state="translated">&lt;em&gt;라인 버퍼링&lt;/em&gt; : 개행이 출력 될 때마다 버퍼가 오버 플로우 되거나 &lt;code&gt;&lt;a href=&quot;system-io#v:hFlush&quot;&gt;hFlush&lt;/a&gt;&lt;/code&gt; 가 발행되거나 핸들이 닫힐 때마다 전체 출력 버퍼가 플러시 됩니다.</target>
        </trans-unit>
        <trans-unit id="ad88293debf7071f736b65c4d4a555027be827ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;line-buffering&lt;/em&gt;: when the buffer for the handle is not empty, the next item is obtained from the buffer; otherwise, when the buffer is empty, characters up to and including the next newline character are read into the buffer. No characters are available until the newline character is available or the buffer is full.</source>
          <target state="translated">&lt;em&gt;라인 버퍼링&lt;/em&gt; : 핸들의 버퍼가 비어 있지 않으면 다음 항목은 버퍼에서 얻습니다. 그렇지 않으면 버퍼가 비어 있으면 다음 줄 바꾸기 문자까지의 문자가 버퍼로 읽 힙니다. 개행 문자를 사용할 수 있거나 버퍼가 가득 찰 때까지 문자를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="933c713960f6b028b6fd64e4aba6ce87e54a3794" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;no-buffering&lt;/em&gt;: output is written immediately, and never stored in the buffer.</source>
          <target state="translated">&lt;em&gt;no-buffering&lt;/em&gt; : 출력이 즉시 기록되며 버퍼에 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00079ebfc55827e1e9e78aeb9b7c2ee8fae4465d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;no-buffering&lt;/em&gt;: the next input item is read and returned. The &lt;code&gt;&lt;a href=&quot;system-io#v:hLookAhead&quot;&gt;hLookAhead&lt;/a&gt;&lt;/code&gt; operation implies that even a no-buffered handle may require a one-character buffer.</source>
          <target state="translated">&lt;em&gt;버퍼링 없음&lt;/em&gt; : 다음 입력 항목을 읽고 반환합니다. &lt;code&gt;&lt;a href=&quot;system-io#v:hLookAhead&quot;&gt;hLookAhead&lt;/a&gt;&lt;/code&gt; 의 조작에도 무 버퍼 핸들 한 문자 버퍼를 요구할 수 있다는 것을 의미한다.</target>
        </trans-unit>
        <trans-unit id="fe5edf1f8814f96ec26c4af6b38ebdf4f7742e97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;or&lt;/em&gt; all of these hold:</source>
          <target state="translated">&lt;em&gt;또는&lt;/em&gt; 이러한 모든 보류 :</target>
        </trans-unit>
        <trans-unit id="068f97fc8fb114f3180dc388fc37c7c6c24b4e0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;right tightening&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;오른쪽 강화&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="048b5cf5d06e94ec7b9e9df2a584caa701c87fff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sliding&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sliding&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13d5ec418edcdcb438155b4ed664ff2a4b2ef0cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;superposing&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;superposing&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20e784bddc08e55ed974d2bad277633a9909fdbe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;vanishing&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;vanishing&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d3a98aa70a9e9d19658b64543f4a8d416483259" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;Alternative&lt;/a&gt; wrapper&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;대체&lt;/a&gt; 포장지&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="62bcf016a4762c14bda5da2ee939ee3eb044e74b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; wrapper&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;적용&lt;/a&gt; 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d0f421acbf1790cc4d4c5229fb260ea688deff45" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt; class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt; 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c8ae1cc64f4d7e08333e938d554b024301af2416" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt; wrappers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;data-bool#t:Bool&quot;&gt;부러&lt;/a&gt; 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="92a11c87d5e2b859566c62e5ddcbbfa76bd84656" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; wrappers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;아마도&lt;/a&gt; 랩퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="827156e188c4f4f59214afcf9b636fcd53f0f323" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; typeclass&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;모노&lt;/a&gt; 타입 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4deaa096ca19fe9cfec3025f9ca586c9418028f5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;prelude&quot;&gt;Prelude&lt;/a&gt; re-exports&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;prelude&quot;&gt;전주곡&lt;/a&gt; 재수출&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7136a0cc21675dd6a06d42b457f0897dfe342638" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;
&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt; wrappers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt; &lt;a href=&quot;prelude#t:Num&quot;&gt;숫자&lt;/a&gt; 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f6c29af6b243718922aea31c64076205360b179f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;&quot;Set&quot; operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&quot;설정&quot;조작&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1fd88a0a14d53f9aa69e9a7dc0e3cc0c3d0f00cc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;$PATH methods&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;$ PATH 메소드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e8ff359ad09464d021965c2a1e587c3515db44b4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;(Re-)Allocation within a pool&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;풀 내 (재) 할당&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f961feb941e912fbc26faf0677531d0b954f2a41" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;A better monoid for Maybe&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;아마도 더 나은 단일체&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="91d3f1fcbf6948429b709d02660dd8ef7870c62d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;A canonical proxy type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;표준 프록시 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="81de1aed9784eab9abe4f85c7c6eb3f6fc679d0d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;A concrete representation of Version&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;버전의 구체적인 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c128f439de4e831dffd9f6311a63281e8f6183d4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;A precise semantics&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;정확한 의미론&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d4fb7c98443792214bb10beb89a866bc5e00bac2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Absolute cursor movements&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;절대 커서 이동&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="81dbcff9fae91c1857adf0701fbfc32da21a60ed" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Absolute intervals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;절대 간격&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="95c4b8eac2ee1f1d12b74909dc635e703eaab950" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Acceptable data&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;허용되는 데이터&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5995a4825e1d72509f833bd2ba842ca2d0af045a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Accessing arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;배열에 액세스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9977280e0fdfcc95b7585bfff2232be57b6eb0df" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Accessing the pointer to the array contents&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;배열 내용에 대한 포인터 액세스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e6b9abf09b213651ebbf0d1ce327c7bac848d5ba" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Accum operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;누적 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="75adad5232a09ddb30d2662441ebabc1de9836d2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Actions on directories&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;디렉토리에 대한 조치&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="52489b7ea083a1f0179199fa4e353e4b3791aad0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Actions on files&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일에 대한 조치&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="372b95bc9583350c169080d9605cbc94756752de" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Add Finalizers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;종료 자 추가&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="94154fad2e6cff4d03049e044f5f4c3aa67b4094" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Additional submodules&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;추가 서브 모듈&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="021c10fa519689a5422b447c5b71067886e2fd77" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;All formats&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모든 형식&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="466717a28c14cb5948d0395674792d960f86e5d2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Allocation counter and limit&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;할당 카운터 및 제한&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ab550b45df95ec4d23ed45bdc5c2d89476b41295" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Allocation counter and limits&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;할당 카운터 및 제한&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cb3bb0b73078b200be7ff8c8f3362de245e1c4b3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Allocation counter and quota&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;할당 카운터 및 할당량&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f2913b2e0b060c894c49d8c63f693a743a8a13b9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Alternative wrapper&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;대체 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8ea325969617bd0500f965d6fe1588f2b004b66e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Alternatives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Alternatives&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cf60d08f9ac4229971e8c70b7eae50584c26e579" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;AnnTarget&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;AnnTarget&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8204e1254df8442bd0abe86621f2ac3fccf80a7e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Applicative functors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;적용 펑터&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ebba8bb3da1edadb043fb7eb6d4308dcac3ff058" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Applicative wrapper&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;적용 가능한 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="afe093b17103c18dee7f1bf12ffa7f1e9efecbbf" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Applying functions of dynamic type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다이나믹 타입의 기능 적용&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6201ee30434765b184f8cb7a0c2b3dc2398d8bdb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;ArgMin, ArgMax&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ArgMin, ArgMax&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="251bd6dddc709fa897ad9c3285f5472118f6d5ed" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Arithmetic operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;산술 연산&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="39ef94306400911ac8bfafe35906b1bf8eec29f1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Arithmetic&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Arithmetic&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="68edd76a4593796bf62548aa9ab123bce48da1cd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Array classes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;배열 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a41429374486948e39e97a3f261cae3f89251dde" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Array construction&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;배열 구성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1a0a4f1b76b6c4726bf4cee81e9ce98a5e8e9a76" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Arrays of Storable things.&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;저장 가능한 것들의 배열.&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="58aba863114ccd46c363f66c4a7da2561956a14c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Arrays with unboxed elements&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;박스가없는 요소를 가진 배열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1af95627efc4b6332c4c91f89490963f7f4dbb04" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Arrow application&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;화살표 응용&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0d34ae713b1f9d749fcac3956a80913c55850901" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Arrow keys&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;화살표 키&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e3a3607c8cdfedef34354cdb64e51da62baa5d34" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Arrows&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Arrows&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f328a8e30c402ad1d2f86ac3295253203ebdf134" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Ascii Drawings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;아스키 그림&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d3c978179f76f1d2737e2528a3a12b111b1793a4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Assertions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Assertions&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1d4961273e417574f61355dd4b5c97c04989fb73" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Asynchronous Exceptions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;비동기 예외&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bf3e3fc39e9db518f717502b5c8a7fbd9a36d199" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Attributes in XHTML Strict&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;XHTML Strict의 속성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="408455637256b16f01709f87a9741a100d3fbf1b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Basic Input and output&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;기본 입출력&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="eee53e5377619bf2a057770dba546eafe666ff81" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Basic concurrency operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;기본 동시성 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="53fa91b6c7aa09d9f2f03c08114f539dfb7a40b5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Basic functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;기본 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2d938a9e6d0f8f7736ec0181a660ea83bd390c10" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Basic interface&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;기본 인터페이스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="039ba96b0d18c13f8dc061a7547093ed160061b0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bell alerts&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;벨 알림&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5add3a2e32ba7117a564a8fd1f243d2908e692a5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Big-endian primitives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;빅 엔디안 프리미티브&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="75e6ef899c7eae084317a11b276e6e18eaf9158b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Binary input and output&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이진 입력 및 출력&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7bc5e01c6c0c5c2ea934b2f7ff30e8133e5f4f93" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Binary serialisation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이진 직렬화&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cfffac6f0bb75692d0b5eae32ece4d1ffde6ec9f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bit reversal&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;비트 반전&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f524844bdd473b786bdb7bcaa52949e8b52fbc05" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bit-operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Bit-operations&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="01529b31eceecf0e0520fcc813ae70919102fc76" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bits&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Bits&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3bbd40ea7162b63b27ddebbbdd5e385da41f9187" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Body&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Body&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b326efe9749e71c90fb028d0c4ac2275d00e8767" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bool wrappers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;부울 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f860b97c4e53746abad790470a7d9539903315ac" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Boolean type-level equality&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;부울 유형 수준 평등&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="edef7bf747ca584730724ff9b26945f2216767ac" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Booleans&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Booleans&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f4ba6ae29903ec898cbfb98b8d50f14cfc032171" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bound Threads&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;바운드 스레드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="98afe2083c0cb52bdb6b7aee7ce9a5fc9fc5a5e4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bounded-size builder primitives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;경계 크기 빌더 기본 요소&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="05a8966ef6263272724610edfec5ed02e6c262af" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Bounded-size primitives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;경계 크기 프리미티브&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4558c671025d774cbdbd1fab224b250c24fd2f70" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Boxed arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;박스형 배열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="da1edc4d9ac812d8c56ea23c6f14435730325409" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Buffer management&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;버퍼 관리&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b4c021366a54a180a0aea279abde963d62f02997" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Buffers of any element&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모든 요소의 버퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0e26ce012fe8dbb324b0872250523546a7612cfc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Build signals and steps&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;신호와 단계를 구축&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="32a6d4879de9c3a7218a088df92c7d4dc320cf77" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Building streams&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;건물 스트림&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="91a5765b502f1b671cda7d98af2bd29690bb19e8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Building&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Building&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="38137107ca9fc8a47e0160fae4d46e599ddbed69" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Byte swapping&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;바이트 스와핑&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="72b732bd1567d9a5e0f99640249f7547f85e22cc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;C strings with a configurable encoding&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;구성 가능한 인코딩을 사용하는 C 문자열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="096902411d6311b0b95e7472d1c2ae6a77d7daba" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;C strings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;C 문자열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bc2669e558a34af59fd0bbd8091ac60f931be442" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;C wide strings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;C 와이드 스트링&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d40a80d7d7eb58c9f02617a77e4e11c0370779eb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;CString&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;CString&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4f18f00e5bc84b2f74ec03faddf0de2b2db14a4e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Calendar Duration&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일정 기간&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="22e8fd5e3c45da9b796b72cdc610f6982896502b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Call stacks&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;콜 스택&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="73edd3e8797042555dc387ca3775bf2c630b8f12" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Callconv&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Callconv&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="67c062c4fdb61c5286203bedb1df28c5e61d29c1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Capabilities&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Capabilities&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9a41efe3488e0aa6074dbc05c938a96296f7ce63" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Case conversion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;사례 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="42b4fee6a465deaf27eb909423994781cd1e0fc6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Catching Exceptions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예외 잡기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="df5a6a48c2802a4ab096a973f83493a931fb4e00" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Changing file ownership&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 소유권 변경&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e82e01292782b1a00de2fa68aef755c546250e19" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Changing file timestamps&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 타임 스탬프 변경&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="68e6ec16daf40ba2540a4b433cfaa373a1935561" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Character Parsing&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문자 파싱&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="94ea44960f44b943df0639651bac8aabecddbdf1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Character classification&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문자 분류&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="90475dcbb82b159af8994d71307c4560b6f7251f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Chars&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Chars&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8e3e43aff310a2a343f437fe9a0e7391f9c47fee" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Checked multiplication&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;확인 된 곱셈&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="109b048baaa89500bdfb7a383dc2d6cf26069d8c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Chunk allocation sizes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;청크 할당 크기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="56d01f96467acbb558709aaa5d085468cb551a26" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Class of mutable array types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;가변 배열 유형의 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1e4b77f8cb3eb347f6d5eec4941843793902df6b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Classes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Classes&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ab59b649e017815cf68a447c5aecf25efdda2080" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Code that must be here for accessibility&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;접근성을 위해 여기에 있어야하는 코드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fe6b20ea02f1f3513402d3adacd26748c8ed7685" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Collecting errors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오류 수집&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d45b6967f6b36b850bde80f7c1855bd594d56bab" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Combinators&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Combinators&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6eb286e97433084376d6d49f4a74d5abbce02287" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Combine&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Combine&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9e38ade1d6f7f27048d2c380c7e8f9f023215e0b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Combined allocation and marshalling&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;결합 된 할당 및 마샬링&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c06aa2a02325d4a07e99eac00be5b517b0d3013d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Combining documents&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문서 결합&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b542754dc87b1b8fe119d796abf3b3f450e49c26" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Command line&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;커맨드 라인&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0df66735f873fa76dc23639c57e02179d9f98d83" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Commentary&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Commentary&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1cd5e9c5c12a4a51629d42f1f52fee194e7e16c9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Common formats&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일반적인 형식&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2cd3537669121d68c3faf52ba70f0d22f22405b3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Communication abstractions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;통신 추상화&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ccd03fd458358549796763f1a1ead666dfde1c36" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Comparison predicates&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;비교 술어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="387816673e8a26670a34138fbe6ec793b300b9c9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Comparisons&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Comparisons&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c998327de10ae7c0950c7e5ba9133d97ea5a909c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Compat wrapper&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Compat 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8692183f841e070104455bdc03065f0331644625" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Computer Name&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;컴퓨터 이름&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="523817caf24927587e32f8855452eed1ad56f110" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Concurrency-based &lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt; operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;동시성 기반의 &lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt; 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="548c8a1d5b8515a2549e7334004ecd4bb7ce5d00" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Concurrency-based ForeignPtr operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;동시성 기반 ForeignPtr 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f44bef446951eb67d322158f481719bc8e46e550" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Concurrent Haskell&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;동시 하스켈&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="43a8165881169be096fe88b1ed0fe1e3866a361f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conditionals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Conditionals&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9d6f8723b00565d6c06a96caf254976d7a9b1e1e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conjugate&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Conjugate&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="654140fdf74315ed11d38a6d81ed8ee4294658ad" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Console code pages&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;콘솔 코드 페이지&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="13954ef1e4030af1115565da7d83b0dd49c5989c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Console mode&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;콘솔 모드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5d75ae71dd27a361731f5528c760e98e18ccadda" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Construct &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;s&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;구축 &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;정수&lt;/a&gt; 들&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="90ada1d59f2b696d4598eb6e9e18a51e0d868971" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Construct Integers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;정수 생성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8e3c27b781c90fcd1d3f1bae4a3252dea1ca00db" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Constructing Builders&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;빌더 구축&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bda46ee8a7d7ac8e24e37e2691955d2e0cb09975" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Constructing mutable arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;가변 배열 생성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="326098402d98c4cc3799b6df7c85a14cc44b7b16" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Construction&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Construction&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="32bf1ad3a2c10a86fa900ed29889a968ab608bb9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Constructor function&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;생성자 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6534d24d7e3a150d35d95517b6fd7376929703e9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Contravariant Functors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다변량 펑터&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="34671ba879278c73a3d8c7093f9fd2b4b3668964" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Control over lifetype&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;생명 형에 대한 통제&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c6d9989e7d3f46976e325d575fb51cb413f48e2a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Controlling chunk boundaries&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;청크 경계 제어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9668d5f4abc46f3309f326f85cbad40300dd38cb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Convenience functions: take type constructors apart&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;편의 함수 : 타입 생성자를 분리&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a801af0ef473394dc043d91d6544a87d4741517f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Convenience re-exports&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;편의성 재수출&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ed609e0e684fe6edddfa4c370ca126d69cf3b516" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conventions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Conventions&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d75a51a65effce66cdb835317835f8da122e2f79" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conversion to and from ForeignPtrs&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ForeignPtr과의 전환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8cfd90f0812334132909ca896579849db9ef7c8c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conversion to other integral types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다른 정수형으로 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="25f24c32959be3e851572137cb05cafcefd92555" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conversion with lists: packing and unpacking&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;목록으로 변환 : 포장 및 포장 풀기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="26ec8eb67e6f6622e5735a80574943ff7ef186e0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conversion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Conversion&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4cb6e666e6146d5bb6b3c3814ae6bc4ae04df5fa" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conversions between mutable and immutable arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;가변 배열과 불변 배열 간 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="16d835100ac9aa5c453d6081beb09e6d111ad42e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Conversions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Conversions&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bd5d13e741dfe9398b4bf6b2b7d4563bfab6970f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converters&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Converters&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e81b4c13a3e7405df128cafa841f03732bfec761" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting &lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt; to &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt; 를 &lt;a href=&quot;system-io#t:IO&quot;&gt;IO로&lt;/a&gt; 변환 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="29a3ae0e20e893d984250641deb8f959b0a6ca7e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting &lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt; To &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt; 를 &lt;a href=&quot;system-io#t:IO&quot;&gt;IO로&lt;/a&gt; 변환 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6c41a82e72cc535cb749ef8cdab581ee5206954a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting &lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt; To &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt; 를 &lt;a href=&quot;system-io#t:IO&quot;&gt;IO로&lt;/a&gt; 변환 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a0ddd3256e98cfba2c147aecb923c397d286fb81" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; to &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; 를 &lt;a href=&quot;system-io#t:IO&quot;&gt;IO로&lt;/a&gt; 변환 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="adad26966065dc5894d5246b78ef2e7a45e0be42" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting ST To IO&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ST를 IO로 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5f3d9fe5aacdbf8557da6d3e2c4b6b043aed4321" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting ST to IO&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ST를 IO로 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b0301e5b957849310e7c73cf6beafaddbd2104e2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting between strict and lazy &lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;엄격한 &lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt; 와 게으른 ST 간 변환 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a89b41d545b5bd9a42dc15f0ea7800bc387dd039" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting between strict and lazy &lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;엄격한 &lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt; 와 게으른 ST 간 변환 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="91fdee9015f8fbe4e242ff3b2381adaa6eec0cb0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting between strict and lazy ST&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Strict 및 Lazy ST 간 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d99d80cbb26811389e4817190e334ba50455d10b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting strings to HTML&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문자열을 HTML로 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="66bae3fea0c7d4d666187435d78d5af2f7742736" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting to and from Dynamic&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;동적으로 변환 및 동적 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e954b545098e05a986f9061fe4a6e9171d3e5a17" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting to and from a list&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;리스트와의 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c727778435d62e1561a981af8f811f27f95eeae2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Converting values into documents&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;값을 문서로 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f987342ebea471a74d17fead42206e4a457cf789" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Create&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Create&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="60adaa482e32cc4e750f0d679350efe0f892fb9a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Creating and removing directories&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;디렉토리 작성 및 제거&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d3c3c15d83068ef73a787ff5a647fc08b809f901" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Creation and elimination&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;창조와 제거&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d83770f2aa45f483821f7e3e2c05cfd7827706ff" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Creation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Creation&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="edc95d194f1d6e47bdb7382fedbb1f7a19732e1b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Ctrl events&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Ctrl 이벤트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fad18a83d6504ced770570ef5d5a87cd3ccde6c0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Ctrl-C handling&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Ctrl-C 처리&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c49f824c7228f9d1519ef3c58f2a13ac96dc106b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Cursor flags&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;커서 플래그&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="638cf9b4929ed6ff344f07b4f8030d69c5922e44" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Data constructor representations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;데이터 생성자 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8d3046c99563723ea53833aa5ea60cbb7ce0ec19" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Data pointers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;데이터 포인터&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="93926ba5a14a655478258b253becbd9b64aa1cd8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Data type invariant and abstraction function&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;데이터 유형 불변 및 추상화 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fae068012bdae5ec9aecd7a38d311da11d7dd8bc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Data type invariant and abstraction functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;데이터 유형 불변 및 추상화 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f1f6fd971d1749a734fb52f9b5f1711c343eff9e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Data types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;자료형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a631937a3210e8424468bd8ad5adde2df7e26e20" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Datatype representations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;데이터 타입 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c40a5567d7c699f7a4b3e732163a496563cf226d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Days&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Days&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2e0e63bfb6b3e94c550b0c61d1d833fca6f3c8a2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Debugging&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Debugging&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="071155aeae1f8b19b34ab9ceef334953e4226484" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Dec&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Dec&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7932abdb3f2b18a57b0cbb2c90dd52c270a57e44" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Decoding ByteStrings to Text&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;바이트 열을 텍스트로 디코딩&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="37bcceadf3322fb89161acbdab100c55339e34d4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Decoding&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Decoding&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="94ffdbe9a7ade55ac339e71d90a0878c8d10b2be" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deconstructing mutable arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;가변 배열 해체&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1fa6983cf267be0cb603fb18ee5c5692c59fceb5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deconstruction&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Deconstruction&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a59cd54d4c1ee315eea59a34523bcbf46b76727e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Defining instances&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;인스턴스 정의&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="578493fefd0b3df60c37c9efec270692561ed7c8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Definition of character&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;캐릭터의 정의&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cec77fc38b9e40ab2211c603841ebcc87d6c6dae" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deletion/Update&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Deletion/Update&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="52e949ee98a6015650da5bdaa4ac6875342bf937" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deletion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Deletion&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="80efcd9286f9fb4d7098c8a0b4bc331ed5ac985a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deprecated and unmentionable&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;더 이상 사용되지 않으며 언급 할 수 없음&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8f11f620308a7e7c5e5b4eaa2ccfcccd373e671e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deprecated functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;더 이상 사용되지 않는 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b54e3d16e702cf89e817573823bbaf8bc28b4cf7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deprecated&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Deprecated&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a45fc1acb8fdbd4570edbce2d2916b3cfcba4320" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Derived arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파생 된 배열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cca9cbd678cc846d68ce820d98d0195dffbad17d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deriving Instances of &lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt; 인스턴스 파생 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d52ab41c3b1865ff203174366e0edfa249f185bd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Deriving Instances of Ix&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Ix 인스턴스 파생&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9b7c0fb2766fd005a0dfa6d953cf203be83b1a29" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Difference lists of a semigroup&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;세미 그룹의 차이점 목록&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cc4c86af632c5ff307c86577adf7d2471f106f78" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Doing I/O with IOUArrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;IOUArray로 I / O 수행&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3d970d8c6957e6ac8cb3c902a5b72eb00101f9c0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Double/Int conversions, wrapped primops&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이중 / Int 변환, 랩핑 된 Primops&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e6405dbc9920d185fe8563d27c0ac685e4bedd74" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Drive functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;구동 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7fa41a227c829f4e6fc417c001b83518571831a1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Dual arrows&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이중 화살표&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f2fde4263137f70fce10d128636a92d8a2b22e8b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Elements in XHTML Strict&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;XHTML 엄격한 요소&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f629d12a764521f964fc23797ad595d0bdd7f670" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Elimination&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Elimination&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a8e93d38e6b342e14b59267ebaeff42ebe98e873" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Encoding Text to ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;텍스트를 ByteString으로 인코딩&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ee34abe36973aff662e577adf8cef52d4239584e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Encoding Text using ByteString Builders&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ByteString Builders를 사용하여 텍스트 인코딩&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0c216ca77416429a507ede62874efd44ad484213" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Environment Strings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;환경 문자열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8ec5a471b63152eabc91c0fbed25a37f5662cf1d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Environment Variables&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;환경 변수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2bbe4c6a2962b02053c422af805b64083cd3e52a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Equality operators&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;평등 연산자&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="faefe5151482ee047e60a88eba50ca53979a8070" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Equality&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Equality&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9527ff2f1856ba11a631f1e65f03f82df3d6c3b7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Equivalence Relations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;동등성 관계&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="472520880d66d24f8b66b64279ab47fadbe92d12" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Error handling types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오류 처리 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cb3f977649ef228a5a60726548afd873d46a6f12" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Error messages&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오류 메시지&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a8561c6cc00abfeb0756707b9022620ccf3984f7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Error operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오류 연산&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7ca193ee0538e09e05bb898e6727372b4dd63a59" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Event logging&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이벤트 로깅&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="885ef3270365c0ec9f4933fe3296a5de4f9c209c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Eventlog tracing&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이벤트 로그 추적&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1768319515fe11d7bdb1269a570e926f87b7acf2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 1: Custom Error Data Type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 1 : 사용자 정의 오류 데이터 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="257005f661c4cd24fe5979e397ac5cbd2de2cac5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 1: Simple Continuation Usage&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 1 : 간단한 연속 사용법&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a9908da0abe3e90de18532e38ec96044bcd51000" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 1: Simple Reader Usage&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 1 : 간단한 리더 사용법&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3ceb45c4dd147e91dfd998db63ae99d51f1422a3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 2: Modifying Reader Content With local&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 2 : 로컬을 사용하여 판독기 내용 수정&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b96b56c06df5c0d7d6b29d26edf004f2c8bb0e5b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 2: Using ErrorT Monad Transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 2 : ErrorT Monad Transformer 사용&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5857c646e83fd7c02dcf78b8a12d62a01699f7d3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 2: Using ExceptT Monad Transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 2 : ExceptT Monad Transformer 사용&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="caa523ae4ae4d0174c5c95d28d9055807f61370a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 2: Using callCC&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 2 : callCC 사용&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="de290226604d239231fa6db71a43c101c5f23138" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 3: ReaderT Monad Transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 3 : ReaderT Monad 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b6e2a667d0e22f775b0a18e7612b5b5c6a5c1c96" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Example 3: Using ContT Monad Transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예 3 : ContT Monad Transformer 사용&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1f22ec34e2253e891f9200ad43fab6235e4bdc7d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Examples&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Examples&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6db51b76855b1127f484da304b73df5b5b111f30" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Exception operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예외 연산&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="edee3e4c57c70785e612a1f6e2f7598b5e72e7f2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Executing Builders&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;빌더 실행&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cb6a0ca830867d394a3003745741895b8e4047ce" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Execution phase markers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;실행 단계 마커&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5590f5ce5e5a411e01780434dc5ce8cf42e9a3f9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Execution strategies&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;실행 전략&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e231a8902d4060a0afb963d8b93147393a84ed2e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Existence tests&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;존재 테스트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="781952033f9174f142325b373ad364b0a8bf007f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Exp&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Exp&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="74913b166cb6e7163826c945597693d443fc85c9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extending To New Types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;새로운 유형으로 확장&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="75d99297d453541011a59cfeea60ea311baecb46" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extensible Exceptions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;확장 가능한 예외&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a3541be4bf435c14220e8eea42161466cc50df56" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extension functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;확장 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="eb0cf99e893451f729aaee82605c33cf179810ae" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extra attributes in XHTML Frameset&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;XHTML 프레임 셋의 추가 속성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8b000c0316efae095b2f7986d7f5ea7c8fc742fc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extra attributes in XHTML Transitional&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;XHTML Transitional의 추가 속성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ead30d634533fa13329f7bd1b07ea0ea590b7217" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extra elements in XHTML Frameset&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;XHTML 프레임 셋의 추가 요소&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="83a0cd8c318fa25e7a3a53e30aba024eb6b11321" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extra elements in XHTML Transitional&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;XHTML Transitional의 추가 요소&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="dd50bf4265f3c3bd61b50c5a2e36c5c87f0e7b63" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Extracting sublists&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;서브리스트 추출&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e37ee3b1c98bb5bab70218f0899e041fae611e03" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Feedback&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Feedback&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a8147c8afc9de44659ff247c378a993440cb1b6c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;File allocation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 할당&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5508c712782186738dab1d1600d621e7aee43b8b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;File modes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 모드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a10abcad5887f2394deade13c5304a6b99c0b4dc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;File name manipulations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 이름 조작&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="64b52be66fce60c1a18ff695136f7b58333d637d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;File status&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 상태&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9ae6ab9dcf1692f2e032518b1cfe1061598e00cf" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;File synchronisation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 동기화&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="82f44d301fc2f9aeaeaa37b9fa0f153de578ac62" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Filename completion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 이름 완성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="88f49d14cc897bcc06a5aec4d303caee1d9edbfe" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Filename/directory functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 이름 / 디렉토리 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e3c38e32cfb62eb2ea76caceb9ac511059db9d44" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Files and handles&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일과 핸들&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2d6846db7003a4cf03f990bff80e56bfcf77dea4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Filter&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Filter&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5f8de3ec43aec58ac92f9e3e1d1493f0907184fc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Finalised data pointers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;최종 데이터 포인터&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b08fc0fad3dd3baf5ba78959381e86aadcaed879" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Finalization&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Finalization&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7fbc8b150a5c079dcb27ca2bb467a26e82c82376" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Find system-specific limits for a file&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일에 대한 시스템 별 제한 찾기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="218441e17b369b2ba2cddfdcc2875530e4f9a3c8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Finite sequences&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유한 시퀀스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cccc454eac813a4ca11f7ead14361e004ed73673" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Fixed-size builder primitives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;고정 크기 빌더 기본 요소&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bd8ae37adcda05aef7ab2ab5fc56e71797defd81" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Fixed-size primitives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;고정 크기 프리미티브&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b02cf7e2497772b7e271ca30cc9fe57a25d8b9ea" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Float/Int conversions, wrapped primops&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;float / Int 변환, 랩핑 된 primops&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="15bdf18949770a81389f131d30da8bf2a7823a5c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Flushing the buffer state&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;버퍼 상태 플러시&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3d4bacb85479cf85d1a8c065ae156de844063c85" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Flushing the implicit parse state&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;암시 적 구문 분석 상태 플러시&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a45590a306406daf56e6f521dd996881e609a75d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Folds&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Folds&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="67fbbacb2df89ffced5abad485b608a9d271ce97" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;For backwards compatibility&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이전 버전과의 호환성을 위해&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="abd6ec8b3c363d4624af662afa8abad91e8ad075" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Forking and suchlike&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;포크와 같은&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d387f38983527d73ed1b052ff941fcf98ac23054" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Format picture translation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;사진 번역 서식 지정&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="76c6fec2c9584bc45be4fe28a05c129e2c569427" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Format&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Format&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6f54013b45202f73dc032d55ea00215395ca8bd1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Forms&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Forms&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="18309929646a072c5c22138eab16bf3625ee486a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;FunDep&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;FunDep&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="58743f8eb0d7a3da65b389a9aa43eab25020b82f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Function pointers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;함수 포인터&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e1fe2fc878b1458632034aa4153579296ea44fa3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Functions on strings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문자열의 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="93492d1c1f29fae101b4f6d30876dfb18d429860" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Functions on type literals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;타입 리터럴의 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8e14281c88f3394f85cb02f63bdd52bf13059e91" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Functions&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b18edb8a8df462be090496a2c3cf3ddb9554232c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Functor and monad classes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;펑터 및 모나드 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="01b8ec89a6aefc69517ec70f526b9f5b6608b738" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Fusion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Fusion&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d5d57ebf716f9240d4235caf3cd0fbf2039a197b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;GHC's implementation of concurrency&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;GHC의 동시성 구현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0c01d753159aeb2f4e6d52af2acaf8e0c097777d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Garbage collection&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;가비지 콜렉션&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="19289058e05f695220a0a1746bbb89beec6d664a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;General Quantity Semaphores&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일반 수량 세마포어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fdc89492359520ee1ea101eeb8e2e4f3273b0beb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;General definitions for superclass methods&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;수퍼 클래스 메소드에 대한 일반 정의&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a15b23e64c5f50bf5910ba70dd256b5d25566d81" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generalizations of Control.Exception&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Control.Exception의 일반화&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9becf70a65c256100cc3a6ad538c11afe7b9d2a2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generalized casts for higher-order kinds&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;고차 종류의 일반 캐스트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0f22074fc431aeb725597261726c50ba54741a1b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generalized insertion/deletion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일반화 된 삽입 / 삭제&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b77f92d983366f8168cf0355020cf273bed8a8e6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generic operations defined in terms of &lt;a href=&quot;data-data#v:gunfold&quot;&gt;gunfold&lt;/a&gt;
&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;data-data#v:gunfold&quot;&gt;총포로&lt;/a&gt; 정의 된 일반 작업 &lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4e4b2793837fc72e510f4b5f27e2a01b2ac61c10" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generic operations defined in terms of gunfold&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;gunfold 측면에서 정의 된 일반적인 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bd41b9fddcc20da59af06cc02224ca4019a01d7c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generic representation types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일반 표현 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f4451a07c240a8d409937cc2fbc707c063d2a40e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generic support&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일반 지원&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a78fff27487601414a231877ddcf444cb6aff40a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Generic type classes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;제네릭 형식 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="01448ecaa8f9eaf909557c4f816bb6c85a977bb3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;GetOpt&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;GetOpt&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="04e0dabc48eedc082e4919ecee52329c17710a98" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Graphs&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Graphs&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ed98b962b4fa762a6a59f82a13dfdc0881981b5a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Gregorian calendar&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;그레고리 언 달력&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="aa7caa4e1f0bf71e423ebdd7b18b815439fd0209" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Guard&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Guard&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f297a6b4ed725cc059b787af996d0ef54b7dba50" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Handling signals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;신호 처리&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b5e7a6eb46b9bb4d4f4727c30a93009dc3acf4c9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Hard links&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;하드 링크&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="84a0a54cbe9c3462c7a65e5674ee80d1cb8781c4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;HasCallStack call stacks&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;HasCallStack 호출 스택&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="797278e60112a1cee33a83f4f4c5182215d7b72e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Hashing&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Hashing&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="63ab06d900dbf805d3e0a87303876fd1aed4ddba" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Haskell 2010 functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;하스켈 2010 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f1152fd11160ca942fba467530ff7e045c19ee8d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Haskell representations of errno values&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;errno 값의 하스켈 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9c8bfdbfa9fca359d5d95316c4df65e5be12e031" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Heaps&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Heaps&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="719547bc5b039d61ad2200272b7bf24c17e0c903" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Helper functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;도우미 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a622a7b566d4580c3a7b1d632570d073563b610c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Helpers for RealFloat type-class operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;RealFloat 유형 클래스 작업을위한 도우미&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5a8c0a421c9000a239d45fae30391bdee1108a14" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Helpers for defining &quot;wrapper&quot; functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&quot;래퍼&quot;기능 정의를위한 헬퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="03d17c215f582e6972a097d3cadb60f56644d6d3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Host-endian, unaligned writes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;호스트 엔디안, 정렬되지 않은 쓰기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ba97910b891fb49fa0def639016ab8c2be81fedb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Host-specific binary encodings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;호스트 별 이진 인코딩&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="90ae1f6c158d963e61ad7479ceaf9ec6b68b0523" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Hotlinks&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Hotlinks&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="67448e444f4c15943ee776cb4771d0c167f42dd0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Html abbreviations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;HTML 약어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2b879fe2e9be1657807d24e62d1de0cd15581923" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Html colors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;HTML 색상&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="af3bd53d7af4a8a8841a2c9f2c94a67aba87cdc0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;I/O errors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;I / O 오류&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="da6bdb9bf202a8ec936aabea7a96192793b0fff2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;I/O with &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;I / O와 &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; 의&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9e6daa5c96114880300f2e9bf75393c09428c0fb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;I/O with &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;I / O와 &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; 의&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="db5b303922d6d9387dd429ddb1af5cd4f6b6cd71" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;I/O with ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ByteString이있는 I / O&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cb52232145ffe2137fc3bfbf592978351ac9da5f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;IO arrays with boxed elements&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;박스형 요소가있는 IO 어레이&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="acac784087600b003bb2a3f88b9d0d361431881a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;IO arrays with unboxed elements&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;박스형 요소가있는 IO 어레이&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c9b4d0277e95b6e359ef2b6863daca89f20b12e5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;IO functions for serialisation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;직렬화를위한 IO 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e08fcc3c4d2033385fa91a678832e2497fa2f20e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;IORefs&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;IORefs&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6906e16ad9d2baa7e1649eb7eb67ad18445dc900" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Ids with special behaviour&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;특별한 행동을하는 ID&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f59b0a88084ae04e395817a4a04ddbfc16fe0ef2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Immutable non-strict (boxed) arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;불변의 엄격하지 않은 (박스형) 배열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="50f8bb9cf1d9c6639a7f13d5f77deb4c034ee4b5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Immutable non-strict arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;불변의 엄격하지 않은 배열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="27cc706ddf6e881303aec7d300dc999b9d2a71a8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Implementation Internals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;구현 내부&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2cc2e93107b39c34985337613480268fde030bad" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Implementation notes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;구현 노트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="49b5e3ba8ae2469885c6e225e4c42c1584722389" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Implicit call stacks&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;암시 적 호출 스택&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0db7ea66d6ca93e7fe936f4b8796b2ab81680798" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Incremental array updates&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;증분 배열 업데이트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4f31cc15d041e49b04b7f6712602bf5f49f18079" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Indexed&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Indexed&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b204942ce9d16335376f3bb1b5e03cb1e28872e0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Indexing ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;바이트 문자열 인덱싱&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="83c9003d868fcfeb3d618b6e536652cc07399e92" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Indexing lists&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;인덱싱 목록&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c2e4c952e3a284903e54a0975e380774f649d66a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Indexing streams&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;인덱싱 스트림&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5133d4ab8ee178d251e596a27787ede00ba71567" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Indexing&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Indexing&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f58f140e14f3779e4da974e244719e21eb5eab06" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Inferring equality from other types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다른 유형의 평등 추론&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="831bc00999b271f1978561fd2d7956275876fb70" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Initialization&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Initialization&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="618d0b9c61b82b6cd43e8a0d7054cc089d01aa1a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Injectivity annotation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;주 입성 주석&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="61b8030fd769b9639a403e2fdf22adb9222f7b55" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Insertion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Insertion&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="169ae471b3bf82ca0157db03989ba43b44f76a94" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Instances&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Instances&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e50f155e33541cf67db45eb6242f150db89ad00b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Integral types with lossless conversion to and from pointers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;포인터와의 무손실 변환이 가능한 정수 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="44b1464d137cf76c0f4bb967a17f9460828c82f6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Internal functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;내부 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3c7d6aa18eed4dfc4d4c6c583514b8a4fed01def" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Internal implementation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;내부 구현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d29faabf6d3233c2cb7014ce7abe7ab945827912" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Internal&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Internal&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d9d037ea9e23d4ff99dffe037922dbe5cc15602d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Internals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Internals&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="00f8a048dc9fef3673b5ad8a998e7a2fa63476e9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Interoperability with native code&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;네이티브 코드와의 상호 운용성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3738d02177716f9e6b83676020f64133a0816be5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Interprocess communication&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;프로세스 간 통신&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="77dff42ea59a61d224edc0bf0b5f2997fd91ec40" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Introducing and eliminating &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;소개 및 제거 &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString의&lt;/a&gt; 들&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="df54201993f3394254ef4507fc336e37c01609d1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Introducing and eliminating &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;소개 및 제거 &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString의&lt;/a&gt; 들&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3523fd9a59338d42dc234d9a28f09aa587795d57" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Introducing and eliminating &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;소개 및 제거 &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString의&lt;/a&gt; 들&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a8500bb53e9a115e6fed854d4a27577851bc846e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Introducing and eliminating &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;소개 및 제거 &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString의&lt;/a&gt; 들&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="540c5dacfc5946f06409fb30ac5cb66c99ccfa0b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Introducing and eliminating ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ByteStrings 소개 및 제거&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2934d812e5d881db2c44cd3764463a0e9c62902b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Introduction&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Introduction&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fc389d9ba23ca61abe19c6c8671c537e41c6d1e6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Kind representations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;종류 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fdd1c1dd22dee2a6b7d70db31d1dac31418feed9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Kind&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Kind&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="17b9aeef69884087f2efdf5992bf3f086b4b26de" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Kinds&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Kinds&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d999c62094ef35624f6b99bb2b50d8fab2b17da4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Language extensions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;언어 확장&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="471ee1fab3e98825771ae67ea6b95bfca7397ffc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Laws&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Laws&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a15c2108aea47ee8436194b2c4b1ca93016287b4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Lazy Reader-writer-state monads&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;게으른 리더-라이터 상태 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="db07d0e7a5f79a4ebe4b018f6122151b40e3c788" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Library functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;라이브러리 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1d143d9ff91813c8b01a932dae8503f47792872e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Lifting an applicative&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;응용 프로그램 해제&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f1ef1a014af9c285831bdab837768f08cf8718f0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Lifting other operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다른 작업 해제&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a9b92475980c07a4cedc4992694f10b4b7f895c4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Linking type and value level&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;연결 유형 및 값 수준&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="00925bbc0dbd334b39259f5db9c558c8fbc008d8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;List operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;목록 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8062bdcc24bf0d7ef4dc0699956ce2c0a2233452" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;List transformations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;리스트 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9219f0e33270cba7da14d855d005f2c6148b274c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Lists&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Lists&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="06946f67f15115dc62ff8f81d4278d8f152a34d6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Little-endian primitives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;리틀 엔디안 프리미티브&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bd0a3587ab87626f881c9481a965d942059d046b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Local Time&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;현지 시각&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fbc02adf4603413e94bf4e869e2287352ae03db0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Locale support&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;로케일 지원&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bb7f7a99ddb511fcc1b088eefc40cfdaa10c7cf0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Locale&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Locale&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b3177c93b5acbef2dce38a670f0930ce74bf6ea4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Low level execution&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;저수준 실행&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a1615714c87836ee2e269beef52dc10c2fb549d7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Low level imperative construction&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;저수준 명령 구조&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e1c0eca82481e2630bb0b52df8b52b62df1c9c4a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Low level operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;저수준 운영&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3ced5953c792a0c63d68d428f9f1b755087ab801" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Low-level manipulation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;저수준 조작&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fad5e793567c9f544f4a1a7fac4172dd5dbd455f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Low-level operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;저수준 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6e5454eabb18ea850788f6a4320b5fc738d59df5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Lowercase pattern syntax functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;소문자 패턴 구문 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a9e90113e12a2a6cebf39e4986288839f8a6f427" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;MVars&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;MVars&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7ccc09b734344b7a5c1c88a09dc1ef927be58f98" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Map type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;지도 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9b4e339bc700a6568f76e16158ab56776bdc0da8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Map&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Map&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="26d7f710eb8fe2cd0e5bc5db8b64179d684d6e8e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Match and Clause&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;경기와 조항&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="976fe23dbd34d036b853dd3b546e54245b053ed4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Maybe values&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;아마도 가치&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="16caa553baa068bc1b557747991e1ece990093e3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Maybe wrappers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;아마도 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e0e67be504128863034a2820c211168be98f5d7d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Merges&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Merges&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3eacb0ea4f43b2cb260eb2c648523e692079da97" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Meta-information&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Meta-information&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f09adb1971f499c7186c7242fefe8c934dfb3080" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Min/Max&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Min/Max&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a0a14ed49a9cd741a5479c7f472fb8061be6a51d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Miscellaneous GMP-provided operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;기타 GMP 제공 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1f0851c303f618c0e3583e17f6f7749ba2c07793" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Miscellaneous&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Miscellaneous&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9483b2dc0e2a2e6f62667485d16f1af61cc6b383" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Modular arithmetic&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모듈 식 산술&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2dd4b036a6caafc47697b8b5088c1d7509a94f3f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Module Data.Typeable re-exported for convenience&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모듈 데이터. 편의를 위해 입력 가능한 재수출&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f3979f468518d366b9de60b62b9cf40533887c5b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Module names&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모듈 이름&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="37315e8faeefebc9e7b91634f08249cafa49e6ab" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Monad transformation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모나드 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="51a71904a63582b4ef39aada63ec895c92e9d218" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Monad transformations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모나드 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a2b3ef599377d0cf428bb214a8539a37880ab2f1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;MonadCont class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;MonadCont 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9c2d7dcdd35cad4c14ab69f2b0e622db125a59a2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;MonadReader class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;MonadReader 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6e53f39e91514e0e7dd7ec151af431901179bb72" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;MonadState class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;MonadState 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="17aa48ec4e5e231b5f4ca5075fedb4878ff1f5f0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;MonadWriter class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;MonadWriter 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4552ba16ea98e260432e901c98a31be6107fccdd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Monads with error handling&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오류 처리 기능이있는 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8afec436a29655667fcd046efb9304d5585e0488" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Monoid operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모노 이드 연산&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="98ee0f40dda817232cd386b849e1245fc4ee1383" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Monoid typeclass&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모노 이드 유형 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8399b3485d07a116c0ee56aa9675f85a090b92cd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Monomorphic equality operators&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;단항 평등 연산자&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="dc95a65b97577372eb46d6899728d70a7d29caf1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;NFData class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;NFData 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fd79f019b94fe69750d182338e21f7dc77721b21" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Names&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Names&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="78f27aa10b6ad137c532132d63a7b4cb069fe23c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Nat Kind&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;낫 종류&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="579d4c85b3011b47d707f4f1fbb6efc2178196c0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;New parsing functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;새로운 파싱 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="372e9673432dc0bbf2f6e3aedffbab71f9338a9f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Newline conversion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;개행 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b223b2679405536f2ecfa83a3f1dc19cd83be720" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Non-empty stream transformations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;비어 있지 않은 스트림 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="15243ad82af0b3a16d97fc7c77817918ee9f6208" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Notes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Notes&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="36d487b216e500295425a91ebe58c4149b4191a0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Num wrappers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Num 래퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="73040dc9479a9e991fcbfd0b50acc54318ddecdf" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Numeric representations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;숫자 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fe10d008d0dfa4dc90c1b8cac06ce87e91a9d639" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Observing type representations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;타입 표현 관찰&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c388836db92bbe8e97b1503378b617d8d1b7413c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Old deprecated functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;더 이상 사용되지 않는 이전 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="158d920edbde9d2e8d20a0b249ee96e0ee0be258" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Operations on handles&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;핸들 조작&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="83057ad1a615882b39f4b09eb050d789d1fabe2b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Operations&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4fd635c01603b0174d2b6b0e7a99fb2d527be6f2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Operators&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Operators&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7c84214d7ec2154ae42e9255ed5d6529491b87f7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Ordered ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;정렬 된 바이트 문자열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d26cf0c620f5f47852f72ed0abdd5fb547ceca4d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Other combinators&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다른 조합기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8dff826ff3ccf002763d9d309b26af9910d6e3d9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Other operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다른 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="95625ed49c73dbccad2ae96947177f0125053786" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Other stuff&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다른 것들&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="03fcb03b80bd1d7dcd5a2d93547d115540ed62d5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Output&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Output&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d1343f5a0d684f3029f52edda4a6be21b26713f1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Overloaded lists&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오버로드 된 목록&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e4f838d90b4987ce12b4d5dc642e85569e6dd2a9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Overloaded mutable array interface&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오버로드 된 가변 배열 인터페이스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="83332904969da0989c9bb6ea296571d1d5503b2c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Overloaded string literals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오버로드 된 문자열 리터럴&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="83d38ce6c96b5593563a1034b0c291cba6a05aef" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Overview&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Overview&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a7b1aeb95384f0b1b94d6e5ba9700b49f85021c5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Parsers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Parsers&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2fad2f298dc848da23c0b19239558261835b2b23" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Pattern Synonyms (sub constructs)&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;패턴 동의어 (하위 구성)&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="58ee321dc0464704a62db56d310b4c9ad938e944" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Performance&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Performance&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="934bf0f38db9ebc465bd41c98435b9d26307d24e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Permissions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Permissions&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8915c5bb709bd8ad5898bf20f257d055529776ea" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Polar form&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;극지 형태&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d8f04689e99aff4b85a48079e29a59edf1e1068f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Pool management&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;수영장 관리&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="afa6b713272b981dfabd86243a52c472c2430a87" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Position&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Position&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1f8fb4b440457f567314704014685a240dc6bdae" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Pre-defined directories&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;사전 정의 된 디렉토리&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ed691dbde6a81ae39bb34ed62a8e34105b666429" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Precedence operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;우선 순위 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7b4191f2891f2bc2dc6254ce849d652fde75e714" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Precedences&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Precedences&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a1bd7780370f904ab50214092a32cb31cc799e31" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Predicates on documents&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문서의 술어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="18590a056e8a29a4542880f3ff704ed3ffbf6b1c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Predicates&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Predicates&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bde27e45500b4f296cd9a6c4bc374f2e1da78353" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Pretty typeclass&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예쁜 타입 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d1eab81a1c38ae70b44b4a0cddb61c18c228364b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Pretty-printer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Pretty-printer&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="37da50d15160760620b9d15a60fa4608c6f346f6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Primality tests&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;원시성 테스트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1dffec0b1b2a9a2226add870968fce4a76ee8c8d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Primitive Documents&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;기본 문서&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0b2d2320ee904e185aeec9da1a7565279d07494e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Primitive operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;원시 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="89b5b8e7f61c96ac2f2ec8fc7e0afd2d37927d77" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Primitives and basic combinators&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;프리미티브 및 기본 콤비 네이터&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="358d2256963d5f36d8f25b51c264fd577385f834" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Primitives&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Primitives&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5d34d3ad586f0445970f20de29b4014879bfaeb1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Printing Functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;인쇄 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a5f716232dd13f1e36032e1ccce38344caf608db" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Processor features&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;프로세서 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5e3abb60cd3c7a41d960a4da1e70c0fe7e8f2969" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Profiling call stacks&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;프로파일 링 콜 스택&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4c14563666fba2af41a27b619e83e0a6d8b41682" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Program arguments&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;프로그램 인수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3a168f9fb8cf702e1694c1f71d65615315738cdc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Properties&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Properties&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="25dd6fcc7f7e1d2e516eb4a07fee539ab3107701" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Propositional equality&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;제안 평등&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5f404ebdf96b36a9037aa1b1ad51ba48fc41d5bc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Query&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Query&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="974aba8ebc1ecb5eec24cde4bf43d409f429a9c9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Querying sizes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;쿼리 크기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d65db2185ccb4578b73b5cb0b6417067f54ff66f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Range&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Range&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7b009fbd3b90aae81a48be34b40c031b43bb0d7e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Raw buffers&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;원시 버퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="95aeac7598c65afb5e69d47b9519a7cb52dfd59b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Re-exported monoids from Data.Monoid&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Data.Monoid에서 다시 내보내기 된 monoid&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3cde73d926aded18a7ff1e6a048fc8c11bb3fca5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Re-exports from Control.Exception&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Control.Exception에서 다시 내보내기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="20d62987743d55241e259032f8068b13b5ad87e3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reader operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;리더 조작&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0fa75f28fbd6fc6df5bae99f55850ded6f8ab84c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reading and writing mutable arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;가변 배열 읽기 및 쓰기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="46c78cd0a01091d14b2fc7ec016dc7a724651ad0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reading directories&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;디렉토리 읽기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a9a4c2c4fac16b5f61c5cb789b22d2f856476457" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reading from ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;바이트 열에서 읽기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="55e98e87c89245539baef1b82c7abd0b6b6203c8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reading&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Reading&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1ae5001fd9f54cdae4a0591581a0c45ace42d9ee" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Rectangular form&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;직사각형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d94f8605135a1b49ac36daeff628d44d0b379451" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reducing &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s (folds)&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;감소 &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; 의 (주름)&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="97a8a4207fb2de630616991d68dce4d663bdbc89" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reducing &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s (folds)&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;감소 &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; 의 (주름)&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f16e3fa44697d69041663e6c478e645de7518500" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reducing &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s (folds)&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;감소 &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; 의 (주름)&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b59743333bf86a92589183440a4a469d31ced75c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reducing &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;s (folds)&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;감소 &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; 의 (주름)&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7bd50c3499ca2502b5e0188798de1f640256f5b1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reducing ByteStrings (folds)&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ByteStrings (폴드) 줄이기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="80430a02fd67e9b53d0e7570bf4e404229ba5237" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Reducing lists (folds)&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;리스트 축소하기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fc8cc4518bda8a69e73f62c5fd0f171ca0250891" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Registering interest in I/O events&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;I / O 이벤트에 관심 등록&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="70d9979070c4b276c1b9fdfd2b62996afd974249" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Registering interest in timeout events&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;타임 아웃 이벤트에 관심 등록&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d97a5b2d746eea6df70d8a1d8b907fd49c5b8978" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Relative cursor movements&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;상대 커서 이동&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a4423e5b53a8a3d9fe909f7cf7ca03fffc53f672" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Renaming files&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 이름 바꾸기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a6daec4a209c43eea9f0153487949376fcf56a90" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Rendering&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Rendering&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="68ca0b28b2d9ecec86284c160a9954172f50ccb9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Representation polymorphism&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;표현 다형성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fc06fc0dc799660fd071286850f8b2c33b2829ee" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Representations of C types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;C 유형의 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2d3b6f0c639f168ae3653fb3ad5c6345c355e89e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Representations of some basic types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일부 기본 유형의 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="46a733299c8680eb535cd02b4975b017c65b0a1d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Resize functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;기능 크기 조정&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="96427c50f62707ae41497012a3016f119091009e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Resource Limits&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;자원 제한&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e6c251b28d18ec536995bee054c6f3dfef36b892" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Restreaming&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Restreaming&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="24302ddbdec1dd3cc1b8d966fc33ba2564d8f13c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Role&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Role&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c8c93603bc6436e07cf5a97193570617fa9b62d6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;RuleBndr&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;RuleBndr&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f101d76a75ef31808cd5979113621d4634180a82" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Running &lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; state thread&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; 상태 스레드 실행&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a318212c33a3247bd4b165d3de29c4bc18136a39" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Running RealWorld state thread&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;RealWorld 상태 스레드 실행&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f9289e5661dd40f042a110471cdf63b372d38b64" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Running a parser&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파서 실행&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3d7de58d01df30f1f2a125da311d2979fe2c32ee" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Running sub-processes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;하위 프로세스 실행&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="01f3c6a38514a4549f8dbe18b9699280684f12c0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Runtime statistics&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;런타임 통계&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="33ffa357184d894fe41dfc1513ba1b7d86d2ad6f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;STRefs&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;STRefs&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="38e086d59dc8853fba7c604c2ad67bcf55c0adc9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Safe coercions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;안전한 강압&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f98027957a1d7522d502b4140e7db535b13ca568" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Safe conversion functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;안전한 변환 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4261338f73e085b163cef8ef64ce70ade1b82411" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Safety&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Safety&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="35db407f070d96eff61230478167bc8629de05c8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Scans&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Scans&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="dbf4c667094273bfae68ce0856a115dae8f747a2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Scheduling&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Scheduling&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="471f4e6c8e4eccef1d798451fc1b6a0c39d674a7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Screen buffer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;화면 버퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="536a5a3008f1723f692532960d14ab7f27130ad3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Scrolling&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Scrolling&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="984fe95f4ddce7f2de580ff60299db7de6d4ecb5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Searches&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Searches&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1ed720a068106203e1f0169665b15b7f1cea6651" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Searching&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Searching&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b4bc7ff50c1b76b6290c3c37a43594c475e7f745" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;See also&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;또한보십시오&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="81cb7217eb6f74064643606d2bcd47f72ed4bd3e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Semigroups&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Semigroups&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="17da93867b74bfe6bddc5e1d7ece27a9e20c9b7f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Sending signals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;신호 보내기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cdc0a7f32372d5dbbf13ab946b4f44729db551af" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Separator predicates&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;구분자 술어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="140514c5a2be627baeb52e8c875e38117f7e4f9b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Set type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;세트 타입&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="70fac53e9ffc3f354de81ed45b3874203f64d9b7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Setting file sizes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;파일 크기 설정&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4af5bcec3148f320d1d19e54867c742d0f358f2c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Shared operators&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;공유 운영자&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4ecac940d6a5c5cb0c3d01fb0bdeac494ea12ed5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Shifts&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Shifts&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a29f65ef6719f8cc998467bb13ccf4237924a5ff" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Showing&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Showing&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9e065d3824295db0d718ffff846329f3f8983b3e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Signal sets&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;신호 세트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c944bcd17ee6f4293d7fa5faf485852a9825f0cd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Signed integer types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;부호있는 정수 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c958467752d7f1a2c657a5abf9f8aeeadb5f0c41" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Simple Quantity Semaphores&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;간단한 수량 세마포어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="86f71eb23ad3b56e2f5a252e2106e98e22853ae2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Single digit characters&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;한 자리 문자&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="161d716d4b5879ce0135d06c7b8e33e5fef8c204" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Sizes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Sizes&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a7525d819cd0e2ac9f03777deb63430b587667b4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Sleeping&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Sleeping&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="169e202dcd32763f6368516720e1d40fe55d95f9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Sort Functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;정렬 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0370c7be253a77ec9e1df0bdc680532708fb37bd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Sorting&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Sorting&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cee191c3a00f6b6c1d8c89211e434fc021f4b84f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Source locations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;소스 위치&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a972032edb22536c95730a5e55322359ebac04a8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;SpecConstr annotations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;SpecConstr 주석&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f503e0f36d04f3c49b00ce62ab70d5fbb8730f8c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Special biased folds&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;특수 바이어스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5ed53e1b75655e7d57f8613f9eb3d8372a865341" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Special cases for standard input and output&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;표준 입력 및 출력을위한 특수 사례&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a86296695d830896dad09c6a1d7cefb387062801" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Special folds&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;특별한 주름&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="29963c4d942231ed5d0a8f83260ecb94aacdd06e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Specialised versions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;전문화 된 버전&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e96a75d521710bbc85bae83160fcc4338653ee33" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Specialized folds&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;특수 주름&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8c755e71b367c4a9905dbdad05d0a8d55caf33f0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Specific signals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;특정 신호&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="456ec5e0aa479ae207379174cfd03fefbdd671fe" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Stable Names&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;안정적인 이름&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="339b587bc4333573a513f75c325395c23e0f5ea6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Stable references to Haskell values&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;하스켈 값에 대한 안정적인 참조&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b3c9905cb910bc9fbc0f18950f9e7e5ef6cde796" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Standard C Functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;표준 C 함수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3f355a7642ea5d04f658636ee05c51b8a9f66fb5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;State operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;국가 운영&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fb88a3f009d360f9a07e6a6d1e822e0a1ca1b35b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Stmt&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Stmt&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bb76a13fe251b3a00ef2c296f4ef91084245fbf7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Stream interface&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;스트림 인터페이스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="01f1af93be26e2e94e551e84159502456de29f28" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Streaming&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Streaming&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d247ea3d0253e2fbc31e153ba2015a2c1547fc0c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Strict Reader-writer-state monads&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;엄격한 리더-라이터 상태 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="af36eed786df71cab3882783fcbaa3bf97dc1f0f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Strict monads&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;엄격한 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6b319939278375522d02755cb4bcf132aa74570f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Strict vs lazy types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;엄격한 대 게으른 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9d8060e6ff56d540a6dc242646db4bcb0fd175a2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Strictness properties&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;엄격 성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="54c5258cba5e1c1b36c2ab9709f3d56200595271" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;String representations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문자열 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="edf664a5960a7b877f1fc9b531acb5b719832c0a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Strongly Connected Components&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;강력하게 연결된 구성 요소&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="760893d1c3101425962f37e9bc83df199bf38fc7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Sublist predicates&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;서브리스트 술어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2a9d7111702453b70209afaa1b9f6271ac80e1e9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Sublists&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Sublists&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6958c4fd468a8d90fcbee46c8e590d3bd8703f1d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Submap&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Submap&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d7540ee619158a83eae32710293a009286a3cfa1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Symbolic links&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;심볼릭 링크&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4f68b1a8a12ca32ab32508d5984c059b069570dd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;System environment&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;시스템 환경&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8e65b5e8f967790cf2d7c27379b1d8063c1d02df" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;System metrics&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;시스템 메트릭&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fae0c41ca3389e164be30af74d12532d20d86693" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;TBQueue&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;TBQueue&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="85aaa7983876e999d0c467920157cbb5d39d3040" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;TChans&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;TChans&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="50e9c70980cc5affade95a60dc38548286f627fb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;TMVars&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;TMVars&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4f0b57019eeaf8712159fc2e43eb47a51f2ca611" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;TQueue&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;TQueue&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b85188662676e956738db31540d19f5cf2872d11" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;TVars&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;TVars&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6f42ee1b68c9ae60bb70f160ede566f671b84fce" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Temporary files&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;임시 파일&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c1111340672a143cd7f4c5249623b19e55b8c1e0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Terminal dimensions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;터미널 치수&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d36cc86d936775ab495bff850f4bb0dd174c33a8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Text attributes&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;텍스트 속성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4839380c491d5a54c5d9e43ef5c6fd1500205826" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt; type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;찬의&lt;/a&gt; 종류&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8eb9bb7650bfd985799a842a46c36b4fa8f8c389" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt; Monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt; 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1c049c433824b7bc2d91d854fa9b6b28371f9d52" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt; monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST의&lt;/a&gt; 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ecdabff334788f212470394352cec7f4cf7394b1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt; monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST의&lt;/a&gt; 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4e7d53d23ba299a081bf2c75f03f91b81821d92b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; Monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b747458f52f92092643593a15565f5949d193770" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt; class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;1 &amp;times;&lt;/a&gt; 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d75133eeccc47f7d1af72a54f0b841aea5dd75d3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt; class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;data-traversable#t:Traversable&quot;&gt;에 이동&lt;/a&gt; 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2948298e214c8f06d13e48fe9bb78a5434393fd5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat의&lt;/a&gt; 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ada4fed8cdbaaa5c6c845754480c649d490adcd1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt; type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;정수&lt;/a&gt; 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f7be1d22196a99f16530afec9d15996369fadec8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; number type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;자연&lt;/a&gt; 번호 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3cf84b4c7ab2bad2ffd83c8cc11a0dd560b25e9c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt; type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP의&lt;/a&gt; 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3fb0c1e05341e709e7af1be60d36549a3c24d01a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;읽기&lt;/a&gt; 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c2ae11bb5d8bac9d7f03d97697a77786a481ed9f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Accum monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Accum 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d5765d0650317092f59b73fe18b60f7a845e54f3" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The AccumT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;AccumT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ff2c04b06c50427594c8f52ea7924319af23b522" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Any type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모든 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e6ad44a555337339ceca0a2335e3b04a2d1ba962" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The BigNat type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;BigNat 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a246786388a64951db999fcb71abef90ca50c194" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Binary class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이진 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5e9a46b9ac6ccfd42a96508ddf40388937843f09" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Builder monoid&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;빌더 모노 이드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="570d01597bbc1cb354e2e342445089cd34567f18" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Builder type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;빌더 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c85253781330ffb9be977e554c0f337ef80ba205" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ByteString type and representation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ByteString 유형 및 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="aacf5429dd918299fc1acd17815a2ab5802716a5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ByteString type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ByteString 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="acee7cf96e2824b7e636729884c572bb2b73d73e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Chan type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;찬 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ff210785017de51e4bd31ad65d86be7c6dee1d26" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Constraint kind&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;제약 종류&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f0cf71055c68ed1df26f22b9c18c9cd27945b8cd" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Cont monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;계속 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4900759faead9e8d10960cc929ce6daddf30c71d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ContT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ContT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2d09a8bb99822869dbf2d719a26eee04f26334af" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Data class for processing constructor applications&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;생성자 응용 프로그램을 처리하기위한 Data 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d96441c40f69831b1647ba3d51e490c52b7c1526" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Dynamic type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;다이나믹 타입&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="61449748974c221edccf7c874dfabc6f29ff8b3e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ErrorT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ErrorT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="83ebb2b5e8f1f47ca0f7027ff0e9914d86a4cab1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Except monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모나드 제외&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a0ff84ac1a0b6aab45773b4e54f94fd5e5ea5aae" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ExceptT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;제외 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="091e5795977ac923e34a7195b44f90340357160d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Exception type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예외 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f0774a4d6c0fb2b8252ad57419eef7ad85315e93" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Get and Put monads&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Get 및 Put 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a86b8b2afb543ef6ac588c1c6f76413cdcb00ea2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Get monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Get 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d4379b7404e37537ade7f16e575a8169fc0b47bb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The IO monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;IO 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="dc056efaaa7e310595dcd74df048ad90f34b25fe" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Integer type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;정수 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9ec94752a28019570f7eaaa4d9feca00a1d12269" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Ix class and operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Ix 클래스와 오퍼레이션&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="65fae7d5c3d7322069bad4717b53ab954ffede90" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Ix class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Ix 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a7dcb0dbd70f8efaa4832540ab723c2ef24d79d6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ListT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ListT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6c8ec0b6c69011f2fb1cdf9bbdad5a746ad2f5af" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The MaybeT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;MaybeT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="988e2e431f759997559647e42e00c833c03ec8c4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The MonadException class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;MonadException 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ce25ebc3a3218b5b34527479572a874969eaf002" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The NOCLDSTOP flag&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;NOCLDSTOP 플래그&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4831cbf7a13d4f4bf241a7ffbec7c256f95fdde8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Natural number type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;자연수 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="affed16db336a7f62210860e76676474e4e78376" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Put monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Put 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="13b8b1bd65f5822a6734c387de182883ba44ca97" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Put type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;풋 타입&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="5f228c4b66d658313eb721d912446b10b69fedd2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The RWS monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;RWS 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="82ff7e7063bd3ed0218dd6083ae35e4591e4a6a9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The RWST monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;RWST 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="52ab206e6c4c96e2bdeca45c83aa89c6ddcb12ac" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Read class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;읽기 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="9a837f5b9d4d0e6fee4857ee36e146584024b07b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ReadP type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ReadP 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="27c48c784b98c4e7065fd2fa013a90b1c8124758" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Reader monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;리더 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1f829a71c8016ad38dbd841240ce1ffb3a49e799" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ReaderT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ReaderT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0a019f0d7ce74974e61a7d20077e82d8e5920ef2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ST Monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ST 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8e3ae34cae2dd6d4ec49dfcafb2a38ad936087e0" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ST monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ST 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="49dfc75422e0a02259923f9e32cdd75eb41477a8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Select monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;선택 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="68d06ad6c5f9f3045ff0bbc42591f35cf7e056f4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The SelectT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;SelectT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bfd68189bf3a7d48ba38f0b234f20bb1bf3f246f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ShortByteString type and representation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ShortByteString 타입과 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6490cd1bcd95e17b898798185690a98e0a52298d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The ShortByteString type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ShortByteString 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="efa0dedfc54ca5d53ab6d8edc0415686b185905c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Signal type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;신호 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2d4b4959e365c13c7e64adb8497034020cd58e1e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The State monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;스테이트 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="717c91a5e43a1aacce10b6fb0b48608b5ddc826b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The StateT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;StateT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="16536dcbbb0a47fe450927fa3fadd1b46ad1e60f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Traversable class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Traversable 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1934152e376f845491c3b87e702bde9e90fad4e4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Typeable class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Typeable 클래스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="04700e9f05e321ea260f44acdd2595907c8460c2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Version type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;버전 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8f24f17d9fafefc643617176cb41583a1ae6932e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Weak type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;약한 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="3b694527c97e602c5db2c1072432309bd1781a0b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The Writer monad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;작가 모나드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fb6caa5b63a1939636e0bebe62b5ee6952b46753" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The WriterT monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;WriterT 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="57b28ceb27b90028779fba250cf17876fb2b993c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The alarm timer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;알람 타이머&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e0053668e18db3fb5a112eaa82c5ffd43e386c78" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The algebraic data types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;대수 데이터 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="03bf1adb5767ed3d73043473eca0be4e8b1dde8b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The call stack&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;콜 스택&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b0cfb4344eaf5ec1bc184d08aeb07c5474165f06" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The document type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문서 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a9763deb8f609e0ac7d6b9566deda2097b01a9df" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The equality types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;평등 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="44651b514fac6f4e1e67f73c6094dcc776f54800" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The general interface&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일반적인 인터페이스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fa04d084ce499ecce9d5f444c5bfdf1682cfaeb8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The identity monad transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;아이덴티티 모나드 변압기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8da564f2cf167fcdc2bf102c0e430c5ac224ccea" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The incremental input interface&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;증분 입력 인터페이스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ff91ffe4e5a4d71d9b0be62202aa773bdd8b8e43" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The keypad&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;키패드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e0e4a362070a136230d8b73e3f649686d47c7530" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The lazy ByteString type and representation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;게으른 ByteString 유형 및 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1904062ddab4ae48e3670859bb25fa1cc5342e46" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The lazy input interface&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;게으른 입력 인터페이스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cb9376729458777a94619bdd00d5968f6fa7da24" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The maximum tuple size&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;최대 튜플 크기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="41542f016913490c69e91d145825ab448fdd871c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The monad and its operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;모나드와 그 작동&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d9513d77469b6988d73d5f1f28b290db17d10147" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The overloaded immutable array interface&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;오버로드 된 불변 배열 인터페이스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="982c84dc43e088cf550cad69fa4b6cd30d7fd242" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The process signal mask&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;프로세스 신호 마스크&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6481b6686398512aec3f5f42a7ed4986adebe42a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The type of non-empty streams&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;비어 있지 않은 스트림의 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a6d5e91f1fd7a1d057ae44703301ccc16e55a31b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;The working dirctory&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;일하는 법&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="de51365cade409fc5df9017a391e6b4e65e54650" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Throwing and catching I/O errors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;I / O 오류 발생 및 포착&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="b17a479929e710592b9b0d0ca17353317d7f20b9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Throwing exceptions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;예외 던지기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="8b5a2fa345db7991bc020d130daeb489ecb651ef" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Time of day&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;시간&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="440e3f6d031e548d922a52a3eb1799698c6e93f9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Time zones&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;시간대&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bc4a53ebe38f194684527b44d1f1beb034793b56" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Timestamps&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Timestamps&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="eb2525ea4916a77d30567f16fd8e31f0eb2e2c37" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Tracing&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Tracing&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="093ec1af97859ff0bd6aec177d5151e89d00cb1c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Trailing slash functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;후행 슬래시 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="90783533a27933df617e2d6e6a952446aabb6789" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Transform comprehensions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;이해력 향상&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="694ef7a942bdd2f8fd947ce91ab7a49b7f0036c7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Transformations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Transformations&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0de09d47ec470ace6cba287ef9792f08bdcff33e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Transformer class&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;변압기 등급&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2f191bf9aeb5f4e683705e2b09a3bada26e0e954" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Transformer&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Transformer&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="60b8a6225595bbf2fef1fd4d03adb5b18ab876cc" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Transforming ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;바이트 문자열 변환&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6407c55ecad0c04012e633ebfd27471550fe9f22" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Trees and Forests&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;나무와 숲&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e41f3705ce92fa3c6180a68957a0889faaec0f24" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Trees&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Trees&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="67d3bfeb90d9587a1c269ce65e6d49d4575dacd7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Type Literals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문자 리터럴&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0c271af28a051b8bf4ea0f6999670d590ac1807d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Type constructors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;타입 생성자&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="efbd859859cfce18ed37488115ee38d4b75f053f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Type family result&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유형 가족 결과&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6eaf9cfe09796a71de1c42476514761e10b00ebe" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Type representations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;타입 표현&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="50ace43c0c33e4f1697fd6122d4dabb225f6b6cb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Type synonyms&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;타입 동의어&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="6dedb10eb74157137f48624a94f1d8714072b679" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Type-safe cast&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;타입 안전 캐스트&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="264790688520fd3e6189cb00793203e9119236ef" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Type&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Type&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a524a5d4644eabeb642d326ce298f19deadfc9f7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Typeclass&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Typeclass&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4b7ec4f4f2a615e35ba0b204067a47959e869be9" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Typed expressions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유형이 지정된 표현식&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="697264f869ca521c74dd61d14f306d6a6b6b894c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Types of I/O error&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;I / O 오류의 종류&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e0650cf335c04dab82ce77ef1893d5c48a1a4547" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Types&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fbd22cc73c54d0dde648c35aa936b43d8567e884" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;UNIX-style formatting&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유닉스 스타일 포맷&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ff841776fd00151f80041a8043a6d9c2c34c0901" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;UNIX-style parsing&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유닉스 스타일 파싱&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a20d373da971d37f017f291d7316c2f690066177" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;UTC&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;UTC&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="2e1981e42f0c4212f1f2ca33829d70dcf019e21f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unboxed arrays&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;박스형 배열&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="1b842f3c1b662046cc84acd32088a9d3f54218ad" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unchecked access&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;확인되지 않은 액세스&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fd64d9f995186046f8f1e805638befa6ec0752aa" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unicode encoding/decoding&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유니 코드 인코딩 / 디코딩&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d184233070f348cac185461b51d17b5cf56a15ff" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unicode&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Unicode&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bb150f92d70d2bdb1ad805c4a05d753a1116aaa4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unique objects&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;독특한 개체&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f4d3ccaae9b41e9bf4d2c254bedc016b935123e8" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Universal Time&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;세계시&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cc9089c5e5346f29c128b9cb84d67f1e6b8c8907" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unsafe &lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt; operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;안전하지 않은 &lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt; 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bb35f8f3b241aed0f456d37fba195d8455603942" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unsafe conversion code&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;안전하지 않은 변환 코드&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="42e9b9d612ec15ccedef0c9c3bfb520b46e9a26b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unsafe functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;안전하지 않은 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="7a500315e4fb888530e2350f5e09f9e3cbb0a64c" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unsafe operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;안전하지 않은 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="81f670efb6074aa4f39f78ab331dfc9c32352008" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unsigned integral types&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;부호없는 정수 유형&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f61cf2549f8fd0df4b132acbd58eb236b9a89bfb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Unstreaming&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Unstreaming&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="369adaacf771a829fa2f87994858e2f0e12e8468" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Useful error handling functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유용한 오류 처리 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="484690b39d8dec878f2975d8b41af8e1374195e5" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Useful helper function&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유용한 도우미 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="f48f4cca66c345bf22b6d293a57b211d3f3770e7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Useful helpers for writing instances&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;인스턴스 작성에 유용한 헬퍼&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d9251d506fb1201e95de477318316165a93927f7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;User name&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;사용자 이름&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="382e06ab774f158ae655583f2f06c62b33841b52" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;User-defined type errors&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;사용자 정의 유형 오류&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bdfd97d05e7a1aee9f0475c6566beccf1e3661b6" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Utilities&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Utilities&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ee953fde354c697482a016f5c0972ad498ffa3ef" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Utility functions for documents&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;문서를위한 유틸리티 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="cdfc38fe7b767d9ee54f30d1265d211a7ad473c1" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Utility functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;유틸리티 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="54477181a528464308bf65e7824ff60e466d7cf4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Validation&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Validation&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="4468192a3864a3a45f1168695cbb48a9bc866b38" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Verify OS version&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;OS 버전 확인&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ac59c3752e39458575d0d1ae52b9e8014350ac9e" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Version Info&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;버전 정보&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c066de77f2830c2ecbff848b553e8be9eeae19e4" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Very unsafe coercion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;매우 안전하지 않은 강제&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ed0ce90a046f95058d7b520253e71e4ad540965b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Waiting for signals&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;신호를 기다리는 중&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a236b56a6eaf87e87704a283dcb619b95f7dca63" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Waiting&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Waiting&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0262c461e6290f288587b5a28e5bca98c7df2c5d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Warning&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Warning&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="221facf92df3cecc48d9f9c82150ce3ef063cff2" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Weak references to ThreadIds&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ThreadId에 대한 약한 참조&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="e09d055bd1df11f4989d9de114d901aad18f1c63" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Week&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Week&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="61bfb7af2de0549f9d89ccccb398dd6c7cfb224f" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Word completion&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;단어 완성&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="fe16abf40a1af75dff1867c3d81ecb0236ccb36a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Working with equality&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;평등하게 일하기&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c7d93aead76ceaf9fe0d546c8791a1f7fb0d7275" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Wrapping documents in delimiters&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;분리 문자로 문서 랩핑&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="0b40b8f20e1a591ff79587099a3bcc7f0c6cd242" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Writer operations&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;작가 작업&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a8c223db495b24414b413e2db8d3e633408a7eec" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Year and day format&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;년과 일 형식&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="924f90398e3b3d8537f1c63a65638b16d0d4fc13" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Zipping and unzipping ByteStrings&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;ByteString 압축 및 압축 해제&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="a2ccb09d16ab28e62f60eca338455f6d0669bbcb" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Zipping and unzipping lists&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;압축 및 압축 해제 목록&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="df207cf98e203da43558be15a2648cf496e73797" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Zipping and unzipping streams&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;압축 및 압축 해제 스트림&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="725c9d7880807b28f9566b18b9848833271c6041" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Zipping and unzipping&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;압축 및 압축 해제&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="ca1f74523c7d8d9d7dc0888d01ef798b957a5683" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;Zipping&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;Zipping&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c2f67f35edfe4fc8e82112eca43951c542ffb9d7" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;bit reversal&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;비트 반전&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bee0d40a3ccadb4b0a7289990b2cf08b7facbace" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;byte swapping&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;바이트 스와핑&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="47644960c938d2bb56e314ee90b8fc9c157b714d" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;cbits functions&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;cbits 기능&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="bb99a6af812dac596d41263c8f1624821524559a" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;low level API&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;저수준 API&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="c1777ab3ea618d12f9d7a0979b477a97f9e0be0b" translate="yes" xml:space="preserve">
          <source>&lt;h2&gt;popMin&lt;/h2&gt;</source>
          <target state="translated">&lt;h2&gt;popMin&lt;/h2&gt;</target>
        </trans-unit>
        <trans-unit id="d41f9040381b588b3d0672afaa2c4fd4ae06dcb9" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; 기능&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3c2d91dfce2565a83b5cdbb2906138e69a4b23bf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; arithmetic operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; 산술 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="30dee646d9b96bfdc357ceb6e5ad49617c11c4bc" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; comparison predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; 비교 술어&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="331adf6f65cb5bdbf65bc37439be8d09d5b949b3" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; logic operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; 논리 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="578bea6e87fe2e2fa19b0539da0d03bbc43c755a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:arithSeqE&quot;&gt;arithSeqE&lt;/a&gt;&lt;/code&gt; Shortcuts&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:arithSeqE&quot;&gt;arithSeqE&lt;/a&gt;&lt;/code&gt; 바로 가기&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="30a89be99f381e79093cd1c815658f8620171e54" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;&lt;a href=&quot;system-io-error#t:IOErrorType&quot;&gt;IOErrorType&lt;/a&gt;&lt;/code&gt; predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOErrorType&quot;&gt;IOErrorType&lt;/a&gt;&lt;/code&gt; 조건 자&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="68b949f5bfa53b869fb6e59fd18b15ba43aec581" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;BigNat&lt;/code&gt; arithmetic operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;BigNat&lt;/code&gt; 산술 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6db97ed11b12854a02900d681c49fc02524dd35f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;BigNat&lt;/code&gt; comparison predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;BigNat&lt;/code&gt; 비교 술어&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fd074b5b77816be6bf9d3a86633dfc9a251df52a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;BigNat&lt;/code&gt; logic operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;BigNat&lt;/code&gt; 논리 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2ed8e35dba5d906c1b5acbbf41be2e5e2dad2bc3" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;Errno&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;Errno&lt;/code&gt; 기능&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="452104eab23d314b8a096b3e87f115a04e28b40c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;IOErrorType&lt;/code&gt; predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;IOErrorType&lt;/code&gt; 술어&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9c8d14b946ec9e42111ac22dc00682318c194a7e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;Int#&lt;/code&gt;-boolean valued versions of comparison predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;Int#&lt;/code&gt; 부울 값 버전의 비교 술어&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1bce01a51b8a09fb8616bfd5f05526062f20eec0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;
&lt;code&gt;arithSeqE&lt;/code&gt; Shortcuts&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;arithSeqE&lt;/code&gt; 바로 가기&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1523d3ad0d6806f943eff517a142d39a1fce52ae" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt; Platform differences&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; 플랫폼 차이점&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2741e61eb10d9480cb2497a937e5294518d04cac" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;&quot;Set&quot; operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;&quot;설정&quot;조작&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c3a2cab996c329ee5d3752fe2ad84df2fac883b1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Accumulating maps&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;누적지도&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6e519ee822e22638ff20e297246bb032fa50dbd1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Additional &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;추가 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2a5c775f4ccd964be11fffa0293beff78916ec3f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Additional &lt;code&gt;Integer&lt;/code&gt; operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;추가 &lt;code&gt;Integer&lt;/code&gt; 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ce76a28df7440bc5fe49296083d32d9f2f3312b2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Additional conversion operations to &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 추가 변환 조작 &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e3f9fdca902fe3ff837ac49849632e35056e0413" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Additional conversion operations to &lt;code&gt;Integer&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;Integer&lt;/code&gt; 추가 변환 작업 &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cf0a6f36a6a711592cbce810f4ae5e069ec617c5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Administration: errors, locations and IO&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;관리 : 오류, 위치 및 IO&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ea52275f4af1db6250d770ddf9c8d6d8e829b4f2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Allocating managed memory&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;관리 메모리 할당&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5930978c2c486d3ef2dec74d26e5bba1b1dadf3d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Annotating documents&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;문서 주석 달기&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1e1c553e9ccb213f095a40ff2800d6cf2fd55f81" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Annotation rendering&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;주석 렌더링&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0bc7f6d91a22c52b690ca45fc10d3960b9461544" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Applicative general combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;응용 일반 결합 기능&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0bcd3fe4eeeb359bfbfec54fb26bb6368fcc8497" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Applicative merge tactic types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;적용 가능한 병합 전술 유형&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="60b984d174b35a1971e4154b3ae90fa8fd765b55" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Assertions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Assertions&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7797f43b6b8dd50f409877cbf8ca157d66105254" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Asynchronous exception control&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;비동기 예외 제어&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c8c90a5da2112906b8d94f57870425aba99bbe51" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Attributes of I/O errors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;I / O 오류의 속성&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="56c16e23425c48c9174b59ad39d02897689acd92" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Avoiding multi-pass folds&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;다중 패스 접기 방지&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4ef474107523b3f281145abc9d143383ce696f1e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Basic &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;기본 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bf2b30b85c0cc1915dbf3dd1742f7cce792d04f6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Basic &lt;code&gt;Integer&lt;/code&gt; operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;기본 &lt;code&gt;Integer&lt;/code&gt; 연산&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="61d87998430ed298b96236db4625a3efda278681" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Basic &lt;code&gt;Monad&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;기본 &lt;code&gt;Monad&lt;/code&gt; 기능&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0debd5b48b16c3bf7cab15b8c0b8c2c15396def8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Basic operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;기본 조작&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bd146d8e02a21a68b6e1b5e01b911b90aeb2dc52" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Basic type classes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;기본 타입 클래스&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b644b039cb1302d3334ccdb06a2c6a6d629fa4f5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Behaviors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Behaviors&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="20d090afd598662c2ca59f79b6d9e99d658676a9" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Blocking&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Blocking&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5aa6a8c84c42b739c15cc6e0628f7aed2af3fe12" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Breaking into lines and words&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;줄과 단어로 나누기&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6ca58f83f61004464de0f930edad4d4700c7dc07" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Breaking into many substrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;많은 부분 문자열로 나누기&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="26bad70c83e56a1cc9a44de266e294f614adb928" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Buffering operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;버퍼링 작업&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5e19d24e6f2f7ca684f440dd8d6f9c186222bdb7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Builder construction&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;빌더 건설&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="99584d1548271b186ee1701d142573c36ec38aae" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Built-in names&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;내장 이름&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="11ffd4f246b3cacd8683cf6c6e6c014147d12b61" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;ByteStrings&lt;/h3&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
