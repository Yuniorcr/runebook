<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="2811dc2871409b74c7634f3fe21b9cfad8e3426d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70a0cb56fb988edcefd7f57e57c953aed4c9f29d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:pang&lt;/code&gt; if it fails, or &lt;code&gt;:pong&lt;/code&gt; if it is successful.</source>
          <target state="translated">실패하면 &lt;code&gt;:pang&lt;/code&gt; 을 , 성공하면 &lt;code&gt;:pong&lt;/code&gt; 을 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="fa4c892f8a51f6377453163a59366a24b8673154" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;index&lt;/code&gt; is out of bounds.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 가 범위를 벗어난 경우 &lt;code&gt;default&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d21a89523dd182a1ba29c1ffb24f85507a56dc6f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if none of the above are writable.</source>
          <target state="translated">위의 어느 것도 쓸 수없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1f0f9beba5634a498253a4c1ac4faaaf1bb2245e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if the module cannot be found, if it is an alias, or if it is not a valid &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Returns &lt;code&gt;nil&lt;/code&gt; if the module cannot be found, if it is an alias, or if it is not a valid &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="898fb5eb3ba6e23f0ccd7d7539ee54b65de26942" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;string&lt;/code&gt; escaped using the specified &lt;code&gt;color&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;color&lt;/code&gt; 사용하여 이스케이프 된 &lt;code&gt;string&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4ac9182b080017ba693939798ee4b3253313dff7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;config&lt;/code&gt; is the configuration for an umbrella project.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;config&lt;/code&gt; 우산 프로젝트의 구성입니다.</target>
        </trans-unit>
        <trans-unit id="9962d949955102edf7d4c95bfcf26efb4913fef8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;enumerable&lt;/code&gt; is empty, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 이 비어 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c5674c2a52dea0e62c8659c4dd8c99131becc466" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;fun.(element)&lt;/code&gt; is truthy for all elements in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;fun.(element)&lt;/code&gt; 의 모든 요소에 대한 truthy입니다 &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f74f38a142de62e72e50fbadcb7c75b8d2b80e17" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;fun.(element)&lt;/code&gt; is truthy for at least one element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fun.(element)&lt;/code&gt; 가 &lt;code&gt;enumerable&lt;/code&gt; 최소 하나 이상의 요소에 대해 &lt;code&gt;true&lt;/code&gt; 경우 true를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="179a1732a2513e4c3ac51063ba35f20395592f09" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is a key in &lt;code&gt;map&lt;/code&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is a key in &lt;code&gt;map&lt;/code&gt; ; otherwise returns &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc728eb61f6e336eb00009dac943b8ae70a8775e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than &lt;code&gt;right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e3c7c1904dff8eceac5f6c60a3d217708b53587" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than or equal to &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than or equal to &lt;code&gt;right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="217d90c4952fc34630ab587101fa3345f127ffd6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is more than &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is more than &lt;code&gt;right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="752f02f9b82f19702cd7c61e772ca7001eabb5d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is more than or equal to &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is more than or equal to &lt;code&gt;right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="514fe375f6bf375eaadfe6b59fe1fa8665022d7f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; matches &lt;code&gt;right&lt;/code&gt; (if it's a regular expression) or contains &lt;code&gt;right&lt;/code&gt; (if it's a string).</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;left&lt;/code&gt; 일치 &lt;code&gt;right&lt;/code&gt; (는 정규 표현식의 경우) 또는 포함 &lt;code&gt;right&lt;/code&gt; (이 문자열 인 경우).</target>
        </trans-unit>
        <trans-unit id="ea241259b8bf2bfa681b13e041e456b2a872afb0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is an improper list. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;list&lt;/code&gt; 부적절한 목록입니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="13bb0ccf3c3642db1839be80f4503b7d3328419c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; starts with the given &lt;code&gt;prefix&lt;/code&gt; list; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;list&lt;/code&gt; 주어진로 시작 &lt;code&gt;prefix&lt;/code&gt; 목록; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="30b6f388eb9b873621632a9225533fab3fd32015" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;module&lt;/code&gt; is loaded and contains a public &lt;code&gt;function&lt;/code&gt; with the given &lt;code&gt;arity&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 이로드되었고 주어진 &lt;code&gt;arity&lt;/code&gt; 를 가진 public &lt;code&gt;function&lt;/code&gt; 가 포함되어 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="a1ff647bff772fb3c27239fe80409991ad029c38" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;module&lt;/code&gt; is loaded and contains a public &lt;code&gt;macro&lt;/code&gt; with the given &lt;code&gt;arity&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;module&lt;/code&gt; 로드 및 공공이 포함되어 있습니다 &lt;code&gt;macro&lt;/code&gt; 주어진와 &lt;code&gt;arity&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98b09495aa1c8dc345b23e7149ef0c6a164db4ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;string1&lt;/code&gt; is canonically equivalent to 'string2'.</source>
          <target state="translated">&lt;code&gt;string1&lt;/code&gt; 이 'string2'와 정식으로 동일한 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="315cea72c5e0f6161a3b846c3752c56b24a3948c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;string&lt;/code&gt; ends with any of the suffixes given.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 이 주어진 접미사로 끝나는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c5875290ab59e60512fe2c79091c539fa829d55d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;string&lt;/code&gt; starts with any of the prefixes given.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 이 지정된 접두사로 시작 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b90e50f671b05dc996377d3785c4a6e0e543d9ff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="5e0cec38e965cb1a7be0a1586c0c1e423e655e66" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a PID (process identifier); otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; PID를 (프로세스 ID)입니다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bc1ef9358f093fef465082c08cb4e7223756760e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a binary; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 바이너리이며, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0cb68195b8efb7757981bf81f0fe6586be5d3de1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a bitstring (including a binary); otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 비트 열 (2 진 포함) 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="79b3d661830095f41c2c68053ed17e9b52d8a01f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a floating-point number; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 부동 소수점 숫자입니다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2dfdb69c5aae41737cbd815e59c8f1871298087f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a function that can be applied with &lt;code&gt;arity&lt;/code&gt; number of arguments; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 &lt;code&gt;arity&lt;/code&gt; 개수의 인수 로 적용될 수있는 함수 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e89f73bf316fbcc1d6d52abc07e4cb1ed326b1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a function; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 함수 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dc10af9077eb74d82ee86a391efb59e0cd84b7b0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a keyword list; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 가 키워드 목록 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4e151da898f287d233b2078fa6ce5e9be52488e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a list with zero or more elements; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 가 0 개 이상의 요소가있는 목록 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="67b05b7c88321c7891dc98e1ad13a9b71be8ac91" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a map; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 지도입니다 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ead0e61ee4b2af85c87450fd0aad9af3d5e78d5a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a port identifier; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 포트 식별자 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7cc5a8e3d83346b723a1e98b79b03336e58e5997" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a reference; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 가 참조 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="836dab30db9cebf9ce31984fd2d439fc70e98fae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a tuple; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 터플 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cd9eb92704a0ae5f8e88de02a6cf887bf2e96aca" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an atom; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 원자 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2b8986c4215419978baefd80231f45b3beba66ef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an integer; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 정수이고; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="14d9412f32700bc4cbbf29f37ca9bcb0a10c90d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is either an integer or a floating-point number; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 하나의 정수 또는 부동 소수점 숫자입니다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7a9f98e326f05651d287e6878b38e46a8be222b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is either the atom &lt;code&gt;true&lt;/code&gt; or the atom &lt;code&gt;false&lt;/code&gt; (i.e., a boolean); otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 atom &lt;code&gt;true&lt;/code&gt; 또는 atom &lt;code&gt;false&lt;/code&gt; 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 (예 : 부울). 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3f92792e4651577bb721731f8ac15665ae74573f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;tuple&lt;/code&gt; in &lt;code&gt;module&lt;/code&gt; is marked as overridable.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;tuple&lt;/code&gt; 의 &lt;code&gt;module&lt;/code&gt; 재정의로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9aaf8e3dc93c82783121ab82de252342ee31d985" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;version&lt;/code&gt; satisfies &lt;code&gt;requirement&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise. Raises a &lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidRequirementError.html&quot;&gt;&lt;code&gt;Version.InvalidRequirementError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;requirement&lt;/code&gt; is not parsable, or a &lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidVersionError.html&quot;&gt;&lt;code&gt;Version.InvalidVersionError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;version&lt;/code&gt; is not parsable. If given an already parsed version and requirement this function won't raise.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;version&lt;/code&gt; satisfies &lt;code&gt;requirement&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; otherwise. Raises a &lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidRequirementError.html&quot;&gt; &lt;code&gt;Version.InvalidRequirementError&lt;/code&gt; &lt;/a&gt; exception if &lt;code&gt;requirement&lt;/code&gt; is not parsable, or a &lt;a href=&quot;https://hexdocs.pm/elixir/Version.InvalidVersionError.html&quot;&gt; &lt;code&gt;Version.InvalidVersionError&lt;/code&gt; &lt;/a&gt; exception if &lt;code&gt;version&lt;/code&gt; is not parsable. If given an already parsed version and requirement this function won't raise.</target>
        </trans-unit>
        <trans-unit id="3c6d2a9d4ac17e816f44f5c8d82e7d9189bc17b0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;version&lt;/code&gt; satisfies &lt;code&gt;requirement&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise. Raises a &lt;a href=&quot;version.invalidrequirementerror&quot;&gt;&lt;code&gt;Version.InvalidRequirementError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;requirement&lt;/code&gt; is not parsable, or a &lt;a href=&quot;version.invalidversionerror&quot;&gt;&lt;code&gt;Version.InvalidVersionError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;version&lt;/code&gt; is not parsable. If given an already parsed version and requirement this function won't raise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;version&lt;/code&gt; 만족 &lt;code&gt;requirement&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 그렇지. 발생시킵니다 &lt;a href=&quot;version.invalidrequirementerror&quot;&gt; &lt;code&gt;Version.InvalidRequirementError&lt;/code&gt; 의&lt;/a&gt; 경우 예외 &lt;code&gt;requirement&lt;/code&gt; 분석 할 수없는, 또는 &lt;a href=&quot;version.invalidversionerror&quot;&gt; &lt;code&gt;Version.InvalidVersionError&lt;/code&gt; 의&lt;/a&gt; 경우 예외 &lt;code&gt;version&lt;/code&gt; 구문 분석하지 않습니다. 이미 파싱 된 버전과 요구 사항이 주어지면이 함수는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b102633aa65f0f78fd85e893465d9febbf820c32" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if IEx was started, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; IEX가 시작되었을 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="e78d65a702a5304adca7eb9dab5e18bc6ac1ece7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if Mix is in debug mode, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 믹스, 디버그 모드에있는 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="db763b2e2e218025c9bf3894db52d7ba51dfc882" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if given module is a task.</source>
          <target state="translated">주어진 모듈이 작업 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="9105393990e5f4b49e81200562038a9b37a0983b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is less than or equal to right.</source>
          <target state="translated">left가 right보다 작거나 같으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="10d817cde0ccac57c3abe0e906618887d09b990f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is less than right.</source>
          <target state="translated">left가 오른쪽보다 작 으면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="4e3751787d81fb8270fa300c2ad1abeed3087881" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is more than or equal to right.</source>
          <target state="translated">left가 right 이상인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="6d3a72a03b6c80be9f6c0fd73128ebce147e5ab7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if left is more than right.</source>
          <target state="translated">left가 오른쪽보다 크면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="0ae8d1d3d77e5618d9d9149276c9cd506b6a50c2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, &lt;code&gt;false&lt;/code&gt; if not, and the atom &lt;code&gt;:ignored&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 , 로컬 노드가 활성 상태가 아니면 atom &lt;code&gt;:ignored&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="5569a7432c35dfe52f433263028783085945fdba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;integer&lt;/code&gt; is an even number, otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 주어진 경우 &lt;code&gt;integer&lt;/code&gt; 그렇지 않으면 반환, 짝수 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96e3993e05bf18f75065b0a674e4abf8709186ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;integer&lt;/code&gt; is an odd number, otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 주어진 경우 &lt;code&gt;integer&lt;/code&gt; 홀수 그렇지 않으면 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73e3c10f82f542446d2c7d01a47b7b0bfb6361e2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;term&lt;/code&gt; is a regex. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;term&lt;/code&gt; 가 정규 표현식 &lt;code&gt;true&lt;/code&gt; 반환 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a75c9e8f261e40e0328fdfc1d1e450ebf79d0480" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;term&lt;/code&gt; is an exception.</source>
          <target state="translated">주어진 &lt;code&gt;term&lt;/code&gt; 가 예외 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="5cd92930de87a97665516f3e7c0ed77c0241d737" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given name and arity is a special form.</source>
          <target state="translated">지정된 이름과 속성이 특수한 형식 &lt;code&gt;true&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="dbbcb4829fb9912c3525baacd41622ceec30d952" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given name and arity is an operator.</source>
          <target state="translated">지정된 이름과 속성이 연산자 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="52116aac5e28100d570d3cb42c4444a615786a50" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given path exists.</source>
          <target state="translated">주어진 경로가 존재하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="c5fc3ddeee6d05ca5c0842207c7f56323a1a6f14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given path is a directory.</source>
          <target state="translated">주어진 경로가 디렉토리 &lt;code&gt;true&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="517323943306de393ed5a17a3debaae9a9fed99c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given quoted expression is an AST literal.</source>
          <target state="translated">주어진 인용 표현식이 AST 리터럴 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d6e0001b2628e13496971665ebef6ff9dd613c7c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given quoted expression represents a quoted literal.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if the given quoted expression represents a quoted literal.</target>
        </trans-unit>
        <trans-unit id="070beb97acda30870921a2b5172f899e978ee793" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given year is a leap year.</source>
          <target state="translated">주어진 연도가 윤년 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d291a7b2377eea8162c3c36aa1cd1e9a3a7a6551" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the local node is alive.</source>
          <target state="translated">로컬 노드가 활성화되어 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="156b20d9c8ac68b8747fdeb1da0914a3b632fddb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the path is a regular file.</source>
          <target state="translated">경로가 일반 파일 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="1d9b07689695541ab22ddfbd90213a8b9d2d0606" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the protocol was consolidated.</source>
          <target state="translated">프로토콜이 통합 된 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="881d186c21e4675ad58d6e30bbadb52783870ebd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are equal.</source>
          <target state="translated">두 항이 같으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2e22125544cf945bb28eba5fc390b3a027251780" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are exactly equal.</source>
          <target state="translated">두 항이 정확히 같은 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6f32dc56bc22b6598e27fc9e37220143e0f323c6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are not equal.</source>
          <target state="translated">두 항이 같지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="065ff8f9bd783f62860f90b7044cda8eab69fb25" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are not exactly equal.</source>
          <target state="translated">두 항이 정확히 같지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="a83460add6e7dd59fd53822fb82653e66c9d24b1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are not exactly equal. See &lt;a href=&quot;#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt; for a definition of what is considered &quot;exactly equal&quot;.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; if the two terms are not exactly equal. See &lt;a href=&quot;#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; for a definition of what is considered &quot;exactly equal&quot;.</target>
        </trans-unit>
        <trans-unit id="229c2393cba0014721bc6cce3f70d909956c53cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the year in the given &lt;code&gt;date&lt;/code&gt; is a leap year.</source>
          <target state="translated">주어진 &lt;code&gt;date&lt;/code&gt; 의 연도 가 윤년 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="13a00c2b01cafb21f20aede0315828bc757af694" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is such a spec and it was copied as a callback. If the function associated to the spec has documentation defined prior to invoking this function, the docs are copied too.</source>
          <target state="translated">이러한 스펙이 있고 콜백으로 복사 된 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 사양과 관련된 기능에이 기능을 호출하기 전에 문서가 정의되어 있으면 문서도 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="baa3ca70dba967b0e62e4a45ae94ce224c5b50d1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if two calendars have the same moment of starting a new day, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 이 달력의 경우는, 새로운 하루를 시작 같은 순간이 &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="efe1be0b98d40df3569dc29aeea771c28ce30865" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="47f2f68842134b4ffc89dac515dace73b452b30e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, :nofile}&lt;/code&gt; if the object code (i.e. &quot;.beam&quot; file) for the module could not be found locally.</source>
          <target state="translated">반환 &lt;code&gt;{:error, :nofile}&lt;/code&gt; 모듈에 대한 목적 코드 (예 : &quot;.beam&quot;파일)을 로컬로 발견되지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="b3f710f35d60c6b707ea291cad4605f95090d8c8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, binary}&lt;/code&gt;, where &lt;code&gt;binary&lt;/code&gt; is a binary data object that contains the contents of &lt;code&gt;path&lt;/code&gt;, or &lt;code&gt;{:error, reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;{:ok, binary}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;binary&lt;/code&gt; 는 &lt;code&gt;path&lt;/code&gt; 의 컨텐츠를 포함하는 2 진 데이터 오브젝트 이거나 오류가 발생하면 &lt;code&gt;{:error, reason}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="25e0d60989d049e604d74bc930f296684099ec4b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, bytes_copied}&lt;/code&gt; if successful, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 &lt;code&gt;{:ok, bytes_copied}&lt;/code&gt; 성공했을 경우, &lt;code&gt;{:error, reason}&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="d3f3b14d34e951b96b9a67a82034916e33ca9318" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, date}&lt;/code&gt; if the calendars are compatible, or &lt;code&gt;{:error, :incompatible_calendars}&lt;/code&gt; if they are not.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, date}&lt;/code&gt; 캘린더가 호환되는 경우, 또는 &lt;code&gt;{:error, :incompatible_calendars}&lt;/code&gt; 그렇지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="c6057594582ceb37532b2d7e625f688602918826" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, element}&lt;/code&gt; if found, otherwise &lt;code&gt;:error&lt;/code&gt;.</source>
          <target state="translated">발견되면 &lt;code&gt;{:ok, element}&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;:error&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="8465f6ff407bdb0c564ac803b1f00a18b0d13256" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, files_and_directories}&lt;/code&gt; with all files and directories removed in no specific order, &lt;code&gt;{:error, reason, file}&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, files_and_directories}&lt;/code&gt; 어떤 특정 순서로 제거 된 모든 파일과 디렉토리와, &lt;code&gt;{:error, reason, file}&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="19f842e2bafa50ff26925ccf6b987eee1f2ba2de" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, files}&lt;/code&gt; in case of success, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, files}&lt;/code&gt; 성공의 경우, &lt;code&gt;{:error, reason}&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="8fc3733718dbca9b65f2fc1faa8f991cc16a2e70" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, function_result}&lt;/code&gt; in case of success, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, function_result}&lt;/code&gt; 성공의 경우, &lt;code&gt;{:error, reason}&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="98db4c3fa0a1a28efa6e85fa145c623de0fb6e8e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, quoted_form}&lt;/code&gt; if it succeeds, &lt;code&gt;{:error, {line, error, token}}&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, quoted_form}&lt;/code&gt; 가 성공하면, &lt;code&gt;{:error, {line, error, token}}&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="4c62985686c63d161efb90844fcc11aa585deb21" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, reply}&lt;/code&gt; if the reply is received while shutting down the task, &lt;code&gt;{:exit, reason}&lt;/code&gt; if the task died, otherwise &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, reply}&lt;/code&gt; 작업을 종료하는 동안 응답이 수신되면, &lt;code&gt;{:exit, reason}&lt;/code&gt; 작업이 사망 한 경우는 true, 그렇지 않은 경우는 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7721fcaadf1867ccdb0ee8fabd46fbe4697b0e3b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, reply}&lt;/code&gt; if the reply is received, &lt;code&gt;nil&lt;/code&gt; if no reply has arrived, or &lt;code&gt;{:exit, reason}&lt;/code&gt; if the task has already exited. Keep in mind that normally a task failure also causes the process owning the task to exit. Therefore this function can return &lt;code&gt;{:exit, reason}&lt;/code&gt; only if</source>
          <target state="translated">응답이 수신되면 &lt;code&gt;{:ok, reply}&lt;/code&gt; 를, 응답이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 , 태스크가 이미 종료 된 경우 &lt;code&gt;{:exit, reason}&lt;/code&gt; 리턴 합니다. 일반적으로 작업이 실패하면 작업을 소유 한 프로세스가 종료됩니다. 따라서이 함수는 &lt;code&gt;{:exit, reason}&lt;/code&gt; 경우에만 {: exit, reason}을 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6896659ffea22eb2764c29cba88f3b1d0028bf30" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, supervisor_pid}&lt;/code&gt; or &lt;code&gt;:error&lt;/code&gt; if not called from the test process.</source>
          <target state="translated">Returns &lt;code&gt;{:ok, supervisor_pid}&lt;/code&gt; or &lt;code&gt;:error&lt;/code&gt; if not called from the test process.</target>
        </trans-unit>
        <trans-unit id="42c38d3829fadb64161c3356c163c581ae817e29" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, time}&lt;/code&gt; if the conversion was successful, or &lt;code&gt;{:error, reason}&lt;/code&gt; if it was not, for some reason.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, time}&lt;/code&gt; 변환이 성공하면, 또는 &lt;code&gt;{:error, reason}&lt;/code&gt; 어떤 이유로, 아니었다면.</target>
        </trans-unit>
        <trans-unit id="154aaa63b2577dee11cda9665444466fcb0b0d8a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, value}&lt;/code&gt; where &lt;code&gt;value&lt;/code&gt; is the value under &lt;code&gt;key&lt;/code&gt; if there is such a key, or &lt;code&gt;:error&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not found.</source>
          <target state="translated">&lt;code&gt;{:ok, value}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;value&lt;/code&gt; 는 &lt;code&gt;key&lt;/code&gt; 경우 키 아래의 값 이거나 &lt;code&gt;key&lt;/code&gt; 를 찾을 수없는 경우 &lt;code&gt;:error&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fa7e955fa1d334a3f092f415c81243abd2e6e73b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{pid, value}&lt;/code&gt; pairs under the given &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt; that match &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{pid, value}&lt;/code&gt; 주어진 아래 쌍 &lt;code&gt;key&lt;/code&gt; 의 &lt;code&gt;registry&lt;/code&gt; 가 일치하는 &lt;code&gt;pattern&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85343a2e2d448cdb8c68e2a769e6043640f27d33" translate="yes" xml:space="preserve">
          <source>Returns Elixir's version as binary.</source>
          <target state="translated">Elixir의 버전을 바이너리로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c8327a48eb3d8b0888d21e8643d31dbfd61ce65e" translate="yes" xml:space="preserve">
          <source>Returns ExUnit configuration.</source>
          <target state="translated">ExUnit 구성을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e45ed402a1aef0911bf0539790a9e21d296ec8d5" translate="yes" xml:space="preserve">
          <source>Returns IEx configuration.</source>
          <target state="translated">IEx 구성을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d8ddd6d989fce705f0bd075a07a2e07b8419b81a" translate="yes" xml:space="preserve">
          <source>Returns Unicode graphemes in the string as per Extended Grapheme Cluster algorithm.</source>
          <target state="translated">Extended Grapheme Cluster 알고리즘에 따라 문자열에서 유니 코드 그래프를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a879d2b042e9ebf3e77966bf7fa720eb5fe03d58" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; for the same point in time, but instead at the time zone provided. It assumes that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is valid and exists in the given time zone and calendar.</source>
          <target state="translated">제공된 시간대와 동일한 시점에서 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 이 유효하고 주어진 시간대와 달력에 존재 한다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="68a4b55af4634a3e875518186464c1a14a8382cb" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; in the match context.</source>
          <target state="translated">일치 컨텍스트에서 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6eec35892f7539fb9be61cf27410a2e47b62417d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;file.stream&quot;&gt;&lt;code&gt;File.Stream&lt;/code&gt;&lt;/a&gt; for the given &lt;code&gt;path&lt;/code&gt; with the given &lt;code&gt;modes&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;modes&lt;/code&gt; 주어진 &lt;code&gt;path&lt;/code&gt; 대한 &lt;a href=&quot;file.stream&quot;&gt; &lt;code&gt;File.Stream&lt;/code&gt; &lt;/a&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="dccffa93c4c5a66e488e798b23abf8252297da2e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stream.html&quot;&gt;&lt;code&gt;File.Stream&lt;/code&gt;&lt;/a&gt; for the given &lt;code&gt;path&lt;/code&gt; with the given &lt;code&gt;modes&lt;/code&gt;.</source>
          <target state="translated">Returns a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stream.html&quot;&gt; &lt;code&gt;File.Stream&lt;/code&gt; &lt;/a&gt; for the given &lt;code&gt;path&lt;/code&gt; with the given &lt;code&gt;modes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8144be8098e36dc7446a14e943dc98ccaeb4c84" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;{new_value, old_value}&lt;/code&gt; tuple or &lt;code&gt;:error&lt;/code&gt; if there is no such key assigned to the current process.</source>
          <target state="translated">리턴 &lt;code&gt;{new_value, old_value}&lt;/code&gt; 튜플 또는 &lt;code&gt;:error&lt;/code&gt; 현재 프로세스에 할당 그러한 키가없는 경우.</target>
        </trans-unit>
        <trans-unit id="ed9d70afa84c2d6c400dd032dc85829ad3b83b52" translate="yes" xml:space="preserve">
          <source>Returns a binary which corresponds to the text representation of &lt;code&gt;integer&lt;/code&gt; in the given &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;base&lt;/code&gt; 에서 &lt;code&gt;integer&lt;/code&gt; 의 텍스트 표현에 해당하는 이진수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3fe6fea6c77a74fd7aefea1b6360d798d95ece81" translate="yes" xml:space="preserve">
          <source>Returns a binary which corresponds to the text representation of &lt;code&gt;integer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;integer&lt;/code&gt; 의 텍스트 표현에 해당하는 2 진을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="fb6a545975b068b3aecc7914d1615a7f44705a51" translate="yes" xml:space="preserve">
          <source>Returns a binary which corresponds to the text representation of the given float.</source>
          <target state="translated">주어진 float의 텍스트 표현에 해당하는 이진수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e9ee2af2fefcd231b751de3abbbb4367e4a017d5" translate="yes" xml:space="preserve">
          <source>Returns a binary with the contents of the given filename, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error occurs.</source>
          <target state="translated">주어진 파일 이름의 내용으로 바이너리를 반환하거나 오류가 발생하면 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9683178b14e89f1c355e93b4487f048f5ca8a5f6" translate="yes" xml:space="preserve">
          <source>Returns a binary with the contents of the given filename, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error occurs.</source>
          <target state="translated">Returns a binary with the contents of the given filename, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; exception if an error occurs.</target>
        </trans-unit>
        <trans-unit id="9f6a14d09fc51779f49cc04321f6fe02c2fb21d7" translate="yes" xml:space="preserve">
          <source>Returns a boolean if the dependency can be fetched or it is meant to be previously available in the file system.</source>
          <target state="translated">Returns a boolean if the dependency can be fetched or it is meant to be previously available in the file system.</target>
        </trans-unit>
        <trans-unit id="120b1743f1c9682c89a8ee1edeecbdcde083f3e9" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether there was a match or not.</source>
          <target state="translated">일치 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b5dce3473d3544c2ba77aa5170f30e27f43d3523" translate="yes" xml:space="preserve">
          <source>Returns a break document based on the given &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;string&lt;/code&gt; 기반으로 나누기 문서를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="148f06e99adcd7ca106331bc4f679ef4533da0a3" translate="yes" xml:space="preserve">
          <source>Returns a charlist which corresponds to the text representation of &lt;code&gt;integer&lt;/code&gt; in the given &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;base&lt;/code&gt; 에서 &lt;code&gt;integer&lt;/code&gt; 의 텍스트 표현에 해당하는 charlist를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1503e8fafb0830e350373d283f11c7581b3c38f8" translate="yes" xml:space="preserve">
          <source>Returns a charlist which corresponds to the text representation of the given &lt;code&gt;integer&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;integer&lt;/code&gt; 의 텍스트 표현에 해당하는 charlist를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="43b18b9794e48a6db989f7ec557071f9c475c477" translate="yes" xml:space="preserve">
          <source>Returns a charlist which corresponds to the text representation of the given float.</source>
          <target state="translated">주어진 float의 텍스트 표현에 해당하는 charlist를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a66b98e04f0ea2a62e2fb6e6de98289cd67c3736" translate="yes" xml:space="preserve">
          <source>Returns a document entity used to represent nothingness.</source>
          <target state="translated">아무것도 나타내지 않는 데 사용되는 문서 엔터티를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a1bfd05f736e844750b386b1c01e973ef52bc4ca" translate="yes" xml:space="preserve">
          <source>Returns a flex break document based on the given &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;string&lt;/code&gt; 기반으로 플렉스 브레이크 문서를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="0c47e20aaea8620c53179f6fb170bdceaf383d8a" translate="yes" xml:space="preserve">
          <source>Returns a float value between 0 and 1 representing the bag distance between &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string1&lt;/code&gt; 과 &lt;code&gt;string2&lt;/code&gt; 사이의 백 거리를 나타내는 0과 1 사이의 부동 소수점 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="998bf1dee48191c100b29bb8870dc0bfd94436f0" translate="yes" xml:space="preserve">
          <source>Returns a float value between &lt;code&gt;0.0&lt;/code&gt; (equates to no similarity) and &lt;code&gt;1.0&lt;/code&gt; (is an exact match) representing &lt;a href=&quot;https://en.wikipedia.org/wiki/Jaro-Winkler_distance&quot;&gt;Jaro&lt;/a&gt; distance between &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string1&lt;/code&gt; 과 &lt;code&gt;string2&lt;/code&gt; 사이의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Jaro-Winkler_distance&quot;&gt;Jaro&lt;/a&gt; 거리를 나타내는 &lt;code&gt;0.0&lt;/code&gt; (유사하지 않음)과 &lt;code&gt;1.0&lt;/code&gt; (정확한 일치) 사이의 float 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e9f8bf09a9f34d4aa9970244bb6b08137539aa70" translate="yes" xml:space="preserve">
          <source>Returns a float whose text representation is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;string&lt;/code&gt; 인 float를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="31dfe0ef9ec0fedde587f2c8b1e43ddb330410d1" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses all elements of a list that match the provided predicate.</source>
          <target state="translated">제공된 술어와 일치하는 목록의 모든 요소에 액세스하는 함수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b2e7a33fe2eca022933ae3188c0bec0da1284381" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses all the elements in a list.</source>
          <target state="translated">목록의 모든 요소에 액세스하는 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cfd1c05d413a490f8c760724f59340db6b61354f" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses the element at &lt;code&gt;index&lt;/code&gt; (zero based) of a list.</source>
          <target state="translated">목록의 &lt;code&gt;index&lt;/code&gt; (0부터 시작)로 요소에 액세스하는 함수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ea1bb2d03634b86a0bbf62fe40a739bf0c9036dd" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses the element at the given index in a tuple.</source>
          <target state="translated">주어진 인덱스의 요소를 튜플에 액세스하는 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1b5bb78552cf299e3751c2c8eda6479ac9f7282f" translate="yes" xml:space="preserve">
          <source>Returns a function that accesses the given key in a map/struct.</source>
          <target state="translated">map / struct에서 주어진 키에 액세스하는 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="55f8b9bb8e42ffaf566f7f747a4ca7567d68281b" translate="yes" xml:space="preserve">
          <source>Returns a function that slices the data structure contiguously.</source>
          <target state="translated">데이터 구조를 연속적으로 슬라이스하는 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2f00d7a399dbc354afa8c2290b54636c57247f20" translate="yes" xml:space="preserve">
          <source>Returns a group containing the specified document &lt;code&gt;doc&lt;/code&gt;.</source>
          <target state="translated">지정된 문서 &lt;code&gt;doc&lt;/code&gt; 를 포함한 그룹을 돌려 줍니다.</target>
        </trans-unit>
        <trans-unit id="8c5398d8391a0259d1ccb3c8a1e4048bcef9effb" translate="yes" xml:space="preserve">
          <source>Returns a keyword list containing the file and line information as keys.</source>
          <target state="translated">파일 및 행 정보를 키로 포함하는 키워드 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="648bd9570648164795082b3f1c9c78a01e804e98" translate="yes" xml:space="preserve">
          <source>Returns a keyword list of &lt;code&gt;{record_name, fields}&lt;/code&gt; tuples where &lt;code&gt;record_name&lt;/code&gt; is the name of an extracted record and &lt;code&gt;fields&lt;/code&gt; is a list of &lt;code&gt;{field, value}&lt;/code&gt; tuples representing the fields for that record.</source>
          <target state="translated">&lt;code&gt;{record_name, fields}&lt;/code&gt; 튜플 의 키워드 목록을 리턴합니다. 여기서 &lt;code&gt;record_name&lt;/code&gt; 은 추출 된 레코드의 이름이고 &lt;code&gt;fields&lt;/code&gt; 는 해당 레코드의 필드를 나타내는 &lt;code&gt;{field, value}&lt;/code&gt; 튜플 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="8337c1a71b4665b5929e7d32d232482d86ee48e9" translate="yes" xml:space="preserve">
          <source>Returns a keyword list that represents an &lt;em&gt;edit script&lt;/em&gt; with nested diffs.</source>
          <target state="translated">중첩 된 diff가 있는 &lt;em&gt;편집 스크립트&lt;/em&gt; 를 나타내는 키워드 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8a26e224d0b8b71dece8f5e916d84049523f0979" translate="yes" xml:space="preserve">
          <source>Returns a keyword list that represents an &lt;em&gt;edit script&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;편집 스크립트&lt;/em&gt; 를 나타내는 키워드 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cb34012caf25d7194cf4d1bc9c046b1e42666795" translate="yes" xml:space="preserve">
          <source>Returns a keyword list that represents an edit script.</source>
          <target state="translated">편집 스크립트를 나타내는 키워드 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eedf848148ad7204be333289f9f16e13b3fc0697" translate="yes" xml:space="preserve">
          <source>Returns a keyword list with information about a function.</source>
          <target state="translated">함수에 대한 정보가 포함 된 키워드 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a294c106358f5929d6a933ceb72092fc4e91db19" translate="yes" xml:space="preserve">
          <source>Returns a list of PIDs corresponding to all the processes currently existing on the local node.</source>
          <target state="translated">로컬 노드에 현재 존재하는 모든 프로세스에 해당하는 PID 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d8906cc4706b054f3a0871dd9d0310a0ffd4a655" translate="yes" xml:space="preserve">
          <source>Returns a list of all ports in the current node.</source>
          <target state="translated">현재 노드의 모든 포트 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="442155f6918bffcbda71b7032acfad2eca666df5" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes in the system, excluding the local node.</source>
          <target state="translated">로컬 노드를 제외하고 시스템에서 보이는 모든 노드 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f8eb0a24f0941de92ece10ea21ea0c9bd87f18fc" translate="yes" xml:space="preserve">
          <source>Returns a list of binaries each of which contains only one kind of characters.</source>
          <target state="translated">각각 하나의 문자 만 포함하는 이진 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3fb52e7396fe9cc95ccc08f46f8b8423b0ca55f" translate="yes" xml:space="preserve">
          <source>Returns a list of code points encoded as strings.</source>
          <target state="translated">Returns a list of code points encoded as strings.</target>
        </trans-unit>
        <trans-unit id="41dabd7ef6701ee8f9c03c392f544c0830be2893" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in &lt;code&gt;enumerable&lt;/code&gt; excluding those for which the function &lt;code&gt;fun&lt;/code&gt; returns a truthy value.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; 함수가 값을 반환하는 요소를 제외하고 &lt;code&gt;enumerable&lt;/code&gt; 요소 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08000c5f7be9ad33a6570c782818808e7f042883" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in &lt;code&gt;enumerable&lt;/code&gt; in reverse order.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 요소 목록을 역순 으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c4d08a398f8c15dbdfe83b1a89d1c9a457b9a84f" translate="yes" xml:space="preserve">
          <source>Returns a list of every &lt;code&gt;nth&lt;/code&gt; element in the &lt;code&gt;enumerable&lt;/code&gt; dropped, starting with the first element.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 드롭 의 모든 &lt;code&gt;nth&lt;/code&gt; 요소 의 목록을 첫 번째 요소부터 시작하여 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4b51f0df81b5ca5b56cb57f91725427bb75c7424" translate="yes" xml:space="preserve">
          <source>Returns a list of every &lt;code&gt;nth&lt;/code&gt; element in the &lt;code&gt;enumerable&lt;/code&gt;, starting with the first element.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 의 모든 &lt;code&gt;nth&lt;/code&gt; 요소 의 목록을 첫 번째 요소부터 시작하여 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b454366f7b3d78cbfc941bae8df22ee9fbb4a118" translate="yes" xml:space="preserve">
          <source>Returns a list of information of all the function calls in the project.</source>
          <target state="translated">프로젝트에서 모든 함수 호출의 정보 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5bff518683c6906e55dfac98df0d59c753368978" translate="yes" xml:space="preserve">
          <source>Returns a list of information of all the runtime function calls in the project.</source>
          <target state="translated">Returns a list of information of all the runtime function calls in the project.</target>
        </trans-unit>
        <trans-unit id="543f883da41aab298162970e26e0991542c23a78" translate="yes" xml:space="preserve">
          <source>Returns a list of lists.</source>
          <target state="translated">리스트의리스트를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="c263c9ad704887b94b7128901687e89cfa0d788f" translate="yes" xml:space="preserve">
          <source>Returns a list of names in the regex.</source>
          <target state="translated">정규식의 이름 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e24c8386f4a72d5dc84fefa837a24b53df43bca" translate="yes" xml:space="preserve">
          <source>Returns a list of names which have been registered using &lt;a href=&quot;#register/2&quot;&gt;&lt;code&gt;register/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#register/2&quot;&gt; &lt;code&gt;register/2&lt;/code&gt; 를&lt;/a&gt; 사용하여 등록 된 이름 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e8470e68b35ac3b3b896cdb54a7773a9a2458a74" translate="yes" xml:space="preserve">
          <source>Returns a list of nodes according to argument given.</source>
          <target state="translated">주어진 인수에 따라 노드 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3ec5a571b567053b25abfcf409e5640616ed510" translate="yes" xml:space="preserve">
          <source>Returns a list of project configuration files for this project.</source>
          <target state="translated">이 프로젝트의 프로젝트 구성 파일 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="62f88ef397b63230e48736e2ce2545ec58ddb020" translate="yes" xml:space="preserve">
          <source>Returns a list of results of invoking &lt;code&gt;fun&lt;/code&gt; on every &lt;code&gt;nth&lt;/code&gt; element of &lt;code&gt;enumerable&lt;/code&gt;, starting with the first element.</source>
          <target state="translated">첫 번째 요소부터 시작하여 &lt;code&gt;enumerable&lt;/code&gt; 의 &lt;code&gt;nth&lt;/code&gt; 요소 마다 &lt;code&gt;fun&lt;/code&gt; 을 호출 한 결과 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4c0da4ac57cdd143f28807e9843083a477fb478d" translate="yes" xml:space="preserve">
          <source>Returns a list of strings, where the string is expected to be a task optionally followed by its arguments.</source>
          <target state="translated">Returns a list of strings, where the string is expected to be a task optionally followed by its arguments.</target>
        </trans-unit>
        <trans-unit id="7292bae2c0f63dc656dbd249aaa4731f9723fd61" translate="yes" xml:space="preserve">
          <source>Returns a list of these parts.</source>
          <target state="translated">Returns a list of these parts.</target>
        </trans-unit>
        <trans-unit id="fccd605cb6dc280f4d9624edc25a5e8af076d5e8" translate="yes" xml:space="preserve">
          <source>Returns a list of these parts. The pattern can be a string, a list of strings, a regular expression, or a compiled pattern.</source>
          <target state="translated">이 부분의리스트를 돌려줍니다. 패턴은 문자열, 문자열 목록, 정규식 또는 컴파일 된 패턴 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8244ce7e7962dc18e63cc6bb50b0981feb2b847c" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples where the first element is the module name and the second one is its bytecode (as a binary). A &lt;code&gt;file&lt;/code&gt; can be given as second argument which will be used for reporting warnings and errors.</source>
          <target state="translated">첫 번째 요소는 모듈 이름이고 두 번째 요소는 바이트 코드 (바이너리) 인 튜플 목록을 반환합니다. &lt;code&gt;file&lt;/code&gt; 경고 및 오류를보고하는 데 사용됩니다 두 번째 인수로 부여 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8030ddd5e1a6c45acf4116b3a1cb2af7216011a1" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples where the first element is the module name and the second one is its bytecode (as a binary). Opposite to &lt;a href=&quot;#require_file/2&quot;&gt;&lt;code&gt;require_file/2&lt;/code&gt;&lt;/a&gt;, it does not track the filename of the compiled file.</source>
          <target state="translated">첫 번째 요소는 모듈 이름이고 두 번째 요소는 바이트 코드 (바이너리) 인 튜플 목록을 반환합니다. &lt;a href=&quot;#require_file/2&quot;&gt; &lt;code&gt;require_file/2&lt;/code&gt; 와는&lt;/a&gt; 반대로 컴파일 된 파일의 파일 이름을 추적하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b04fc71c3bba89d65fc90b112e21df50106a3bc" translate="yes" xml:space="preserve">
          <source>Returns a list of variables in the current environment.</source>
          <target state="translated">현재 환경의 변수 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a435441f15be08b7ff15b579018abecdc00bc602" translate="yes" xml:space="preserve">
          <source>Returns a list where each element is the result of invoking &lt;code&gt;fun&lt;/code&gt; on each corresponding element of &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">각 요소가 &lt;code&gt;enumerable&lt;/code&gt; 의 각 해당 요소에서 &lt;code&gt;fun&lt;/code&gt; 을 호출 한 결과 인 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ec27903f5ae78dc874c9df5818a4b29f8aa65266" translate="yes" xml:space="preserve">
          <source>Returns a list with &lt;code&gt;value&lt;/code&gt; inserted at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;index&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; 삽입 된 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7f2ea00fcc82bbc6b6dcd711a2adc16be411dabf" translate="yes" xml:space="preserve">
          <source>Returns a list with a replaced value at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;index&lt;/code&gt; 에서 값이 교체 된 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="738903c88ae1a99226fdc1ef400364560e39c48b" translate="yes" xml:space="preserve">
          <source>Returns a list with all available compiler options.</source>
          <target state="translated">Returns a list with all available compiler options.</target>
        </trans-unit>
        <trans-unit id="194e44d56acccbecc0953b596c47bacb2836f1fa" translate="yes" xml:space="preserve">
          <source>Returns a list with an updated value at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;index&lt;/code&gt; 에서 업데이트 된 값을 가진 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cac6cb2d5b65cec2cebc7f98c8e676a52e8a12e5" translate="yes" xml:space="preserve">
          <source>Returns a list with information about all children of the given supervisor.</source>
          <target state="translated">지정된 감독자의 모든 자식에 대한 정보가있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8be9be340deaec39cff95b3d58502fb1f32311d0" translate="yes" xml:space="preserve">
          <source>Returns a list with information about all children.</source>
          <target state="translated">모든 자식에 대한 정보가있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae5b3e7b9544d246ab2ddf253fc4625df3b3fad2" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications which are currently running.</source>
          <target state="translated">현재 실행중인 응용 프로그램에 대한 정보가있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9556f6608ac48363049e28e2254897ca4d3d6bbe" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications which have been loaded.</source>
          <target state="translated">로드 된 애플리케이션에 대한 정보가있는 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9dc40e627344f95c93e4ec9b038b5d04b7dabe06" translate="yes" xml:space="preserve">
          <source>Returns a list with the available compiler options.</source>
          <target state="translated">사용 가능한 컴파일러 옵션이있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="caa61a915d0b0a3954d25228367b76a55e8c46b5" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements of &lt;code&gt;enumerable&lt;/code&gt; shuffled.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 섞기 요소가있는 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="75e31c70d49c501aa570c31218e633b38b9cac15" translate="yes" xml:space="preserve">
          <source>Returns a map containing count values for the given supervisor.</source>
          <target state="translated">지정된 수퍼바이저의 카운트 값이 포함 된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6aa62c1653283a212e8297ca294f4114c48e5453" translate="yes" xml:space="preserve">
          <source>Returns a map containing count values for the supervisor.</source>
          <target state="translated">수퍼바이저의 카운트 값이 포함 된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f64f0a2526f951c2cc84f1d137432fe69495d9aa" translate="yes" xml:space="preserve">
          <source>Returns a map containing the total number of tests, the number of failures, the number of excluded tests and the number of skipped tests.</source>
          <target state="translated">총 테스트 수, 실패 수, 제외 된 테스트 수 및 건너 뛴 테스트 수를 포함하는 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="22eec31a1a969336ec50d1b3efedbdd13a3e921b" translate="yes" xml:space="preserve">
          <source>Returns a map with keys as unique elements given by &lt;code&gt;key_fun&lt;/code&gt; and values as the count of every element.</source>
          <target state="translated">Returns a map with keys as unique elements given by &lt;code&gt;key_fun&lt;/code&gt; and values as the count of every element.</target>
        </trans-unit>
        <trans-unit id="2faef9abf0859c818da0d6ce12d9c161d543a35d" translate="yes" xml:space="preserve">
          <source>Returns a map with keys as unique elements of &lt;code&gt;enumerable&lt;/code&gt; and values as the count of every element.</source>
          <target state="translated">Returns a map with keys as unique elements of &lt;code&gt;enumerable&lt;/code&gt; and values as the count of every element.</target>
        </trans-unit>
        <trans-unit id="e48947a95d8a72816f9cddcba983270eb4a365c9" translate="yes" xml:space="preserve">
          <source>Returns a map with the Elixir version, the Erlang/OTP release it was compiled with, a short Git revision hash and the date and time it was built.</source>
          <target state="translated">Elixir 버전, Erlang / OTP 릴리스, 짧은 Git 개정 해시 및 빌드 날짜 및 시간이 포함 된 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4cbfdcfd806b8b2dd63bdb3d7952ca6be2cb7883" translate="yes" xml:space="preserve">
          <source>Returns a map with the umbrella child applications paths.</source>
          <target state="translated">우산 자식 응용 프로그램 경로가있는지도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="577b259579425fb15446d410225cd83d09c11ab4" translate="yes" xml:space="preserve">
          <source>Returns a microsecond tuple truncated to a given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">주어진 정밀도 ( &lt;code&gt;:microsecond&lt;/code&gt; , &lt;code&gt;:millisecond&lt;/code&gt; 또는 &lt;code&gt;:second&lt;/code&gt; )로 잘린 마이크로 초 튜플을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="456254db671e7211f8cf975ebc7a01fd2d4e0998" translate="yes" xml:space="preserve">
          <source>Returns a new empty map.</source>
          <target state="translated">새로운 빈 맵을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="1de9e80d913162895ee668db73d628ac36f3f1be" translate="yes" xml:space="preserve">
          <source>Returns a new list with all the tuple elements.</source>
          <target state="translated">모든 튜플 요소가 포함 된 새 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f1eabd6cd97a0e9ba88d32a0847a516f885aa149" translate="yes" xml:space="preserve">
          <source>Returns a new map with all the key-value pairs in &lt;code&gt;map&lt;/code&gt; where the key is in &lt;code&gt;keys&lt;/code&gt;.</source>
          <target state="translated">키가 &lt;code&gt;keys&lt;/code&gt; 에 있는 &lt;code&gt;map&lt;/code&gt; 모든 키-값 쌍이 포함 된 새 맵을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="af29913ee55ab14a28ffeef5c6463f0e6a27de67" translate="yes" xml:space="preserve">
          <source>Returns a new set which is a copy of &lt;code&gt;map_set&lt;/code&gt; but without &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_set&lt;/code&gt; 의 사본 이지만 &lt;code&gt;value&lt;/code&gt; 없는 새 세트를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d89b807379e6e83302850820787d6e2455a9be49" translate="yes" xml:space="preserve">
          <source>Returns a new set.</source>
          <target state="translated">새로운 세트를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="593aa885fd57e21ecae557eeb33661b2357bb26c" translate="yes" xml:space="preserve">
          <source>Returns a new string created by replacing occurrences of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;subject&lt;/code&gt; with &lt;code&gt;replacement&lt;/code&gt;.</source>
          <target state="translated">의 발생 대체하여 만든 새 문자열 반환 &lt;code&gt;pattern&lt;/code&gt; 에 &lt;code&gt;subject&lt;/code&gt; 와 &lt;code&gt;replacement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5083144141615836b53ba33e2622989da2341885" translate="yes" xml:space="preserve">
          <source>Returns a new string padded with a leading filler which is made of elements from the &lt;code&gt;padding&lt;/code&gt;.</source>
          <target state="translated">반환 새로운 문자열에서 요소로 선도적 인 필러 패딩 &lt;code&gt;padding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5f12166c88991612389eebd8f5e894dc39963de" translate="yes" xml:space="preserve">
          <source>Returns a new string padded with a trailing filler which is made of elements from the &lt;code&gt;padding&lt;/code&gt;.</source>
          <target state="translated">반환 새로운 문자열의 요소로 제조 된 뒤 필러로 채워 &lt;code&gt;padding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b79ec9067cac0c611785cc80d52ec1f184545e0" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with the element appended at the end, and contains the elements in &lt;code&gt;tuple&lt;/code&gt; followed by &lt;code&gt;value&lt;/code&gt; as the last element.</source>
          <target state="translated">마지막에 첨부 한 요소 새로운 튜플을 반환하고있는 요소가 포함 &lt;code&gt;tuple&lt;/code&gt; 다음 &lt;code&gt;value&lt;/code&gt; 마지막 요소로서.</target>
        </trans-unit>
        <trans-unit id="1fd950ec684b5f58c716702cc6515ef2732cc35c" translate="yes" xml:space="preserve">
          <source>Returns a pair of integers whose ratio is exactly equal to the original float and with a positive denominator.</source>
          <target state="translated">비율이 원래 부동 소수점과 정확히 같고 양의 분모를 갖는 정수 쌍을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ebb93599cfaa3e0a101538db0f72f4e659111549" translate="yes" xml:space="preserve">
          <source>Returns a quoted expression containing the fields as a list of tuples.</source>
          <target state="translated">필드를 튜플 목록으로 포함하는 인용 된 표현식을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0258ae812e9738eccffc25af4f511a4696661e12" translate="yes" xml:space="preserve">
          <source>Returns a random element of an &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 임의의 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="68311a4d355d1a1367604d1a97e1ec72781c2627" translate="yes" xml:space="preserve">
          <source>Returns a range of dates.</source>
          <target state="translated">날짜 범위를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb20084f202d63d2e087bd5b253825ad1541cba1" translate="yes" xml:space="preserve">
          <source>Returns a range with the specified &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; integers.</source>
          <target state="translated">지정된 &lt;code&gt;first&lt;/code&gt; 정수 와 &lt;code&gt;last&lt;/code&gt; 정수를 가진 범위를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0cfb3ee91f1e7803aeeae50c9afdbd58c4a0494f" translate="yes" xml:space="preserve">
          <source>Returns a set containing all members of &lt;code&gt;map_set1&lt;/code&gt; and &lt;code&gt;map_set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_set1&lt;/code&gt; 및 &lt;code&gt;map_set2&lt;/code&gt; 의 모든 멤버를 포함하는 세트를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c7e140698da2797ab90228cb1fe2e4daf4bf7bd0" translate="yes" xml:space="preserve">
          <source>Returns a set containing only members that &lt;code&gt;map_set1&lt;/code&gt; and &lt;code&gt;map_set2&lt;/code&gt; have in common.</source>
          <target state="translated">&lt;code&gt;map_set1&lt;/code&gt; 과 &lt;code&gt;map_set2&lt;/code&gt; 에 공통 인 멤버 만 포함 된 세트를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="77d801b91285762b7c58364cfd1b23fdf545bf37" translate="yes" xml:space="preserve">
          <source>Returns a set that is &lt;code&gt;map_set1&lt;/code&gt; without the members of &lt;code&gt;map_set2&lt;/code&gt;.</source>
          <target state="translated">인 세트를 돌려줍니다 &lt;code&gt;map_set1&lt;/code&gt; 의 멤버없이 &lt;code&gt;map_set2&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="fd8e89ddc96087c4845355b2bc3ed2ac6bca08b8" translate="yes" xml:space="preserve">
          <source>Returns a specific information about the function.</source>
          <target state="translated">함수에 대한 특정 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ade53d26fd49c96742f8c2f9ec1c19ff5f585daa" translate="yes" xml:space="preserve">
          <source>Returns a specification to start a dynamic supervisor under a supervisor.</source>
          <target state="translated">수퍼바이저에서 동적 수퍼바이저를 시작하기위한 스펙을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="688104702b513d9e2a5c6b446efa4fff4350efd8" translate="yes" xml:space="preserve">
          <source>Returns a specification to start a registry under a supervisor.</source>
          <target state="translated">감독자 아래에서 레지스트리를 시작하기위한 사양을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="39726169845a0007a11ac1c1802741f412dc9a02" translate="yes" xml:space="preserve">
          <source>Returns a specification to start a task under a supervisor.</source>
          <target state="translated">감독자에서 작업을 시작하기위한 사양을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a971d06295628f307553b8532333fe53b2d6db9e" translate="yes" xml:space="preserve">
          <source>Returns a specification to start an agent under a supervisor.</source>
          <target state="translated">수퍼바이저에서 에이전트를 시작하기위한 스펙을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3b59fc82f7ced9ba4e9462febb3a349db49c4788" translate="yes" xml:space="preserve">
          <source>Returns a specification to start this module under a supervisor.</source>
          <target state="translated">감독자 아래에서이 모듈을 시작하기위한 사양을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="37a637ecd014943420fb395fff88ce0640ba2b2f" translate="yes" xml:space="preserve">
          <source>Returns a stream generated by calling &lt;code&gt;generator_fun&lt;/code&gt; repeatedly.</source>
          <target state="translated">&lt;code&gt;generator_fun&lt;/code&gt; 을 반복해서 호출 하여 생성 된 스트림을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2ce10d4439c9ded520a2ceb914ab4aa7920dd279" translate="yes" xml:space="preserve">
          <source>Returns a stream of two-element tuples representing key-value pairs in the given &lt;code&gt;query&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;query&lt;/code&gt; 에서 키-값 쌍을 나타내는 두 요소 튜플의 스트림을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="8c408cbe5adb568e4c29e0c46a4da3160a6a82b7" translate="yes" xml:space="preserve">
          <source>Returns a stream that runs the given &lt;code&gt;function&lt;/code&gt; concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 각 요소에 대해 지정된 &lt;code&gt;function&lt;/code&gt; 동시에 실행하는 스트림을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e496b0f2924747071bd9a07cac7da5f78b00d7c" translate="yes" xml:space="preserve">
          <source>Returns a stream that runs the given function &lt;code&gt;fun&lt;/code&gt; concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 된 각 요소에 대해 주어진 함수 &lt;code&gt;fun&lt;/code&gt; 을 동시에 실행하는 스트림을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a0abd42595135eb6e6bc02e83c1dc3bb49aa88b3" translate="yes" xml:space="preserve">
          <source>Returns a stream where the given function (&lt;code&gt;module&lt;/code&gt; and &lt;code&gt;function&lt;/code&gt;) is mapped concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">지정된 함수 ( &lt;code&gt;module&lt;/code&gt; 및 &lt;code&gt;function&lt;/code&gt; )가 &lt;code&gt;enumerable&lt;/code&gt; 각 요소에 동시에 매핑 되는 스트림을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5678b516f871306c06a41b4392d2b5b139efdac5" translate="yes" xml:space="preserve">
          <source>Returns a stream where the given function (&lt;code&gt;module&lt;/code&gt; and &lt;code&gt;function_name&lt;/code&gt;) is mapped concurrently on each element in &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">지정된 함수 ( &lt;code&gt;module&lt;/code&gt; 및 &lt;code&gt;function_name&lt;/code&gt; )가 &lt;code&gt;enumerable&lt;/code&gt; 각 요소에 동시에 맵핑 되는 스트림을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="180fc15b92792093769a25c20115b5e9872ea17f" translate="yes" xml:space="preserve">
          <source>Returns a string &lt;code&gt;subject&lt;/code&gt; duplicated &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 번 중복 된 문자열 &lt;code&gt;subject&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6be4ae560047bcef41ff0b28a347e27a66f4e0f8" translate="yes" xml:space="preserve">
          <source>Returns a string containing the (usually) numerical identifier for a process. On UNIX, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process ID as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</source>
          <target state="translated">프로세스의 (일반적으로) 숫자 식별자를 포함하는 문자열을 반환합니다. UNIX에서 이는 일반적으로 &lt;code&gt;getpid()&lt;/code&gt; 시스템 호출 의 리턴 값입니다 . Windows에서는 &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; 시스템 호출에 의해 리턴 된 프로세스 ID 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="597beeba0b6f07d8f0210a0a139920960a47dbff" translate="yes" xml:space="preserve">
          <source>Returns a string containing the (usually) numerical identifier for a process. On Unix-like operating systems, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process ID as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</source>
          <target state="translated">Returns a string containing the (usually) numerical identifier for a process. On Unix-like operating systems, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process ID as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</target>
        </trans-unit>
        <trans-unit id="03b67ee202b1416da310923512cd404cf6adecdf" translate="yes" xml:space="preserve">
          <source>Returns a string representing the SCM. This is used when printing the dependency and not for inspection, so the amount of information should be concise and easy to spot.</source>
          <target state="translated">Returns a string representing the SCM. This is used when printing the dependency and not for inspection, so the amount of information should be concise and easy to spot.</target>
        </trans-unit>
        <trans-unit id="e2a419178bbb940b05880a5915a9ca05120adc14" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading &lt;code&gt;to_trim&lt;/code&gt; characters have been removed.</source>
          <target state="translated">모든 선행 &lt;code&gt;to_trim&lt;/code&gt; 문자가 제거 된 문자열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9ce1c2a880865790d64e30f1e06470b38e182bfd" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading Unicode whitespaces have been removed.</source>
          <target state="translated">모든 선행 유니 코드 공백이 제거 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5863b021d35f8bce6c99b63c41facc6909ca977c" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading and trailing &lt;code&gt;to_trim&lt;/code&gt; characters have been removed.</source>
          <target state="translated">모든 선행 및 후행 &lt;code&gt;to_trim&lt;/code&gt; 문자가 제거 된 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f3acd17e8deabf16e78c4e5d3cd435340469c166" translate="yes" xml:space="preserve">
          <source>Returns a string where all leading and trailing Unicode whitespaces have been removed.</source>
          <target state="translated">모든 선행 및 후행 유니 코드 공백이 제거 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="77037d4de2ee207efdb679f3991444eaf4bfb6d8" translate="yes" xml:space="preserve">
          <source>Returns a string where all trailing &lt;code&gt;to_trim&lt;/code&gt; characters have been removed.</source>
          <target state="translated">모든 후행 &lt;code&gt;to_trim&lt;/code&gt; 문자가 제거 된 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b44e9f329fffddee85ee207a2880ca69a73d5432" translate="yes" xml:space="preserve">
          <source>Returns a string where all trailing Unicode whitespaces has been removed.</source>
          <target state="translated">모든 후행 유니 코드 공백이 제거 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="59755cc1b2bcebeacfa9d917bc55e49814c2c282" translate="yes" xml:space="preserve">
          <source>Returns a subset list of the given &lt;code&gt;enumerable&lt;/code&gt; by &lt;code&gt;index_range&lt;/code&gt;.</source>
          <target state="translated">주어진의 부분 집합의리스트를 돌려줍니다 &lt;code&gt;enumerable&lt;/code&gt; 하여 &lt;code&gt;index_range&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="f01588f322f3a6c48ef0b1142d4af450e450f7de" translate="yes" xml:space="preserve">
          <source>Returns a subset list of the given &lt;code&gt;enumerable&lt;/code&gt;, from &lt;code&gt;start_index&lt;/code&gt; (zero-based) with &lt;code&gt;amount&lt;/code&gt; number of elements if available.</source>
          <target state="translated">반환 소정의 서브 세트리스트 &lt;code&gt;enumerable&lt;/code&gt; 에서 &lt;code&gt;start_index&lt;/code&gt; 가진 (기 제로) &lt;code&gt;amount&lt;/code&gt; 을 사용할 경우, 원소의 수.</target>
        </trans-unit>
        <trans-unit id="db1fa0efe5f563fd77fbd770ee5847604d12fb0c" translate="yes" xml:space="preserve">
          <source>Returns a substring from the offset given by the start of the range to the offset given by the end of the range.</source>
          <target state="translated">범위의 시작에 의해 주어진 오프셋에서 범위의 끝에 의해 주어진 오프셋까지 부분 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d5a014df4d2914afff26758db84313e7b53629c2" translate="yes" xml:space="preserve">
          <source>Returns a substring starting at the offset &lt;code&gt;start&lt;/code&gt;, and of length &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">오프셋 &lt;code&gt;start&lt;/code&gt; 에서 시작 하여 길이가 &lt;code&gt;len&lt;/code&gt; 인 하위 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8e1989cb1566225affc5cd997a379ccd74bc5465" translate="yes" xml:space="preserve">
          <source>Returns a substring starting at the offset &lt;code&gt;start&lt;/code&gt;, and of the given &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">Returns a substring starting at the offset &lt;code&gt;start&lt;/code&gt; , and of the given &lt;code&gt;length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec101f14dc34f334988903f882113db6c75107c" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{day, era}&lt;/code&gt; representing the day within the era and the era number.</source>
          <target state="translated">&lt;code&gt;{day, era}&lt;/code&gt; 내 날짜와 연대 번호를 나타내는 튜플 {day, era}를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8e67509fba3335899cfadcaef1653695ee755861" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{year, era}&lt;/code&gt; representing the year within the era and the era number.</source>
          <target state="translated">연대와 연대 수를 나타내는 튜플 &lt;code&gt;{year, era}&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="52156632450d79f9f5ab8c859740936952731cd7" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the supervisor specification. This tuple can be used as the return value of the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt;&lt;code&gt;Supervisor.init/1&lt;/code&gt;&lt;/a&gt; callback when implementing a module-based supervisor.</source>
          <target state="translated">Returns a tuple containing the supervisor specification. This tuple can be used as the return value of the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt; &lt;code&gt;Supervisor.init/1&lt;/code&gt; &lt;/a&gt; callback when implementing a module-based supervisor.</target>
        </trans-unit>
        <trans-unit id="fdd9f6699ef007d5bcfc4921c7b71d74906d67f2" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the supervisor specification. This tuple can be used as the return value of the &lt;code&gt;c:init/1&lt;/code&gt; callback when implementing a module-based supervisor.</source>
          <target state="translated">감독자 사양이 포함 된 튜플을 반환합니다. 이 튜플은 모듈 기반 감독자를 구현할 때 &lt;code&gt;c:init/1&lt;/code&gt; 콜백 의 반환 값으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f0996b39345ea9e7c9060c1426d24e1a14d175c" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the value associated with the key and the updated container. &lt;code&gt;nil&lt;/code&gt; is returned for the value if the key isn't in the container.</source>
          <target state="translated">키 및 업데이트 된 컨테이너와 관련된 값이 포함 된 튜플을 반환합니다. 키가 컨테이너에 없으면 값에 대해 &lt;code&gt;nil&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="99ed48aeaa9cacfc046b3ed84f5a089a3b08b7d5" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing useful information about test failures from the manifest. The tuple contains</source>
          <target state="translated">Returns a tuple containing useful information about test failures from the manifest. The tuple contains</target>
        </trans-unit>
        <trans-unit id="6e81df157fde9e3652e0850af1f8c56a1647a281" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing useful information about test failures from the manifest. The tuple contains:</source>
          <target state="translated">Returns a tuple containing useful information about test failures from the manifest. The tuple contains:</target>
        </trans-unit>
        <trans-unit id="ff054a062909831fae54faf25f69066b049f0472" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the form &lt;code&gt;{value, binding}&lt;/code&gt;, where &lt;code&gt;value&lt;/code&gt; is the value returned from evaluating &lt;code&gt;string&lt;/code&gt;. If an error occurs while evaluating &lt;code&gt;string&lt;/code&gt; an exception will be raised.</source>
          <target state="translated">&lt;code&gt;{value, binding}&lt;/code&gt; 형식의 튜플을 리턴합니다 . 여기서 &lt;code&gt;value&lt;/code&gt; 는 &lt;code&gt;string&lt;/code&gt; 평가에서 리턴 된 값 입니다. &lt;code&gt;string&lt;/code&gt; 을 평가하는 동안 오류가 발생 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9e1d2c960241a00096afd91bf252ac31507af671" translate="yes" xml:space="preserve">
          <source>Returns a tuple where the first element is the mapped enumerable and the second one is the final accumulator.</source>
          <target state="translated">첫 번째 요소는 매핑 가능한 열거 형이고 두 번째 요소는 최종 누산기 인 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9b9e1bdb527e70cc179683a4fe2a7521e95d2a67" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the minimal and the maximal elements in the enumerable according to Erlang's term ordering.</source>
          <target state="translated">Erlang의 용어 순서에 따라 열거 가능한 최소 및 최대 요소를 가진 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9289a49fc0b517d3d38226831426fdffeb900f0b" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the minimal and the maximal elements in the enumerable as calculated by the given function.</source>
          <target state="translated">주어진 함수에 의해 계산 된 열거 가능한 최소 및 최대 요소를 가진 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="78bc10df51b7a09f0be40994df79a6b72b67f2c3" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the new list and the old list with removed keys.</source>
          <target state="translated">새로운리스트가있는 튜플과 키가 제거 된 기존리스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="49a58596d4c32840c588fba7e77c85318bcb2968" translate="yes" xml:space="preserve">
          <source>Returns a tuple with the new map and the old map with removed keys.</source>
          <target state="translated">새 맵이있는 튜플과 키가 제거 된 이전 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed72d4b56f51e8613ab1dfc371169fca9e518330" translate="yes" xml:space="preserve">
          <source>Returns a writable temporary directory. Searches for directories in the following order:</source>
          <target state="translated">쓰기 가능한 임시 디렉토리를 반환합니다. 다음 순서로 디렉토리를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="617a3854618af04f4e538d414b7ed5fabd3b804a" translate="yes" xml:space="preserve">
          <source>Returns all available SCMs. Each SCM is tried in order until a matching one is found.</source>
          <target state="translated">Returns all available SCMs. Each SCM is tried in order until a matching one is found.</target>
        </trans-unit>
        <trans-unit id="23e90f5d3fdcd0278c4a00a44f64af0255b2144a" translate="yes" xml:space="preserve">
          <source>Returns all breakpoints.</source>
          <target state="translated">Returns all breakpoints.</target>
        </trans-unit>
        <trans-unit id="e713a513acbdedf0dda43d90f08d107eb1c0c63b" translate="yes" xml:space="preserve">
          <source>Returns all children PIDs.</source>
          <target state="translated">모든 자식 PID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e6a21f48135285b8b5bb30d5ad65b3b47e26f561" translate="yes" xml:space="preserve">
          <source>Returns all code points in the string.</source>
          <target state="translated">문자열의 모든 코드 포인트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e3cf44631bb390e7d2badb9d7470fae3253dc5ba" translate="yes" xml:space="preserve">
          <source>Returns all compilers.</source>
          <target state="translated">모든 컴파일러를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2eb063f7df2b53298067ccba943c78fcfbd1392a" translate="yes" xml:space="preserve">
          <source>Returns all dependencies app names.</source>
          <target state="translated">Returns all dependencies app names.</target>
        </trans-unit>
        <trans-unit id="14b145390a9ebf308c4b373dc11333b017df30f2" translate="yes" xml:space="preserve">
          <source>Returns all functions and macros defined in &lt;code&gt;module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 에 정의 된 모든 함수와 매크로를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ad3bb32900d7c344e494107abf9c4c7326be59e8" translate="yes" xml:space="preserve">
          <source>Returns all functions defined in &lt;code&gt;module&lt;/code&gt;, according to its kind.</source>
          <target state="translated">종류에 따라 &lt;code&gt;module&lt;/code&gt; 에 정의 된 모든 함수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b5df146a1464140be99d57b6a49844f0f5e9e584" translate="yes" xml:space="preserve">
          <source>Returns all key-value pairs for &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 에 대한 모든 키-값 쌍을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="156e3a5fb38c335ce430ccbdf832347b21177bd7" translate="yes" xml:space="preserve">
          <source>Returns all key-value pairs in the process dictionary.</source>
          <target state="translated">프로세스 사전의 모든 키-값 쌍을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="406cf177f03a1fe2a55cb14779e3af7a09489d14" translate="yes" xml:space="preserve">
          <source>Returns all keys from &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 에서 모든 키를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="556358f0f53235e5674d035cdcc5f6968be35f2c" translate="yes" xml:space="preserve">
          <source>Returns all keys from the keyword list.</source>
          <target state="translated">키워드 목록에서 모든 키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6d7122282aecdbcfa075a5e668d5f2c21f2161d1" translate="yes" xml:space="preserve">
          <source>Returns all keys in the process dictionary that have the given &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;value&lt;/code&gt; 을 가진 프로세스 딕셔너리의 모든 키를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="042b9c023d06dd909ce950f350535dbfb0777cec" translate="yes" xml:space="preserve">
          <source>Returns all keys in the process dictionary.</source>
          <target state="translated">프로세스 사전의 모든 키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e94b9dcfc2e9dac51c4ac8484e5dfd70f3e9b33b" translate="yes" xml:space="preserve">
          <source>Returns all loaded task modules.</source>
          <target state="translated">로드 된 모든 작업 모듈을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="71787f9010554f94575f9522f1c99c44b60cb2e4" translate="yes" xml:space="preserve">
          <source>Returns all system environment variables.</source>
          <target state="translated">모든 시스템 환경 변수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fec7365b9d9fe12959a17507dde24cd128df0d44" translate="yes" xml:space="preserve">
          <source>Returns all values for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list.</source>
          <target state="translated">Returns all values for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list.</target>
        </trans-unit>
        <trans-unit id="e569da60b7ca186199784958ba9d2b81bb1397d9" translate="yes" xml:space="preserve">
          <source>Returns all values from &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 에서 모든 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1e7a0349730cbf3f3bafb2a0c0cb3cc28bea70d5" translate="yes" xml:space="preserve">
          <source>Returns all values from the keyword list.</source>
          <target state="translated">키워드 목록에서 모든 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d96004909e4ad7c64db0522497fe2d3b803021f3" translate="yes" xml:space="preserve">
          <source>Returns an almost unique reference.</source>
          <target state="translated">거의 고유 한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a1ca941f10bbc2a839f82df74e5a66de383248c6" translate="yes" xml:space="preserve">
          <source>Returns an atom representing the name of the local node. If the node is not alive, &lt;code&gt;:nonode@nohost&lt;/code&gt; is returned instead.</source>
          <target state="translated">로컬 노드의 이름을 나타내는 아톰을 반환합니다. 노드가 &lt;code&gt;:nonode@nohost&lt;/code&gt; 가 아닌 경우 : nonode @ nohost 가 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4bca5cf89834f191f0b7d25cb60600751e2192dc" translate="yes" xml:space="preserve">
          <source>Returns an empty keyword list, i.e. an empty list.</source>
          <target state="translated">빈 키워드 목록, 즉 빈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9336405d72004e8204acc026354f638b5932365d" translate="yes" xml:space="preserve">
          <source>Returns an enumerable that splits a string on demand.</source>
          <target state="translated">요청시 문자열을 분할하는 열거 가능 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c23eeb7a803311ef05d76bc46b75ead9502cb701" translate="yes" xml:space="preserve">
          <source>Returns an inclusive range between dates.</source>
          <target state="translated">날짜 사이의 포함 범위를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36ea821a1bd58beb41a35815684e5f6dd46947c7" translate="yes" xml:space="preserve">
          <source>Returns an initial accumulator and a &quot;collector&quot; function.</source>
          <target state="translated">초기 누산기와 &quot;수집기&quot;함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="790893bc81d3d485385a9efd616205fa2997b5ed" translate="yes" xml:space="preserve">
          <source>Returns an integer or float which is the arithmetical absolute value of &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 의 산술 절대 값 인 정수 또는 부동 소수점을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="5ed4feca62654761a5cba1c5468578f70dd1f1a9" translate="yes" xml:space="preserve">
          <source>Returns an integer which is the size in bits of &lt;code&gt;bitstring&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bitstring&lt;/code&gt; 의 비트 크기 인 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ff9f7b86de9e03f6280fece12d53e95bb81fce12" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;charlist&lt;/code&gt; in base &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">base &lt;code&gt;base&lt;/code&gt; 에서 텍스트 표현이 &lt;code&gt;charlist&lt;/code&gt; 인 정수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7844d0ca3375055eb41de872777bcf4aa843366e" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;charlist&lt;/code&gt;.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;charlist&lt;/code&gt; 인 정수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1f2895d4e76b96a85b5b1d6745d2f5eacc89e7d4" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;string&lt;/code&gt; in base &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">base &lt;code&gt;base&lt;/code&gt; 에서 텍스트 표현이 &lt;code&gt;string&lt;/code&gt; 인 정수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a9d71ba16fbf453d9081568d72974d94e2e8747e" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;string&lt;/code&gt; 인 정수를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="7d427036e767479c0ab88861dea125a1bc02a46f" translate="yes" xml:space="preserve">
          <source>Returns and removes the first value associated with &lt;code&gt;key&lt;/code&gt; in the keyword list.</source>
          <target state="translated">키워드 목록에서 &lt;code&gt;key&lt;/code&gt; 와 관련된 첫 번째 값을 반환하고 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="457f810f71fb1432ef32c797ca78c08adc756ed1" translate="yes" xml:space="preserve">
          <source>Returns and removes the value associated with &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt; or raises if &lt;code&gt;key&lt;/code&gt; is not present.</source>
          <target state="translated">Returns and removes the value associated with &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt; or raises if &lt;code&gt;key&lt;/code&gt; is not present.</target>
        </trans-unit>
        <trans-unit id="095f100d342a14917373097117de47a712bc7df4" translate="yes" xml:space="preserve">
          <source>Returns and removes the value associated with &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">반품 및 제거합니다와 관련된 값 &lt;code&gt;key&lt;/code&gt; 의 &lt;code&gt;map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71815281c0754fe990acff24c0fb1c1b90c930ef" translate="yes" xml:space="preserve">
          <source>Returns and removes the value at the specified &lt;code&gt;index&lt;/code&gt; in the &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 지정된 &lt;code&gt;index&lt;/code&gt; 에서 값을 반환하고 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="ab602893bed93a1e176fdba47312a8d6bb5af3b7" translate="yes" xml:space="preserve">
          <source>Returns environment (for example, &lt;code&gt;:test&lt;/code&gt;, or &lt;code&gt;:prod&lt;/code&gt;), or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">환경 (예 &lt;code&gt;:test&lt;/code&gt; 또는 &lt;code&gt;:prod&lt;/code&gt; ) 또는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0fa3cb37f1e4007aa007cdec17116a9bc321c77e" translate="yes" xml:space="preserve">
          <source>Returns false if the file exists and the user forbade to override it. Returns true otherwise.</source>
          <target state="translated">Returns false if the file exists and the user forbade to override it. Returns true otherwise.</target>
        </trans-unit>
        <trans-unit id="231ac834375083e4a7e856080b08131fcdfd068a" translate="yes" xml:space="preserve">
          <source>Returns false if the given name is not an alias or if it is not a task.</source>
          <target state="translated">Returns false if the given name is not an alias or if it is not a task.</target>
        </trans-unit>
        <trans-unit id="4184d0c0b5ec85866ae7f923f0a84ad9c22e3fef" translate="yes" xml:space="preserve">
          <source>Returns formatter options to be used for the given file.</source>
          <target state="translated">Returns formatter options to be used for the given file.</target>
        </trans-unit>
        <trans-unit id="4b69fcc9982e69bd0bf87f18dd2d92acb6b8e942" translate="yes" xml:space="preserve">
          <source>Returns how many days there are in the given year-month.</source>
          <target state="translated">주어진 연도에 며칠이 있었는지 반환합니다.</target>
        </trans-unit>
        <trans-unit id="490a95607dded73b4e2c7121c35b8a2a2901b097" translate="yes" xml:space="preserve">
          <source>Returns how many months there are in the given year.</source>
          <target state="translated">주어진 연도에 몇 개월이 있었는지 반환합니다.</target>
        </trans-unit>
        <trans-unit id="59cba054246bb0ebf15017c4a39c70c24fc14704" translate="yes" xml:space="preserve">
          <source>Returns if protocols have been consolidated at least once.</source>
          <target state="translated">Returns if protocols have been consolidated at least once.</target>
        </trans-unit>
        <trans-unit id="da0d66142abc50d51d45fadbe1b7ceb2bf128de8" translate="yes" xml:space="preserve">
          <source>Returns if the given year is a leap year.</source>
          <target state="translated">주어진 연도가 윤년인지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f5884d887fb7ba8b1601d037e06dde2d616f18cc" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If it exists, it returns a &lt;code&gt;{:ok, info}&lt;/code&gt; tuple, where info is a &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct. Returns &lt;code&gt;{:error, reason}&lt;/code&gt; with the same reasons as &lt;a href=&quot;#read/1&quot;&gt;&lt;code&gt;read/1&lt;/code&gt;&lt;/a&gt; if a failure occurs.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 에 대한 정보를 반환 합니다 . 존재하는 경우 &lt;code&gt;{:ok, info}&lt;/code&gt; 튜플을 반환합니다 . 여기서 info는 &lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; 구조체입니다. 실패가 발생한 경우 &lt;a href=&quot;#read/1&quot;&gt; &lt;code&gt;read/1&lt;/code&gt; &lt;/a&gt; 과 같은 이유로 &lt;code&gt;{:error, reason}&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="9f6d2788a24a43342e5c35310161a6251b14ddb2" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If it exists, it returns a &lt;code&gt;{:ok, info}&lt;/code&gt; tuple, where info is a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct. Returns &lt;code&gt;{:error, reason}&lt;/code&gt; with the same reasons as &lt;a href=&quot;#read/1&quot;&gt;&lt;code&gt;read/1&lt;/code&gt;&lt;/a&gt; if a failure occurs.</source>
          <target state="translated">Returns information about the &lt;code&gt;path&lt;/code&gt; . If it exists, it returns a &lt;code&gt;{:ok, info}&lt;/code&gt; tuple, where info is a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; struct. Returns &lt;code&gt;{:error, reason}&lt;/code&gt; with the same reasons as &lt;a href=&quot;#read/1&quot;&gt; &lt;code&gt;read/1&lt;/code&gt; &lt;/a&gt; if a failure occurs.</target>
        </trans-unit>
        <trans-unit id="71f428255ff2f929b5d980ed8e402267ff12f103" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If the file is a symlink, sets the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;:symlink&lt;/code&gt; and returns a &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct for the link. For any other file, returns exactly the same values as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 에 대한 정보를 반환 합니다 . 파일이 심볼릭 링크 인 경우 &lt;code&gt;type&lt;/code&gt; 을 &lt;code&gt;:symlink&lt;/code&gt; 로 설정하고 링크에 대한 &lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; 구조체를 반환합니다 . 다른 파일의 경우 &lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; &lt;/a&gt; 와 정확히 동일한 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a24a47b6f14f4f0f97766f7d19fbd1281ce055c4" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;path&lt;/code&gt;. If the file is a symlink, sets the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;:symlink&lt;/code&gt; and returns a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct for the link. For any other file, returns exactly the same values as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Returns information about the &lt;code&gt;path&lt;/code&gt; . If the file is a symlink, sets the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;:symlink&lt;/code&gt; and returns a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; struct for the link. For any other file, returns exactly the same values as &lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2202568b5257269fabf7b8610f1f9626579ccc58" translate="yes" xml:space="preserve">
          <source>Returns information about the &lt;code&gt;port&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if the port is closed.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; 에 대한 정보를 반환 하거나 포트가 닫혀 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="83f9b5f443afc3ae957189755eaa98e7c3fb2722" translate="yes" xml:space="preserve">
          <source>Returns information about the process identified by &lt;code&gt;pid&lt;/code&gt;, or returns &lt;code&gt;nil&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; 로 식별 된 프로세스에 대한 정보를 리턴 하거나 프로세스가 &lt;code&gt;nil&lt;/code&gt; 상태가 아닌 경우 nil을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="68913468c2a51af8445d3d3e172ba53ca0d82a7c" translate="yes" xml:space="preserve">
          <source>Returns its input &lt;code&gt;value&lt;/code&gt;. This function can be passed as an anonymous function to transformation functions.</source>
          <target state="translated">Returns its input &lt;code&gt;value&lt;/code&gt; . This function can be passed as an anonymous function to transformation functions.</target>
        </trans-unit>
        <trans-unit id="04a73d587974a8675e9a92ec0f5497b61cf34112" translate="yes" xml:space="preserve">
          <source>Returns list of lists containing &lt;code&gt;count&lt;/code&gt; elements each, where each new chunk starts &lt;code&gt;step&lt;/code&gt; elements into the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 요소가 각각 포함 된 목록의 목록을 리턴합니다 . 여기서 각 새 청크는 &lt;code&gt;step&lt;/code&gt; 요소를 &lt;code&gt;enumerable&lt;/code&gt; 으로 시작 합니다 .</target>
        </trans-unit>
        <trans-unit id="97c42435f2786e7a4559d668951c6de124e0b400" translate="yes" xml:space="preserve">
          <source>Returns registered &lt;code&gt;after_spawn&lt;/code&gt; callbacks.</source>
          <target state="translated">등록 된 &lt;code&gt;after_spawn&lt;/code&gt; 콜백을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="47ffe01fd507b663ed8e30105a91166b14c69993" translate="yes" xml:space="preserve">
          <source>Returns the &quot;local time&quot; for the machine the Elixir program is running on.</source>
          <target state="translated">Returns the &quot;local time&quot; for the machine the Elixir program is running on.</target>
        </trans-unit>
        <trans-unit id="35972be543b88cdbe520718e001cfd9da6a4c1a6" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;calendar#t:iso_days/0&quot;&gt;&lt;code&gt;Calendar.iso_days/0&lt;/code&gt;&lt;/a&gt; format of the specified date.</source>
          <target state="translated">지정된 날짜 의 &lt;a href=&quot;calendar#t:iso_days/0&quot;&gt; &lt;code&gt;Calendar.iso_days/0&lt;/code&gt; &lt;/a&gt; 형식을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="45ea7a1a9aa8ccb8df4b5d24ef06173bad5aa6aa" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#t:iso_days/0&quot;&gt;&lt;code&gt;Calendar.iso_days/0&lt;/code&gt;&lt;/a&gt; format of the specified date.</source>
          <target state="translated">Returns the &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#t:iso_days/0&quot;&gt; &lt;code&gt;Calendar.iso_days/0&lt;/code&gt; &lt;/a&gt; format of the specified date.</target>
        </trans-unit>
        <trans-unit id="4d8fb3220039c4a989cf50dc53c6e73ba318cf3b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;enumerable&lt;/code&gt; with each element wrapped in a tuple alongside its index.</source>
          <target state="translated">인덱스와 함께 튜플에 싸인 각 요소와 &lt;code&gt;enumerable&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f6e24cfb2ae8f59a7578a010e574fc3caa012742" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;path&lt;/code&gt; with the &lt;code&gt;extension&lt;/code&gt; stripped.</source>
          <target state="translated">&lt;code&gt;extension&lt;/code&gt; 제거 된 &lt;code&gt;path&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="87a8309107d7a6e786d42c6f7078f4fae7ad490a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;pid&lt;/code&gt; or &lt;code&gt;{name, node}&lt;/code&gt; of a GenServer process, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">Returns the &lt;code&gt;pid&lt;/code&gt; or &lt;code&gt;{name, node}&lt;/code&gt; of a GenServer process, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="dc74c30f8661f563864d03e8b3c44b66d1bd4aa7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;pid&lt;/code&gt; or &lt;code&gt;{name, node}&lt;/code&gt; of a GenServer process, or &lt;code&gt;nil&lt;/code&gt; if no process is associated with the given &lt;code&gt;server&lt;/code&gt;.</source>
          <target state="translated">GenServer 프로세스 의 &lt;code&gt;pid&lt;/code&gt; 또는 &lt;code&gt;{name, node}&lt;/code&gt; 또는 주어진 &lt;code&gt;server&lt;/code&gt; 와 연관된 프로세스가없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="90365e0f63c31c851a4ea0a22762d8fd5340a36b" translate="yes" xml:space="preserve">
          <source>Returns the Erlang/OTP release number.</source>
          <target state="translated">Erlang / OTP 릴리스 번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc57bd779fa06cd3c466e24b49175637b5fc12c9" translate="yes" xml:space="preserve">
          <source>Returns the IEx width for printing.</source>
          <target state="translated">인쇄 할 IEx 너비를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8dab0f32fd45479245e3d6084613b9547e47fae3" translate="yes" xml:space="preserve">
          <source>Returns the Mix target.</source>
          <target state="translated">믹스 대상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3cb31056e81f8170874a64e3b816a1cafeaf8b88" translate="yes" xml:space="preserve">
          <source>Returns the PID (process identifier) of the calling process.</source>
          <target state="translated">호출 프로세스의 PID (프로세스 식별자)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="28781d2a7b24b9b3e88b31850c6fffc73a81f172" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new linked process started by the application of &lt;code&gt;fun&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 에서 &lt;code&gt;fun&lt;/code&gt; 을 적용하여 시작된 새 링크 된 프로세스의 PID를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="2a1c4c6c2d4ba2c1a2bfd7c6cfe2d55559ccd904" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new linked process started by the application of &lt;code&gt;module.function(args)&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 에서 &lt;code&gt;module.function(args)&lt;/code&gt; 를 적용하여 시작된 새 링크 된 프로세스의 PID를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d1bea2590103786ac5c9572e9655db1dfaa04b8a" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new process started by the application of &lt;code&gt;fun&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 에 &lt;code&gt;fun&lt;/code&gt; 을 적용하여 시작된 새 프로세스의 PID를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="cd52650d0092e03bdb2d1d752a3e5d17538c5add" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new process started by the application of &lt;code&gt;fun&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;. If &lt;code&gt;node&lt;/code&gt; does not exist, a useless PID is returned.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 에 &lt;code&gt;fun&lt;/code&gt; 을 적용하여 시작된 새 프로세스의 PID를 반환 합니다 . 경우 &lt;code&gt;node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fff6b40d45bb938426184e6a79905ec94d725709" translate="yes" xml:space="preserve">
          <source>Returns the PID of a new process started by the application of &lt;code&gt;module.function(args)&lt;/code&gt; on &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 에 &lt;code&gt;module.function(args)&lt;/code&gt; 를 적용하여 시작한 새 프로세스의 PID를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="5fc95961643565d6ee0e94b3a948a9b32184e234" translate="yes" xml:space="preserve">
          <source>Returns the PID of the group leader for the calling process.</source>
          <target state="translated">호출 프로세스에 대한 그룹 리더의 PID를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="67e30a9be70444eddcad990e1b99321a52cda56a" translate="yes" xml:space="preserve">
          <source>Returns the PID or port identifier registered under &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if the name is not registered.</source>
          <target state="translated">반환 값은 PID 또는 포트 식별자에 등록 된 &lt;code&gt;name&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 이름이 등록되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="1dd775c416fda16999814ba9687c6184bef6c5e3" translate="yes" xml:space="preserve">
          <source>Returns the SCMs of all dependencies as a map.</source>
          <target state="translated">Returns the SCMs of all dependencies as a map.</target>
        </trans-unit>
        <trans-unit id="b6ea0621ee843d2f4183487a30251fd512bb4dd5" translate="yes" xml:space="preserve">
          <source>Returns the absolute path of the directory of the current file as a binary.</source>
          <target state="translated">현재 파일 디렉토리의 절대 경로를 바이너리로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b054fb6b930203c886bcc866a9d057bd209f4748" translate="yes" xml:space="preserve">
          <source>Returns the accumulator for the next enumeration step.</source>
          <target state="translated">다음 열거 단계에 대한 누산기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2b4002e3b75b6bab925771b8767cfa960e477fa" translate="yes" xml:space="preserve">
          <source>Returns the application path inside the build.</source>
          <target state="translated">빌드 내부의 응용 프로그램 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9b85bed3a262af6f35083e7e28994ef4428c7299" translate="yes" xml:space="preserve">
          <source>Returns the biggest of the two given terms according to Erlang's term ordering.</source>
          <target state="translated">Erlang의 항 순서에 따라 주어진 두 항 중 가장 큰 항을 구합니다.</target>
        </trans-unit>
        <trans-unit id="4c73fe240b4369bf936955b81b2c9591391aad4e" translate="yes" xml:space="preserve">
          <source>Returns the binary which is the captured output.</source>
          <target state="translated">Returns the binary which is the captured output.</target>
        </trans-unit>
        <trans-unit id="fea2095c1f29cacac8d65cf66784d4ef1ae83102" translate="yes" xml:space="preserve">
          <source>Returns the binding for the given context as a keyword list.</source>
          <target state="translated">주어진 컨텍스트에 대한 바인딩을 키워드 목록으로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="752314d956a27e5c44f8fbfba8a3757afae67eba" translate="yes" xml:space="preserve">
          <source>Returns the build path for the given project.</source>
          <target state="translated">주어진 프로젝트의 빌드 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3430bfff23bef3205d5b94556c5c97c82aa0437" translate="yes" xml:space="preserve">
          <source>Returns the configured applications.</source>
          <target state="translated">Returns the configured applications.</target>
        </trans-unit>
        <trans-unit id="573a0f5ab58416d588ed3b479256a76e548b06c3" translate="yes" xml:space="preserve">
          <source>Returns the cookie if the node is alive, otherwise &lt;code&gt;:nocookie&lt;/code&gt;.</source>
          <target state="translated">노드가 &lt;code&gt;:nocookie&lt;/code&gt; 경우 쿠키를 반환하고, 그렇지 않으면 : nocookie 입니다.</target>
        </trans-unit>
        <trans-unit id="d845d89480874ca778a1116c5567c440609d9b1a" translate="yes" xml:space="preserve">
          <source>Returns the count of elements in the &lt;code&gt;enumerable&lt;/code&gt; for which &lt;code&gt;fun&lt;/code&gt; returns a truthy value.</source>
          <target state="translated">반환에있는 요소의 수를 &lt;code&gt;enumerable&lt;/code&gt; 하는 &lt;code&gt;fun&lt;/code&gt; truthy 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f20500df9c0629148c9bd099e966749367e6127" translate="yes" xml:space="preserve">
          <source>Returns the current Mix environment.</source>
          <target state="translated">현재 믹스 환경을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="12648382f3837cbbd85b3069dab4f0e0d52e2f2b" translate="yes" xml:space="preserve">
          <source>Returns the current calling environment as a &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Returns the current calling environment as a &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; struct.</target>
        </trans-unit>
        <trans-unit id="0f05fa0008ff2e3de6102d2eb231a36353917056" translate="yes" xml:space="preserve">
          <source>Returns the current calling environment as a &lt;a href=&quot;macro.env&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">현재 호출 환경을 &lt;a href=&quot;macro.env&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; 구조체 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cbcdc4db9ba8ae581e0947b7522b6b7808fe867d" translate="yes" xml:space="preserve">
          <source>Returns the current date in UTC.</source>
          <target state="translated">현재 날짜를 UTC로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d427f0d881fcb426b0308f9c5527544913d37578" translate="yes" xml:space="preserve">
          <source>Returns the current datetime in UTC.</source>
          <target state="translated">현재 날짜 시간을 UTC로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42d461efb4b3ec582a95598ba42fe415d9dc5208" translate="yes" xml:space="preserve">
          <source>Returns the current datetime in the provided time zone or raises on errors</source>
          <target state="translated">Returns the current datetime in the provided time zone or raises on errors</target>
        </trans-unit>
        <trans-unit id="6db00f03d4b312ef865190016b2f434102565fa4" translate="yes" xml:space="preserve">
          <source>Returns the current datetime in the provided time zone.</source>
          <target state="translated">제공된 시간대의 현재 날짜 / 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eb8693f6416350e33862fd628bc33e626df3cbb3" translate="yes" xml:space="preserve">
          <source>Returns the current environment information as a &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Returns the current environment information as a &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; struct.</target>
        </trans-unit>
        <trans-unit id="b4e884734713aacb55b93422d56caab2fd2fd029" translate="yes" xml:space="preserve">
          <source>Returns the current environment information as a &lt;a href=&quot;macro.env&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">현재 환경 정보를 &lt;a href=&quot;macro.env&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; 구조체 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c2d246446e08e73fc7f43897b3ee7185cb7780f4" translate="yes" xml:space="preserve">
          <source>Returns the current input/output buffers for the given IO device.</source>
          <target state="translated">주어진 IO 장치에 대한 현재 입력 / 출력 버퍼를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe927394cd0bfd1e814f4cc201198db4e42a8162" translate="yes" xml:space="preserve">
          <source>Returns the current module name as an atom or &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">현재 모듈 이름을 아톰으로 반환하거나 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="521ef1fd72b95fd19ed6d9439535d64de0fedd30" translate="yes" xml:space="preserve">
          <source>Returns the current monotonic time in the &lt;code&gt;:native&lt;/code&gt; time unit.</source>
          <target state="translated">&lt;code&gt;:native&lt;/code&gt; 시간 단위로 현재 단조 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="345cd1d89db7604f650f8e73c200c61040ceeea5" translate="yes" xml:space="preserve">
          <source>Returns the current monotonic time in the given time unit.</source>
          <target state="translated">주어진 시간 단위로 현재 단조 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26adce4b3c858c82bd89e77053f0a78750bacda8" translate="yes" xml:space="preserve">
          <source>Returns the current naive datetime in UTC.</source>
          <target state="translated">현재 순진 날짜 시간을 UTC로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1bec217a2783d794b0aff1789f2269eed2669c4d" translate="yes" xml:space="preserve">
          <source>Returns the current node.</source>
          <target state="translated">현재 노드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6d12c14c21595e740c48f9036de98fd93391e9c1" translate="yes" xml:space="preserve">
          <source>Returns the current operating system (OS) time in the given time &lt;code&gt;unit&lt;/code&gt;.</source>
          <target state="translated">주어진 시간 &lt;code&gt;unit&lt;/code&gt; 현재 운영 체제 (OS) 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8ec3d852082bcaf3ce2741e711151dd5810411b5" translate="yes" xml:space="preserve">
          <source>Returns the current operating system (OS) time.</source>
          <target state="translated">현재 운영 체제 (OS) 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9577165071461244948e156a490206caaa49ee13" translate="yes" xml:space="preserve">
          <source>Returns the current shell.</source>
          <target state="translated">현재 쉘을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e8ea115727f9d4064d043a892fb6bd3286e6745" translate="yes" xml:space="preserve">
          <source>Returns the current system time in the &lt;code&gt;:native&lt;/code&gt; time unit.</source>
          <target state="translated">&lt;code&gt;:native&lt;/code&gt; 시간 단위로 현재 시스템 시간을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="92212b92e0e8001ce298e74695fe895e088b04d3" translate="yes" xml:space="preserve">
          <source>Returns the current system time in the given time unit.</source>
          <target state="translated">주어진 시간 단위로 현재 시스템 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="540dd0788a95b6d0957d5ed2f9059d09fdbd91d9" translate="yes" xml:space="preserve">
          <source>Returns the current time in UTC.</source>
          <target state="translated">현재 시간을 UTC로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4fabbe6f4e846eeed8c475505bc8075dfa40dcb3" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between the Erlang VM monotonic time and the Erlang VM system time.</source>
          <target state="translated">Erlang VM 단조 시간과 Erlang VM 시스템 시간 사이의 현재 시간 오프셋을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20d5a985cb0015239605f2f1156e73f61f7acab9" translate="yes" xml:space="preserve">
          <source>Returns the current working directory or &lt;code&gt;nil&lt;/code&gt; if one is not available.</source>
          <target state="translated">현재 작업 디렉토리를 반환하거나 디렉토리를 사용할 수없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7c33b1f1feff4869046db9a2a0823a42ffa420f1" translate="yes" xml:space="preserve">
          <source>Returns the current working directory or raises &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Returns the current working directory or raises &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3f4d96f8d1d49184aac4fce163ea1635bed830d9" translate="yes" xml:space="preserve">
          <source>Returns the current working directory or raises &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 작업 디렉토리를 반환하거나 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="bd5eda37e289b94da28ee644df8f58ab267ce4a8" translate="yes" xml:space="preserve">
          <source>Returns the day of the week as an integer. For the ISO 8601 calendar (the default), it is an integer from 1 to 7, where 1 is Monday and 7 is Sunday.</source>
          <target state="translated">요일을 정수로 반환합니다. ISO 8601 달력 (기본값)의 경우 1에서 7까지의 정수이며 여기서 1은 월요일이고 7은 일요일입니다.</target>
        </trans-unit>
        <trans-unit id="473215ad94d1a89d8e50f3170d490992cd7fa885" translate="yes" xml:space="preserve">
          <source>Returns the day of the year as an integer. For the ISO 8601 calendar (the default), it is an integer from 1 to 366.</source>
          <target state="translated">연중 일을 정수로 리턴합니다. ISO 8601 달력 (기본값)의 경우 1에서 366 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="33b04f5e22dce70a50b505e48c02613150c8eb8a" translate="yes" xml:space="preserve">
          <source>Returns the day of the year as an integer. For the ISO 8601 calendar (the default), it is an integer from 1 to 4.</source>
          <target state="translated">연중 일을 정수로 리턴합니다. ISO 8601 달력 (기본값)의 경우 1에서 4 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="04afcb00bb6df97dc22721d3b7726ba2c39e5893" translate="yes" xml:space="preserve">
          <source>Returns the default compilers used by Mix.</source>
          <target state="translated">Mix에서 사용하는 기본 컴파일러를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3918a2e8d3b80984f96cb96c51a0494d3d39bed6" translate="yes" xml:space="preserve">
          <source>Returns the default port for a given &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;scheme&lt;/code&gt; 의 기본 포트를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="535f11476c25e1bb602ba6d2aeb55347a1d6a043" translate="yes" xml:space="preserve">
          <source>Returns the difference between two times, considering only the hour, minute, second and microsecond.</source>
          <target state="translated">시, 분, 초 및 마이크로 초 만 고려하여 두 번의 차이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c360d7e4c5c2b410f7a146c98152183d42efdcf3" translate="yes" xml:space="preserve">
          <source>Returns the directory component of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 의 디렉토리 구성 요소를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="743a31f3d672772d256b1200c80f279d76f2d31c" translate="yes" xml:space="preserve">
          <source>Returns the docs for the given module or path to &lt;code&gt;.beam&lt;/code&gt; file.</source>
          <target state="translated">주어진 모듈 또는 &lt;code&gt;.beam&lt;/code&gt; 파일의 경로에 대한 문서를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="60f44569a96a86763b4d5487c67ec190e0aa215b" translate="yes" xml:space="preserve">
          <source>Returns the endianness the system was compiled with.</source>
          <target state="translated">시스템이 컴파일 된 엔디안을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="90dc2654ea71a38a108c2c7c6240011daa9ac00b" translate="yes" xml:space="preserve">
          <source>Returns the endianness.</source>
          <target state="translated">엔디안을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="55ed469436421de6156924c6030eb3ab0a32ba8f" translate="yes" xml:space="preserve">
          <source>Returns the environment stacktrace.</source>
          <target state="translated">환경 스택 추적을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c4ef529c7c8dda97e6b68bc28a95bbaa115afcc7" translate="yes" xml:space="preserve">
          <source>Returns the environment this configuration file is executed on.</source>
          <target state="translated">Returns the environment this configuration file is executed on.</target>
        </trans-unit>
        <trans-unit id="5456a19f646f58529fe8a657394e5ddae1330e08" translate="yes" xml:space="preserve">
          <source>Returns the error or fails otherwise.</source>
          <target state="translated">오류를 반환하거나 그렇지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="7362835e7fb583b56ba30b3e3d72e9f11ce9a6a9" translate="yes" xml:space="preserve">
          <source>Returns the exit status/message of the current process or fails otherwise.</source>
          <target state="translated">현재 프로세스의 종료 상태 / 메시지를 반환하거나 그렇지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="13b1cd87bb42d7ad26289e50c4f9af5414cf7bac" translate="yes" xml:space="preserve">
          <source>Returns the extension of the last component of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 의 마지막 구성 요소의 확장명을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="30b2ff36eaf15948432462e234a67e21fe2e2019" translate="yes" xml:space="preserve">
          <source>Returns the first element for which &lt;code&gt;fun&lt;/code&gt; returns a truthy value. If no such element is found, returns &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; 이 참 값 을 반환하는 첫 번째 요소를 반환합니다. 이러한 요소가 없으면 &lt;code&gt;default&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44fb56015a721ac17ca474e99ac44941901f7216" translate="yes" xml:space="preserve">
          <source>Returns the first element in &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is empty.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 첫 번째 요소를 반환 하거나 &lt;code&gt;list&lt;/code&gt; 가 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b755a0a7007ddbe1d8bd4609634632fb2a788b92" translate="yes" xml:space="preserve">
          <source>Returns the first grapheme from a UTF-8 string, &lt;code&gt;nil&lt;/code&gt; if the string is empty.</source>
          <target state="translated">UTF-8 문자열에서 첫 번째 그래프를 반환합니다 . 문자열이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7edf8c53138a591a47a5cc086f366bc283deabe" translate="yes" xml:space="preserve">
          <source>Returns the first value for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list, raising if &lt;code&gt;key&lt;/code&gt; is not present.</source>
          <target state="translated">Returns the first value for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list, raising if &lt;code&gt;key&lt;/code&gt; is not present.</target>
        </trans-unit>
        <trans-unit id="2328ab83b14d6136b16a050205c1494154a3401b" translate="yes" xml:space="preserve">
          <source>Returns the first value for &lt;code&gt;key&lt;/code&gt; and removes all associated entries in the keyword list.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 의 첫 번째 값을 반환하고 키워드 목록에서 모든 관련 항목을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="adace3ea6573dd72a53ac820de069b8efe08eeae" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;charlist&lt;/code&gt;.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;charlist&lt;/code&gt; 인 float를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="132d92e12bedb340ac3d1a53925f3bc5b200ce16" translate="yes" xml:space="preserve">
          <source>Returns the full path of all dependencies as a map.</source>
          <target state="translated">모든 종속성의 전체 경로를지도로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8d3182b82f60a34d74d98ba7cc9c7db20ff5729c" translate="yes" xml:space="preserve">
          <source>Returns the given &lt;code&gt;path&lt;/code&gt; relative to the given &lt;code&gt;from&lt;/code&gt; path.</source>
          <target state="translated">주어진 리턴 &lt;code&gt;path&lt;/code&gt; 주어진 상대 &lt;code&gt;from&lt;/code&gt; 경로입니다.</target>
        </trans-unit>
        <trans-unit id="75bed7c4c49c3acb846eb78679f043b5f9939bba" translate="yes" xml:space="preserve">
          <source>Returns the given captures as a map or &lt;code&gt;nil&lt;/code&gt; if no captures are found.</source>
          <target state="translated">주어진 캡처를 맵으로 반환하거나 캡처가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0871bdec42d4933403a85dcc8f24ed7f878565b1" translate="yes" xml:space="preserve">
          <source>Returns the given datetime with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">Returns the given datetime with the microsecond field truncated to the given precision ( &lt;code&gt;:microsecond&lt;/code&gt; , &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7fa658bba7d8988f6fff21b54b937be943e2fbb1" translate="yes" xml:space="preserve">
          <source>Returns the given datetime with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">마이크로 초 필드가 지정된 정밀도 ( &lt;code&gt;:microsecond&lt;/code&gt; , &lt;code&gt;millisecond&lt;/code&gt; 또는 &lt;code&gt;:second&lt;/code&gt; )로 잘린 상태에서 주어진 날짜 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="28d16705056be413543338cdc59340c17555be51" translate="yes" xml:space="preserve">
          <source>Returns the given naive datetime with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">마이크로 초 필드가 지정된 정밀도 ( &lt;code&gt;:microsecond&lt;/code&gt; , &lt;code&gt;:millisecond&lt;/code&gt; 또는 &lt;code&gt;:second&lt;/code&gt; )로 잘린 상태에서 주어진 순진 날짜 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3d1a559ecef9e97b4e0334ec074b0b1f5674bf30" translate="yes" xml:space="preserve">
          <source>Returns the given path inside &lt;a href=&quot;#app_dir/1&quot;&gt;&lt;code&gt;app_dir/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#app_dir/1&quot;&gt; &lt;code&gt;app_dir/1&lt;/code&gt; &lt;/a&gt; 안에 주어진 경로를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="45f9818c95e6364d0071ed3fb00b8ef3cc3d319d" translate="yes" xml:space="preserve">
          <source>Returns the given time with the microsecond field truncated to the given precision (&lt;code&gt;:microsecond&lt;/code&gt;, &lt;code&gt;millisecond&lt;/code&gt; or &lt;code&gt;:second&lt;/code&gt;).</source>
          <target state="translated">마이크로 초 필드가 주어진 정밀도 ( &lt;code&gt;:microsecond&lt;/code&gt; , &lt;code&gt;millisecond&lt;/code&gt; 또는 &lt;code&gt;:second&lt;/code&gt; )로 잘린 주어진 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="909b8d4669adb90c693b81f2a8d07663b593a92e" translate="yes" xml:space="preserve">
          <source>Returns the grapheme at the &lt;code&gt;position&lt;/code&gt; of the given UTF-8 &lt;code&gt;string&lt;/code&gt;. If &lt;code&gt;position&lt;/code&gt; is greater than &lt;code&gt;string&lt;/code&gt; length, then it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">주어진 UTF-8 &lt;code&gt;string&lt;/code&gt; 의 &lt;code&gt;position&lt;/code&gt; 에 그래프를 반환합니다 . 경우 &lt;code&gt;position&lt;/code&gt; 보다 큰 &lt;code&gt;string&lt;/code&gt; 길이, 그것은 반환 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05c6f692fd2828628bdd1efab20923941cb15eae" translate="yes" xml:space="preserve">
          <source>Returns the greatest common divisor of the two given integers.</source>
          <target state="translated">주어진 두 정수의 최대 공약수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b283ba5da4ce9761248fbc47c852c80114d37e35" translate="yes" xml:space="preserve">
          <source>Returns the head of a list. Raises &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">리스트의 선두를 돌려줍니다. 레이즈 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 목록이 비어있는 경우.</target>
        </trans-unit>
        <trans-unit id="2ed57f915a80db25488161c5cd1ffa61a8941d52" translate="yes" xml:space="preserve">
          <source>Returns the head of a list. Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">Returns the head of a list. Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; if the list is empty.</target>
        </trans-unit>
        <trans-unit id="1aab8bad43ed60da302eaec7116a0fb4f8228f71" translate="yes" xml:space="preserve">
          <source>Returns the integer part of &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 의 정수 부분을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e4caee94b42975fc4ef569f7edb886b32f98473" translate="yes" xml:space="preserve">
          <source>Returns the integer represented by the ordered &lt;code&gt;digits&lt;/code&gt;.</source>
          <target state="translated">정렬 된 &lt;code&gt;digits&lt;/code&gt; 표시되는 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9dca7c41159299ac837cdcf59a4ccdfd24e8223d" translate="yes" xml:space="preserve">
          <source>Returns the keyword list itself.</source>
          <target state="translated">키워드 목록 자체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="28cf4adaa9e99aa7a488eb9e9efd274d65ac64ca" translate="yes" xml:space="preserve">
          <source>Returns the known keys for the given &lt;code&gt;pid&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt; in no particular order.</source>
          <target state="translated">&lt;code&gt;registry&lt;/code&gt; 에서 주어진 &lt;code&gt;pid&lt;/code&gt; 에 대해 알려진 키를 특별한 순서없이 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ed4f2c86eaedecae2c967c536bfa703cc2920d0c" translate="yes" xml:space="preserve">
          <source>Returns the largest integer smaller than or equal to &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 보다 작거나 같은 가장 큰 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b463682e5f1620bc48bbe9a0c681922d3b6e22db" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;path&lt;/code&gt; with the &lt;code&gt;extension&lt;/code&gt; stripped.</source>
          <target state="translated">의 마지막 구성 요소를 반환 &lt;code&gt;path&lt;/code&gt; 로 &lt;code&gt;extension&lt;/code&gt; 제거.</target>
        </trans-unit>
        <trans-unit id="81927b94fd63f85c8665acc4bc7874e3d4d31937" translate="yes" xml:space="preserve">
          <source>Returns the last component of the path or the path itself if it does not contain any directory separators.</source>
          <target state="translated">경로의 마지막 구성 요소 또는 경로가 디렉토리 분리자를 포함하지 않는 경우 경로 자체를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="45bb2bd2dfb7427c0def40b931c0fa8bb71e07c7" translate="yes" xml:space="preserve">
          <source>Returns the last element in &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is empty.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 마지막 요소를 반환 하거나 &lt;code&gt;list&lt;/code&gt; 가 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b60f9b2a8336b775ec25cc98be20c5236daea41a" translate="yes" xml:space="preserve">
          <source>Returns the last grapheme from a UTF-8 string, &lt;code&gt;nil&lt;/code&gt; if the string is empty.</source>
          <target state="translated">UTF-8 문자열에서 마지막 그래프를 반환합니다 . 문자열이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="60f662f4df687832912347c33ee43b43e8d7e49d" translate="yes" xml:space="preserve">
          <source>Returns the latest modification time from config files.</source>
          <target state="translated">구성 파일에서 최신 수정 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a17acd17d93c2beed018ebd32e7381da5cf43a4" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8b308f7849b98129f4e56bec9a2ab362236e7a74" translate="yes" xml:space="preserve">
          <source>Returns the list of command line arguments passed to the program.</source>
          <target state="translated">프로그램에 전달 된 명령 행 인수 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="44d5cb238fa513f56b5a6d6939f5b722a4d1a26c" translate="yes" xml:space="preserve">
          <source>Returns the list of files in the given directory.</source>
          <target state="translated">주어진 디렉토리의 파일 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe0f0d1d998912ae211cef3e07fac10c74125c71" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the local node.</source>
          <target state="translated">로컬 노드의 매직 쿠키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33b9544a2e452f1a99c29a76bae5d5dc88adf825" translate="yes" xml:space="preserve">
          <source>Returns the maximal element in the &lt;code&gt;enumerable&lt;/code&gt; according to Erlang's term ordering.</source>
          <target state="translated">Erlang의 용어 순서에 따라 &lt;code&gt;enumerable&lt;/code&gt; 최대 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="41186c318e828039af269a01be0e2bd9f8f652da" translate="yes" xml:space="preserve">
          <source>Returns the maximal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given &lt;code&gt;fun&lt;/code&gt;.</source>
          <target state="translated">Returns the maximal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given &lt;code&gt;fun&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a1a242005e42a95aa3266b2eab0a2a4fd8e3105" translate="yes" xml:space="preserve">
          <source>Returns the maximal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given function.</source>
          <target state="translated">주어진 함수에 의해 계산 된 &lt;code&gt;enumerable&lt;/code&gt; 최대 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9536ff1a100bf1bce64d62cc60d29cc363b6d009" translate="yes" xml:space="preserve">
          <source>Returns the minimal element in the &lt;code&gt;enumerable&lt;/code&gt; according to Erlang's term ordering.</source>
          <target state="translated">Erlang의 용어 순서에 따라 &lt;code&gt;enumerable&lt;/code&gt; 최소 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44badba0e2347859f3285bb4929ae13d47893315" translate="yes" xml:space="preserve">
          <source>Returns the minimal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given &lt;code&gt;fun&lt;/code&gt;.</source>
          <target state="translated">Returns the minimal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given &lt;code&gt;fun&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4aaf9ad65824961ffacf65287788a624a792d8ad" translate="yes" xml:space="preserve">
          <source>Returns the minimal element in the &lt;code&gt;enumerable&lt;/code&gt; as calculated by the given function.</source>
          <target state="translated">주어진 함수에 의해 계산 된 &lt;code&gt;enumerable&lt;/code&gt; 최소 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0ae1bfedd52d674e4dd2a7059e781e1680098395" translate="yes" xml:space="preserve">
          <source>Returns the moduledoc or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">moduledoc 또는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dc0172f27e90560535eb10761257b16c6438a35f" translate="yes" xml:space="preserve">
          <source>Returns the next code point in a string.</source>
          <target state="translated">문자열에서 다음 코드 포인트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7a2d63dd8aa9e75aa8ca9871ffd197f84b3ad92" translate="yes" xml:space="preserve">
          <source>Returns the next grapheme in a string.</source>
          <target state="translated">문자열에서 다음 그래프를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a16815d4724b8691695891cfce1bd1b80506605c" translate="yes" xml:space="preserve">
          <source>Returns the node where the given argument is located. The argument can be a PID, a reference, or a port. If the local node is not alive, &lt;code&gt;:nonode@nohost&lt;/code&gt; is returned.</source>
          <target state="translated">주어진 인수가있는 노드를 반환합니다. 인수는 PID, 참조 또는 포트 일 수 있습니다. 로컬 노드가 &lt;code&gt;:nonode@nohost&lt;/code&gt; 가 아닌 경우 : nonode @ nohost 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="fb0d19709454ac201a1e441f05c0767db885f7e5" translate="yes" xml:space="preserve">
          <source>Returns the normalized day fraction of the specified time.</source>
          <target state="translated">지정된 시간의 정규화 된 일 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ebe9ee0e2dcfef83024da931aea937711de22721" translate="yes" xml:space="preserve">
          <source>Returns the number of &lt;code&gt;{pid, value}&lt;/code&gt; pairs under the given &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt; that match &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">의 수를 돌려줍니다 &lt;code&gt;{pid, value}&lt;/code&gt; 주어진 아래 쌍 &lt;code&gt;key&lt;/code&gt; 의 &lt;code&gt;registry&lt;/code&gt; 가 일치하는 &lt;code&gt;pattern&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="993096f11931f901931f9487833be33b5fe12f30" translate="yes" xml:space="preserve">
          <source>Returns the number of Unicode graphemes in a UTF-8 string.</source>
          <target state="translated">UTF-8 문자열로 된 유니 코드 그래프 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9318f14536ad10f68dec3a090722544f2fc933e" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes needed to contain &lt;code&gt;bitstring&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bitstring&lt;/code&gt; 을 포함하는 데 필요한 바이트 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0ab6d73ab9101e6ad794ac65a9028c34ffc39f8a" translate="yes" xml:space="preserve">
          <source>Returns the number of days in the given &lt;code&gt;date&lt;/code&gt; month.</source>
          <target state="translated">주어진 &lt;code&gt;date&lt;/code&gt; 월 의 일 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="aef856be9186f5050ccf210e12afe31c44f70bfd" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;map_set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map_set&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5b54c7695f5998e85118fe351a01a0eac6afe807" translate="yes" xml:space="preserve">
          <source>Returns the number of months in the given &lt;code&gt;date&lt;/code&gt; year.</source>
          <target state="translated">주어진 &lt;code&gt;date&lt;/code&gt; 연도 의 개월 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d1ea18c62ae69b9b7617892c57bf359ea558d46a" translate="yes" xml:space="preserve">
          <source>Returns the number of registered keys in a registry. It runs in constant time.</source>
          <target state="translated">레지스트리에 등록 된 키 수를 반환합니다. 일정한 시간에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="acfbdec1c3382733c31d3e5a142e482203fcba40" translate="yes" xml:space="preserve">
          <source>Returns the number of schedulers in the VM.</source>
          <target state="translated">VM의 스케줄러 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b889415c6fce3d59b84ddd96e7cca2db8db380cb" translate="yes" xml:space="preserve">
          <source>Returns the number of schedulers online in the VM.</source>
          <target state="translated">VM에서 온라인으로 스케줄러 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5df4306ee94fe8f8fafbfae6afb8dc375379b369" translate="yes" xml:space="preserve">
          <source>Returns the old value of &lt;code&gt;flag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flag&lt;/code&gt; 의 이전 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="13ba9fcca2a0649fec425cb7848af73f91935f3e" translate="yes" xml:space="preserve">
          <source>Returns the operating system PID for the current Erlang runtime system instance.</source>
          <target state="translated">현재 Erlang 런타임 시스템 인스턴스의 운영 체제 PID를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="89200e57745b7c39430ec5683fae28a368d62bac" translate="yes" xml:space="preserve">
          <source>Returns the options used for inspecting.</source>
          <target state="translated">검사에 사용 된 옵션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e56c4592d5df7f1bace540247183fda61bd3a8c9" translate="yes" xml:space="preserve">
          <source>Returns the ordered digits for the given &lt;code&gt;integer&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;integer&lt;/code&gt; 대해 정렬 된 숫자를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8d395cac96a71568d47555bbbbf4625ac25a1410" translate="yes" xml:space="preserve">
          <source>Returns the path type.</source>
          <target state="translated">경로 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="12f1d8051a526d9c6a64f1dbb1d2d7d5ae196c74" translate="yes" xml:space="preserve">
          <source>Returns the path where dependencies are stored for the given project.</source>
          <target state="translated">주어진 프로젝트에 대한 의존성이 저장되는 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="25dbe974fbdff9402cb982b026d936c4ff110e40" translate="yes" xml:space="preserve">
          <source>Returns the path where manifests are stored.</source>
          <target state="translated">매니페스트가 저장된 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9d953d9255141f7294d89b7b7fe49a513a28c2b3" translate="yes" xml:space="preserve">
          <source>Returns the path where protocol consolidations are stored.</source>
          <target state="translated">프로토콜 통합이 저장된 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f11106aa39ba84c5e30cc0b55e17085927e4e42" translate="yes" xml:space="preserve">
          <source>Returns the paths the given project compiles to.</source>
          <target state="translated">주어진 프로젝트가 컴파일되는 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f12bd00aec58184b41e9e6a2031aa30605d2df99" translate="yes" xml:space="preserve">
          <source>Returns the pluralization for &lt;code&gt;word&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;word&lt;/code&gt; 의 복수형을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="52d4796aa3d390fecdd3129fa8cd9f3682f3c79d" translate="yes" xml:space="preserve">
          <source>Returns the printable app name.</source>
          <target state="translated">Returns the printable app name.</target>
        </trans-unit>
        <trans-unit id="df6a4629eb175817de97b50b825cf94add115c00" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the current Erlang emulator in the format most commonly used by the operating system environment.</source>
          <target state="translated">운영 체제 환경에서 가장 일반적으로 사용되는 형식으로 현재 Erlang 에뮬레이터의 프로세스 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="568636cdc2330b657828aa8245c56f10e4eee142" translate="yes" xml:space="preserve">
          <source>Returns the project configuration.</source>
          <target state="translated">프로젝트 구성을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ab453c26a5feb021a2c9059dd3c8585ac19eb3ef" translate="yes" xml:space="preserve">
          <source>Returns the regex options as a string.</source>
          <target state="translated">정규식 옵션을 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ce3ebec18204dd94a1942d1c3249ace4c6e0d006" translate="yes" xml:space="preserve">
          <source>Returns the regex source as a binary.</source>
          <target state="translated">정규식 소스를 이진수로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9433dc7ce38dfb47f9e2242a44435d8ec1469e59" translate="yes" xml:space="preserve">
          <source>Returns the shortdoc or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">shortdoc 또는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5eb49c64118b8afcc3cd03264a3763f54c004293" translate="yes" xml:space="preserve">
          <source>Returns the size (in bytes) of the next grapheme.</source>
          <target state="translated">Returns the size (in bytes) of the next grapheme.</target>
        </trans-unit>
        <trans-unit id="53b0081e44e5c9c4563adcd42943126cb72ba8c9" translate="yes" xml:space="preserve">
          <source>Returns the size of a map.</source>
          <target state="translated">지도의 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="464da3495a9bba600da306000b297ddb8d537d28" translate="yes" xml:space="preserve">
          <source>Returns the size of a tuple.</source>
          <target state="translated">튜플의 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2eab1deb376aa2eb3ded24f57f590dc04c57e6b1" translate="yes" xml:space="preserve">
          <source>Returns the size of an IO data.</source>
          <target state="translated">IO 데이터의 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="771fa37bdad6a0b0f3f8ca4535f1113f29b7cca1" translate="yes" xml:space="preserve">
          <source>Returns the size of the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 크기를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4360055191bbc6d560abe7b2a7ed6423ae2263a6" translate="yes" xml:space="preserve">
          <source>Returns the size of the next grapheme.</source>
          <target state="translated">다음 그래프의 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="921d7de9abba27ebf9e4ec955853abb5d9b2dfde" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 보다 크거나 같은 가장 작은 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ec9bf6067fd64ae230688cac070ca822929e9781" translate="yes" xml:space="preserve">
          <source>Returns the smallest of the two given terms according to Erlang's term ordering.</source>
          <target state="translated">Erlang의 항 순서에 따라 주어진 두 항 중 최소값을 구합니다.</target>
        </trans-unit>
        <trans-unit id="f7e094cce152da41bb001fe75ff8ff8c450d3c55" translate="yes" xml:space="preserve">
          <source>Returns the spec for &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 에 대한 사양을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5393c9233d23da08562a8362027b6bca2a3dff85" translate="yes" xml:space="preserve">
          <source>Returns the stacktrace for the currently handled exception.</source>
          <target state="translated">현재 처리 된 예외에 대한 스택 추적을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8b893b416ca9bfbcc2d075a8ada9c6aca862a339" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given &lt;a href=&quot;#t:t/0&quot;&gt;URI struct&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;#t:t/0&quot;&gt;URI 구조체&lt;/a&gt; 의 캐릭터 라인 표현을 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="cea5e90d9f2a065b00dd59e1c92db64e63a26004" translate="yes" xml:space="preserve">
          <source>Returns the string untouched if there are no occurrences.</source>
          <target state="translated">발생이없는 경우 손대지 않은 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2119c6340fc1c60d171f69f5b6fc40832b65f1de" translate="yes" xml:space="preserve">
          <source>Returns the string untouched if there is no match. If &lt;code&gt;match&lt;/code&gt; is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), &lt;code&gt;replacement&lt;/code&gt; is just appended to &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">일치하는 항목이 없으면 문자열을 그대로 반환합니다. 경우 &lt;code&gt;match&lt;/code&gt; 빈 문자열입니다 ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ), &lt;code&gt;replacement&lt;/code&gt; 단지에 추가되는 &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d3e5f86a6a3448482723c629b72cbcf08d2a6d1" translate="yes" xml:space="preserve">
          <source>Returns the string untouched if there is no match. If &lt;code&gt;match&lt;/code&gt; is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), &lt;code&gt;replacement&lt;/code&gt; is just prepended to &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">일치하는 항목이 없으면 문자열을 그대로 반환합니다. 경우 &lt;code&gt;match&lt;/code&gt; 빈 문자열입니다 ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ), &lt;code&gt;replacement&lt;/code&gt; 바로 앞에 추가됩니다 &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99f109b4c1e9e2e52c16c8c6e0ba33b2337b1129" translate="yes" xml:space="preserve">
          <source>Returns the sum of all elements.</source>
          <target state="translated">모든 요소의 합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5446f0a929a51f2841c8d97a177322c6d4cfbd4b" translate="yes" xml:space="preserve">
          <source>Returns the tail of a list. Raises &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">목록의 꼬리를 반환합니다. 레이즈 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 목록이 비어있는 경우.</target>
        </trans-unit>
        <trans-unit id="ae673d62b221b01c1e38d729fb3d2bf2b4ec8893" translate="yes" xml:space="preserve">
          <source>Returns the tail of a list. Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the list is empty.</source>
          <target state="translated">Returns the tail of a list. Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; if the list is empty.</target>
        </trans-unit>
        <trans-unit id="b78ad4492677f3fbfec83019e0ee942fb3a1c7d7" translate="yes" xml:space="preserve">
          <source>Returns the target this configuration file is executed on.</source>
          <target state="translated">Returns the target this configuration file is executed on.</target>
        </trans-unit>
        <trans-unit id="c9be2b1fad24de04c50b3e83a236b19a500bd708" translate="yes" xml:space="preserve">
          <source>Returns the task name for the given &lt;code&gt;module&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;module&lt;/code&gt; 의 작업 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="878347c3aa6513fbf6afa6efa6c7f012a2ebde56" translate="yes" xml:space="preserve">
          <source>Returns the thrown value or fails otherwise.</source>
          <target state="translated">던져진 값을 반환하거나 그렇지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="76679b3900f0ba1621d3328c4d07b6237c72c826" translate="yes" xml:space="preserve">
          <source>Returns the underlying &lt;code&gt;re_pattern&lt;/code&gt; in the regular expression.</source>
          <target state="translated">정규 표현식에서 기본 &lt;code&gt;re_pattern&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="59d495cfe60137b96fefadc85ec284a40580d7a3" translate="yes" xml:space="preserve">
          <source>Returns the usable managers for the dependency. This can be used if the SCM has extra knowledge of the dependency, otherwise it should return an empty list.</source>
          <target state="translated">Returns the usable managers for the dependency. This can be used if the SCM has extra knowledge of the dependency, otherwise it should return an empty list.</target>
        </trans-unit>
        <trans-unit id="8968b9f6847de7df218d57ed06876fcd4deefde7" translate="yes" xml:space="preserve">
          <source>Returns the user home directory (platform independent).</source>
          <target state="translated">사용자 홈 디렉토리를 리턴합니다 (플랫폼 독립적).</target>
        </trans-unit>
        <trans-unit id="f853f8018f651d849df46372217944c5cafdc33f" translate="yes" xml:space="preserve">
          <source>Returns the value for &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;app&lt;/code&gt;'s environment in a tuple.</source>
          <target state="translated">튜플 에서 &lt;code&gt;app&lt;/code&gt; 환경의 &lt;code&gt;key&lt;/code&gt; 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a25fac0ea4b17b37d92bb53583068e5149115241" translate="yes" xml:space="preserve">
          <source>Returns the value for &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;app&lt;/code&gt;'s environment.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 환경 에서 &lt;code&gt;key&lt;/code&gt; 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="98a6e9fe912ad2fc1ebf1d97990bf4eace7713a9" translate="yes" xml:space="preserve">
          <source>Returns the value for &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;app&lt;/code&gt;'s specification.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 사양 에서 &lt;code&gt;key&lt;/code&gt; 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4904ba9d019e50de81dadd2fd0f3950811aa6e11" translate="yes" xml:space="preserve">
          <source>Returns the value for the given &lt;code&gt;key&lt;/code&gt; in the process dictionary, or &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not set.</source>
          <target state="translated">프로세스 사전에서 지정된 &lt;code&gt;key&lt;/code&gt; 의 값을 리턴 하거나 &lt;code&gt;key&lt;/code&gt; 가 설정되지 않은 경우 &lt;code&gt;default&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4743b722e00687fb023b8b72382036b52d966a63" translate="yes" xml:space="preserve">
          <source>Returns the value of a given compiler option.</source>
          <target state="translated">Returns the value of a given compiler option.</target>
        </trans-unit>
        <trans-unit id="4b4cb0e2ce0546225daafc01a7abd95363859e47" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;n&lt;/code&gt;th expression in the history.</source>
          <target state="translated">히스토리에서 &lt;code&gt;n&lt;/code&gt; 번째 표현식 의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="d4c5eb060d7795d63f93a93d2174bfbde5eec930" translate="yes" xml:space="preserve">
          <source>Returns the value of the given environment variable or &lt;code&gt;:error&lt;/code&gt; if not found.</source>
          <target state="translated">주어진 환경 변수의 값을 반환하거나 찾지 못한 경우 &lt;code&gt;:error&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6d3c958f0d384e41e1fd39b3e1093c21e579bb87" translate="yes" xml:space="preserve">
          <source>Returns the value of the given environment variable or raises if not found.</source>
          <target state="translated">주어진 환경 변수의 값을 반환하거나 찾을 수없는 경우 증가합니다.</target>
        </trans-unit>
        <trans-unit id="fc426843775837bb9713393133e0f84dd5fa52c9" translate="yes" xml:space="preserve">
          <source>Returns the value of the given environment variable.</source>
          <target state="translated">주어진 환경 변수의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b17bccbe58f022f5360104153b5324a3a5f8ab53" translate="yes" xml:space="preserve">
          <source>Returns the value that was under &lt;code&gt;key&lt;/code&gt; in the process dictionary, or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; was not stored in the process dictionary.</source>
          <target state="translated">프로세스 사전 에서 &lt;code&gt;key&lt;/code&gt; 아래에 있던 값을 리턴 하거나 &lt;code&gt;key&lt;/code&gt; 가 프로세스 사전에 저장되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4002ca69c8b4a4e8942a2a8ca79b1e4c4939052d" translate="yes" xml:space="preserve">
          <source>Returns the value under &lt;code&gt;key&lt;/code&gt; if there is such a key, or &lt;code&gt;default&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not found.</source>
          <target state="translated">이러한 &lt;code&gt;key&lt;/code&gt; 있으면 키 아래의 값을 반환 하거나 &lt;code&gt;key&lt;/code&gt; 를 찾지 못하면 &lt;code&gt;default&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="3af843cadbfac1113304e7db687b00b1758b0e54" translate="yes" xml:space="preserve">
          <source>Returns the version of the underlying Regex engine.</source>
          <target state="translated">기본 정규식 엔진의 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af922ff6ebd15316652a53a13bd789e06e1f23aa" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is a struct of &lt;code&gt;name&lt;/code&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Returns true if &lt;code&gt;term&lt;/code&gt; is a struct of &lt;code&gt;name&lt;/code&gt; ; otherwise returns &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="373be6bd9bc30c786b2adfb4cf4440e08ef707c9" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is a struct; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Returns true if &lt;code&gt;term&lt;/code&gt; is a struct; otherwise returns &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75a0a4919d161080821fce71f93272a01bf13e4e" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is an exception of &lt;code&gt;name&lt;/code&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Returns true if &lt;code&gt;term&lt;/code&gt; is an exception of &lt;code&gt;name&lt;/code&gt; ; otherwise returns &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16443fde0771debdcb416187e4e9b40192f6a6e8" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;term&lt;/code&gt; is an exception; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Returns true if &lt;code&gt;term&lt;/code&gt; is an exception; otherwise returns &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78cdac4eb08c467f44dd89fc7e846deacd7708f7" translate="yes" xml:space="preserve">
          <source>Returns true if the current process can await for module compilation.</source>
          <target state="translated">현재 프로세스가 모듈 컴파일을 기다릴 수 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9b92f5e15d4121cfea6774176f91d79a7ff1ad71" translate="yes" xml:space="preserve">
          <source>Returns true if the release was copied, false otherwise.</source>
          <target state="translated">릴리스가 복사 되었으면 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5febd0aca2ae71b9183cb365b24eaa3298ba222" translate="yes" xml:space="preserve">
          <source>Returns whether a given &lt;code&gt;key&lt;/code&gt; exists in the given &lt;code&gt;keywords&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;keywords&lt;/code&gt; 에 주어진 &lt;code&gt;key&lt;/code&gt; 가 있는지 여부를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7d1348c5848b47392a61baf065679e3fe4bbd884" translate="yes" xml:space="preserve">
          <source>Returns whether the compilation environment is currently inside a guard.</source>
          <target state="translated">컴파일 환경이 현재 감시 내에 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d07dcf1758adbeddd9f6a8a1e7d76495004156ac" translate="yes" xml:space="preserve">
          <source>Returns whether the compilation environment is currently inside a match clause.</source>
          <target state="translated">컴파일 환경이 현재 일치 절 안에 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="198fd42b2e9a3935326202ead8ca134f2cac7795" translate="yes" xml:space="preserve">
          <source>Returns whether the given &lt;code&gt;key&lt;/code&gt; exists in the given &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;key&lt;/code&gt; 가 지정된 &lt;code&gt;map&lt;/code&gt; 존재 하는지를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="01fbde488cfeb2be87794669321f673adeab9228" translate="yes" xml:space="preserve">
          <source>Returns whether the logging is enabled for given process.</source>
          <target state="translated">주어진 프로세스에 대해 로깅이 활성화되었는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f15c934f199fc52996cd96ba7cb34c1dfc57796" translate="yes" xml:space="preserve">
          <source>Reverses the &lt;code&gt;enumerable&lt;/code&gt; in the range from initial &lt;code&gt;start_index&lt;/code&gt; through &lt;code&gt;count&lt;/code&gt; elements.</source>
          <target state="translated">초기 &lt;code&gt;start_index&lt;/code&gt; 에서 &lt;code&gt;count&lt;/code&gt; 요소 까지 범위에서 &lt;code&gt;enumerable&lt;/code&gt; 을 되돌 립니다.</target>
        </trans-unit>
        <trans-unit id="51ef45f336354a32dda3e205577483e8849e2250" translate="yes" xml:space="preserve">
          <source>Reverses the elements in &lt;code&gt;enumerable&lt;/code&gt;, appends the &lt;code&gt;tail&lt;/code&gt;, and returns it as a list.</source>
          <target state="translated">요소를 &lt;code&gt;enumerable&lt;/code&gt; 로 되돌리고 &lt;code&gt;tail&lt;/code&gt; 을 추가 한 다음 목록으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b84612001a4f1eaa6c97171fdc0b0c9f2ef21eae" translate="yes" xml:space="preserve">
          <source>Reverses the graphemes in given string.</source>
          <target state="translated">주어진 문자열에서 그래프를 반전시킵니다.</target>
        </trans-unit>
        <trans-unit id="da502a644e54b1ce6f094fca466290322f89787d" translate="yes" xml:space="preserve">
          <source>Right to left</source>
          <target state="translated">오른쪽에서 왼쪽으로</target>
        </trans-unit>
        <trans-unit id="8565eb000a57c1167c9162526ae9f7f67679477d" translate="yes" xml:space="preserve">
          <source>Rounds a float to the largest number less than or equal to &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">float를 &lt;code&gt;num&lt;/code&gt; 이하의 가장 큰 숫자로 반올림합니다 .</target>
        </trans-unit>
        <trans-unit id="d4d7ddf396c77d3a28aacfec25345f3233ed75ed" translate="yes" xml:space="preserve">
          <source>Rounds a float to the smallest integer greater than or equal to &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">float를 &lt;code&gt;num&lt;/code&gt; 보다 크거나 같은 가장 작은 정수로 올림 합니다.</target>
        </trans-unit>
        <trans-unit id="f2bfe2b43d2e555e7e1fc1953a64ed430131021f" translate="yes" xml:space="preserve">
          <source>Rounds a floating-point value to an arbitrary number of fractional digits (between 0 and 15).</source>
          <target state="translated">부동 소수점 값을 임의의 소수 자릿수 (0과 15 사이)로 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="9740f5d1fe5f451949c9d945ffaea21c8d9432a4" translate="yes" xml:space="preserve">
          <source>Rounds a number to the nearest integer.</source>
          <target state="translated">숫자를 가장 가까운 정수로 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="394ff7414ed58e9bb399195e5ae3da301b62e17d" translate="yes" xml:space="preserve">
          <source>Routing layer</source>
          <target state="translated">라우팅 레이어</target>
        </trans-unit>
        <trans-unit id="2cab34e43d5bf64f55c18070062b1bc29de8d797" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix help test&lt;/code&gt;&lt;/a&gt; for more information on how to run filters via Mix.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix help test&lt;/code&gt; &lt;/a&gt; 를 통해 필터를 실행하는 방법에 대한 자세한 정보는 믹스 도움말 테스트 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f49ea60a8e2caa16528ffe5a08a1e644ee38ac0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;iex -S mix&lt;/code&gt; so we can give our dynamic supervisor a try:</source>
          <target state="translated">&lt;code&gt;iex -S mix&lt;/code&gt; 를 실행 하여 동적 관리자에게 다음을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="858865eeebb714c4204dbc57a8ddb8b571d4940a" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Format.html&quot;&gt;code formatter&lt;/a&gt;. The code formatter formats your code according to a consistent style shared by your library and the whole community, making it easier for other developers to understand your code and contribute.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Format.html&quot;&gt;코드 포맷터를&lt;/a&gt; 실행하십시오 . 코드 포맷터는 라이브러리와 전체 커뮤니티가 공유하는 일관된 스타일에 따라 코드를 형식화하므로 다른 개발자가 코드를 이해하고 기여할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2561b01d11beb7887fdb55f789d105da46475bd7" translate="yes" xml:space="preserve">
          <source>Run the test suite and the doctest should fail:</source>
          <target state="translated">테스트 스위트를 실행하면 doctest가 실패해야합니다.</target>
        </trans-unit>
        <trans-unit id="502cb8247a0563cd3767c7c278a608b8f2c8d52e" translate="yes" xml:space="preserve">
          <source>Run the tests and they should all pass!</source>
          <target state="translated">테스트를 실행하면 모두 통과해야합니다!</target>
        </trans-unit>
        <trans-unit id="abce5e360ddf9e955294138f90e126f096dcc734" translate="yes" xml:space="preserve">
          <source>Running IEx in the directory where the above &lt;code&gt;.iex.exs&lt;/code&gt; file is located results in:</source>
          <target state="translated">위의 &lt;code&gt;.iex.exs&lt;/code&gt; 파일이 있는 디렉토리에서 IEx를 실행하면 다음이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="e8a30d8ac7729deb2e42d58fc103a0fb057a8270" translate="yes" xml:space="preserve">
          <source>Running commands</source>
          <target state="translated">명령 실행</target>
        </trans-unit>
        <trans-unit id="e1e0218f656dddcbb2f3c0fcf7777db3f26647dd" translate="yes" xml:space="preserve">
          <source>Running scripts</source>
          <target state="translated">스크립트 실행</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="ae6f4b64040963769b7f32a98c16f274e7e2534e" translate="yes" xml:space="preserve">
          <source>Running the formatter</source>
          <target state="translated">포맷터 실행</target>
        </trans-unit>
        <trans-unit id="df38332b0882d84326d5075dc4e909ea354360de" translate="yes" xml:space="preserve">
          <source>Running the release</source>
          <target state="translated">릴리스 실행</target>
        </trans-unit>
        <trans-unit id="2ad21e0961858c4a176621a74bbb6c251ecc92f2" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;task&lt;/code&gt; with the given &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;args&lt;/code&gt; 로 &lt;code&gt;task&lt;/code&gt; 을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="27f5a1001c04b3d326d3130b840b82e3d8b78086" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;fun&lt;/code&gt; inside the given project.</source>
          <target state="translated">주어진 프로젝트 내 에서 주어진 &lt;code&gt;fun&lt;/code&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="fc60430f8b509c1280cf05d516e5e479f037c43d" translate="yes" xml:space="preserve">
          <source>Runs the given stream.</source>
          <target state="translated">주어진 스트림을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d815a8f6506a6d2030fc71c5314a4b7cbc242ba3" translate="yes" xml:space="preserve">
          <source>Runs the regular expression against the given string until the first match. It returns a list with all captures or &lt;code&gt;nil&lt;/code&gt; if no match occurred.</source>
          <target state="translated">처음 일치 할 때까지 주어진 문자열에 대해 정규식을 실행합니다. 모든 캡처가 포함 된 목록을 반환하거나 일치하는 항목이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e5ffbfd911e0b566d41b50bdfa640dfbca592312" translate="yes" xml:space="preserve">
          <source>Runs the tests for a project.</source>
          <target state="translated">프로젝트 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="119006df7a024a81cf340543ca824cea7d8efa82" translate="yes" xml:space="preserve">
          <source>Runs the tests. It is invoked automatically if ExUnit is started via &lt;a href=&quot;#start/1&quot;&gt;&lt;code&gt;start/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">테스트를 실행합니다. ExUnit이 &lt;a href=&quot;#start/1&quot;&gt; &lt;code&gt;start/1&lt;/code&gt; 을&lt;/a&gt; 통해 시작 되면 자동으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="222cad2bd37e45b5f33d5d967590f4b613622bfd" translate="yes" xml:space="preserve">
          <source>Runtime Configuration</source>
          <target state="translated">런타임 구성</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">런타임 구성</target>
        </trans-unit>
        <trans-unit id="bef3d737e1cd6b54fa5c0c009af907047c31c70e" translate="yes" xml:space="preserve">
          <source>Runtime configuration - can be set before the &lt;code&gt;:logger&lt;/code&gt; application is started, but may be changed during runtime</source>
          <target state="translated">런타임 구성- &lt;code&gt;:logger&lt;/code&gt; 응용 프로그램을 시작 하기 전에 설정할 수 있지만 런타임 중에 변경 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ff26f39d83b123ccb1a1c98811df39ff106ea3d2" translate="yes" xml:space="preserve">
          <source>Runtime dependencies are added whenever you invoke another module inside a function. Modules with runtime dependencies do not have to be compiled when the callee changes, unless there is a transitive compile or export time dependency between them.</source>
          <target state="translated">함수 내에서 다른 모듈을 호출 할 때마다 런타임 종속성이 추가됩니다. 런타임 종속성이있는 모듈은 그들 사이에 전 이적 컴파일 또는 내보내기 시간 종속성이없는 경우 호출 수신자가 변경 될 때 컴파일 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f1be8bbdfa39d80e63d75464d871ca752fb54889" translate="yes" xml:space="preserve">
          <source>RuntimeError</source>
          <target state="translated">RuntimeError</target>
        </trans-unit>
        <trans-unit id="2367bc1690bc7150c00e3cc3a74e421b0f5a75af" translate="yes" xml:space="preserve">
          <source>RuntimeError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">RuntimeError &lt;small&gt;예외&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="e6e3167edd23dbf899b58fa5a6d66a01d35194a0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#at/1&quot;&gt;&lt;code&gt;at/1&lt;/code&gt;&lt;/a&gt; except that it raises &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.OutOfBoundsError.html&quot;&gt;&lt;code&gt;Enum.OutOfBoundsError&lt;/code&gt;&lt;/a&gt; if the given index is out of bounds.</source>
          <target state="translated">주어진 인덱스가 범위를 벗어난 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.OutOfBoundsError.html&quot;&gt; &lt;code&gt;Enum.OutOfBoundsError&lt;/code&gt; 가&lt;/a&gt; 발생 한다는 점을 제외하면 &lt;a href=&quot;#at/1&quot;&gt; &lt;code&gt;at/1&lt;/code&gt; &lt;/a&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="48afa22bba76fdc43e8ef8f37036831d587b298b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/2&quot;&gt;&lt;code&gt;cast/2&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#cast/2&quot;&gt; &lt;code&gt;cast/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 익명 함수 대신 모듈, 함수 및 인수가 필요합니다. 주어진 인수 목록에 상태가 첫 번째 인수로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6186d6c9aeff961c16e5da9e96a9c93e25a101" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chgrp/2&quot;&gt;&lt;code&gt;chgrp/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chgrp/2&quot;&gt; &lt;code&gt;chgrp/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69296d112ff3af6c5df54cb070d2348a8f3612cf" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chgrp/2&quot;&gt;&lt;code&gt;chgrp/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chgrp/2&quot;&gt; &lt;code&gt;chgrp/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5551163d02c8194e2886a885aa06654149c83ba" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chmod/2&quot;&gt;&lt;code&gt;chmod/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chmod/2&quot;&gt; &lt;code&gt;chmod/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe9824c72b0e3e90519110a7c5244b6978c151fe" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chmod/2&quot;&gt;&lt;code&gt;chmod/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chmod/2&quot;&gt; &lt;code&gt;chmod/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="452a2701829e8135c60bab1ba0681e8954ffe2b7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chown/2&quot;&gt;&lt;code&gt;chown/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chown/2&quot;&gt; &lt;code&gt;chown/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7eefd845404a1af9a5973a6d27c4f19e7a383cb" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#chown/2&quot;&gt;&lt;code&gt;chown/2&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chown/2&quot;&gt; &lt;code&gt;chown/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0949047f6cf1d6ba67f61109f1b819c88cfe7a7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#defrecord/3&quot;&gt;&lt;code&gt;defrecord/3&lt;/code&gt;&lt;/a&gt; but generates private macros.</source>
          <target state="translated">&lt;a href=&quot;#defrecord/3&quot;&gt; &lt;code&gt;defrecord/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 개인용 매크로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cf2f22a3a1f7b55255793e20c9f4a438a4f902ed" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; but returns the value directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/KeyError.html&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if &lt;code&gt;key&lt;/code&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 값을 직접 반환하거나 &lt;code&gt;key&lt;/code&gt; 를 찾을 수없는 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/KeyError.html&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="8e9194a522fb8fb657e281729e962d0ed06857f7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get/0&quot;&gt;&lt;code&gt;get/0&lt;/code&gt;&lt;/a&gt;, but raises an exception if there is no current project.</source>
          <target state="translated">&lt;a href=&quot;#get/0&quot;&gt; &lt;code&gt;get/0&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 현재 프로젝트가 없으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1a5ebf1a38b49af9938b5e72845065800dbdcff3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 익명 함수 대신 모듈, 함수 및 인수가 필요합니다. 주어진 인수 목록에 상태가 첫 번째 인수로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="454d80b60394294842383e45eb87437d14c3f75a" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get_and_update/3&quot;&gt;&lt;code&gt;get_and_update/3&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#get_and_update/3&quot;&gt; &lt;code&gt;get_and_update/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 익명 함수 대신 모듈, 함수 및 인수가 필요합니다. 주어진 인수 목록에 상태가 첫 번째 인수로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="51fc3a99abe232080d3ba08eef47a68cfc7ea01d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#get_env/1&quot;&gt;&lt;code&gt;get_env/1&lt;/code&gt;&lt;/a&gt; but raises instead of returning &lt;code&gt;nil&lt;/code&gt; when the variable is not set.</source>
          <target state="translated">&lt;a href=&quot;#get_env/1&quot;&gt; &lt;code&gt;get_env/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 변수가 설정되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환하는 대신 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c7f2b70e8cfe5f2634b92d0a6549de81f8bd0c0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln/2&quot;&gt;&lt;code&gt;ln/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.linkerror&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln/2&quot;&gt; &lt;code&gt;ln/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;file.linkerror&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="53cbae5857cb670f52634d5450b9fdb4c0bef065" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln/2&quot;&gt;&lt;code&gt;ln/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln/2&quot;&gt; &lt;code&gt;ln/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="62ec00d18d6c7c4096134aa08579c416180f7b6c" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln_s/2&quot;&gt;&lt;code&gt;ln_s/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.linkerror&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln_s/2&quot;&gt; &lt;code&gt;ln_s/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;file.linkerror&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="cd5ac3e5838dd561369ea6873a2105776541e58f" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#ln_s/2&quot;&gt;&lt;code&gt;ln_s/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt;&lt;code&gt;File.LinkError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ln_s/2&quot;&gt; &lt;code&gt;ln_s/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.LinkError.html&quot;&gt; &lt;code&gt;File.LinkError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="98a4a1fa45aa8e47b2fe2b04f4757dac9baf83e3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#lstat/2&quot;&gt;&lt;code&gt;lstat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct directly, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#lstat/2&quot;&gt; &lt;code&gt;lstat/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 &lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; 구조체를 직접 반환 하거나 오류가 반환되면 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="ef31648ed5697cb0efd84f6aa0e0a61571925586" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#lstat/2&quot;&gt;&lt;code&gt;lstat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; struct directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#lstat/2&quot;&gt; &lt;code&gt;lstat/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; &lt;/a&gt; 구조체를 직접 반환 하거나 오류가 반환되면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="5a1ac89b3d9b7123dddd932cfa309cb1e771fec8" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir/1&quot;&gt;&lt;code&gt;mkdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir/1&quot;&gt; &lt;code&gt;mkdir/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e916d802d3de71569ff931ffbcb4f1eceb125c9d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir/1&quot;&gt;&lt;code&gt;mkdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir/1&quot;&gt; &lt;code&gt;mkdir/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36da26cc0d9ef98b6d7a837321a0b850aa977e10" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir_p/1&quot;&gt;&lt;code&gt;mkdir_p/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir_p/1&quot;&gt; &lt;code&gt;mkdir_p/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a19b8aa624334705800e8a1ac9d5d0361d31a6d3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#mkdir_p/1&quot;&gt;&lt;code&gt;mkdir_p/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mkdir_p/1&quot;&gt; &lt;code&gt;mkdir_p/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f817cb5944a5943ab83623cde62144c04d14cd3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#read_link/1&quot;&gt;&lt;code&gt;read_link/1&lt;/code&gt;&lt;/a&gt; but returns the target directly, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#read_link/1&quot;&gt; &lt;code&gt;read_link/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 대상을 직접 반환하거나 오류가 반환되면 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="8951c3bac4ae5dffa4c5bbea3daceb6ccde41c9e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#read_link/1&quot;&gt;&lt;code&gt;read_link/1&lt;/code&gt;&lt;/a&gt; but returns the target directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#read_link/1&quot;&gt; &lt;code&gt;read_link/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 대상을 직접 반환하거나 오류가 반환되면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="d59c6eed3d63d4d8a3c113ef08c30a24189a97d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm/1&quot;&gt;&lt;code&gt;rm/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rm/1&quot;&gt; &lt;code&gt;rm/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63a1737ebe7a1f4b8baac187d9e892d887a5e227" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm/1&quot;&gt;&lt;code&gt;rm/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rm/1&quot;&gt; &lt;code&gt;rm/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb0d2ee4285409ea9feb23a66cf1147cd51c9979" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failures, otherwise the list of files or directories removed.</source>
          <target state="translated">&lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 파일 또는 디렉토리 목록이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b25c71a5b0c32195108d4191f8034583b1760af2" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failures, otherwise the list of files or directories removed.</source>
          <target state="translated">&lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생하고 그렇지 않으면 파일 또는 디렉토리 목록이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="ca1993cb0cbd43a38f474d1155f5b7b631b2f919" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rmdir/1&quot;&gt;&lt;code&gt;rmdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rmdir/1&quot;&gt; &lt;code&gt;rmdir/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패시 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4acd9651df159887b04e83b3fb157d24bc9da094" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#rmdir/1&quot;&gt;&lt;code&gt;rmdir/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of failure. Otherwise &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rmdir/1&quot;&gt; &lt;code&gt;rmdir/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 실패 할 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 그렇지 않으면 &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="575d3a4dccc355486708c0f537c0716004925b5b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#run/3&quot;&gt;&lt;code&gt;run/3&lt;/code&gt;&lt;/a&gt;, but scans the target several times collecting all matches of the regular expression.</source>
          <target state="translated">&lt;a href=&quot;#run/3&quot;&gt; &lt;code&gt;run/3&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 정규식의 모든 일치 항목을 수집하여 대상을 여러 번 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="a8119ce98300dd3b62b884b623f2b5c032fd9ac9" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#setup_all/1&quot;&gt;&lt;code&gt;setup_all/1&lt;/code&gt;&lt;/a&gt; but also takes a context. See the &quot;Context&quot; section in the module documentation.</source>
          <target state="translated">동일 &lt;a href=&quot;#setup_all/1&quot;&gt; &lt;code&gt;setup_all/1&lt;/code&gt; &lt;/a&gt; 도하지만 문맥을합니다. 모듈 문서의 &quot;컨텍스트&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b77457b6b2b1ee2217867a7c46a67495e6e62c68" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; but also starts the applications listed under &lt;code&gt;:applications&lt;/code&gt; in the &lt;code&gt;.app&lt;/code&gt; file in case they were not previously started.</source>
          <target state="translated">동일 &lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; &lt;/a&gt; 도하지만 아래에 나열된 응용 프로그램 시작 &lt;code&gt;:applications&lt;/code&gt; 에 &lt;code&gt;.app&lt;/code&gt; 경우 파일을 그들은 이전에 시작되지 않았다.</target>
        </trans-unit>
        <trans-unit id="e78793e6d643221f3a0ae420ea08015425edcec9" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; but returns &lt;code&gt;:ok&lt;/code&gt; if the application was already started. This is useful in scripts and in test setup, where test applications need to be explicitly started:</source>
          <target state="translated">응용 프로그램이 이미 시작된 경우 &lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 &lt;code&gt;:ok&lt;/code&gt; 를 반환합니다 . 이는 테스트 응용 프로그램을 명시 적으로 시작해야하는 스크립트 및 테스트 설정에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0a3828c1ba3c6005e9c3108c08cdb5024ed08348" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start_link/2&quot;&gt;&lt;code&gt;start_link/2&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function; &lt;code&gt;fun&lt;/code&gt; in &lt;code&gt;module&lt;/code&gt; will be called with the given arguments &lt;code&gt;args&lt;/code&gt; to initialize the state.</source>
          <target state="translated">&lt;a href=&quot;#start_link/2&quot;&gt; &lt;code&gt;start_link/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 익명 함수 대신 모듈, 함수 및 인수가 필요합니다. &lt;code&gt;fun&lt;/code&gt; 의 &lt;code&gt;module&lt;/code&gt; 주어진 인수로 호출됩니다 &lt;code&gt;args&lt;/code&gt; 상태를 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7642aeb9f07cd0551ad686039cb0019e61b10b4" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#start_supervised/2&quot;&gt;&lt;code&gt;start_supervised/2&lt;/code&gt;&lt;/a&gt; but returns the PID on success and raises if not started properly.</source>
          <target state="translated">&lt;a href=&quot;#start_supervised/2&quot;&gt; &lt;code&gt;start_supervised/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 성공시 PID를 반환하고 올바르게 시작되지 않으면 상승합니다.</target>
        </trans-unit>
        <trans-unit id="b74921cc1238626c0cdfe7d517884a5434d9754d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;file.stat&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; directly, or raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 &lt;a href=&quot;file.stat&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; 를&lt;/a&gt; 직접 반환 하거나 오류가 반환되면 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="58ee48292e77c54c338409215ea0e4154d0a74cd" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#stat/2&quot;&gt;&lt;code&gt;stat/2&lt;/code&gt;&lt;/a&gt; but returns the &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt;&lt;code&gt;File.Stat&lt;/code&gt;&lt;/a&gt; directly, or raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if an error is returned.</source>
          <target state="translated">&lt;a href=&quot;#stat/2&quot;&gt; &lt;code&gt;stat/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Stat.html&quot;&gt; &lt;code&gt;File.Stat&lt;/code&gt; 를&lt;/a&gt; 직접 반환 하거나 오류가 반환되면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="dd2effc797ddede6a7aa32cd7994b68da2dcb33d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#stop_supervised/1&quot;&gt;&lt;code&gt;stop_supervised/1&lt;/code&gt;&lt;/a&gt; but raises if it cannot be stopped.</source>
          <target state="translated">&lt;a href=&quot;#stop_supervised/1&quot;&gt; &lt;code&gt;stop_supervised/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 중지 할 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ae7155b178d9750b819a572ae3567be8cfaae862" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tmp_dir/0&quot;&gt;&lt;code&gt;tmp_dir/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no temp dir is set.</source>
          <target state="translated">&lt;a href=&quot;#tmp_dir/0&quot;&gt; &lt;code&gt;tmp_dir/0&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 임시 디렉토리가 설정되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환하는 대신 &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="752522d479f590f393198cc7a71e949163e1bfc7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tmp_dir/0&quot;&gt;&lt;code&gt;tmp_dir/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no temp dir is set.</source>
          <target state="translated">&lt;a href=&quot;#tmp_dir/0&quot;&gt; &lt;code&gt;tmp_dir/0&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 temp dir이 설정되어 있지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환하는 대신 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0f0e9ffc8fa804b8724f92c838bc286537c2fe1b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#touch/2&quot;&gt;&lt;code&gt;touch/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#touch/2&quot;&gt; &lt;code&gt;touch/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="ce963fff25685f29eb854818d261e2854d35fa93" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#touch/2&quot;&gt;&lt;code&gt;touch/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#touch/2&quot;&gt; &lt;code&gt;touch/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="f77f681371830c84b3006064d21f15db82e03e0f" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#update/3&quot;&gt;&lt;code&gt;update/3&lt;/code&gt;&lt;/a&gt; but a module, function, and arguments are expected instead of an anonymous function. The state is added as first argument to the given list of arguments.</source>
          <target state="translated">&lt;a href=&quot;#update/3&quot;&gt; &lt;code&gt;update/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 익명 함수 대신 모듈, 함수 및 인수가 필요합니다. 주어진 인수 목록에 상태가 첫 번째 인수로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a0b40ed8100f9c5f15887812110fdf67031d3bb6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#user_home/0&quot;&gt;&lt;code&gt;user_home/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no user home is set.</source>
          <target state="translated">&lt;a href=&quot;#user_home/0&quot;&gt; &lt;code&gt;user_home/0&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 사용자 홈이 설정되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환하는 대신 &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="66821177dd6aa530fcb0000506d72a8e2ab408e7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#user_home/0&quot;&gt;&lt;code&gt;user_home/0&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; instead of returning &lt;code&gt;nil&lt;/code&gt; if no user home is set.</source>
          <target state="translated">&lt;a href=&quot;#user_home/0&quot;&gt; &lt;code&gt;user_home/0&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 사용자 홈이 설정되어 있지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환하는 대신 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8977282b08efdcece77456c7255cb72c1b1e4397" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write/3&quot;&gt;&lt;code&gt;write/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write/3&quot;&gt; &lt;code&gt;write/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="da43cb357526d39be851295db9ced6a5928f117e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write/3&quot;&gt;&lt;code&gt;write/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write/3&quot;&gt; &lt;code&gt;write/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="0e1bb5e835ea84efb6ed3926f6ca1a526b10413b" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write_stat/3&quot;&gt;&lt;code&gt;write_stat/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write_stat/3&quot;&gt; &lt;code&gt;write_stat/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="d99da87360ba77fb6f7376936615aeba4dffbbed" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#write_stat/3&quot;&gt;&lt;code&gt;write_stat/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#write_stat/3&quot;&gt; &lt;code&gt;write_stat/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 실패하면 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 반환 &lt;code&gt;:ok&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="0e420af5a80458e93aaceadae51899a9fda1e40e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;list(:visible)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list(:visible)&lt;/code&gt; 과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="3a2788ea60da9cbed396e6fb45b36d1e06c38473" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;load/2&lt;/code&gt; but returns &lt;code&gt;:ok&lt;/code&gt; if the application was already loaded.</source>
          <target state="translated">동일 &lt;code&gt;load/2&lt;/code&gt; 만 반환 &lt;code&gt;:ok&lt;/code&gt; 응용 프로그램이 이미로드 된 경우.</target>
        </trans-unit>
        <trans-unit id="72636a9e74014e05a068fdeb4cbbbe0b8cdb277c" translate="yes" xml:space="preserve">
          <source>Sample config provider</source>
          <target state="translated">샘플 구성 제공자</target>
        </trans-unit>
        <trans-unit id="96628af1c348f649b32608354d505436e3d1b258" translate="yes" xml:space="preserve">
          <source>Save it as &lt;code&gt;simple.exs&lt;/code&gt; and execute it with &lt;code&gt;elixir&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;simple.exs&lt;/code&gt; 로 저장하고 &lt;code&gt;elixir&lt;/code&gt; 로 실행하십시오 :</target>
        </trans-unit>
        <trans-unit id="1469fbd916831395b6490858a3b537c06e6af8b1" translate="yes" xml:space="preserve">
          <source>Say we have a &lt;code&gt;LousyCalculator&lt;/code&gt; module, which performs the usual arithmetic operations (sum, product, and so on) but, instead of returning numbers, it returns tuples with the result of an operation as the first element and a random remark as the second element.</source>
          <target state="translated">일반적인 산술 연산 (합계, 곱 등)을 수행 하는 &lt;code&gt;LousyCalculator&lt;/code&gt; 모듈이 있지만 숫자를 반환하는 대신 연산 결과를 첫 번째 요소로, 튜플을 두 번째 요소로 반환한다고 가정합니다. .</target>
        </trans-unit>
        <trans-unit id="97a0b16b16a4b9ffa852bc90badc2708b654ea72" translate="yes" xml:space="preserve">
          <source>Say we want to implement a bunch of parsers, each parsing structured data: for example, a JSON parser and a MessagePack parser. Each of these two parsers will &lt;em&gt;behave&lt;/em&gt; the same way: both will provide a &lt;code&gt;parse/1&lt;/code&gt; function and an &lt;code&gt;extensions/0&lt;/code&gt; function. The &lt;code&gt;parse/1&lt;/code&gt; function will return an Elixir representation of the structured data, while the &lt;code&gt;extensions/0&lt;/code&gt; function will return a list of file extensions that can be used for each type of data (e.g., &lt;code&gt;.json&lt;/code&gt; for JSON files).</source>
          <target state="translated">JSON 구문 분석기 및 MessagePack 구문 분석기와 같이 각각 구문 분석 된 구조화 된 데이터 인 여러 구문 분석기를 구현하려고한다고 가정하십시오. 이 두 파서는 각각 같은 방식으로 &lt;em&gt;작동&lt;/em&gt; 합니다. 둘 다 &lt;code&gt;parse/1&lt;/code&gt; 기능과 &lt;code&gt;extensions/0&lt;/code&gt; 기능을 제공합니다. &lt;code&gt;parse/1&lt;/code&gt; 그동안 함수 구조화 데이터 엘릭서 표현을 반환 &lt;code&gt;extensions/0&lt;/code&gt; 함수가 각각의 데이터 타입에 이용 될 수있는 파일의 확장자 목록을 반환한다 (예 &lt;code&gt;.json&lt;/code&gt; JSON 파일).</target>
        </trans-unit>
        <trans-unit id="f797ec069a3a588cc93b2d7e7b51ec1b87b751dc" translate="yes" xml:space="preserve">
          <source>Scripted mode</source>
          <target state="translated">스크립트 모드</target>
        </trans-unit>
        <trans-unit id="2a4bcae654f264daf22579fb462bf0bae302a057" translate="yes" xml:space="preserve">
          <source>Second</source>
          <target state="translated">Second</target>
        </trans-unit>
        <trans-unit id="8847aea2b37857c4fe9c4e29d9a32c95be30e798" translate="yes" xml:space="preserve">
          <source>Second, IEx allows you to break an expression into many lines, since this is common in Elixir. For example:</source>
          <target state="translated">둘째, IEx를 사용하면 표현식을 여러 줄로 나눌 수 있습니다. 이는 Elixir에서 일반적이기 때문입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="80863c7291923af44e1f330d4438e654d8c8d816" translate="yes" xml:space="preserve">
          <source>Security patches only</source>
          <target state="translated">보안 패치 만</target>
        </trans-unit>
        <trans-unit id="f87ff12a5586b140b44d0aed5d1141d157905ed6" translate="yes" xml:space="preserve">
          <source>Security: a security issue in the implementation may arise whose resolution requires backwards incompatible changes. We reserve the right to address such security issues.</source>
          <target state="translated">보안 : 구현시 보안 문제가 발생하여 이전 버전과 호환되지 않는 변경이 필요합니다. 우리는 그러한 보안 문제를 해결할 권리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d297aad6172ead65e3f02dab6f6aac40aa79934" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#async_stream/5&quot;&gt;&lt;code&gt;async_stream/5&lt;/code&gt;&lt;/a&gt; for discussion, options, and more examples.</source>
          <target state="translated">토론, 옵션 및 기타 예제는 &lt;a href=&quot;#async_stream/5&quot;&gt; &lt;code&gt;async_stream/5&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9ea2a4f9446b7042ac45e1cc5f076950d4c363d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#async_stream/6&quot;&gt;&lt;code&gt;async_stream/6&lt;/code&gt;&lt;/a&gt; for discussion and examples.</source>
          <target state="translated">토론 및 예제는 &lt;a href=&quot;#async_stream/6&quot;&gt; &lt;code&gt;async_stream/6&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab0b50cd928f15f49cfb5f68465e7dfe1adc62ce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#async_stream/6&quot;&gt;&lt;code&gt;async_stream/6&lt;/code&gt;&lt;/a&gt; for discussion, options, and examples.</source>
          <target state="translated">토론, 옵션 및 예제는 &lt;a href=&quot;#async_stream/6&quot;&gt; &lt;code&gt;async_stream/6&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c711218ea0622a68dc6c47b17be58ae3b4864c62" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#compile_file/2&quot;&gt;&lt;code&gt;compile_file/2&lt;/code&gt;&lt;/a&gt; if you would like to compile a file without tracking its filenames. Finally, if you would like to get the result of evaluating a file rather than the modules defined in it, see &lt;a href=&quot;#eval_file/2&quot;&gt;&lt;code&gt;eval_file/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파일 이름을 추적하지 않고 파일을 컴파일하려면 &lt;a href=&quot;#compile_file/2&quot;&gt; &lt;code&gt;compile_file/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 . 마지막으로, 파일에 정의 된 모듈이 아닌 파일을 평가 한 결과를 얻으려면 &lt;a href=&quot;#eval_file/2&quot;&gt; &lt;code&gt;eval_file/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6204a9c040341b764a2faf52239bda6c2bbaf5b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#compiler_options/1&quot;&gt;&lt;code&gt;compiler_options/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#compiler_options/1&quot;&gt; &lt;code&gt;compiler_options/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8acee194aad3daee245a1266feffabc3fee2e4f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#encode_www_form/1&quot;&gt;&lt;code&gt;encode_www_form/1&lt;/code&gt;&lt;/a&gt; if you are interested in escaping reserved characters too.</source>
          <target state="translated">예약 된 문자를 이스케이프하려는 경우 &lt;a href=&quot;#encode_www_form/1&quot;&gt; &lt;code&gt;encode_www_form/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e611f60301c28b28d34681daac56111d0fc4c7be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#eval_string/3&quot;&gt;&lt;code&gt;eval_string/3&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;binding&lt;/code&gt; and options.</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; 및 옵션 에 대한 설명은 &lt;a href=&quot;#eval_string/3&quot;&gt; &lt;code&gt;eval_string/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ca396c98cfdbd4e90a303c7e6adb445c5b12ce0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#eval_string/3&quot;&gt;&lt;code&gt;eval_string/3&lt;/code&gt;&lt;/a&gt; for a description of bindings and options.</source>
          <target state="translated">바인딩 및 옵션에 대한 설명은 &lt;a href=&quot;#eval_string/3&quot;&gt; &lt;code&gt;eval_string/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a25453935310383344a90ea3aef438a7fa788ccc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#format_string!/2&quot;&gt;&lt;code&gt;format_string!/2&lt;/code&gt;&lt;/a&gt; for more information on code formatting and available options.</source>
          <target state="translated">코드 형식 및 사용 가능한 옵션에 대한 자세한 내용 은 &lt;a href=&quot;#format_string!/2&quot;&gt; &lt;code&gt;format_string!/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e6ede686bbbc8be3fd59893f9004d60af9a622cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#getn/3&quot;&gt;&lt;code&gt;IO.getn/3&lt;/code&gt;&lt;/a&gt; for a description of return values.</source>
          <target state="translated">반환 값에 대한 설명은 &lt;a href=&quot;#getn/3&quot;&gt; &lt;code&gt;IO.getn/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2883129c68b02ac70cbb305db2bb3985757fe9f2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#inspect/2&quot;&gt;&lt;code&gt;inspect/2&lt;/code&gt;&lt;/a&gt; for a full list of options.</source>
          <target state="translated">전체 옵션 목록은 &lt;a href=&quot;#inspect/2&quot;&gt; &lt;code&gt;inspect/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6775db0edf91fd1bcde122f816eb64ab4807cb75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#line/0&quot;&gt;&lt;code&gt;line/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#line/0&quot;&gt; &lt;code&gt;line/0&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e856b9a0b3c384f7599e00c066aa601e20cd32e9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#multi_call/4&quot;&gt;&lt;code&gt;multi_call/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#multi_call/4&quot;&gt; &lt;code&gt;multi_call/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="412e2ee91670d1cb67318a56aed59f181db3e2c1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#myers_difference/3&quot;&gt;&lt;code&gt;myers_difference/3&lt;/code&gt;&lt;/a&gt; if you want to handle nesting in the diff scripts.</source>
          <target state="translated">diff 스크립트에서 중첩을 처리하려면 &lt;a href=&quot;#myers_difference/3&quot;&gt; &lt;code&gt;myers_difference/3&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f9ef13c719ed6d23f577cb59bb94384ed2c4ffcd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#now/2&quot;&gt;&lt;code&gt;now/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#now/2&quot;&gt; &lt;code&gt;now/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5383aa98051793554179d6dd9886bd65adc02068" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; for the list of available &lt;code&gt;modes&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 &lt;code&gt;modes&lt;/code&gt; 목록은 &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9443c84eb6a0e5596d38a53c0ea69e901bb5f63" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; for the list of available modes.</source>
          <target state="translated">사용 가능한 모드 목록은 &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72587bfb37893ece855338ff229de106ec981e60" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a60c62583c5e98de75e0009105889ad004974083" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#random/1&quot;&gt;&lt;code&gt;random/1&lt;/code&gt;&lt;/a&gt; for notes on implementation and random seed.</source>
          <target state="translated">구현 및 임의 시드에 대한 참고 사항 은 &lt;a href=&quot;#random/1&quot;&gt; &lt;code&gt;random/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d748ec4ca0ee9bfc4f418d05c4495aa5f4146c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#shift_zone/3&quot;&gt;&lt;code&gt;shift_zone/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;#shift_zone/3&quot;&gt; &lt;code&gt;shift_zone/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f79bab9f64b4c1b4a45f5094f7ec3cc5e70348f2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#spec/1&quot;&gt;&lt;code&gt;spec/1&lt;/code&gt;&lt;/a&gt; for the supported keys. If the given specification parameter does not exist, this function will raise. Returns &lt;code&gt;nil&lt;/code&gt; if the application is not loaded.</source>
          <target state="translated">지원되는 키에 대해서는 &lt;a href=&quot;#spec/1&quot;&gt; &lt;code&gt;spec/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 . 주어진 사양 매개 변수가 존재하지 않으면이 기능이 상승합니다. 응용 프로그램이로드되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4b86593efd6d87f56f5a4b1d1c80f9efa89b9f35" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#start_link/2&quot;&gt;&lt;code&gt;start_link/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#start_link/2&quot;&gt; &lt;code&gt;start_link/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9104acc9f7e509727a191a9c211563bc8c6b8821" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="30ce1591410e8c20c70a914da2c1f177eba54a6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#start_link/4&quot;&gt;&lt;code&gt;start_link/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#start_link/4&quot;&gt; &lt;code&gt;start_link/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="025b78a6ec53671f1f70eaadb8c6a69193d1552c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#time_offset/1&quot;&gt;&lt;code&gt;time_offset/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#time_offset/1&quot;&gt; &lt;code&gt;time_offset/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="85b0baaaca71d7d382229291aee3fadaa203940b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;calendar#c:day_rollover_relative_to_midnight_utc/0&quot;&gt;&lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt;&lt;/a&gt; for documentation.</source>
          <target state="translated">설명서는 &lt;a href=&quot;calendar#c:day_rollover_relative_to_midnight_utc/0&quot;&gt; &lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="39aa7c276c8b00b83eda4436db990a46be4f135d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;calendar.timezonedatabase&quot;&gt;&lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt;&lt;/a&gt; for more information on custom time zone databases.</source>
          <target state="translated">사용자 지정 표준 시간대 데이터베이스에 대한 자세한 내용 은 &lt;a href=&quot;calendar.timezonedatabase&quot;&gt; &lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b437e60993127a72d9f00604cb32048636bf30b7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;exunit.case&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exunit.callbacks&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt; for more information about defining test cases and setting up callbacks.</source>
          <target state="translated">참조 &lt;a href=&quot;exunit.case&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;exunit.callbacks&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; 을&lt;/a&gt; 테스트 케이스를 정의하고 콜백을 설정하는 방법에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="c5e92f1a723af642ec18095ee3c3e5a7b44a5253" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#demonitor-2&quot;&gt;&lt;code&gt;:erlang.demonitor/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#demonitor-2&quot;&gt; &lt;code&gt;:erlang.demonitor/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="236c47cfb4f80177fcf2f8fee345fdbbdb89da09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#hibernate-3&quot;&gt;&lt;code&gt;:erlang.hibernate/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#hibernate-3&quot;&gt; &lt;code&gt;:erlang.hibernate/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eb6d7556c0af02d5c3798524709f1fdfd3d33b21" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#link-1&quot;&gt;&lt;code&gt;:erlang.link/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#link-1&quot;&gt; &lt;code&gt;:erlang.link/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b294ce31a8bb19561980ff4b847d775b1ea0dc45" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt;&lt;code&gt;:erlang.monitor/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt; &lt;code&gt;:erlang.monitor/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="937ed9e63e3b26fc6260095741b862928cedd6d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-2&quot;&gt;&lt;code&gt;:erlang.process_flag/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-2&quot;&gt; &lt;code&gt;:erlang.process_flag/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5cb7732eb146e3fb56c4b2718c19b9b1594162d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-3&quot;&gt;&lt;code&gt;:erlang.process_flag/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_flag-3&quot;&gt; &lt;code&gt;:erlang.process_flag/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1b8a68e27e33937ed393acd9f8bbbb6ac56124be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-1&quot;&gt;&lt;code&gt;:erlang.process_info/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-1&quot;&gt; &lt;code&gt;:erlang.process_info/1&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c57f8a3d92d9199927d2cc7fa62dbb000dd3236c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-2&quot;&gt;&lt;code&gt;:erlang.process_info/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#process_info-2&quot;&gt; &lt;code&gt;:erlang.process_info/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="09e49090898de7a7c2f63c4761f683b4aa8ffefe" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#processes-0&quot;&gt;&lt;code&gt;:erlang.processes/0&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#processes-0&quot;&gt; &lt;code&gt;:erlang.processes/0&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c9b42c9b4711df8ae0d4cbe5f4d34c94df707f05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#unlink-1&quot;&gt;&lt;code&gt;:erlang.unlink/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#unlink-1&quot;&gt; &lt;code&gt;:erlang.unlink/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="90a52cb46cb51ef1c81084e7b546e8f0e253d2e0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#whereis-1&quot;&gt;&lt;code&gt;:erlang.whereis/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#whereis-1&quot;&gt; &lt;code&gt;:erlang.whereis/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="17e5bc7119d17d5e936d1012e37bfd0ad107efba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://elixir-lang.org/getting-started/mix-otp/genserver.html#the-need-for-monitoring&quot;&gt;the need for monitoring&lt;/a&gt; for an example. See &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt;&lt;code&gt;:erlang.monitor/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">예를 보려면 &lt;a href=&quot;https://elixir-lang.org/getting-started/mix-otp/genserver.html#the-need-for-monitoring&quot;&gt;모니터링 필요성을&lt;/a&gt; 참조하십시오 . 자세한 내용은 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor-2&quot;&gt; &lt;code&gt;:erlang.monitor/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e0c3f01512f58907c7a7cd3cde0a0895c0deafbd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.TimeZoneDatabase.html&quot;&gt;&lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt;&lt;/a&gt; for more information on custom time zone databases.</source>
          <target state="translated">사용자 정의 시간대 데이터베이스에 대한 자세한 내용 은 &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.TimeZoneDatabase.html&quot;&gt; &lt;code&gt;Calendar.TimeZoneDatabase&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d39dbfd198e71a35b61d43d938835092418fb95" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#c:day_rollover_relative_to_midnight_utc/0&quot;&gt;&lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt;&lt;/a&gt; for documentation.</source>
          <target state="translated">설명서는 &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#c:day_rollover_relative_to_midnight_utc/0&quot;&gt; &lt;code&gt;Calendar.day_rollover_relative_to_midnight_utc/0&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="334d32997c282eeeeb84b2303486421a48c111cd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Function.html&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Function.html&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="620cb8de6ae1a2b9a0cf8721fa8840096789cf30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; for a full list of remaining formatting options.</source>
          <target state="translated">나머지 서식 옵션의 전체 목록은 &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt; 를 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="ff292d29bb98bb0fb3e3262c9d111868a43a1bea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; for the full list of options.</source>
          <target state="translated">참조 &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt; 옵션의 전체 목록을.</target>
        </trans-unit>
        <trans-unit id="6cf00eaea6c021a1b10fc534dc36f0afa759156e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#import/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt;&lt;/a&gt; for more information on importing.</source>
          <target state="translated">참조 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#import/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt; 를&lt;/a&gt; 가져 오기에 대한 자세한 내용을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f80093b4a4b4bffa28bc84780eefc07e11b44b2f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defoverridable/1&quot;&gt;&lt;code&gt;Kernel.defoverridable/1&lt;/code&gt;&lt;/a&gt; for more information and documentation.</source>
          <target state="translated">자세한 정보와 문서는 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defoverridable/1&quot;&gt; &lt;code&gt;Kernel.defoverridable/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="18608b11c1121dbb962c735470194553f805b88e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#run/1&quot;&gt;&lt;code&gt;Stream.run/1&lt;/code&gt;&lt;/a&gt; for an example of streaming into a file.</source>
          <target state="translated">파일로 스트리밍하는 예는 &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#run/1&quot;&gt; &lt;code&gt;Stream.run/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8355db15ad1ed182ee4f962ee451395b08a29a75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cce79031ac48bd22190a42bf791851f4dbf7f44c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt;&lt;code&gt;Task.async/1&lt;/code&gt;&lt;/a&gt; for more information. The task spawned must be always awaited on by calling &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/1&quot;&gt;&lt;code&gt;Task.await/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt; &lt;code&gt;Task.async/1&lt;/code&gt; &lt;/a&gt; 을 참조하세요. 생성 된 작업은 항상 &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/1&quot;&gt; &lt;code&gt;Task.await/1&lt;/code&gt; &lt;/a&gt; 을 호출하여 대기 해야합니다.</target>
        </trans-unit>
        <trans-unit id="3a332609124d5c768610c6068efe667f1415a785" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt; for more information about defining test cases and setting up callbacks.</source>
          <target state="translated">참조 &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; 을&lt;/a&gt; 테스트 케이스를 정의하고 콜백을 설정하는 방법에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="ff7fac65821b31c7cfc50567f8471dc1022a6991" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#configure/1&quot;&gt;&lt;code&gt;ExUnit.configure/1&lt;/code&gt;&lt;/a&gt; for more information on configuration options.</source>
          <target state="translated">구성 옵션에 대한 자세한 내용 은 &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#configure/1&quot;&gt; &lt;code&gt;ExUnit.configure/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ad2197ff4b330c1dce02fa27c3f0c4aa0eb6fea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; for a complete description of breakpoints in IEx.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; 의 중단 점에 대한 자세한 설명은 IEx.break! / 4 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2aa73013ec0f8266d2782f591e22ca6349c23e1f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Release.html&quot;&gt;&lt;code&gt;Mix.Release&lt;/code&gt;&lt;/a&gt; for more documentation on the struct and which fields can be modified. Note that the &lt;code&gt;:steps&lt;/code&gt; field itself can be modified and it is updated every time a step is called. Therefore, if you need to execute a command before and after assembling the release, you only need to declare the first steps in your pipeline and then inject the last step into the release struct. The steps field can also be used to verify if the step was set before or after assembling the release.</source>
          <target state="translated">구조체 및 수정할 수있는 필드에 대한 자세한 문서는 &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Release.html&quot;&gt; &lt;code&gt;Mix.Release&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 . 참고 &lt;code&gt;:steps&lt;/code&gt; 자체 필드는 변경 될 수 있으며 단계가 호출 될 때마다 업데이트됩니다. 따라서 릴리스를 어셈블하기 전후에 명령을 실행해야하는 경우 파이프 라인에서 첫 번째 단계를 선언 한 다음 마지막 단계를 릴리스 구조체에 삽입하기 만하면됩니다. 단계 필드는 릴리스를 조립하기 전 또는 후에 단계가 설정되었는지 확인하는 데 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3ed9464974cc03cebc39d10e5627e1ce2b2c310" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/mix/Mix.SCM.html&quot;&gt;&lt;code&gt;Mix.SCM&lt;/code&gt;&lt;/a&gt; module documentation to learn more about SCMs.</source>
          <target state="translated">SCM에 대한 자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/mix/Mix.SCM.html&quot;&gt; &lt;code&gt;Mix.SCM&lt;/code&gt; &lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6edba8d79bc2caa95282b27ca2537278ef94ab01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;iex#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; for a complete description of breakpoints in IEx.</source>
          <target state="translated">&lt;a href=&quot;iex#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; 의 중단 점에 대한 자세한 설명은 IEx.break! / 4 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5122ba27d8721b949fffc951604aa13f45980e9b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;inspect.opts&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; for a full list of remaining formatting options.</source>
          <target state="translated">나머지 포맷 옵션의 전체 목록은 &lt;a href=&quot;inspect.opts&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1dc68776cfd1eb7d70aa15085d8f462ed1d3d053" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;io#getn/3&quot;&gt;&lt;code&gt;IO.getn/3&lt;/code&gt;&lt;/a&gt; for a description of return values.</source>
          <target state="translated">리턴 값에 대한 설명은 &lt;a href=&quot;io#getn/3&quot;&gt; &lt;code&gt;IO.getn/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97d611377e22e5db00ff12e232a607ad3ab3ef5e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;kernel#defoverridable/1&quot;&gt;&lt;code&gt;Kernel.defoverridable/1&lt;/code&gt;&lt;/a&gt; for more information and documentation.</source>
          <target state="translated">자세한 내용과 설명서는 &lt;a href=&quot;kernel#defoverridable/1&quot;&gt; &lt;code&gt;Kernel.defoverridable/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="571066f54659ec2ac5b16799e2adaad081cfb2dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;kernel.specialforms#import/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt;&lt;/a&gt; for more information on importing.</source>
          <target state="translated">참조 &lt;a href=&quot;kernel.specialforms#import/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.import/2&lt;/code&gt; 를&lt;/a&gt; 가져 오기에 대한 자세한 내용을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f044d50d2ace10fab3e6c795376b601501a3205" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#run/1&quot;&gt;&lt;code&gt;Stream.run/1&lt;/code&gt;&lt;/a&gt; for an example of streaming into a file.</source>
          <target state="translated">파일로 스트리밍하는 예는 &lt;a href=&quot;stream#run/1&quot;&gt; &lt;code&gt;Stream.run/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c71eb54f62c0e44af2d3fc12b12fd9ffd5a6142c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14914fd526c793471e43dfbd5057556d75ec048c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;task#async/1&quot;&gt;&lt;code&gt;Task.async/1&lt;/code&gt;&lt;/a&gt; for more information. The task spawned must be always awaited on by calling &lt;a href=&quot;task#await/1&quot;&gt;&lt;code&gt;Task.await/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;task#async/1&quot;&gt; &lt;code&gt;Task.async/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오. 생성 된 작업은 항상 &lt;a href=&quot;task#await/1&quot;&gt; &lt;code&gt;Task.await/1&lt;/code&gt; &lt;/a&gt; 을 호출하여 대기 해야합니다.</target>
        </trans-unit>
        <trans-unit id="3aa41a4f7ed7d2b0af79578b5fcca0043e0e1e47" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;%Task{}&lt;/code&gt; for information about each field of the structure.</source>
          <target state="translated">구조의 각 필드에 대한 정보는 &lt;code&gt;%Task{}&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4cceaf34a6a814616d8794130f79ffcf533b24d5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;encode_www_form&lt;/code&gt; if you are interested in escaping reserved characters too.</source>
          <target state="translated">예약 문자를 이스케이프 처리하려면 &lt;code&gt;encode_www_form&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c68610d4f3ab56d8617f2cfbefaa73856e91cce0" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#async/3&quot;&gt;&lt;code&gt;async/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#async/3&quot;&gt; &lt;code&gt;async/3&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29a63667da796e9c242be4119c0fafe37c909456" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#filter/2&quot;&gt;&lt;code&gt;filter/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#filter/2&quot;&gt; &lt;code&gt;filter/2&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a0192db1681c0a57d284e9275a06f0331fb0685" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#if/2&quot;&gt;&lt;code&gt;if/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#if/2&quot;&gt; &lt;code&gt;if/2&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="521978e302ce7fcc9d153cb10876b8947a2b4270" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#reject/2&quot;&gt;&lt;code&gt;reject/2&lt;/code&gt;&lt;/a&gt; which discards all elements where the function returns a truthy value.</source>
          <target state="translated">함수가 진리 값을 리턴하는 모든 요소를 ​​버리는 &lt;a href=&quot;#reject/2&quot;&gt; &lt;code&gt;reject/2&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="31d0b6ab96038fad7452ed84f59baf70b0a8479c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#t:std_offset/0&quot;&gt;&lt;code&gt;std_offset/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#t:std_offset/0&quot;&gt; &lt;code&gt;std_offset/0&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6f19e1118fb5439e3b2951ab6f2872117a4c839" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;calendar#compatible_calendars?/2&quot;&gt;&lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calendar#compatible_calendars?/2&quot;&gt; &lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cce61e3bd48619c59d1a4129a8b1e9973519ccfe" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;function#capture/3&quot;&gt;&lt;code&gt;Function.capture/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;function#capture/3&quot;&gt; &lt;code&gt;Function.capture/3&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa9c250cb404bd52c2b300838fe07d2daf3dab9c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#compatible_calendars?/2&quot;&gt;&lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#compatible_calendars?/2&quot;&gt; &lt;code&gt;Calendar.compatible_calendars?/2&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="119b4bb99508808fddddf1ce2805eb2930f0d98d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://hexdocs.pm/elixir/Function.html#capture/3&quot;&gt;&lt;code&gt;Function.capture/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Function.html#capture/3&quot;&gt; &lt;code&gt;Function.capture/3&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57eefd5a434fd09c6836f667932fd5024b9ccc46" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;kernel#is_atom/1&quot;&gt;&lt;code&gt;Kernel.is_atom/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;kernel#is_atom/1&quot;&gt; &lt;code&gt;Kernel.is_atom/1&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="65b68fca61a40ff6b6e86ee7c61e7e40d5a2a59a" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;하위 사양&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3f470d483a35d2073612b4a4c8065fc1f8baf17f" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Agent&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;하위 사양&quot;섹션을 참조하십시오. &lt;code&gt;@doc&lt;/code&gt; 의 직전의 특수 &lt;code&gt;use Agent&lt;/code&gt; 생성 부착된다 &lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="3338e1f5bdd155f6af081eb43e57d26cd9caae74" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use GenServer&lt;/code&gt; will be attached to the generated &lt;code&gt;child_spec/1&lt;/code&gt; function.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;하위 사양&quot;섹션을 참조하십시오. &lt;code&gt;@doc&lt;/code&gt; &lt;code&gt;use GenServer&lt;/code&gt; 직전 의 @doc 주석은 생성 된 &lt;code&gt;child_spec/1&lt;/code&gt; 함수에 첨부됩니다 .</target>
        </trans-unit>
        <trans-unit id="00095b78abd10669d614655214e1a3c2c4524a2e" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Task&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;하위 사양&quot;섹션을 참조하십시오. &lt;code&gt;@doc&lt;/code&gt; 의 직전의 특수 &lt;code&gt;use Task&lt;/code&gt; 생성 부착된다 &lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="2b47b902698fa63ed92ca0c651047d9fbaef5a1d" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;자식 지정&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1dd6eb5e99c7c03dbe3b1d4be075fa120ab3f831" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Agent&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;자식 지정&quot;섹션을 참조하십시오. &lt;code&gt;@doc&lt;/code&gt; 의 직전의 특수 &lt;code&gt;use Agent&lt;/code&gt; 생성 부착된다 &lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="960d22cd31686e11772eef98ee456c7709453659" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use GenServer&lt;/code&gt; will be attached to the generated &lt;code&gt;child_spec/1&lt;/code&gt; function.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;자식 지정&quot;섹션을 참조하십시오. &lt;code&gt;@doc&lt;/code&gt; 의 직전의 특수 &lt;code&gt;use GenServer&lt;/code&gt; 생성 부착된다 &lt;code&gt;child_spec/1&lt;/code&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="7b1dc97a60bbc7638b75a98279e08aacfb50a439" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for more detailed information. The &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use Task&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;자식 지정&quot;섹션을 참조하십시오. &lt;code&gt;@doc&lt;/code&gt; 의 직전의 특수 &lt;code&gt;use Task&lt;/code&gt; 생성 부착된다 &lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="30dd4d39d714824873c91242d2b45957ae02a0c9" translate="yes" xml:space="preserve">
          <source>See the &quot;Child specification&quot; section in the module documentation for all of the available keys for overriding.</source>
          <target state="translated">재정의 할 수있는 모든 키에 대해서는 모듈 설명서의 &quot;자식 지정&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="13a1ebd27d05e64d87df69ec749b3054f6d91e47" translate="yes" xml:space="preserve">
          <source>See the &quot;Examples&quot; section for examples on how to use these macros.</source>
          <target state="translated">이러한 매크로를 사용하는 방법에 대한 예는 &quot;예제&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8021c2632ef085ff4af63198b9eb5555ee02ad16" translate="yes" xml:space="preserve">
          <source>See the &quot;Requirements&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;요구 사항&quot;섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4715e0f5e31a7ecf5eb97e3118b4e7cb9a349e30" translate="yes" xml:space="preserve">
          <source>See the &quot;Requirements&quot; section in the &lt;a href=&quot;version&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">자세한 정보 는 &lt;a href=&quot;version&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;요구 사항&quot;섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="085f6faad706b44fbfe10741a52117a1876b7c28" translate="yes" xml:space="preserve">
          <source>See the &quot;Runtime Configuration&quot; section in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; module documentation for the available options. The changes done here are automatically persisted to the &lt;code&gt;:logger&lt;/code&gt; application environment.</source>
          <target state="translated">사용 가능한 옵션 에 대해서는 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; 모듈 설명서 의 &quot;런타임 구성&quot;섹션을 참조하십시오 . 여기에서 수행 된 변경 사항은 자동으로 &lt;code&gt;:logger&lt;/code&gt; 애플리케이션 환경에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="cca171332e51871d4f29f2362aba4c90108dd995" translate="yes" xml:space="preserve">
          <source>See the &quot;Supervisor and worker options&quot; section in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Supervisor.Spec&lt;/code&gt;&lt;/a&gt; module for more information on the available options.</source>
          <target state="translated">사용 가능한 옵션에 대한 자세한 내용 은 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Supervisor.Spec&lt;/code&gt; &lt;/a&gt; 모듈 의 &quot;감독자 및 작업자 옵션&quot;섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fed1d1ad790bc4b32e368f1dd909f8be2e226649" translate="yes" xml:space="preserve">
          <source>See the &quot;User-defined types&quot; and &quot;Defining a specification&quot; sub-sections below for more information on defining types and typespecs.</source>
          <target state="translated">유형 및 유형 스펙 정의에 대한 자세한 정보는 아래의 &quot;사용자 정의 유형&quot;및 &quot;사양 정의&quot;하위 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d47f633402a6dc7774499c24b6dc4ec38c37f7ac" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hex.pm/docs/usage&quot;&gt;Hex usage documentation&lt;/a&gt; for Hex options.</source>
          <target state="translated">16 진 옵션에 대해서는 16 &lt;a href=&quot;https://hex.pm/docs/usage&quot;&gt;진 사용 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2819013089d7de456841d6baad7b4a9a0642c29" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html&quot;&gt;&lt;code&gt;IO.ANSI&lt;/code&gt;&lt;/a&gt; module for a list of colors and attributes.</source>
          <target state="translated">색상 및 속성 목록은 &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html&quot;&gt; &lt;code&gt;IO.ANSI&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7622ba68cb3ee7ad3e40e5d0e473fd94e133e828" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; module for more information about maps, their syntax, and ways to access and manipulate them.</source>
          <target state="translated">맵, 해당 구문 및 맵에 액세스하고 조작하는 방법에 대한 자세한 정보 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="831c83e86f46bd94d2d80b20745c47e78ec12552" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">이 콜백을 구현하는 방법에 대한 예제 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5becf3146c3b70c6347637f8299df03d385c78b8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4f671fc3ebd2e39b5395b23af773eafa2ea0646d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; docs for a discussion of when you may want to use module-based supervisors. A &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use DynamicSupervisor&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">모듈 기반 감독자를 사용할 수있는시기에 대한 논의 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 . &lt;code&gt;@doc&lt;/code&gt; 의 직전의 특수 &lt;code&gt;use DynamicSupervisor&lt;/code&gt; 생성 부착된다 &lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="e4e1309d06b307016c3bb04091688992534bfea8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module for a discussion on child specifications and the available specification keys.</source>
          <target state="translated">하위 사양 및 사용 가능한 사양 키에 대한 설명 은 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ee65331e280be5729e9102b34da75d2a9af4f7f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; module for more examples.</source>
          <target state="translated">더 많은 예제 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd32b7ab5b01b35903a9586d9d833a80b5dd7fd6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Project.html&quot;&gt;&lt;code&gt;Mix.Project&lt;/code&gt;&lt;/a&gt; module for detailed documentation on Mix projects.</source>
          <target state="translated">Mix 프로젝트에 대한 자세한 문서 는 &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Project.html&quot;&gt; &lt;code&gt;Mix.Project&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c6950e22c21b6f7b716f5c525cae0336cd96fb8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt; behaviour for detailed documentation on Mix tasks.</source>
          <target state="translated">Mix 작업에 대한 자세한 문서 는 &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; &lt;/a&gt; 동작을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="31cebecc5227b5e52c63b7361e188bd42aa17e0e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; module for more information about maps, their syntax, and ways to access and manipulate them.</source>
          <target state="translated">맵, 구문 및 맵 액세스 및 조작 방법에 대한 자세한 정보 는 &lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="651c622de5237592dd974ed0f2426a971dc5e1d4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;map#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keyword#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">이 콜백을 구현하는 방법에 대한 예제 는 &lt;a href=&quot;map#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;keyword#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b624e472805d3adc4b87dc79e98807bc8b027cc7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mix.project&quot;&gt;&lt;code&gt;Mix.Project&lt;/code&gt;&lt;/a&gt; module for detailed documentation on Mix projects.</source>
          <target state="translated">믹스 프로젝트에 대한 자세한 문서 는 &lt;a href=&quot;mix.project&quot;&gt; &lt;code&gt;Mix.Project&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d2161f4dd28a8df53dbe019879d314fcf1214b8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mix.task&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt; behaviour for detailed documentation on Mix tasks.</source>
          <target state="translated">믹스 작업에 대한 자세한 설명서 는 &lt;a href=&quot;mix.task&quot;&gt; &lt;code&gt;Mix.Task&lt;/code&gt; &lt;/a&gt; 동작을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="834e1b329e36786a4bfd904e77180b7810718e3a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0847e6e61327a1ea818ef259423a8a134e0ee0f4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; docs for a discussion of when you may want to use module-based supervisors. A &lt;code&gt;@doc&lt;/code&gt; annotation immediately preceding &lt;code&gt;use DynamicSupervisor&lt;/code&gt; will be attached to the generated &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">모듈 기반 수퍼바이저 사용시기에 대한 설명은 &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 . &lt;code&gt;@doc&lt;/code&gt; 의 직전의 특수 &lt;code&gt;use DynamicSupervisor&lt;/code&gt; 생성 부착된다 &lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="30646707ecc4c9e5716bc2575d2918e37f631016" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; module for more examples.</source>
          <target state="translated">자세한 예는 &lt;a href=&quot;task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="521883a412627960d91b5785452a647e50c8e912" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%3C%3C%3E%3E/1&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt; for a complete definition of pattern matching for binaries.</source>
          <target state="translated">바이너리에 대한 패턴 일치의 전체 정의는 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%3C%3C%3E%3E/1&quot;&gt; &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; 에&lt;/a&gt; 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97b5840ba3ecf762a5d50e89e069b4203e9b0770" translate="yes" xml:space="preserve">
          <source>See the documentation of the types &lt;a href=&quot;#t:result/0&quot;&gt;&lt;code&gt;result/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#t:acc/0&quot;&gt;&lt;code&gt;acc/0&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;#t:result/0&quot;&gt; &lt;code&gt;result/0&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#t:acc/0&quot;&gt; &lt;code&gt;acc/0&lt;/code&gt; &lt;/a&gt; 의 문서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="48919ea9082d235b5077c7a570c846b395a36e13" translate="yes" xml:space="preserve">
          <source>See the function &lt;a href=&quot;#translate/4&quot;&gt;&lt;code&gt;translate/4&lt;/code&gt;&lt;/a&gt; in this module for an example implementation and the default messages translated by Logger.</source>
          <target state="translated">구현 예와 로거가 번역 한 기본 메시지에 대해서는이 모듈의 &lt;a href=&quot;#translate/4&quot;&gt; &lt;code&gt;translate/4&lt;/code&gt; &lt;/a&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d03554d098407b50efb80318b6cb826078d373be" translate="yes" xml:space="preserve">
          <source>See the functions &lt;a href=&quot;#key/1&quot;&gt;&lt;code&gt;key/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#key!/1&quot;&gt;&lt;code&gt;key!/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#elem/1&quot;&gt;&lt;code&gt;elem/1&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#all/0&quot;&gt;&lt;code&gt;all/0&lt;/code&gt;&lt;/a&gt; for some of the available accessors.</source>
          <target state="translated">사용 가능한 접근 자 중 일부 는 기능 &lt;a href=&quot;#key/1&quot;&gt; &lt;code&gt;key/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#key!/1&quot;&gt; &lt;code&gt;key!/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#elem/1&quot;&gt; &lt;code&gt;elem/1&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#all/0&quot;&gt; &lt;code&gt;all/0&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a99809f8ab2290821228a7754fff870d3b2e5a30" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">더 많은 예제 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d99ed096cc54f8665e2cf9b783ce3e9873f41906" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;map#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;keyword#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">더 많은 예제 는 &lt;a href=&quot;map#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;keyword#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0436c22fef845c067bef662ef491804de17b0b6d" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">자세한 예는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt; 의 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="48e1c7f34e1efc0af461c403476b7022caec0f16" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;map#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;keyword#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">자세한 예는 &lt;a href=&quot;map#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;keyword#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt; 의 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c1685eaa54fe519606b25019173c312cf3476a2" translate="yes" xml:space="preserve">
          <source>See the module documentation for examples of using the &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; function for building custom dispatching or a pubsub system.</source>
          <target state="translated">사용자 정의 디스패치 또는 pubsub 시스템을 빌드하기 위해 &lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt; 함수를 사용하는 예는 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0517a29706a6bfbbd785d85785828e366f8d6e42" translate="yes" xml:space="preserve">
          <source>See the proper names in the library installation instructions.</source>
          <target state="translated">라이브러리 설치 지침에서 적절한 이름을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="14956dad2080627640e7bd584face34c8c603039" translate="yes" xml:space="preserve">
          <source>Seen in typespecs between &lt;code&gt;(&lt;/code&gt;/&lt;code&gt;)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; / &lt;code&gt;)&lt;/code&gt; 사이의 typespec에서 확인 :</target>
        </trans-unit>
        <trans-unit id="0bf39df7a763366418834d3b6d581e918c721630" translate="yes" xml:space="preserve">
          <source>Select key, pid, and values registered using full match specs.</source>
          <target state="translated">완전 일치 스펙을 사용하여 등록 된 키, pid 및 값을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="b240d04328a96aac53d166b5299cca81675589d4" translate="yes" xml:space="preserve">
          <source>Selector</source>
          <target state="translated">Selector</target>
        </trans-unit>
        <trans-unit id="72921a7d1afeb5d46deeaae06094b4518ba182c2" translate="yes" xml:space="preserve">
          <source>Self-contained. A release does not require the source code to be included in your production artifacts. All of the code is precompiled and packaged. Releases do not even require Erlang or Elixir in your servers, as it includes the Erlang VM and its runtime by default. Furthermore, both Erlang and Elixir standard libraries are stripped to bring only the parts you are actually using.</source>
          <target state="translated">독립형. 릴리스에는 프로덕션 아티팩트에 소스 코드를 포함 할 필요가 없습니다. 모든 코드는 미리 컴파일되고 패키징됩니다. 릴리스에는 기본적으로 Erlang VM 및 런타임이 포함되어 있으므로 서버에 Erlang 또는 Elixir가 필요하지 않습니다. 또한 Erlang 및 Elixir 표준 라이브러리는 모두 제거되어 실제로 사용중인 부품 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a2fea41f17d4b9ff27715e407e2cf8ec1bb01c0a" translate="yes" xml:space="preserve">
          <source>Self-contained. A release does not require the source code to be included in your production artifacts. All of the code is precompiled and packaged. Releases do not even require Erlang or Elixir in your servers, as they include the Erlang VM and its runtime by default. Furthermore, both Erlang and Elixir standard libraries are stripped to bring only the parts you are actually using.</source>
          <target state="translated">독립형. 릴리스에서는 소스 코드를 프로덕션 아티팩트에 포함하지 않아도됩니다. 모든 코드는 사전 컴파일 및 패키지됩니다. 릴리스에는 서버에 Erlang 또는 Elixir가 필요하지 않습니다. 기본적으로 Erlang VM과 런타임이 포함되어 있기 때문입니다. 또한 Erlang 및 Elixir 표준 라이브러리는 실제로 사용중인 부품 만 가져 오기 위해 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="f539471dbc831750f340efd3dd43b33bbb4a5ee4" translate="yes" xml:space="preserve">
          <source>Self-contained. A release does not require the source code to be included in your production artifacts. All of the code is precompiled and packaged. Releases do not even require Erlang or Elixir on your servers, as they include the Erlang VM and its runtime by default. Furthermore, both Erlang and Elixir standard libraries are stripped to bring only the parts you are actually using.</source>
          <target state="translated">독립형. 릴리스에는 프로덕션 아티팩트에 소스 코드를 포함 할 필요가 없습니다. 모든 코드는 미리 컴파일되고 패키징됩니다. 릴리스에는 기본적으로 Erlang VM 및 런타임이 포함되어 있으므로 서버에 Erlang 또는 Elixir가 필요하지 않습니다. 또한 Erlang 및 Elixir 표준 라이브러리는 모두 제거되어 실제로 사용중인 부품 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fa5e4064e6fa9724596beba2eb2d2bdeb5bdd5ec" translate="yes" xml:space="preserve">
          <source>Self-synchronization</source>
          <target state="translated">Self-synchronization</target>
        </trans-unit>
        <trans-unit id="3c0d7514174147765863ad4a49aa216f1de66c30" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;data&lt;/code&gt; to the port driver &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">포트 드라이버 &lt;code&gt;port&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="3f64dd7958524cc44215629f3b20e0dd31bc22fa" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;msg&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt; after &lt;code&gt;time&lt;/code&gt; milliseconds.</source>
          <target state="translated">전송 &lt;code&gt;msg&lt;/code&gt; 에 &lt;code&gt;dest&lt;/code&gt; 후 &lt;code&gt;time&lt;/code&gt; (밀리 초).</target>
        </trans-unit>
        <trans-unit id="17e918478af63ce463699cc4ff1b23f883f95a9f" translate="yes" xml:space="preserve">
          <source>Sends a message to the given &lt;code&gt;dest&lt;/code&gt; and returns the message.</source>
          <target state="translated">지정된 &lt;code&gt;dest&lt;/code&gt; 에게 메시지를 보내고 메시지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b54fc6854b1a982d3c545edf5c557bc49fded778" translate="yes" xml:space="preserve">
          <source>Sends a message to the given &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;dest&lt;/code&gt; 에게 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="2cefd165c18081fd6fe91c82252ac408d3292fbd" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;server&lt;/code&gt; 로 비동기 요청을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="ca5b7002363f9f0cca78f8e906c3aa3330d0ae12" translate="yes" xml:space="preserve">
          <source>Sends an exit signal with the given &lt;code&gt;reason&lt;/code&gt; to &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;reason&lt;/code&gt; 가 있는 종료 신호 를 &lt;code&gt;pid&lt;/code&gt; 로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="1e44ba6bd0968aeac7b6e9cefab2ddb65373d4d8" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;columns&lt;/code&gt; to the left.</source>
          <target state="translated">커서 &lt;code&gt;columns&lt;/code&gt; 을 왼쪽으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7f6080a32049ff439b9da9800dd735d75c29d425" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;columns&lt;/code&gt; to the right.</source>
          <target state="translated">커서 &lt;code&gt;columns&lt;/code&gt; 을 오른쪽으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="6dbc5e735ac797de8a8c5b81a5251a5f1a283865" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;lines&lt;/code&gt; down.</source>
          <target state="translated">커서 &lt;code&gt;lines&lt;/code&gt; 아래로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="b9a4e84d28ea3580244ab3256b50bd9efdbc0151" translate="yes" xml:space="preserve">
          <source>Sends cursor &lt;code&gt;lines&lt;/code&gt; up.</source>
          <target state="translated">커서 &lt;code&gt;lines&lt;/code&gt; 을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="bcec44f9ec6cb9df6688389583935ce809c35f6c" translate="yes" xml:space="preserve">
          <source>Sends cursor home.</source>
          <target state="translated">커서를 집으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="bc0e62df768087c38a6a36d743e8886f42bf3c96" translate="yes" xml:space="preserve">
          <source>Sends cursor to the absolute position specified by &lt;code&gt;line&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; 과 &lt;code&gt;column&lt;/code&gt; 에서 지정한 절대 위치로 커서를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="76a031d2a08054668d0a9c564544c0a45f112c18" translate="yes" xml:space="preserve">
          <source>Services mode (Windows)</source>
          <target state="translated">서비스 모드 (Windows)</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="9be72aa01b53dd3cf81dc5aa2dc80af2f415c3d0" translate="yes" xml:space="preserve">
          <source>Sets Mix debug mode.</source>
          <target state="translated">믹스 디버그 모드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1d77307070c014b533b9d6cfd05431cb6f0b4261" translate="yes" xml:space="preserve">
          <source>Sets a callback to be executed after the completion of a test suite.</source>
          <target state="translated">테스트 스위트 완료 후 실행할 콜백을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="95049291413df5043d39363ceb451c80a5958431" translate="yes" xml:space="preserve">
          <source>Sets a new &lt;code&gt;value&lt;/code&gt; for the environment variable &lt;code&gt;varname&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;varname&lt;/code&gt; 의 새 &lt;code&gt;value&lt;/code&gt; 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="df04ebaf2d3a8d6495161f70b69f8869f9593188" translate="yes" xml:space="preserve">
          <source>Sets a new value for each environment variable corresponding to each &lt;code&gt;{key, value}&lt;/code&gt; pair in &lt;code&gt;enum&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; 의 각 &lt;code&gt;{key, value}&lt;/code&gt; 쌍에 해당하는 각 환경 변수의 새 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="e9ab43d5de5cacd3bc561774001fd54e4bba2a96" translate="yes" xml:space="preserve">
          <source>Sets alternative font 1.</source>
          <target state="translated">대체 글꼴 1을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8edb8def9cdb97da70bf0451c00ff25555c70e10" translate="yes" xml:space="preserve">
          <source>Sets alternative font 2.</source>
          <target state="translated">대체 글꼴 2를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8d1ac9cd4cf8b0e229c6dda3c6ecd12e98303ed1" translate="yes" xml:space="preserve">
          <source>Sets alternative font 3.</source>
          <target state="translated">대체 글꼴 3을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7072854cf2f06837bfe9e42053b67d0885cc7381" translate="yes" xml:space="preserve">
          <source>Sets alternative font 4.</source>
          <target state="translated">대체 글꼴 4를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2aa48cc2b1893e137ef411ac32f856604cb77735" translate="yes" xml:space="preserve">
          <source>Sets alternative font 5.</source>
          <target state="translated">대체 글꼴 5를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="39ca4c1a80bf153fcd9906082161dce28ef18160" translate="yes" xml:space="preserve">
          <source>Sets alternative font 6.</source>
          <target state="translated">대체 글꼴 6을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4215ec54612d026378660065215630d2d5625b02" translate="yes" xml:space="preserve">
          <source>Sets alternative font 7.</source>
          <target state="translated">대체 글꼴 7을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ad6d8612ae8881afaba1678731ca951e971a4545" translate="yes" xml:space="preserve">
          <source>Sets alternative font 8.</source>
          <target state="translated">대체 글꼴 8을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="72c2cb3ddc59641afaf2b1648696085dca57354a" translate="yes" xml:space="preserve">
          <source>Sets alternative font 9.</source>
          <target state="translated">대체 글꼴 9를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8cc46141abbbe2bfc4a335984571ebea030f1f4e" translate="yes" xml:space="preserve">
          <source>Sets an environment variable value.</source>
          <target state="translated">환경 변수 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a826d74849fb62ee6a74ceb3b1cd7978be06262a" translate="yes" xml:space="preserve">
          <source>Sets background color to black.</source>
          <target state="translated">배경색을 검은 색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="10d0c6b6216ecb182183e3e4490d75b331e5ac4e" translate="yes" xml:space="preserve">
          <source>Sets background color to blue.</source>
          <target state="translated">배경색을 파란색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d1c957999d6dba80218cf8c9e454329ec1c641b4" translate="yes" xml:space="preserve">
          <source>Sets background color to cyan.</source>
          <target state="translated">배경색을 청록색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="465b2301d66d2ec0dd6aba721293763d3f5fbd3c" translate="yes" xml:space="preserve">
          <source>Sets background color to green.</source>
          <target state="translated">배경색을 녹색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fdef1c6739e5c7657622b69f885688ac2aaf4c09" translate="yes" xml:space="preserve">
          <source>Sets background color to light black.</source>
          <target state="translated">배경색을 연한 검정색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6174513109caa31b77c1be107e7629e5ce50fce3" translate="yes" xml:space="preserve">
          <source>Sets background color to light blue.</source>
          <target state="translated">배경색을 하늘색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="03c66b8d8e716ec6c1fecb339dadb258b6f11e36" translate="yes" xml:space="preserve">
          <source>Sets background color to light cyan.</source>
          <target state="translated">배경색을 밝은 청록색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="470bff16eaf6d3fe0e9511cc22903bf7199b64f9" translate="yes" xml:space="preserve">
          <source>Sets background color to light green.</source>
          <target state="translated">배경색을 연한 녹색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c39a6cde4a6acc3a0d5beb27b16ee1f4c511d012" translate="yes" xml:space="preserve">
          <source>Sets background color to light magenta.</source>
          <target state="translated">배경색을 밝은 자홍색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="111295dc77fed13435d084cb4401ea78ad5738ad" translate="yes" xml:space="preserve">
          <source>Sets background color to light red.</source>
          <target state="translated">배경색을 밝은 빨강으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9ad6ecd81399c88b626b837ebb871a3c9b0bb23f" translate="yes" xml:space="preserve">
          <source>Sets background color to light white.</source>
          <target state="translated">배경색을 연한 흰색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a9206206a115c985d751db2969e98ef4a03e0264" translate="yes" xml:space="preserve">
          <source>Sets background color to light yellow.</source>
          <target state="translated">배경색을 밝은 노란색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8a1777285d3d09b9e1d76c7f8cd49f56a1573623" translate="yes" xml:space="preserve">
          <source>Sets background color to magenta.</source>
          <target state="translated">배경색을 자홍색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="adca10d1c7b344189df9fae05a24c1bd96a1d92d" translate="yes" xml:space="preserve">
          <source>Sets background color to red.</source>
          <target state="translated">배경색을 빨간색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b2c0cffecb0fad25ca47ab11177e30d0c791deeb" translate="yes" xml:space="preserve">
          <source>Sets background color to white.</source>
          <target state="translated">배경색을 흰색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b1bdfb344a41cbd6621586aef35110ba60881a19" translate="yes" xml:space="preserve">
          <source>Sets background color to yellow.</source>
          <target state="translated">배경색을 노란색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="23e5897be4d76f7fd4bcf26d66bb09668bfae14d" translate="yes" xml:space="preserve">
          <source>Sets background color.</source>
          <target state="translated">배경색을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b0e963b8a639f7cfa8a928aa5ef30a18f01b8b76" translate="yes" xml:space="preserve">
          <source>Sets compilation options.</source>
          <target state="translated">컴파일 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4af3191878353787f09804a940963cda289d2d58" translate="yes" xml:space="preserve">
          <source>Sets foreground color to black.</source>
          <target state="translated">전경색을 검은 색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9693e9447a4e2e975813685e987ef317a4f373d1" translate="yes" xml:space="preserve">
          <source>Sets foreground color to blue.</source>
          <target state="translated">전경색을 파란색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e44fc44fed1f585a9fb08e38ac54d6f386d53ac5" translate="yes" xml:space="preserve">
          <source>Sets foreground color to cyan.</source>
          <target state="translated">전경색을 청록색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6c8d3d784036e97c3c14e6d5155a1952076959ea" translate="yes" xml:space="preserve">
          <source>Sets foreground color to green.</source>
          <target state="translated">전경색을 녹색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4643e7e7d60ef13b2f47d12231b5f29dc03d16e3" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light black.</source>
          <target state="translated">전경색을 연한 검정색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a1be063da145c5ab4439b40cb811d8dbef34898c" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light blue.</source>
          <target state="translated">전경색을 하늘색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="08f981db1719b08b000707738b3ef9fc3d0c75d3" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light cyan.</source>
          <target state="translated">전경색을 밝은 청록색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="104b8231f209bfbf0b97108717afda2f1750e5d3" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light green.</source>
          <target state="translated">전경색을 연한 녹색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9db34278c7284edbd42cf0cfc89abc1fb83132ee" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light magenta.</source>
          <target state="translated">전경색을 연한 자홍으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="db32a2537ecf889b0b1e5629fd7f42272fcb8fb5" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light red.</source>
          <target state="translated">전경색을 밝은 빨강으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="72d00d975399756fdaf345e4284802fef4f90f59" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light white.</source>
          <target state="translated">전경색을 연한 흰색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="30c5f586e9b9108513eabb3254f8b2f1c79928cf" translate="yes" xml:space="preserve">
          <source>Sets foreground color to light yellow.</source>
          <target state="translated">전경색을 밝은 노란색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6abe9f60e85e97f2db25eaee46be72b5178bd4ac" translate="yes" xml:space="preserve">
          <source>Sets foreground color to magenta.</source>
          <target state="translated">전경색을 자홍색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0f1aec19bba5405d7e33275e8d1e98684627bc08" translate="yes" xml:space="preserve">
          <source>Sets foreground color to red.</source>
          <target state="translated">전경색을 빨간색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="137be52a07b0514fd13837fd0050db9f38fd3616" translate="yes" xml:space="preserve">
          <source>Sets foreground color to white.</source>
          <target state="translated">전경색을 흰색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2056c5a1cef57a1806341bd57931cd7718d0b632" translate="yes" xml:space="preserve">
          <source>Sets foreground color to yellow.</source>
          <target state="translated">전경색을 노란색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9d088fae2dd79b40a794415b1ccbd5f28b7b2072" translate="yes" xml:space="preserve">
          <source>Sets foreground color.</source>
          <target state="translated">전경색을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="138c11b17735272c60f9c50b24086509b686f1f3" translate="yes" xml:space="preserve">
          <source>Sets multiple environment variables.</source>
          <target state="translated">여러 환경 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="68c33adeac89d23e6d5c99a05bcb4768a7c7a0e8" translate="yes" xml:space="preserve">
          <source>Sets primary (default) font.</source>
          <target state="translated">기본 (기본) 글꼴을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e3fdb4abe2997f749409b0d03703a7b121cc9bd8" translate="yes" xml:space="preserve">
          <source>Sets the background color from individual RGB values.</source>
          <target state="translated">개별 RGB 값에서 배경색을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="bc55385c692fce0d395e0b8027824e31b2766460" translate="yes" xml:space="preserve">
          <source>Sets the current shell.</source>
          <target state="translated">현재 쉘을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="74d40df198b56abc05f8ae6474de9b6ea08c8551" translate="yes" xml:space="preserve">
          <source>Sets the current time zone database.</source>
          <target state="translated">현재 시간대 데이터베이스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0d9058661731fe47ca5d9563f7f21cf061409cb2" translate="yes" xml:space="preserve">
          <source>Sets the current working directory.</source>
          <target state="translated">현재 작업 디렉토리를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0481389a90a61b6c7c4ff7d6f8792d81ecb8db2e" translate="yes" xml:space="preserve">
          <source>Sets the foreground color from individual RGB values.</source>
          <target state="translated">개별 RGB 값에서 전경색을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4544a9510feb0bb4447692b76f601f1678a0ecba" translate="yes" xml:space="preserve">
          <source>Sets the given &lt;code&gt;flag&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt; for the calling process.</source>
          <target state="translated">주어진 &lt;code&gt;flag&lt;/code&gt; 를 호출 프로세스에 대한 &lt;code&gt;value&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="51027f581acba990017f79f26cef0236eb4184ea" translate="yes" xml:space="preserve">
          <source>Sets the given &lt;code&gt;flag&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt; for the given process &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">지정된 프로세스 &lt;code&gt;pid&lt;/code&gt; 의 지정된 &lt;code&gt;flag&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="5c02ad6423bb5f9510d26c0e48d4dc2436660ce3" translate="yes" xml:space="preserve">
          <source>Sets the group leader of the given &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;leader&lt;/code&gt;.</source>
          <target state="translated">주어진의 그룹 리더 설정 &lt;code&gt;pid&lt;/code&gt; 에 &lt;code&gt;leader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee2d768284181cfd0a76ff1eedd982eeb0cd8f49" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;node&lt;/code&gt; to the atom &lt;code&gt;cookie&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 의 magic 쿠키를 atom &lt;code&gt;cookie&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a730a55e3da87bcb0378535ef9cec7bda9822337" translate="yes" xml:space="preserve">
          <source>Sets the number of pending stops in the breakpoint with the given &lt;code&gt;id&lt;/code&gt; to zero.</source>
          <target state="translated">주어진 &lt;code&gt;id&lt;/code&gt; 를 가진 중단 점에서 보류중인 중지 수 를 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4dd8c9f35b81d47b86870fbb320fb9caa4087ba5" translate="yes" xml:space="preserve">
          <source>Sets the number of pending stops in the given module, function and arity to zero.</source>
          <target state="translated">지정된 모듈, 기능 및 특성에서 보류중인 중지 수를 0으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5526d1cab96d796578c11fabfff9398f5447f063" translate="yes" xml:space="preserve">
          <source>Sets up a breakpoint in &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;arity&lt;/code&gt; with the given number of &lt;code&gt;stops&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;stops&lt;/code&gt; 횟수로 &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;function&lt;/code&gt; 및 &lt;code&gt;arity&lt;/code&gt; 에 중단 점을 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="ac886fdfaa6fd9a7ee855714753c80da4fe01b17" translate="yes" xml:space="preserve">
          <source>Sets up a breakpoint on the given module/function/args with the given &lt;code&gt;guard&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;guard&lt;/code&gt; 를 사용하여 주어진 모듈 / 함수 / 인수에 중단 점을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="33a42ba01a3c3e7c2c394398744f3bb048626b6e" translate="yes" xml:space="preserve">
          <source>Sets up a breakpoint on the given module/function/arity.</source>
          <target state="translated">주어진 모듈 / 기능 / arity에 중단 점을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5ff2890da0c6af3803e3733c3157cb74c62b5167" translate="yes" xml:space="preserve">
          <source>Sets, maps, and other dictionaries can also be given to the &lt;code&gt;:into&lt;/code&gt; option. In general, &lt;code&gt;:into&lt;/code&gt; accepts any structure that implements the &lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">세트, 맵 및 기타 사전도 &lt;code&gt;:into&lt;/code&gt; 옵션에 제공 할 수 있습니다 . 일반적으로 &lt;code&gt;:into&lt;/code&gt; 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; 프로토콜 을 구현하는 모든 구조 를 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="bd4535505c2417e61961a7113d0eafce3cb64c39" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;:trap_exit&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; - trapping exits should be used only in special circumstances as it would make your process immune to not only exits from the task but from any other processes.</source>
          <target state="translated">&lt;code&gt;:trap_exit&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정 -트래핑 엑시트는 프로세스가 태스크뿐만 아니라 다른 프로세스에서도 엑시트되지 않도록 특수한 상황에서만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="33c6a34bf194e7199e9c0a18fddd93d8d9fefeed" translate="yes" xml:space="preserve">
          <source>Setting configuration</source>
          <target state="translated">설정 구성</target>
        </trans-unit>
        <trans-unit id="d6289491eaac788284614dd116bb32674dddf31b" translate="yes" xml:space="preserve">
          <source>Setting variables or importing modules in IEx does not affect the caller's environment. However, sending and receiving messages will change the process state.</source>
          <target state="translated">IEx에서 변수를 설정하거나 모듈을 가져 오는 것은 호출자의 환경에 영향을 미치지 않습니다. 그러나 메시지를주고 받으면 프로세스 상태가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="acd658415e3f4cbdae905269541fc503e941566c" translate="yes" xml:space="preserve">
          <source>Several environment variables can be used to modify Mix's behaviour.</source>
          <target state="translated">믹스의 동작을 수정하기 위해 여러 환경 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34986433934e6d447e3723e81abc0c589c141051" translate="yes" xml:space="preserve">
          <source>Severity of a diagnostic</source>
          <target state="translated">진단의 심각도</target>
        </trans-unit>
        <trans-unit id="ef6442010b8ae2c5feefff86551e01b7d2254ba5" translate="yes" xml:space="preserve">
          <source>Severity of a diagnostic:</source>
          <target state="translated">진단의 심각도 :</target>
        </trans-unit>
        <trans-unit id="1511667d6b259adc4e62f0970e71e5fc502c0dde" translate="yes" xml:space="preserve">
          <source>Shared options</source>
          <target state="translated">공유 옵션</target>
        </trans-unit>
        <trans-unit id="47bf46e89ff4eb081f0b726f66e98d60c275fcf4" translate="yes" xml:space="preserve">
          <source>Shared state in tests</source>
          <target state="translated">테스트에서 공유 상태</target>
        </trans-unit>
        <trans-unit id="15226b1f30cdb72557e1cfce27d2920a8525c275" translate="yes" xml:space="preserve">
          <source>Shell commands</source>
          <target state="translated">쉘 명령</target>
        </trans-unit>
        <trans-unit id="6fce86e296dfabdc486d69f2a4bdabf524c07784" translate="yes" xml:space="preserve">
          <source>Shell history</source>
          <target state="translated">쉘 역사</target>
        </trans-unit>
        <trans-unit id="3b7bc055d42cb5ee445b4629591b6c7ce151525c" translate="yes" xml:space="preserve">
          <source>Shortcut Syntax</source>
          <target state="translated">바로 가기 구문</target>
        </trans-unit>
        <trans-unit id="bff5c401cba317d37dd02f3bf20eb021a9a7d880" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;chunk_every(enum, count, count)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chunk_every(enum, count, count)&lt;/code&gt; 바로 가기 .</target>
        </trans-unit>
        <trans-unit id="d799f33666a25c03f217b3a7fec86053786d518a" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;chunk_every(enumerable, count, count)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chunk_every(enumerable, count, count)&lt;/code&gt; 바로 가기 .</target>
        </trans-unit>
        <trans-unit id="3772f76c5efeb817b41e59c6169f0a12a5138e18" translate="yes" xml:space="preserve">
          <source>Should be called with the &lt;code&gt;enumerable&lt;/code&gt; element and the accumulator contents.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 요소와 누산기 내용 으로 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eaf3c5d30de589fe59588a546de2d175706c0a28" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;true&lt;/code&gt; if the given date describes a proper date in the calendar.</source>
          <target state="translated">주어진 날짜가 달력에서 적절한 날짜를 나타내는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="f80193079cddaf6297db3a4d414717fac1a93d52" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;true&lt;/code&gt; if the given time describes a proper time in the calendar.</source>
          <target state="translated">주어진 시간이 달력에서 적절한 시간을 나타내는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="cbf43a01a6c566cc924430796428a82791fb3321" translate="yes" xml:space="preserve">
          <source>Shutdown values (:shutdown)</source>
          <target state="translated">종료 값 (: 종료)</target>
        </trans-unit>
        <trans-unit id="48d45e15f28f53d164bd6ccb48a540af8d866b66" translate="yes" xml:space="preserve">
          <source>Shutdown values (&lt;code&gt;:shutdown&lt;/code&gt;)</source>
          <target state="translated">종료 값 ( &lt;code&gt;:shutdown&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="61b96603a0adb4afa5ae805609bff262dc3909bc" translate="yes" xml:space="preserve">
          <source>Shutting down a live system cleanly can be done by calling &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#stop/1&quot;&gt;&lt;code&gt;System.stop/1&lt;/code&gt;&lt;/a&gt;. It will shut down every application in the opposite order they had been started.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/System.html#stop/1&quot;&gt; &lt;code&gt;System.stop/1&lt;/code&gt; &lt;/a&gt; 을 호출하여 라이브 시스템을 깨끗하게 종료 할 수 있습니다 . 시작된 순서와 반대로 모든 응용 프로그램을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="4bebc37beab3e41d0359e7a912db5b152d7f9a2a" translate="yes" xml:space="preserve">
          <source>Shutting down a live system cleanly can be done by calling &lt;a href=&quot;system#stop/1&quot;&gt;&lt;code&gt;System.stop/1&lt;/code&gt;&lt;/a&gt;. It will shut down every application in the opposite order they had been started.</source>
          <target state="translated">&lt;a href=&quot;system#stop/1&quot;&gt; &lt;code&gt;System.stop/1&lt;/code&gt; &lt;/a&gt; 을 호출하여 라이브 시스템을 완전히 종료 할 수 있습니다 . 시작된 반대 순서로 모든 응용 프로그램을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="9495787c0b2e930e3fb428c17f97a16d333de82b" translate="yes" xml:space="preserve">
          <source>Sigils</source>
          <target state="translated">Sigils</target>
        </trans-unit>
        <trans-unit id="093f8622874818f518acf108d0ec2fc97a25f178" translate="yes" xml:space="preserve">
          <source>Sigils also support heredocs, that is, triple double- or single-quotes as separators:</source>
          <target state="translated">Sigils는 heredocs, 즉 구분 기호로 삼중 큰 따옴표 또는 작은 따옴표를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="bbca56d468485c6eba966412dcb3ca64c51d15bd" translate="yes" xml:space="preserve">
          <source>Sigils are useful to encode text with their own escaping rules, such as regular expressions, datetimes, and others.</source>
          <target state="translated">시길은 정규 표현식, 날짜 시간 등과 같은 자체 이스케이프 규칙으로 텍스트를 인코딩하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5c6cf440097cb0b13b54bff0118fbd4058653ed5" translate="yes" xml:space="preserve">
          <source>Sigils are useful to encode text with their own escaping rules, such as regular expressions, datetimes, etc.</source>
          <target state="translated">Sigils는 정규 표현식, 날짜 시간 등과 같은 자체 이스케이프 규칙으로 텍스트를 인코딩하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fc9770922e8235e07af434b1817bb43b4b551610" translate="yes" xml:space="preserve">
          <source>Sigils can also be used to do compile-time work with the help of macros. For example, regular expressions in Elixir are compiled into an efficient representation during compilation of the source code, therefore skipping this step at runtime. If you&amp;rsquo;re interested in the subject, we recommend you learn more about macros and check out how sigils are implemented in the &lt;code&gt;Kernel&lt;/code&gt; module (where the &lt;code&gt;sigil_*&lt;/code&gt; functions are defined).</source>
          <target state="translated">Sigils는 매크로를 사용하여 컴파일 타임 작업을 수행하는 데에도 사용할 수 있습니다. 예를 들어, Elixir의 정규 표현식은 소스 코드를 컴파일하는 동안 효율적인 표현으로 컴파일되므로 런타임시이 단계를 건너 뜁니다. 주제에 관심이 있다면 매크로에 대해 더 배우고 &lt;code&gt;Kernel&lt;/code&gt; 모듈 ( &lt;code&gt;sigil_*&lt;/code&gt; 함수가 정의 된) 에서 시길 이 어떻게 구현되는지 확인하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="6a856a592437bb8bd2bfbbd8383e2fec047cb719" translate="yes" xml:space="preserve">
          <source>Sigils start with &lt;code&gt;~&lt;/code&gt; and are followed by a letter and one of the following pairs:</source>
          <target state="translated">Sigils는 &lt;code&gt;~&lt;/code&gt; 로 시작하고 그 뒤에 문자와 다음 쌍 중 하나가옵니다.</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="83755b5bb4d8f50108c88dbf26b3cd7060bdd814" translate="yes" xml:space="preserve">
          <source>Similar results can be achieved with the string concatenation operator &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">문자열 연결 연산자 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 를 사용하여 비슷한 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52e2c22437ed86a2689a7c81089c1cd114c1c7a4" translate="yes" xml:space="preserve">
          <source>Similar rule applies to numbers. Finally, note that numbers in patterns perform strict comparison. In other words, integers to do not match floats:</source>
          <target state="translated">비슷한 규칙이 숫자에도 적용됩니다. 마지막으로 패턴의 숫자는 엄격한 비교를 수행합니다. 즉, 부동 소수점과 일치하지 않는 정수 :</target>
        </trans-unit>
        <trans-unit id="5ea4e567871f4aad673963dd3ff9b92aa6d80dcc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#convert/2&quot;&gt;&lt;code&gt;Date.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">&lt;a href=&quot;#convert/2&quot;&gt; &lt;code&gt;Date.convert/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 두 달력 간의 변환이 불가능한 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="5bced70420543c4355b9839b02e5819a55887571" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#convert/2&quot;&gt;&lt;code&gt;Time.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">유사 &lt;a href=&quot;#convert/2&quot;&gt; &lt;code&gt;Time.convert/2&lt;/code&gt; &lt;/a&gt; 만은 제기 &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 두 달력 사이의 변환이 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="680a08604d41ca47d86f103212437a67e75222e6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#defmacrop/2&quot;&gt;&lt;code&gt;defmacrop/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#defguardp/1&quot;&gt;&lt;code&gt;defguardp/1&lt;/code&gt;&lt;/a&gt; must be defined before its use in the current module.</source>
          <target state="translated">유사 &lt;a href=&quot;#defmacrop/2&quot;&gt; &lt;code&gt;defmacrop/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#defguardp/1&quot;&gt; &lt;code&gt;defguardp/1&lt;/code&gt; &lt;/a&gt; 현재 모듈에서 그것의 사용 전에 정의되어야한다.</target>
        </trans-unit>
        <trans-unit id="3a4528cdf8fb4e2486a93c3402abd54f52d95d7d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#ensure_compiled/1&quot;&gt;&lt;code&gt;ensure_compiled/1&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;true&lt;/code&gt; if the module is already loaded or was successfully loaded and compiled. Returns &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ensure_compiled/1&quot;&gt; &lt;code&gt;ensure_compiled/1&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 모듈이 이미로드되었거나 성공적으로로드 및 컴파일 된 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 반환 &lt;code&gt;false&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="d8d26b0dd0bc64203103e9942583d4ea3210f692" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#ensure_loaded/1&quot;&gt;&lt;code&gt;ensure_loaded/1&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;true&lt;/code&gt; if the module is already loaded or was successfully loaded. Returns &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;#ensure_loaded/1&quot;&gt; &lt;code&gt;ensure_loaded/1&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 모듈이 이미로드되었거나 성공적으로로드 된 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 반환 &lt;code&gt;false&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="671b3de2f1f9e1bc01bc7256b906ac67b5dbc5aa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#find/3&quot;&gt;&lt;code&gt;find/3&lt;/code&gt;&lt;/a&gt;, but returns the index (zero-based) of the element instead of the element itself.</source>
          <target state="translated">&lt;a href=&quot;#find/3&quot;&gt; &lt;code&gt;find/3&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 요소 자체 대신 요소의 인덱스 (0부터 시작)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed983810dcc745a1edc28d41dbf198f45ff86a26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#find/3&quot;&gt;&lt;code&gt;find/3&lt;/code&gt;&lt;/a&gt;, but returns the value of the function invocation instead of the element itself.</source>
          <target state="translated">&lt;a href=&quot;#find/3&quot;&gt; &lt;code&gt;find/3&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 요소 자체 대신 함수 호출 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="28bf29c85f16c49113a753b53367de4973636708" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#get_env/3&quot;&gt;&lt;code&gt;get_env/3&lt;/code&gt;&lt;/a&gt;, except it must be used to read values at compile time. This allows Elixir to track when configuration values change between compile time and runtime.</source>
          <target state="translated">컴파일 타임에 값을 읽는 데 사용해야한다는 점을 제외하면 &lt;a href=&quot;#get_env/3&quot;&gt; &lt;code&gt;get_env/3&lt;/code&gt; &lt;/a&gt; 과 유사 합니다. 이를 통해 Elixir는 컴파일 시간과 런타임 사이에 구성 값이 변경되는시기를 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb0ea66cf26fd48568417afc7388e0fe5e4a0cfe" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#key/2&quot;&gt;&lt;code&gt;key/2&lt;/code&gt;&lt;/a&gt;, but the returned function raises if the key does not exist.</source>
          <target state="translated">&lt;a href=&quot;#key/2&quot;&gt; &lt;code&gt;key/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 키가 없으면 리턴 된 함수가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0e30d8489677f14c1a6e61f63b887f618946e277" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; but expects a function as its last argument.</source>
          <target state="translated">유사 &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; 하지만 마지막 인수로 함수를 기대하고있다.</target>
        </trans-unit>
        <trans-unit id="9a017555f9bfef427f80d7907bb1a0b56d3fc6f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened. Returns the IO device otherwise.</source>
          <target state="translated">유사 &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; 하지만 제기 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; 의&lt;/a&gt; 파일을 열 수없는 경우 예외를. 그렇지 않으면 IO 장치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33624a0d9da8eb41a4683fa34d3089dc49c4b18b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened. Returns the IO device otherwise.</source>
          <target state="translated">유사 &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; 하지만 제기 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; 의&lt;/a&gt; 파일을 열 수없는 경우 예외를. 그렇지 않으면 IO 장치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fa8f09aee13c03e4fa19ccdc0e8643206d67f367" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/3&quot;&gt;&lt;code&gt;open/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened.</source>
          <target state="translated">유사 &lt;a href=&quot;#open/3&quot;&gt; &lt;code&gt;open/3&lt;/code&gt; &lt;/a&gt; 하지만 제기 &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; 의&lt;/a&gt; 파일을 열 수없는 경우 예외를.</target>
        </trans-unit>
        <trans-unit id="57c98adeaafde8439640c13c276eef195525e8b1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#open/3&quot;&gt;&lt;code&gt;open/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if the file could not be opened.</source>
          <target state="translated">&lt;a href=&quot;#open/3&quot;&gt; &lt;code&gt;open/3&lt;/code&gt; 과&lt;/a&gt; 유사 하지만 파일을 열 수없는 경우 &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0c7612d9e10f8bbba6b6e71ca68dcee1c3c8ada0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt; but only parses the head of &lt;code&gt;argv&lt;/code&gt;; as soon as it finds a non-switch, it stops parsing.</source>
          <target state="translated">&lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 &lt;code&gt;argv&lt;/code&gt; 의 헤드 만 구문 분석합니다 . 스위치가 아닌 것을 발견하면 구문 분석이 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="28666d5f51ea0ff4ccceab9d321f0bdd59480ef2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#sort/2&quot;&gt;&lt;code&gt;sort/2&lt;/code&gt;&lt;/a&gt;, you can pass a custom sorter:</source>
          <target state="translated">&lt;a href=&quot;#sort/2&quot;&gt; &lt;code&gt;sort/2&lt;/code&gt; &lt;/a&gt; 와 유사하게 사용자 정의 분류기를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86e0d7ca33894f72508f1acefed15f61bc326aa6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt; except the task is specified by the given &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;fun&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;fun&lt;/code&gt; 및 &lt;code&gt;args&lt;/code&gt; 에 의해 작업이 지정된다는 점을 제외하고 &lt;a href=&quot;#start_child/2&quot;&gt; &lt;code&gt;start_child/2&lt;/code&gt; &lt;/a&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="fffdeb395a71dd9c69be0df6ed520f0f8929cdac" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#start_link/2&quot;&gt;&lt;code&gt;start_link/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#init/2&quot;&gt;&lt;code&gt;init/2&lt;/code&gt;&lt;/a&gt;, it expects a &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;{module, arg}&lt;/code&gt; or a map as the child specification. If a module is given, the specification is retrieved by calling &lt;code&gt;module.child_spec(arg)&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;a href=&quot;#start_link/2&quot;&gt; &lt;code&gt;start_link/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#init/2&quot;&gt; &lt;code&gt;init/2&lt;/code&gt; &lt;/a&gt; , 그것은 예상 &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;{module, arg}&lt;/code&gt; 또는 하위 사양으로지도. 모듈이 제공되면, &lt;code&gt;module.child_spec(arg)&lt;/code&gt; 호출하여 스펙을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="4f96191ac218da513737f46d949226677e297839" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt; but checks for key validity.</source>
          <target state="translated">&lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 키 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="544d28beafeb6ba6440bbbfe15ff61212ffb6825" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#transform/3&quot;&gt;&lt;code&gt;transform/3&lt;/code&gt;&lt;/a&gt; but the initial accumulated value is computed lazily via &lt;code&gt;start_fun&lt;/code&gt; and executes an &lt;code&gt;after_fun&lt;/code&gt; at the end of enumeration (both in cases of success and failure).</source>
          <target state="translated">&lt;a href=&quot;#transform/3&quot;&gt; &lt;code&gt;transform/3&lt;/code&gt; &lt;/a&gt; 유사 하지만 초기 누적 값은 &lt;code&gt;start_fun&lt;/code&gt; 을 통해 느리게 계산되며 열거 종료시 (성공 및 실패의 경우) &lt;code&gt;after_fun&lt;/code&gt; 을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="31f64163363b89c1b2d96b23c5caf03b42260cad" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#unquote/1&quot;&gt;&lt;code&gt;unquote/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unquote/1&quot;&gt; &lt;code&gt;unquote/1&lt;/code&gt; 과&lt;/a&gt; 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="a4bad9ce5e5e51929cb2b375dafa5b7519c51fcd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;date#convert/2&quot;&gt;&lt;code&gt;Date.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">&lt;a href=&quot;date#convert/2&quot;&gt; &lt;code&gt;Date.convert/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 두 달력 간 변환이 불가능한 경우 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 가&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4eff11b7d153ee0a489cadc51578e41461ca9e03" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defmodule/2&quot;&gt;&lt;code&gt;Kernel.defmodule/2&lt;/code&gt;&lt;/a&gt;, the binary will only be written to disk as a &lt;code&gt;.beam&lt;/code&gt; file if &lt;a href=&quot;#create/3&quot;&gt;&lt;code&gt;Module.create/3&lt;/code&gt;&lt;/a&gt; is invoked in a file that is currently being compiled.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defmodule/2&quot;&gt; &lt;code&gt;Kernel.defmodule/2&lt;/code&gt; &lt;/a&gt; 와 유사하게 , 현재 컴파일중인 파일에서 &lt;a href=&quot;#create/3&quot;&gt; &lt;code&gt;Module.create/3&lt;/code&gt; &lt;/a&gt; 이 호출 된 경우 바이너리 는 &lt;code&gt;.beam&lt;/code&gt; 파일 로만 디스크에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="7709e39a2e11a56955398111724acefaa59fbfbd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;, dynamic supervisors also support module-based supervisors.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 동적 수퍼바이저는 모듈 기반 수퍼바이저도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="49dab40556418138d9a746ed4e7aec86ea69773a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;kernel#defmodule/2&quot;&gt;&lt;code&gt;Kernel.defmodule/2&lt;/code&gt;&lt;/a&gt;, the binary will only be written to disk as a &lt;code&gt;.beam&lt;/code&gt; file if &lt;a href=&quot;module#create/3&quot;&gt;&lt;code&gt;Module.create/3&lt;/code&gt;&lt;/a&gt; is invoked in a file that is currently being compiled.</source>
          <target state="translated">&lt;a href=&quot;kernel#defmodule/2&quot;&gt; &lt;code&gt;Kernel.defmodule/2&lt;/code&gt; &lt;/a&gt; 와 유사하게 , 바이너리 는 현재 컴파일되고있는 파일에서 &lt;a href=&quot;module#create/3&quot;&gt; &lt;code&gt;Module.create/3&lt;/code&gt; &lt;/a&gt; 가 호출 된 경우 에만 디스크에 &lt;code&gt;.beam&lt;/code&gt; 파일 로 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="78ac4aae468baba341cc07ffa89a70612faee3d2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;, dynamic supervisors also support module-based supervisors.</source>
          <target state="translated">&lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 와 유사하게 동적 수퍼바이저는 모듈 기반 수퍼바이저도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="12930727ef42425fe713d11813225cb176e88f5a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;time#convert/2&quot;&gt;&lt;code&gt;Time.convert/2&lt;/code&gt;&lt;/a&gt;, but raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the conversion between the two calendars is not possible.</source>
          <target state="translated">&lt;a href=&quot;time#convert/2&quot;&gt; &lt;code&gt;Time.convert/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 두 달력 간 변환이 불가능한 경우 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 가&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a8b6ff3051123b6b61657f0295e50e9b9854f439" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;IEx.pry/0&lt;/code&gt;, once a breakpoint is reached code execution stops until &lt;code&gt;continue&lt;/code&gt; is invoked. However, note &lt;code&gt;break!/2&lt;/code&gt; does not have access to aliases and imports from the debugged code as it works on the compiled artifact rather than on source.</source>
          <target state="translated">&lt;code&gt;IEx.pry/0&lt;/code&gt; 과 유사하게 중단 점에 도달하면 &lt;code&gt;continue&lt;/code&gt; 이 호출 될 때까지 코드 실행이 중지 됩니다. 그러나 note &lt;code&gt;break!/2&lt;/code&gt; 는 소스가 아닌 컴파일 된 아티팩트에서 작동하므로 디버그 된 코드에서 별명 및 가져 오기에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7c170635871c9a0051be86c8b2c08c1a5fff6790" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt;, &lt;code&gt;unquote(x)&lt;/code&gt; will always generate a remote call, independent of the value of &lt;code&gt;x&lt;/code&gt;. To generate an alias via the quoted expression, one needs to rely on &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#concat/2&quot;&gt;&lt;code&gt;Module.concat/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt; 과 유사하게 &lt;code&gt;unquote(x)&lt;/code&gt; 는 &lt;code&gt;x&lt;/code&gt; 값에 관계없이 항상 원격 호출을 생성합니다 . 인용 된 표현식을 통해 별칭을 생성하려면 &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#concat/2&quot;&gt; &lt;code&gt;Module.concat/2&lt;/code&gt; &lt;/a&gt; 에 의존해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b9586bcd0e9346aa9f7e1956ff7ddc48f27965b9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt;, &lt;code&gt;unquote(x)&lt;/code&gt; will always generate a remote call, independent of the value of &lt;code&gt;x&lt;/code&gt;. To generate an alias via the quoted expression, one needs to rely on &lt;a href=&quot;module#concat/2&quot;&gt;&lt;code&gt;Module.concat/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;Kernel.&quot;FUNCTION_NAME&quot;&lt;/code&gt; 과 유사하게 , &lt;code&gt;unquote(x)&lt;/code&gt; 는 &lt;code&gt;x&lt;/code&gt; 값에 관계없이 항상 원격 호출을 생성합니다 . 인용 표현식을 통해 별칭을 생성하려면 &lt;a href=&quot;module#concat/2&quot;&gt; &lt;code&gt;Module.concat/2&lt;/code&gt; &lt;/a&gt; 에 의존해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a72d340e0a469b82ec469f91c51a4c2a166acbb3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;case&lt;/code&gt;, a function may have many clauses. A particular clause is executed when the arguments passed to the function match the clause&amp;rsquo;s argument patterns and its guard evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 와 유사하게 함수에는 많은 절이있을 수 있습니다. 함수에 전달 된 인수가 절의 인수 패턴과 일치하고 그 가드가 &lt;code&gt;true&lt;/code&gt; 로 평가되면 특정 절이 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="58a8720c49132c3d420546dd2af8d053e8ae07f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;import_file&lt;/code&gt; but only imports the file if it is available.</source>
          <target state="translated">&lt;code&gt;import_file&lt;/code&gt; 과 유사 하지만 사용 가능한 경우에만 파일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b996bc1af4b984c3da4c7bc2ef94d27afb3fd274" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;import_file&lt;/code&gt; but only imports the file it if it is available.</source>
          <target state="translated">&lt;code&gt;import_file&lt;/code&gt; 과 유사 하지만 파일이 사용 가능한 경우에만 파일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="68799b7562c806765dc2184265fa19c244ff0d6b" translate="yes" xml:space="preserve">
          <source>Similar to aliases, imports in Elixir are hygienic. Consider the following code:</source>
          <target state="translated">별칭과 마찬가지로 Elixir의 수입품은 위생적입니다. 다음 코드를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="dc2b244e98818b0c2e54b67213f8b4899ca5dd2c" translate="yes" xml:space="preserve">
          <source>Similar to constructs like &lt;code&gt;if&lt;/code&gt;, named functions support both &lt;code&gt;do:&lt;/code&gt; and &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; block syntax, as &lt;a href=&quot;case-cond-and-if#doend-blocks&quot;&gt;we learned &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; is a convenient syntax for the keyword list format&lt;/a&gt;. For example, we can edit &lt;code&gt;math.exs&lt;/code&gt; to look like this:</source>
          <target state="translated">같은 구조와 유사한 &lt;code&gt;if&lt;/code&gt; 라는 기능을 모두 지원 &lt;code&gt;do:&lt;/code&gt; 및 &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; 으로 블록 구문은, &lt;a href=&quot;case-cond-and-if#doend-blocks&quot;&gt;우리가 배운 &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; 키워드 목록 형식을위한 편리한 구문입니다&lt;/a&gt; . 예를 들어 &lt;code&gt;math.exs&lt;/code&gt; 를 다음과 같이 편집 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="399d5c38656b13369d3de8bc4c4d3ffe8febae4e" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;debugger&lt;/code&gt; note above, your package manager may require a separate installation in order to run Observer.</source>
          <target state="translated">위 의 &lt;code&gt;debugger&lt;/code&gt; 노트 와 유사하게 패키지 관리자는 Observer를 실행하기 위해 별도의 설치가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1967136eae3bf06afa80ff77d2c742df8670b3d5" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;hd/1&lt;/code&gt; and &lt;code&gt;tl/1&lt;/code&gt; functions, we can&amp;rsquo;t match an empty list with a head and tail pattern:</source>
          <target state="translated">&lt;code&gt;hd/1&lt;/code&gt; 및 &lt;code&gt;tl/1&lt;/code&gt; 함수 와 유사하게 머리와 꼬리 패턴이있는 빈 목록을 일치시킬 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="82f50da22742b95c84f018370c23671aa332e9f5" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;#yield/2&quot;&gt;&lt;code&gt;yield/2&lt;/code&gt;&lt;/a&gt;, each task's result will be</source>
          <target state="translated">&lt;a href=&quot;#yield/2&quot;&gt; &lt;code&gt;yield/2&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 각 작업의 결과는</target>
        </trans-unit>
        <trans-unit id="93b5800fe560b818a42489dce100f7db2d3fa208" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;code&gt;@doc&lt;/code&gt; also accepts a keyword list to provide metadata about the module. For more details, see the documentation of &lt;code&gt;@doc&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;@doc&lt;/code&gt; 과 마찬가지로 모듈에 대한 메타 데이터를 제공하기 위해 키워드 목록도 허용합니다. 자세한 내용은 위 의 &lt;code&gt;@doc&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7181e6c21b4fe82c37829114be36b71e425278a2" translate="yes" xml:space="preserve">
          <source>Similarly to IEx you can use numbers in your &quot;prompts&quot;:</source>
          <target state="translated">IEx와 유사하게 &quot;프롬프트&quot;에 숫자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c33174c994c7adc74f3417777668f8c098a0d34c" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;uniq: true&lt;/code&gt; can also be given to comprehensions to guarantee the results are only added to the collection if they were not returned before. For example:</source>
          <target state="translated">마찬가지로, &lt;code&gt;uniq: true&lt;/code&gt; 는 결과가 이전에 반환되지 않은 경우에만 컬렉션에 추가되도록 보장하기 위해 이해에 제공 될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f039a2100664bab09c37cccb1c2473f79463bd63" translate="yes" xml:space="preserve">
          <source>Similarly, an exception inside an &lt;code&gt;else&lt;/code&gt; clause is not caught or rescued inside the same &lt;code&gt;try&lt;/code&gt;:</source>
          <target state="translated">마찬가지로 &lt;code&gt;else&lt;/code&gt; 절 내부의 예외 는 동일한 &lt;code&gt;try&lt;/code&gt; 내에서 포착되거나 구제되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="13caed6c080be256771accadfa9730439fb295aa" translate="yes" xml:space="preserve">
          <source>Similarly, doctests do not run in any kind of sandbox. So any module defined in a code example is going to linger throughout the whole test suite run.</source>
          <target state="translated">마찬가지로 doctest는 어떤 종류의 샌드 박스에서도 실행되지 않습니다. 따라서 코드 예제에 정의 된 모든 모듈은 전체 테스트 스위트 실행 동안 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="639b47876914dc3c064fca8afae90a6661f1b39d" translate="yes" xml:space="preserve">
          <source>Similarly, even if we defined an alias with the same name before invoking a macro, it won't affect the macro's result:</source>
          <target state="translated">마찬가지로 매크로를 호출하기 전에 이름이 같은 별칭을 정의하더라도 매크로 결과에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0b02f74e4f6ced9283eee76d1f5d4a6dc901fa2" translate="yes" xml:space="preserve">
          <source>Similarly, if a match expression is given, it will report any failure in terms of that match. Given</source>
          <target state="translated">마찬가지로 일치식이 제공되면 해당 일치 측면에서 실패가보고됩니다. 주어진</target>
        </trans-unit>
        <trans-unit id="d93711412269341e983df1ae16c13701f1ea42ed" translate="yes" xml:space="preserve">
          <source>Similarly, if you are waiting for a process to terminate, monitor that process instead of sleeping. &lt;strong&gt;Do not&lt;/strong&gt;:</source>
          <target state="translated">마찬가지로 프로세스가 종료되기를 기다리는 경우 휴면 대신 해당 프로세스를 모니터하십시오. &lt;strong&gt;하지 마십시오&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="af89b8a35f09db9218c7eaf5334bf79735fe57ba" translate="yes" xml:space="preserve">
          <source>Similarly, once a capture on a named device has begun, the encoding on that device cannot be changed in a subsequent concurrent capture. An error will be raised in this case.</source>
          <target state="translated">마찬가지로 명명 된 장치에서 캡처가 시작되면 이후 동시 캡처에서 해당 장치의 인코딩을 변경할 수 없습니다. 이 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cbf36629b903bf319e1dd5dfee276a2f96f82ebd" translate="yes" xml:space="preserve">
          <source>Similarly, the performance of list concatenation depends on the length of the left-hand list:</source>
          <target state="translated">마찬가지로 목록 연결 성능은 왼쪽 목록의 길이에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c1f148bd168fe86bf71a8f03f4f454f35acbd7df" translate="yes" xml:space="preserve">
          <source>Similarly, we could write the list &lt;code&gt;[1, 2, 3]&lt;/code&gt; using only such pairs (called cons cells):</source>
          <target state="translated">마찬가지로, 우리는 그러한 쌍 (cons cell)을 사용하여 리스트 &lt;code&gt;[1, 2, 3]&lt;/code&gt; 을 작성할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f432574a8cdf8950eee176efcedda99515fdf9f6" translate="yes" xml:space="preserve">
          <source>Similarly, when creating a stand-alone package and release for Windows, note the Erlang Runtime System has a dependency to some Microsoft libraries (Visual C++ Redistributable Packages for Visual Studio 2013). These libraries are installed (if not present before) when Erlang is installed but it is not part of the standard Windows environment. Deploying a stand-alone release on a computer without these libraries will result in a failure when trying to run the release. One way to solve this is to download and install these Microsoft libraries the first time a release is deployed (the Erlang installer version 10.6 ships with &amp;ldquo;Microsoft Visual C++ 2013 Redistributable - 12.0.30501&amp;rdquo;).</source>
          <target state="translated">마찬가지로 Windows 용 독립 실행 형 패키지 및 릴리스를 만들 때 Erlang 런타임 시스템에는 일부 Microsoft 라이브러리 (Visual Studio 2013 용 Visual C ++ 재배포 가능 패키지)에 대한 종속성이 있습니다. 이러한 라이브러리는 Erlang이 설치 될 때 설치되지만 (이전에없는 경우) 표준 Windows 환경의 일부가 아닙니다. 이러한 라이브러리가없는 컴퓨터에 독립 실행 형 릴리스를 배포하면 릴리스를 실행하려고 할 때 오류가 발생합니다. 이 문제를 해결하는 한 가지 방법은 릴리스가 처음 배포 될 때 이러한 Microsoft 라이브러리를 다운로드하여 설치하는 것입니다 (Erlang 설치 프로그램 버전 10.6은&amp;ldquo;Microsoft Visual C ++ 2013 재배포 가능 패키지-12.0.30501&amp;rdquo;과 함께 제공됨).</target>
        </trans-unit>
        <trans-unit id="b59932c5adb29f058bd5e0bb657d8adae59c14bf" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Enum&lt;/code&gt;&lt;em&gt;does&lt;/em&gt; provide a proper API, in practice &lt;code&gt;Enum.find/2&lt;/code&gt; is the way to go:</source>
          <target state="translated">&lt;code&gt;Enum&lt;/code&gt; &lt;em&gt;은&lt;/em&gt; 적절한 API를 제공하기 때문에 실제로 &lt;code&gt;Enum.find/2&lt;/code&gt; 를 사용하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="69225423a0e2b117d7cd03442182856546997bd1" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;setup_all&lt;/code&gt; blocks don't belong to a specific test, log messages generated in them (or between tests) are never captured. If you want to suppress these messages as well, remove the console backend globally by setting:</source>
          <target state="translated">&lt;code&gt;setup_all&lt;/code&gt; 블록은 특정 테스트에 속하지 않기 때문에 setup 또는 모든 블록에서 생성 된 로그 메시지는 캡처되지 않습니다. 이러한 메시지도 표시하지 않으려면 다음을 설정하여 콘솔 백엔드를 전체적으로 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="e2bf20a6c317edb9d40eaad36a3fcaaa5065a63f" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;use&lt;/code&gt; allows any code to run, we can&amp;rsquo;t really know the side-effects of using a module without reading its documentation. For this reason, &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; are often preferred, as their semantics are defined by the language.</source>
          <target state="translated">때문에 &lt;code&gt;use&lt;/code&gt; 실행에 코드를 할 수 있습니다, 우리는 정말 그 문서를 읽지 않고 모듈을 사용의 부작용을 알 수 없다. 이러한 이유로, 의미론이 언어에 의해 정의되므로 &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;alias&lt;/code&gt; 이 선호되는 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="f2b5647acb141b9dc51673b2f6c9dfb87cbf88e2" translate="yes" xml:space="preserve">
          <source>Since Elixir controls when the streamed file is opened, the underlying device cannot be shared and as such it is convenient to open the file in raw mode for performance reasons. Therefore, Elixir &lt;strong&gt;will&lt;/strong&gt; open streams in &lt;code&gt;:raw&lt;/code&gt; mode with the &lt;code&gt;:read_ahead&lt;/code&gt; option unless an encoding is specified. This means any data streamed into the file must be converted to &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt;&lt;code&gt;iodata/0&lt;/code&gt;&lt;/a&gt; type. If you pass, for example, &lt;code&gt;[encoding: :utf8]&lt;/code&gt; or &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; in the modes parameter, the underlying stream will use &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol to convert the data. See &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#binwrite/2&quot;&gt;&lt;code&gt;IO.binwrite/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">Elixir는 스트리밍 된 파일이 열릴 때를 제어하기 때문에 기본 장치를 공유 할 수 없으므로 성능상의 이유로 파일을 원시 모드로 여는 것이 편리합니다. 따라서 Elixir &lt;strong&gt;는&lt;/strong&gt; 인코딩이 지정되지 않은 경우 &lt;code&gt;:read_ahead&lt;/code&gt; 옵션을 사용하여 : &lt;code&gt;:raw&lt;/code&gt; 모드 에서 스트림을 엽니 다 . 즉, 파일로 스트리밍되는 모든 데이터는 &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt; &lt;code&gt;iodata/0&lt;/code&gt; &lt;/a&gt; 유형 으로 변환되어야합니다 . 예를 들어 modes 매개 변수에 &lt;code&gt;[encoding: :utf8]&lt;/code&gt; 또는 &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; 을 전달하면 기본 스트림은 &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt; 프로토콜을 사용하여 데이터를 변환합니다. . 참조 &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#binwrite/2&quot;&gt; &lt;code&gt;IO.binwrite/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d3c552f54084c3d7869c55199e78593b9eebc2e" translate="yes" xml:space="preserve">
          <source>Since Elixir controls when the streamed file is opened, the underlying device cannot be shared and as such it is convenient to open the file in raw mode for performance reasons. Therefore, Elixir &lt;strong&gt;will&lt;/strong&gt; open streams in &lt;code&gt;:raw&lt;/code&gt; mode with the &lt;code&gt;:read_ahead&lt;/code&gt; option unless an encoding is specified. This means any data streamed into the file must be converted to &lt;a href=&quot;typespecs#built-in-types&quot;&gt;&lt;code&gt;iodata/0&lt;/code&gt;&lt;/a&gt; type. If you pass e.g. &lt;code&gt;[encoding: :utf8]&lt;/code&gt; or &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; in the modes parameter, the underlying stream will use &lt;a href=&quot;io#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;string.chars&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol to convert the data. See &lt;a href=&quot;io#binwrite/2&quot;&gt;&lt;code&gt;IO.binwrite/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#write/2&quot;&gt;&lt;code&gt;IO.write/2&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">Elixir는 스트리밍 파일을 열 때 제어하므로 기본 장치를 공유 할 수 없으므로 성능상의 이유로 원시 모드에서 파일을 여는 것이 편리합니다. 따라서 Elixir &lt;strong&gt;는&lt;/strong&gt; 인코딩이 지정되지 않은 경우 &lt;code&gt;:read_ahead&lt;/code&gt; 옵션 과 함께 &lt;code&gt;:raw&lt;/code&gt; 모드 에서 스트림을 엽니 다 . 이는 파일로 스트리밍 된 모든 데이터가 &lt;a href=&quot;typespecs#built-in-types&quot;&gt; &lt;code&gt;iodata/0&lt;/code&gt; &lt;/a&gt; 유형 으로 변환되어야 함을 의미합니다 . 당신이 예를 전달하는 경우 &lt;code&gt;[encoding: :utf8]&lt;/code&gt; 또는 &lt;code&gt;[encoding: {:utf16, :little}]&lt;/code&gt; 모드 매개 변수에, 기본이되는 스트림이 사용 &lt;a href=&quot;io#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;string.chars&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; 이&lt;/a&gt; 프로토콜 데이터를 변환 할 수 있습니다. &lt;a href=&quot;io#binwrite/2&quot;&gt; &lt;code&gt;IO.binwrite/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;io#write/2&quot;&gt; &lt;code&gt;IO.write/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b843f681fc1bcd217e1f4a763ec59aff63d55b7" translate="yes" xml:space="preserve">
          <source>Since Elixir provides a &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt;, it is easy to use one to dynamically start tasks across nodes:</source>
          <target state="translated">Elixir는 &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; 를&lt;/a&gt; 제공하므로 노드간에 작업을 동적으로 시작하는 데 사용하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="acfc136eac08ea2248c061b764cdc270d0d7d75b" translate="yes" xml:space="preserve">
          <source>Since Elixir provides a &lt;a href=&quot;task.supervisor&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt;, it is easy to use one to dynamically start tasks across nodes:</source>
          <target state="translated">Elixir는 &lt;a href=&quot;task.supervisor&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; 를&lt;/a&gt; 제공하므로 노드를 사용하여 작업을 동적으로 시작하기가 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="9ddb7c4c4e5a83e7e2eb15f183943d89c62afa54" translate="yes" xml:space="preserve">
          <source>Since Elixir's compilation happens in parallel, in some situations you may need to use a module that was not yet compiled, therefore it can't even be loaded.</source>
          <target state="translated">Elixir의 컴파일은 병렬로 수행되기 때문에 일부 상황에서는 아직 컴파일되지 않은 모듈을 사용해야 할 수도 있으므로로드 할 수도 없습니다.</target>
        </trans-unit>
        <trans-unit id="7382428d7f17d64e52201beba024a7ffa766e6af" translate="yes" xml:space="preserve">
          <source>Since ISO 8601 does not include the proper time zone, the given string will be converted to UTC and its offset in seconds will be returned as part of this function. Therefore offset information must be present in the string.</source>
          <target state="translated">ISO 8601에 적절한 시간대가 포함되어 있지 않으므로 주어진 문자열이 UTC로 변환되고 초 단위의 오프셋이이 함수의 일부로 반환됩니다. 따라서 오프셋 정보가 문자열에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b15ad8d4c4ceb4a097cb8049bcccb30f2c171c27" translate="yes" xml:space="preserve">
          <source>Since a &lt;code&gt;DynamicSupervisor&lt;/code&gt; does not define any children during initialization, the &lt;code&gt;DynamicSupervisor&lt;/code&gt; also allows us to skip the work of defining a whole separate module with the usual &lt;code&gt;start_link&lt;/code&gt; function and the &lt;code&gt;init&lt;/code&gt; callback. Instead, we can define a &lt;code&gt;DynamicSupervisor&lt;/code&gt; directly in the supervision tree, by giving it a name and a strategy.</source>
          <target state="translated">이후 &lt;code&gt;DynamicSupervisor&lt;/code&gt; 가 초기화 중에 아이를 정의하지 않습니다는 &lt;code&gt;DynamicSupervisor&lt;/code&gt; 는 또한 우리가 평소와 완전히 별도의 모듈을 정의하는 작업을 건너 뛸 수 &lt;code&gt;start_link&lt;/code&gt; 기능과 &lt;code&gt;init&lt;/code&gt; 콜백을. 대신 이름과 전략을 제공하여 감독 트리에서 직접 &lt;code&gt;DynamicSupervisor&lt;/code&gt; 를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6552dd3f478ee5a7825eccbbaad93572a691d75" translate="yes" xml:space="preserve">
          <source>Since agents are processes, each bucket has a process identifier (pid), but buckets do not have a name. Back &lt;a href=&quot;../processes&quot;&gt;in the Process chapter&lt;/a&gt;, we have learned that we can register processes in Elixir by giving them atom names:</source>
          <target state="translated">에이전트는 프로세스이므로 각 버킷에는 프로세스 식별자 (pid)가 있지만 버킷에는 이름이 없습니다. &lt;a href=&quot;../processes&quot;&gt;프로세스 장으로&lt;/a&gt; 돌아가서 , 우리는 엘릭서에 프로세스 이름을 부여함으로써 프로세스를 등록 할 수 있다는 것을 배웠다</target>
        </trans-unit>
        <trans-unit id="3a720a734f9deda5036a5ed5e6279947f6baf484" translate="yes" xml:space="preserve">
          <source>Since an expression inside &lt;code&gt;try&lt;/code&gt; may not have been evaluated due to an exception, any variable created inside &lt;code&gt;try&lt;/code&gt; cannot be accessed externally. For instance:</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; 내부의 표현식 은 예외로 인해 평가 되지 않았으므로 &lt;code&gt;try&lt;/code&gt; 내부에서 작성된 변수는 외부에서 액세스 할 수 없습니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="6e8e1aa133da1364ca9cd2b48bd61a3e3c1339f3" translate="yes" xml:space="preserve">
          <source>Since any message, including the ones sent via &lt;code&gt;send/2&lt;/code&gt;, go to &lt;code&gt;handle_info/2&lt;/code&gt;, there is a chance unexpected messages will arrive to the server. Therefore, if we don&amp;rsquo;t define the catch-all clause, those messages could cause our registry to crash, because no clause would match. We don&amp;rsquo;t need to worry about such cases for &lt;code&gt;handle_call/3&lt;/code&gt; and &lt;code&gt;handle_cast/2&lt;/code&gt; though. Calls and casts are only done via the &lt;code&gt;GenServer&lt;/code&gt; API, so an unknown message is quite likely a developer mistake.</source>
          <target state="translated">&lt;code&gt;send/2&lt;/code&gt; 를 통해 전송 된 메시지를 포함하여 모든 메시지 는 &lt;code&gt;handle_info/2&lt;/code&gt; 로 이동하므로 예기치 않은 메시지가 서버에 도착할 가능성이 있습니다. 따라서 catch-all 절을 정의하지 않으면 절이 일치하지 않기 때문에 해당 메시지로 인해 레지스트리가 중단 될 수 있습니다. &lt;code&gt;handle_call/3&lt;/code&gt; 및 &lt;code&gt;handle_cast/2&lt;/code&gt; 와 같은 경우에 대해서는 걱정할 필요가 없습니다 . 호출 및 전송은 &lt;code&gt;GenServer&lt;/code&gt; API 를 통해서만 수행 되므로 알 수없는 메시지는 개발자 실수 일 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="11fb67f1e2d25f6df1a9a1266e1b60bb58f6b6d3" translate="yes" xml:space="preserve">
          <source>Since archives are specific to Elixir versions, it is expected from build tools to swap the &lt;code&gt;MIX_ARCHIVES&lt;/code&gt; variable to different locations based on a particular Elixir installation.</source>
          <target state="translated">아카이브는 Elixir 버전에 고유하므로 빌드 도구 에서 특정 Elixir 설치에 따라 &lt;code&gt;MIX_ARCHIVES&lt;/code&gt; 변수를 다른 위치 로 교체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3d6f72045be18842d7d487aab2142772aa012354" translate="yes" xml:space="preserve">
          <source>Since configuration files are often accessed on target machines, it can be expressed either as:</source>
          <target state="translated">구성 파일은 종종 대상 시스템에서 액세스되므로 다음과 같이 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fc813b30867503fd7d80ceb89d26056f219ebb2" translate="yes" xml:space="preserve">
          <source>Since each test has a unique name, we use the test name to name our registries. This way, we no longer need to pass the registry PID around, instead we identify it by the test name. Also note we assigned the result of &lt;code&gt;start_supervised!&lt;/code&gt; to underscore (&lt;code&gt;_&lt;/code&gt;). This idiom is often used to signal that we are not interested in the result of &lt;code&gt;start_supervised!&lt;/code&gt;.</source>
          <target state="translated">각 테스트에는 고유 한 이름이 있으므로 테스트 이름을 사용하여 레지스트리 이름을 지정합니다. 이런 식으로 더 이상 레지스트리 PID를 전달할 필요없이 테스트 이름으로 식별합니다. 또한 &lt;code&gt;start_supervised!&lt;/code&gt; 의 결과를 할당했습니다 ! 밑줄 ( &lt;code&gt;_&lt;/code&gt; ). 이 관용구는 종종 우리가 &lt;code&gt;start_supervised!&lt;/code&gt; 의 결과에 관심이 없다는 것을 알리기 위해 사용됩니다! .</target>
        </trans-unit>
        <trans-unit id="539b55b9c301e37db2ba5709f167489b7c16ad33" translate="yes" xml:space="preserve">
          <source>Since evaluating this function causes the process to terminate, it has no return value.</source>
          <target state="translated">이 함수를 평가하면 프로세스가 종료되므로 리턴 값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="f1ce4d7db6e34c56c6b0f354fe1c976084fd70b9" translate="yes" xml:space="preserve">
          <source>Since exceptions are structs, the API supported by &lt;a href=&quot;#defstruct/1&quot;&gt;&lt;code&gt;defstruct/1&lt;/code&gt;&lt;/a&gt; is also available in &lt;a href=&quot;#defexception/1&quot;&gt;&lt;code&gt;defexception/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외는 구조체이므로 &lt;a href=&quot;#defstruct/1&quot;&gt; &lt;code&gt;defstruct/1&lt;/code&gt; 에서&lt;/a&gt; 지원하는 API 는 &lt;a href=&quot;#defexception/1&quot;&gt; &lt;code&gt;defexception/1&lt;/code&gt; &lt;/a&gt; 에서도 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43379b8fa276cfff986ca581f0982483e58e7290" translate="yes" xml:space="preserve">
          <source>Since our routing table is now empty, our distributed tests should fail. Restart the apps and re-run tests to see the failure:</source>
          <target state="translated">라우팅 테이블이 비어 있으므로 분산 테스트가 실패합니다. 앱을 다시 시작하고 테스트를 다시 실행하여 실패를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="35acc66a5d066ad7dd9d09e09f76ee2a2ec26964" translate="yes" xml:space="preserve">
          <source>Since regular strings are valid entities in an algebra document, an implementation of the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol may simply return a string, although that will devoid it of any pretty-printing.</source>
          <target state="translated">정규 문자열은 대수 문서에서 유효한 엔터티이므로 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; 프로토콜을 구현 하면 문자열을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f64d99700777b1262233e96b381239b72533e52" translate="yes" xml:space="preserve">
          <source>Since the &amp;ldquo;shopping&amp;rdquo; bucket would be stored on &lt;code&gt;bar&lt;/code&gt;, the request fails as &lt;code&gt;bar&lt;/code&gt; is not available. If you go back to the terminal running &lt;code&gt;foo&lt;/code&gt;, you will see:</source>
          <target state="translated">&amp;ldquo;쇼핑&amp;rdquo;버킷은 &lt;code&gt;bar&lt;/code&gt; 에 저장 되므로 &lt;code&gt;bar&lt;/code&gt; 를 사용할 수 없으므로 요청이 실패 합니다. &lt;code&gt;foo&lt;/code&gt; 를 실행하는 터미널로 돌아 가면 다음을 볼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f3f50b4e1f5b6c16d180ba7b01763cd119278691" translate="yes" xml:space="preserve">
          <source>Since the bucket terminated, the registry also stopped, and our test fails when trying to &lt;code&gt;GenServer.call/3&lt;/code&gt; it:</source>
          <target state="translated">버킷이 종료 &lt;code&gt;GenServer.call/3&lt;/code&gt; 레지스트리도 중지되었으며 GenServer.call/3을 시도하면 테스트가 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="7a4bb3b51a8bb6e716ca0d2a7b86f828cab0f46b" translate="yes" xml:space="preserve">
          <source>Since the example above is such a common requirement, it can be expressed as:</source>
          <target state="translated">위의 예는 일반적인 요구 사항이므로 다음과 같이 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85bfe62ef0b50ee77c720da4424c8a1e00f3e6de" translate="yes" xml:space="preserve">
          <source>Since the first element of the enumerable is used as the initial value of the accumulator, &lt;code&gt;fun&lt;/code&gt; will only be executed &lt;code&gt;n - 1&lt;/code&gt; times where &lt;code&gt;n&lt;/code&gt; is the length of the enumerable. This function won't call the specified function for enumerables that are one-element long.</source>
          <target state="translated">열거 형의 첫 번째 요소가 누산기의 초기 값으로 사용되므로 &lt;code&gt;fun&lt;/code&gt; 는 &lt;code&gt;n - 1&lt;/code&gt; 회만 실행 되며 여기서 &lt;code&gt;n&lt;/code&gt; 은 열거 형의 길이입니다. 이 함수는 한 요소 길이의 열거 가능 항목에 대해 지정된 함수를 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aacb89f517203634d25c6d9f152a44057ef8ac07" translate="yes" xml:space="preserve">
          <source>Since there is no variable &lt;code&gt;unknown&lt;/code&gt; previously defined, Elixir assumed you were trying to call a function named &lt;code&gt;unknown/0&lt;/code&gt;, but such a function does not exist.</source>
          <target state="translated">이전에 정의 된 &lt;code&gt;unknown&lt;/code&gt; 변수가 없기 때문에 Elixir는 사용자가 &lt;code&gt;unknown/0&lt;/code&gt; 이라는 이름의 함수를 호출하려고한다고 가정 했지만 그러한 함수는 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="765bd0055668383c0ea2677b5b1bfbe98b9619f4" translate="yes" xml:space="preserve">
          <source>Since there is no variable &lt;code&gt;unknown&lt;/code&gt; previously defined, Elixir imagined you were trying to call a function named &lt;code&gt;unknown/0&lt;/code&gt;, but such a function does not exist.</source>
          <target state="translated">이전에 정의 된 &lt;code&gt;unknown&lt;/code&gt; 없는 변수가 없기 때문에 Elixir는 &lt;code&gt;unknown/0&lt;/code&gt; 이라는 함수를 호출하려고 했지만 그러한 함수는 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f8894fa7fe5c3478753e328f6f323ba67ca2e3bb" translate="yes" xml:space="preserve">
          <source>Since these tasks are supervised and not directly linked to the caller, they cannot be awaited on. &lt;a href=&quot;#start_link/1&quot;&gt;&lt;code&gt;start_link/1&lt;/code&gt;&lt;/a&gt;, unlike &lt;a href=&quot;#async/1&quot;&gt;&lt;code&gt;async/1&lt;/code&gt;&lt;/a&gt;, returns &lt;code&gt;{:ok, pid}&lt;/code&gt; (which is the result expected by supervisors).</source>
          <target state="translated">이러한 작업은 감독되고 호출자와 직접 연결되지 않으므로 기다릴 수 없습니다. &lt;a href=&quot;#start_link/1&quot;&gt; &lt;code&gt;start_link/1&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;#async/1&quot;&gt; &lt;code&gt;async/1&lt;/code&gt; &lt;/a&gt; 과 달리 &lt;code&gt;{:ok, pid}&lt;/code&gt; (감독자가 예상 한 결과)를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="389839597845fc091bf9814cfbeff4f11280ed1d" translate="yes" xml:space="preserve">
          <source>Since this function prints the result returned by the editor, &lt;code&gt;ELIXIR_EDITOR&lt;/code&gt; can be set &quot;echo&quot; if you prefer to display the location rather than opening it.</source>
          <target state="translated">이 함수는 편집기에서 반환 한 결과를 인쇄하므로 위치를 열지 않고 표시하려는 경우 &lt;code&gt;ELIXIR_EDITOR&lt;/code&gt; 를 &quot;echo&quot;로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a41fdc6391fdcf7a1524af099a49c3aa668d5ca" translate="yes" xml:space="preserve">
          <source>Since this is a destructive action, cleaning of dependencies only occurs when passing arguments/options:</source>
          <target state="translated">이것은 파괴적인 작업이기 때문에, 의존성 정리는 인수 / 옵션을 전달할 때만 발생합니다 :</target>
        </trans-unit>
        <trans-unit id="0bf76283b6bb6b290186e0db4141422fda25d569" translate="yes" xml:space="preserve">
          <source>Since this is a destructive action, unlocking dependencies only occurs when passing arguments/options:</source>
          <target state="translated">이것은 파괴적인 작업이기 때문에, 의존성 잠금 해제는 인수 / 옵션을 전달할 때만 발생합니다 :</target>
        </trans-unit>
        <trans-unit id="5a6e67529e7deb94dfc751f6f9825f6e84397505" translate="yes" xml:space="preserve">
          <source>Since this is a destructive action, updating all dependencies only occurs when the &lt;code&gt;--all&lt;/code&gt; command line option is passed.</source>
          <target state="translated">이는 파괴적인 작업이므로 모든 종속성 업데이트는 &lt;code&gt;--all&lt;/code&gt; 명령 줄 옵션이 전달 된 경우에만 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="9288bd650531234fa96d8de10cb48efb896be63c" translate="yes" xml:space="preserve">
          <source>Since tuples, lists, maps, and others are treated the same as function calls in Elixir syntax, this property is also available to them:</source>
          <target state="translated">튜플, 목록, 맵 등은 Elixir 구문의 함수 호출과 동일하게 취급되므로이 속성도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd876c2171809804da789369d0f788453b1d762e" translate="yes" xml:space="preserve">
          <source>Since typespecs and docs are loaded from the .beam file (they are not loaded in memory with the module because there is no need for them to be in memory), they are not reloaded when you reload the module.</source>
          <target state="translated">typespec 및 문서는 .beam 파일에서로드되므로 (메모리에있을 필요가 없기 때문에 모듈과 함께 메모리에로드되지 않음) 모듈을 다시로드 할 때 다시로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="695e4486dc05d2af7e873048e111e9ef335874fa" translate="yes" xml:space="preserve">
          <source>Since we have changed the supervisor specification, we need to ask: is our supervision strategy still correct?</source>
          <target state="translated">감독자 사양을 변경 했으므로 다음과 같은 질문을해야합니다. 감독 전략이 여전히 올바른가?</target>
        </trans-unit>
        <trans-unit id="1ebfcf673c0172052f119086e5c87a6211d88260" translate="yes" xml:space="preserve">
          <source>Since we have characters like &lt;code&gt;ł&lt;/code&gt; assigned to the code point &lt;code&gt;322&lt;/code&gt;, we actually need more than one byte to represent them. That&amp;rsquo;s why we see a difference when we calculate the &lt;code&gt;byte_size/1&lt;/code&gt; of a string compared to its &lt;code&gt;String.length/1&lt;/code&gt;:</source>
          <target state="translated">코드 포인트 &lt;code&gt;322&lt;/code&gt; 에 &lt;code&gt;ł&lt;/code&gt; 과 같은 문자가 할당되어 있기 때문에 실제로는 2 바이트 이상이 필요합니다. 그렇기 때문에 &lt;code&gt;String.length/1&lt;/code&gt; 과 비교하여 문자열 의 &lt;code&gt;byte_size/1&lt;/code&gt; 을 계산할 때 차이가 발생하는 이유는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2c19e5383a549d66b2f89101e27b9b7851ada37" translate="yes" xml:space="preserve">
          <source>Since we have now changed our registry to use &lt;code&gt;KV.BucketSupervisor&lt;/code&gt;, which is registered globally, our tests are now relying on this shared supervisor even though each test has its own registry. The question is: should we?</source>
          <target state="translated">이제 전 세계에 등록 된 &lt;code&gt;KV.BucketSupervisor&lt;/code&gt; 를 사용하도록 레지스트리를 변경 했으므로 각 테스트마다 고유 한 레지스트리가 있어도 테스트는이 공유 관리자에 의존합니다. 문제는 : 우리가해야 하는가?</target>
        </trans-unit>
        <trans-unit id="73c1faf8869380abc1edacc97a5d1771ec7b9e8e" translate="yes" xml:space="preserve">
          <source>Since we have relied only on a non-shared partition of the bucket supervisor so far, we don&amp;rsquo;t need to worry about concurrency issues in our test suite. In case it ever becomes a problem, we can start a supervisor per test and pass it as an argument to the registry &lt;code&gt;start_link&lt;/code&gt; function.</source>
          <target state="translated">지금까지 버킷 수퍼바이저의 비공유 파티션에만 의존 했으므로 테스트 스위트의 동시성 문제에 대해 걱정할 필요가 없습니다. 문제가 생길 경우 테스트 당 감독자를 시작하여 레지스트리 &lt;code&gt;start_link&lt;/code&gt; 함수에 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27114ec0715ca4313c0f129e147c381a042f1009" translate="yes" xml:space="preserve">
          <source>Since we have specified &lt;code&gt;KV&lt;/code&gt; as the module callback, let&amp;rsquo;s change the &lt;code&gt;KV&lt;/code&gt; module defined in &lt;code&gt;lib/kv.ex&lt;/code&gt; to implement a &lt;code&gt;start/2&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;KV&lt;/code&gt; 를 모듈 콜백으로 지정 &lt;code&gt;lib/kv.ex&lt;/code&gt; 에 정의 된 &lt;code&gt;KV&lt;/code&gt; 모듈을 &lt;code&gt;start/2&lt;/code&gt; 함수 를 구현하도록 변경해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="701589be2a9f211ec2f7483dc6bba98a5419568a" translate="yes" xml:space="preserve">
          <source>Since we want &lt;code&gt;kv_server&lt;/code&gt; to eventually use the functionality we defined in &lt;code&gt;kv&lt;/code&gt;, we need to add &lt;code&gt;kv&lt;/code&gt; as a dependency to our application.</source>
          <target state="translated">&lt;code&gt;kv_server&lt;/code&gt; 가 결국 &lt;code&gt;kv&lt;/code&gt; 에서 정의한 기능을 사용 하기를 원 하므로 애플리케이션에 대한 종속성으로 &lt;code&gt;kv&lt;/code&gt; 를 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="425a08cd5321884d0ab45bab21799979e1c5501f" translate="yes" xml:space="preserve">
          <source>Single quotes are charlists, double quotes are strings. We will talk more about them in the &lt;a href=&quot;binaries-strings-and-char-lists&quot;&gt;&amp;ldquo;Binaries, strings and charlists&amp;rdquo;&lt;/a&gt; chapter.</source>
          <target state="translated">작은 따옴표는 문자 목록이고 큰 따옴표는 문자열입니다. &lt;a href=&quot;binaries-strings-and-char-lists&quot;&gt;&quot;바이너리, 문자열 및 캐릭터리스트&quot;&lt;/a&gt; 장 에서 이에 대해 더 이야기 할 것입니다 .</target>
        </trans-unit>
        <trans-unit id="2d7528bda0a71f6d8069c7c15f6dcbe9bf22f1e0" translate="yes" xml:space="preserve">
          <source>Single-line strings in Elixir are written between double-quotes, such as &lt;code&gt;&quot;foo&quot;&lt;/code&gt;. Any double-quote inside the string must be escaped with &lt;code&gt;\&lt;/code&gt;. Strings support Unicode characters and are stored as UTF-8 encoded binaries.</source>
          <target state="translated">Elixir의 한 줄짜리 문자열은 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 와 같이 큰 따옴표로 묶습니다 . 문자열 안의 큰 따옴표는 &lt;code&gt;\&lt;/code&gt; 로 이스케이프해야합니다 . 문자열은 유니 코드 문자를 지원하며 UTF-8로 인코딩 된 바이너리로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="a2e31d493b537b363c074ec4f97ee377323684c2" translate="yes" xml:space="preserve">
          <source>Size and unit can also be specified using a syntax shortcut when passing integer values:</source>
          <target state="translated">정수 값을 전달할 때 구문 바로 가기를 사용하여 크기와 단위를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="52d2c70012d8ed1ea7e910df59a016b1f6976dde" translate="yes" xml:space="preserve">
          <source>Sizes for types are a bit more nuanced. The default size for integers is 8.</source>
          <target state="translated">유형의 크기가 조금 더 미묘합니다. 정수의 기본 크기는 8입니다.</target>
        </trans-unit>
        <trans-unit id="5bb4bb1ca83ec5f474261d62ad95799078b47602" translate="yes" xml:space="preserve">
          <source>Skipped (via @tag :skip)</source>
          <target state="translated">건너 뛰기 (@tag : skip를 통해)</target>
        </trans-unit>
        <trans-unit id="d5ca622d07bd8d35b6d8664121b3593144857e10" translate="yes" xml:space="preserve">
          <source>Sleeps the current process for the given &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;timeout&lt;/code&gt; 동안 현재 프로세스를 대기시킵니다 .</target>
        </trans-unit>
        <trans-unit id="f7ef1d93c43e803ddf8450fe78ca43bb2364e006" translate="yes" xml:space="preserve">
          <source>So far they behave the same, as we are passing an integer as argument. But what happens when we pass an expression:</source>
          <target state="translated">지금까지는 정수를 인수로 전달하므로 동일하게 작동합니다. 그러나 표현식을 전달하면 어떻게 되나요?</target>
        </trans-unit>
        <trans-unit id="7fa4b79925c8d51a8a7c81a3dc5cde46fe8fe666" translate="yes" xml:space="preserve">
          <source>So far we have been starting one registry per test to ensure they are isolated:</source>
          <target state="translated">지금까지 테스트 당 하나의 레지스트리를 시작하여 격리되었는지 확인했습니다.</target>
        </trans-unit>
        <trans-unit id="c0b9613de7c2b582f1851b80ca71692048f39354" translate="yes" xml:space="preserve">
          <source>So far we have explored tasks that are started and run in isolation, with no regard for their return value. However, sometimes it is useful to run a task to compute a value and read its result later on. For this, tasks also provide the &lt;code&gt;async/await&lt;/code&gt; pattern:</source>
          <target state="translated">지금까지 우리는 반환 값에 관계없이 시작하여 독립적으로 시작한 작업을 살펴 ​​보았습니다. 그러나 때로는 값을 계산하고 나중에 결과를 읽는 작업을 실행하는 것이 유용합니다. 이를 위해 작업은 &lt;code&gt;async/await&lt;/code&gt; 패턴 도 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7f909522b97564dd4054fcb1eb6b62ef9bbb43d1" translate="yes" xml:space="preserve">
          <source>So far we have hardcoded the routing table into the &lt;code&gt;KV.Router&lt;/code&gt; module. However, we would like to make the table dynamic. This allows us not only to configure development/test/production, but also to allow different nodes to run with different entries in the routing table. There is a feature of</source>
          <target state="translated">지금까지 라우팅 테이블을 &lt;code&gt;KV.Router&lt;/code&gt; 모듈에 하드 코딩했습니다 . 그러나 테이블을 동적으로 만들고 싶습니다. 이를 통해 개발 / 테스트 / 프로덕션을 구성 할 수있을뿐만 아니라 라우팅 테이블의 다른 항목으로 다른 노드를 실행할 수 있습니다. 기능이 있습니다</target>
        </trans-unit>
        <trans-unit id="6f62da9b30846d1f5dc3344a1711f438b5114216" translate="yes" xml:space="preserve">
          <source>So far we have only written unit tests, typically testing a single module directly. However, in order to make &lt;code&gt;KVServer.Command.run/1&lt;/code&gt; testable as a unit we would need to change its implementation to not send commands directly to the &lt;code&gt;KV.Registry&lt;/code&gt; process but instead pass a server as an argument. For example, we would need to change &lt;code&gt;run&lt;/code&gt;&amp;rsquo;s signature to &lt;code&gt;def run(command, pid)&lt;/code&gt; and then change all clauses accordingly:</source>
          <target state="translated">지금까지는 단위 테스트 만 작성했으며 일반적으로 단일 모듈을 직접 테스트했습니다. 그러나 &lt;code&gt;KVServer.Command.run/1&lt;/code&gt; 을 단위로 테스트 가능하게하려면 명령을 &lt;code&gt;KV.Registry&lt;/code&gt; 프로세스로 직접 보내지 않고 대신 서버를 인수로 전달하도록 구현을 변경해야합니다 . 예를 들어, &lt;code&gt;run&lt;/code&gt; 의 서명을 &lt;code&gt;def run(command, pid)&lt;/code&gt; 로 변경 한 다음 그에 따라 모든 절을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="251229844d6239ebff61cacf8582cf96e235c9f5" translate="yes" xml:space="preserve">
          <source>So far we have started the supervisor and listed its children. Once the supervisor started, it also started all of its children.</source>
          <target state="translated">지금까지 우리는 감독자를 시작하고 그 자녀를 나열했습니다. 감독자가 시작되면 모든 자식도 시작했습니다.</target>
        </trans-unit>
        <trans-unit id="cd7e3ac7c01c70e2691dd378c34f831dc99cf144" translate="yes" xml:space="preserve">
          <source>So far we have started the supervisor passing a single child as a tuple as well as a strategy called &lt;code&gt;:one_for_one&lt;/code&gt;:</source>
          <target state="translated">지금까지 감독자는 단일 자녀를 튜플 및 다음과 같은 전략으로 전달하기 시작했습니다 &lt;code&gt;:one_for_one&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2b84bcc0b56e9b7a77002fd2c4c80e6b1043dfd4" translate="yes" xml:space="preserve">
          <source>So far we have used three callbacks: &lt;code&gt;handle_call/3&lt;/code&gt;, &lt;code&gt;handle_cast/2&lt;/code&gt; and &lt;code&gt;handle_info/2&lt;/code&gt;. Here is what we should consider when deciding when to use each:</source>
          <target state="translated">지금까지 세 가지 콜백 ( &lt;code&gt;handle_call/3&lt;/code&gt; , &lt;code&gt;handle_cast/2&lt;/code&gt; 및 &lt;code&gt;handle_info/2&lt;/code&gt; )을 사용했습니다 . 각각 사용시기를 결정할 때 고려해야 할 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6f7dbac470c8be21619867a1a999689fe67e712e" translate="yes" xml:space="preserve">
          <source>So far we haven&amp;rsquo;t discussed any associative data structures, i.e. data structures that are able to associate a certain value (or multiple values) to a key. Different languages call these different names like dictionaries, hashes, associative arrays, etc.</source>
          <target state="translated">지금까지 어떤 연관 데이터 구조, 즉 특정 값 (또는 여러 값)을 키에 연결할 수있는 데이터 구조에 대해서는 논의하지 않았습니다. 다른 언어는 사전, 해시, 연관 배열 등과 같은 다른 이름을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5774107ee19024763a6ae09242699f6a7714e566" translate="yes" xml:space="preserve">
          <source>So far, all examples have used &lt;code&gt;/&lt;/code&gt; to delimit a regular expression. However, sigils support 8 different delimiters:</source>
          <target state="translated">지금까지 모든 예제는 &lt;code&gt;/&lt;/code&gt; 를 사용하여 정규식을 구분했습니다. 그러나 sigils는 8 가지 구분 기호를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="088fcaa5540ac3f087305577f114f1bc32519aad" translate="yes" xml:space="preserve">
          <source>So far, we have assembled a release named &lt;code&gt;foo&lt;/code&gt;, but our routing table contains information for both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;. Let&amp;rsquo;s start &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">지금까지 &lt;code&gt;foo&lt;/code&gt; 라는 릴리즈를 조립 했지만 라우팅 테이블에는 &lt;code&gt;foo&lt;/code&gt; 와 &lt;code&gt;bar&lt;/code&gt; 모두에 대한 정보가 들어 있습니다 . &lt;code&gt;foo&lt;/code&gt; 를 시작하자 :</target>
        </trans-unit>
        <trans-unit id="e56c23fa4849096bb2c027d3d123d2a2f49fa67b" translate="yes" xml:space="preserve">
          <source>So far, we have learned that a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; can be used as a supervised process that handles sync and async calls. It can also handle system messages, such as periodic messages and monitoring events. GenServer processes may also be named.</source>
          <target state="translated">지금까지 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 를 동기화 및 비동기 호출을 처리하는 감독 프로세스로 사용할 수 있다는 것을 알게 되었습니다. 주기적 메시지 및 모니터링 이벤트와 같은 시스템 메시지를 처리 ​​할 수도 있습니다. GenServer 프로세스의 이름을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="68075bc4dca6cf8169233819190fd1733a0423c9" translate="yes" xml:space="preserve">
          <source>So let&amp;rsquo;s get started!</source>
          <target state="translated">이제 시작합시다!</target>
        </trans-unit>
        <trans-unit id="25ecbbe8564fb6e467c9ba98322930bbb97f7a85" translate="yes" xml:space="preserve">
          <source>So one may ask: which exit reason should I choose when exiting? There are three options:</source>
          <target state="translated">따라서 종료 할 때 어떤 종료 이유를 선택해야합니까? 세 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c55832fc922e1c92f24778a3f7674a00b54faf03" translate="yes" xml:space="preserve">
          <source>So our last option is to go all in and pick the &lt;code&gt;:one_for_all&lt;/code&gt; strategy: the supervisor will kill and restart all of its children processes whenever any one of them dies. This is a completely reasonable approach for our application, since the registry can&amp;rsquo;t work without the bucket supervisor, and the bucket supervisor should terminate without the registry. Let&amp;rsquo;s reimplement &lt;code&gt;init/1&lt;/code&gt; in &lt;code&gt;KV.Supervisor&lt;/code&gt; to encode those properties:</source>
          <target state="translated">따라서 마지막 옵션은 모두 들어가서 &lt;code&gt;:one_for_all&lt;/code&gt; 전략을 선택하는 것입니다 . 감독자는 자식 프로세스 중 하나가 죽을 때마다 모든 자식 프로세스를 종료하고 다시 시작합니다. 버킷 수퍼바이저 없이는 레지스트리를 사용할 수없고 레지스트리 없이도 버킷 수퍼바이저를 종료해야하므로 이는 우리의 응용 프로그램에 대해 완전히 합리적인 접근 방식입니다. 이러한 속성을 인코딩하기 위해 &lt;code&gt;KV.Supervisor&lt;/code&gt; 에서 &lt;code&gt;init/1&lt;/code&gt; 을 다시 구현해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="7c297254927239f3c40ab4e76d309f6bc508fb85" translate="yes" xml:space="preserve">
          <source>So to be more precise, to deploy straight from a host to a separate target, the Erlang Runtime System (ERTS), and any native dependencies (NIFs), must be compiled for the same target triple. If you are building on a MacBook (&lt;code&gt;x86_64-apple-darwin&lt;/code&gt;) and trying to deploy to a typical Ubuntu machine (&lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt;), the release will not work. Instead you should build the release on a &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; host. As we will see, this can be done in multiple ways, such as releasing on the target itself, or by using virtual machines or containers, usually as part of your release pipeline.</source>
          <target state="translated">따라서보다 정확하게 말하자면 호스트에서 별도의 대상으로 직접 배포하려면 Erlang 런타임 시스템 (ERTS) 및 모든 기본 종속성 (NIF)이 동일한 대상 트리플에 대해 컴파일되어야합니다. MacBook ( &lt;code&gt;x86_64-apple-darwin&lt;/code&gt; ) 에서 빌드 하고 일반적인 Ubuntu 머신 ( &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; ) 에 배포하려는 경우 릴리스가 작동하지 않습니다. 대신 &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; 호스트 에서 릴리스를 빌드해야 합니다. 앞으로 살펴 보 겠지만 이는 대상 자체에서 릴리스하거나 일반적으로 릴리스 파이프 라인의 일부로 가상 머신 또는 컨테이너를 사용하는 등 여러 방법으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3f2a9dc09a340a2ebdee83822979ce59327f246" translate="yes" xml:space="preserve">
          <source>So, as mentioned above, we need to explicitly &lt;em&gt;not&lt;/em&gt; import &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#+/2&quot;&gt;&lt;code&gt;+/2&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">따라서 위에서 언급했듯이 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#+/2&quot;&gt; &lt;code&gt;+/2&lt;/code&gt; &lt;/a&gt; 를 명시 적으로 가져 &lt;em&gt;오지 않아야합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="83ae82602ec909b7e64f3e9c4185c9b43776fc1a" translate="yes" xml:space="preserve">
          <source>So, as mentioned above, we need to explicitly &lt;em&gt;not&lt;/em&gt; import &lt;a href=&quot;kernel#+/2&quot;&gt;&lt;code&gt;+/2&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">따라서 위에서 언급했듯이 &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;kernel#+/2&quot;&gt; &lt;code&gt;+/2&lt;/code&gt; &lt;/a&gt; 를 명시 적으로 가져 &lt;em&gt;오지&lt;/em&gt; 않아도됩니다 .</target>
        </trans-unit>
        <trans-unit id="59e08d5e1e0246e318c2c7b29c0f2dddbb1c0e3a" translate="yes" xml:space="preserve">
          <source>Some filters, like &lt;code&gt;:line&lt;/code&gt;, may require the whole test &lt;code&gt;collection&lt;/code&gt; to find the closest line, that's why it must also be passed as an argument.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; 과 같은 일부 필터 는 가장 가까운 줄을 찾기 위해 전체 테스트 &lt;code&gt;collection&lt;/code&gt; 이 필요할 수 있으므로 인수로도 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="05246bea080a0c4e539d207d5406b5490bd3f2cd" translate="yes" xml:space="preserve">
          <source>Some functions that work on integers are found in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">정수에서 작동하는 일부 함수는 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="298eccb34dba30d15b41ce5a15b44bef2b165685" translate="yes" xml:space="preserve">
          <source>Some functions that work on integers are found in &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">정수에서 작동하는 일부 함수는 &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4ff408bd67bda590b1a8dadfe81203b9dd46dcd" translate="yes" xml:space="preserve">
          <source>Some lists, called improper lists, do not have an empty list as the second element in the last cons cell:</source>
          <target state="translated">부적절한 목록이라고하는 일부 목록에는 마지막 단점 셀의 두 번째 요소로 빈 목록이 없습니다.</target>
        </trans-unit>
        <trans-unit id="841f2a3b2c7dce37f997bb04e09b4e105bd45274" translate="yes" xml:space="preserve">
          <source>Some metadata, however, is always added automatically by Logger whenever possible. Those are:</source>
          <target state="translated">그러나 일부 메타 데이터는 가능할 때마다 항상 Logger에 의해 자동으로 추가됩니다. 사람들은:</target>
        </trans-unit>
        <trans-unit id="d07d38fa8e482844b99583b24c1125361f791f0e" translate="yes" xml:space="preserve">
          <source>Some names have specific meaning in Elixir. We detail those cases below.</source>
          <target state="translated">일부 이름은 Elixir에서 특정 의미를 갖습니다. 우리는 그 경우를 아래에 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="5102715b1c152eb041c75bc9866d03423b108a9d" translate="yes" xml:space="preserve">
          <source>Some of the functionalities described here will not be available depending on your terminal. In particular, if you get a message saying that the smart terminal could not be run, some of the features described here won't work.</source>
          <target state="translated">여기에 설명 된 기능 중 일부는 터미널에 따라 사용할 수 없습니다. 특히, 스마트 단말기를 실행할 수 없다는 메시지가 표시되면 여기에 설명 된 일부 기능이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="424f006fc61cb524f1c4101e27c8c225bd339a44" translate="yes" xml:space="preserve">
          <source>Some of the functions described in this module are inlined by the Elixir compiler into their Erlang counterparts in the &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html&quot;&gt;&lt;code&gt;:erlang&lt;/code&gt; module&lt;/a&gt;. Those functions are called BIFs (built-in internal functions) in Erlang-land and they exhibit interesting properties, as some of them are allowed in guards and others are used for compiler optimizations.</source>
          <target state="translated">이 모듈에서 설명하는 함수 중 일부는 Elixir 컴파일러에 의해 &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html&quot;&gt; &lt;code&gt;:erlang&lt;/code&gt; 모듈&lt;/a&gt; 의 Erlang 대응 함수에 인라인됩니다 . Erlang-land에서는 이러한 함수를 BIF (내장 내장 함수)라고하며 일부는 가드에서 허용되고 다른 함수는 컴파일러 최적화에 사용되므로 흥미로운 속성을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="da0b69950243e012775921ae13af5b19b4d25d0f" translate="yes" xml:space="preserve">
          <source>Some of the functions in this module are inlined by the compiler, similar to functions in the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module and they are explicitly marked in their docs as &quot;inlined by the compiler&quot;. For more information about inlined functions, check out the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 모듈의 일부 함수는 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 모듈의 함수와 유사하게 컴파일러에 의해 인라인되며 해당 문서에서 &quot;컴파일러에 의해 인라인 됨&quot;으로 명시 적으로 표시됩니다. 인라인 함수에 대한 자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 확인하십시오. 모듈을 .</target>
        </trans-unit>
        <trans-unit id="a192dcc1e8e79268df0b27c2cf55ebeff7ecf7e0" translate="yes" xml:space="preserve">
          <source>Some of the functions in this module are inlined by the compiler, similar to functions in the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module and they are explicitly marked in their docs as &quot;inlined by the compiler&quot;. For more information about inlined functions, check out the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 모듈의 일부 기능은 &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 모듈의 기능과 유사하게 컴파일러에 의해 인라인되며 문서에서 &quot;컴파일러에 의해 인라인 됨&quot;으로 명시 적으로 표시됩니다. 인라인 함수에 대한 자세한 내용은 &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; 모듈을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="1351a1f3f5e4ff15e2ee7bf563a9188c76ada1d8" translate="yes" xml:space="preserve">
          <source>Some of those functions are low-level, allowing the user to interact with files or IO devices, like &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#copy/3&quot;&gt;&lt;code&gt;copy/3&lt;/code&gt;&lt;/a&gt; and others. This module also provides higher level functions that work with filenames and have their naming based on UNIX variants. For example, one can copy a file via &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt; and remove files and directories recursively via &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 기능 중 일부는 저수준이므로 사용자는 &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#copy/3&quot;&gt; &lt;code&gt;copy/3&lt;/code&gt; &lt;/a&gt; 등과 같은 파일 또는 IO 장치와 상호 작용할 수 있습니다. 이 모듈은 또한 파일 이름과 함께 작동하고 UNIX 변형을 기반으로 이름이 지정된 더 높은 수준의 기능을 제공합니다. 예를 들어, &lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt; 를 통해 파일을 복사하고 &lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; 을&lt;/a&gt; 통해 파일과 디렉토리를 재귀 적으로 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24da5e653548d5291e81eaa6c8d00166cc1a3c68" translate="yes" xml:space="preserve">
          <source>Some of those functions are low-level, allowing the user to interact with files or IO devices, like &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#copy/3&quot;&gt;&lt;code&gt;copy/3&lt;/code&gt;&lt;/a&gt; and others. This module also provides higher level functions that work with filenames and have their naming based on Unix variants. For example, one can copy a file via &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt; and remove files and directories recursively via &lt;a href=&quot;#rm_rf/1&quot;&gt;&lt;code&gt;rm_rf/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 기능 중 일부는 저수준이므로 사용자가 &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#copy/3&quot;&gt; &lt;code&gt;copy/3&lt;/code&gt; &lt;/a&gt; 등과 같은 파일 또는 IO 장치와 상호 작용할 수 있습니다. 이 모듈은 또한 파일 이름과 함께 작동하고 이름이 Unix 변형을 기반으로하는 더 높은 수준의 함수를 제공합니다. 예를 들어 &lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt; 를 통해 파일을 복사하고 &lt;a href=&quot;#rm_rf/1&quot;&gt; &lt;code&gt;rm_rf/1&lt;/code&gt; 을&lt;/a&gt; 통해 파일과 디렉토리를 재귀 적으로 제거 할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="0607fbf81b66732aa3f0cb08914ffecb1a52e30a" translate="yes" xml:space="preserve">
          <source>Some other operators are special forms and cannot be overridden:</source>
          <target state="translated">일부 다른 연산자는 특수 형식이며 재정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6fd879bb620af289a1b036290e1cf67c2340065b" translate="yes" xml:space="preserve">
          <source>Some switches will output different values based on the switches types:</source>
          <target state="translated">일부 스위치는 스위치 유형에 따라 다른 값을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="078594884aa40212dd4dbd4c58daf70340519f4d" translate="yes" xml:space="preserve">
          <source>Some tasks are automatically reenabled though, as they are expected to be invoked multiple times. They are: &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Cmd.html&quot;&gt;&lt;code&gt;mix cmd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Do.html&quot;&gt;&lt;code&gt;mix do&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Loadconfig.html&quot;&gt;&lt;code&gt;mix loadconfig&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Cprof.html&quot;&gt;&lt;code&gt;mix profile.cprof&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Eprof.html&quot;&gt;&lt;code&gt;mix profile.eprof&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Fprof.html&quot;&gt;&lt;code&gt;mix profile.fprof&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Xref.html&quot;&gt;&lt;code&gt;mix xref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하지만 일부 작업은 여러 번 호출 될 것으로 예상되므로 자동으로 다시 활성화됩니다. 그들은 : &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Cmd.html&quot;&gt; &lt;code&gt;mix cmd&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Do.html&quot;&gt; &lt;code&gt;mix do&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Loadconfig.html&quot;&gt; &lt;code&gt;mix loadconfig&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Cprof.html&quot;&gt; &lt;code&gt;mix profile.cprof&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Eprof.html&quot;&gt; &lt;code&gt;mix profile.eprof&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Profile.Fprof.html&quot;&gt; &lt;code&gt;mix profile.fprof&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; 하고, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Xref.html&quot;&gt; &lt;code&gt;mix xref&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1594a8ec691f4330becf7636c23a4c5abd8a9640" translate="yes" xml:space="preserve">
          <source>Some types have associated modifiers to clear up ambiguity in byte representation.</source>
          <target state="translated">일부 유형에는 바이트 표시에서 모호성을 해소하기 위해 연관된 수정자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a60adb38022b605c61e542eae88c79cb8debaee" translate="yes" xml:space="preserve">
          <source>Some types' internal structures are kept hidden and instead show a user-friendly structure when inspected. The idiom in Elixir is to print those data types in the format &lt;code&gt;#Name&amp;lt;...&amp;gt;&lt;/code&gt;. Because those values are treated as comments in Elixir code due to the leading &lt;code&gt;#&lt;/code&gt; sign, they require special care when being used in doctests.</source>
          <target state="translated">일부 유형의 내부 구조는 숨겨진 상태로 유지되며 검사 할 때 사용자 친화적 인 구조를 표시합니다. Elixir의 관용구는 이러한 데이터 유형을 &lt;code&gt;#Name&amp;lt;...&amp;gt;&lt;/code&gt; 형식으로 인쇄하는 것 입니다. 이러한 값은 선행 &lt;code&gt;#&lt;/code&gt; 기호 로 인해 Elixir 코드에서 주석으로 처리되기 때문에 doctest에서 사용할 때 특별한주의가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="deaf1a57d57875a67207f24f3b5dd3ac6b782a3a" translate="yes" xml:space="preserve">
          <source>Sometimes a module embeds information from an external file. This attribute allows the module to annotate which external resources have been used.</source>
          <target state="translated">때때로 모듈은 외부 파일의 정보를 포함합니다. 이 속성을 통해 모듈은 사용 된 외부 리소스에 주석을 달 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="384caed829a0ddd94d2e273f1d95ffe9dee6a8ec" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s necessary to ensure that a resource is cleaned up after some action that could potentially raise an error. The &lt;code&gt;try/after&lt;/code&gt; construct allows you to do that. For example, we can open a file and use an &lt;code&gt;after&lt;/code&gt; clause to close it&amp;ndash;even if something goes wrong:</source>
          <target state="translated">때때로 오류가 발생할 수있는 조치 후에 자원을 정리해야합니다. &lt;code&gt;try/after&lt;/code&gt; 구조가 허용하는 당신이 그렇게합니다. 예를 들어, 파일을 열고 &lt;code&gt;after&lt;/code&gt; 절을 사용하여 파일 을 닫을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2b2ac6019fb65f8717c90d1d018234f716a20c9" translate="yes" xml:space="preserve">
          <source>Sometimes variable names might be dynamically created. In such cases, &lt;code&gt;Macro.var/2&lt;/code&gt; can be used to define new variables:</source>
          <target state="translated">때로는 변수 이름이 동적으로 생성 될 수 있습니다. 이러한 경우 &lt;code&gt;Macro.var/2&lt;/code&gt; 를 사용하여 새 변수를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3e6cdc44719c0255e951c12c019ffe28042a186" translate="yes" xml:space="preserve">
          <source>Sometimes when working with quoted expressions, it may be useful to get the textual code representation back. This can be done with &lt;code&gt;Macro.to_string/1&lt;/code&gt;:</source>
          <target state="translated">따옴표로 묶은 표현식으로 작업 할 때 텍스트 코드 표현을 다시 얻는 것이 유용 할 수 있습니다. 이는 &lt;code&gt;Macro.to_string/1&lt;/code&gt; 로 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f678369b61eb09a9e589708cd7a2e02598564507" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to wrap the entire body of a function in a &lt;code&gt;try&lt;/code&gt; construct, often to guarantee some code will be executed afterwards. In such cases, Elixir allows you to omit the &lt;code&gt;try&lt;/code&gt; line:</source>
          <target state="translated">때로는 함수의 전체 본문을 &lt;code&gt;try&lt;/code&gt; 구문 으로 감싸고 나중에 일부 코드가 실행되도록 보장 하기를 원할 수 있습니다 . 이러한 경우 Elixir를 사용하면 &lt;code&gt;try&lt;/code&gt; 줄 을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a96f5994cefa16cd2405b3c485f7fd5c98881745" translate="yes" xml:space="preserve">
          <source>Sometimes you will create a list and it will return a value in single quotes. For example:</source>
          <target state="translated">때로는 목록을 작성하고 작은 따옴표로 값을 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8127688bd131696b0a37f05f499d0599032f888f" translate="yes" xml:space="preserve">
          <source>Sometimes, it may be handy to define supervisors backed by a module:</source>
          <target state="translated">때로는 모듈이 지원하는 감독자를 정의하는 것이 편리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="7107404c903a42c3ea798cd0771e63de0679051a" translate="yes" xml:space="preserve">
          <source>Sorting by multiple properties - first by size, then by first letter (this takes advantage of the fact that tuples are compared element-by-element):</source>
          <target state="translated">여러 속성으로 정렬-먼저 크기별로, 첫 글자로 정렬 (튜플은 요소별로 비교된다는 사실을 이용합니다) :</target>
        </trans-unit>
        <trans-unit id="cc46235140c8ba00a6b05c8f64c1ba9742da0042" translate="yes" xml:space="preserve">
          <source>Sorting structs</source>
          <target state="translated">구조체 정렬</target>
        </trans-unit>
        <trans-unit id="be5acfabf53936ea3e9b1247e69a2a9d3351da9f" translate="yes" xml:space="preserve">
          <source>Sorts the &lt;code&gt;enumerable&lt;/code&gt; according to Erlang's term ordering.</source>
          <target state="translated">Erlang의 용어 순서에 따라 &lt;code&gt;enumerable&lt;/code&gt; 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="e68a312ee613bb7d1d0c541895ad03ce0f0b9c2f" translate="yes" xml:space="preserve">
          <source>Sorts the &lt;code&gt;enumerable&lt;/code&gt; by the given function.</source>
          <target state="translated">주어진 함수를 기준 &lt;code&gt;enumerable&lt;/code&gt; 을 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="abd6bf16aa13625f3c6058f6271a87fad2698de5" translate="yes" xml:space="preserve">
          <source>Sorts the mapped results of the &lt;code&gt;enumerable&lt;/code&gt; according to the provided &lt;code&gt;sorter&lt;/code&gt; function.</source>
          <target state="translated">제공된 &lt;code&gt;sorter&lt;/code&gt; 함수 에 따라 &lt;code&gt;enumerable&lt;/code&gt; 매핑 된 결과를 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="1d1fce18c4110d2ca57fcf7014c3e55e330f72ee" translate="yes" xml:space="preserve">
          <source>Spawn executable is a more restricted and explicit version of spawn. It expects full file paths to the executable you want to execute. If they are in your &lt;code&gt;$PATH&lt;/code&gt;, they can be retrieved by calling &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#find_executable/1&quot;&gt;&lt;code&gt;System.find_executable/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Spawn 실행 파일은보다 제한적이고 명시적인 spawn 버전입니다. 실행하려는 실행 파일의 전체 파일 경로가 필요합니다. 그들이 당신에있는 경우 &lt;code&gt;$PATH&lt;/code&gt; , 그들은 호출하여 검색 할 수 있습니다 &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#find_executable/1&quot;&gt; &lt;code&gt;System.find_executable/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="15783b50f9d3f00eb365b748b956c65a135f9d3e" translate="yes" xml:space="preserve">
          <source>Spawn executable is a more restricted and explicit version of spawn. It expects full file paths to the executable you want to execute. If they are in your &lt;code&gt;$PATH&lt;/code&gt;, they can be retrieved by calling &lt;a href=&quot;system#find_executable/1&quot;&gt;&lt;code&gt;System.find_executable/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">스폰 실행 파일은보다 제한적이고 명시적인 스폰 버전입니다. 실행하려는 실행 파일의 전체 파일 경로가 필요합니다. 이들이 &lt;code&gt;$PATH&lt;/code&gt; 에 있으면 &lt;a href=&quot;system#find_executable/1&quot;&gt; &lt;code&gt;System.find_executable/1&lt;/code&gt; &lt;/a&gt; 을 호출하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06d844ce2d042cfc05ff00cd36cbaef907fbf9f7" translate="yes" xml:space="preserve">
          <source>Spawns the given function &lt;code&gt;fun&lt;/code&gt; from module &lt;code&gt;mod&lt;/code&gt;, passing the given &lt;code&gt;args&lt;/code&gt; according to the given options.</source>
          <target state="translated">주어진 옵션에 따라 주어진 &lt;code&gt;args&lt;/code&gt; 전달하여 모듈 &lt;code&gt;mod&lt;/code&gt; 에서 주어진 함수 &lt;code&gt;fun&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="e59d5e96307908db7f7259b156c4207b4b6647f1" translate="yes" xml:space="preserve">
          <source>Spawns the given function &lt;code&gt;fun&lt;/code&gt; from the given &lt;code&gt;module&lt;/code&gt; passing it the given &lt;code&gt;args&lt;/code&gt; and returns its PID.</source>
          <target state="translated">주어진 &lt;code&gt;module&lt;/code&gt; 에서 주어진 함수 &lt;code&gt;fun&lt;/code&gt; 을 생성 하여 주어진 &lt;code&gt;args&lt;/code&gt; 전달 하고 PID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ebfa1216cad38e8a649b56dffd10838521f159b4" translate="yes" xml:space="preserve">
          <source>Spawns the given function &lt;code&gt;fun&lt;/code&gt; from the given &lt;code&gt;module&lt;/code&gt; passing it the given &lt;code&gt;args&lt;/code&gt;, links it to the current process, and returns its PID.</source>
          <target state="translated">주어진 &lt;code&gt;module&lt;/code&gt; 에서 주어진 함수 &lt;code&gt;fun&lt;/code&gt; 을 생성하여 주어진 &lt;code&gt;args&lt;/code&gt; 를 전달 하고 현재 프로세스에 연결하고 PID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ea2e62ea14924f90832df9726a7c47d9b99aef7a" translate="yes" xml:space="preserve">
          <source>Spawns the given function according to the given options.</source>
          <target state="translated">주어진 옵션에 따라 주어진 기능을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3315809b279cf15aa395cbce73fa8ae67f6dbff9" translate="yes" xml:space="preserve">
          <source>Spawns the given function and returns its PID.</source>
          <target state="translated">주어진 함수를 생성하고 PID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="35d6575cb965b03843b65682af53845db43ea4f1" translate="yes" xml:space="preserve">
          <source>Spawns the given function, links it to the current process, and returns its PID.</source>
          <target state="translated">주어진 함수를 생성하고 현재 프로세스에 연결 한 후 PID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b3166525e86d6671be4ca627ba932e58c5e6876" translate="yes" xml:space="preserve">
          <source>Spawns the given function, monitors it and returns its PID and monitoring reference.</source>
          <target state="translated">주어진 함수를 생성하고 모니터링하여 PID 및 모니터링 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="476a4f932c0193636e1b5b265079bd4eebed09cf" translate="yes" xml:space="preserve">
          <source>Spawns the given module and function passing the given args, monitors it and returns its PID and monitoring reference.</source>
          <target state="translated">주어진 args를 전달하는 주어진 모듈과 함수를 생성하고 모니터하고 PID와 모니터링 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="11becd1e5ec9242aef1d1841d542f66a7becf7fb" translate="yes" xml:space="preserve">
          <source>Special forms are the basic building blocks of Elixir, and therefore cannot be overridden by the developer.</source>
          <target state="translated">특수 형식은 Elixir의 기본 구성 요소이므로 개발자가 재정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ec2d21cb128d08e54f4cc7123b3da9fc09f1d1fc" translate="yes" xml:space="preserve">
          <source>Special names</source>
          <target state="translated">특별한 이름</target>
        </trans-unit>
        <trans-unit id="bd9733e0c08db2f71cd9184a67c342d610f82cb0" translate="yes" xml:space="preserve">
          <source>Specifically, this function takes a UTF-8 encoded binary and returns a list of its integer code points. It is similar to &lt;a href=&quot;#codepoints/1&quot;&gt;&lt;code&gt;codepoints/1&lt;/code&gt;&lt;/a&gt; except that the latter returns a list of code points as strings.</source>
          <target state="translated">특히이 함수는 UTF-8로 인코딩 된 이진을 사용하여 정수 코드 포인트 목록을 반환합니다. 후자는 코드 포인트 목록을 문자열로 반환한다는 점을 제외하고는 &lt;a href=&quot;#codepoints/1&quot;&gt; &lt;code&gt;codepoints/1&lt;/code&gt; &lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="076d7709d7ab86ddce0bc7b4c95d3c7f192f7af8" translate="yes" xml:space="preserve">
          <source>Specifications can be overloaded just like ordinary functions.</source>
          <target state="translated">일반 기능과 마찬가지로 사양이 과부하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5caf5e40c5f8e8465a047f2e293de43751354b57" translate="yes" xml:space="preserve">
          <source>Specifies a provider API that loads configuration during boot.</source>
          <target state="translated">부팅 중에 구성을로드하는 공급자 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="594428487583abee60caa384a006645343bb4dab" translate="yes" xml:space="preserve">
          <source>Specifies an external resource for the current module.</source>
          <target state="translated">현재 모듈의 외부 리소스를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="991ba6c6c1d2cdca7ee53711d92474c28af8b0e5" translate="yes" xml:space="preserve">
          <source>Specifies the time zone database for calendar operations.</source>
          <target state="translated">달력 작업을위한 시간대 데이터베이스를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="33f17cd6008d68beaa918cd4a927ca8b7fb23835" translate="yes" xml:space="preserve">
          <source>Specify the module version. Accepts any valid Elixir value, for example:</source>
          <target state="translated">모듈 버전을 지정하십시오. 유효한 Elixir 값을받습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="5ae92cad872366e915ee35a53033e6a501a2ddaf" translate="yes" xml:space="preserve">
          <source>Splits a string into &lt;a href=&quot;#t:argv/0&quot;&gt;&lt;code&gt;argv/0&lt;/code&gt;&lt;/a&gt; chunks.</source>
          <target state="translated">문자열을 &lt;a href=&quot;#t:argv/0&quot;&gt; &lt;code&gt;argv/0&lt;/code&gt; &lt;/a&gt; 청크 로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="9cee674c64765c1d80ecb8eac714ef8b24a33c1b" translate="yes" xml:space="preserve">
          <source>Splits a string into two at the specified offset. When the offset given is negative, location is counted from the end of the string.</source>
          <target state="translated">지정된 오프셋에서 문자열을 2로 나눕니다. 주어진 오프셋이 음수이면 위치는 문자열의 끝부터 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="ff232001d7426240fb22459c05a5783114c65dee" translate="yes" xml:space="preserve">
          <source>Splits enumerable in two at the position of the element for which &lt;code&gt;fun&lt;/code&gt; returns a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;) for the first time.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; 이 처음으로 &lt;code&gt;false&lt;/code&gt; 값 ( false 또는 &lt;code&gt;nil&lt;/code&gt; )을 반환하는 요소 위치에서 열거 가능한 두 개로 분할 됩니다.</target>
        </trans-unit>
        <trans-unit id="17bf201d5ac6822c0e5461609bb3331d4a9b71ae" translate="yes" xml:space="preserve">
          <source>Splits enumerable on every element for which &lt;code&gt;fun&lt;/code&gt; returns a new value.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; 이 새로운 값을 반환하는 모든 요소에 대해 열거 가능한 분할 .</target>
        </trans-unit>
        <trans-unit id="8fab28fdcf7550270e90b45a72ddba1737cc4ba0" translate="yes" xml:space="preserve">
          <source>Splits the &lt;code&gt;enumerable&lt;/code&gt; in two lists according to the given function &lt;code&gt;fun&lt;/code&gt;.</source>
          <target state="translated">스플릿 &lt;code&gt;enumerable&lt;/code&gt; 주어진 기능에 따라이 개 목록에 &lt;code&gt;fun&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9928604019411df089cbfb5d79d98e495eb508a" translate="yes" xml:space="preserve">
          <source>Splits the &lt;code&gt;enumerable&lt;/code&gt; into groups based on &lt;code&gt;key_fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key_fun&lt;/code&gt; 기반으로 &lt;code&gt;enumerable&lt;/code&gt; 을 그룹으로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="9508aa9de8649214346d921d5668688428b1f895" translate="yes" xml:space="preserve">
          <source>Splits the &lt;code&gt;enumerable&lt;/code&gt; into two enumerables, leaving &lt;code&gt;count&lt;/code&gt; elements in the first one.</source>
          <target state="translated">스플릿 &lt;code&gt;enumerable&lt;/code&gt; 남겨 두 enumerables로 &lt;code&gt;count&lt;/code&gt; 첫번째의 소자.</target>
        </trans-unit>
        <trans-unit id="f96c656c96d7ad7920526ee526067cab2352a1cf" translate="yes" xml:space="preserve">
          <source>Splits the given &lt;code&gt;enumerable&lt;/code&gt; in two lists by calling &lt;code&gt;fun&lt;/code&gt; with each element in the &lt;code&gt;enumerable&lt;/code&gt; as its only argument. Returns a tuple with the first list containing all the elements in &lt;code&gt;enumerable&lt;/code&gt; for which applying &lt;code&gt;fun&lt;/code&gt; returned a truthy value, and a second list with all the elements for which applying &lt;code&gt;fun&lt;/code&gt; returned a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 각 요소를 유일한 인수로 &lt;code&gt;fun&lt;/code&gt; 을 호출 하여 주어진 열거 형 을 두 목록으로 &lt;code&gt;enumerable&lt;/code&gt; . &lt;code&gt;fun&lt;/code&gt; 을 적용 하면 true 값을 반환 한 &lt;code&gt;enumerable&lt;/code&gt; 모든 요소를 ​​포함하는 첫 번째 목록과 &lt;code&gt;fun&lt;/code&gt; 을 적용한 모든 요소가 &lt;code&gt;false&lt;/code&gt; 값을 반환하는 두 번째 목록이 포함 된 튜플을 반환합니다 ( false 또는 &lt;code&gt;nil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="178b0042fed7fdd8f93f31219d901e4b9b82d0c2" translate="yes" xml:space="preserve">
          <source>Splits the given module name into binary parts.</source>
          <target state="translated">주어진 모듈 이름을 이진 부분으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="0fd31f1cd4c506deb298a3d1cd81da35a74ebe25" translate="yes" xml:space="preserve">
          <source>Splits the given target based on the given pattern and in the given number of parts.</source>
          <target state="translated">주어진 패턴과 주어진 부품 수를 기준으로 주어진 대상을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="8b112253fdc3346c7e770f36bb6f23ad8926016d" translate="yes" xml:space="preserve">
          <source>Splits the path into a list at the path separator.</source>
          <target state="translated">경로를 경로 구분 기호의 목록으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="359b1199c2392525736cac5022b5304530d285ca" translate="yes" xml:space="preserve">
          <source>Splits the string into chunks of characters that share a common trait.</source>
          <target state="translated">문자열을 공통 특성을 공유하는 여러 문자로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="036d667a456f6e5701ef615d7e9fe0acfd59a5e1" translate="yes" xml:space="preserve">
          <source>Splitting on empty string returns graphemes:</source>
          <target state="translated">빈 문자열을 분할하면 그래프가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="580cb6b295814a3188d6380df0dec3f391ba39fd" translate="yes" xml:space="preserve">
          <source>Splitting with a string pattern:</source>
          <target state="translated">문자열 패턴으로 분할 :</target>
        </trans-unit>
        <trans-unit id="bcf765c54d34e28f6803f95f077f285d09e39e5b" translate="yes" xml:space="preserve">
          <source>Stacktrace information</source>
          <target state="translated">스택 트레이스 정보</target>
        </trans-unit>
        <trans-unit id="27f8a6f3b534fe60cc2d1d773b278872783430c8" translate="yes" xml:space="preserve">
          <source>Start IEx with &lt;code&gt;iex -S mix&lt;/code&gt; and you can see that the IEx prompt has changed.</source>
          <target state="translated">&lt;code&gt;iex -S mix&lt;/code&gt; 로 IEx를 시작 하면 IEx 프롬프트가 변경되었음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd55884cf622ecaecfbd0f8029b7a2200a0e0ffe" translate="yes" xml:space="preserve">
          <source>Start a new server with &lt;code&gt;PORT=4040 mix run --no-halt&lt;/code&gt; and we can now open up many concurrent telnet clients. You will also notice that quitting a client does not bring the acceptor down. Excellent!</source>
          <target state="translated">&lt;code&gt;PORT=4040 mix run --no-halt&lt;/code&gt; 로 새 서버를 시작하면 많은 동시 텔넷 클라이언트를 열 수 있습니다. 또한 클라이언트를 종료해도 수락자가 다운되지 않는 것을 알 수 있습니다. 우수한!</target>
        </trans-unit>
        <trans-unit id="a95c450013bed3752195e10c7871fec8dc526ef5" translate="yes" xml:space="preserve">
          <source>Start an IEx session inside the &lt;code&gt;kv_server&lt;/code&gt; application with &lt;code&gt;iex -S mix&lt;/code&gt;. Inside IEx, run:</source>
          <target state="translated">&lt;code&gt;iex -S mix&lt;/code&gt; 로 &lt;code&gt;kv_server&lt;/code&gt; 애플리케이션 에서 IEx 세션을 시작하십시오 . IEx 내부에서 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f1e3c34a15115da4146bddae97a22e873ad3aba6" translate="yes" xml:space="preserve">
          <source>Start and shutdown</source>
          <target state="translated">시작과 종료</target>
        </trans-unit>
        <trans-unit id="12af8a4747b6cb74e2c03f95e160e013ad4c5cb4" translate="yes" xml:space="preserve">
          <source>Start new sections with second level Markdown headers &lt;code&gt;##&lt;/code&gt;. First level headers are reserved for module and function names.</source>
          <target state="translated">두 번째 수준의 마크 다운 헤더 &lt;code&gt;##&lt;/code&gt; 로 새 섹션을 시작하십시오 . 첫 번째 수준 헤더는 모듈 및 기능 이름 용으로 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="089185f450fbba06f1ee579db9849d55ba57b73a" translate="yes" xml:space="preserve">
          <source>Start the function name with one or two underscores, for example, &lt;code&gt;__add__/2&lt;/code&gt;, and add &lt;code&gt;@doc false&lt;/code&gt;. The compiler does not import functions with leading underscores and they hint to anyone reading the code of their intended private usage.</source>
          <target state="translated">&lt;code&gt;__add__/2&lt;/code&gt; 와 같이 하나 또는 두 개의 밑줄로 함수 이름을 시작하고 &lt;code&gt;@doc false&lt;/code&gt; 를 추가하십시오 . 컴파일러는 밑줄이있는 함수를 가져 오지 않으며 의도 된 개인 사용 코드를 읽는 사람에게 힌트를줍니다.</target>
        </trans-unit>
        <trans-unit id="07f93068d3bc0f04950355efb6ddd2d17ec1f56e" translate="yes" xml:space="preserve">
          <source>Started applications are, finally, &lt;em&gt;stopped&lt;/em&gt;:</source>
          <target state="translated">시작된 응용 프로그램은 마지막으로 &lt;em&gt;중지됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="64358ae1fb937d4c75eba047d686e13aa9f19ac8" translate="yes" xml:space="preserve">
          <source>Starting applications</source>
          <target state="translated">응용 프로그램 시작</target>
        </trans-unit>
        <trans-unit id="5a0e3a53e4a7ea34425d543e3c60624682092a9f" translate="yes" xml:space="preserve">
          <source>Starting from Erlang/OTP 23, this function will always return an empty list.</source>
          <target state="translated">Erlang / OTP 23부터이 함수는 항상 빈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f835ee5c0014a63ad6b6df82abb9e701ec553824" translate="yes" xml:space="preserve">
          <source>Starts ExUnit and automatically runs tests right before the VM terminates.</source>
          <target state="translated">ExUnit을 시작하고 VM이 종료되기 직전에 테스트를 자동으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="86c6bbd882bee2fa0066e7a22e3454fd13db4c2a" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; process linked to the current process.</source>
          <target state="translated">현재 프로세스에 연결된 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 프로세스를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="2318ba34ca99a824b9aff08f1f35d1274803200e" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; process without links (outside of a supervision tree).</source>
          <target state="translated">링크없이 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 프로세스를 시작합니다 (감독 트리 외부).</target>
        </trans-unit>
        <trans-unit id="0782a0a4923899805a82fdd2cfd52de5db03738c" translate="yes" xml:space="preserve">
          <source>Starts a child process under the test supervisor.</source>
          <target state="translated">테스트 감독자에서 하위 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8ae57b5742336733267931b5f6b503fd008c72a0" translate="yes" xml:space="preserve">
          <source>Starts a module-based supervisor process with the given &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;module&lt;/code&gt; 과 &lt;code&gt;arg&lt;/code&gt; 로모듈 기반 감독자 프로세스를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="fcf80a20aa8126b71633a9c4d9fbaa386ee40cfe" translate="yes" xml:space="preserve">
          <source>Starts a module-based supervisor process with the given &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;init_arg&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;module&lt;/code&gt; 과 &lt;code&gt;init_arg&lt;/code&gt; 로모듈 기반 감독자 프로세스를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="a29ac2effba91a69db59f15d944bea1c07200c03" translate="yes" xml:space="preserve">
          <source>Starts a new IEx server session.</source>
          <target state="translated">새로운 IEx 서버 세션을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="d40ac264e18a64e3aa1c8e14b1832737938a297e" translate="yes" xml:space="preserve">
          <source>Starts a new supervisor.</source>
          <target state="translated">새로운 감독자를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ebaacaa2714f2595144af20c9a68793efe7ffd04" translate="yes" xml:space="preserve">
          <source>Starts a process linked to the current process.</source>
          <target state="translated">현재 프로세스에 연결된 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="2b59224aef1ecbe4120f6edee31cbd426830d26d" translate="yes" xml:space="preserve">
          <source>Starts a supervisor with the given children.</source>
          <target state="translated">주어진 자녀와 함께 감독자를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="7d9965ed4725208ff0fa257915381d4a0e7c1131" translate="yes" xml:space="preserve">
          <source>Starts a supervisor with the given options.</source>
          <target state="translated">주어진 옵션으로 감독자를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="07b52174845bc90fe1ecf5c9721f55e62fa125c0" translate="yes" xml:space="preserve">
          <source>Starts a task as a child of the given &lt;code&gt;supervisor&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;supervisor&lt;/code&gt; 의 자식으로 작업을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="b2df2466c722de3bf0630de14ca0456f24b95029" translate="yes" xml:space="preserve">
          <source>Starts a task as part of a supervision tree.</source>
          <target state="translated">감독 트리의 일부로 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="1cb728f23ec3d4bd98eecc35a24b2ca0a288323d" translate="yes" xml:space="preserve">
          <source>Starts a task for parallel compilation.</source>
          <target state="translated">병렬 컴파일 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="3e12fe5929d287faa596ff7c27135e404f41d121" translate="yes" xml:space="preserve">
          <source>Starts a task that can be awaited on.</source>
          <target state="translated">기다릴 수있는 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="5e4e4d48d3e46c07e8ad89683993faa9920d4034" translate="yes" xml:space="preserve">
          <source>Starts a task that must be awaited on.</source>
          <target state="translated">기다려야 할 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="baff2e0636d16f2edf213eeb533e7524ff6da6ba" translate="yes" xml:space="preserve">
          <source>Starts a task.</source>
          <target state="translated">작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ff8a45fd44c45d6d08595af80800745e432d6c83" translate="yes" xml:space="preserve">
          <source>Starts all registered apps.</source>
          <target state="translated">등록 된 모든 앱을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="60a11990717e4ff2488b4ece1a89e6bbe58d521f" translate="yes" xml:space="preserve">
          <source>Starts an agent linked to the current process with the given function.</source>
          <target state="translated">주어진 기능으로 현재 프로세스에 연결된 에이전트를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="88115ca2a6a5c44765a372981f691549cc020d54" translate="yes" xml:space="preserve">
          <source>Starts an agent linked to the current process.</source>
          <target state="translated">현재 프로세스에 연결된 에이전트를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="95ae19223d60b6b02cb6c4bd30ac4fa25fed8a18" translate="yes" xml:space="preserve">
          <source>Starts an agent process without links (outside of a supervision tree).</source>
          <target state="translated">링크없이 (감독 트리 외부) 에이전트 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="abf365e5082ecbff5e0e8db22fa0296d814d2bfa" translate="yes" xml:space="preserve">
          <source>Starts an agent without links with the given module, function, and arguments.</source>
          <target state="translated">주어진 모듈, 함수 및 인수와의 링크없이 에이전트를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a32e4b2048c8ef3240a536f9df6ce6e47d26f263" translate="yes" xml:space="preserve">
          <source>Starts an application in synchronous phases.</source>
          <target state="translated">동기 단계에서 애플리케이션을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="c1cb03abb8e558c98285d30efef32d8ab46f3eb9" translate="yes" xml:space="preserve">
          <source>Starts monitoring the given &lt;code&gt;item&lt;/code&gt; from the calling process.</source>
          <target state="translated">호출 프로세스에서 지정된 &lt;code&gt;item&lt;/code&gt; 모니터링을 시작합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
