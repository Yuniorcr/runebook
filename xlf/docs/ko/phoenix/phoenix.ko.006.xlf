<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="be75d781c08d38d7140ec0f42705e1395f1faaf3" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable</source>
          <target state="translated">라우터 모듈을 원자로 반환하고 사용할 수없는 경우 증가</target>
        </trans-unit>
        <trans-unit id="46517d877826cd12571bc0d5ea5767ab4ff4514f" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable.</source>
          <target state="translated">라우터 모듈을 원자로 리턴하고, 사용 불가능한 경우 증가합니다.</target>
        </trans-unit>
        <trans-unit id="0990b614db2cb2aaa4b5be0e932ba3182ba36e5a" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list</source>
          <target state="translated">스키마 기본 키를 키워드 목록으로 반환</target>
        </trans-unit>
        <trans-unit id="a4800203999840972a3c41ffa66949d7538ddf07" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list.</source>
          <target state="translated">스키마 기본 키를 키워드 목록으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="18aa5a5a64f9ee6ab880dac05db023b32dc041ef" translate="yes" xml:space="preserve">
          <source>Returns the script name from the :url configuration.</source>
          <target state="translated">: url 구성에서 스크립트 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="31a12f4e96c0fc87ccd1e9bcf6c59f9306838d68" translate="yes" xml:space="preserve">
          <source>Returns the sent response</source>
          <target state="translated">보낸 응답을 반환</target>
        </trans-unit>
        <trans-unit id="25c8c207c3c88d97d73be4176fcfcb28de0cd546" translate="yes" xml:space="preserve">
          <source>Returns the sent response.</source>
          <target state="translated">보낸 응답을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d9fd20df924109bf62002e612bb2718fda58fd6c" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom</source>
          <target state="translated">정수 또는 알려진 아톰이 주어진 상태 코드를 반환합니다</target>
        </trans-unit>
        <trans-unit id="8112280a1d9a9eed9986a98a56185aaf0d3ad1b4" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom.</source>
          <target state="translated">정수 또는 알려진 아톰이 주어진 상태 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e0c4c0d3371a5faffa7436a461ad69dac4cf038" translate="yes" xml:space="preserve">
          <source>Returns the status of a storage given by options.</source>
          <target state="translated">옵션으로 주어진 스토리지의 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="036227c51832f19c8fe4491fec71303a7ca2fc92" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered)</source>
          <target state="translated">뷰에서 렌더링 된 템플릿 이름을 문자열로 반환합니다 (또는 템플릿이 렌더링되지 않은 경우 nil).</target>
        </trans-unit>
        <trans-unit id="b74a2ca0130c440e979a1e8c605e1c38a783872e" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered).</source>
          <target state="translated">뷰에서 렌더링 된 템플릿 이름을 문자열로 반환합니다 (템플릿이 렌더링되지 않은 경우 nil).</target>
        </trans-unit>
        <trans-unit id="507067fd0d89bd4f0ad50d809841a87c15cc8cb3" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type</source>
          <target state="translated">사용자 정의 유형의 기본 스키마 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="271a09cc9da9ced3d323139cc5b7522c3d1476c6" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type.</source>
          <target state="translated">사용자 정의 유형의 기본 스키마 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d0168d121e1fa46afffbf8dc03d00e9999b5676e" translate="yes" xml:space="preserve">
          <source>Returns the updated connection.</source>
          <target state="translated">업데이트 된 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8d989e0e48b23876aff9fc19ce0c7a1355322d7f" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field</source>
          <target state="translated">주어진 필드의 값을 반환</target>
        </trans-unit>
        <trans-unit id="eb635c80392dfe4a55166fd9b780bfd2fb360b6c" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field.</source>
          <target state="translated">주어진 필드의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bdede86e29744413b4c8bd8be88acede4fe0e4e1" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 지정된 요청 헤더의 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6821bba3917525e700d89961cc4335df9746ebad" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 로 지정된 요청 헤더의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6cde76fd3b77cd36620cfa2e2bcf5c4ab0a5aa45" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 지정된 응답 헤더의 값을 반환</target>
        </trans-unit>
        <trans-unit id="5ba2a203bbd819ca4ea6eea9c63bac5cb036c81a" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 로 지정된 응답 헤더의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3097f8bc663465d9a4efd1ef7a4f4b0433fc4f6a" translate="yes" xml:space="preserve">
          <source>Returns the whole session.</source>
          <target state="translated">전체 세션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d131adafde27edb203f3f487c15d74433a8bf3f" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction</source>
          <target state="translated">현재 프로세스가 트랜잭션 내에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="244cb8f64bc0228027dbfabcd56c8bf9cbaa85cc" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction.</source>
          <target state="translated">현재 프로세스가 트랜잭션 내에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0087a454276ead29151f3ca1b8a8149fe290a150" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction</source>
          <target state="translated">주어진 프로세스가 트랜잭션 내에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fa1b59614734c4fa1e0c7ba4f241012ebfe1a1ae" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction.</source>
          <target state="translated">주어진 프로세스가 트랜잭션 내부에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d326b663ee7befbea5ebdd7ab51a4926be86d1ea" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition</source>
          <target state="translated">파티션 내 현재 행 다음에 오프셋 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3bdf45df286504f65bab6bf86f355e22fff5faf" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition.</source>
          <target state="translated">파티션 내 현재 행 다음에 오프셋 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0fc4d407cffc48089a65568ac93f1138135c7d3c" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition</source>
          <target state="translated">파티션 내 현재 행 앞의 오프셋 행인 값을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="3d60bce40451a002cfea905ef0ccae99b43a3285" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition.</source>
          <target state="translated">파티션 내 현재 행 앞의 오프셋 행인 값을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="11d374928879f9ad2ae1990875af52884d99655e" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame</source>
          <target state="translated">윈도우 프레임의 첫 번째 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44abe5ff94ea4bbf4d6b793aca8de503901d2b46" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame.</source>
          <target state="translated">윈도우 프레임의 첫 번째 행인 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9e7492912bc687a0a0b1eb9832642cf502b4b219" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame</source>
          <target state="translated">윈도우 프레임의 마지막 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99307517be28f40f09f2b0911dee62531f2ecbae" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame.</source>
          <target state="translated">윈도우 프레임의 마지막 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03d0b7038b7bcc307a1128ac325767a926e11cd2" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); &lt;code&gt;nil&lt;/code&gt; if no such row.</source>
          <target state="translated">창 프레임의 n 번째 행인 행에서 평가 된 값을 반환합니다 (1부터 계산). 그러한 행이 없으면 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="376350cf9e0c496114f28913dd5703e383ff95e9" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row</source>
          <target state="translated">윈도우 프레임의 n 번째 행인 1에서 계산 된 값을 반환합니다. 그러한 행이없는 경우는 null</target>
        </trans-unit>
        <trans-unit id="193d6465e6be547ab824ad9adc251443ea776fb4" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row.</source>
          <target state="translated">윈도우 프레임의 n 번째 행인 1에서 계산 된 값을 반환합니다. 그러한 행이없는 경우는 null</target>
        </trans-unit>
        <trans-unit id="4185cf841db525cb673b734d9d83b3f8d30499f6" translate="yes" xml:space="preserve">
          <source>Returns value from the &lt;code&gt;json_field&lt;/code&gt; pointed to by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 가리키는 &lt;code&gt;json_field&lt;/code&gt; 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="7e1b1179bc35ff04b58b12b35f9adb55ffe0b517" translate="yes" xml:space="preserve">
          <source>Reverses the ordering of the query.</source>
          <target state="translated">쿼리 순서를 반대로합니다.</target>
        </trans-unit>
        <trans-unit id="6a4a0b5e1505a3cc5816c81e08650eced6f14871" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction</source>
          <target state="translated">현재 거래를 롤백</target>
        </trans-unit>
        <trans-unit id="08baa16b0080930585636decba273851109f2fef" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction.</source>
          <target state="translated">현재 트랜잭션을 롤백합니다.</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="5da2bca786eea68965488901fbfa83e2aa4a40c6" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can&amp;rsquo;t be followed by other segments:</source>
          <target state="translated">경로는 경로의 나머지 부분과 일치하고 함수 본문에서 매개 변수로 사용할 수있는 글 로빙을 허용합니다. 또한 글로브 뒤에 다른 세그먼트를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="02961ca7a4bc6b74268220225de904dfb4aefcab" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can't be followed by other segments:</source>
          <target state="translated">경로는 경로의 나머지 부분과 일치하는 글 로빙을 허용하며 함수 본문에서 매개 변수로 사용할 수 있습니다. 또한 glob 뒤에는 다른 세그먼트가 올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="579a42f5b5e0e0564cede3abd969bb3a7c3f2696" translate="yes" xml:space="preserve">
          <source>Routes are matched from top to bottom. The second route here:</source>
          <target state="translated">경로는 위에서 아래로 일치합니다. 두 번째 경로 :</target>
        </trans-unit>
        <trans-unit id="7c1c14571bc7de6b3055bd4f7d4f0dabba7f32cf" translate="yes" xml:space="preserve">
          <source>Routes can also match glob-like patterns, routing any path with a common base to the same controller. For example:</source>
          <target state="translated">라우트는 또한 공통베이스가있는 모든 경로를 동일한 컨트롤러로 라우트하는 글로브 모양의 패턴과 일치 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fa66d0ab61406d168f9a3b400e02c6c0a95ab178" translate="yes" xml:space="preserve">
          <source>Routes can use glob-like patterns to match trailing segments.</source>
          <target state="translated">경로는 glob과 유사한 패턴을 사용하여 후행 세그먼트를 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fec243ace8656b1c705371f569ea948d4d0ea95" translate="yes" xml:space="preserve">
          <source>Routes compilation</source>
          <target state="translated">경로 컴파일</target>
        </trans-unit>
        <trans-unit id="6e5549afb365bc0fa97665b0504dd6e6d2976e12" translate="yes" xml:space="preserve">
          <source>Routes options</source>
          <target state="translated">경로 옵션</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="0ed2d22d4523e3fc5d82bad24c4edc0794515584" translate="yes" xml:space="preserve">
          <source>Running the multi in a transaction will execute no previous steps and returns the value of the first error added.</source>
          <target state="translated">트랜잭션에서 멀티를 실행하면 이전 단계가 실행되지 않고 추가 된 첫 번째 오류 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f6ca3839dbd23c33b01182553ca5c3c46fb058fd" translate="yes" xml:space="preserve">
          <source>Runs the code reloader if enabled.</source>
          <target state="translated">활성화 된 경우 코드 리 로더를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="96ea572c5a69806aa87d98f4853db495ff69fe2c" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction</source>
          <target state="translated">트랜잭션 내에서 주어진 함수를 실행</target>
        </trans-unit>
        <trans-unit id="1b43f3d8a5a546054aa677d2470158616bf0b261" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction.</source>
          <target state="translated">트랜잭션 내에서 주어진 함수를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3172c85a51f1a6064e628809c6d4b4968b27fe04" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction</source>
          <target state="translated">트랜잭션 내 에서 주어진 함수 또는 &lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d03a7048df33145a714a4402106ee56bef98057a" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction.</source>
          <target state="translated">트랜잭션 내 에서 주어진 함수 또는 &lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">런타임 구성</target>
        </trans-unit>
        <trans-unit id="eb6d964d366ee36fc795e3db3126c304138f3875" translate="yes" xml:space="preserve">
          <source>Runtime configuration, instead, is accessed during or after your application is started and can be read through the &lt;a href=&quot;#c:config/2&quot;&gt;&lt;code&gt;config/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">대신 런타임 구성은 애플리케이션 시작 중 또는 후에 액세스되며 &lt;a href=&quot;#c:config/2&quot;&gt; &lt;code&gt;config/2&lt;/code&gt; &lt;/a&gt; 기능을 통해 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78fe2b7f7666674900a3c15471ccc99184e3f647" translate="yes" xml:space="preserve">
          <source>SQL adapters, such as Postgres and MySQL, can only enumerate a stream inside a transaction.</source>
          <target state="translated">Postgres 및 MySQL과 같은 SQL 어댑터는 트랜잭션 내부의 스트림 만 열거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31be5af5971e510c34651813107373056d053546" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c0f4a3368e53f6e8567bf92693a54053f93f17a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="26f5ed3ec52e2d5cfcd2fd1792eff31c6659c93e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="04f6a54ce5f51c23469a584d22c02e19473ae3e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db5de4972e7e363b7c52f64b2eb5d90ef52d3ac5" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c35ae21530f6b981d3fffc6ca1e8df7ca170d9a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="226733d0f50b1f3b16fb5e58c11ac4844d58a7ac" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생</target>
        </trans-unit>
        <trans-unit id="968367c33e0b0cf121b143beda5c49d1c0848a24" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="632a0c7bbe3b6685b1ddbd04be7b8356ba08e7aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생</target>
        </trans-unit>
        <trans-unit id="d2d1c2ac23c385ba9429c1adba38eeb48052559d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="77f5ce57b6f04302cee6f42deda43b98256efd0e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="293c4f91ba874963771add9b057936efc16cc7a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c059b0c75bda32d71683e3cc464b2c56b540a1d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 잘못된 인수에서 &lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="559604890cc16a2cec1cf5330d10ff3357d7d356" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments.</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 잘못된 인수에서 &lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="8fdfe0c9c6c86949eead3814403a059c18d01794" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_change/2&quot;&gt;&lt;code&gt;fetch_change/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_change/2&quot;&gt; &lt;code&gt;fetch_change/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 값을 반환하거나 주어진 키를 찾을 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0e00e34052e2f613e9704fe4b4e5b654fbb8ff92" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_field/2&quot;&gt;&lt;code&gt;fetch_field/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_field/2&quot;&gt; &lt;code&gt;fetch_field/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 값을 반환하거나 주어진 키를 찾을 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="938bc5d04187bec60adad9f96b00fb0934dd29e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. This is often used with &lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt;&lt;/a&gt;, which must be imported into your views. See the &quot;Examples&quot; section below.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 올리는 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 이것은 종종 사용됩니다 &lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt; &lt;/a&gt; 귀하의 의견으로 가져와야합니다. 아래의 &quot;예제&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="43873fb5254efdd9068216bf949a05b8c683f8d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. Useful for dynamically rendering templates in the layout that may or may not be implemented by the &lt;code&gt;@view_module&lt;/code&gt; view.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 높이기 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . &lt;code&gt;@view_module&lt;/code&gt; 뷰에 의해 구현되거나 구현되지 않을 수있는 레이아웃에서 템플릿을 동적으로 렌더링하는 데 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="06b4a10e004cd74aa0f94998421cfc6dfe686a41" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 소켓을 반환하거나 오류를 발생시킵니다</target>
        </trans-unit>
        <trans-unit id="32e1585c10935eaf9f25e043fb1288b908327ad6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 소켓을 반환하거나 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="8832210111dce6e6f23cc1837828c66a6682403b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;inputs_for(form, field, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputs_for(form, field, [])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="6c2c9ca478645cb9af567a27b68f7e9eacddf986" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;update/3&lt;/code&gt;, but with an arbitrary process.</source>
          <target state="translated">&lt;code&gt;update/3&lt;/code&gt; 와 동일 하지만 임의의 프로세스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cadd66a2347f5e19072c0277b8c7358f4c96a166" translate="yes" xml:space="preserve">
          <source>Same with &lt;code&gt;track/3&lt;/code&gt;, except track any process by &lt;code&gt;topic&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; 및 &lt;code&gt;key&lt;/code&gt; 별로 모든 프로세스를 추적한다는 점을 제외하면 &lt;code&gt;track/3&lt;/code&gt; 과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="b5230ecdf4e78f0dd162281a0a78c6cdc853cbe8" translate="yes" xml:space="preserve">
          <source>Schema</source>
          <target state="translated">Schema</target>
        </trans-unit>
        <trans-unit id="301b2b96f90182287e27e3183bc54358047e0434" translate="yes" xml:space="preserve">
          <source>Schema attributes</source>
          <target state="translated">스키마 속성</target>
        </trans-unit>
        <trans-unit id="10521488170ddab303e05a3772fb749bf1fe39ec" translate="yes" xml:space="preserve">
          <source>Schemaless changesets</source>
          <target state="translated">스키마없는 변경 세트</target>
        </trans-unit>
        <trans-unit id="c37847eb673c5d234b9087b74aff7c743ce8ddd6" translate="yes" xml:space="preserve">
          <source>Schemas allow developers to define the shape of their data. Let's see an example:</source>
          <target state="translated">스키마를 통해 개발자는 데이터의 형태를 정의 할 수 있습니다. 예를 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="36e85587fa0a0a02a5d43c4f67e3b1d5f4e90b05" translate="yes" xml:space="preserve">
          <source>Schemas allows developers to define the shape of their data. Let&amp;rsquo;s see an example:</source>
          <target state="translated">스키마를 통해 개발자는 데이터의 형태를 정의 할 수 있습니다. 예를 보자.</target>
        </trans-unit>
        <trans-unit id="466834fbbd30000fe5c774b9d9cd839774b60965" translate="yes" xml:space="preserve">
          <source>Scopes allow us to scope on any path or even on the helper name:</source>
          <target state="translated">범위를 사용하면 경로 또는 도우미 이름을 범위로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e61bf9a20029e1be9ec2969434d5904c25253a4" translate="yes" xml:space="preserve">
          <source>Scopes and Resources</source>
          <target state="translated">범위와 자원</target>
        </trans-unit>
        <trans-unit id="6a98f22dc569c4feed720b2ce5b3e5a64ff2b3dc" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request</source>
          <target state="translated">요청에서 매개 변수를 제거합니다</target>
        </trans-unit>
        <trans-unit id="27f0d186b8364ecab92240cc4869c5709c41e5a7" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request.</source>
          <target state="translated">요청에서 매개 변수를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="9468cdfe43170f8e1b7c161207fcd0d7f167d72f" translate="yes" xml:space="preserve">
          <source>Search functions: &lt;a href=&quot;#like/2&quot;&gt;&lt;code&gt;like/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ilike/2&quot;&gt;&lt;code&gt;ilike/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">검색 기능 : &lt;a href=&quot;#like/2&quot;&gt; &lt;code&gt;like/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#ilike/2&quot;&gt; &lt;code&gt;ilike/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="029b41059043179b345161e80cbafb609edaf362" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">에 대한 검색 &lt;code&gt;search&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8eb5e27c9b5ccf9b6aff18d10a22c385ce8d1536" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion</source>
          <target state="translated">에 대한 검색 &lt;code&gt;search&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt; 사례를 구분 방식으로</target>
        </trans-unit>
        <trans-unit id="dd7fbd2e5059a6a1e0fcfe24cbc5806164e322c8" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion.</source>
          <target state="translated">에 대한 검색 &lt;code&gt;search&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt; 사례를 구분 패션이다.</target>
        </trans-unit>
        <trans-unit id="d347710f20087bdf2cb082efeefb0ba70285ed03" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 에서 검색을 &lt;code&gt;search&lt;/code&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="8262409c05b2324973c717b79900c50cf6161e00" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#apply_action/2&quot;&gt;&lt;code&gt;apply_action/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#apply_action/2&quot;&gt; &lt;code&gt;apply_action/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="81561006a302e8eb9f2f8d7aba1fe152d658b05d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#bypass_through/1&quot;&gt;&lt;code&gt;bypass_through/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#bypass_through/1&quot;&gt; &lt;code&gt;bypass_through/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="429540a302a78a8a1ebb45909c07be1635915920" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:embed_as/1&quot;&gt;&lt;code&gt;embed_as/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c:embed_as/1&quot;&gt; &lt;code&gt;embed_as/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f85ce73a1d6d3c6c1224f375b5b84f470970aa61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:execute/5&quot;&gt;&lt;code&gt;execute/5&lt;/code&gt;&lt;/a&gt; for a description of arguments.</source>
          <target state="translated">인수에 대한 설명은 &lt;a href=&quot;#c:execute/5&quot;&gt; &lt;code&gt;execute/5&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d115725c55ec1d85116ad3d8c8b382bc34ea11f3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt;&lt;code&gt;put_dynamic_repo/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt; &lt;code&gt;put_dynamic_repo/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a9163e815f8428555b4d0758f30bebe740c9ac3f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;d prefer to cast and validate external parameters.</source>
          <target state="translated">외부 매개 변수를 캐스트하고 확인하려면 &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70d061cb540d5f0c11648f4d9f67f326ef8f0ba8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you'd prefer to cast and validate external parameters.</source>
          <target state="translated">외부 매개 변수를 캐스트하고 확인하려면 &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; 를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="160359dfa99216e1c3e6c4a032ce68a16d781dd6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#code/1&quot;&gt;&lt;code&gt;code/1&lt;/code&gt;&lt;/a&gt; for the mapping.</source>
          <target state="translated">매핑에 대해서는 &lt;a href=&quot;#code/1&quot;&gt; &lt;code&gt;code/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54c38114b81a0de364df06f82b76a8b8d2fa3ade" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_path/2&quot;&gt;&lt;code&gt;current_path/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">기본 매개 변수를 대체하려면 &lt;a href=&quot;#current_path/2&quot;&gt; &lt;code&gt;current_path/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab8b7a05d70ebc5262d9bc1c4ae83f023d55df6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_url/2&quot;&gt;&lt;code&gt;current_url/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">기본 매개 변수를 대체하려면 &lt;a href=&quot;#current_url/2&quot;&gt; &lt;code&gt;current_url/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="47e01c9fd9229a5ca109aaef23fb86782167896d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#datetime_add/3&quot;&gt; &lt;code&gt;datetime_add/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="446dc24810f81cacc9b7d86ae05c8303571fb483" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#dispatch/5&quot;&gt;&lt;code&gt;dispatch/5&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#dispatch/5&quot;&gt; &lt;code&gt;dispatch/5&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be219b9ba050253444f2a909dff91ef612e5fa56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">사용 가능한 옵션 은 &lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8899b0d287dfb8d878f8bbed5de0faa5bafbe98" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#get_format/1&quot;&gt;&lt;code&gt;get_format/1&lt;/code&gt;&lt;/a&gt; for retrieval.</source>
          <target state="translated">검색에 대해서는 &lt;a href=&quot;#get_format/1&quot;&gt; &lt;code&gt;get_format/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b19a5cfb329d7eacbbbf417d5b016f9ed41c581c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#inputs_for/4&quot;&gt;&lt;code&gt;inputs_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">사용 가능한 옵션 은 &lt;a href=&quot;#inputs_for/4&quot;&gt; &lt;code&gt;inputs_for/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="406dda280674bab437f44d83fb04430734616082" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#intercept/1&quot;&gt;&lt;code&gt;intercept/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#intercept/1&quot;&gt; &lt;code&gt;intercept/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f110d7ed07bcb97c4369788a800bd8c9a39394a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="89b41f097462aec0e3e090380c34040fd8c70750" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e5dc5d72d9569c3ffaf92d7fdf6652b4f2ac022" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="b4393f19dfec8ca9111f143b22c91f456d9a3c12" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f35e881a1408a4ab81f31c333ac0993cdbc2772" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#load_state/2&quot;&gt;&lt;code&gt;load_state/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#load_state/2&quot;&gt; &lt;code&gt;load_state/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a81c8ed463094cf76527d6eef0e1eee58f85d88a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; for more information on this particular approach.</source>
          <target state="translated">이 특정 방법에 대한 자세한 내용 은 &lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8ef1ba44a049b9e256d983fc00818e665b1193a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#match/5&quot;&gt;&lt;code&gt;match/5&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">옵션 은 &lt;a href=&quot;#match/5&quot;&gt; &lt;code&gt;match/5&lt;/code&gt; &lt;/a&gt; 를 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="2e302be972b9853f322f9a9d0314b6560ffd6f14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#module-intervals&quot;&gt;Intervals&lt;/a&gt; for supported &lt;code&gt;interval&lt;/code&gt; values.</source>
          <target state="translated">지원되는 &lt;code&gt;interval&lt;/code&gt; 값 은 &lt;a href=&quot;#module-intervals&quot;&gt;간격&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3bdddab0ca71be4e0d0e57670315f70dad3bd4f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pipeline/2&quot;&gt;&lt;code&gt;pipeline/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#pipeline/2&quot;&gt; &lt;code&gt;pipeline/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="135d4e719d0766f17d2e08228378ae66ce9a070b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#put_resp_cookie/4&quot;&gt;&lt;code&gt;put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#put_resp_cookie/4&quot;&gt; &lt;code&gt;put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4550d4697758fd204f59f25e0b1a6304c93be4d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9aebbba31dbd9458e7a25bf514e18665f833d3dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="908c56d179564b7cfdcfb8431f6434eefed5749c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#reply/2&quot;&gt;&lt;code&gt;reply/2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">사용법 예는 &lt;a href=&quot;#reply/2&quot;&gt; &lt;code&gt;reply/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="23896889763021c93678399c008455262a580462" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참고 &lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="426590122d0cb0370f085208f290b5ffde8c6940" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fbd426a6c1ba18664a76c286683f974c4a4dabb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#send_resp/1&quot;&gt;&lt;code&gt;send_resp/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#send_resp/1&quot;&gt; &lt;code&gt;send_resp/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1864cff94e119d0991c6193935a96f066936243f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="0a44ded8627dc7883d4a01683ab621667c67d00e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bd76cf963006223cb163794cd0b4753397ed92b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="a5b41f1b5289201c8a07f46617a40568bf625ff0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb57f840a4d423d2bed6c24c1306f8ecba33756e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; for example and docs.</source>
          <target state="translated">예를 들어, 문서는 &lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef7809f9d350584ddaf5e5164489a613a551a7af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#with_cte/3&quot;&gt;&lt;code&gt;with_cte/3&lt;/code&gt;&lt;/a&gt; on example of how to build a query with a recursive CTE.</source>
          <target state="translated">재귀 적 CTE를 사용하여 쿼리를 작성하는 방법에 대한 예제는 &lt;a href=&quot;#with_cte/3&quot;&gt; &lt;code&gt;with_cte/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="371fb723d2394a3831042751931faedbd69adef9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">옵션 은 &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c76e6cc809f1d86ecee6d287cd01c8ce78fd4a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">Plug를 통해 파일과 응답을 보내는 데 사용되는 하위 수준 함수에 액세스하려면 &lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4d2f93aa49abab488a0628776098394719d620c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">Plug를 통해 파일과 응답을 보내는 데 사용되는 하위 수준 함수에 액세스하려면 &lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; 를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="5de1813146a450d81745fae85a10011300e06e44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#subquery/2&quot;&gt;&lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;ecto.query#subquery/2&quot;&gt; &lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="45f659716a011dd99b8cca9ae0ba1df93a24b7e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#update/3&quot;&gt;&lt;code&gt;Ecto.Query.update/3&lt;/code&gt;&lt;/a&gt; for update operations that can be performed on fields.</source>
          <target state="translated">필드에서 수행 할 수있는 업데이트 작업에 대해서는 &lt;a href=&quot;ecto.query#update/3&quot;&gt; &lt;code&gt;Ecto.Query.update/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8092c29bbc4fb0de38c16b33a5a35d209a6c347" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt;&lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt; &lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="621718f4f723b87a1b297027378650881a8903bb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt;&lt;code&gt;GenServer.handle_call/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt; &lt;code&gt;GenServer.handle_call/3&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="643a98f8636b0a5bc5ab9349954ff26b77f1ceea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt;&lt;code&gt;GenServer.handle_cast/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt; &lt;code&gt;GenServer.handle_cast/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da23b7c841e113b3ff7ae3e4331a604fb3e4a99a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt;&lt;code&gt;GenServer.handle_info/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt; &lt;code&gt;GenServer.handle_info/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="657c18c9b964d238c5425faead2bdeca7303b75f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt;&lt;code&gt;GenServer.terminate/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt; &lt;code&gt;GenServer.terminate/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8355db15ad1ed182ee4f962ee451395b08a29a75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e44626997314e02c476e0acdd836813e795c9c5b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="66d24e14715f9e8d7b617ab80f19f4d81baeefa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels.</source>
          <target state="translated">채널에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="269436d2c9bb8a6deee2dcb74762908f63d5b0c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels. Check each transport module to find the options specific to each transport.</source>
          <target state="translated">채널에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 . 각 전송 모듈을 확인하여 각 전송에 특정한 옵션을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="307f6e4810e6a8623bf10bc3de9042be222e19df" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt;&lt;/a&gt; for more information on the options above.</source>
          <target state="translated">위의 옵션에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f492af01d862f52e16377df7fb35fa52d8b0cd41" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt;&lt;/a&gt; for more information and examples.</source>
          <target state="translated">자세한 내용과 예제는 &lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fa72fdb30cd34578ad87b4d3074be2504209c727" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.presence#list/2&quot;&gt;&lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt;&lt;/a&gt; for more information on the presence datastructure.</source>
          <target state="translated">현재 상태 데이터 구조에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.presence#list/2&quot;&gt; &lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ef1bb15bff16619e10cef1d606d47af3888ec309" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt;&lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt;&lt;/a&gt; to implement a custom adapter.</source>
          <target state="translated">사용자 지정 어댑터를 구현하려면 &lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt; &lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88c8c4a4bcc3b23e8f0afc627aff2ba07638bb9c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">사용법 예는 &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee65f0a0a082cb9fe667267438125e815eeb29d0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.template.eexengine&quot;&gt;&lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt;&lt;/a&gt; for an example engine implementation.</source>
          <target state="translated">예제 엔진 구현 은 &lt;a href=&quot;phoenix.template.eexengine&quot;&gt; &lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d09ab09a80fc6e3371af67b48a45ec888d3b2ef6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.token&quot;&gt;&lt;code&gt;Phoenix.Token&lt;/code&gt;&lt;/a&gt; documentation for examples in performing token verification on connect.</source>
          <target state="translated">연결시 토큰 확인을 수행하는 예제는 &lt;a href=&quot;phoenix.token&quot;&gt; &lt;code&gt;Phoenix.Token&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="261e1ae56f3a072bff65a99c72ff577be8137484" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;plug.session.store&quot;&gt;&lt;code&gt;Plug.Session.Store&lt;/code&gt;&lt;/a&gt; for the specification session stores are required to implement.</source>
          <target state="translated">구현하려면 사양 세션 저장소가 필요하므로 &lt;a href=&quot;plug.session.store&quot;&gt; &lt;code&gt;Plug.Session.Store&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9230a87cc68c046eee9248393a3f13e2c8ee374f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;aggregate/2&lt;/code&gt; for general considerations and options.</source>
          <target state="translated">일반적인 고려 사항 및 옵션 은 &lt;code&gt;aggregate/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c5bed7ccad22aa1051678c95f9fb7801d6255d5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;c:list/2&lt;/code&gt; for more information on the presence data structure.</source>
          <target state="translated">현재 상태 데이터 구조에 대한 자세한 내용 은 &lt;code&gt;c:list/2&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5c11d0599aa5ae1717c8ef4754f747abcfaf6c60" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;inform/1&lt;/code&gt; for more information.</source>
          <target state="translated">자세한 &lt;code&gt;inform/1&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fb76575f5700f016472c68381141953c4df7440" translate="yes" xml:space="preserve">
          <source>See the &quot;Named binding&quot; section in &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; 의 &quot;명명 된 바인딩&quot;섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="161ac165bdee8f21fa6629207e7cef6c2626b8ba" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for more options.</source>
          <target state="translated">추가 옵션은 모듈 문서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aa3ed528817fda45b3391d7fe285532382e90f27" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for remaining options.</source>
          <target state="translated">나머지 옵션은 모듈 문서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9ee043fc5ef54fddf8825b05f20c419d2581cb7f" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation for remaining options.</source>
          <target state="translated">나머지 옵션에 대해서는 모듈 설명서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7649523e1a49db136fa7cc9581afc36295590af4" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation.</source>
          <target state="translated">모듈 설명서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a3b2e55e84311bdcd28e3a7c26f23056f3b42cfe" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView integration&lt;/a&gt; section in module documentation for examples of using this function.</source>
          <target state="translated">이 기능을 사용하는 예제는 모듈 설명서 의 &lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView 통합&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="831c83e86f46bd94d2d80b20745c47e78ec12552" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">이 콜백을 구현하는 방법에 대한 예제 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52bfe9d775fe2216e987697974fbdb4950dfca06" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own socket that does not leverage channels or for writing your own transports that interacts with other sockets.</source>
          <target state="translated">채널을 활용하지 않는 자체 소켓 작성 또는 다른 소켓과 상호 작용하는 자체 전송 작성에 대한 자세한 내용은 &lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="48b888cf8ed338dd5d7dafa38b1755fcf07c5cc2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own transports.</source>
          <target state="translated">자체 교통편 작성에 대한 자세한 내용은 &lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1684cff4f2015c60813bad9a0c254c9bb819dc89" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter&amp;rsquo;s documentation.</source>
          <target state="translated">어댑터 간 공유 옵션에 대해서는 moduledoc의 구성을 참조하십시오. 어댑터 별 구성은 어댑터의 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0faab496e8605530beb9dcbc7065e79751224fbe" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter's documentation.</source>
          <target state="translated">어댑터간에 공유되는 옵션은 moduledoc의 구성을 참조하고 어댑터 별 구성은 어댑터 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="312fb50202d073fcbd9ec6a658fd9509a91a8bd0" translate="yes" xml:space="preserve">
          <source>See the documentation for those functions for more information.</source>
          <target state="translated">자세한 내용은 해당 기능의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a99809f8ab2290821228a7754fff870d3b2e5a30" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">더 많은 예제 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0436c22fef845c067bef662ef491804de17b0b6d" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">자세한 예는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt; 의 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e65e93f5d1b1c4b0155385905ede5a1c03af66b" translate="yes" xml:space="preserve">
          <source>See the module documentation for examples of using this function.</source>
          <target state="translated">이 기능을 사용하는 예는 모듈 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="679a357d872f534ff44cb3b4a7a3b383d13c7888" translate="yes" xml:space="preserve">
          <source>Select also allows each expression to be wrapped in lists, tuples or maps as shown in the examples below. A full schema can also be selected.</source>
          <target state="translated">또한 Select는 아래 예제와 같이 각 표현식을 목록, 튜플 또는 맵으로 래핑 할 수 있도록합니다. 전체 스키마를 선택할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d033c83fffaa5673b1a414ddfda2c025b06d961a" translate="yes" xml:space="preserve">
          <source>Selects which fields will be selected from the schema and any transformations that should be performed on the fields. Any expression that is accepted in a query can be a select field.</source>
          <target state="translated">스키마에서 선택할 필드와 필드에서 수행해야 할 변환을 선택합니다. 쿼리에서 허용되는 모든 표현식은 선택 필드 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e91d1e0f5e9487059e916a996058cf9e1dc6766" translate="yes" xml:space="preserve">
          <source>Send &lt;code&gt;:garbage_collect&lt;/code&gt; clause to the transport process:</source>
          <target state="translated">전송 프로세스에 : &lt;code&gt;:garbage_collect&lt;/code&gt; 절을 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="339bcde69154793c7987399aaf319979a690b702" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client</source>
          <target state="translated">고객에게 정보 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3ed9da092f3a4af112039ba3e975724f7aa96536" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client.</source>
          <target state="translated">정보 응답을 클라이언트에게 보냅니다.</target>
        </trans-unit>
        <trans-unit id="e173371abf693a34430650d6ef0622ed0064635e" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database</source>
          <target state="translated">데이터베이스로 직접 조각 보내기</target>
        </trans-unit>
        <trans-unit id="16e544758dfbf09ced50ada38b4b05192f7e5c8b" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database.</source>
          <target state="translated">조각을 데이터베이스에 직접 보냅니다.</target>
        </trans-unit>
        <trans-unit id="489239a1181fd2c713a82111145edf54439dab29" translate="yes" xml:space="preserve">
          <source>Sends JSON response</source>
          <target state="translated">JSON 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="5a525bc62260b0e127c7db79abcc3613f2585efb" translate="yes" xml:space="preserve">
          <source>Sends JSON response.</source>
          <target state="translated">JSON 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8660cb1f08099de5fb0f65076cb9f9400d7c92b6" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response</source>
          <target state="translated">청크를 청크 응답의 일부로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="fe6e56dadcec8e96d4db4592922c851f171d45e5" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response.</source>
          <target state="translated">청크를 청크 응답의 일부로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="159b4be78595cfa9e13576378a181ce38afd7078" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response</source>
          <target state="translated">청크 응답에서 청크를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4b026d5ba5a419651b4118cb2aa26c82b8a7e8dc" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response.</source>
          <target state="translated">청크 응답에서 청크를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="de3d8a2105ba453f710652c7ae63c978abfb2c82" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 의 파일을 응답 본문으로 보내고 선택적으로 주어진 길이까지 주어진 오프셋에서 시작</target>
        </trans-unit>
        <trans-unit id="e9dcef495e0b37b6a9a55b68958139330d7d9f0e" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length.</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 의 파일을 응답 본문으로 보내고 선택적으로 주어진 길이까지 주어진 오프셋에서 시작합니다.</target>
        </trans-unit>
        <trans-unit id="fe9eb2fee9ae60e2ca92121924ef824a470a07cb" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic</source>
          <target state="translated">주제의 모든 구독자에게 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3f4328e232001421bf2c872503e97a20d3232f5b" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic.</source>
          <target state="translated">주제의 모든 구독자에게 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a373ddfffbe146ddac8a173341a9221d9a4ffded" translate="yes" xml:space="preserve">
          <source>Sends a response to the client</source>
          <target state="translated">클라이언트에게 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="d1fba647ce413e6f7c8b1af6df87c6c2745e996c" translate="yes" xml:space="preserve">
          <source>Sends a response to the client.</source>
          <target state="translated">클라이언트에게 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="ea3622a1491a4991ba2109ef9333051926e18c86" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body</source>
          <target state="translated">주어진 상태와 본문으로 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="4cd23c51688616b423a756b98b293b101621efe1" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body.</source>
          <target state="translated">주어진 상태와 본문으로 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c7f30c86685aa3607c7ab991521564787425248b" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform</source>
          <target state="translated">클라이언트에 정보 응답을 보내지 만 어댑터가 정보를 지원하지 않으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7d87f8aad66e77be3e8f2d5bfa286b94bb99af45" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform.</source>
          <target state="translated">정보 응답을 클라이언트에 전송하지만 어댑터가 정보를 지원하지 않으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8957b8bad5a32e15394a3faa2bd6607a6ee1ae15" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client</source>
          <target state="translated">클라이언트에게 정보를 보내고 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3d64de4420bbf1ab57866fc08ef6ebb0cf9d618f" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client.</source>
          <target state="translated">클라이언트에게 정보 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="034c6ea35c7dac4497fff0e97f6a65dc6add09be" translate="yes" xml:space="preserve">
          <source>Sends event to the socket</source>
          <target state="translated">소켓으로 이벤트를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="7083990a770deb6247c289c9286b7c9ad92c5f99" translate="yes" xml:space="preserve">
          <source>Sends event to the socket.</source>
          <target state="translated">소켓으로 이벤트를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="64a9e7c61acbcd7bc8acc5dedf73b365451f695e" translate="yes" xml:space="preserve">
          <source>Sends html response</source>
          <target state="translated">HTML 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="1ee2773809b54afc3ec4a9bde01d6f87355f8588" translate="yes" xml:space="preserve">
          <source>Sends html response.</source>
          <target state="translated">html 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="555a5345663c5549c5012382603ce0975ba2f157" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url</source>
          <target state="translated">지정된 URL로 리디렉션 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a5ccf0adfdfd164726fa10b86b27442adb2d4682" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url.</source>
          <target state="translated">지정된 URL로 리디렉션 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8e530140d82c52f53e8acdaad18b70006366216e" translate="yes" xml:space="preserve">
          <source>Sends text response</source>
          <target state="translated">문자 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="c1248e478956ecfda126a47e010af683a1a9fef9" translate="yes" xml:space="preserve">
          <source>Sends text response.</source>
          <target state="translated">텍스트 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b11b79b63b737f42e6de87481fdbad625665e341" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download</source>
          <target state="translated">주어진 파일 또는 바이너리를 다운로드로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d7eb8984be042027d6d16e842e16fe4fffc0d82e" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download.</source>
          <target state="translated">주어진 파일 또는 바이너리를 다운로드로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="01c751c691b5cd02c867c6c00a48fa707b7abaa0" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client</source>
          <target state="translated">주어진 상태, 헤더 및 본문을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b1b5e5859a86db864471510765fc638d073c3a7c" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client.</source>
          <target state="translated">주어진 상태, 헤더 및 본문을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3f667a597d0810736bda963eefbc33a74f24820b" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client</source>
          <target state="translated">주어진 상태, 헤더 및 파일을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8fa020f53cdee1e58149be6a170a81ebd2b8f16a" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client.</source>
          <target state="translated">주어진 상태, 헤더 및 파일을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b1ae73f262918a400f2777f879f98b14757c0356" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client</source>
          <target state="translated">주어진 상태, 헤더를 클라이언트에게 청크 응답의 시작으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="98f05b4a43a17d1506c7c0722b3b1b76cd400e66" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client.</source>
          <target state="translated">주어진 상태, 헤더를 청크 응답의 시작으로 클라이언트에 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4ed850761dfe7724d1b944f2ffc0f7d2de013f38" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response</source>
          <target state="translated">응답 헤더를 청크 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="04d8681376a92c3eb52331e76051230a4195c17d" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response.</source>
          <target state="translated">응답 헤더를 청크 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="59bee72c1fd17c82da45c231f035a209dfdee94a" translate="yes" xml:space="preserve">
          <source>Serializer</source>
          <target state="translated">Serializer</target>
        </trans-unit>
        <trans-unit id="85792e8a3d476121d2028fa22f8b1db5759e853e" translate="yes" xml:space="preserve">
          <source>Server pushes must happen prior to a response being sent. If a server push is attempted after a response is sent then a &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">응답을 보내기 전에 서버 푸시가 발생해야합니다. 응답이 전송 된 후 서버 푸시가 시도되면 &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3facdb03e5d7811371bc108d458d02bf7b7534eb" translate="yes" xml:space="preserve">
          <source>Session stores</source>
          <target state="translated">세션 상점</target>
        </trans-unit>
        <trans-unit id="0762d654ef1cd87661534f45fd60626730f25204" translate="yes" xml:space="preserve">
          <source>Sets the dynamic repository to be used in further interactions.</source>
          <target state="translated">추가 상호 작용에 사용할 동적 저장소를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="973de0fad1a86720c3b14c87e1f533753fabc33e" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 와 &lt;code&gt;body&lt;/code&gt; 대한 응답을 설정합니다</target>
        </trans-unit>
        <trans-unit id="7e2971886484c2d54f52fda136a1853fe373601c" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 와 &lt;code&gt;body&lt;/code&gt; 응답을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7b11288ff44d6a2c856bd42c2433b817ee3c0d33" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; 을 고려한 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 응답 헤더 의 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="60a9f444fec9661326170fa10d3b28058820fb13" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; 을 고려하여 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 응답 헤더 의 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="124bfef7545ed44d34ed68aea26689653267a541" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering</source>
          <target state="translated">렌더링 할 때 레이아웃이있는 형식을 설정합니다</target>
        </trans-unit>
        <trans-unit id="1a3e25289d98574f8d2ce6e7f348df35c2108378" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering.</source>
          <target state="translated">렌더링시 레이아웃이있는 형식을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="292ac677682669584112c602ca4559bccf6f2e08" translate="yes" xml:space="preserve">
          <source>Setting the namespace to &lt;code&gt;MyApp.Admin&lt;/code&gt; in the second example will force the template to also be looked up at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;.</source>
          <target state="translated">두 번째 예제에서 네임 스페이스를 &lt;code&gt;MyApp.Admin&lt;/code&gt; 으로 설정하면 템플릿을 &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; 에서도 찾아야 합니다.</target>
        </trans-unit>
        <trans-unit id="fe94160acd6fbedcc5be6644df56f9ce11f302f5" translate="yes" xml:space="preserve">
          <source>Setting the prefix in the query changes the default prefix of all &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; expressions. You can override the query prefix by either setting the &lt;code&gt;@schema_prefix&lt;/code&gt; in your schema definitions or by passing the prefix option:</source>
          <target state="translated">쿼리에서 접두사를 설정하면 모든 &lt;code&gt;from&lt;/code&gt; 및 &lt;code&gt;join&lt;/code&gt; 식 의 기본 접두사가 변경 됩니다. 스키마 정의에서 &lt;code&gt;@schema_prefix&lt;/code&gt; 를 설정 하거나 prefix 옵션을 전달하여 조회 접 두부를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1511667d6b259adc4e62f0970e71e5fc502c0dde" translate="yes" xml:space="preserve">
          <source>Shared options</source>
          <target state="translated">공유 옵션</target>
        </trans-unit>
        <trans-unit id="d4bd5f107140360dabc5810290c12cbefe328539" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the origin header matches the allowed origins, no origin header was sent or no origin was configured, it will return the given connection.</source>
          <target state="translated">적절한 경우 연결하기 전에 운송 업체가 호출해야합니다. 오리진 헤더가 허용 된 오리진과 일치하거나, ​​오리진 헤더가 전송되지 않았거나 오리진이 구성되지 않은 경우 지정된 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2ef97bd3fcfc474fd6914d207ec1a85adccfa1e4" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the sec-websocket-protocol header matches the allowed subprotocols, it will put sec-websocket-protocol response header and return the given connection. If no sec-websocket-protocol header was sent it will return the given connection.</source>
          <target state="translated">적절한 경우 연결하기 전에 전송에서 호출해야합니다. sec-websocket-protocol 헤더가 허용 된 하위 프로토콜과 일치하면 sec-websocket-protocol 응답 헤더를 넣고 주어진 연결을 반환합니다. sec-websocket-protocol 헤더가 전송되지 않으면 주어진 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="23c54dd01c1ae034689416b4628f1c012e01870d" translate="yes" xml:space="preserve">
          <source>Should you choose to configure your own ciphers you cannot use the &lt;code&gt;:cipher_suite&lt;/code&gt; option as setting a cipher suite overrides your cipher selections.</source>
          <target state="translated">자체 암호를 구성하도록 선택 하면 암호 스위트 설정이 암호 선택을 대체 하므로 &lt;code&gt;:cipher_suite&lt;/code&gt; 옵션을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7fddb7d8d1d60b1eeefa9af01082e0811d4b484d" translate="yes" xml:space="preserve">
          <source>Shutdown</source>
          <target state="translated">Shutdown</target>
        </trans-unit>
        <trans-unit id="8129fdbbafce686a971d68a97e93da4f5a6707c4" translate="yes" xml:space="preserve">
          <source>Shuts down the repository</source>
          <target state="translated">저장소를 종료합니다</target>
        </trans-unit>
        <trans-unit id="9222d2164ca189b6d70bf3e2d13ec35ad176331f" translate="yes" xml:space="preserve">
          <source>Shuts down the repository.</source>
          <target state="translated">저장소를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="e5c71aeaef6a40bb5b30896d0edde13cc4545556" translate="yes" xml:space="preserve">
          <source>Signing and encrypting cookies</source>
          <target state="translated">쿠키 서명 및 암호화</target>
        </trans-unit>
        <trans-unit id="06b57e7149cc2b9d37d8a5281c9d4d4f468fc518" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">유사합니다 &lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 있지만, 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 을&lt;/a&gt; 더 기록이 발견되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="c1de6be4d4a7d0026737bbb929476b58a3899d7c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">유사합니다 &lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 있지만, 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 를&lt;/a&gt; 더 레코드가 발견되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="716e7b8304762059e3756e20b26dcccee049164e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get_by/3&quot;&gt;&lt;code&gt;get_by/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:get_by/3&quot;&gt; &lt;code&gt;get_by/3&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 레코드가 없으면 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="a9a71d0ef4f57438fb836bf75362c66c11034d6e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">유사 &lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; &lt;/a&gt; 만 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt; 대한 기록이 발견되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="42730c52cfc74f4b110f480503b0827db35ef6d8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">유사에 &lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; &lt;/a&gt; 만은 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 를&lt;/a&gt; 더 레코드가 발견되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="9602d57832535417770f387c5a5d0450aa7cf242" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:reload/2&quot;&gt;&lt;code&gt;reload/2&lt;/code&gt;&lt;/a&gt;, but raises when something is not found.</source>
          <target state="translated">&lt;a href=&quot;#c:reload/2&quot;&gt; &lt;code&gt;reload/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 무언가를 찾을 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b6c78b9004e61663051dcd4d055a5bf8cafaeafb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">유사하게 &lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; &lt;/a&gt; 하지만, 모듈 이름, 기능 및 인수를 전달할 수있다. 함수는 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 반환해야 하며 첫 번째 인수 (함수 호출에서 전달 된 인수 앞에 추가됨 )까지 변경 사항을받습니다.</target>
        </trans-unit>
        <trans-unit id="6418545197a346d3b8671927d501e7da02f8b915" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 모듈 이름, 함수 및 인수를 전달할 수 있습니다. 이 함수는 &lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 반환 하고 첫 번째 인수 (함수 호출에 전달 된 인수 앞에 추가)까지 변경 사항을 수신해야합니다.</target>
        </trans-unit>
        <trans-unit id="45981842f8238a3b10a636959d5a33b8843118a3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#run/3&quot;&gt;&lt;code&gt;run/3&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return either &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt;, and receives the repo as the first argument, and the changes so far as the second argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#run/3&quot;&gt; &lt;code&gt;run/3&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 모듈 이름, 함수 및 인수를 전달할 수 있습니다. 함수는 &lt;code&gt;{:ok, value}&lt;/code&gt; 또는 &lt;code&gt;{:error, value}&lt;/code&gt; 리턴해야 하며 repo를 첫 번째 인수로, 두 번째 인수까지의 변경 사항을 수신합니다 (함수 호출에 전달 된 것 앞에 추가).</target>
        </trans-unit>
        <trans-unit id="87dd2f0ff960411a79daab240746f7e7a73e8806" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#validate_change/3&quot;&gt;&lt;code&gt;validate_change/3&lt;/code&gt;&lt;/a&gt; but stores the validation metadata into the changeset validators. The validator metadata is often used as a reflection mechanism, to automatically generate code based on the available validations.</source>
          <target state="translated">&lt;a href=&quot;#validate_change/3&quot;&gt; &lt;code&gt;validate_change/3&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 유효성 검증 메타 데이터를 변경 세트 유효성 검증기에 저장합니다. 유효성 검사기 메타 데이터는 종종 사용 가능한 유효성 검사를 기반으로 코드를 자동 생성하기 위해 리플렉션 메커니즘으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="69474a73059972b96b5e3b7fbabc31c9b8dd1aa4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">유사합니다 &lt;code&gt;get_by/3&lt;/code&gt; 하지만 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 을&lt;/a&gt; 더 기록이 발견되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="f6dff33ff4e2317639d9e9d27bfcadf16c760660" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;code&gt;get_by/3&lt;/code&gt; 와 유사 하지만 레코드가 없으면 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a4bfbecdbc63477571a9c0d33b98c72fbcd63302" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the exising one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; 와 유사 하게이 함수는 새로운 응답 헤더 ( &lt;code&gt;key&lt;/code&gt; )를 추가하지만 확장 헤더 를 교체하는 대신 다른 헤더 앞에 동일한 &lt;code&gt;key&lt;/code&gt; 추가 합니다 .</target>
        </trans-unit>
        <trans-unit id="cfa80534ecc93a99a1d8974de760e1142bde5992" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the existing one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; 와 유사 하게이 함수는 새로운 응답 헤더 ( &lt;code&gt;key&lt;/code&gt; )를 추가하지만 기존 헤더를 바꾸는 대신 다른 헤더 앞에 동일한 &lt;code&gt;key&lt;/code&gt; 추가 합니다 .</target>
        </trans-unit>
        <trans-unit id="c937da7e4c92af6c87282cbfbca854b6a0365283" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &quot;all bindings before&quot; and match on the last one.</source>
          <target state="translated">마찬가지로 쿼리의 마지막 바인딩 (또는 마지막 바인딩)에만 관심이있는 경우 &lt;code&gt;...&lt;/code&gt; 를 사용하여 &quot;이전의 모든 바인딩&quot;을 지정하고 마지막 바인딩과 일치 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4da369a800240a36c38a1a1b6280abdb44b5760a" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &amp;ldquo;all bindings before&amp;rdquo; and match on the last one.</source>
          <target state="translated">마찬가지로 쿼리의 마지막 바인딩 (또는 마지막 바인딩)에만 관심이있는 경우 &lt;code&gt;...&lt;/code&gt; 을 사용하여&amp;ldquo;이전의 모든 바인딩&amp;rdquo;을 지정하고 마지막 바인딩과 일치 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="315b1ca0f3b405f6a32b3e7f54525c8fad241b41" translate="yes" xml:space="preserve">
          <source>Similarly, other types, such as datetimes, are returned as strings. This means conditions like &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; may return incorrect results or fail as the underlying database tries to compare incompatible types. You can, however, use &lt;a href=&quot;#type/2&quot;&gt;&lt;code&gt;type/2&lt;/code&gt;&lt;/a&gt; to force the types on the database level.</source>
          <target state="translated">마찬가지로 datetimes와 같은 다른 유형도 문자열로 반환됩니다. 이는 &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; 와 같은 조건이 잘못된 결과를 반환하거나 기본 데이터베이스가 호환되지 않는 유형을 비교하려고 할 때 실패 할 수 있음을 의미합니다. 그러나 &lt;a href=&quot;#type/2&quot;&gt; &lt;code&gt;type/2&lt;/code&gt; &lt;/a&gt; 를 사용 하여 데이터베이스 수준에서 유형을 강제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16f710f42a00a1f126107e1d5daf3f6f20d75e44" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;:binary_id&lt;/code&gt; type may be generated in the adapter for cases like UUID but it may also be handled by the database if required. In any case, both scenarios are handled transparently by Ecto.</source>
          <target state="translated">마찬가지로 &lt;code&gt;:binary_id&lt;/code&gt; 유형은 UUID와 같은 경우 어댑터에서 생성 될 수 있지만 필요한 경우 데이터베이스에서 처리 될 수도 있습니다. 어쨌든 두 시나리오는 모두 Ecto에서 투명하게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="ac8a6784f582b6e7efb616680c77e30d6b1bf4b4" translate="yes" xml:space="preserve">
          <source>Similarly, we can broadcast messages from the test itself on the topic that both test and channel are subscribed to, triggering &lt;code&gt;handle_out/3&lt;/code&gt; on the channel:</source>
          <target state="translated">마찬가지로 채널에서 &lt;code&gt;handle_out/3&lt;/code&gt; 을 트리거하여 테스트와 채널이 모두 구독되는 주제에 대해 테스트 자체의 메시지를 브로드 캐스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="829e55987872ebea2c89921e68e0631668fb6fc9" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to create multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ecto 태스크는 한 번만 실행될 수 있으므로 여러 저장소를 작성해야하는 경우 적절하게 &lt;code&gt;:ecto_repos&lt;/code&gt; 를 설정 하거나 &lt;code&gt;-r&lt;/code&gt; 플래그를 여러 번 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="cba3b9261a84cf0943491491af9376a0a3e36cc6" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to drop multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ecto 태스크는 한 번만 실행될 수 있으므로 여러 저장소를 삭제해야하는 경우 &lt;code&gt;:ecto_repos&lt;/code&gt; 따라 : ecto_repos를 설정 하거나 &lt;code&gt;-r&lt;/code&gt; 플래그를 여러 번 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d532ae08cb5cca6185a53fae8d86b3abd5196e4" translate="yes" xml:space="preserve">
          <source>Since in this case we always require the user to pass all tags directly, using &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt; is a great fit. It will automatically remove any tag not given and properly associate all of the given tags with the post.</source>
          <target state="translated">이 경우 항상 사용자가 모든 태그를 직접 전달해야하므로 &lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다. 제공되지 않은 태그를 자동으로 제거하고 지정된 모든 태그를 게시물과 올바르게 연결합니다.</target>
        </trans-unit>
        <trans-unit id="3dd6831992c073280cf00432e8f433224c821023" translate="yes" xml:space="preserve">
          <source>Since many views render significant content, for example a whole HTML file, it is common to put these files into a particular directory, typically &quot;APP_web/templates&quot;.</source>
          <target state="translated">많은 뷰가 중요한 콘텐츠 (예 : 전체 HTML 파일)를 렌더링하므로 이러한 파일을 특정 디렉토리 (일반적으로 &quot;APP_web / templates&quot;)에 배치하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="eefc84b03d574da756bb5bd39f349a4317dd4518" translate="yes" xml:space="preserve">
          <source>Since rewriting the scheme based on &lt;code&gt;x-forwarded-proto&lt;/code&gt; can open up security vulnerabilities, only provide the option above if:</source>
          <target state="translated">&lt;code&gt;x-forwarded-proto&lt;/code&gt; 를 기반으로 스키마를 다시 작성하면 보안 취약점이 발생할 수 있으므로 다음과 같은 경우에만 위 옵션을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="28df1368db59ac470c073051cf5513f7f6fe19af" translate="yes" xml:space="preserve">
          <source>Since the socket supervision tree is started by the endpoint, any custom transport must be started after the endpoint in a supervision tree.</source>
          <target state="translated">소켓 감독 트리는 엔드 포인트에 의해 시작되므로 모든 사용자 지정 전송은 감독 트리의 엔드 포인트 이후에 시작되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9959ad819fdc6ce082fcbfcacbea425e36ef2224" translate="yes" xml:space="preserve">
          <source>Since this store uses crypto features, it requires you to set the &lt;code&gt;:secret_key_base&lt;/code&gt; field in your connection. This can be easily achieved with a plug:</source>
          <target state="translated">이 저장소는 암호화 기능을 사용하므로 연결에서 &lt;code&gt;:secret_key_base&lt;/code&gt; 필드 를 설정 해야합니다. 플러그로 쉽게 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8912a71b3fe9cbd76561667ba2df8c846422505a" translate="yes" xml:space="preserve">
          <source>Singleton resources</source>
          <target state="translated">싱글 톤 리소스</target>
        </trans-unit>
        <trans-unit id="6902fa751afee1587733342b99b1168338cc5b66" translate="yes" xml:space="preserve">
          <source>So by default, &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; will read 1_000_000 bytes at a time from the socket with an overall limit of 8_000_000 bytes.</source>
          <target state="translated">따라서 기본적으로 &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 는 소켓에서 한 번에 1_000_000 바이트를 읽고 전체 제한은 8_000_000 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="0791af6a9061b0bd9104c3318c0999563ce5a7b3" translate="yes" xml:space="preserve">
          <source>So in order to avoid new lines provided by the user from being ignored when the form is resubmitted, we automatically add a new line before the text area value.</source>
          <target state="translated">따라서 양식을 다시 제출할 때 사용자가 제공 한 새 행이 무시되지 않도록 텍스트 영역 값 앞에 새 행을 자동으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="30e4e0636ef80614c6a204a9f77fd4fa5e406c3a" translate="yes" xml:space="preserve">
          <source>So the custom type does need to handle the conversion from external data to runtime data (&lt;a href=&quot;#c:cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt;) as well as transforming that runtime data into the &lt;code&gt;:map&lt;/code&gt; Ecto native type and back (&lt;a href=&quot;#c:dump/1&quot;&gt;&lt;code&gt;dump/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c:load/1&quot;&gt;&lt;code&gt;load/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">따라서 사용자 정의 유형은 외부 데이터에서 런타임 데이터 ( &lt;a href=&quot;#c:cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt; ) 로의 변환을 처리하고 해당 런타임 데이터를 &lt;code&gt;:map&lt;/code&gt; Ecto 기본 유형 으로 변환하고 ( &lt;a href=&quot;#c:dump/1&quot;&gt; &lt;code&gt;dump/1&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#c:load/1&quot;&gt; &lt;code&gt;load/1&lt;/code&gt; &lt;/a&gt; ) 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f6d61673c056f0d9b6ae9f15c5366544e2df8ce" translate="yes" xml:space="preserve">
          <source>Socket Behaviour</source>
          <target state="translated">소켓 동작</target>
        </trans-unit>
        <trans-unit id="ce8db0a6f5c8a561689e5b447b552eb7713259e8" translate="yes" xml:space="preserve">
          <source>Socket Fields</source>
          <target state="translated">소켓 필드</target>
        </trans-unit>
        <trans-unit id="71e32d448a3d576193b708bcfd66b979cebaa038" translate="yes" xml:space="preserve">
          <source>Socket IDs are topics that allow you to identify all sockets for a given user:</source>
          <target state="translated">소켓 ID는 주어진 사용자에 대한 모든 소켓을 식별 할 수있는 주제입니다.</target>
        </trans-unit>
        <trans-unit id="c3497bc7ef561824cf3d270e2a939d9fd8de8f0c" translate="yes" xml:space="preserve">
          <source>Socket connections</source>
          <target state="translated">소켓 연결</target>
        </trans-unit>
        <trans-unit id="fcd871ca1e2946874651dc3c49f23c0f8ab2d9ce" translate="yes" xml:space="preserve">
          <source>Socket fields</source>
          <target state="translated">소켓 필드</target>
        </trans-unit>
        <trans-unit id="2c066e895961b889ac1d641af69e732ed7a3dfb8" translate="yes" xml:space="preserve">
          <source>Socket handlers are mounted in Endpoints and must define two callbacks:</source>
          <target state="translated">소켓 핸들러는 엔드 포인트에 마운트되며 두 개의 콜백을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="26c7d7e3cabe08ea953e3c1dee57cd02065df6e1" translate="yes" xml:space="preserve">
          <source>Socket params and assigns</source>
          <target state="translated">소켓 매개 변수 및 할당</target>
        </trans-unit>
        <trans-unit id="d3298d773701ba60ff3b0ed43b4a56d5ce41b6c4" translate="yes" xml:space="preserve">
          <source>Socket params are passed from the client and can be used to verify and authenticate a user. After verification, you can put default assigns into the socket that will be set for all channels, ie</source>
          <target state="translated">소켓 매개 변수는 클라이언트에서 전달되며 사용자를 확인하고 인증하는 데 사용될 수 있습니다. 확인 후 모든 채널에 대해 설정 될 소켓에 기본 할당을 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4451e4b0bc65dbc1e28eb76c83f0fed8fe83ed4" translate="yes" xml:space="preserve">
          <source>Socket transport for long poll clients.</source>
          <target state="translated">긴 폴링 클라이언트를위한 소켓 전송.</target>
        </trans-unit>
        <trans-unit id="dfffadfddf7c3296669cff7822b6c0bbfa4c059d" translate="yes" xml:space="preserve">
          <source>Socket transport for websocket clients.</source>
          <target state="translated">웹 소켓 클라이언트를위한 소켓 전송.</target>
        </trans-unit>
        <trans-unit id="659ec7a0e44b1e98288c982fc69284240ea4c909" translate="yes" xml:space="preserve">
          <source>Sockets are operated by a transport. When a transport is defined, it usually receives a socket module and the module will be invoked when certain events happen at the transport level.</source>
          <target state="translated">소켓은 전송에 의해 작동됩니다. 전송이 정의되면 일반적으로 소켓 모듈을 수신하고 전송 수준에서 특정 이벤트가 발생할 때 모듈이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="43df9a6501aafdc4a5241768cdf8869bfadda28e" translate="yes" xml:space="preserve">
          <source>Some abstractions would force you to define some sort of polymorphic association with two fields in your database:</source>
          <target state="translated">일부 추상화는 데이터베이스의 두 필드와 일종의 다형성 연관을 정의하도록 강제합니다.</target>
        </trans-unit>
        <trans-unit id="365899add53094029b4e1b37974677c0d55477dc" translate="yes" xml:space="preserve">
          <source>Some databases support deferred constraints, i.e., constraints which are checked at the end of the transaction rather than at the end of each statement.</source>
          <target state="translated">일부 데이터베이스는 지연된 제한 조건, 즉 각 명령문의 끝이 아닌 트랜잭션의 끝에서 점검되는 제한 조건을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ca11a570261843c9e308cec1aa0b8a90d4b7a089" translate="yes" xml:space="preserve">
          <source>Some other examples:</source>
          <target state="translated">다른 예 :</target>
        </trans-unit>
        <trans-unit id="3ca6500c14086df6d1af4feac56d17e052d08ced" translate="yes" xml:space="preserve">
          <source>Sometimes we may want to generate a &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; or any other tag outside of a form. The functions in this module also support such usage by simply passing an atom as first argument instead of the form.</source>
          <target state="translated">때로는 &lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt; 또는 폼 외부의 다른 태그 를 생성하려고 할 수 있습니다 . 이 모듈의 함수는 또한 아톰을 폼 대신 첫 번째 인수로 전달하여 이러한 사용법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="78254dfb54f129d1d3abccd68e001b90de9bad56" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">때로는 내부 &lt;code&gt;socket.topic&lt;/code&gt; 외에도 소켓을 외부 주제에 프로그래밍 방식으로 구독해야 할 수도 있습니다 . 예를 들어 원격 클라이언트가 입찰 알림을 받고자하는 제품에 대한 환경 설정을 동적으로 설정하는 입찰 시스템이 있다고 가정 해보십시오. 고유 한 채널 프로세스와 선호도 별 주제를 요구하는 대신 더 효율적이고 간단한 접근 방식은 엔드 포인트를 통해 관련 알림에 단일 채널을 구독하는 것입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="f12506ae9375b0c2f497ee7bafe9b9fbba8626a5" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">때로는 내부 &lt;code&gt;socket.topic&lt;/code&gt; 외에도 외부 주제에 소켓을 프로그래밍 방식으로 구독해야 할 수도 있습니다 . 예를 들어, 원격 클라이언트가 입찰 알림을 수신하려는 제품에 대한 환경 설정을 동적으로 설정하는 입찰 시스템이 있다고 가정하십시오. 고유 한 채널 프로세스 및 선호 사항 당 주제를 요구하는 대신,보다 효율적이고 간단한 방법은 엔드 포인트를 통해 단일 채널을 관련 알림에 구독하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5c39a1a34f3190a4e116f58e40087a04eff55fbd" translate="yes" xml:space="preserve">
          <source>Sometimes you may want a single Ecto repository to talk to many different database instances. By default, when you call &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt;, it will start a repository with name &lt;code&gt;MyApp.Repo&lt;/code&gt;. But if you want to start multiple repositories, you can give each of them a different name:</source>
          <target state="translated">때로는 단일 Ecto 저장소가 여러 데이터베이스 인스턴스와 통신하기를 원할 수 있습니다. 당신이 전화를 기본적으로 &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt; , 그것은 이름을 가진 저장소가 시작됩니다 &lt;code&gt;MyApp.Repo&lt;/code&gt; 을 . 그러나 여러 저장소를 시작하려면 각 저장소에 다른 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb98739576cc374632c2a09c6868c93331dba1aa" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a parser reads the body from the connection. For example, you may want to cache the body to perform verification later, such as HTTP Signature Verification. This can be achieved with a custom body reader that would read the body and store it in the connection, such as:</source>
          <target state="translated">때때로 구문 분석기가 연결에서 본문을 읽는 방법을 사용자 정의 할 수 있습니다. 예를 들어 HTTP 서명 확인과 같이 나중에 확인을 수행하기 위해 본문을 캐시 할 수 있습니다. 이것은 다음과 같이 본문을 읽고 연결에 저장하는 맞춤형 본문 판독기를 사용하여 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bee18a6f85fe70265dd2112210c0f92b124fa91e" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a route behaves during dispatch. This can be done by accessing the &lt;code&gt;opts&lt;/code&gt; variable inside the route:</source>
          <target state="translated">때로는 디스패치 중에 라우트가 작동하는 방식을 사용자 정의 할 수 있습니다. 경로 내에서 &lt;code&gt;opts&lt;/code&gt; 변수 에 액세스하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="b58df17aaf2c2fd278d4f2fead7fc6caf5b5a7b6" translate="yes" xml:space="preserve">
          <source>Special Considerations</source>
          <target state="translated">특별 고려 사항</target>
        </trans-unit>
        <trans-unit id="aa67403b7f992c15b19fceea8ba389d87283c89d" translate="yes" xml:space="preserve">
          <source>Specification for session stores.</source>
          <target state="translated">세션 저장소에 대한 사양</target>
        </trans-unit>
        <trans-unit id="93962ecd7513a0e8dedab96e5494d4e71a85820a" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers</source>
          <target state="translated">웹 서버가 구현 한 연결 어댑터 API 사양</target>
        </trans-unit>
        <trans-unit id="8c21a5512c1d500b4e3bffdba45c1ac3cbd76fc9" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers.</source>
          <target state="translated">웹 서버에 의해 구현 된 연결 어댑터 API의 사양.</target>
        </trans-unit>
        <trans-unit id="06b1405ff71558191ac1ba8cbd0d31a2429ee631" translate="yes" xml:space="preserve">
          <source>Specifies the API for adding custom template engines into Phoenix.</source>
          <target state="translated">사용자 지정 템플릿 엔진을 Phoenix에 추가하기위한 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ae4da6d464094a11a257778d0bd2d7402189cc86" translate="yes" xml:space="preserve">
          <source>Specifies the adapter storage API.</source>
          <target state="translated">어댑터 스토리지 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="23d851285a99e6b319346c3a2a806860a7a756b3" translate="yes" xml:space="preserve">
          <source>Specifies the adapter transactions API.</source>
          <target state="translated">어댑터 트랜잭션 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="574a225935448a3b5783969d2155a7104be5b213" translate="yes" xml:space="preserve">
          <source>Specifies the minimal API required from adapters.</source>
          <target state="translated">어댑터에 필요한 최소 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="323dcc74c0661608c4ff58df91ef59dcdbb6402c" translate="yes" xml:space="preserve">
          <source>Specifies the query API required from adapters.</source>
          <target state="translated">어댑터에서 필요한 조회 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a42ccb23437e0306fbc55a97042f6087bc6900c8" translate="yes" xml:space="preserve">
          <source>Specifies the schema API required from adapters.</source>
          <target state="translated">어댑터에 필요한 스키마 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="acf7976eaa2a183ab2459a4d7b272d56d0678d47" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;read_after_writes: true&lt;/code&gt; in your schema for choosing fields that are read from the database after every operation. Or pass &lt;code&gt;returning: true&lt;/code&gt; to &lt;code&gt;insert&lt;/code&gt; to read all fields back:</source>
          <target state="translated">모든 조작 후 데이터베이스에서 읽을 필드를 선택하기 위해 스키마에서 &lt;code&gt;read_after_writes: true&lt;/code&gt; 를 지정 하십시오. 또는 모든 필드를 다시 읽 도록 &lt;code&gt;insert&lt;/code&gt; 하려면 &lt;code&gt;returning: true&lt;/code&gt; 를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="425abcb3fa216c718977c7117020fb893407d770" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">사용하는 응용 프로그램 내 존재 모듈 정의하여 시작 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; 을&lt;/a&gt; 하고 제공 &lt;code&gt;:otp_app&lt;/code&gt; 구성을 보유하고,뿐만 아니라 &lt;code&gt;:pubsub_server&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="9aeb6c896025284c2220fec468d5df1f53bee18c" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;phoenix.presence#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">사용하는 응용 프로그램 내 존재 모듈 정의하여 시작 &lt;a href=&quot;phoenix.presence#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; 을&lt;/a&gt; 하고 제공 &lt;code&gt;:otp_app&lt;/code&gt; 구성을 보유하고,뿐만 아니라 &lt;code&gt;:pubsub_server&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="a0e558f1d578a0b0bbe5b2674d9f1be49c54327d" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection</source>
          <target state="translated">연결에서 키에 값을 할당하는 작업을 시작합니다</target>
        </trans-unit>
        <trans-unit id="5b7daad4b6fff18a4b4bc540bde997e7392379ff" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection.</source>
          <target state="translated">연결에서 키에 값을 할당하는 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="04f1da3ebc9ca839c95f8f179871511231ce4fd1" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done</source>
          <target state="translated">연결 풀링 또는 감독을 시작하고 &lt;code&gt;{:ok, pid}&lt;/code&gt; 또는 아무것도 수행하지 않아도되는 경우 &lt;code&gt;:ok&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f79a24140d5b97d1763dd99ca8ad2521906cc980" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done.</source>
          <target state="translated">연결 풀링 또는 감독을 시작하고 수행 할 필요가없는 경우 &lt;code&gt;{:ok, pid}&lt;/code&gt; 또는 그냥 &lt;code&gt;:ok&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dbcf0ce19d7f72817408d1b66fce3e46bfbcca2f" translate="yes" xml:space="preserve">
          <source>Starts endpoint&amp;rsquo;s configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">엔드 포인트의 구성 캐시와 요청 처리를위한 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e3a54eb716a9c3cdfe4b9a7ad4cee9354a40712d" translate="yes" xml:space="preserve">
          <source>Starts endpoint's configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">요청을 처리하기 위해 엔드 포인트의 구성 캐시 및 가능하면 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ae77342fe2af2cc246a241cebd3e89697a20ce7d" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree</source>
          <target state="translated">엔드 포인트 감독 트리를 시작합니다</target>
        </trans-unit>
        <trans-unit id="03f88e6163759407a0545e07892ca337d17fb9a4" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree.</source>
          <target state="translated">엔드 포인트 감독 트리를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="05c0daa7470b7dd485d073925efda89a62e524df" translate="yes" xml:space="preserve">
          <source>Starts the application by configuring all endpoints servers to run.</source>
          <target state="translated">실행할 모든 엔드 포인트 서버를 구성하여 애플리케이션을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="13005fdc1263d7b288dd9b04fe58b326107c112c" translate="yes" xml:space="preserve">
          <source>Starts the endpoint supervision tree.</source>
          <target state="translated">엔드 포인트 감독 트리를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="fe39de33b591bfb6bcb3deb612aa31421a0a6d36" translate="yes" xml:space="preserve">
          <source>Starts the server</source>
          <target state="translated">서버를 시작합니다</target>
        </trans-unit>
        <trans-unit id="bb0ca4e227518b7b5cc054b544be753f6cb2b6a2" translate="yes" xml:space="preserve">
          <source>Starts the server.</source>
          <target state="translated">서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="d34d7622ebcade9f9b5155dfd196d5e29fe82811" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server</source>
          <target state="translated">업로드 처리 서버를 시작합니다</target>
        </trans-unit>
        <trans-unit id="59489acfbc0005766722394416981887c2b45cf6" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server.</source>
          <target state="translated">업로드 처리 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="f9ef14ce4d16dc528341a2c579120765c5772ff7" translate="yes" xml:space="preserve">
          <source>Stop tracking a channel's process.</source>
          <target state="translated">채널의 프로세스 추적을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="4a58f463b521a331812c7340cc2eaa6fb7aec040" translate="yes" xml:space="preserve">
          <source>Stop tracking a process.</source>
          <target state="translated">프로세스 추적을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="cb95290f3e237b98634fde98df7f64003f647f47" translate="yes" xml:space="preserve">
          <source>Stores metadata of a struct.</source>
          <target state="translated">구조체의 메타 데이터를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="13696602150188b92bcbb9de1c78c62048beb623" translate="yes" xml:space="preserve">
          <source>Stores subquery information.</source>
          <target state="translated">하위 쿼리 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e21ecec1414d0590ee874d09ffbfacfe188ffd3b" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection</source>
          <target state="translated">주어진 상태 코드를 연결에 저장</target>
        </trans-unit>
        <trans-unit id="c1f39eb0958f7137f6ff09d4f5e228918ad2517e" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection.</source>
          <target state="translated">주어진 상태 코드를 연결에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="38f6cce826fac3c33ab9244e079a3a806aad671a" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering</source>
          <target state="translated">렌더링을위한 레이아웃을 저장합니다</target>
        </trans-unit>
        <trans-unit id="44a511d7881bc48902e485e8cef69c3184112cca" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet</source>
          <target state="translated">아직 저장하지 않은 경우 렌더링을위한 레이아웃을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d4447aa8196bd52c99b44a3f461e9a0c6a8e4f24" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet.</source>
          <target state="translated">렌더링을위한 레이아웃을 아직 저장하지 않은 경우 저장합니다.</target>
        </trans-unit>
        <trans-unit id="fe1f14bafc132a296718c9bf7c3aa8d7ee1a4892" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering.</source>
          <target state="translated">렌더링을위한 레이아웃을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a58b520dcd2f8f3484f39ecd049969a062130a5d" translate="yes" xml:space="preserve">
          <source>Stores the root layout for rendering.</source>
          <target state="translated">렌더링을위한 루트 레이아웃을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d2499f2f97aaac5c6a4106688dd5926525b5161f" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id</source>
          <target state="translated">주어진 세션 ID와 관련된 세션을 저장합니다</target>
        </trans-unit>
        <trans-unit id="b5f30bb51a27d5e5c9883d8a8bfea71b75448550" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id.</source>
          <target state="translated">주어진 세션 ID와 연관된 세션을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="8d7514a1fd361b438f0dc122dc301f9e889c8d5d" translate="yes" xml:space="preserve">
          <source>Stores the session in a cookie.</source>
          <target state="translated">쿠키에 세션을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="03d905412bbe2c82c304b3383bfdfba9329c96c3" translate="yes" xml:space="preserve">
          <source>Stores the session in an in-memory ETS table.</source>
          <target state="translated">세션을 메모리 내 ETS 테이블에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="8f72ad9daeeff4d9baca2bd6929f5a7531645f3b" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change</source>
          <target state="translated">유효성 검사 &lt;code&gt;metadata&lt;/code&gt; 저장하고 지정된 &lt;code&gt;field&lt;/code&gt; 변경을 유효성 검사합니다</target>
        </trans-unit>
        <trans-unit id="968dd6eda848310ed9d09eb97512cb82b641d047" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change.</source>
          <target state="translated">유효성 검사 &lt;code&gt;metadata&lt;/code&gt; 저장하고 지정된 &lt;code&gt;field&lt;/code&gt; 변경을 유효성 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="52d2b56e1a53d98739305b2938ad7d1bce7e6d45" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering</source>
          <target state="translated">렌더링을위한 뷰를 저장합니다</target>
        </trans-unit>
        <trans-unit id="08b34341b166965c032c307af7cd997af4e4274f" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet</source>
          <target state="translated">뷰가 아직 저장되지 않은 경우 렌더링을 위해 뷰를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a0f8dab1413ae13607334c46326f1ae3400b89ca" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet.</source>
          <target state="translated">뷰가 아직 저장되지 않은 경우 렌더링을 위해 뷰를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="14870e3b5dd83d56e16e75cb2089322baeeb8568" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering.</source>
          <target state="translated">렌더링 할 뷰를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="c3f496380c040f77fae6d0272d93930122999072" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query</source>
          <target state="translated">이전에 준비된 쿼리를 스트리밍</target>
        </trans-unit>
        <trans-unit id="3501f11bb258ecc0cbfd49dd264bd6b9c0a2fbd3" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query.</source>
          <target state="translated">이전에 준비된 쿼리를 스트리밍합니다.</target>
        </trans-unit>
        <trans-unit id="01b0b95c5902c4eba4fd8ac0fa3bcdfa9327e36b" translate="yes" xml:space="preserve">
          <source>Strings: &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt;, &lt;code&gt;~s(this is a string)&lt;/code&gt;</source>
          <target state="translated">문자열 : &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt; , &lt;code&gt;~s(this is a string)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d224d61643a39a4962579d1f48e5eeed4e12b15" translate="yes" xml:space="preserve">
          <source>Struct returned by associations when they are not loaded.</source>
          <target state="translated">연결이로드되지 않은 경우 연관이 리턴 한 구조입니다.</target>
        </trans-unit>
        <trans-unit id="25f57ecf7083fcb5184876a5d2f3f856041dba67" translate="yes" xml:space="preserve">
          <source>Struct used for logging entries.</source>
          <target state="translated">항목을 기록하는 데 사용되는 구조.</target>
        </trans-unit>
        <trans-unit id="f3d62142352d12e869d2bfc88d72b68c4bcade9c" translate="yes" xml:space="preserve">
          <source>Subqueries are currently only supported in the &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; fields.</source>
          <target state="translated">하위 쿼리는 현재에서만 지원됩니다 &lt;code&gt;from&lt;/code&gt; 와 &lt;code&gt;join&lt;/code&gt; 필드.</target>
        </trans-unit>
        <trans-unit id="63844850c088c1e41377067736b623f102b7fb1e" translate="yes" xml:space="preserve">
          <source>Subquery can also be used in a &lt;code&gt;join&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;join&lt;/code&gt; 식에서 하위 쿼리를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a16a28f51515abb3ed23ddfbd71c229b425f64e4" translate="yes" xml:space="preserve">
          <source>Subquery operators: &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt; and &lt;code&gt;exists&lt;/code&gt;</source>
          <target state="translated">하위 쿼리 연산자 : &lt;code&gt;any&lt;/code&gt; , &lt;code&gt;all&lt;/code&gt; 및 &lt;code&gt;exists&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f736150f2e074a22ead83dcf3dd8dc239fcdf5a" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic</source>
          <target state="translated">호출자를 PubSub 어댑터의 주제에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="50fd989211bc229d515632d14f3ae08584891447" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic.</source>
          <target state="translated">호출자를 PubSub 어댑터의 주제에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="8180ff8882fe43143269f06ada06be7291b3a91d" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter's topic.</source>
          <target state="translated">호출자를 PubSub 어댑터의 주제에 구독합니다.</target>
        </trans-unit>
        <trans-unit id="0f7820628e3c2c90b1707fb8c99222b97a355f14" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic</source>
          <target state="translated">주어진 주제에 발신자를 구독</target>
        </trans-unit>
        <trans-unit id="ca915041edbd919564fcfda571e153ced9e140ff" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic.</source>
          <target state="translated">발신자를 지정된 주제에 가입시킵니다.</target>
        </trans-unit>
        <trans-unit id="d5a4ec85d0d7c78af495961dd1c6901510edd509" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic</source>
          <target state="translated">주제에 pid를 구독</target>
        </trans-unit>
        <trans-unit id="c9d68c17cbbbd09344558cb7a8a42d8bcb73dc0a" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic.</source>
          <target state="translated">pid를 주제에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="81fb714bc39d524ea01b4a9e05095ad6d574bf09" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload</source>
          <target state="translated">주어진 주제를 구독하고 주어진 주제 및 페이로드에서 채널에 참여</target>
        </trans-unit>
        <trans-unit id="ea4e3ab0ff72e4151f4050d7eb16dd17b07a2093" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload.</source>
          <target state="translated">주어진 주제를 구독하고 주어진 주제 및 페이로드 아래 채널에 참여합니다.</target>
        </trans-unit>
        <trans-unit id="aae12d55adc496ed2380985ca3dfdd4bfb6a021e" translate="yes" xml:space="preserve">
          <source>Subscribing to external topics</source>
          <target state="translated">외부 주제 구독</target>
        </trans-unit>
        <trans-unit id="56c74c3880af80af2ab03c8135c1200b420fc782" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC</source>
          <target state="translated">UTC로 현재 시간에서 주어진 간격을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="451a00abcc42f5e6f995d27c0b6a7af19b580234" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC.</source>
          <target state="translated">UTC로 현재 시간에서 주어진 간격을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="1ac3ce0208da6a86296e45e27cd74061800554e3" translate="yes" xml:space="preserve">
          <source>Such allows developers to write queries using bindings only in more complex query expressions.</source>
          <target state="translated">이를 통해 개발자는보다 복잡한 쿼리 표현식에서만 바인딩을 사용하여 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6e2150503cfdddffd579e84eb195842a0ed309f" translate="yes" xml:space="preserve">
          <source>Such cases will be explicitly documented as well as any extra option.</source>
          <target state="translated">이러한 경우는 추가 옵션뿐만 아니라 명시 적으로 문서화됩니다.</target>
        </trans-unit>
        <trans-unit id="50124ed41dfb05f2530c51e775a800383a6b00d5" translate="yes" xml:space="preserve">
          <source>Such function receives the changeset and must return a changeset, allowing developers to do final adjustments to the changeset or to issue data consistency commands.</source>
          <target state="translated">이러한 기능은 변경 세트를 수신하고 변경 세트를 리턴하여 개발자가 변경 세트를 최종 조정하거나 데이터 일관성 명령을 실행할 수 있도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="23c18ef6e8fd8883f3f4e7f89080b810f7cfc463" translate="yes" xml:space="preserve">
          <source>Such functionality makes Ecto extremely useful to cast, validate and prune data even if it is not meant to be persisted to the database.</source>
          <target state="translated">이러한 기능을 통해 Ecto는 데이터가 데이터베이스에 유지되지 않아도 데이터를 캐스트, 유효성 검사 및 제거하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6b9e8b1f0c2164b70c31da5ac6e2eec9b106f2b0" translate="yes" xml:space="preserve">
          <source>Such transformations are defined via plugs, as defined in the &lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; specification. Once a pipeline is defined, it can be piped through per scope.</source>
          <target state="translated">이러한 변환은 &lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;플러그&lt;/a&gt; 사양에 정의 된대로 플러그를 통해 정의됩니다 . 파이프 라인이 정의되면 범위별로 파이프 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="7154b2f71294d8b9887ef951f46556c9be3650d1" translate="yes" xml:space="preserve">
          <source>Supported attributes for configuring the defined schema. They must be set after the &lt;code&gt;use Ecto.Schema&lt;/code&gt; call and before the &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">정의 된 스키마 구성에 지원되는 속성입니다. &lt;code&gt;use Ecto.Schema&lt;/code&gt; 호출 후 &lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt; 정의 전에 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f341132e53d4cf0ae3e38d6cb0bb2af57a08b5a5" translate="yes" xml:space="preserve">
          <source>Supported attributes, to be set beforehand, for configuring the defined schema.</source>
          <target state="translated">정의 된 스키마를 구성하기 위해 사전에 설정되는 지원되는 속성.</target>
        </trans-unit>
        <trans-unit id="c5ff84c7e3ceaccb9c98b2f6598a1f8252b42048" translate="yes" xml:space="preserve">
          <source>Supported date values</source>
          <target state="translated">지원되는 날짜 값</target>
        </trans-unit>
        <trans-unit id="ca8d530e21e98d39ae16f271fc7325bc86189c4c" translate="yes" xml:space="preserve">
          <source>Supported time values</source>
          <target state="translated">지원되는 시간 값</target>
        </trans-unit>
        <trans-unit id="7b672c250a692c7930dcea47f4f2882d8d6cb220" translate="yes" xml:space="preserve">
          <source>Tag attributes</source>
          <target state="translated">태그 속성</target>
        </trans-unit>
        <trans-unit id="49c2dd06d553be816ddc929d5827b8f4d498973a" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; flag to return lowerCamelCase.</source>
          <target state="translated">선택적인 &lt;code&gt;:lower&lt;/code&gt; 플래그를 사용하여 lowerCamelCase를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7ac4b3291b61ef8c743bfc95248b0fb3f14f2f4d" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; option to return lowerCamelCase.</source>
          <target state="translated">lowerCamelCase를 반환하기 위해 선택적인 &lt;code&gt;:lower&lt;/code&gt; 옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c7c29adf9027dec2f86ef5a16f075c3d628928d4" translate="yes" xml:space="preserve">
          <source>Takes the difference of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">여러 쿼리의 결과 집합의 차이를 가져옵니다. 각 쿼리 의 &lt;code&gt;select&lt;/code&gt; 은 동일한 순서로 동일한 유형으로 정확히 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="c5474cd2cac56f1497f50f85ecd38b5c6c812e93" translate="yes" xml:space="preserve">
          <source>Takes the overlap of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">여러 쿼리의 결과 집합이 겹칩니다. 각 쿼리 의 &lt;code&gt;select&lt;/code&gt; 은 동일한 순서로 동일한 유형으로 정확히 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="3db034b2c134d1803cc0048359b2bec75cc50891" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are</source>
          <target state="translated">널이 아닌 값을 취하거나 둘 다인 경우 널을 취합니다.</target>
        </trans-unit>
        <trans-unit id="385318970f2d6fbd0e9c01294074ec0db698c3bc" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are.</source>
          <target state="translated">널이 아닌 값을 취하거나 둘 다인 경우 널을 취합니다.</target>
        </trans-unit>
        <trans-unit id="b3b8c57740e772fbfade922d8b797cd74dba1963" translate="yes" xml:space="preserve">
          <source>Taking the initial example of users having addresses imagine those addresses are set up to belong to a country. If you want to allow users to bulk edit all addresses that belong to a single country, you can do so by changing the preload query:</source>
          <target state="translated">주소를 가진 사용자의 초기 예를 들어 보면 해당 주소가 국가에 속하도록 설정되어 있다고 상상해보십시오. 사용자가 단일 국가에 속한 모든 주소를 대량으로 편집 할 수있게하려면 사전로드 쿼리를 변경하면됩니다.</target>
        </trans-unit>
        <trans-unit id="6dd4fe806eb6aa488b589abd5daaa57f324f6077" translate="yes" xml:space="preserve">
          <source>Telemetry</source>
          <target state="translated">Telemetry</target>
        </trans-unit>
        <trans-unit id="d5e31566fc119a3fb202242cb49b826a32c929b4" translate="yes" xml:space="preserve">
          <source>Telemetry events</source>
          <target state="translated">원격 측정 이벤트</target>
        </trans-unit>
        <trans-unit id="d4ac83b979f38010b10a99b73e1e401a2fec66f9" translate="yes" xml:space="preserve">
          <source>Templates are often rendered inside layouts. By default, Phoenix will render layouts for html requests. For example:</source>
          <target state="translated">템플릿은 종종 레이아웃 내부에 렌더링됩니다. 기본적으로 Phoenix는 html 요청에 대한 레이아웃을 렌더링합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="83df20b5f538ba4bf70930df924ee3e9ff74c9fe" translate="yes" xml:space="preserve">
          <source>Templates are used by Phoenix when rendering responses.</source>
          <target state="translated">응답을 렌더링 할 때 Phoenix에서 템플릿을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="064acb0eabd4a2c305afa47b705ad6352a299f5c" translate="yes" xml:space="preserve">
          <source>Templates can be rendered within other templates using the &lt;code&gt;:layout&lt;/code&gt; option. &lt;code&gt;:layout&lt;/code&gt; accepts a tuple of the form &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:layout&lt;/code&gt; 옵션을 사용하여 다른 템플릿 내에서 템플릿을 렌더링 할 수 있습니다 . &lt;code&gt;:layout&lt;/code&gt; 은 &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt; 형식의 튜플을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="77517bd07ed49be0dde5e9aa42b90f66aa74f959" translate="yes" xml:space="preserve">
          <source>Terminate</source>
          <target state="translated">Terminate</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="cf28e2a327522d6ff3d688f8ac4b32ee2c8f9807" translate="yes" xml:space="preserve">
          <source>Testing with Presence</source>
          <target state="translated">현재 상태로 테스트</target>
        </trans-unit>
        <trans-unit id="8525247497cae160635c04a5c0a67e8ee5e93c2b" translate="yes" xml:space="preserve">
          <source>Tests whether one or more values returned from the provided subquery match in a comparison operation.</source>
          <target state="translated">제공된 하위 쿼리에서 반환 된 하나 이상의 값이 비교 작업에서 일치하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5fb157ec7c4ab4b43a8f7610702a11f4abf5a859" translate="yes" xml:space="preserve">
          <source>The &quot;assigns&quot; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">&quot;할당&quot;저장소는 플러그 파이프 라인의 다른 플러그가 액세스 할 수 있도록 연결에 값을 저장하는 데 사용됩니다. 할당 스토리지는 맵입니다.</target>
        </trans-unit>
        <trans-unit id="34cc66037bd21d671d1d361a106b7dc4195ccf47" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;assigns&amp;rdquo; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">&quot;할당&quot;스토리지는 플러그 파이프 라인의 다른 플러그가 액세스 할 수 있도록 연결에 값을 저장하는 데 사용됩니다. 지정 스토리지는 맵입니다.</target>
        </trans-unit>
        <trans-unit id="ed7d2aece955d0eb0adbd5c3ead7547ebda6a576" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#c:fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; callback is triggered when using &lt;code&gt;c:list/2&lt;/code&gt; and on every update, and it serves as a mechanism to fetch presence information a single time, before broadcasting the information to all channel subscribers. This prevents N query problems and gives you a single place to group isolated data fetching to extend presence metadata.</source>
          <target state="translated">는 &lt;a href=&quot;#c:fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt; 사용시 콜백이 트리거 &lt;code&gt;c:list/2&lt;/code&gt; 매를 업데이트에, 모든 채널에 대한 가입자 정보를 방송하기 전에, 현재 상태 정보는 단일 시간 인출하는기구로서 기능한다. 이는 N 개의 쿼리 문제를 방지하고 격리 된 데이터 가져 오기를 그룹화하여 현재 상태 메타 데이터를 확장 할 수있는 단일 위치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ccee99ea15b107959f66e403e4586ed71a7b198b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#connect/6&quot;&gt;&lt;code&gt;connect/6&lt;/code&gt;&lt;/a&gt; function in this module can be used as a convenience or a documentation on such steps.</source>
          <target state="translated">이 모듈 의 &lt;a href=&quot;#connect/6&quot;&gt; &lt;code&gt;connect/6&lt;/code&gt; &lt;/a&gt; 기능은 이러한 단계에 대한 편의 또는 문서로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef89800e0cbbeab27286654a528b11abba734ba6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 의&lt;/a&gt; 구조는 불투명으로 간주되어야한다. &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; 를 사용 하여 유형 일치를 패턴 화할 수 있지만 필드에 액세스하거나 직접 수정하는 것은 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="334abf61e2eb9d49fa7423881b32cb13154f6a3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt; 모듈은 또한 협회 작업을위한 편의 시설을 제공합니다. 예를 들어 &lt;a href=&quot;#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt; 는 주어진 구조체에 대한 모든 관련 데이터가있는 쿼리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1000118f12916a7a73fddff1f37da63c9cd690ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; implementation may also send special messages and replies:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; 의&lt;/a&gt; 구현은 특별한 메시지와 답장을 보낼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fdd88277b1d89a27b6b11599f8d9956fb7c2f53b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#encode_to_iodata!/1&quot;&gt;&lt;code&gt;encode_to_iodata!/1&lt;/code&gt;&lt;/a&gt; function converts the rendered template result into iodata.</source>
          <target state="translated">&lt;a href=&quot;#encode_to_iodata!/1&quot;&gt; &lt;code&gt;encode_to_iodata!/1&lt;/code&gt; &lt;/a&gt; 함수 iodata로 템플릿 렌더링 결과를 변환한다.</target>
        </trans-unit>
        <trans-unit id="9699f16f2bf7e747e122f9ca173cd7f42ddcffe3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request of format &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; and dispatches it to the show action in the &lt;code&gt;PageController&lt;/code&gt;.</source>
          <target state="translated">위의 &lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 매크로는 &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; 형식의 요청을 수락하고 이를 &lt;code&gt;PageController&lt;/code&gt; 의 show 액션으로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="1e6610e758202b62590baa5e46b378b4bf396178" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request to &lt;code&gt;/pages/hello&lt;/code&gt; and dispatches it to the &lt;code&gt;PageController&lt;/code&gt;'s &lt;code&gt;show&lt;/code&gt; action with &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">위의 &lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 매크로는 &lt;code&gt;/pages/hello&lt;/code&gt; 에 대한 요청을 수락하고 &lt;code&gt;params&lt;/code&gt; 에서 &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; 를 사용하여 &lt;code&gt;PageController&lt;/code&gt; 의 &lt;code&gt;show&lt;/code&gt; 액션으로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="b4d5b3e248d2fbc1eca751de4ab135e756ebf19b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;ecto#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;ecto#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt; 모듈은 또한 협회 작업을위한 편의 시설을 제공합니다. 예를 들어 &lt;a href=&quot;ecto#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt; 는 모든 관련 데이터가 포함 된 쿼리를 주어진 구조체에 반환합니다.</target>
        </trans-unit>
        <trans-unit id="58fb745a2e57967c454ef61e37a343c8af7ac169" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 의&lt;/a&gt; 구조는 불투명으로 간주되어야한다. &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; 를 사용 하여 유형과 패턴을 일치시킬 수 있지만 필드에 액세스하거나 직접 수정하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fa9514b9adddb69475024589cdb99afc99238dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is disabled by configuration but might be enabled later.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; 는&lt;/a&gt; 구성으로 비활성화되어 나중에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3ab5765089e37fe00cdc982a6c6127904496f5f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;phoenix.pubsub#content&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; API allows any of its functions to handle a response from the adapter matching &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt;. The PubSub client will recursively invoke all MFA responses until a result is returned. This is useful for offloading work to clients without blocking your PubSub adapter. See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; implementation for examples.</source>
          <target state="translated">&lt;a href=&quot;phoenix.pubsub#content&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; 의&lt;/a&gt; API의 모든 기능이 매칭 어댑터로부터의 응답을 처리 할 수 &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt; . PubSub 클라이언트는 결과가 리턴 될 때까지 모든 MFA 응답을 재귀 적으로 호출합니다. PubSub 어댑터를 차단하지 않고 클라이언트로 작업을 오프로드하는 데 유용합니다. 예제는 &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b0c9e11a76593a12fc7ec6f78afc56ab4d36aaf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;phoenix.pubsub#content&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; API allows any of its functions to handle a response from the adapter matching &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt;. The PubSub client will recursively invoke all MFA responses until a result is returned. This is useful for offloading work to clients without blocking your PubSub adapter. See &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; implementation for examples.</source>
          <target state="translated">&lt;a href=&quot;phoenix.pubsub#content&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; 의&lt;/a&gt; API의 모든 기능이 매칭 어댑터로부터의 응답을 처리 할 수 &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt; . PubSub 클라이언트는 결과가 리턴 될 때까지 모든 MFA 응답을 재귀 적으로 호출합니다. PubSub 어댑터를 차단하지 않고 클라이언트로 작업을 오프로드하는 데 유용합니다. 예제는 &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f32ca35c51fcd8b2c79b98aed4633cc99e6aea64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; module provides conveniences for building plug pipelines.</source>
          <target state="translated">&lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; 의&lt;/a&gt; 모듈은 플러그 파이프 라인을 구축하기위한 편의를 제공한다.</target>
        </trans-unit>
        <trans-unit id="d6e79dbadb31903b9f92905b4723d4810b1bea76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; event is sent by the transport when a channel exits, and represents the channel terminating against its will. The &lt;a href=&quot;#on_exit_message/3&quot;&gt;&lt;code&gt;on_exit_message/3&lt;/code&gt;&lt;/a&gt; function aids in constructing the &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; message.</source>
          <target state="translated">&lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; 이벤트는 경우 채널 이탈 전송에 의해 송신 및 의지에 대해 채널 종료를 나타내고있다. &lt;a href=&quot;#on_exit_message/3&quot;&gt; &lt;code&gt;on_exit_message/3&lt;/code&gt; &lt;/a&gt; 건설의 기능을 보조 &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; 메시지를.</target>
        </trans-unit>
        <trans-unit id="6e450e02e99e9729245c2971a0f234ed37f3b636" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%Phoenix.Socket.Message{}&lt;/code&gt; is the leave message for the transport to relay to the client.</source>
          <target state="translated">&lt;code&gt;%Phoenix.Socket.Message{}&lt;/code&gt; 전송이 클라이언트에 중계하기위한 휴가 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="bd539ef4a22e6b8ce30fc264d95352ee8a15cefe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*_nulls_first&lt;/code&gt; and &lt;code&gt;*_nulls_last&lt;/code&gt; variants are not supported by all databases. While all databases default to ascending order, the choice of &quot;nulls first&quot; or &quot;nulls last&quot; is specific to each database implementation.</source>
          <target state="translated">&lt;code&gt;*_nulls_first&lt;/code&gt; 와 &lt;code&gt;*_nulls_last&lt;/code&gt; 의 변형은 모든 데이터베이스에서 지원되지 않습니다. 모든 데이터베이스는 기본적으로 오름차순으로 설정되지만 &quot;널 먼저&quot;또는 &quot;마지막 널&quot;의 선택은 각 데이터베이스 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6d85a8224c78cbfc81cbb854cdafc632fe561a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*_nulls_first&lt;/code&gt; and &lt;code&gt;*_nulls_last&lt;/code&gt; variants are not supported by all databases. While all databases default to ascending order, the choice of &amp;ldquo;nulls first&amp;rdquo; or &amp;ldquo;nulls last&amp;rdquo; is specific to each database implementation.</source>
          <target state="translated">&lt;code&gt;*_nulls_first&lt;/code&gt; 와 &lt;code&gt;*_nulls_last&lt;/code&gt; 의 변형은 모든 데이터베이스에서 지원되지 않습니다. 모든 데이터베이스의 기본값은 오름차순이지만 &quot;nulls first&quot;또는 &quot;nulls last&quot;는 각 데이터베이스 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5adb9f7effcd9a92a5c3394cf706464a50f8e854" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-halt&lt;/code&gt; flag is automatically added.</source>
          <target state="translated">&lt;code&gt;--no-halt&lt;/code&gt; 플래그가 자동적으로 부가된다.</target>
        </trans-unit>
        <trans-unit id="6ea39d3cb35a084383c1603b0beb3c4727483b5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.eex&lt;/code&gt; extension maps to a template engine which tells Phoenix how to compile the code in the file into Elixir source code. After it is compiled, the template can be rendered as:</source>
          <target state="translated">&lt;code&gt;.eex&lt;/code&gt; 확장 비약 소스 코드에 파일의 코드를 컴파일하는 방법 피닉스 알려주는 템플릿 엔진에 매핑됩니다. 컴파일 된 후 템플릿은 다음과 같이 렌더링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d2cbe3b530a3545de3248339706a75f4da234de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:aspect&lt;/code&gt; key of the struct specifies what field is still unfetched.</source>
          <target state="translated">구조체 의 &lt;code&gt;:aspect&lt;/code&gt; 키는 아직 언 페치 된 필드를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ef67b3c2738d0f830da956da57f8a9d7ab9878ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:authenticate&lt;/code&gt; plug will be invoked before the action. If the plug calls &lt;a href=&quot;../plug/1.5.1/plug.conn#halt/1&quot;&gt;&lt;code&gt;Plug.Conn.halt/1&lt;/code&gt;&lt;/a&gt; (which is by default imported into controllers), it will halt the pipeline and won&amp;rsquo;t inoke the action.</source>
          <target state="translated">&lt;code&gt;:authenticate&lt;/code&gt; 플러그는 행동하기 전에 호출됩니다. 플러그가 &lt;a href=&quot;../plug/1.5.1/plug.conn#halt/1&quot;&gt; &lt;code&gt;Plug.Conn.halt/1&lt;/code&gt; &lt;/a&gt; (기본적으로 컨트롤러로 가져옴)을 호출 하면 파이프 라인이 중지되고 작업이 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2a2077bbe0dc1df2c551ae2d5305040e0b043053" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:authenticate&lt;/code&gt; plug will be invoked before the action. If the plug calls &lt;a href=&quot;../plug/plug.conn#halt/1&quot;&gt;&lt;code&gt;Plug.Conn.halt/1&lt;/code&gt;&lt;/a&gt; (which is by default imported into controllers), it will halt the pipeline and won't invoke the action.</source>
          <target state="translated">&lt;code&gt;:authenticate&lt;/code&gt; 플러그는 행동하기 전에 호출됩니다. 플러그가 &lt;a href=&quot;../plug/plug.conn#halt/1&quot;&gt; &lt;code&gt;Plug.Conn.halt/1&lt;/code&gt; &lt;/a&gt; (기본적으로 컨트롤러로 가져옴)을 호출하면 파이프 라인을 중지하고 작업을 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="731f4c8f6efafb89aa6c584007065c777c291143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:cd&lt;/code&gt; option can be used on a watcher to override the folder from which the watcher will run. By default this will be the project&amp;rsquo;s root: &lt;code&gt;File.cwd!()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:cd&lt;/code&gt; 옵션은 감시자가 실행되는 폴더를 대체 감시자 사용할 수 있습니다. 기본적으로 이것은 프로젝트의 루트입니다 : &lt;code&gt;File.cwd!()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ae21bdba03584c806666010e52a2cb28db8be56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:cd&lt;/code&gt; option can be used on a watcher to override the folder from which the watcher will run. By default this will be the project's root: &lt;code&gt;File.cwd!()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:cd&lt;/code&gt; 옵션은 감시자가 실행되는 폴더를 대체 감시자 사용할 수 있습니다. 기본적으로 이것은 프로젝트의 루트입니다. &lt;code&gt;File.cwd!()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7bc6b309b1a0d5dcb1c973131cf2999c439c9de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:cipher_suite&lt;/code&gt; option provides &lt;code&gt;:strong&lt;/code&gt; and &lt;code&gt;:compatible&lt;/code&gt; options for setting up better cipher and version defaults according to the OWASP recommendations. See the &amp;ldquo;Cipher Suites&amp;rdquo; section below</source>
          <target state="translated">&lt;code&gt;:cipher_suite&lt;/code&gt; 옵션을 제공합니다 &lt;code&gt;:strong&lt;/code&gt; 과 &lt;code&gt;:compatible&lt;/code&gt; OWASP의 권장 사항에 따라 더 나은 암호화 및 버전 기본값을 설정하는 옵션. 아래의 &quot;Cipher Suites&quot;섹션을 참조하십시오</target>
        </trans-unit>
        <trans-unit id="918f4e83de0e618dc7aa4875d78f6492629319c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:content_type&lt;/code&gt; and &lt;code&gt;:filename&lt;/code&gt; fields in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; struct are client-controlled. These values should be validated, via file content inspection or similar, before being trusted.</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; &lt;/a&gt; 구조체 의 &lt;code&gt;:content_type&lt;/code&gt; 및 &lt;code&gt;:filename&lt;/code&gt; 필드 는 클라이언트가 제어합니다. 이러한 값은 신뢰되기 전에 파일 내용 검사 등을 통해 유효성을 검사해야합니다.</target>
        </trans-unit>
        <trans-unit id="3fb2b2f7e9b4811efb97cc3c2e5e5c07ea928f93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:context&lt;/code&gt; field represents additional state some databases require for proper updates of data. It is not used by the built-in adapters of &lt;code&gt;Ecto.Adapters.Postgres&lt;/code&gt; and &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; 필드는 일부 데이터베이스는 데이터의 적절한 업데이트에 필요한 추가 상태를 나타냅니다. &lt;code&gt;Ecto.Adapters.Postgres&lt;/code&gt; 및 &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt; 의 기본 제공 어댑터에서는 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ea6213d9c5c2d60d6a2f351db0efbb41962d6d16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:context&lt;/code&gt; field represents additional state some databases require for proper updates of data. It is not used by the built-in adapters of &lt;code&gt;Ecto.Adapters.Postres&lt;/code&gt; and &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; 필드는 일부 데이터베이스는 데이터의 적절한 업데이트에 필요한 추가 상태를 나타냅니다. &lt;code&gt;Ecto.Adapters.Postres&lt;/code&gt; 및 &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt; 의 내장 어댑터에서는 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="16a1d1418e35d766234890bac5372c3fa8aab917" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:delete&lt;/code&gt; option in particular must be used carefully as it would allow users to delete any associated data by simply not sending any data for a given field. If you need deletion, it is often preferred to manually mark the changeset for deletion if a &lt;code&gt;delete&lt;/code&gt; field is set in the params, as in the example below:</source>
          <target state="translated">특히 &lt;code&gt;:delete&lt;/code&gt; 옵션은 사용자가 주어진 필드에 대한 데이터를 전송하지 않음으로써 관련 데이터를 삭제할 수 있도록주의 깊게 사용해야합니다. 삭제가 필요한 경우 아래 예와 같이 매개 변수에 &lt;code&gt;delete&lt;/code&gt; 필드가 설정되어 있으면 수동으로 변경 세트를 삭제하도록 표시하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="5acd2290f1eeb3bc214ec527b315e41481bcb38d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:delete&lt;/code&gt; option in particular must be used carefully as it would allow users to delete any associated data. If you need deletion, it is often preferred to add a separate boolean virtual field to the changeset function that will allow you to manually mark it for deletion, as in the example below:</source>
          <target state="translated">&lt;code&gt;:delete&lt;/code&gt; 는 사용자가 모든 관련 데이터를 삭제할 수 있도록하는 것처럼 특히 옵션은 신중하게 사용해야합니다. 삭제가 필요한 경우 아래 예와 같이 별도의 부울 가상 필드를 변경 세트 기능에 추가하여 삭제 표시를 수동으로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d742e4a33ea1296a531ccca07c5ea7b18db14083" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:host&lt;/code&gt; option requires a string or &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt;. Similar to &lt;code&gt;:port&lt;/code&gt;, when given a tuple like &lt;code&gt;{:system, &quot;HOST&quot;}&lt;/code&gt;, the host will be referenced from &lt;code&gt;System.get_env(&quot;HOST&quot;)&lt;/code&gt; at runtime.</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; 옵션은 문자열이나 필요 &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt; . &lt;code&gt;:port&lt;/code&gt; 와 유사하게 &lt;code&gt;{:system, &quot;HOST&quot;}&lt;/code&gt; 과 같은 튜플이 제공되면 런타임에 &lt;code&gt;System.get_env(&quot;HOST&quot;)&lt;/code&gt; 는 System.get_env ( &quot;HOST&quot;) 에서 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="dd99d05cad94c87bb280dd5d83fd4ec31d3e120f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:id&lt;/code&gt; type is used when the primary key is an integer while the &lt;code&gt;:binary_id&lt;/code&gt; is used for primary keys in particular binary formats, which may be &lt;a href=&quot;ecto.uuid&quot;&gt;&lt;code&gt;Ecto.UUID&lt;/code&gt;&lt;/a&gt; for databases like PostgreSQL and MySQL, or some specific ObjectID or RecordID often imposed by NoSQL databases.</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; 기본 키는 동안 정수 때 유형이 사용됩니다 &lt;code&gt;:binary_id&lt;/code&gt; 있을 수 있습니다 특정 바이너리 형식의 기본 키에 사용되는, &lt;a href=&quot;ecto.uuid&quot;&gt; &lt;code&gt;Ecto.UUID&lt;/code&gt; 을&lt;/a&gt; PostgreSQL의와 MySQL, 또는 종종 NoSQL에 의해 부과 된 일부 특정 OBJECTID 또는 recordID와 같은 데이터베이스에이 데이터베이스.</target>
        </trans-unit>
        <trans-unit id="8d0a17946500299e7ee12b6af3689a1c4c43f8f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:logo&lt;/code&gt; is preferred to be a base64-encoded data URI so not to make any external requests, though external URLs (eg, &lt;code&gt;https://...&lt;/code&gt;) are supported.</source>
          <target state="translated">&lt;code&gt;:logo&lt;/code&gt; , URI가 너무 외부 요청을하지 base64로 인코딩 된 데이터로하는 것이 바람직하다 외부 URL하지만 (예 : &lt;code&gt;https://...&lt;/code&gt; )이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c3992bb8a6efd8a4bd3e7e1767377cc30d96b760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:measurements&lt;/code&gt; map will include the following, all given in the &lt;code&gt;:native&lt;/code&gt; time unit:</source>
          <target state="translated">&lt;code&gt;:measurements&lt;/code&gt; 맵은 다음, 모든 주어진 포함됩니다 &lt;code&gt;:native&lt;/code&gt; 시간 단위 :</target>
        </trans-unit>
        <trans-unit id="25110dc298c23b6bcca6b66d8becb6c3ab0252e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:name&lt;/code&gt; is required as part of &lt;code&gt;options&lt;/code&gt;. The remaining options are described below.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; 의 일부로서 요구되는 &lt;code&gt;options&lt;/code&gt; . 나머지 옵션은 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a144d9bf2ce178155262a9bed21600765bd913d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:name&lt;/code&gt; parameter will also be available in the function body as &lt;code&gt;conn.params[&quot;name&quot;]&lt;/code&gt; and &lt;code&gt;conn.path_params[&quot;name&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; 파라미터는 또한 함수 본문에 사용할 수 &lt;code&gt;conn.params[&quot;name&quot;]&lt;/code&gt; 과 &lt;code&gt;conn.path_params[&quot;name&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c6a9f8fae8b3f03bb8da33b0dd63ade9e7c2388" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:namespace&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; options are used to calculate template lookup paths. For example, if you are in &lt;code&gt;MyApp.UserView&lt;/code&gt; and the namespace is &lt;code&gt;MyApp&lt;/code&gt;, templates are expected at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;. On the other hand, if the view is &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt;, the path will be &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; and so on. For explicit root path locations, the &lt;code&gt;:path&lt;/code&gt; option can be provided instead. The &lt;code&gt;:root&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; are joined to form the final lookup path. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path.</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; 와 &lt;code&gt;:path&lt;/code&gt; 옵션을 계산 템플릿 검색 경로에 사용됩니다. 예를 들어 &lt;code&gt;MyApp.UserView&lt;/code&gt; 에 있고 네임 스페이스가 &lt;code&gt;MyApp&lt;/code&gt; 인 경우 템플릿은 &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; 에 있어야 합니다. 반면에보기가 &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; 인 경우 경로는 &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; 등이됩니다. 명시적인 루트 경로 위치의 경우 &lt;code&gt;:path&lt;/code&gt; 옵션을 대신 제공 할 수 있습니다. &lt;code&gt;:root&lt;/code&gt; 및 &lt;code&gt;:path&lt;/code&gt; 최종 조회 경로를 형성하기 위해 결합됩니다. &lt;code&gt;:root&lt;/code&gt; 경로를 템플릿 조회 경로로 직접 사용하기 위해 빈 문자열을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65a1f032809b2a80ee05ed26deb3f2fce84671c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:namespace&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; options are used to calculate template lookup paths. For example, if you are in &lt;code&gt;MyApp.UserView&lt;/code&gt; and the namespace is &lt;code&gt;MyApp&lt;/code&gt;, templates are expected at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;. On the other hand, if the view is &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt;, the path will be &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; and so on. For explicit root path locations, the &lt;code&gt;:path&lt;/code&gt; option can instead be provided. The &lt;code&gt;:root&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; are joined to form the final lookup path. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path.</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; 와 &lt;code&gt;:path&lt;/code&gt; 옵션을 계산 템플릿 검색 경로에 사용됩니다. 예를 들어, &lt;code&gt;MyApp.UserView&lt;/code&gt; 에 있고 네임 스페이스가 &lt;code&gt;MyApp&lt;/code&gt; 이면 템플릿은 &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; 에 있어야 합니다. 반면,보기가 &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; 인 경우 경로는 &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; 등입니다. 명시적인 루트 경로 위치의 경우 &lt;code&gt;:path&lt;/code&gt; 옵션을 대신 제공 할 수 있습니다. &lt;code&gt;:root&lt;/code&gt; 및 &lt;code&gt;:path&lt;/code&gt; 최종 조회 경로를 형성하기 위해 결합됩니다. &lt;code&gt;:root&lt;/code&gt; 경로를 템플릿 조회 경로로 직접 사용하기 위해 빈 문자열이 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="895c2ddd40cf8e3567de42e9bf12420974e19653" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:on_replace&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; 의 옵션</target>
        </trans-unit>
        <trans-unit id="36d82b1b3e9c0c28b3952588185c19ae211245b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:port&lt;/code&gt; option requires either an integer or string. The &lt;code&gt;:host&lt;/code&gt; option requires a string. The &lt;code&gt;:scheme&lt;/code&gt; option accepts &lt;code&gt;&quot;http&quot;&lt;/code&gt; and &lt;code&gt;&quot;https&quot;&lt;/code&gt; values. Default value is inferred from top level &lt;code&gt;:http&lt;/code&gt; or &lt;code&gt;:https&lt;/code&gt; option. It is useful when hosting Phoenix behind a load balancer or reverse proxy and terminating SSL there. The &lt;code&gt;:path&lt;/code&gt; option can be used to override root path. Useful when hosting Phoenix behind a reverse proxy with URL rewrite rules</source>
          <target state="translated">&lt;code&gt;:port&lt;/code&gt; 옵션은 정수 나 문자열 중 하나가 필요합니다. &lt;code&gt;:host&lt;/code&gt; 옵션은 문자열이 필요합니다. &lt;code&gt;:scheme&lt;/code&gt; 옵션을 받아 &lt;code&gt;&quot;http&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;https&quot;&lt;/code&gt; 값을. 기본값은 최상위 수준 &lt;code&gt;:http&lt;/code&gt; 또는 &lt;code&gt;:https&lt;/code&gt; 옵션 에서 유추됩니다 . 로드 밸런서 또는 역방향 프록시 뒤에서 Phoenix를 호스팅하고 거기서 SSL을 종료 할 때 유용합니다. &lt;code&gt;:path&lt;/code&gt; 옵션은 루트 경로를 대체 할 수 있습니다. URL 재 작성 규칙을 사용하여 역방향 프록시 뒤에서 Phoenix를 호스팅 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6168b39090f584c85cff0cc128125156fba6b515" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:port&lt;/code&gt; option requires either an integer, string, or &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt;. When given a tuple like &lt;code&gt;{:system, &quot;PORT&quot;}&lt;/code&gt;, the port will be referenced from &lt;code&gt;System.get_env(&quot;PORT&quot;)&lt;/code&gt; at runtime as a workaround for releases where environment specific information is loaded only at compile-time.</source>
          <target state="translated">&lt;code&gt;:port&lt;/code&gt; 옵션은 정수, 문자열, 또는 중 하나가 필요합니다 &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt; . &lt;code&gt;{:system, &quot;PORT&quot;}&lt;/code&gt; 와 같은 튜플이 제공되면 환경 특정 정보가 컴파일 타임에만로드되는 릴리스에 대한 임시 해결책으로 런타임에 &lt;code&gt;System.get_env(&quot;PORT&quot;)&lt;/code&gt; 에서 포트가 참조 됩니다.</target>
        </trans-unit>
        <trans-unit id="92d07421660bd7c638d8258897864e4a9cf3e6ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:prefix&lt;/code&gt; option given to &lt;code&gt;from&lt;/code&gt;/&lt;code&gt;join&lt;/code&gt; has the highest precedence</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; 에 주어진 옵션 &lt;code&gt;from&lt;/code&gt; / &lt;code&gt;join&lt;/code&gt; 가장 높은 우선 순위를 가지고</target>
        </trans-unit>
        <trans-unit id="54e1957e79c6b007c7f23224e0a1670cbbc75677" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:pubsub_server&lt;/code&gt; must point to an existing pubsub server running in your application, which is included by default as &lt;code&gt;MyApp.PubSub&lt;/code&gt; for new applications.</source>
          <target state="translated">&lt;code&gt;:pubsub_server&lt;/code&gt; 은 기본적으로 포함되어있는 응용 프로그램에서 실행 기존 pubsub 서버를 가리켜 야합니다 &lt;code&gt;MyApp.PubSub&lt;/code&gt; 새로운 애플리케이션.</target>
        </trans-unit>
        <trans-unit id="5cda43ef4ff3376cfc2c7af75979f3ba0d7ed620" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:reloadable_apps&lt;/code&gt; defaults to &lt;code&gt;nil&lt;/code&gt;. In such case default behaviour is to reload current project if it consists of single app, or all applications within umbrella project. You can set &lt;code&gt;:reloadable_apps&lt;/code&gt; to subset of default applications to reload only some of them, empty list - to effectively disable code reloader, or include external applications from library dependencies.</source>
          <target state="translated">는 &lt;code&gt;:reloadable_apps&lt;/code&gt; 에 기본값을 &lt;code&gt;nil&lt;/code&gt; . 이 경우 기본 동작은 단일 앱으로 구성된 경우 현재 프로젝트를 다시로드하거나 우산 프로젝트 내의 모든 애플리케이션을 다시로드하는 것입니다. 당신은 설정할 수 있습니다 &lt;code&gt;:reloadable_apps&lt;/code&gt; 단지 그들 중 일부 빈 목록을 다시로드 기본 응용 프로그램의 서브 세트 - 효과적으로 해제 코드 장전에, 또는 라이브러리 의존성에서 외부 응용 프로그램을 포함한다.</target>
        </trans-unit>
        <trans-unit id="ed05e3737398b3c2beccb1cfaf10e740d96858b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:root&lt;/code&gt; option is required while the &lt;code&gt;:namespace&lt;/code&gt; defaults to the first nesting in the module name. For instance, both &lt;code&gt;MyApp.UserView&lt;/code&gt; and &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; have namespace &lt;code&gt;MyApp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:root&lt;/code&gt; 옵션은 동안 필요한 &lt;code&gt;:namespace&lt;/code&gt; 모듈 이름의 첫 번째 중첩에 기본값을. 예를 들어 &lt;code&gt;MyApp.UserView&lt;/code&gt; 및 &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; 모두 네임 스페이스 &lt;code&gt;MyApp&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1a3296e1c3da0ddff618bfd191c05b175ff0cb1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:schema&lt;/code&gt; field refers the module name for the schema this metadata belongs to.</source>
          <target state="translated">&lt;code&gt;:schema&lt;/code&gt; 필드는이 메타 데이터에 속하는 스키마 모듈 이름을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e2763632c3bc8d8b6f69e916c553e100096271d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:selected&lt;/code&gt; option will mark the given IDs as selected unless the form is being resubmitted. When resubmitted, it uses the form params as values.</source>
          <target state="translated">&lt;code&gt;:selected&lt;/code&gt; 양식이 제출되지 않는 한 옵션이 선택은 주어진 ID를 표시합니다. 다시 제출하면 양식 params를 값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0cea6902bf81cf806e2e2ff5a1334ab75f6b0054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:source&lt;/code&gt; tracks the (table or collection) where the struct is or should be persisted to.</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; 구조체가 이상으로 유지되어야한다 (표 또는 수집)을 추적한다.</target>
        </trans-unit>
        <trans-unit id="81e4f3969fca2a0c0bce3d4dfbb896188d5e6e36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:where&lt;/code&gt; option expects a keyword list where the key is an atom representing the field and the value is either:</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; 옵션은 키 필드와 값을 나타내는 원자 키워드 목록을 기대 중 하나입니다 :</target>
        </trans-unit>
        <trans-unit id="3d6613c6ae5cafc810769cb60c6e62f072ba58bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:where&lt;/code&gt; option may receive a dynamic query, a keyword list or a MFA (a tuple with a module, function and args to invoke). The MFA is especially useful to avoid duplication in those definitions:</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; 옵션은 동적 쿼리, 키워드 목록 또는 MFA (호출 모듈, 기능 및 인수와 튜플)를받을 수 있습니다. MFA는 이러한 정의에서 중복을 피하는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cdf5ea7cc064d3fd02c24e10f92c4d06b0296467" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@endpoint&lt;/code&gt; module attribute contains the endpoint under testing, most commonly your application endpoint itself. If you are using the MyApp.ConnCase generated by Phoenix, it is automatically set for you.</source>
          <target state="translated">&lt;code&gt;@endpoint&lt;/code&gt; 모듈 속성 테스트에서 엔드 포인트를 포함, 가장 일반적으로 응용 프로그램 자체 엔드 포인트. Phoenix에서 생성 한 MyApp.ConnCase를 사용하는 경우 자동으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="fbb7111fae5bbf19a11fce2dbdf8ba880cacae4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@primary_key&lt;/code&gt; attribute will tell ecto which type to use for the id.</source>
          <target state="translated">&lt;code&gt;@primary_key&lt;/code&gt; 의 ID를 사용하는 유형 속성은 체외을 알려드립니다.</target>
        </trans-unit>
        <trans-unit id="8e515ce695757264b1c2dae6b68e6bbfbc7f198c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;POST&lt;/code&gt; method can be overridden only by these HTTP methods:</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 의 메소드는이 HTTP 방법으로 대체 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="65f0d0f4bd596df0232f105e5e46a46047747cd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SignUp&lt;/code&gt; schema can be cast and validated with the help of the &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt; module, and afterwards, you can copy its data to the &lt;code&gt;Profile&lt;/code&gt; and &lt;code&gt;Account&lt;/code&gt; structs that will be persisted to the database with the help of &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SignUp&lt;/code&gt; 스키마의 도움으로 출연진과 유효성을 검사 할 수 &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; 의&lt;/a&gt; 모듈 및 그 후, 당신은 그것의 데이터를 복사 할 수 있습니다 &lt;code&gt;Profile&lt;/code&gt; 및 &lt;code&gt;Account&lt;/code&gt; 의 도움으로 데이터베이스에 지속됩니다 구조체 &lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0027e32d65973e3996206f15f8d2bc1ec48ab7bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tracker&lt;/code&gt; API is used as a facade for a pool of &lt;a href=&quot;phoenix.tracker.shard&quot;&gt;&lt;code&gt;Phoenix.Tracker.Shard&lt;/code&gt;&lt;/a&gt;s. The responsibility of which calls go to which &lt;code&gt;Shard&lt;/code&gt; is determined based on the topic, on which a given function is called.</source>
          <target state="translated">&lt;code&gt;Tracker&lt;/code&gt; API는 풀의 외관으로 사용됩니다 &lt;a href=&quot;phoenix.tracker.shard&quot;&gt; &lt;code&gt;Phoenix.Tracker.Shard&lt;/code&gt; &lt;/a&gt; 의. 어떤 호출이 어떤 &lt;code&gt;Shard&lt;/code&gt; 로 전달되는지에 대한 책임은 주어진 기능이 호출되는 주제에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="9380732d83d99aa3ef7e1ee94986487b7d7501fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;adapter_meta&lt;/code&gt; field is a map containing some of the fields found in the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">&lt;code&gt;adapter_meta&lt;/code&gt; 의 필드에있는 일부 필드가 포함 된지도입니다 &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; 의&lt;/a&gt; 구조체.</target>
        </trans-unit>
        <trans-unit id="1f72cda2deb8565937044253265942493bf6aa90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongs_to&lt;/code&gt; association on &lt;code&gt;MyApp.Comment&lt;/code&gt; will also define a &lt;code&gt;:post_id&lt;/code&gt; field with &lt;code&gt;:binary_id&lt;/code&gt; type that references the &lt;code&gt;:id&lt;/code&gt; field of the &lt;code&gt;MyApp.Post&lt;/code&gt; schema.</source>
          <target state="translated">&lt;code&gt;MyApp.Comment&lt;/code&gt; 의 &lt;code&gt;belongs_to&lt;/code&gt; 연관 은 &lt;code&gt;MyApp.Post&lt;/code&gt; 스키마 의 &lt;code&gt;:id&lt;/code&gt; 필드 를 참조하는 : &lt;code&gt;:binary_id&lt;/code&gt; 유형 의 &lt;code&gt;:post_id&lt;/code&gt; 필드 도 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="778cb135fc988ae8195d411110c29d421206d37f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;call/2&lt;/code&gt; function that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; provides is used internally to execute all the plugs listed using the &lt;code&gt;plug&lt;/code&gt; macro, so overriding the &lt;code&gt;call/2&lt;/code&gt; function generally implies using &lt;code&gt;super&lt;/code&gt; in order to still call the plug chain:</source>
          <target state="translated">&lt;code&gt;call/2&lt;/code&gt; 이 함수 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; 은&lt;/a&gt; 은 USING 나열된 모든 플러그 실행 내부적으로 사용 제공 &lt;code&gt;plug&lt;/code&gt; 때문에 무시 매크로 &lt;code&gt;call/2&lt;/code&gt; 사용 함축 일반적 기능 &lt;code&gt;super&lt;/code&gt; 여전히 플러그 체인을 호출하기 위해 :</target>
        </trans-unit>
        <trans-unit id="6752d9d305fe4dabd6e9f7e8abc5275de174456b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;call/2&lt;/code&gt; function that &lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; provides is used internally to execute all the plugs listed using the &lt;code&gt;plug&lt;/code&gt; macro, so overriding the &lt;code&gt;call/2&lt;/code&gt; function generally implies using &lt;code&gt;super&lt;/code&gt; in order to still call the plug chain:</source>
          <target state="translated">&lt;code&gt;call/2&lt;/code&gt; 이 함수 &lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; 은&lt;/a&gt; 은 USING 나열된 모든 플러그 실행 내부적으로 사용 제공 &lt;code&gt;plug&lt;/code&gt; 때문에 무시 매크로 &lt;code&gt;call/2&lt;/code&gt; 사용 함축 일반적 기능 &lt;code&gt;super&lt;/code&gt; 여전히 플러그 체인을 호출하기 위해 :</target>
        </trans-unit>
        <trans-unit id="59369e81ae4c82531a9066b2b16f4703c7464cfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;changeset/2&lt;/code&gt; function first invokes &lt;a href=&quot;ecto.changeset#cast/4&quot;&gt;&lt;code&gt;Ecto.Changeset.cast/4&lt;/code&gt;&lt;/a&gt; with the struct, the parameters and a list of allowed fields; this returns a changeset. The parameters is a map with binary keys and values that will be cast based on the type defined on the schema.</source>
          <target state="translated">&lt;code&gt;changeset/2&lt;/code&gt; 기능 제 원용 &lt;a href=&quot;ecto.changeset#cast/4&quot;&gt; &lt;code&gt;Ecto.Changeset.cast/4&lt;/code&gt; &lt;/a&gt; 구조체의 파라미터 수 필드의 목록; 변경 세트를 돌려줍니다. 매개 변수는 스키마에 정의 된 유형을 기반으로 캐스트 될 2 진 키 및 값이있는 맵입니다.</target>
        </trans-unit>
        <trans-unit id="fcd29f0f3ca38c03e6a05f563bf7684e923be86d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; macro accepts topic patterns in two flavors. A splat (the &lt;code&gt;*&lt;/code&gt; character) argument can be provided as the last character to indicate a &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; match. If a plain string is provided, only that topic will match the channel handler. Most use-cases will use the &lt;code&gt;&quot;topic:*&quot;&lt;/code&gt; pattern to allow more versatile topic scoping.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 매크로는 두 가지 종류의 주제 패턴을 받아들입니다. splat ( &lt;code&gt;*&lt;/code&gt; 문자) 인수는 &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 일치 를 나타내는 마지막 문자로 제공 될 수 있습니다 . 일반 문자열이 제공되면 해당 주제 만 채널 핸들러와 일치합니다. 대부분의 사용 사례는 &lt;code&gt;&quot;topic:*&quot;&lt;/code&gt; 패턴을 사용하여보다 다양한 주제 범위를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2294206fb3a150cd9c224614317f9aee05e6f3e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; macro accepts topic patterns in two flavors. A splat argument can be provided as the last character to indicate a &amp;ldquo;topic:subtopic&amp;rdquo; match. If a plain string is provided, only that topic will match the channel handler. Most use-cases will use the &amp;ldquo;topic:*&amp;rdquo; pattern to allow more versatile topic scoping.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 매크로는 두 가지 종류의 주제 패턴을 받아들입니다. &quot;topic : subtopic&quot;일치를 나타내는 마지막 문자로 splat 인수를 제공 할 수 있습니다. 일반 문자열이 제공되면 해당 주제 만 채널 핸들러와 일치합니다. 대부분의 유스 케이스는 &quot;topic : *&quot;패턴을 사용하여보다 다양한 주제 범위를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0566567c74373795b6261b3892abb0503ed0e625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dynamic&lt;/code&gt; macro can be interpolated at the root of a &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;'s &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; 매크로는 루트에 보간 될 수있는 , &lt;code&gt;having&lt;/code&gt; 하거나는 &lt;code&gt;join&lt;/code&gt; 의 &lt;code&gt;on&lt;/code&gt; . &lt;code&gt;where&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfbf0996b2b7c1661988ea246da6fcdfd58f43b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encode!/1&lt;/code&gt; function must return a tuple in the format &lt;code&gt;{:socket_push, :text | :binary, String.t | binary}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;encode!/1&lt;/code&gt; 기능은 형식으로 튜플을 반환해야 &lt;code&gt;{:socket_push, :text | :binary, String.t | binary}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="055209e601ab76424461a3d24cfbe4383896ba1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fetch/2&lt;/code&gt; function above fetches all users from the database who have registered presences for the given topic. The presences information is then extended with a &lt;code&gt;:user&lt;/code&gt; key of the user's information, while maintaining the required &lt;code&gt;:metas&lt;/code&gt; field from the original presence data.</source>
          <target state="translated">위의 &lt;code&gt;fetch/2&lt;/code&gt; 기능은 주어진 주제에 대한 존재를 등록한 데이터베이스에서 모든 사용자를 가져옵니다. 그런 다음 프레즌스 정보는 원래 프레즌스 데이터에서 필수 &lt;code&gt;:metas&lt;/code&gt; 필드 를 유지하면서 사용자 정보의 &lt;code&gt;:user&lt;/code&gt; 키로 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a64f3256798e6a70350cf3a635b234e379dcbdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form&lt;/code&gt; should either be a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">&lt;code&gt;form&lt;/code&gt; 중 하나이어야 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 방출 &lt;code&gt;form_for&lt;/code&gt; 또는 원자이다.</target>
        </trans-unit>
        <trans-unit id="503560113ad63b1bbf6a1ce7a1a79895b311563a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form&lt;/code&gt; should either be a &lt;a href=&quot;phoenix.html.form#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">&lt;code&gt;form&lt;/code&gt; 중 하나이어야 &lt;a href=&quot;phoenix.html.form#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 방출 &lt;code&gt;form_for&lt;/code&gt; 또는 원자이다.</target>
        </trans-unit>
        <trans-unit id="0f4280e53fd7de2d333eac4e3efda660422aeb8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; contains an &lt;code&gt;opcode&lt;/code&gt; key, this will be either &lt;code&gt;:ping&lt;/code&gt; or &lt;code&gt;:pong&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 포함 &lt;code&gt;opcode&lt;/code&gt; 키를,이 중 하나가 될 것입니다 &lt;code&gt;:ping&lt;/code&gt; 나 &lt;code&gt;:pong&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a30635ea371ab0a08e396d17ab555117f5134b4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; is the list of query parameters. For example, for a query such as &lt;code&gt;from Post, where: [id: ^123]&lt;/code&gt;, &lt;code&gt;params&lt;/code&gt; will be &lt;code&gt;[123]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 쿼리 매개 변수의 목록입니다. 예를 들어 &lt;code&gt;from Post, where: [id: ^123]&lt;/code&gt; 와 같은 쿼리의 경우 [id : ^ 123] , &lt;code&gt;params&lt;/code&gt; 는 &lt;code&gt;[123]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cc799acb99c7c5e0571705aabef686e2a9bc106f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params_or_body&lt;/code&gt; field must be one of:</source>
          <target state="translated">&lt;code&gt;params_or_body&lt;/code&gt; 의 필드 중 하나 여야합니다 :</target>
        </trans-unit>
        <trans-unit id="ba32a6b84a77473cde79076160c7d25a5500e027" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; can be either a string or the &lt;code&gt;path_info&lt;/code&gt; segments.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 문자열이나 될 수 있습니다 &lt;code&gt;path_info&lt;/code&gt; 세그먼트를.</target>
        </trans-unit>
        <trans-unit id="6557be94c3b172806d0d806c90f7d5a409872519" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; is commonly the request path with optional query string but it may also be a complete URI. When a URI is given, the host and schema will be used as part of the request too.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 일반적으로 선택 쿼리 문자열을 요청 경로뿐만 아니라 완전한 URI 될 수있다. URI가 주어지면 호스트와 스키마도 요청의 일부로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7722c1018aa1c3f5818dfe70fb8f2d0e854f196c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query_cache&lt;/code&gt; and its state is documented in &lt;a href=&quot;#t:query_cache/0&quot;&gt;&lt;code&gt;query_cache/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;query_cache&lt;/code&gt; 그 상태에서 설명 &lt;a href=&quot;#t:query_cache/0&quot;&gt; &lt;code&gt;query_cache/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfd929735613a63a87936d342dcfc378113b7e06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query_meta&lt;/code&gt; field is a map containing some of the fields found in the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; struct, after they have been normalized. For example, the values &lt;code&gt;selected&lt;/code&gt; by the query, which then have to be returned, can be found in &lt;code&gt;query_meta&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;query_meta&lt;/code&gt; 의 필드에있는 일부 필드가 포함 된지도입니다 &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; 의&lt;/a&gt; 가 정상화 된 후, 구조체. 예를 들어 쿼리에서 &lt;code&gt;selected&lt;/code&gt; 값 은 반환되어야하며 &lt;code&gt;query_meta&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4f45984330c354b062f13b6711532673248bd5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reply&lt;/code&gt; is a tuple contain an &lt;code&gt;opcode&lt;/code&gt; atom and a message that can be any term. The built-in websocket transport supports both &lt;code&gt;:text&lt;/code&gt; and &lt;code&gt;:binary&lt;/code&gt; opcode and the message must be always iodata. Long polling only supports text opcode.</source>
          <target state="translated">&lt;code&gt;reply&lt;/code&gt; 투플이 포함 인 &lt;code&gt;opcode&lt;/code&gt; 원자 및 임의의 기간 일 수있는 메시지. 내장 웹 소켓 전송은 &lt;code&gt;:text&lt;/code&gt; 및 &lt;code&gt;:binary&lt;/code&gt; opcode를 모두 지원 하며 메시지는 항상 iodata 여야합니다. 긴 폴링은 텍스트 opcode 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7162959016edba78d69180b52bd5f5a794f9abb9" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Compatible&lt;/strong&gt; cipher suite supports tlsv1, tlsv1.1 and tlsv1.2. Ciphers were based on the OWASP Group B and includes support for RSA or ECDSA certificates. The intention of this configuration is to provide as secure as possible defaults that still maintain support for older browsers and Android versions 4.3 and earlier</source>
          <target state="translated">&lt;strong&gt;지원되는&lt;/strong&gt; 암호 스위트 지원은 tlsv1.1 및 tlsv1.2을 TLSV1. 암호는 OWASP 그룹 B를 기반으로하며 RSA 또는 ECDSA 인증서에 대한 지원을 포함합니다. 이 구성의 목적은 이전 브라우저와 Android 버전 4.3 이하를 계속 지원하는 가능한 기본값을 최대한 안전하게 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="99eef0b8032d9eb66bdd6211a81ce1aa7ab072a6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Strong&lt;/strong&gt; cipher suite only supports tlsv1.2. Ciphers were based on the OWASP Group A+ and includes support for RSA or ECDSA certificates. The intention of this configuration is to provide as secure as possible defaults knowing that it will not be fully compatible with older browsers and operating systems.</source>
          <target state="translated">&lt;strong&gt;강력한&lt;/strong&gt; 암호화 제품군에만 tlsv1.2을 지원합니다. 암호는 OWASP Group A +를 기반으로하며 RSA 또는 ECDSA 인증서를 지원합니다. 이 구성의 목적은 이전 브라우저 및 운영 체제와 완전히 호환되지 않을 것임을 알고 가능한 한 안전한 기본값을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1229266af5aeb7323a3edd251846a9e31826c75c" translate="yes" xml:space="preserve">
          <source>The API expected by a module plug is defined as a behaviour by the &lt;a href=&quot;plug#content&quot;&gt;&lt;code&gt;Plug&lt;/code&gt;&lt;/a&gt; module (this module).</source>
          <target state="translated">모듈 플러그가 예상하는 API는 &lt;a href=&quot;plug#content&quot;&gt; &lt;code&gt;Plug&lt;/code&gt; &lt;/a&gt; 모듈 (이 모듈) 의 동작으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="42a37edfcc20d368aed11372ea5e77be1563e669" translate="yes" xml:space="preserve">
          <source>The Cowboy adapter for Phoenix.</source>
          <target state="translated">Phoenix 용 카우보이 어댑터.</target>
        </trans-unit>
        <trans-unit id="b46e58ab01f0b48b2315edfcf8b2bd6c7e2b3937" translate="yes" xml:space="preserve">
          <source>The Ecto implementation of these operators provide only a thin layer above the adapters. So if your adapter allows you to use them in a certain way (like adding a date and an interval in PostgreSQL), it should work just fine in Ecto queries.</source>
          <target state="translated">이러한 연산자의 Ecto 구현은 어댑터 위에 얇은 계층 만 제공합니다. 따라서 어댑터에서 PostgreSQL에 날짜와 간격을 추가하는 것과 같이 특정 방식으로 어댑터를 사용할 수 있으면 Ecto 쿼리에서 제대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5fc206f389e6b83e4a0d3d847f1852857f161e08" translate="yes" xml:space="preserve">
          <source>The Ecto type</source>
          <target state="translated">엑토 타입</target>
        </trans-unit>
        <trans-unit id="dfd71c1d2df0567450285bf90b77cd7746d88f5d" translate="yes" xml:space="preserve">
          <source>The Ecto type.</source>
          <target state="translated">엑토 타입.</target>
        </trans-unit>
        <trans-unit id="8af11c43a109763d817fe84ffba10efa53664805" translate="yes" xml:space="preserve">
          <source>The Ecto.Changeset struct</source>
          <target state="translated">Ecto.Changeset 구조체</target>
        </trans-unit>
        <trans-unit id="2df24cb6684bccd3bc7f1741ada3cd48d84d2739" translate="yes" xml:space="preserve">
          <source>The Elixir compiler would infer that the router depends directly on &lt;code&gt;MyApp.PageController&lt;/code&gt;, which is not true. By using scopes, Phoenix can properly hint to the Elixir compiler the controller is not an actual dependency of the router. This provides more efficient compilation times.</source>
          <target state="translated">Elixir 컴파일러는 라우터가 &lt;code&gt;MyApp.PageController&lt;/code&gt; 에 직접 의존한다고 추론하지만 이는 사실이 아닙니다. 범위를 사용하여 Phoenix는 Elixir 컴파일러에게 컨트롤러가 라우터의 실제 종속성이 아니라고 암시 할 수 있습니다. 보다 효율적인 컴파일 시간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="91a790f106411de498ef0d34631c0e826c9311e7" translate="yes" xml:space="preserve">
          <source>The Elixir compiler would infer that the router depends directly on &lt;code&gt;MyAppWeb.PageController&lt;/code&gt;, which is not true. By using scopes, Phoenix can properly hint to the Elixir compiler the controller is not an actual dependency of the router. This provides more efficient compilation times.</source>
          <target state="translated">Elixir 컴파일러는 라우터가 &lt;code&gt;MyAppWeb.PageController&lt;/code&gt; 에 직접 의존한다고 추론 하는데 , 이는 사실이 아닙니다. 범위를 사용함으로써 Phoenix는 Elixir 컴파일러에 컨트롤러가 라우터의 실제 종속성이 아니라는 것을 적절하게 힌트 할 수 있습니다. 이것은보다 효율적인 컴파일 시간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5341cef174c7e030180c57e14cc0a67dcaa4ae50" translate="yes" xml:space="preserve">
          <source>The MFA is invoked with the request &lt;code&gt;%URI{}&lt;/code&gt; as the first argument, followed by arguments in the MFA list.</source>
          <target state="translated">MFA는 요청 &lt;code&gt;%URI{}&lt;/code&gt; 를 첫 번째 인수로 사용하여 호출되고 그 뒤에 MFA 목록의 인수가 이어집니다.</target>
        </trans-unit>
        <trans-unit id="3f1e3a1bf73da067cc61947c8f82ff5aabd55c0a" translate="yes" xml:space="preserve">
          <source>The Phoenix engine that handles the &lt;code&gt;.eex&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;.eex&lt;/code&gt; 확장자 를 처리하는 Phoenix 엔진 .</target>
        </trans-unit>
        <trans-unit id="97f5600c69f57f57eb8f0eebfbf4c79da16ad178" translate="yes" xml:space="preserve">
          <source>The Phoenix engine that handles the &lt;code&gt;.exs&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;.exs&lt;/code&gt; 확장명 을 처리하는 Phoenix 엔진 .</target>
        </trans-unit>
        <trans-unit id="7c893ff0c14a28253d63b6b6ebed042b7d8d1529" translate="yes" xml:space="preserve">
          <source>The Plug connection.</source>
          <target state="translated">플러그 연결.</target>
        </trans-unit>
        <trans-unit id="922dcb442d54e2eb649f3edaeaaef6847fb03b26" translate="yes" xml:space="preserve">
          <source>The Plug pipeline</source>
          <target state="translated">플러그 파이프 라인</target>
        </trans-unit>
        <trans-unit id="44b0c7e1640a8c7aaaeec212113c4828dc9f200b" translate="yes" xml:space="preserve">
          <source>The URL generated in the named URL helpers is based on the configuration for &lt;code&gt;:url&lt;/code&gt;, &lt;code&gt;:http&lt;/code&gt; and &lt;code&gt;:https&lt;/code&gt;. However, if for some reason you need to manually control the URL generation, the url helpers also allow you to pass in a &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; struct:</source>
          <target state="translated">명명 된 URL 헬퍼에서 생성 된 URL은 &lt;code&gt;:url&lt;/code&gt; , &lt;code&gt;:http&lt;/code&gt; 및 &lt;code&gt;:https&lt;/code&gt; 구성을 기반으로합니다 . 그러나 어떤 이유로 URL 생성을 수동으로 제어해야하는 경우 URL 헬퍼를 사용하여 &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 구조체 를 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="439164b882483574280fd7b6ddd89690e34cb2f9" translate="yes" xml:space="preserve">
          <source>The above example matches all the posts which are tied for being the most visited.</source>
          <target state="translated">위의 예는 가장 많이 방문한 것으로 연결된 모든 게시물과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="90e2cd8ec0b373e2a840d10a660fde9ed74b82f4" translate="yes" xml:space="preserve">
          <source>The above is specially useful to dynamically join on existing queries, for example, to dynamically choose a source, or by choosing between public posts or posts that have been recently published:</source>
          <target state="translated">위의 내용은 동적으로 소스를 선택하거나 최근에 게시 된 공개 게시물 또는 게시물 중에서 선택하여 기존 쿼리에 동적으로 참여하는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="04796d750e2caa373bfdeb6b87607dcbc4363014" translate="yes" xml:space="preserve">
          <source>The action may be any atom.</source>
          <target state="translated">동작은 어떤 원자라도 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88e8e7c6d83aa7057d13eecb45b68bd52baf600f" translate="yes" xml:space="preserve">
          <source>The action may be one of &lt;code&gt;:insert&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, &lt;code&gt;:delete&lt;/code&gt;, &lt;code&gt;:replace&lt;/code&gt;.</source>
          <target state="translated">조치는 &lt;code&gt;:insert&lt;/code&gt; , &lt;code&gt;:update&lt;/code&gt; , &lt;code&gt;:delete&lt;/code&gt; , &lt;code&gt;:replace&lt;/code&gt; 중 하나 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="568c1593cd6ebf7435ec1fe16f10bd8ce0b59776" translate="yes" xml:space="preserve">
          <source>The advantage of configuring the schema via those attributes is that they can be set with a macro to configure application wide defaults.</source>
          <target state="translated">이러한 속성을 통해 스키마를 구성하면 응용 프로그램 전체 기본값을 구성하기 위해 매크로를 사용하여 스키마를 설정할 수 있다는 장점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="12424a03c3ce8ae50505e2f4d39be7ede0456bb6" translate="yes" xml:space="preserve">
          <source>The aggregation will fail if any &lt;code&gt;group_by&lt;/code&gt; field is set.</source>
          <target state="translated">&lt;code&gt;group_by&lt;/code&gt; 필드가 설정 되면 집계가 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="fd3788421c7ea60194ff0b67a68304eebb16c4a2" translate="yes" xml:space="preserve">
          <source>The allowed values are:</source>
          <target state="translated">허용되는 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84bd30260d2ce05fc55d7e66349743b933c0b4f2" translate="yes" xml:space="preserve">
          <source>The argument given to &lt;code&gt;:select_merge&lt;/code&gt; must always be a map. The value being merged on must be a struct or a map. If it is a struct, the fields merged later on must be part of the struct, otherwise an error is raised.</source>
          <target state="translated">&lt;code&gt;:select_merge&lt;/code&gt; 에 제공된 인수 는 항상 맵이어야합니다. 병합되는 값은 구조체 또는 맵이어야합니다. 구조체 인 경우 나중에 병합 된 필드는 구조체의 일부 여야합니다. 그렇지 않으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="21c3223c139377b3829c552e343068576edd50ef" translate="yes" xml:space="preserve">
          <source>The argument, which defaults to &lt;code&gt;Presence&lt;/code&gt;, defines the module name of the Presence tracker.</source>
          <target state="translated">&lt;code&gt;Presence&lt;/code&gt; 로 기본 설정되는 인수 는 Presence 추적기의 모듈 이름을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="629bfd4051da2fa1a32d9993713c3423b906b41a" translate="yes" xml:space="preserve">
          <source>The arguments are:</source>
          <target state="translated">인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a43c3065c3f85e925ab838ea91589ca677d687c" translate="yes" xml:space="preserve">
          <source>The associated data may be given in different formats:</source>
          <target state="translated">관련 데이터는 다른 형식으로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8af98cf8faab35d0cae464cb5a1cd4f56217e0ba" translate="yes" xml:space="preserve">
          <source>The association happens through a join schema or source, containing foreign keys to the associated schemas. For example, the association below:</source>
          <target state="translated">연관은 연관된 스키마에 대한 외부 키를 포함하는 결합 스키마 또는 소스를 통해 발생합니다. 예를 들어 아래 연결은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="888fd6b9696e2737394550f497e91b80c4256ba5" translate="yes" xml:space="preserve">
          <source>The association struct for &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;has_many&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;has_one&lt;/code&gt; 및 &lt;code&gt;has_many&lt;/code&gt; 연관에 대한 연관 구조 .</target>
        </trans-unit>
        <trans-unit id="c3f2a2472baf2138a4d294eca1e823e09180b2a8" translate="yes" xml:space="preserve">
          <source>The association struct for &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;has_many&lt;/code&gt; through associations.</source>
          <target state="translated">연관을 통한 &lt;code&gt;has_one&lt;/code&gt; 및 &lt;code&gt;has_many&lt;/code&gt; 에 대한 연관 구조 .</target>
        </trans-unit>
        <trans-unit id="581a7057c4a1b009249b52b9b19b5e74771aaf2a" translate="yes" xml:space="preserve">
          <source>The association struct for &lt;code&gt;many_to_many&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;many_to_many&lt;/code&gt; 연관에 대한 연관 구조 .</target>
        </trans-unit>
        <trans-unit id="66e6c87098b4230d834f2d5a056760f88cae1720" translate="yes" xml:space="preserve">
          <source>The association struct for a &lt;code&gt;belongs_to&lt;/code&gt; association.</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 연관을 위한 연관 구조체 .</target>
        </trans-unit>
        <trans-unit id="5205f046f1668f8df50e1a7dbf5d13e856ecfbab" translate="yes" xml:space="preserve">
          <source>The atoms that can be used in place of the status code in many functions are inflected from the reason phrase of the status code. With the above configuration, the following will all work:</source>
          <target state="translated">많은 기능에서 상태 코드 대신 사용할 수있는 원자는 상태 코드의 이유 문구에서 반영됩니다. 위의 구성으로 다음이 모두 작동합니다.</target>
        </trans-unit>
        <trans-unit id="480698b107c5364224299e11120625edd4811333" translate="yes" xml:space="preserve">
          <source>The behaviour above is by design to keep the changes between &lt;code&gt;where&lt;/code&gt; and &lt;code&gt;or_where&lt;/code&gt; minimal. Plus, if you have a keyword list and you would like each pair to be combined using &lt;code&gt;or&lt;/code&gt;, it can be easily done with &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#reduce/3&quot;&gt;&lt;code&gt;Enum.reduce/3&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">위의 동작은 의도적으로 &lt;code&gt;where&lt;/code&gt; 와 &lt;code&gt;or_where&lt;/code&gt; 사이의 변경을 최소화하기위한 것입니다. 게다가, 당신은 키워드 목록이 있고 사용하여 결합 될 각 쌍을 좋아하면 것인지 &lt;code&gt;or&lt;/code&gt; 그것을 쉽게 수행 할 수 있습니다, &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#reduce/3&quot;&gt; &lt;code&gt;Enum.reduce/3&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3bc279bd4a05a0f1e2ea5d2a5959b414a345411f" translate="yes" xml:space="preserve">
          <source>The benefit of having explicit changesets is that we can easily provide different changesets for different use cases. For example, one could easily provide specific changesets for registering and updating users:</source>
          <target state="translated">명시적인 변경 세트를 사용하면 다른 사용 사례에 대해 다른 변경 세트를 쉽게 제공 할 수 있다는 이점이 있습니다. 예를 들어, 사용자 등록 및 업데이트를위한 특정 변경 세트를 쉽게 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a33976fda84cd70626bac12299c44a1b4814775d" translate="yes" xml:space="preserve">
          <source>The binary is assumed to be encoded in &quot;x-www-form-urlencoded&quot; format. The format is decoded and then validated for proper UTF-8 encoding.</source>
          <target state="translated">바이너리는 &quot;x-www-form-urlencoded&quot;형식으로 인코딩 된 것으로 간주됩니다. 형식이 디코딩 된 다음 적절한 UTF-8 인코딩에 대해 유효성이 검사됩니다.</target>
        </trans-unit>
        <trans-unit id="47dd120170d17aa1d0f259374abed03b66d4f7d7" translate="yes" xml:space="preserve">
          <source>The cache can be in 3 states, documented below.</source>
          <target state="translated">캐시는 아래에 설명 된 3 가지 상태 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8af03881748bd2064e8f807b0d417c42f2bf8b4b" translate="yes" xml:space="preserve">
          <source>The callback invoked in case the adapter needs to inject code</source>
          <target state="translated">어댑터가 코드를 주입해야하는 경우에 호출 된 콜백</target>
        </trans-unit>
        <trans-unit id="67ef6fb0196e40fee0ed0f4b18726aa52ce6c746" translate="yes" xml:space="preserve">
          <source>The callback invoked in case the adapter needs to inject code.</source>
          <target state="translated">어댑터가 코드를 주입해야하는 경우 호출 된 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="5bbfddd88f74a0c053e76f91efe40fb552ccd1a5" translate="yes" xml:space="preserve">
          <source>The callback will be invoked for all queries, including queries made from associations and preloads. It is not invoked for each individual join inside a query.</source>
          <target state="translated">콜백은 연결 및 사전로드에서 만든 쿼리를 포함하여 모든 쿼리에 대해 호출됩니다. 쿼리 내의 각 개별 조인에 대해 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="465bc3533bd128c95cfecfc17237e61c1f085130" translate="yes" xml:space="preserve">
          <source>The catch-all verb, &lt;code&gt;:*&lt;/code&gt;, may also be used to match all HTTP methods.</source>
          <target state="translated">catch-all 동사 인 &lt;code&gt;:*&lt;/code&gt; 도 모든 HTTP 메소드와 일치시키는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abd434dfdfacea66c9516a4ae4981484c3f005f5" translate="yes" xml:space="preserve">
          <source>The certificate files, like keyfile, certfile, cacertfile, dhfile can be given as a relative path. For such, the &lt;code&gt;:otp_app&lt;/code&gt; option must also be given and certificates will be looked from the priv directory of the given application</source>
          <target state="translated">keyfile, certfile, cacertfile, dhfile과 같은 인증서 파일은 상대 경로로 제공 될 수 있습니다. 이를 위해 &lt;code&gt;:otp_app&lt;/code&gt; 옵션도 제공해야하며 인증서는 주어진 응용 프로그램의 priv 디렉토리에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8048a4c70c26c609930c982d23c8e90c3c74914" translate="yes" xml:space="preserve">
          <source>The changeset must have been previously &lt;code&gt;cast&lt;/code&gt; using &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; before this function is invoked.</source>
          <target state="translated">이 함수를 호출하기 전에 &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; &lt;/a&gt; 를 사용하여 변경 세트를 이전에 &lt;code&gt;cast&lt;/code&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="160a4bd88e21d5ca169655a091e64a1bf7eb4d1d" translate="yes" xml:space="preserve">
          <source>The channel that owns the socket will not receive the published message. The event&amp;rsquo;s message must be a serializable map.</source>
          <target state="translated">소켓을 소유 한 채널은 게시 된 메시지를받지 않습니다. 이벤트 메시지는 직렬화 가능한 맵이어야합니다.</target>
        </trans-unit>
        <trans-unit id="14225c93c28bf8ec888fac6e844921cc19f40df5" translate="yes" xml:space="preserve">
          <source>The channel that owns the socket will not receive the published message. The event's message must be a serializable map.</source>
          <target state="translated">소켓을 소유 한 채널은 게시 된 메시지를 수신하지 않습니다. 이벤트의 메시지는 직렬화 가능한 맵이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a87a04668a71cfebe522dc33304dfa1bb9aafa32" translate="yes" xml:space="preserve">
          <source>The check constraint works by relying on the database to check if the check constraint has been violated or not and, if so, Ecto converts it into a changeset error.</source>
          <target state="translated">검사 제한 조건은 데이터베이스를 사용하여 검사 제한 조건이 위반되었는지 여부를 확인하고, 그렇다면 Ecto가이를 변경 세트 오류로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e55ac05c44eebe5ced7773b3f09d70f633a77d33" translate="yes" xml:space="preserve">
          <source>The column name is arbitrary and doesn&amp;rsquo;t need to be &lt;code&gt;:lock_version&lt;/code&gt;. Now add a field to the schema too:</source>
          <target state="translated">열 이름은 임의적이며 &lt;code&gt;:lock_version&lt;/code&gt; 일 필요는 없습니다 . 이제 스키마에도 필드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="22ce43d9dab9ba680dd79938365e5a367bde9ba9" translate="yes" xml:space="preserve">
          <source>The column name is arbitrary and doesn't need to be &lt;code&gt;:lock_version&lt;/code&gt;. Now add a field to the schema too:</source>
          <target state="translated">열 이름은 임의적이며 &lt;code&gt;:lock_version&lt;/code&gt; 이 아니 어도 됩니다. 이제 스키마에도 필드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="75c1a428d5c10266245cfaf3fb20fc81b6b19a29" translate="yes" xml:space="preserve">
          <source>The command above means incoming socket connections can be made via a WebSocket connection. Events are routed by topic to channels:</source>
          <target state="translated">위의 명령은 WebSocket 연결을 통해 들어오는 소켓 연결을 만들 수 있음을 의미합니다. 이벤트는 주제별로 채널로 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="c5d46c8827dfa162c3fc24d840406076f113e566" translate="yes" xml:space="preserve">
          <source>The command above means incoming socket connections can be made via the WebSocket transport. Events are routed by topic to channels:</source>
          <target state="translated">위의 명령은 WebSocket 전송을 통해 들어오는 소켓을 연결할 수 있음을 의미합니다. 이벤트는 주제별로 채널로 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="a6bed204f25946a181bf872deafb93e1b8f811e4" translate="yes" xml:space="preserve">
          <source>The command above will effectively change the value of &lt;code&gt;conn.scheme&lt;/code&gt; by the one sent in &lt;code&gt;x-forwarded-proto&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 &lt;code&gt;x-forwarded-proto&lt;/code&gt; 에서 보낸 값으로 &lt;code&gt;conn.scheme&lt;/code&gt; 의 값을 효과적으로 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="7ac44c98f163a9b266d4abe83ee653c46374e382" translate="yes" xml:space="preserve">
          <source>The configuration above takes care of starting the pubsub backend and exposing its functions via the endpoint module. If no adapter but a name is given, nothing will be started, but the pubsub system will work by sending events and subscribing to the given name.</source>
          <target state="translated">위의 구성은 pubsub 백엔드를 시작하고 엔드 포인트 모듈을 통해 해당 기능을 노출하는 것을 처리합니다. 이름이 지정되지 않은 어댑터가 없으면 아무것도 시작되지 않지만 pubsub 시스템은 이벤트를 전송하고 지정된 이름을 구독하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8b296a52b4ef4041ccbced6b08d102098ca424ae" translate="yes" xml:space="preserve">
          <source>The configuration above will start a Redis pubsub and register it with name &lt;code&gt;:my_pubsub&lt;/code&gt;.</source>
          <target state="translated">위의 구성은 Redis pubsub를 시작하고 이름 &lt;code&gt;:my_pubsub&lt;/code&gt; 로 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="0c3243504e5d91d9054ed22ddbd7d15078c0b7c3" translate="yes" xml:space="preserve">
          <source>The configuration below can be given to both &lt;code&gt;:websocket&lt;/code&gt; and &lt;code&gt;:longpoll&lt;/code&gt; keys:</source>
          <target state="translated">아래 구성은 &lt;code&gt;:websocket&lt;/code&gt; 및 &lt;code&gt;:longpoll&lt;/code&gt; 키 모두에 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="468fbe7bf04f16c5040863a52f0d55b418c094c8" translate="yes" xml:space="preserve">
          <source>The connection state is used to track the connection lifecycle. It starts as &lt;code&gt;:unset&lt;/code&gt; but is changed to &lt;code&gt;:set&lt;/code&gt; (via &lt;a href=&quot;#resp/3&quot;&gt;&lt;code&gt;resp/3&lt;/code&gt;&lt;/a&gt;) or &lt;code&gt;:set_chunked&lt;/code&gt; (used only for &lt;code&gt;before_send&lt;/code&gt; callbacks by &lt;a href=&quot;#send_chunked/2&quot;&gt;&lt;code&gt;send_chunked/2&lt;/code&gt;&lt;/a&gt;) or &lt;code&gt;:file&lt;/code&gt; (when invoked via &lt;a href=&quot;#send_file/3&quot;&gt;&lt;code&gt;send_file/3&lt;/code&gt;&lt;/a&gt;). Its final result is &lt;code&gt;:sent&lt;/code&gt;, &lt;code&gt;:file&lt;/code&gt; or &lt;code&gt;:chunked&lt;/code&gt; depending on the response model.</source>
          <target state="translated">연결 상태는 연결 수명주기를 추적하는 데 사용됩니다. &lt;code&gt;:unset&lt;/code&gt; 으로 시작 하지만 &lt;code&gt;:set&lt;/code&gt; ( &lt;a href=&quot;#resp/3&quot;&gt; &lt;code&gt;resp/3&lt;/code&gt; &lt;/a&gt; 를 통해 ) 또는 &lt;code&gt;:set_chunked&lt;/code&gt; ( &lt;a href=&quot;#send_chunked/2&quot;&gt; &lt;code&gt;send_chunked/2&lt;/code&gt; 에&lt;/a&gt; 의해 &lt;code&gt;before_send&lt;/code&gt; 콜백 에만 사용됨 ) 또는 &lt;code&gt;:file&lt;/code&gt; ( &lt;a href=&quot;#send_file/3&quot;&gt; &lt;code&gt;send_file/3&lt;/code&gt; 을&lt;/a&gt; 통해 호출 될 때 )로 변경됩니다. 최종 결과는 응답 모델에 따라 &lt;code&gt;:sent&lt;/code&gt; , &lt;code&gt;:file&lt;/code&gt; 또는 &lt;code&gt;:chunked&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="48566362cafe346914c5a6f03d80d57d5efcb820" translate="yes" xml:space="preserve">
          <source>The connection will be configured with the given &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;path_or_action&lt;/code&gt; and &lt;code&gt;params_or_body&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;method&lt;/code&gt; 인 &lt;code&gt;path_or_action&lt;/code&gt; 과 &lt;code&gt;params_or_body&lt;/code&gt; 로 연결이 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d448c7ac90d83c40db5bfb1c89d1edee4438350" translate="yes" xml:space="preserve">
          <source>The connection&amp;rsquo;s endpoint will be used for URL generation. See &lt;a href=&quot;#current_path/1&quot;&gt;&lt;code&gt;current_path/1&lt;/code&gt;&lt;/a&gt; for details on how the request path is generated.</source>
          <target state="translated">연결 엔드 포인트는 URL 생성에 사용됩니다. 요청 경로 생성 방법에 대한 자세한 내용 은 &lt;a href=&quot;#current_path/1&quot;&gt; &lt;code&gt;current_path/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7d4bab9d56a81796bac83a3ef42018e650c34ee" translate="yes" xml:space="preserve">
          <source>The context app</source>
          <target state="translated">컨텍스트 앱</target>
        </trans-unit>
        <trans-unit id="0facde72bd2ec18fe66926da4d93236d6aff0bce" translate="yes" xml:space="preserve">
          <source>The context is an Elixir module that serves as an API boundary for the given resource. A context often holds many related resources. Therefore, if the context already exists, it will be augmented with functions for the given resource.</source>
          <target state="translated">컨텍스트는 주어진 리소스에 대한 API 경계 역할을하는 Elixir 모듈입니다. 컨텍스트는 종종 많은 관련 리소스를 보유합니다. 따라서 컨텍스트가 이미 존재하는 경우 주어진 자원에 대한 기능으로 보강됩니다.</target>
        </trans-unit>
        <trans-unit id="f31946d1aec3ffc473697b735314efcde461c192" translate="yes" xml:space="preserve">
          <source>The context is an Elixir module that serves as an API boundary for the given resource. A context often holds many related resources. Therefore, if the context already exists, it will be augmented with functions for the given resource. Note a resource may also be split over distinct contexts (such as Accounts.User and Payments.User).</source>
          <target state="translated">컨텍스트는 주어진 리소스에 대한 API 경계 역할을하는 Elixir 모듈입니다. 컨텍스트에는 종종 많은 관련 리소스가 있습니다. 따라서 컨텍스트가 이미 존재하면 주어진 자원에 대한 기능으로 기능이 보강됩니다. 자원은 고유 한 컨텍스트 (예 : Accounts.User 및 Payments.User)로 분할 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ef96e1551a038d10e050b366a6393c8066aa195" translate="yes" xml:space="preserve">
          <source>The cookie value is not automatically escaped. Therefore, if you want to store values with comma, quotes, and so on, you need to explicitly escape them or use a function such as &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; when writing and &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; when reading the cookie. Padding needs to be disabled since &lt;code&gt;=&lt;/code&gt; is not a valid character in cookie values.</source>
          <target state="translated">쿠키 값은 자동으로 이스케이프되지 않습니다. 따라서 쉼표, 따옴표 등으로 값을 저장하려면 값을 명시 적으로 이스케이프하거나 &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; 와 같은 함수를 사용 하고 &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; 쿠키를 읽을 때. &lt;code&gt;=&lt;/code&gt; 는 쿠키 값에서 유효한 문자가 아니므로 패딩을 비활성화해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0b75f4c0b3e543c026233950dd58d233dabc0916" translate="yes" xml:space="preserve">
          <source>The cookie value is not automatically escaped. Therefore, if you want to store values with comma, quotes, etc, you need to explicitly escape them or use a function such as &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; when writing and &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; when reading the cookie. Padding needs to be disabled since &lt;code&gt;=&lt;/code&gt; is not a valid character in cookie values.</source>
          <target state="translated">쿠키 값은 자동으로 이스케이프되지 않습니다. 따라서 쉼표, 따옴표 등으로 값을 저장하려면 명시 적으로 이스케이프하거나 &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; 및 &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; 와 같은 함수를 사용해야합니다 . 쿠키를 읽을 때. &lt;code&gt;=&lt;/code&gt; 는 쿠키 값에서 유효한 문자가 아니므로 패딩을 비활성화해야 합니다.</target>
        </trans-unit>
        <trans-unit id="bc170b7df02149d4f1b41d395782c4bf6a42233e" translate="yes" xml:space="preserve">
          <source>The cookie value that will be sent in cookie headers. This value should be base64 encoded to avoid security issues</source>
          <target state="translated">쿠키 헤더로 전송 될 쿠키 값입니다. 보안 문제를 피하려면이 값을 base64로 인코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="4ed8e930bd798b7f59e1b3906dae0c5ae18ae5f5" translate="yes" xml:space="preserve">
          <source>The cookie value that will be sent in cookie headers. This value should be base64 encoded to avoid security issues.</source>
          <target state="translated">쿠키 헤더로 전송 될 쿠키 값입니다. 보안 문제를 피하려면이 값을 base64로 인코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8e46ad87d3469e7e9f3187e46155cee02aaf64d" translate="yes" xml:space="preserve">
          <source>The current schema belongs to zero or one records of the other schema. The other schema often has a &lt;code&gt;has_one&lt;/code&gt; or a &lt;code&gt;has_many&lt;/code&gt; field with the reverse association.</source>
          <target state="translated">현재 스키마는 다른 스키마의 0 개 또는 하나의 레코드에 속합니다. 다른 스키마에는 종종 역 연관 이있는 &lt;code&gt;has_one&lt;/code&gt; 또는 &lt;code&gt;has_many&lt;/code&gt; 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="37f668c1bd4c3e820e33a15f5f380f812917f51d" translate="yes" xml:space="preserve">
          <source>The current schema has zero or more records of the other schema embedded inside of it. Embeds have all the things regular schemas have.</source>
          <target state="translated">현재 스키마에는 그 안에 포함 된 다른 스키마에 대한 레코드가 0 개 이상 있습니다. 임베드에는 일반 스키마의 모든 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb6532e1cfbc40c65e0d70c093c2d84b8c13c97c" translate="yes" xml:space="preserve">
          <source>The current schema has zero or more records of the other schema. The other schema often has a &lt;code&gt;belongs_to&lt;/code&gt; field with the reverse association.</source>
          <target state="translated">현재 스키마에는 다른 스키마에 대한 레코드가 0 개 이상 있습니다. 다른 스키마에는 종종 역방향 연관 이있는 &lt;code&gt;belongs_to&lt;/code&gt; 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2400e9bff3b3fcf167090fc4f9675aa1dafa03a" translate="yes" xml:space="preserve">
          <source>The current schema has zero or one records of the other schema embedded inside of it. It uses a field similar to the &lt;code&gt;:map&lt;/code&gt; type for storage, but allows embeds to have all the things regular schema can.</source>
          <target state="translated">현재 스키마에는 그 안에 포함 된 다른 스키마의 레코드가 없거나 하나 있습니다. 저장 을 위해 &lt;code&gt;:map&lt;/code&gt; 유형 과 유사한 필드를 사용 하지만 임베드는 일반 스키마가 할 수있는 모든 것을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="543e48ecf9a036c8c3265d90420f7f54855d1f07" translate="yes" xml:space="preserve">
          <source>The current schema has zero or one records of the other schema. The other schema often has a &lt;code&gt;belongs_to&lt;/code&gt; field with the reverse association.</source>
          <target state="translated">현재 스키마에는 다른 스키마에 대한 레코드가 없거나 하나 있습니다. 다른 스키마에는 종종 역방향 연관 이있는 &lt;code&gt;belongs_to&lt;/code&gt; 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a89c1ce17f89437f89ff113dd237432b1779e13f" translate="yes" xml:space="preserve">
          <source>The current time in UTC is retrieved from Elixir and not from the database.</source>
          <target state="translated">UTC가 아닌 현재 시간은 데이터베이스가 아닌 Elixir에서 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="b052c5d0d8705bd378272066bfc771be8f95160c" translate="yes" xml:space="preserve">
          <source>The data is stored in ETS in the following format:</source>
          <target state="translated">데이터는 다음 형식으로 ETS에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="1acda630ba32f073701a386f5cfe162756e7c372" translate="yes" xml:space="preserve">
          <source>The data stored in the token is signed to prevent tampering but not encrypted. This means it is safe to store identification information (such as user IDs) but should not be used to store confidential information (such as credit card numbers).</source>
          <target state="translated">토큰에 저장된 데이터는 변조는 방지하지만 암호화되지는 않도록 서명됩니다. 이는 식별 정보 (예 : 사용자 ID)를 저장하는 것이 안전하지만 기밀 정보 (예 : 신용 카드 번호)를 저장하는 데 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="25b03cf10e6fc6af894d1777f43a9e4564e801a7" translate="yes" xml:space="preserve">
          <source>The datetime types</source>
          <target state="translated">날짜 / 시간 유형</target>
        </trans-unit>
        <trans-unit id="01d063536b5fd16a46117b63d1178dfcad16b720" translate="yes" xml:space="preserve">
          <source>The default HTML encoder that ships with Phoenix.</source>
          <target state="translated">Phoenix와 함께 제공되는 기본 HTML 인코더입니다.</target>
        </trans-unit>
        <trans-unit id="b6a5014904611a0144837aa761a0d9c7ac17de4a" translate="yes" xml:space="preserve">
          <source>The default format is used when none is set in the connection</source>
          <target state="translated">연결에 아무것도 설정되지 않은 경우 기본 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="eb15ee34b6e76bea7879309e5d7b64c6bf0dee90" translate="yes" xml:space="preserve">
          <source>The default format is used when none is set in the connection.</source>
          <target state="translated">연결에 아무것도 설정되어 있지 않으면 기본 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="565d3288130af0242285fb747529bfd66f40c7d5" translate="yes" xml:space="preserve">
          <source>The default implementation simply passes &lt;code&gt;presences&lt;/code&gt; through unchanged.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;presences&lt;/code&gt; 를 변경되지 않은 상태로 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="6676a691528a06988caceda0bdea8ffb85ace6e8" translate="yes" xml:space="preserve">
          <source>The default option can be given to populate the fields if none is given:</source>
          <target state="translated">필드가 없으면 기본 옵션으로 필드를 채울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c66e666e4d64f7851485bf4d02d2f008e867eb1" translate="yes" xml:space="preserve">
          <source>The default router is inflected from the application name unless a configuration named &lt;code&gt;:namespace&lt;/code&gt; is set inside your application configuration. For example, the configuration:</source>
          <target state="translated">응용 프로그램 구성 내에 &lt;code&gt;:namespace&lt;/code&gt; 라는 구성 이 설정되어 있지 않으면 기본 라우터는 응용 프로그램 이름에서 영향을받습니다 . 예를 들어 구성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bef1bc8ef401a761e7d8eba7f4227945005b964c" translate="yes" xml:space="preserve">
          <source>The definition of basic custom types and all of its callbacks is available in this module. You can learn more about parameterized types in &lt;a href=&quot;ecto.parameterizedtype&quot;&gt;&lt;code&gt;Ecto.ParameterizedType&lt;/code&gt;&lt;/a&gt;. If in doubt, prefer to use basic custom types and rely on parameterized types if you need the extra functionality.</source>
          <target state="translated">기본 사용자 정의 유형 및 모든 콜백에 대한 정의는이 모듈에서 사용할 수 있습니다. &lt;a href=&quot;ecto.parameterizedtype&quot;&gt; &lt;code&gt;Ecto.ParameterizedType&lt;/code&gt; &lt;/a&gt; 에서 매개 변수화 된 유형에 대해 자세히 알아볼 수 있습니다 . 확실하지 않은 경우 기본 사용자 지정 형식을 사용하고 추가 기능이 필요한 경우 매개 변수가있는 형식을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c9bea1b5faf766b56d93add1c5f07efe92cf9dfa" translate="yes" xml:space="preserve">
          <source>The difference between them is that most validations can be executed without a need to interact with the database and, therefore, are always executed before attempting to insert or update the entry in the database. Some validations may happen against the database but they are inherently unsafe. Those validations start with a &lt;code&gt;unsafe_&lt;/code&gt; prefix, such as &lt;a href=&quot;#unsafe_validate_unique/3&quot;&gt;&lt;code&gt;unsafe_validate_unique/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차이점은 대부분의 유효성 검사는 데이터베이스와 상호 작용할 필요없이 실행될 수 있으므로 데이터베이스에 항목을 삽입하거나 업데이트하기 전에 항상 실행된다는 것입니다. 일부 유효성 검사는 데이터베이스에 대해 발생할 수 있지만 본질적으로 안전하지 않습니다. 이러한 유효성 검증 은 &lt;a href=&quot;#unsafe_validate_unique/3&quot;&gt; &lt;code&gt;unsafe_validate_unique/3&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;unsafe_&lt;/code&gt; 접두어로 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="b905a6abee1408a861b937e78adce0825322527a" translate="yes" xml:space="preserve">
          <source>The dispatcher must be available on all nodes running the PubSub system. The &lt;code&gt;dispatch/3&lt;/code&gt; function of the given module will be invoked with the subscriptions entries, the broadcaster identifier (either a pid or &lt;code&gt;:none&lt;/code&gt;), and the message to broadcast.</source>
          <target state="translated">디스패처는 PubSub 시스템을 실행하는 모든 노드에서 사용할 수 있어야합니다. 주어진 모듈 의 &lt;code&gt;dispatch/3&lt;/code&gt; 함수는 구독 항목, 브로드 캐스터 식별자 (pid 또는 &lt;code&gt;:none&lt;/code&gt; ) 및 브로드 캐스트 할 메시지와 함께 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="90a466df0e05cd07db8216347664891ea2d6f388" translate="yes" xml:space="preserve">
          <source>The distinction whether to insert or update will be made on the &lt;a href=&quot;ecto.schema.metadata&quot;&gt;&lt;code&gt;Ecto.Schema.Metadata&lt;/code&gt;&lt;/a&gt; field &lt;code&gt;:state&lt;/code&gt;. The &lt;code&gt;:state&lt;/code&gt; is automatically set by Ecto when loading or building a schema.</source>
          <target state="translated">삽입 또는 업데이트 여부는 &lt;a href=&quot;ecto.schema.metadata&quot;&gt; &lt;code&gt;Ecto.Schema.Metadata&lt;/code&gt; &lt;/a&gt; 필드 &lt;code&gt;:state&lt;/code&gt; 에서 구분 됩니다. &lt;code&gt;:state&lt;/code&gt; 로드 또는 스키마를 만들 때 자동으로 체외에 의해 설정된다.</target>
        </trans-unit>
        <trans-unit id="98110b4f952a325165904e437acdb05dceca3afb" translate="yes" xml:space="preserve">
          <source>The download is achieved by setting &quot;content-disposition&quot; to attachment. The &quot;content-type&quot; will also be set based on the extension of the given filename but can be customized via the &lt;code&gt;:content_type&lt;/code&gt; and &lt;code&gt;:charset&lt;/code&gt; options.</source>
          <target state="translated">다운로드는 &quot;content-disposition&quot;을 첨부 파일로 설정하여 수행됩니다. &quot;content-type&quot;도 주어진 파일 이름의 확장자를 기반으로 설정되지만 &lt;code&gt;:content_type&lt;/code&gt; 및 &lt;code&gt;:charset&lt;/code&gt; 옵션을 통해 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bea122452a37ef030f627235ed1844a3ddfe593" translate="yes" xml:space="preserve">
          <source>The download is achieved by setting &amp;ldquo;content-disposition&amp;rdquo; to attachment. The &amp;ldquo;content-type&amp;rdquo; will also be set based on the extension of the given filename but can be customized via the &lt;code&gt;:content_type&lt;/code&gt; and &lt;code&gt;:charset&lt;/code&gt; options.</source>
          <target state="translated">&amp;ldquo;content-disposition&amp;rdquo;을 첨부 파일로 설정하여 다운로드 할 수 있습니다. &quot;content-type&quot;은 주어진 파일 이름의 확장자를 기반으로 설정되지만 &lt;code&gt;:content_type&lt;/code&gt; 및 &lt;code&gt;:charset&lt;/code&gt; 옵션을 통해 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="305f411cb067461e7008b3366143db8315830828" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto use the primary keys to detect if an embed is being updated or not. If a primary is not present and you still want the list of embeds to be updated, &lt;code&gt;:on_replace&lt;/code&gt; must be set to &lt;code&gt;:delete&lt;/code&gt;, forcing all current embeds to be deleted and replaced by new ones whenever a new list of embeds is set.</source>
          <target state="translated">임베디드에는 기본 키가 있거나 없을 수 있습니다. Ecto는 기본 키를 사용하여 포함이 업데이트되는지 여부를 감지합니다. 기본이없고 임베드 목록을 계속 업데이트 하려면 &lt;code&gt;:on_replace&lt;/code&gt; 를 &lt;code&gt;:delete&lt;/code&gt; 로 설정해야 새 임베드 목록이 설정 될 때마다 현재 임베드가 모두 삭제되고 새 임베드로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="9851fea47b9bbc161a06c36308d9e5222d41ca5d" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto use the primary keys to detect if an embed is being updated or not. If a primary is not present, &lt;code&gt;:on_replace&lt;/code&gt; should be set to either &lt;code&gt;:update&lt;/code&gt; or &lt;code&gt;:delete&lt;/code&gt; if there is a desire to either update or delete the current embed when a new one is set.</source>
          <target state="translated">임베디드에는 기본 키가 있거나 없을 수 있습니다. Ecto는 기본 키를 사용하여 포함이 업데이트되는지 여부를 감지합니다. 기본이 없으면 새 내장이 설정 될 때 현재 내장을 업데이트하거나 삭제하려는 경우 &lt;code&gt;:on_replace&lt;/code&gt; 를 &lt;code&gt;:update&lt;/code&gt; 또는 &lt;code&gt;:delete&lt;/code&gt; 로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1949ed7b2d6dffd9e7c7748d7bd6bc3abd5dcf0c" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto uses the primary keys to detect if an embed is being updated or not. If a primary is not present and you still want the list of embeds to be updated, &lt;code&gt;:on_replace&lt;/code&gt; must be set to &lt;code&gt;:delete&lt;/code&gt;, forcing all current embeds to be deleted and replaced by new ones whenever a new list of embeds is set.</source>
          <target state="translated">임베디드에는 기본 키가있을 수도 있고 없을 수도 있습니다. Ecto는 기본 키를 사용하여 임베드가 업데이트 중인지 여부를 감지합니다. 기본이없고 삽입 목록을 계속 업데이트 하려면 &lt;code&gt;:on_replace&lt;/code&gt; 를 &lt;code&gt;:delete&lt;/code&gt; 로 설정해야합니다 . 그러면 새 삽입 목록이 설정 될 때마다 모든 현재 삽입이 삭제되고 새 삽입으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="af9a17476a78a7a92bdf8fb962890959f1ad1049" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto uses the primary keys to detect if an embed is being updated or not. If a primary key is not present, &lt;code&gt;:on_replace&lt;/code&gt; should be set to either &lt;code&gt;:update&lt;/code&gt; or &lt;code&gt;:delete&lt;/code&gt; if there is a desire to either update or delete the current embed when a new one is set.</source>
          <target state="translated">임베디드에는 기본 키가있을 수도 있고 없을 수도 있습니다. Ecto는 기본 키를 사용하여 임베드가 업데이트 중인지 여부를 감지합니다. 기본 키가없는 경우, 새 항목이 설정 될 때 현재 포함을 업데이트하거나 삭제하려는 경우 &lt;code&gt;:on_replace&lt;/code&gt; 를 &lt;code&gt;:update&lt;/code&gt; 또는 &lt;code&gt;:delete&lt;/code&gt; 로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="240ba5b0f9226d65d40a221b0aaca6577ac67121" translate="yes" xml:space="preserve">
          <source>The encoding of server data and the decoding of client data is done according to a serializer, defined in &lt;a href=&quot;phoenix.socket.serializer&quot;&gt;&lt;code&gt;Phoenix.Socket.Serializer&lt;/code&gt;&lt;/a&gt;. By default, JSON encoding is used to broker messages to and from clients with &lt;code&gt;Phoenix.Socket.V2.JSONSerializer&lt;/code&gt;.</source>
          <target state="translated">서버 데이터 인코딩 및 클라이언트 데이터 디코딩은 &lt;a href=&quot;phoenix.socket.serializer&quot;&gt; &lt;code&gt;Phoenix.Socket.Serializer&lt;/code&gt; 에&lt;/a&gt; 정의 된 직렬 변환기에 따라 수행됩니다 . 기본적으로 JSON 인코딩은 &lt;code&gt;Phoenix.Socket.V2.JSONSerializer&lt;/code&gt; 를 사용하여 클라이언트와의 메시지를 중개하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ffc586997cb9ff4e598fbaf2d150c17e623488e6" translate="yes" xml:space="preserve">
          <source>The endpoint being tested is accessed via the &lt;code&gt;@endpoint&lt;/code&gt; module attribute.</source>
          <target state="translated">테스트중인 엔드 포인트는 &lt;code&gt;@endpoint&lt;/code&gt; 모듈 속성을 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="1085ea34a986c448fabcc15a67e4b94b2cb117ef" translate="yes" xml:space="preserve">
          <source>The endpoint is the boundary where all requests to your web application start. It is also the interface your application provides to the underlying web servers.</source>
          <target state="translated">엔드 포인트는 웹 애플리케이션에 대한 모든 요청이 시작되는 경계입니다. 또한 응용 프로그램이 기본 웹 서버에 제공하는 인터페이스이기도합니다.</target>
        </trans-unit>
        <trans-unit id="a71e0101c0d6d0c31084c2c74654c8ab5ada1e0f" translate="yes" xml:space="preserve">
          <source>The entry point for defining forms in Phoenix is with the &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; function. For this example, we will use &lt;code&gt;Ecto.Changeset&lt;/code&gt;, which integrates nicely with Phoenix forms via the &lt;code&gt;phoenix_ecto&lt;/code&gt; package.</source>
          <target state="translated">Phoenix에서 양식을 정의하기위한 시작점은 &lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; &lt;/a&gt; 함수입니다. 이 예에서는 &lt;code&gt;phoenix_ecto&lt;/code&gt; 패키지 를 통해 Phoenix 양식과 잘 통합되는 &lt;code&gt;Ecto.Changeset&lt;/code&gt; 을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="04c6d1a307f90ddcd28dacda1e19147d95f5924b" translate="yes" xml:space="preserve">
          <source>The event callback is called &lt;em&gt;before&lt;/em&gt; the event happens (in this case, before the view is rendered) with the atom &lt;code&gt;:start&lt;/code&gt; as the first argument; see the &amp;ldquo;Before clause&amp;rdquo; section below.</source>
          <target state="translated">이벤트 콜백은 이벤트가 발생 &lt;em&gt;하기 전에&lt;/em&gt; (이 경우 뷰가 렌더링되기 전에) atom &lt;code&gt;:start&lt;/code&gt; 를 첫 번째 인수로 사용하여 호출됩니다. 아래의 &quot;전 조항&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="757e085e21ddd74789de7bdb0bbe8f07bed88c4b" translate="yes" xml:space="preserve">
          <source>The event callback sequence is:</source>
          <target state="translated">이벤트 콜백 시퀀스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8146ea0120720d389e5e641e32fe81e0949316e4" translate="yes" xml:space="preserve">
          <source>The event occurs (in this case, the view is rendered).</source>
          <target state="translated">이벤트가 발생합니다 (이 경우 뷰가 렌더링 됨).</target>
        </trans-unit>
        <trans-unit id="ae116b624d5b59052eb64f10c8d76ec7dd431042" translate="yes" xml:space="preserve">
          <source>The event&amp;rsquo;s message must be a serializable map.</source>
          <target state="translated">이벤트 메시지는 직렬화 가능한 맵이어야합니다.</target>
        </trans-unit>
        <trans-unit id="59c29c61995ac6adc27d72e58769a2befdbcb1f2" translate="yes" xml:space="preserve">
          <source>The event's message must be a serializable map.</source>
          <target state="translated">이벤트의 메시지는 직렬화 가능한 맵이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c6f8e9a757d63677055c9099b13a0e178eebb865" translate="yes" xml:space="preserve">
          <source>The example above does not use &lt;code&gt;in&lt;/code&gt; because &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; do not require a reference to the data source. However, extending the query with a where expression would require the use of &lt;code&gt;in&lt;/code&gt;:</source>
          <target state="translated">위의 예에서는 사용하지 않는 &lt;code&gt;in&lt;/code&gt; 인해 &lt;code&gt;limit&lt;/code&gt; 및 &lt;code&gt;offset&lt;/code&gt; 데이터 소스에 대한 참조를 필요로하지 않는다. 그러나 where 표현식으로 쿼리를 확장하려면 &lt;code&gt;in&lt;/code&gt; 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2a68a419c4788a627e1c523a21aa9c289200ba77" translate="yes" xml:space="preserve">
          <source>The example above renders a template &quot;show.html&quot; from the &lt;code&gt;MyAppWeb.UserView&lt;/code&gt; and sets the response content type to &quot;text/html&quot;.</source>
          <target state="translated">위의 예제는 &lt;code&gt;MyAppWeb.UserView&lt;/code&gt; 에서 &quot;show.html&quot;템플릿을 렌더링 하고 응답 콘텐츠 유형을 &quot;text / html&quot;로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="323718568a794b79b80b9c7f90d47fc0dddb0e78" translate="yes" xml:space="preserve">
          <source>The example above renders a template &amp;ldquo;show.html&amp;rdquo; from the &lt;code&gt;MyApp.UserView&lt;/code&gt; and sets the response content type to &amp;ldquo;text/html&amp;rdquo;.</source>
          <target state="translated">위의 예제는 &lt;code&gt;MyApp.UserView&lt;/code&gt; 에서 &quot;show.html&quot;템플릿을 렌더링 하고 응답 내용 유형을 &quot;text / html&quot;로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="263bcd680d02d0dedd523e55597569bfc7eb4085" translate="yes" xml:space="preserve">
          <source>The example above will fetch all posts from the database and then do a separate query returning all comments associated with the given posts. The comments are then processed and associated to each returned &lt;code&gt;post&lt;/code&gt; under the &lt;code&gt;comments&lt;/code&gt; field.</source>
          <target state="translated">위의 예는 데이터베이스에서 모든 게시물을 가져오고 지정된 게시물과 관련된 모든 의견을 반환하는 별도의 쿼리를 수행합니다. 그런 다음 주석이 처리되고 &lt;code&gt;comments&lt;/code&gt; 필드 아래에 반환 된 각 &lt;code&gt;post&lt;/code&gt; 에 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="b71e88e7ed588cf8386d56a8b902c449be09cbf4" translate="yes" xml:space="preserve">
          <source>The example above will issue two queries, one for loading posts and then another for loading the comments associated with the posts. Comments will be ordered by &lt;code&gt;published_at&lt;/code&gt;.</source>
          <target state="translated">위의 예제는 두 개의 쿼리를 발행합니다. 하나는 게시물을로드하고 다른 하나는 게시물과 관련된 주석을로드합니다. 댓글에 의해 정렬됩니다 &lt;code&gt;published_at&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="924e9a6b17eb83d28266379ce64871ee77dfc336" translate="yes" xml:space="preserve">
          <source>The example above will work if the input query has 1 or 10 bindings. As long as the number of bindings is less than the number of from + joins, Ecto will match only what you have specified. The first binding always matches the source given in &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="translated">입력 쿼리에 1 또는 10 개의 바인딩이있는 경우 위의 예제가 작동합니다. 바인딩 수가 from + join 수보다 작은 한 Ecto는 지정한 내용 만 일치합니다. 첫 번째 바인딩은 항상 &lt;code&gt;from&lt;/code&gt; 제공된 소스와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="597f52cde33ea3d40cd216eeff98f0f27574f4d6" translate="yes" xml:space="preserve">
          <source>The exclusion constraint works by relying on the database to check if the exclusion constraint has been violated or not and, if so, Ecto converts it into a changeset error.</source>
          <target state="translated">제외 제약 조건은 데이터베이스를 사용하여 제외 제약 조건을 위반했는지 여부를 확인하고 해당하는 경우 Ecto에서이를 변경 집합 오류로 변환함으로써 작동합니다.</target>
        </trans-unit>
        <trans-unit id="77dfbd136a0c7b400c0e6cf8e244d45dcfb4c0ae" translate="yes" xml:space="preserve">
          <source>The field name will be used as is to read and write to the database by all of the built-in adapters unless overridden with the &lt;code&gt;:source&lt;/code&gt; option.</source>
          <target state="translated">필드 이름은 &lt;code&gt;:source&lt;/code&gt; 옵션으로 대체되지 않는 한 모든 내장 어댑터가 데이터베이스를 읽고 쓰는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="28d67d8abd4a4854029b14119fba01291b055159" translate="yes" xml:space="preserve">
          <source>The fields are:</source>
          <target state="translated">필드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="23e99979ef97808c907b0384c23bb476163e1c89" translate="yes" xml:space="preserve">
          <source>The fields generated by this macro will automatically be set to the current time when inserting and updating values in a repository.</source>
          <target state="translated">이 매크로에 의해 생성 된 필드는 리포지토리에 값을 삽입하고 업데이트 할 때 현재 시간으로 자동 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b3a7c7070bdd1da6f37c5437d705a4f71db3064c" translate="yes" xml:space="preserve">
          <source>The first argument can also be a &lt;code&gt;types&lt;/code&gt; map:</source>
          <target state="translated">첫 번째 인수는 &lt;code&gt;types&lt;/code&gt; 맵일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49bed0abeb1db58200a4ef0db4c5da86c91aa45c" translate="yes" xml:space="preserve">
          <source>The first argument can be a a schema module, or a map (of types) and determines the return value: a struct or a map, respectively.</source>
          <target state="translated">첫 번째 인수는 스키마 모듈 또는 맵 (유형) 일 수 있으며 반환 값을 결정합니다 (구조체 또는 맵).</target>
        </trans-unit>
        <trans-unit id="ec0251c98fcdc3180f663f2d434e28c1ff287694" translate="yes" xml:space="preserve">
          <source>The first argument can be a an embedded schema module, or a map (of types) and determines the return value: a struct or a map, respectively.</source>
          <target state="translated">첫 번째 인수는 포함 된 스키마 모듈 또는 맵 (유형) 일 수 있으며 반환 값 (각각 구조체 또는 맵)을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="500f8521003b9bf543828ad835d40f5eeb6af0a7" translate="yes" xml:space="preserve">
          <source>The first argument is a &lt;code&gt;datetime&lt;/code&gt;, the second one is the count for the interval, which may be either positive or negative and the interval value:</source>
          <target state="translated">첫 번째 인수는 &lt;code&gt;datetime&lt;/code&gt; 이고 두 번째 인수는 간격의 개수이며 양수 또는 음수 일 수 있으며 간격 값입니다.</target>
        </trans-unit>
        <trans-unit id="c0e54dc181af943e0b3cceca923e134cbcf1e0c6" translate="yes" xml:space="preserve">
          <source>The first argument is the context module followed by the schema module and its plural name (used as the schema table name).</source>
          <target state="translated">첫 번째 인수는 컨텍스트 모듈 다음에 스키마 모듈과 복수 이름 (스키마 테이블 이름으로 사용됨)이옵니다.</target>
        </trans-unit>
        <trans-unit id="4865c8fae49bc4316a74325ea7181643af770fb4" translate="yes" xml:space="preserve">
          <source>The first argument is the context the callback is being invoked. If it is called because the Repo supervisor is starting, it will be &lt;code&gt;:supervisor&lt;/code&gt;. It will be &lt;code&gt;:runtime&lt;/code&gt; if it is called for reading configuration without actually starting a process.</source>
          <target state="translated">첫 번째 인수는 콜백이 호출되는 컨텍스트입니다. Repo 수퍼바이저가 시작되어 호출 된 경우 &lt;code&gt;:supervisor&lt;/code&gt; 입니다. 그것은 될 것입니다 &lt;code&gt;:runtime&lt;/code&gt; 이 실제로 프로세스를 시작하지 않고 구성을 읽어라고합니다.</target>
        </trans-unit>
        <trans-unit id="abeed1d3f6ef43117d9c456048712438c831279a" translate="yes" xml:space="preserve">
          <source>The first argument is the module name followed by its plural name (used for resources and schema).</source>
          <target state="translated">첫 번째 인수는 모듈 이름 다음에 복수 이름 (자원 및 스키마에 사용)입니다.</target>
        </trans-unit>
        <trans-unit id="964c9cb93e956fb751ffeb1617eb35e4e1dd5ef8" translate="yes" xml:space="preserve">
          <source>The first argument is the module name followed by its plural name (used for the schema).</source>
          <target state="translated">첫 번째 인수는 모듈 이름 뒤에 복수 이름 (스키마에 사용됨)이옵니다.</target>
        </trans-unit>
        <trans-unit id="35f70a15e0108aa4e4b74899ee54723e2a713861" translate="yes" xml:space="preserve">
          <source>The first argument is the path where the static files are located. The &lt;code&gt;-o&lt;/code&gt; option indicates the path that will be used to save the digested and compressed files.</source>
          <target state="translated">첫 번째 인수는 정적 파일이있는 경로입니다. &lt;code&gt;-o&lt;/code&gt; 옵션은 요약 및 압축 파일을 저장하는 데 사용될 경로를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2fe4f44a0f785ff10de251522a37c07e0b5ab7bb" translate="yes" xml:space="preserve">
          <source>The first argument is the schema module followed by its plural name (used as the table name).</source>
          <target state="translated">첫 번째 인수는 스키마 모듈 뒤에 복수 이름 (테이블 이름으로 사용)이옵니다.</target>
        </trans-unit>
        <trans-unit id="e4b02077d7ac802cfee0627d193ca5cd0a9be149" translate="yes" xml:space="preserve">
          <source>The first argument is the schema module followed by the schema attributes</source>
          <target state="translated">첫 번째 인수는 스키마 모듈 다음에 스키마 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d11a276567643357f029e74ffc86b05f8be866b2" translate="yes" xml:space="preserve">
          <source>The first argument is the schema module followed by the schema attributes.</source>
          <target state="translated">첫 번째 인수는 스키마 모듈과 그 뒤에 오는 스키마 속성입니다.</target>
        </trans-unit>
        <trans-unit id="85394c0d9cf1f3bd97ab6925f698c432e75e0ba3" translate="yes" xml:space="preserve">
          <source>The first argument should either be a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">첫 번째 인자 중 하나이어야 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 방출 &lt;code&gt;form_for&lt;/code&gt; 또는 원자이다.</target>
        </trans-unit>
        <trans-unit id="4d5565085e0846e63bdeb7de3b6914b3e5d53f51" translate="yes" xml:space="preserve">
          <source>The first argument to both &lt;a href=&quot;#sign/4&quot;&gt;&lt;code&gt;sign/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#verify/4&quot;&gt;&lt;code&gt;verify/4&lt;/code&gt;&lt;/a&gt; can be one of:</source>
          <target state="translated">&lt;a href=&quot;#sign/4&quot;&gt; &lt;code&gt;sign/4&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#verify/4&quot;&gt; &lt;code&gt;verify/4&lt;/code&gt; 에&lt;/a&gt; 대한 첫 번째 인수 는 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d49a3d210dbcdc92bf9475253ce66aa64aa7725b" translate="yes" xml:space="preserve">
          <source>The first field name, &lt;code&gt;:email&lt;/code&gt; in this case, will be used as the error key to the changeset errors keyword list. For example, the above &lt;a href=&quot;#unique_constraint/3&quot;&gt;&lt;code&gt;unique_constraint/3&lt;/code&gt;&lt;/a&gt; would generate something like:</source>
          <target state="translated">첫 번째 필드 이름 인 &lt;code&gt;:email&lt;/code&gt; 은이 경우 변경 집합 오류 키워드 목록의 오류 키로 사용됩니다. 예를 들어, 위의 &lt;a href=&quot;#unique_constraint/3&quot;&gt; &lt;code&gt;unique_constraint/3&lt;/code&gt; &lt;/a&gt; 는 다음과 같은 것을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2cb52f0181ac504af2d274804ae227768df1b3b4" translate="yes" xml:space="preserve">
          <source>The first plug will run only when action is show or edit. The second plug will always run, except for the index action.</source>
          <target state="translated">첫 번째 플러그는 동작이 표시되거나 편집 될 때만 실행됩니다. 인덱스 작업을 제외하고 두 번째 플러그는 항상 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="87cb90ded997365e136d73bbbbeaa6912dce9a57" translate="yes" xml:space="preserve">
          <source>The first step is to start the adapter of choice in your supervision tree:</source>
          <target state="translated">첫 번째 단계는 감독 트리에서 선택한 어댑터를 시작하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="23dbc44cf8fcb8401ecac56fad2056f3e27fd632" translate="yes" xml:space="preserve">
          <source>The following approach is &lt;strong&gt;wrong&lt;/strong&gt;:</source>
          <target state="translated">다음과 같은 접근 방식이 &lt;strong&gt;잘못되었습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="27f0532927f5dfde2ed38eb7adc999b8682a2ebd" translate="yes" xml:space="preserve">
          <source>The following assigns are reserved, and cannot be set directly:</source>
          <target state="translated">다음 할당은 예약되어 있으며 직접 설정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="96a9598d7d5639506795473ffa8dad0e7b28cb27" translate="yes" xml:space="preserve">
          <source>The following configuration applies only to &lt;code&gt;:longpoll&lt;/code&gt;:</source>
          <target state="translated">다음 구성은 &lt;code&gt;:longpoll&lt;/code&gt; 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2c9626abcad38b5d2ad7be4a47ee7034e64d5860" translate="yes" xml:space="preserve">
          <source>The following configuration applies only to &lt;code&gt;:websocket&lt;/code&gt;.</source>
          <target state="translated">다음 구성은 &lt;code&gt;:websocket&lt;/code&gt; 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="13779d40c7bd0138f604faeb9ae943fd9630bdfd" translate="yes" xml:space="preserve">
          <source>The following events are emitted by all Ecto repositories:</source>
          <target state="translated">다음 이벤트는 모든 Ecto 리포지토리에서 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="697b7462029e6e23c15a3021022337813a16f040" translate="yes" xml:space="preserve">
          <source>The following fields are private and must not be accessed directly.</source>
          <target state="translated">다음 필드는 개인용이며 직접 액세스하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b34d9298df0cbb61838280284087d26545c45a26" translate="yes" xml:space="preserve">
          <source>The following intervals are supported: year, month, week, day, hour, minute, second, millisecond and microsecond.</source>
          <target state="translated">다음 간격이 지원됩니다 : 년, 월, 주, 일,시, 분, 초, 밀리 초 및 마이크로 초.</target>
        </trans-unit>
        <trans-unit id="1ff93af922ef6535f32352b2b639755a01dafeb3" translate="yes" xml:space="preserve">
          <source>The following keys are allowed when specifying a window.</source>
          <target state="translated">창을 지정할 때 다음 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="59c9c3a965c72c26e14a2014331e87cf4bda5729" translate="yes" xml:space="preserve">
          <source>The following keys are available:</source>
          <target state="translated">사용 가능한 키는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="71d94986edc28d20eb6e61b59ed0d6b150611abc" translate="yes" xml:space="preserve">
          <source>The following returns must be handled by transports:</source>
          <target state="translated">다음 반품은 운송으로 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="7450f3bbf7bebc0ac2b8dc21e3fc9b6d5613f466" translate="yes" xml:space="preserve">
          <source>The following status codes can be given as atoms with their respective value shown next:</source>
          <target state="translated">다음 상태 코드는 다음에 표시된 각각의 값을 가진 원자로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c734167c81ee7d5e27dd0815c6c9a86a53980591" translate="yes" xml:space="preserve">
          <source>The following types are supported:</source>
          <target state="translated">다음 유형이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="2047e7bdd4c73fd0eee9eccb4cbf4a0fb4bc1b07" translate="yes" xml:space="preserve">
          <source>The following validations may be included in the result. The list is not necessarily exhaustive. For example, custom validations written by the developer will also appear in our return value.</source>
          <target state="translated">다음과 같은 유효성 검사가 결과에 포함될 수 있습니다. 이 목록이 반드시 완전한 것은 아닙니다. 예를 들어 개발자가 작성한 사용자 지정 유효성 검사도 반환 값에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="cba133f413c5a544cc032d45c75d5ce55c737264" translate="yes" xml:space="preserve">
          <source>The following values are supported as date:</source>
          <target state="translated">다음 값은 날짜로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="5bfa84ecf1155190787c1f7e94a11fe721e17de4" translate="yes" xml:space="preserve">
          <source>The following values are supported as time:</source>
          <target state="translated">다음 값은 시간으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9ce20518f56534bcc1118c0bf986d78eef528c90" translate="yes" xml:space="preserve">
          <source>The following:</source>
          <target state="translated">다음과 같은:</target>
        </trans-unit>
        <trans-unit id="4117df297cda8bdfcd48daa253e21cdf1ba31860" translate="yes" xml:space="preserve">
          <source>The foreign key constraint works by relying on the database to check if the associated data exists or not. This is useful to guarantee that a child will only be created if the parent exists in the database too.</source>
          <target state="translated">외래 키 제약 조건은 데이터베이스를 사용하여 관련 데이터가 있는지 여부를 확인하여 작동합니다. 부모가 데이터베이스에도 존재하는 경우에만 자식이 만들어 지도록하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e8fa4eb4ae0982343eb1b5d21fa657d106b56303" translate="yes" xml:space="preserve">
          <source>The form generates a CSRF token by default. Your application should check this token on the server to avoid attackers from making requests on your server in behalf of other users. Phoenix by default checks this token.</source>
          <target state="translated">이 양식은 기본적으로 CSRF 토큰을 생성합니다. 공격자가 다른 사용자 대신 서버에서 요청을하지 않도록 응용 프로그램은 서버에서이 토큰을 확인해야합니다. Phoenix는 기본적으로이 토큰을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f83c045b60690e0951f0d613211981e82b773a3a" translate="yes" xml:space="preserve">
          <source>The form should either be a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">양식 중 하나이어야 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 방출 &lt;code&gt;form_for&lt;/code&gt; 또는 원자이다.</target>
        </trans-unit>
        <trans-unit id="8d01992897ad728050b4b855767bf08df37caba2" translate="yes" xml:space="preserve">
          <source>The form should either be a &lt;a href=&quot;phoenix.html.form#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">양식 중 하나이어야 &lt;a href=&quot;phoenix.html.form#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; 방출 &lt;code&gt;form_for&lt;/code&gt; 또는 원자이다.</target>
        </trans-unit>
        <trans-unit id="f1af6d5bfd7bd7fb64c73cbb0bcf39cb8cf169f9" translate="yes" xml:space="preserve">
          <source>The format has to be expressed as a regular expression.</source>
          <target state="translated">형식은 정규식으로 표현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="489cb5dcb56120d97d2c8e93ec7af5be88c2a077" translate="yes" xml:space="preserve">
          <source>The forwarded plug will be initialized at compile time.</source>
          <target state="translated">전달 된 플러그는 컴파일 타임에 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="6f475ae2afee4e174380adc1703f946251ee406f" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; can be used to handle these messages.</source>
          <target state="translated">&lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt; 함수 는 이러한 메시지를 처리하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2ef8c5833d6215f90102ad8553d89a6b62ac7bf" translate="yes" xml:space="preserve">
          <source>The function above fetches all users from the database who have registered presences for the given topic. The fetched information is then extended with a &lt;code&gt;:user&lt;/code&gt; key of the user&amp;rsquo;s information, while maintaining the required &lt;code&gt;:metas&lt;/code&gt; field from the original presence data.</source>
          <target state="translated">위의 함수는 주어진 주제에 대해 존재를 등록한 데이터베이스에서 모든 사용자를 가져옵니다. 페치 된 정보는 원래 프레즌스 데이터에서 필수 &lt;code&gt;:metas&lt;/code&gt; 필드 를 유지하면서 사용자 정보의 &lt;code&gt;:user&lt;/code&gt; 키로 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="3bb5d899f787348b0861709cf9aa7599e25a199f" translate="yes" xml:space="preserve">
          <source>The function accepts a status either as an integer HTTP status or atom, such as &lt;code&gt;404&lt;/code&gt; or &lt;code&gt;:not_found&lt;/code&gt;. If an error is raised, a 3-tuple of the wrapped response is returned matching the status, headers, and body of the response:</source>
          <target state="translated">이 함수는 상태를 정수 HTTP 상태 또는 원자 (예 : &lt;code&gt;404&lt;/code&gt; 또는 &lt;code&gt;:not_found&lt;/code&gt; ) 로 승인합니다 . 오류가 발생하면 랩핑 된 응답의 3 튜플이 응답의 상태, 헤더 및 본문과 일치하여 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7a00d6812bf7a0419f2a6f9124c6b63f43006264" translate="yes" xml:space="preserve">
          <source>The function accepts a status either as an integer HTTP status or atom, such as &lt;code&gt;404&lt;/code&gt; or &lt;code&gt;:not_found&lt;/code&gt;. The list of allowed atoms is available in &lt;a href=&quot;../plug/plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt;. If an error is raised, a 3-tuple of the wrapped response is returned matching the status, headers, and body of the response:</source>
          <target state="translated">이 함수는 정수 HTTP 상태 또는 원자 (예 : &lt;code&gt;404&lt;/code&gt; 또는 &lt;code&gt;:not_found&lt;/code&gt; ) 로 상태를 허용합니다 . 허용되는 원자 목록은 &lt;a href=&quot;../plug/plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; &lt;/a&gt; 에서 사용할 수 있습니다 . 오류가 발생하면 응답의 상태, 헤더 및 본문과 일치하는 래핑 된 응답의 3- 튜플이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="34f7c94fd7748f67cd09813bdd7706a2edb3046e" translate="yes" xml:space="preserve">
          <source>The function given to &lt;code&gt;run&lt;/code&gt; must return &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt; as its result. Returning an error will abort any further operations and make the whole multi fail.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 하도록 지정된 함수 는 결과로 &lt;code&gt;{:ok, value}&lt;/code&gt; 또는 &lt;code&gt;{:error, value}&lt;/code&gt; 를 반환해야합니다 . 오류를 반환하면 추가 작업이 중단되고 전체 멀티가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="2a481723c76058903ea9cbe576e12efab982d90c" translate="yes" xml:space="preserve">
          <source>The function must return a map of data matching the outlined Presence data structure, including the &lt;code&gt;:metas&lt;/code&gt; key, but can extend the map of information to include any additional information. For example:</source>
          <target state="translated">함수는 &lt;code&gt;:metas&lt;/code&gt; 키를 포함하여 개요 된 Presence 데이터 구조와 일치하는 데이터 맵을 반환해야 하지만 추가 정보를 포함하도록 정보 맵을 확장 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="fa901f9a75974fd4d90e6889c130fadce04c365a" translate="yes" xml:space="preserve">
          <source>The function returns a tuple with the first element being a quoted reference to the connection and the second element being the compiled quoted pipeline.</source>
          <target state="translated">이 함수는 첫 번째 요소가 연결에 대한 인용 된 참조이고 두 번째 요소가 컴파일 된 인용 된 파이프 라인 인 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="153b2df483884d8b989e308df19cc7b9893a9689" translate="yes" xml:space="preserve">
          <source>The function should return either &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt;, and receives the repo as the first argument, and the changes so far as the second argument.</source>
          <target state="translated">이 함수는 &lt;code&gt;{:ok, value}&lt;/code&gt; 또는 &lt;code&gt;{:error, value}&lt;/code&gt; 반환 하고 repo를 첫 번째 인수로 받고 변경 사항을 두 번째 인수까지받습니다.</target>
        </trans-unit>
        <trans-unit id="a67c783032e2a201537e306cf6f097d5365e66b6" translate="yes" xml:space="preserve">
          <source>The functionality provided by this module helps in performing &quot;origin&quot; header checks and ensuring only SSL connections are allowed.</source>
          <target state="translated">이 모듈에서 제공하는 기능은 &quot;원본&quot;헤더 검사를 수행하고 SSL 연결 만 허용되도록하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="d040f9e18e02bf1e9b7b5a6b1124e1c1c9357436" translate="yes" xml:space="preserve">
          <source>The functionality provided by this module helps in performing &amp;ldquo;origin&amp;rdquo; header checks and ensuring only SSL connections are allowed.</source>
          <target state="translated">이 모듈에서 제공하는 기능은 &quot;원본&quot;헤더 검사를 수행하고 SSL 연결 만 허용하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="f3caf5d490d3889e61dbe8db689ddbc1dc882729" translate="yes" xml:space="preserve">
          <source>The functions in this module can also be used for controller testing. While endpoint testing is preferred over controller testing as a controller often depends on the pipelines invoked in the router and before, unit testing controllers may be helpful in some situations.</source>
          <target state="translated">이 모듈의 기능은 컨트롤러 테스트에도 사용할 수 있습니다. 컨트롤러는 종종 라우터에서 호출 된 파이프 라인에 의존하기 때문에 엔드 포인트 테스트는 컨트롤러 테스트보다 선호되지만 단위 테스트 컨트롤러는 일부 상황에서 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e080e3a5969a0dfe51e38a130fc2af62050c352" translate="yes" xml:space="preserve">
          <source>The functions in this module can also be used for controller testing. While endpoint testing is preferred over controller testing, especially since the controller in Phoenix plays an integration role between your domain and your views, unit testing controllers may be helpful in some situations.</source>
          <target state="translated">이 모듈의 기능은 컨트롤러 테스트에도 사용할 수 있습니다. 엔드 포인트 테스트가 컨트롤러 테스트보다 선호되는 반면, 특히 Phoenix의 컨트롤러는 도메인과 뷰간에 통합 역할을하기 때문에 일부 상황에서는 유닛 테스트 컨트롤러가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3dd86f90d5374c8aba9a2543470a122fcff086c" translate="yes" xml:space="preserve">
          <source>The functions in this module can be used in three distinct scenarios:</source>
          <target state="translated">이 모듈의 기능은 세 가지 시나리오에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca241d49313e0782ffcc88432a8a2d858c13e8e9" translate="yes" xml:space="preserve">
          <source>The generated datetime_select can be customized at will by providing a builder option. Here is an example from EEx:</source>
          <target state="translated">생성 된 datetime_select는 빌더 옵션을 제공하여 원하는대로 사용자 정의 할 수 있습니다. 다음은 EEx의 예입니다.</target>
        </trans-unit>
        <trans-unit id="a05e320bee1a84e2ffca470cb7c31539b99e85c1" translate="yes" xml:space="preserve">
          <source>The generated files will contain:</source>
          <target state="translated">생성 된 파일에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="958104172477f9b5a43c314b73c9b38aabb7fb31" translate="yes" xml:space="preserve">
          <source>The generated migration can be skipped with &lt;code&gt;--no-migration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--no-migration&lt;/code&gt; 으로 생성 된 마이그레이션을 건너 뛸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2360bfab30a1d9a0770994aab3da68e5eb2150e6" translate="yes" xml:space="preserve">
          <source>The generated model will contain:</source>
          <target state="translated">생성 된 모델에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c2fafd8b72db2fda76555b5c3231ac455bc8d91f" translate="yes" xml:space="preserve">
          <source>The generated request id will be in the format &quot;uq8hs30oafhj5vve8ji5pmp7mtopc08f&quot;.</source>
          <target state="translated">생성 된 요청 ID는 &quot;uq8hs30oafhj5vve8ji5pmp7mtopc08f&quot;형식입니다.</target>
        </trans-unit>
        <trans-unit id="9e5668b35e826d6b7f7128c9281d2999702c5951" translate="yes" xml:space="preserve">
          <source>The generated request id will be in the format &amp;ldquo;uq8hs30oafhj5vve8ji5pmp7mtopc08f&amp;rdquo;.</source>
          <target state="translated">생성 된 요청 ID는 &quot;uq8hs30oafhj5vve8ji5pmp7mtopc08f&quot;형식입니다.</target>
        </trans-unit>
        <trans-unit id="3f6f61987271b75470a17cf53dff2fe262f3c6a6" translate="yes" xml:space="preserve">
          <source>The generated resource will contain:</source>
          <target state="translated">생성 된 자원에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="07a1ec291d930976c73c9d45dd66aa61e5c367bd" translate="yes" xml:space="preserve">
          <source>The generated route above will match on the path &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; and will dispatch to &lt;code&gt;:show&lt;/code&gt; action in &lt;code&gt;API.V1.PageController&lt;/code&gt;. A named helper &lt;code&gt;api_v1_page_path&lt;/code&gt; will also be generated.</source>
          <target state="translated">생성 된 경로는 위의 경로와 일치합니다 &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; 와에 파견 &lt;code&gt;:show&lt;/code&gt; 에서 액션 &lt;code&gt;API.V1.PageController&lt;/code&gt; . 명명 된 도우미 &lt;code&gt;api_v1_page_path&lt;/code&gt; 도 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="8eb6914d64c4e5b2458e4e1b429f8d5623fada37" translate="yes" xml:space="preserve">
          <source>The generated schema above will contain:</source>
          <target state="translated">위의 생성 된 스키마에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b0fe9476efd56f82a1ea6f2439a7dfb5f439d397" translate="yes" xml:space="preserve">
          <source>The generator also supports &lt;code&gt;belongs_to&lt;/code&gt; associations via references:</source>
          <target state="translated">또한 생성기는 참조를 통해 &lt;code&gt;belongs_to&lt;/code&gt; 연관을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="a584765639065a0e41059878bfc54d658311e358" translate="yes" xml:space="preserve">
          <source>The generator also supports references, which we will properly associate the given column to the primary key column of the referenced table:</source>
          <target state="translated">또한 생성기는 참조를 지원하며, 지정된 열을 참조 된 테이블의 기본 키 열에 올바르게 연결합니다.</target>
        </trans-unit>
        <trans-unit id="8ae78460b27964100f540d3c51518f56de1ae5d6" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;data&lt;/code&gt; may be either a changeset, a schema struct or a &lt;code&gt;{data, types}&lt;/code&gt; tuple. The second argument is a map of &lt;code&gt;params&lt;/code&gt; that are cast according to the type information from &lt;code&gt;data&lt;/code&gt;. &lt;code&gt;params&lt;/code&gt; is a map with string keys or a map with atom keys containing potentially invalid data.</source>
          <target state="translated">주어진 &lt;code&gt;data&lt;/code&gt; 는 변경 세트, 스키마 구조체 또는 &lt;code&gt;{data, types}&lt;/code&gt; 튜플 일 수 있습니다. 두 번째 인수는 &lt;code&gt;data&lt;/code&gt; 의 유형 정보에 따라 캐스트 되는 &lt;code&gt;params&lt;/code&gt; 맵입니다 . &lt;code&gt;params&lt;/code&gt; 는 문자열 키가있는 맵 또는 잠재적으로 유효하지 않은 데이터가 포함 된 원자 키가있는 맵입니다.</target>
        </trans-unit>
        <trans-unit id="ed7aeeaafe6c3bad4cfce08f957a5bf97bc013c4" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;function&lt;/code&gt; is invoked with the change value only if there is a change for the given &lt;code&gt;key&lt;/code&gt;. Note that the value of the change can still be &lt;code&gt;nil&lt;/code&gt; (unless the field was marked as required on &lt;a href=&quot;#validate_required/3&quot;&gt;&lt;code&gt;validate_required/3&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">주어진 &lt;code&gt;function&lt;/code&gt; 는 주어진 &lt;code&gt;key&lt;/code&gt; 대한 변경이있는 경우에만 변경 값으로 호출됩니다 . 필드가 &lt;a href=&quot;#validate_required/3&quot;&gt; &lt;code&gt;validate_required/3&lt;/code&gt; &lt;/a&gt; 에 필요한 것으로 표시되지 않은 한 변경 값은 여전히 &lt;code&gt;nil&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12ae3f1712df00636f70321070eb45b1efc012c4" translate="yes" xml:space="preserve">
          <source>The given attributes are expected to be structured data. If you want to build an association with external data, such as a request parameters, you can use &lt;a href=&quot;ecto.changeset#cast/3&quot;&gt;&lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt;&lt;/a&gt; after &lt;a href=&quot;#build_assoc/3&quot;&gt;&lt;code&gt;build_assoc/3&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">주어진 속성은 구조화 된 데이터 여야합니다. 요청 매개 변수와 같은 외부 데이터와의 연결을 구축하려는 경우 &lt;a href=&quot;#build_assoc/3&quot;&gt; &lt;code&gt;build_assoc/3&lt;/code&gt; &lt;/a&gt; 후에 &lt;a href=&quot;ecto.changeset#cast/3&quot;&gt; &lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt; 를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c33d234c4ff95f48de07c57959d603389ff704eb" translate="yes" xml:space="preserve">
          <source>The given channel is joined in a separate process which is linked to the test process.</source>
          <target state="translated">주어진 채널은 테스트 프로세스에 연결된 별도의 프로세스로 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="d4c5415cdd429b8d05fbc81af9046db394117d84" translate="yes" xml:space="preserve">
          <source>The given definition:</source>
          <target state="translated">주어진 정의 :</target>
        </trans-unit>
        <trans-unit id="7187a5e81ba59fd9a2b763b67226ecb68e6f3832" translate="yes" xml:space="preserve">
          <source>The given function is guaranteed to run inside the same transaction as the changeset operation for databases that do support transactions.</source>
          <target state="translated">주어진 기능은 트랜잭션을 지원하는 데이터베이스에 대한 변경 세트 작업과 동일한 트랜잭션 내에서 실행되도록 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="a573a08337f6f0cf025ec9ae17d9092603c49c35" translate="yes" xml:space="preserve">
          <source>The implementation of this callback should invoke &lt;code&gt;fun&lt;/code&gt; with the value under &lt;code&gt;key&lt;/code&gt; in the passed structure &lt;code&gt;data&lt;/code&gt;, or with &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not present in it. This function must return either &lt;code&gt;{get_value, update_value}&lt;/code&gt; or &lt;code&gt;:pop&lt;/code&gt;.</source>
          <target state="translated">이 콜백의 구현은 전달 된 구조 &lt;code&gt;data&lt;/code&gt; &lt;code&gt;key&lt;/code&gt; 아래 값을 사용 하거나 &lt;code&gt;key&lt;/code&gt; 가없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 사용하여 &lt;code&gt;fun&lt;/code&gt; 을 호출해야 합니다. 이 함수는 &lt;code&gt;{get_value, update_value}&lt;/code&gt; 또는 &lt;code&gt;:pop&lt;/code&gt; 을 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="897fcb552f1ed96e5b37d174da2e32ad713e210e" translate="yes" xml:space="preserve">
          <source>The internal reference to the session in the store</source>
          <target state="translated">상점의 세션에 대한 내부 참조</target>
        </trans-unit>
        <trans-unit id="2b0fb080dc23dfd38867594f47439c384bd3fe00" translate="yes" xml:space="preserve">
          <source>The internal reference to the session in the store.</source>
          <target state="translated">상점의 세션에 대한 내부 참조입니다.</target>
        </trans-unit>
        <trans-unit id="75c017e0096c8191807383c0ba159f9238866e0c" translate="yes" xml:space="preserve">
          <source>The issue is that we have no guarantees the channel has done processing our message after calling &lt;a href=&quot;#push/3&quot;&gt;&lt;code&gt;push/3&lt;/code&gt;&lt;/a&gt;. The best solution is to assert the channel sent us a reply before doing any other assertion. First change the channel to send replies:</source>
          <target state="translated">문제는 &lt;a href=&quot;#push/3&quot;&gt; &lt;code&gt;push/3&lt;/code&gt; 를&lt;/a&gt; 호출 한 후 채널이 메시지 처리를 완료했다는 보장이 없다는 것 입니다. 가장 좋은 해결책은 다른 주장을하기 전에 채널이 우리에게 답장을 보내도록 주장하는 것입니다. 먼저 회신을 보내도록 채널을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="bf259ab2dd0402461d9104f43dc12dcf9a9184fd" translate="yes" xml:space="preserve">
          <source>The key can be a string or an atom, where atoms are automatically converted to strings.</source>
          <target state="translated">키는 문자열 또는 원자 일 수 있으며, 여기서 원자는 자동으로 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="f429352c0b3be43a54afc592d7a8110f87f053dd" translate="yes" xml:space="preserve">
          <source>The key can be a string or an atom, where atoms are automatically converted to strings. Can only be invoked on unsent &lt;code&gt;conn&lt;/code&gt;s. Will raise otherwise.</source>
          <target state="translated">키는 문자열 또는 원자 일 수 있으며, 여기서 원자는 자동으로 문자열로 변환됩니다. 보내지 않은 &lt;code&gt;conn&lt;/code&gt; 에서만 호출 할 수 있습니다 . 그렇지 않으면 제기합니다.</target>
        </trans-unit>
        <trans-unit id="b090269894ef022087b95988c4c1c9ea6c329869" translate="yes" xml:space="preserve">
          <source>The key is the media type, the value is a list of formats the media type can be identified with. For example, by using &quot;json-api&quot;, you will be able to use templates with extension &quot;index.json-api&quot; or to force a particular format in a given URL by sending &quot;?_format=json-api&quot;.</source>
          <target state="translated">키는 미디어 유형이고 값은 미디어 유형을 식별 할 수있는 형식 목록입니다. 예를 들어 &quot;json-api&quot;를 사용하면 &quot;index.json-api&quot;확장자가있는 템플릿을 사용하거나 &quot;? _format = json-api&quot;를 전송하여 지정된 URL에서 특정 형식을 강제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4edcd6a27ee607492b3ce414639ce14b3b1badad" translate="yes" xml:space="preserve">
          <source>The key is the media type, the value is a list of formats the media type can be identified with. For example, by using &amp;ldquo;json-api&amp;rdquo;, you will be able to use templates with extension &amp;ldquo;index.json-api&amp;rdquo; or to force a particular format in a given URL by sending &amp;ldquo;?_format=json-api&amp;rdquo;.</source>
          <target state="translated">키는 미디어 유형이고 값은 미디어 유형을 식별 할 수있는 형식의 목록입니다. 예를 들어 &quot;json-api&quot;를 사용하면 확장자가 &quot;index.json-api&quot;인 템플릿을 사용하거나 &quot;? _format = json-api&quot;를 전송하여 지정된 URL에서 특정 형식을 강제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc9dd9b6fe649ecbe85232c591304bd2bcb8a124" translate="yes" xml:space="preserve">
          <source>The keys in the list are the names of fields, and the values are a validation associated with the field. A field may occur multiple times in the list.</source>
          <target state="translated">목록의 키는 필드 이름이며 값은 필드와 관련된 유효성 검사입니다. 목록에서 필드가 여러 번 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44118a922e99586055ff7e96b077e2626d08844b" translate="yes" xml:space="preserve">
          <source>The keys of the map will usually point to a resource ID. The value will contain a map with a &lt;code&gt;:metas&lt;/code&gt; key containing a list of metadata for each resource. Additionally, every metadata entry will contain a &lt;code&gt;:phx_ref&lt;/code&gt; key which can be used to uniquely identify metadata for a given key. In the event that the metadata was previously updated, a &lt;code&gt;:phx_ref_prev&lt;/code&gt; key will be present containing the previous &lt;code&gt;:phx_ref&lt;/code&gt; value.</source>
          <target state="translated">맵의 키는 일반적으로 리소스 ID를 가리 킵니다. 값에는 각 리소스의 메타 데이터 목록이 포함 된 &lt;code&gt;:metas&lt;/code&gt; 키 가있는 맵이 포함 됩니다. 또한 모든 메타 데이터 항목에는 주어진 키의 메타 데이터를 고유하게 식별하는 데 사용할 수 있는 &lt;code&gt;:phx_ref&lt;/code&gt; 키 가 포함 됩니다. 메타 데이터가 이전에 업데이트 된 경우 이전 &lt;code&gt;:phx_ref&lt;/code&gt; 값을 포함 하는 &lt;code&gt;:phx_ref_prev&lt;/code&gt; 키가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="3f06d5aeae7960e61046c9013e3025c273538aad" translate="yes" xml:space="preserve">
          <source>The keyword-based and pipe-based examples are equivalent. The downside of using macros is that the binding must be specified for every operation. However, since keyword-based and pipe-based examples are equivalent, the bindingless syntax also works for macros:</source>
          <target state="translated">키워드 기반 및 파이프 기반 예제는 동일합니다. 매크로 사용의 단점은 모든 작업에 대해 바인딩을 지정해야한다는 것입니다. 그러나 키워드 기반 및 파이프 기반 예제는 동일하므로 바인딩없는 구문은 매크로에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1f0f79f452d7d90593329a433992b7a7e7313371" translate="yes" xml:space="preserve">
          <source>The latter could also be bound to any &lt;code&gt;click&lt;/code&gt; event, but this way you can be sure your custom code is only executed when the code of &lt;code&gt;phoenix_html.js&lt;/code&gt; is run.</source>
          <target state="translated">후자는 &lt;code&gt;click&lt;/code&gt; 이벤트 에도 바인딩 될 수 있지만이 방법으로 &lt;code&gt;phoenix_html.js&lt;/code&gt; 코드가 실행될 때만 사용자 지정 코드가 실행되도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6744e96e72ecda721afea0237536fd66db392297" translate="yes" xml:space="preserve">
          <source>The layout must be a tuple, specifying the layout view and the layout name, or false. In case a previous layout is set, &lt;code&gt;put_layout&lt;/code&gt; also accepts the layout name to be given as a string or as an atom. If a string, it must contain the format. Passing an atom means the layout format will be found at rendering time, similar to the template in &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;. It can also be set to &lt;code&gt;false&lt;/code&gt;. In this case, no layout would be used.</source>
          <target state="translated">레이아웃은 레이아웃보기와 레이아웃 이름을 지정하는 튜플이거나 false입니다. 이전 레이아웃이 설정된 경우 &lt;code&gt;put_layout&lt;/code&gt; 은 레이아웃 이름을 문자열 또는 원자로 제공합니다. 문자열 인 경우 형식을 포함해야합니다. 아톰을 전달한다는 것은 &lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; 의 템플릿과 비슷한 렌더링 시간에 레이아웃 형식을 찾을 수 있음을 의미합니다 . &lt;code&gt;false&lt;/code&gt; 로 설정할 수도 있습니다 . 이 경우 레이아웃이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9089ed404a90b7ca8405732095979a8fb2093289" translate="yes" xml:space="preserve">
          <source>The list of supported values and their behaviour is described in &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt;. If the given value is not any of values listed there, it will raise.</source>
          <target state="translated">지원되는 값 및 해당 동작의 목록은 &lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; 에&lt;/a&gt; 설명되어 있습니다. 주어진 값이 여기에 나열된 값 중 하나가 아니면 올라갑니다.</target>
        </trans-unit>
        <trans-unit id="ba10fe778e8a0ac2bdeed5623f9f0c72f2e97b50" translate="yes" xml:space="preserve">
          <source>The location of the web files (controllers, views, templates, etc) in an umbrella application will vary based on the &lt;code&gt;:context_app&lt;/code&gt; config located in your applications &lt;code&gt;:generators&lt;/code&gt; configuration. When set, the Phoenix generators will generate web files directly in your lib and test folders since the application is assumed to be isolated to web specific functionality. If &lt;code&gt;:context_app&lt;/code&gt; is not set, the generators will place web related lib and test files in a &lt;code&gt;web/&lt;/code&gt; directory since the application is assumed to be handling both web and domain specific functionality. Example configuration:</source>
          <target state="translated">우산 형 응용 프로그램에서 웹 파일 (컨트롤러, 뷰, 템플릿 등)의 위치는 응용 프로그램 &lt;code&gt;:generators&lt;/code&gt; 구성 에있는 &lt;code&gt;:context_app&lt;/code&gt; 구성에 따라 다릅니다 . 설정하면 응용 프로그램이 웹별 기능과 분리되어 있다고 가정하므로 Phoenix 생성기는 lib 및 테스트 폴더에서 직접 웹 파일을 생성합니다. &lt;code&gt;:context_app&lt;/code&gt; 가 설정되지 않은 경우 , 애플리케이션은 웹 및 도메인 특정 기능을 모두 처리하는 것으로 가정되므로 생성기는 웹 관련 lib 및 테스트 파일을 &lt;code&gt;web/&lt;/code&gt; 디렉토리에 배치합니다. 구성 예 :</target>
        </trans-unit>
        <trans-unit id="5054ea19f1c0872ef56ffb5ac8d9cbaa2ee98017" translate="yes" xml:space="preserve">
          <source>The logger call won&amp;rsquo;t be removed at compile time as custom level is given.</source>
          <target state="translated">사용자 정의 수준이 주어지면 컴파일 타임에 로거 호출이 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="282bfec61ed3e63c6a621589fc9ff184bc2a5dc3" translate="yes" xml:space="preserve">
          <source>The long poll is configurable in your socket:</source>
          <target state="translated">긴 폴링은 소켓에서 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df55f8f757b374fd6d2aa5a71db086c2cfcd7c1d" translate="yes" xml:space="preserve">
          <source>The main responsibility of a view is to render a template.</source>
          <target state="translated">뷰의 주된 책임은 템플릿을 렌더링하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c3ad4277ebaf63c095045d7d65ae5d290329b067" translate="yes" xml:space="preserve">
          <source>The map type</source>
          <target state="translated">지도 유형</target>
        </trans-unit>
        <trans-unit id="fd10459a12af6703afd7079ef61598c3879b0473" translate="yes" xml:space="preserve">
          <source>The map type allows developers to store an Elixir map directly in the database:</source>
          <target state="translated">맵 유형을 통해 개발자는 데이터베이스에 직접 Elixir 맵을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="080be8664031b1a1bb94955949d3616301947b14" translate="yes" xml:space="preserve">
          <source>The mechanism for passing the token to the client is typically through a cookie, a JSON response body, or HTTP header. For now, assume the client has received a token it can use to validate requests for protected resources.</source>
          <target state="translated">토큰을 클라이언트에 전달하는 메커니즘은 일반적으로 쿠키, JSON 응답 본문 또는 HTTP 헤더를 통해 이루어집니다. 지금은 클라이언트가 보호 된 리소스에 대한 요청의 유효성을 검사하는 데 사용할 수있는 토큰을 받았다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="eb58fc9777d3607a5fbb10fc1f79ea8d98ec0269" translate="yes" xml:space="preserve">
          <source>The message format requires the following keys:</source>
          <target state="translated">메시지 형식에는 다음 키가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="52f5b43827ed9d61c35f578531a7d764f7e53199" translate="yes" xml:space="preserve">
          <source>The message is a term. It must return one of:</source>
          <target state="translated">메시지는 용어입니다. 다음 중 하나를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0b210dad451da94f2501a9d8d7e918aa3958400" translate="yes" xml:space="preserve">
          <source>The message is represented as &lt;code&gt;{payload, options}&lt;/code&gt;. It must return one of:</source>
          <target state="translated">메시지는 &lt;code&gt;{payload, options}&lt;/code&gt; 로 표시됩니다 . 다음 중 하나를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="8368bb195a36e75b24e3aa2abd88acdf1b5b819f" translate="yes" xml:space="preserve">
          <source>The metadata returned by the adapter &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">어댑터 &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; 에서 리턴 한 메타 데이터</target>
        </trans-unit>
        <trans-unit id="7b2acf0c1be2b4d18996e01c7970b3c30cc534ab" translate="yes" xml:space="preserve">
          <source>The metadata returned by the adapter &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어댑터 &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; 에서 리턴 한 메타 데이터 .</target>
        </trans-unit>
        <trans-unit id="70bfd62abd8739763f40ffef575496a5c549d630" translate="yes" xml:space="preserve">
          <source>The minimum value for &lt;code&gt;length&lt;/code&gt; is 32.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 의 최소값 은 32입니다.</target>
        </trans-unit>
        <trans-unit id="9634db4fa76e01e90a42b4c5e5f87e4ad4910fd5" translate="yes" xml:space="preserve">
          <source>The name of each operation does not have to be an atom. This can be particularly useful when you wish to update a collection of changesets at once, and track their errors individually:</source>
          <target state="translated">각 작업의 이름은 원자 일 필요는 없습니다. 변경 모음을 한 번에 업데이트하고 해당 오류를 개별적으로 추적하려는 경우에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8eacf623a28c1145f1b59317f4cbac89d904671a" translate="yes" xml:space="preserve">
          <source>The named helper can also be customized with the &lt;code&gt;:as&lt;/code&gt; option. Given the route:</source>
          <target state="translated">명명 된 도우미는 &lt;code&gt;:as&lt;/code&gt; 옵션 으로 사용자 지정할 수도 있습니다 . 주어진 경로 :</target>
        </trans-unit>
        <trans-unit id="ee9f556bb40887ceb71d128fe3a1686d36cd09f5" translate="yes" xml:space="preserve">
          <source>The only argument is the module name of the Presence tracker, which defaults to Presence.</source>
          <target state="translated">유일한 인수는 Presence 트래커의 모듈 이름이며 기본값은 Presence입니다.</target>
        </trans-unit>
        <trans-unit id="dd6daf265bd0ac4e906fd4bdd897c5919c6282da" translate="yes" xml:space="preserve">
          <source>The only downside is that it will show up as a fragment when inspecting the Elixir query. Other than that, it should be equivalent to a built-in Ecto query function.</source>
          <target state="translated">유일한 단점은 Elixir 쿼리를 검사 할 때 조각으로 표시된다는 것입니다. 그 외에는 내장 Ecto 쿼리 함수와 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f0266dcf90fe67afe6ef36bb73cebc07fd00eac" translate="yes" xml:space="preserve">
          <source>The options are passed to both &lt;code&gt;:http&lt;/code&gt; and &lt;code&gt;:https&lt;/code&gt; keys in the endpoint configuration. However, once you pass your custom dispatch options, you will need to manually wire all Phoenix endpoints, including the socket transports.</source>
          <target state="translated">옵션은 엔드 포인트 구성에서 &lt;code&gt;:http&lt;/code&gt; 및 &lt;code&gt;:https&lt;/code&gt; 키로 전달됩니다 . 그러나 사용자 정의 디스패치 옵션을 통과하면 소켓 전송을 포함하여 모든 Phoenix 엔드 포인트를 수동으로 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="f34a63fc2945e1d41d9507823f6312b0d54d5e85" translate="yes" xml:space="preserve">
          <source>The options are the same options given to &lt;code&gt;form_for/4&lt;/code&gt;. It can be used by implementations to configure their behaviour and it must be stored in the underlying struct, with any custom field removed.</source>
          <target state="translated">옵션은 &lt;code&gt;form_for/4&lt;/code&gt; 와 동일한 옵션 입니다. 구현에서 동작을 구성하는 데 사용할 수 있으며 사용자 정의 필드를 제거하고 기본 구조체에 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="e94a4b1ffacdefb101fda0c3d483575fb46108fe" translate="yes" xml:space="preserve">
          <source>The options are the same options given to &lt;code&gt;inputs_for/4&lt;/code&gt;. It can be used by implementations to configure their behaviour and it must be stored in the underlying struct, with any custom field removed.</source>
          <target state="translated">옵션은 &lt;code&gt;inputs_for/4&lt;/code&gt; 와 동일한 옵션 입니다. 구현에서 동작을 구성하는 데 사용할 수 있으며 사용자 정의 필드를 제거하고 기본 구조체에 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="cbbc72dee649cfd3da9099e3aaa4dd8de76df598" translate="yes" xml:space="preserve">
          <source>The options returned from this function will be given to &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#put/4&quot;&gt;&lt;code&gt;put/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#delete/3&quot;&gt;&lt;code&gt;delete/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수에서 리턴 된 옵션은 &lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#put/4&quot;&gt; &lt;code&gt;put/4&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#delete/3&quot;&gt; &lt;code&gt;delete/3&lt;/code&gt; 에 제공&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="d384613558e77407526f0c5fbfadcc4a059844a9" translate="yes" xml:space="preserve">
          <source>The options returned from this function will be given to &lt;code&gt;get/3&lt;/code&gt;, &lt;code&gt;put/4&lt;/code&gt; and &lt;code&gt;delete/3&lt;/code&gt;.</source>
          <target state="translated">이 함수에서 리턴 된 옵션은 &lt;code&gt;get/3&lt;/code&gt; , &lt;code&gt;put/4&lt;/code&gt; 및 &lt;code&gt;delete/3&lt;/code&gt; 에 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="f06bf866fed12855453f8d5f135a5f4e72431100" translate="yes" xml:space="preserve">
          <source>The other fields are merged with the following criteria:</source>
          <target state="translated">다른 필드는 다음 기준과 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="3462b00b6bda12e1014b4b6dc443fa44ae87853c" translate="yes" xml:space="preserve">
          <source>The other validators simply take a value:</source>
          <target state="translated">다른 유효성 검사기는 단순히 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="161c387bc2cd3fea40fa9d1d48103ca6f80cdb4b" translate="yes" xml:space="preserve">
          <source>The output folder will contain:</source>
          <target state="translated">출력 폴더에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f4662009e29483d0cc5077d2eabc424cdf07a6d6" translate="yes" xml:space="preserve">
          <source>The parameters for the given association will be retrieved from &lt;code&gt;changeset.params&lt;/code&gt;. Those parameters are expected to be a map with attributes, similar to the ones passed to &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt;. Once parameters are retrieved, &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt; will match those parameters with the associations already in the changeset record.</source>
          <target state="translated">주어진 연관에 대한 매개 변수는 &lt;code&gt;changeset.params&lt;/code&gt; 에서 검색됩니다 . 이러한 매개 변수는 &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; 에&lt;/a&gt; 전달 된 매개 변수와 유사한 속성이있는 맵이어야합니다 . 매개 변수가 검색되면 &lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt; 는 해당 매개 변수를 변경 세트 레코드에 이미있는 연관과 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="f162dc3980f9534481973a5e2f3a8df458b6c531" translate="yes" xml:space="preserve">
          <source>The parameters for the given embed will be retrieved from &lt;code&gt;changeset.params&lt;/code&gt;. Those parameters are expected to be a map with attributes, similar to the ones passed to &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt;. Once parameters are retrieved, &lt;a href=&quot;#cast_embed/3&quot;&gt;&lt;code&gt;cast_embed/3&lt;/code&gt;&lt;/a&gt; will match those parameters with the embeds already in the changeset record. See &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt; for an example of working with casts and associations which would also apply for embeds.</source>
          <target state="translated">지정된 포함에 대한 매개 변수는 &lt;code&gt;changeset.params&lt;/code&gt; 에서 검색됩니다 . 이러한 매개 변수는 &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; 에&lt;/a&gt; 전달 된 매개 변수와 유사한 속성이있는 맵이어야합니다 . 매개 변수가 검색되면 &lt;a href=&quot;#cast_embed/3&quot;&gt; &lt;code&gt;cast_embed/3&lt;/code&gt; &lt;/a&gt; 는 해당 매개 변수를 이미 변경 세트 레코드에 포함 된 임베드와 일치시킵니다. 임베드에도 적용되는 캐스트 및 연관 작업에 대한 예제는 &lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6d9d95ae05eb4ab7374f78f148d8ced664f6b15" translate="yes" xml:space="preserve">
          <source>The path will be retrieved from the currently requested path via &lt;a href=&quot;#current_path/1&quot;&gt;&lt;code&gt;current_path/1&lt;/code&gt;&lt;/a&gt;. The scheme, host and others will be received from the URL configuration in your Phoenix endpoint. The reason we don't use the host and scheme information in the request is because most applications are behind proxies and the host and scheme may not actually reflect the host and scheme accessed by the client. If you want to access the url precisely as requested by the client, see &lt;a href=&quot;../plug/plug.conn#request_url/1&quot;&gt;&lt;code&gt;Plug.Conn.request_url/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경로는 &lt;a href=&quot;#current_path/1&quot;&gt; &lt;code&gt;current_path/1&lt;/code&gt; 을&lt;/a&gt; 통해 현재 요청 된 경로에서 검색됩니다 . 스키마, 호스트 및 기타는 Phoenix 엔드 포인트의 URL 구성에서 수신됩니다. 요청에서 호스트 및 체계 정보를 사용하지 않는 이유는 대부분의 응용 프로그램이 프록시 뒤에 있고 호스트 및 체계가 클라이언트가 액세스하는 호스트 및 체계를 실제로 반영하지 않을 수 있기 때문입니다. 클라이언트가 요청한대로 URL에 정확하게 액세스하려면 &lt;a href=&quot;../plug/plug.conn#request_url/1&quot;&gt; &lt;code&gt;Plug.Conn.request_url/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8461b08dd0b39472d6e7cab05d0df7c89d7a56a5" translate="yes" xml:space="preserve">
          <source>The plug specification.</source>
          <target state="translated">플러그 사양.</target>
        </trans-unit>
        <trans-unit id="43d162b21236b659adf8d5bf3af141f3266eea3d" translate="yes" xml:space="preserve">
          <source>The preferred form is to use &lt;code&gt;:from&lt;/code&gt; with an atom or tuple, since it will make your application independent from the starting directory. For example, if you pass:</source>
          <target state="translated">선호되는 형식은 &lt;code&gt;:from&lt;/code&gt; 을 원자 또는 튜플과 함께 사용 하는 것입니다. 응용 프로그램이 시작 디렉토리와 독립적이되기 때문입니다. 예를 들어, 다음을 통과하면 :</target>
        </trans-unit>
        <trans-unit id="50998ebe5bad0757359a407f8ec8b122a3958b71" translate="yes" xml:space="preserve">
          <source>The prefixes set in the query will be preserved when loading data.</source>
          <target state="translated">쿼리에 설정된 접두사는 데이터를로드 할 때 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="1526ebdce848190098bcbfdfb625b2e2ecb877e8" translate="yes" xml:space="preserve">
          <source>The presence information is returned as a map with presences grouped by key, cast as a string, and accumulated metadata, with the following form:</source>
          <target state="translated">프레즌스 정보는 다음과 같은 형식으로 프레즌스를 키별로 그룹화하고 문자열로 캐스트하며 메타 데이터를 누적 한 맵으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8e1834c7ca0296001b89ac9864e746de523a9361" translate="yes" xml:space="preserve">
          <source>The primary key will be automatically included in &lt;code&gt;returning&lt;/code&gt; if the field has type &lt;code&gt;:id&lt;/code&gt; or &lt;code&gt;:binary_id&lt;/code&gt; and no value was set by the developer or none was autogenerated by the adapter.</source>
          <target state="translated">필드의 유형이 &lt;code&gt;:id&lt;/code&gt; 또는 &lt;code&gt;:binary_id&lt;/code&gt; 이고 개발자가 값을 설정하지 않았거나 어댑터가 자동 생성 한 것이없는 경우 기본 키가 &lt;code&gt;returning&lt;/code&gt; 자동으로 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2afcc11c269b0c54b1b7ac0efcd7b569f223f2f" translate="yes" xml:space="preserve">
          <source>The primitive types are:</source>
          <target state="translated">기본 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5475cd442271dc875207326bb4064eeb96befb25" translate="yes" xml:space="preserve">
          <source>The problem with this approach is that it breaks references in the database. You can&amp;rsquo;t use foreign keys and it is very inefficient, both in terms of query time and storage.</source>
          <target state="translated">이 방법의 문제점은 데이터베이스에서 참조를 손상 시킨다는 것입니다. 외래 키를 사용할 수 없으며 쿼리 시간과 스토리지 측면에서 매우 비효율적입니다.</target>
        </trans-unit>
        <trans-unit id="7a3a4c7f6a78c9326c8ef25ce0f6c69a3f78f0d2" translate="yes" xml:space="preserve">
          <source>The problem with this approach is that it breaks references in the database. You can't use foreign keys and it is very inefficient, both in terms of query time and storage.</source>
          <target state="translated">이 접근 방식의 문제점은 데이터베이스에서 참조를 분리한다는 것입니다. 외래 키를 사용할 수 없으며 쿼리 시간과 스토리지 측면에서 매우 비효율적입니다.</target>
        </trans-unit>
        <trans-unit id="8d89d344e6a03d17bab84b370769a6045fb37ec3" translate="yes" xml:space="preserve">
          <source>The public fields are:</source>
          <target state="translated">퍼블릭 필드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="df908dd7366c676a05daf0e41f416b8dbf39971e" translate="yes" xml:space="preserve">
          <source>The query above will select all posts with category &quot;fresh and new&quot;, order by the most recently published, and return Post structs with only the id, title and body fields set. It is equivalent to:</source>
          <target state="translated">위의 쿼리는 &quot;신규 및 새&quot;카테고리의 모든 게시물을 선택하고 가장 최근에 게시 된 순서로 정렬하며 ID, 제목 및 본문 필드 만 설정된 게시물 구조를 반환합니다. 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="eff2eebe90fad772cf88b9e84a74f0fcaf7b64c1" translate="yes" xml:space="preserve">
          <source>The query above will select all posts with category &amp;ldquo;fresh and new&amp;rdquo;, order by the most recently published, and return Post structs with only the id, title and body fields set. It is equivalent to:</source>
          <target state="translated">위의 쿼리는 &quot;fresh and new&quot;범주를 가진 모든 게시물을 가장 최근에 게시 한 순서대로 선택하고 id, title 및 body 필드 만 설정된 Post 구조체를 반환합니다. 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="95ca27e8b5eba197d23e18f17cf9ec5d46b73887" translate="yes" xml:space="preserve">
          <source>The query can be also rewritten as:</source>
          <target state="translated">쿼리는 다음과 같이 다시 작성할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0868e0ab6d1da07933f0f38d5ca3b2c0b98ed62" translate="yes" xml:space="preserve">
          <source>The query given to preload may also preload its own associations.</source>
          <target state="translated">사전로드에 제공된 조회는 자체 연관을 사전로드 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f6733486c5b72fc457e7eabc6d95cf5b2c0075a" translate="yes" xml:space="preserve">
          <source>The query ordering will be automatically reversed, with ASC columns becoming DESC columns (and vice-versa) and limit is set to 1. If there is no ordering, the query will be automatically ordered decreasingly by primary key.</source>
          <target state="translated">ASC 열이 DESC 열이되고 (그 반대의 경우도) 쿼리 순서가 자동으로 역전되며 제한이 1로 설정됩니다. 순서가 없으면 기본 키를 통해 쿼리가 자동으로 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="0bac158f3c93347932c98c42dee10fb98d800771" translate="yes" xml:space="preserve">
          <source>The query prefix may be set either for the whole query or on each individual &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; expression. If a &lt;code&gt;prefix&lt;/code&gt; is not given to a &lt;code&gt;from&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;, the prefix of the schema given to the &lt;code&gt;from&lt;/code&gt; or &lt;code&gt;join&lt;/code&gt; is used. The query prefix is used only if none of the above are declared.</source>
          <target state="translated">쿼리 접두사는 전체 쿼리 또는 각 개별 &lt;code&gt;from&lt;/code&gt; 및 &lt;code&gt;join&lt;/code&gt; 식 에 설정 될 수 있습니다 . 경우 &lt;code&gt;prefix&lt;/code&gt; A를 주어지지 &lt;code&gt;from&lt;/code&gt; 또는이 &lt;code&gt;join&lt;/code&gt; , 스키마의 접두사는 부여 &lt;code&gt;from&lt;/code&gt; 또는 &lt;code&gt;join&lt;/code&gt; 사용된다. 쿼리 접두사는 위의 어느 것도 선언되지 않은 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bbd403c978b262ae86cb591bfb4e43647aaa3204" translate="yes" xml:space="preserve">
          <source>The query will be automatically ordered by the primary key unless &lt;code&gt;order_by&lt;/code&gt; is given or &lt;code&gt;order_by&lt;/code&gt; is set in the query. Limit is always set to 1.</source>
          <target state="translated">&lt;code&gt;order_by&lt;/code&gt; 가 제공되거나 &lt;code&gt;order_by&lt;/code&gt; 가 쿼리에 설정되어 있지 않으면 기본 키에 의해 쿼리가 자동으로 정렬됩니다 . 한계는 항상 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="6cfdedb0bfaec211bb278c06c452d42b9de504d0" translate="yes" xml:space="preserve">
          <source>The reason why the example above is wrong is because &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt; always works with the &lt;strong&gt;full data&lt;/strong&gt;. So the example above will effectively &lt;strong&gt;erase all previous comments&lt;/strong&gt; and only keep the comment you are currently adding. Instead, you could try:</source>
          <target state="translated">위의 예제가 잘못된 이유는 &lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; 가&lt;/a&gt; 항상 &lt;strong&gt;전체 데이터&lt;/strong&gt; 와 함께 작동 하기 때문 입니다. 따라서 위의 예는 &lt;strong&gt;이전의 모든 주석을&lt;/strong&gt; 효과적으로 &lt;strong&gt;지우고&lt;/strong&gt; 현재 추가중인 주석 만 유지합니다. 대신 시도해 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87305add73fb47f8d721c5faef9fcb8523b1a68e" translate="yes" xml:space="preserve">
          <source>The remaining functions in this module, such as validations, constraints, association handling, are about manipulating changesets. Let&amp;rsquo;s discuss some of this extra functionality.</source>
          <target state="translated">유효성 검증, 제한 조건, 연관 처리와 같은이 모듈의 나머지 기능은 변경 세트 조작에 관한 것입니다. 이 추가 기능 중 일부에 대해 설명하겠습니다.</target>
        </trans-unit>
        <trans-unit id="2a63cf0d6104e4fb432f90b5c23167e7813b2aa2" translate="yes" xml:space="preserve">
          <source>The remaining functions in this module, such as validations, constraints, association handling, are about manipulating changesets. Let's discuss some of this extra functionality.</source>
          <target state="translated">유효성 검사, 제약 조건, 연관 처리와 같은이 모듈의 나머지 기능은 변경 집합을 조작하는 것입니다. 이 추가 기능에 대해 설명하겠습니다.</target>
        </trans-unit>
        <trans-unit id="8a0133540c725182eeb9cebba83044fb36adb332" translate="yes" xml:space="preserve">
          <source>The repositories to create are the ones specified under the &lt;code&gt;:ecto_repos&lt;/code&gt; option in the current app configuration. However, if the &lt;code&gt;-r&lt;/code&gt; option is given, it replaces the &lt;code&gt;:ecto_repos&lt;/code&gt; config.</source>
          <target state="translated">만들 리포지토리 는 현재 앱 구성 의 &lt;code&gt;:ecto_repos&lt;/code&gt; 옵션에 지정된 리포지토리 입니다. 그러나 &lt;code&gt;-r&lt;/code&gt; 옵션이 제공되면 &lt;code&gt;:ecto_repos&lt;/code&gt; 구성을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="40dd881afbf4316e3498baa3ef462026d3e04aaa" translate="yes" xml:space="preserve">
          <source>The repositories to drop are the ones specified under the &lt;code&gt;:ecto_repos&lt;/code&gt; option in the current app configuration. However, if the &lt;code&gt;-r&lt;/code&gt; option is given, it replaces the &lt;code&gt;:ecto_repos&lt;/code&gt; config.</source>
          <target state="translated">제거 할 리포지토리 는 현재 앱 구성 의 &lt;code&gt;:ecto_repos&lt;/code&gt; 옵션에 지정된 리포지토리 입니다. 그러나 &lt;code&gt;-r&lt;/code&gt; 옵션이 제공되면 &lt;code&gt;:ecto_repos&lt;/code&gt; 구성을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="01f05ddc7ae85e61bdf357b4f9fe87ebe2fb186e" translate="yes" xml:space="preserve">
          <source>The repository will be placed in the &lt;code&gt;lib&lt;/code&gt; directory.</source>
          <target state="translated">저장소는 &lt;code&gt;lib&lt;/code&gt; 디렉토리에 배치됩니다 .</target>
        </trans-unit>
        <trans-unit id="fed09d1158b42d77503d7a48e9346028a907f505" translate="yes" xml:space="preserve">
          <source>The request &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; are required arguments. &lt;code&gt;method&lt;/code&gt; may be any value that implements &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt;&lt;code&gt;to_string/1&lt;/code&gt;&lt;/a&gt; and it will properly converted and normalized (e.g., &lt;code&gt;:get&lt;/code&gt; or &lt;code&gt;&quot;post&quot;&lt;/code&gt;).</source>
          <target state="translated">요청 &lt;code&gt;method&lt;/code&gt; 및 &lt;code&gt;path&lt;/code&gt; 는 필수 인수입니다. &lt;code&gt;method&lt;/code&gt; 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt; &lt;code&gt;to_string/1&lt;/code&gt; &lt;/a&gt; 을 구현하는 모든 값일 수 있으며 올바르게 변환 및 정규화됩니다 (예 &lt;code&gt;:get&lt;/code&gt; 또는 &lt;code&gt;&quot;post&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e6553aee7958eb204e762483dc8ab5a0161d11fe" translate="yes" xml:space="preserve">
          <source>The request id is added to the Logger metadata as &lt;code&gt;:request_id&lt;/code&gt; and the response as the &quot;x-request-id&quot; HTTP header. To see the request id in your log output, configure your logger backends to include the &lt;code&gt;:request_id&lt;/code&gt; metadata:</source>
          <target state="translated">요청 ID는 Logger 메타 데이터에 &lt;code&gt;:request_id&lt;/code&gt; 로 추가되고 응답은 &quot;x-request-id&quot;HTTP 헤더로 추가됩니다. 로그 출력에서 ​​요청 ID를 보려면 &lt;code&gt;:request_id&lt;/code&gt; 메타 데이터 를 포함하도록 로거 백엔드를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c5f074e9b5c412ad29dd19562310620770be9f5" translate="yes" xml:space="preserve">
          <source>The request id is added to the Logger metadata as &lt;code&gt;:request_id&lt;/code&gt; and the response as the &amp;ldquo;x-request-id&amp;rdquo; HTTP header. To see the request id in your log output, configure your logger backends to include the &lt;code&gt;:request_id&lt;/code&gt; metadata:</source>
          <target state="translated">요청 ID는 Logger 메타 데이터에 &lt;code&gt;:request_id&lt;/code&gt; 로 추가되고 응답은&amp;ldquo;x-request-id&amp;rdquo;HTTP 헤더로 추가됩니다. 로그 출력에서 ​​요청 ID를 보려면 &lt;code&gt;:request_id&lt;/code&gt; 메타 데이터 를 포함하도록 로거 백엔드를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb1a8693dbf7be806d104c7fe770e40145397d5f" translate="yes" xml:space="preserve">
          <source>The request information in these fields is not populated until it is fetched using the associated &lt;code&gt;fetch_&lt;/code&gt; function. For example, the &lt;code&gt;cookies&lt;/code&gt; field uses &lt;a href=&quot;#fetch_cookies/2&quot;&gt;&lt;code&gt;fetch_cookies/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 필드의 요청 정보는 연관된 &lt;code&gt;fetch_&lt;/code&gt; 함수를 사용하여 페치 될 때까지 채워지지 않습니다 . 예를 들어, &lt;code&gt;cookies&lt;/code&gt; 필드는 &lt;a href=&quot;#fetch_cookies/2&quot;&gt; &lt;code&gt;fetch_cookies/2&lt;/code&gt; 를 사용&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="42d5b6701eebdfc545f5a296c3ed4d4a66bb5d50" translate="yes" xml:space="preserve">
          <source>The request will not be processed due to a client error.</source>
          <target state="translated">클라이언트 오류로 인해 요청이 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ca366dc222472a65071107117c79a6d7bda94b4" translate="yes" xml:space="preserve">
          <source>The resource fields are given using &lt;code&gt;name:type&lt;/code&gt; syntax where type are the types supported by Ecto. Omitting the type makes it default to &lt;code&gt;:string&lt;/code&gt;:</source>
          <target state="translated">자원 필드는 &lt;code&gt;name:type&lt;/code&gt; 구문을 사용하여 제공됩니다 . 여기서 type은 Ecto에서 지원하는 유형입니다. 유형을 생략하면 기본값은 &lt;code&gt;:string&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1097b0ddcaad963de9fecf51f90f2b6fa20570d6" translate="yes" xml:space="preserve">
          <source>The response will be sent with the status code defined within the connection, via &lt;a href=&quot;../plug/plug.conn#put_status/2&quot;&gt;&lt;code&gt;Plug.Conn.put_status/2&lt;/code&gt;&lt;/a&gt;. If no status code is set, a 302 response is sent.</source>
          <target state="translated">응답은 &lt;a href=&quot;../plug/plug.conn#put_status/2&quot;&gt; &lt;code&gt;Plug.Conn.put_status/2&lt;/code&gt; &lt;/a&gt; 를 통해 연결 내에 정의 된 상태 코드와 함께 전송됩니다 . 상태 코드가 설정되지 않은 경우 302 응답이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="cde9dc4c4422fde222d1887d84b0d0b8e0065c5e" translate="yes" xml:space="preserve">
          <source>The result returned by &lt;code&gt;init/1&lt;/code&gt; is passed as second argument to &lt;code&gt;call/2&lt;/code&gt;. Note that &lt;code&gt;init/1&lt;/code&gt; may be called during compilation and as such it must not return pids, ports or values that are not specific to the runtime.</source>
          <target state="translated">&lt;code&gt;init/1&lt;/code&gt; 에 의해 리턴 된 결과는 두 번째 인수로 &lt;code&gt;call/2&lt;/code&gt; 에 전달됩니다 . 참고 &lt;code&gt;init/1&lt;/code&gt; 컴파일 호출 할 수와 같은가 런타임에 특정하지 않은 PID를, 포트 또는 값을 반환하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c468a501cc213c281f4ebc6e80d77300fb92019e" translate="yes" xml:space="preserve">
          <source>The return value of each &amp;ldquo;before&amp;rdquo; event callback will be stored and passed to the corresponding &amp;ldquo;after&amp;rdquo; callback.</source>
          <target state="translated">각 &quot;이전&quot;이벤트 콜백의 반환 값이 저장되고 해당 &quot;이후&quot;콜백으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="bdebdedcaeb020e5415f8353d03e0b77bd7af755" translate="yes" xml:space="preserve">
          <source>The returned result is given to &lt;code&gt;execute/6&lt;/code&gt;.</source>
          <target state="translated">반환 된 결과는 &lt;code&gt;execute/6&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="aa37f4a12198ad1c63cc6b2c6592271817c66fee" translate="yes" xml:space="preserve">
          <source>The right side may either be a list, a literal list or even a column in the database with array type:</source>
          <target state="translated">오른쪽은 목록, 리터럴 목록 또는 배열 유형을 가진 데이터베이스의 열일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="152177e9ac83ea80f027842928a7dd7f74f8ab54" translate="yes" xml:space="preserve">
          <source>The route above will dispatch to &lt;code&gt;MyApp.PageController&lt;/code&gt;. This syntax is not only convenient for developers, since we don&amp;rsquo;t have to repeat the &lt;code&gt;MyApp.&lt;/code&gt; prefix on all routes, but it also allows Phoenix to put less pressure in the Elixir compiler. If instead we had written:</source>
          <target state="translated">위의 경로는 &lt;code&gt;MyApp.PageController&lt;/code&gt; 로 전달됩니다 . 이 구문은 &lt;code&gt;MyApp.&lt;/code&gt; 을 반복 할 필요가 없으므로 개발자에게 편리 할뿐만 아니라 편리합니다 . 모든 경로에 접두사를 추가하지만 Phoenix가 Elixir 컴파일러에 부담을 덜 줄 수 있습니다. 대신에 우리는 다음과 같이 썼다.</target>
        </trans-unit>
        <trans-unit id="65e16ececbb9266a02583f54b94cf09861ee56a7" translate="yes" xml:space="preserve">
          <source>The route above will dispatch to &lt;code&gt;MyAppWeb.PageController&lt;/code&gt;. This syntax is not only convenient for developers, since we don't have to repeat the &lt;code&gt;MyAppWeb.&lt;/code&gt; prefix on all routes, but it also allows Phoenix to put less pressure on the Elixir compiler. If instead we had written:</source>
          <target state="translated">위의 경로는 &lt;code&gt;MyAppWeb.PageController&lt;/code&gt; 로 전달됩니다 . 이 구문은 &lt;code&gt;MyAppWeb.&lt;/code&gt; 을 반복 할 필요가 없기 때문에 개발자에게만 편리하지 않습니다 . 모든 경로에 접두사를 붙이지 만 Phoenix는 Elixir 컴파일러에 부담을 덜어줍니다. 대신 우리가 다음과 같이 썼다면 :</target>
        </trans-unit>
        <trans-unit id="49ffcfff6909dca94a4eae307d1f02ebefe5118b" translate="yes" xml:space="preserve">
          <source>The route can dispatch either to a function body or a Plug module.</source>
          <target state="translated">라우트는 함수 본문 또는 플러그 모듈로 디스패치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2939bacf3d39ca96536e1c8b322db4114aa2c1fe" translate="yes" xml:space="preserve">
          <source>The route:</source>
          <target state="translated">경로:</target>
        </trans-unit>
        <trans-unit id="b92d4396a601bd78f5174bee334d0b156a731866" translate="yes" xml:space="preserve">
          <source>The router emits the following telemetry events:</source>
          <target state="translated">라우터는 다음과 같은 원격 분석 이벤트를 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="5e68c3ae1fbcab887151d89b16d2cba345f34fa8" translate="yes" xml:space="preserve">
          <source>The router is itself a plug, which means it can be invoked as:</source>
          <target state="translated">라우터 자체는 플러그이므로 다음과 같이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a54219a575937cd1ecc7766ae2a1627937d5863d" translate="yes" xml:space="preserve">
          <source>The router provides a set of macros for generating routes that dispatch to specific controllers and actions. Those macros are named after HTTP verbs. For example:</source>
          <target state="translated">라우터는 특정 컨트롤러 및 작업으로 디스패치하는 경로를 생성하기위한 매크로 세트를 제공합니다. 이러한 매크로는 HTTP 동사의 이름을 따서 명명됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="49855ec648da9ffc07970ba4da5777bc9db4c4b3" translate="yes" xml:space="preserve">
          <source>The same event callback is called again, this time with the atom &lt;code&gt;:stop&lt;/code&gt; as the first argument; see the &amp;ldquo;After clause&amp;rdquo; section below.</source>
          <target state="translated">같은 이벤트 콜백이 다시 호출됩니다. 이번에는 atom &lt;code&gt;:stop&lt;/code&gt; 을 첫 번째 인수로 사용합니다. 아래의 &quot;후 절&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="65de666ef1e1e220f9c0d9372a51d104406e67a1" translate="yes" xml:space="preserve">
          <source>The schema also allows us to interact with a repository:</source>
          <target state="translated">스키마를 통해 저장소와 상호 작용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc68d1c060a62f551303cd6da271796006c2c527" translate="yes" xml:space="preserve">
          <source>The schema can be of any value. The path represents the database name while options are simply merged in.</source>
          <target state="translated">스키마는 임의의 값을 가질 수 있습니다. 경로는 데이터베이스 이름을 나타내며 옵션은 단순히 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="f4534f8ae409e6a396fbbf9dca42834fd3a4a272" translate="yes" xml:space="preserve">
          <source>The schema is responsible for mapping the database fields into an Elixir struct.</source>
          <target state="translated">스키마는 데이터베이스 필드를 Elixir 구조체에 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="f2c63087f504426ce8dc15eb5b941125dcbaa4ed" translate="yes" xml:space="preserve">
          <source>The schema is responsible for mapping the database fields into an Elixir struct. It is followed by an optional list of attributes, with their respective names and types. See &lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt;&lt;code&gt;mix phx.gen.schema&lt;/code&gt;&lt;/a&gt; for more information on attributes.</source>
          <target state="translated">스키마는 데이터베이스 필드를 Elixir 구조체로 매핑하는 역할을합니다. 그 다음에는 각각의 이름과 유형이있는 선택적 속성 목록이 나옵니다. 속성에 대한 자세한 정보는 &lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt; &lt;code&gt;mix phx.gen.schema&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e857c9bd7068c28cafcac14000408ae312ea8b02" translate="yes" xml:space="preserve">
          <source>The schema module can be defined inline in the parent schema in simple cases:</source>
          <target state="translated">스키마 모듈은 간단한 경우에 상위 스키마에서 인라인으로 정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35b62780b2378828f2f7ab21b8fde93c07ed6f06" translate="yes" xml:space="preserve">
          <source>The second and third argument that each event callback takes depends on the callback being an &amp;ldquo;after&amp;rdquo; or a &amp;ldquo;before&amp;rdquo; callback i.e. it depends on the value of the first argument, &lt;code&gt;:start&lt;/code&gt; or &lt;code&gt;:stop&lt;/code&gt;. For this reason, most of the time you will want to define (at least) two separate clauses for each event callback, one for the &amp;ldquo;before&amp;rdquo; and one for the &amp;ldquo;after&amp;rdquo; callbacks.</source>
          <target state="translated">각 이벤트 콜백이 취하는 두 번째 및 세 번째 인수는 콜백이 &quot;after&quot;또는 &quot;before&quot;콜백인지에 따라 달라집니다. 즉, 첫 번째 인수 &lt;code&gt;:start&lt;/code&gt; 또는 &lt;code&gt;:stop&lt;/code&gt; 의 값에 따라 다릅니다 . 이러한 이유로, 대부분의 경우 각 이벤트 콜백에 대해 각각 &quot;전&quot;과 &quot;후&quot;콜백에 대해 두 개의 별도 절을 정의하려고합니다.</target>
        </trans-unit>
        <trans-unit id="8e57d6963dd7d705a901c4d4e7c1eb9745bf3c6f" translate="yes" xml:space="preserve">
          <source>The second argument &lt;code&gt;data&lt;/code&gt; specifies fields and values that are to be loaded. It can be a map, a keyword list, or a &lt;code&gt;{fields, values}&lt;/code&gt; tuple. Fields can be atoms or strings.</source>
          <target state="translated">두 번째 인수 &lt;code&gt;data&lt;/code&gt; 는로드 할 필드와 값을 지정합니다. 맵, 키워드 목록 또는 &lt;code&gt;{fields, values}&lt;/code&gt; 튜플 일 수 있습니다. 필드는 원자 또는 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bdda78bcfbc0f79c0c506943ef025fc56fbcad4" translate="yes" xml:space="preserve">
          <source>The second argument is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;cryptographic salt&lt;/a&gt; which must be the same in both calls to &lt;a href=&quot;#sign/4&quot;&gt;&lt;code&gt;sign/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#verify/4&quot;&gt;&lt;code&gt;verify/4&lt;/code&gt;&lt;/a&gt;. For instance, it may be called &quot;user auth&quot; and treated as namespace when generating a token that will be used to authenticate users on channels or on your APIs.</source>
          <target state="translated">두 번째 인수는 &lt;a href=&quot;#sign/4&quot;&gt; &lt;code&gt;sign/4&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#verify/4&quot;&gt; &lt;code&gt;verify/4&lt;/code&gt; &lt;/a&gt; 에 대한 두 호출 모두에서 동일해야하는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;암호화 솔트&lt;/a&gt; 입니다 . 예를 들어, 채널이나 API에서 사용자를 인증하는 데 사용할 토큰을 생성 할 때 &quot;사용자 인증&quot;이라고하며 네임 스페이스로 처리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bbd999bbec42a3e7fb283772187deec6149dcdd" translate="yes" xml:space="preserve">
          <source>The second argument is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;cryptographic salt&lt;/a&gt; which must be the same in both calls to &lt;a href=&quot;#sign/4&quot;&gt;&lt;code&gt;sign/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#verify/4&quot;&gt;&lt;code&gt;verify/4&lt;/code&gt;&lt;/a&gt;. For instance, it may be called &amp;ldquo;user auth&amp;rdquo; when generating a token that will be used to authenticate users on channels or on your APIs.</source>
          <target state="translated">두 번째 인수는 &lt;a href=&quot;#sign/4&quot;&gt; &lt;code&gt;sign/4&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#verify/4&quot;&gt; &lt;code&gt;verify/4&lt;/code&gt; &lt;/a&gt; 호출 모두에서 동일해야하는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;암호화 소금&lt;/a&gt; 입니다 . 예를 들어, 채널 또는 API에서 사용자를 인증하는 데 사용될 토큰을 생성 할 때이를 &quot;사용자 인증&quot;이라고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0127918dc247714fd5e025d35570e68dd2593e39" translate="yes" xml:space="preserve">
          <source>The second argument is the repository configuration as stored in the application environment. It must return &lt;code&gt;{:ok, keyword}&lt;/code&gt; with the updated list of configuration or &lt;code&gt;:ignore&lt;/code&gt; (only in the &lt;code&gt;:supervisor&lt;/code&gt; case).</source>
          <target state="translated">두 번째 인수는 애플리케이션 환경에 저장된 저장소 구성입니다. 업데이트 된 구성 목록 또는 &lt;code&gt;:ignore&lt;/code&gt; ( &lt;code&gt;:supervisor&lt;/code&gt; 경우 에만) 와 함께 &lt;code&gt;{:ok, keyword}&lt;/code&gt; 를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8ca2c1c0ef1b8f7a6c12e80c16925947b70511e2" translate="yes" xml:space="preserve">
          <source>The second argument must be &lt;code&gt;{:binary, contents}&lt;/code&gt;, where &lt;code&gt;contents&lt;/code&gt; will be sent as download, or&lt;code&gt;{:file, path}&lt;/code&gt;, where &lt;code&gt;path&lt;/code&gt; is the filesystem location of the file to be sent. Be careful to not interpolate the path from external parameters, as it could allow traversal of the filesystem.</source>
          <target state="translated">두 번째 인수는 &lt;code&gt;{:binary, contents}&lt;/code&gt; (여기서 &lt;code&gt;contents&lt;/code&gt; 는 다운로드로 전송 됨) 또는 &lt;code&gt;{:file, path}&lt;/code&gt; (여기서 &lt;code&gt;path&lt;/code&gt; 는 전송 될 파일의 ​​파일 시스템 위치) 여야합니다. 파일 시스템의 통과를 허용 할 수 있으므로 외부 매개 변수의 경로를 보간하지 않도록주의하십시오.</target>
        </trans-unit>
        <trans-unit id="7f2d03f9984f042abc33381531414bedeec9588a" translate="yes" xml:space="preserve">
          <source>The serializer &lt;code&gt;decode!&lt;/code&gt; function must return a &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; which is forwarded to channels except:</source>
          <target state="translated">직렬 변환기 &lt;code&gt;decode!&lt;/code&gt; 함수는 다음을 제외하고 채널로 전달 되는 &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; 를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d1d3f623b2642c248a3d2a66503afa329aff8fe9" translate="yes" xml:space="preserve">
          <source>The server may send messages or replies back. For messages, the ref uniquely identifies the message. For replies, the ref matches the original message. Both data-types also include a join_ref that uniquely identifies the currently joined channel.</source>
          <target state="translated">서버는 메시지를 보내거나 회신 할 수 있습니다. 메시지의 경우 ref는 메시지를 고유하게 식별합니다. 회신의 경우 참조는 원본 메시지와 일치합니다. 두 데이터 유형 모두 현재 결합 된 채널을 고유하게 식별하는 join_ref도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="efdb100e8fb22edffbda4a2f9c62ff5b45f532b5" translate="yes" xml:space="preserve">
          <source>The session contents, the final data to be stored after it has been built with &lt;a href=&quot;plug.conn#put_session/3&quot;&gt;&lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt;&lt;/a&gt; and the other session manipulating functions</source>
          <target state="translated">세션 내용, &lt;a href=&quot;plug.conn#put_session/3&quot;&gt; &lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt; &lt;/a&gt; 및 기타 세션 조작 기능 으로 빌드 된 후 저장 될 최종 데이터</target>
        </trans-unit>
        <trans-unit id="8b95a016960327d8adfb4b2a4fa7945022268acb" translate="yes" xml:space="preserve">
          <source>The session contents, the final data to be stored after it has been built with &lt;a href=&quot;plug.conn#put_session/3&quot;&gt;&lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt;&lt;/a&gt; and the other session manipulating functions.</source>
          <target state="translated">세션 내용, &lt;a href=&quot;plug.conn#put_session/3&quot;&gt; &lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt; &lt;/a&gt; 및 기타 세션 조작 기능 으로 빌드 된 후 저장 될 최종 데이터 .</target>
        </trans-unit>
        <trans-unit id="a534b349ad0dd4485a26018b51cb99468bc99b42" translate="yes" xml:space="preserve">
          <source>The session id may be nil in case the cookie does not identify any value in the store. The session contents must be a map.</source>
          <target state="translated">쿠키가 상점에서 값을 식별하지 않는 경우 세션 ID는 nil 일 수 있습니다. 세션 내용은 맵이어야합니다.</target>
        </trans-unit>
        <trans-unit id="45b3c50494949266d4502d1426e160d856709a04" translate="yes" xml:space="preserve">
          <source>The session is accessed via functions on &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;. Cookies and session have to be fetched with &lt;a href=&quot;plug.conn#fetch_session/1&quot;&gt;&lt;code&gt;Plug.Conn.fetch_session/1&lt;/code&gt;&lt;/a&gt; before the session can be accessed.</source>
          <target state="translated">세션은 &lt;a href=&quot;plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; 의&lt;/a&gt; 기능을 통해 액세스됩니다 . 세션에 액세스하려면 쿠키 및 세션을 &lt;a href=&quot;plug.conn#fetch_session/1&quot;&gt; &lt;code&gt;Plug.Conn.fetch_session/1&lt;/code&gt; &lt;/a&gt; 로 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="ea6faaf4abb4d9eac550e7cdd062da8586b666dd" translate="yes" xml:space="preserve">
          <source>The session is also lazy. Once configured, a cookie header with the session will only be sent to the client if something is written to the session in the first place.</source>
          <target state="translated">세션도 게으르다. 일단 구성되면 세션이있는 쿠키 헤더는 처음에 세션에 무언가가 기록 된 경우에만 클라이언트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="9ba204c596e34571bf913673b8b59a88885aaca5" translate="yes" xml:space="preserve">
          <source>The signing and encryption keys are derived from the connection's &lt;code&gt;secret_key_base&lt;/code&gt; using a salt that is built by appending &quot;_cookie&quot; to the cookie name. Care should be taken not to derive other keys using this value as the salt. Similarly do not use the same cookie name to store different values with distinct purposes.</source>
          <target state="translated">서명 및 암호화 키는 쿠키 이름에 &quot;_cookie&quot;를 추가하여 빌드 된 솔트를 사용하여 연결의 &lt;code&gt;secret_key_base&lt;/code&gt; 에서 파생됩니다 . 이 값을 솔트로 사용하여 다른 키를 파생하지 않도록주의해야합니다. 마찬가지로 동일한 쿠키 이름을 사용하여 고유 한 목적으로 다른 값을 저장하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b42889c924bd9345b669263e4a09c0e69b581550" translate="yes" xml:space="preserve">
          <source>The socket endpoint is read from the &lt;code&gt;@endpoint&lt;/code&gt; variable.</source>
          <target state="translated">소켓 엔드 포인트는 &lt;code&gt;@endpoint&lt;/code&gt; 변수 에서 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="e8353003894eb4918615880dd892b3fb26308d6c" translate="yes" xml:space="preserve">
          <source>The socket is then used to subscribe and join channels. Use this function when you want to create a blank socket to pass to functions like &lt;code&gt;UserSocket.connect/2&lt;/code&gt;.</source>
          <target state="translated">그런 다음 소켓을 사용하여 채널을 구독하고 참여시킵니다. &lt;code&gt;UserSocket.connect/2&lt;/code&gt; 와 같은 기능에 전달할 빈 소켓을 만들려면이 기능을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="741b1725667e8d637e90c04ad708be61a6c67966" translate="yes" xml:space="preserve">
          <source>The socket is then used to subscribe and join channels. Use this function when you want to create a blank socket to pass to functions like &lt;code&gt;UserSocket.connect/3&lt;/code&gt;.</source>
          <target state="translated">소켓은 채널을 구독하고 가입하는 데 사용됩니다. &lt;code&gt;UserSocket.connect/3&lt;/code&gt; 와 같은 함수에 전달할 빈 소켓을 만들려면이 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="df8020d63833291b1200da532130369857dd6057" translate="yes" xml:space="preserve">
          <source>The state of the schema is stored in the &lt;code&gt;:state&lt;/code&gt; field and allows following values:</source>
          <target state="translated">스키마의 상태는 &lt;code&gt;:state&lt;/code&gt; 필드에 저장되며 다음 값을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="aa78ee5880f730e34341dec231106792a1c1612d" translate="yes" xml:space="preserve">
          <source>The status can be an integer, an atom, or &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">상태는 정수, 원자 또는 &lt;code&gt;nil&lt;/code&gt; 일 수 있습니다 . 자세한 내용은 &lt;a href=&quot;plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="549a0fdbf17866c901bbe69f809cf1df06203fc0" translate="yes" xml:space="preserve">
          <source>The status code can be &lt;code&gt;nil&lt;/code&gt;, an integer or an atom. The list of allowed atoms is available in &lt;a href=&quot;plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상태 코드는 &lt;code&gt;nil&lt;/code&gt; , 정수 또는 원자 일 수 있습니다 . 허용되는 원자 목록은 &lt;a href=&quot;plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; &lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3baf68608bb7edc0144295a9de68bd827a0c3d1c" translate="yes" xml:space="preserve">
          <source>The status code can be &lt;code&gt;nil&lt;/code&gt;, an integer, or an atom. The list of allowed atoms is available in &lt;a href=&quot;plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상태 코드는 &lt;code&gt;nil&lt;/code&gt; , 정수 또는 원자 일 수 있습니다 . 허용되는 원자 목록은 &lt;a href=&quot;plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; &lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b7700abeab24f899ce4198c80479749838f3339" translate="yes" xml:space="preserve">
          <source>The supported keys are:</source>
          <target state="translated">지원되는 키는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db2280a174b18020a2620736642518bf66a11dab" translate="yes" xml:space="preserve">
          <source>The supported options are:</source>
          <target state="translated">지원되는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="01f20fe2845d2b1bdb9951b6a8d84f277b6b5d78" translate="yes" xml:space="preserve">
          <source>The syntax above is equivalent to:</source>
          <target state="translated">위의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8a40be796b70fed45f015e64809fd60c04642951" translate="yes" xml:space="preserve">
          <source>The temporary directory where files are streamed to can be customized by setting the &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; environment variable on the host system. If &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; isn&amp;rsquo;t set, Plug will look at some environment variables which usually hold the value of the system&amp;rsquo;s temporary directory (like &lt;code&gt;TMPDIR&lt;/code&gt; or &lt;code&gt;TMP&lt;/code&gt;). If no value is found in any of those variables, &lt;code&gt;/tmp&lt;/code&gt; is used as a default.</source>
          <target state="translated">호스트 시스템 에서 &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; 환경 변수를 설정하여 파일이 스트리밍되는 임시 디렉토리를 사용자 정의 할 수 있습니다 . 경우 &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; 가 설정되어 있지 않은, 플러그는 보통 (같은 시스템의 임시 디렉토리의 값 잡고 몇 가지 환경 변수를 볼 것이다 &lt;code&gt;TMPDIR&lt;/code&gt; 또는 &lt;code&gt;TMP&lt;/code&gt; 를 ). 해당 변수에 값이 없으면 &lt;code&gt;/tmp&lt;/code&gt; 가 기본값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="abfd2e746ee341013e4cdbafc97dfddc04d08e71" translate="yes" xml:space="preserve">
          <source>The temporary directory where files are streamed to can be customized by setting the &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; environment variable on the host system. If &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; isn't set, Plug will look at some environment variables which usually hold the value of the system's temporary directory (like &lt;code&gt;TMPDIR&lt;/code&gt; or &lt;code&gt;TMP&lt;/code&gt;). If no value is found in any of those variables, &lt;code&gt;/tmp&lt;/code&gt; is used as a default.</source>
          <target state="translated">파일이 스트리밍되는 임시 디렉토리 는 호스트 시스템 에서 &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; 환경 변수를 설정하여 사용자 정의 할 수 있습니다 . &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; 이 설정되지 않은 경우 Plug는 일반적으로 시스템의 임시 디렉토리 값 (예 : &lt;code&gt;TMPDIR&lt;/code&gt; 또는 &lt;code&gt;TMP&lt;/code&gt; )을 보유하는 일부 환경 변수를 조사 합니다. 이러한 변수에 값이 없으면 &lt;code&gt;/tmp&lt;/code&gt; 가 기본값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6008af9872175b7be58ce5d3be6044dce8156ae7" translate="yes" xml:space="preserve">
          <source>The test process will not receive the published message. This triggers the &lt;code&gt;handle_out/3&lt;/code&gt; callback in the channel.</source>
          <target state="translated">테스트 프로세스는 게시 된 메시지를받지 않습니다. 채널에서 &lt;code&gt;handle_out/3&lt;/code&gt; 콜백을 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="96e4f76aa06de2592f470fd3dea7b0c4ef31375c" translate="yes" xml:space="preserve">
          <source>The third and final option is to use &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; to define the relationships between the resources. In this case, the comments table won&amp;rsquo;t have the foreign key, instead there is a intermediary table responsible for associating the entries:</source>
          <target state="translated">세 번째이자 마지막 옵션은 &lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt; 를 사용하여 자원 간의 관계를 정의하는 것입니다. 이 경우 주석 테이블에는 외래 키가 없으며 대신 항목을 연결하는 중개 테이블이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8de91f694a160eac98f8736952f2a3f88136e353" translate="yes" xml:space="preserve">
          <source>The third and final option is to use &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; to define the relationships between the resources. In this case, the comments table won't have the foreign key, instead there is an intermediary table responsible for associating the entries:</source>
          <target state="translated">세 번째이자 마지막 옵션은 &lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt; 를 사용하여 리소스 간의 관계를 정의하는 것입니다. 이 경우 주석 테이블에는 외래 키가 없으며 대신 항목 연결을 담당하는 중간 테이블이 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa9b72d684ded4fbc52b2db0fd313e2feea35d4f" translate="yes" xml:space="preserve">
          <source>The third argument &lt;code&gt;format&lt;/code&gt; is the format the data has been dumped as. For example, databases may dump embedded to &lt;code&gt;:json&lt;/code&gt;, this function allows such dumped data to be put back into the schemas.</source>
          <target state="translated">세 번째 인수 &lt;code&gt;format&lt;/code&gt; 은 데이터가 덤프 된 형식입니다. 예를 들어 데이터베이스는 &lt;code&gt;:json&lt;/code&gt; 에 내장 된 덤프를 덤프 할 수 있으며 ,이 함수를 사용하면 덤프 된 데이터를 스키마에 다시 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22dfe15ea505dc65004d52b00565b0529f3c5106" translate="yes" xml:space="preserve">
          <source>The third argument can be any term (string, int, list, etc.) that you wish to codify into the token. Upon valid verification, this same term will be extracted from the token.</source>
          <target state="translated">세 번째 인수는 토큰에 코드화하려는 모든 용어 (문자열, 정수, 목록 등) 일 수 있습니다. 유효한 확인이 끝나면 동일한 용어가 토큰에서 추출됩니다.</target>
        </trans-unit>
        <trans-unit id="a1c2052b68df8425edb8d31ef1ad3c1921b372fa" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to 100ms.</source>
          <target state="translated">시간 초과는 밀리 초 단위이며 기본값은 100ms입니다.</target>
        </trans-unit>
        <trans-unit id="ecb554852eb06b5cfc5cc2ec1aa86dbe934028bb" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to 100ms. Keep in mind this macro will block the test by the timeout value, so use it only when necessary as overuse will certainly slow down your test suite.</source>
          <target state="translated">시간 초과는 밀리 초 단위이며 기본값은 100ms입니다. 이 매크로는 시간 종료 값으로 테스트를 차단하므로, 과다 사용으로 인해 테스트 스위트가 느려질 수 있으므로 필요할 때만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1304926df4500481102d8f6f3aa1797e91270270" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to the &lt;code&gt;:assert_receive_timeout&lt;/code&gt; set on the &lt;code&gt;:ex_unit&lt;/code&gt; application (which defaults to 100ms).</source>
          <target state="translated">타임 아웃을 밀리 초 기본값에있는 &lt;code&gt;:assert_receive_timeout&lt;/code&gt; 온 설정 &lt;code&gt;:ex_unit&lt;/code&gt; 의 응용 프로그램 (이 100ms의 기본값).</target>
        </trans-unit>
        <trans-unit id="b6a222ff7aa627d2ff58408f68862da0a0c1ac3d" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to the &lt;code&gt;:refute_receive_timeout&lt;/code&gt; set on the &lt;code&gt;:ex_unit&lt;/code&gt; application (which defaults to 100ms). Keep in mind this macro will block the test by the timeout value, so use it only when necessary as overuse will certainly slow down your test suite.</source>
          <target state="translated">제한 시간은 밀리 초 및 기본값에 &lt;code&gt;:refute_receive_timeout&lt;/code&gt; 온 세트 &lt;code&gt;:ex_unit&lt;/code&gt; (이 100ms로하는 기본값) 응용 프로그램입니다. 이 매크로는 시간 초과 값으로 테스트를 차단하므로 과도하게 사용하면 테스트 스위트가 확실히 느려지므로 필요할 때만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0b4fff6f531f38d34226e8259653e269c039cae2" translate="yes" xml:space="preserve">
          <source>The timestamp is updated whenever there is a read or write to the table and it may be used to detect if a session is still active.</source>
          <target state="translated">타임 스탬프는 테이블에 대한 읽기 또는 쓰기가있을 때마다 업데이트되며 세션이 여전히 활성인지 여부를 감지하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81762c19246e6846b2e980ea04896a37c7853877" translate="yes" xml:space="preserve">
          <source>The token may be sent by the request either via the params with key &quot;_csrf_token&quot; or a header with name &quot;x-csrf-token&quot;.</source>
          <target state="translated">토큰은 키 &quot;_csrf_token&quot;이있는 매개 변수 또는 이름이 &quot;x-csrf-token&quot;인 헤더를 통해 요청에 의해 전송 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5072feb3a5cec39cc2fc00a21cad324ac72eccb" translate="yes" xml:space="preserve">
          <source>The token may be sent by the request either via the params with key &amp;ldquo;_csrf_token&amp;rdquo; or a header with name &amp;ldquo;x-csrf-token&amp;rdquo;.</source>
          <target state="translated">토큰은&amp;ldquo;_csrf_token&amp;rdquo;키가있는 매개 변수 또는&amp;ldquo;x-csrf-token&amp;rdquo;이름의 헤더를 통해 요청에 의해 전송 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92ce00aada35b93b3fdf93d5a2e7544465e5a9ee" translate="yes" xml:space="preserve">
          <source>The transaction will return the value given as &lt;code&gt;{:error, value}&lt;/code&gt;.</source>
          <target state="translated">트랜잭션은 &lt;code&gt;{:error, value}&lt;/code&gt; 로 제공된 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="144f4cd1edb440f47f1246559392f7aed2405665" translate="yes" xml:space="preserve">
          <source>The transport behaviour</source>
          <target state="translated">수송 행동</target>
        </trans-unit>
        <trans-unit id="ffde96e4790584145c12afb10941ddbcfe63b5c3" translate="yes" xml:space="preserve">
          <source>The transport passes a map of metadata and the socket returns &lt;code&gt;{:ok, state}&lt;/code&gt; or &lt;code&gt;:error&lt;/code&gt;. The state must be stored by the transport and returned in all future operations.</source>
          <target state="translated">전송은 메타 데이터 맵을 전달하고 소켓은 &lt;code&gt;{:ok, state}&lt;/code&gt; 또는 &lt;code&gt;:error&lt;/code&gt; 를 반환합니다 . 상태는 전송에 의해 저장되고 향후 모든 작업에서 반환되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0618061b416a03f218c617e087e2e53df218e5c9" translate="yes" xml:space="preserve">
          <source>The transport requires one function:</source>
          <target state="translated">운송에는 하나의 기능이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2c0b95368d8ebf1cd3519374ade97eb4d383c66c" translate="yes" xml:space="preserve">
          <source>The triggers the &lt;code&gt;handle_in/3&lt;/code&gt; callback in the channel.</source>
          <target state="translated">채널에서 &lt;code&gt;handle_in/3&lt;/code&gt; 콜백을 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="42337bbf47f302b6017a80123d119d2018afc1ba" translate="yes" xml:space="preserve">
          <source>The underlying data in the JSON column is returned without any additional decoding. This means &quot;null&quot; JSON values are not the same as SQL's &quot;null&quot;. For example, the &lt;code&gt;Repo.all&lt;/code&gt; operation below returns an empty list because &lt;code&gt;p.meta[&quot;author&quot;]&lt;/code&gt; returns JSON's null and therefore &lt;code&gt;is_nil&lt;/code&gt; does not succeed:</source>
          <target state="translated">JSON 열의 기본 데이터는 추가 디코딩없이 반환됩니다. 이는 &quot;null&quot;JSON 값이 SQL의 &quot;null&quot;과 동일하지 않음을 의미합니다. 예를 들어 아래 &lt;code&gt;Repo.all&lt;/code&gt; 작업은 &lt;code&gt;p.meta[&quot;author&quot;]&lt;/code&gt; 가 JSON의 null을 반환하므로 &lt;code&gt;is_nil&lt;/code&gt; 이 성공하지 않기 때문에 빈 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="18e53abaed4d2983226c3cac5079451da818bff2" translate="yes" xml:space="preserve">
          <source>The underlying user is passed to the view and template as &lt;code&gt;:user&lt;/code&gt;, which is inferred from the view name. The name of the key in assigns can be customized with the &lt;code&gt;:as&lt;/code&gt; option:</source>
          <target state="translated">기본 사용자는 &lt;code&gt;:user&lt;/code&gt; 로 뷰 및 템플리트에 전달되며 이는 뷰 이름에서 유추됩니다. assigns의 키 이름은 &lt;code&gt;:as&lt;/code&gt; 옵션 으로 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1dfd3b303d5fe2aedc67a0b4bc8aa60d95f14665" translate="yes" xml:space="preserve">
          <source>The underlying user is passed to the view and template as &lt;code&gt;:user&lt;/code&gt;, which is inflected from the view name. The name of the key in assigns can be customized with the &lt;code&gt;:as&lt;/code&gt; option:</source>
          <target state="translated">기본 사용자는 &lt;code&gt;:user&lt;/code&gt; 로 뷰 및 템플리트에 전달되며 이는 뷰 이름에서 영향을받습니다. assigns의 키 이름은 &lt;code&gt;:as&lt;/code&gt; 옵션 으로 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ece19487ec4f9c9b42291fc4215172a12c3b8537" translate="yes" xml:space="preserve">
          <source>The unique constraint works by relying on the database to check if the unique constraint has been violated or not and, if so, Ecto converts it into a changeset error.</source>
          <target state="translated">고유 제한 조건은 데이터베이스에 의존하여 고유 제한 조건이 위반되었는지 여부를 확인하고, 그렇다면 Ecto가이를 변경 세트 오류로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8f24025f778f23bb692d5c7e74205b6b4b984c73" translate="yes" xml:space="preserve">
          <source>The update expression in Ecto supports the following operators:</source>
          <target state="translated">Ecto의 업데이트 표현식은 다음 연산자를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5b6d6cdb41018b373e7cfa4867802d99511b1902" translate="yes" xml:space="preserve">
          <source>The valid keys are:</source>
          <target state="translated">유효한 키는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb6cddd8de1840c96ca7fda0519b7a48fb8e1141" translate="yes" xml:space="preserve">
          <source>The values above are not meant to be exact. For example, setting the length to 8_000_000 may end up reading some hundred bytes more from the socket until we halt.</source>
          <target state="translated">위의 값은 정확하지 않습니다. 예를 들어, 길이를 8_000_000으로 설정하면 정지 할 때까지 소켓에서 수백 바이트 더 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f62c587734431028a6aa80f1e9be78246f2a1d3f" translate="yes" xml:space="preserve">
          <source>The values above are not meant to be exact. For example, setting the length to &lt;code&gt;8_000_000&lt;/code&gt; may end up reading some hundred bytes more from the socket until we halt.</source>
          <target state="translated">위의 값은 정확하지 않습니다. 예를 들어, 길이를 &lt;code&gt;8_000_000&lt;/code&gt; 으로 설정하면 정지 할 때까지 소켓에서 수백 바이트 더 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ecaa2ac2dc3f10d3435db3d9b4bfce660d8e6fb" translate="yes" xml:space="preserve">
          <source>The view layer also contains conveniences for rendering templates, including support for layouts and encoders per format.</source>
          <target state="translated">또한 뷰 레이어에는 레이아웃 및 형식 별 인코더 지원을 비롯하여 템플릿을 렌더링 할 때 편리합니다.</target>
        </trans-unit>
        <trans-unit id="91fa591ef2cba3e61fb437760238714eb628080e" translate="yes" xml:space="preserve">
          <source>The websocket is configurable in your socket:</source>
          <target state="translated">소켓에서 웹 소켓을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dab777042c47d40f4805c33c94a1bf2e15d3974d" translate="yes" xml:space="preserve">
          <source>Then expect them in the test:</source>
          <target state="translated">그런 다음 테스트에서 예상하십시오.</target>
        </trans-unit>
        <trans-unit id="b44a39ccd5266edb2d9caad076b683f36a1762b6" translate="yes" xml:space="preserve">
          <source>Then it falls back to the &lt;code&gt;@schema_prefix&lt;/code&gt; attribute declared in the schema given to &lt;code&gt;from&lt;/code&gt;/&lt;code&gt;join&lt;/code&gt;</source>
          <target state="translated">그런 다음 / &lt;code&gt;join&lt;/code&gt; &lt;code&gt;from&lt;/code&gt; 제공된 스키마에 선언 된 &lt;code&gt;@schema_prefix&lt;/code&gt; 속성으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="5fe6880ddcb09c2b177e0c20e50dae10169afeef" translate="yes" xml:space="preserve">
          <source>Then it falls back to the query prefix</source>
          <target state="translated">그런 다음 쿼리 접두사로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="f0b91bece7078d6127399b4fede7285d49a284f5" translate="yes" xml:space="preserve">
          <source>Then the module for the &lt;code&gt;@view_module&lt;/code&gt; view can decide to provide scripts with either a precompiled template, or by implementing the function directly, ie:</source>
          <target state="translated">그런 다음 &lt;code&gt;@view_module&lt;/code&gt; 뷰 의 모듈 은 스크립트를 미리 컴파일 된 템플릿으로 제공하거나 함수를 직접 구현하여 다음과 같이 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f14d34a4f2c3d48f59e2e1b8b4a19a69ac94c3f8" translate="yes" xml:space="preserve">
          <source>Then the module under &lt;code&gt;view_module(@conn)&lt;/code&gt; can decide to provide scripts with either a precompiled template, or by implementing the function directly, ie:</source>
          <target state="translated">그런 다음 &lt;code&gt;view_module(@conn)&lt;/code&gt; 아래의 모듈 은 미리 컴파일 된 템플릿을 사용하거나 함수를 직접 구현하여 스크립트를 제공할지 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0dafaeb0118a06673409561de14306159c50ceb" translate="yes" xml:space="preserve">
          <source>Then you are able to use your own datetime_select throughout your whole application.</source>
          <target state="translated">그런 다음 전체 응용 프로그램에서 고유 한 datetime_select를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ceb5c8aab927695627e6a415525151e60cdf227b" translate="yes" xml:space="preserve">
          <source>Then you can directly create a socket and &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt; topics and channels:</source>
          <target state="translated">그런 다음 직접 소켓을 작성하고 &lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt; 주제 및 채널을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="584bf72a0acf37e4eddce0ef40e653d37e3153b8" translate="yes" xml:space="preserve">
          <source>Then, in the &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; callback, attach the handler to this event using a unique handler id:</source>
          <target state="translated">그런 다음 &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; 콜백에서 고유 한 처리기 ID를 사용하여이 이벤트에 처리기를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="1c1b86b915cfde7a7368137f0a2e48d4add28c22" translate="yes" xml:space="preserve">
          <source>There are also optional packages depending on your configuration:</source>
          <target state="translated">구성에 따라 옵션 패키지도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6807336b45c24ae9dbef79351d2099a68159d0ed" translate="yes" xml:space="preserve">
          <source>There are two kind of plugs: function plugs and module plugs.</source>
          <target state="translated">플러그에는 기능 플러그와 모듈 플러그의 두 종류가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e1dd6c129ab09fcb3871f141a18dd6dd0425035" translate="yes" xml:space="preserve">
          <source>There are two types of telemetry events. The ones emitted by Ecto and the ones that are adapter specific.</source>
          <target state="translated">두 가지 유형의 원격 분석 이벤트가 있습니다. Ecto에서 내 보낸 것 및 어댑터별로 발생하는 것.</target>
        </trans-unit>
        <trans-unit id="0c3abfdacb3ac569bf8db5e65409f9dce9bb486d" translate="yes" xml:space="preserve">
          <source>There are two ways to define primary keys in Ecto: using the &lt;code&gt;@primary_key&lt;/code&gt; module attribute and using &lt;code&gt;primary_key: true&lt;/code&gt; as option for &lt;a href=&quot;#field/3&quot;&gt;&lt;code&gt;field/3&lt;/code&gt;&lt;/a&gt; in your schema definition. They are not mutually exclusive and can be used together.</source>
          <target state="translated">Ecto에서 기본 키를 정의하는 방법에는 &lt;code&gt;@primary_key&lt;/code&gt; 모듈 속성을 사용하는 방법과 &lt;code&gt;primary_key: true&lt;/code&gt; 를 스키마 정의의 &lt;a href=&quot;#field/3&quot;&gt; &lt;code&gt;field/3&lt;/code&gt; &lt;/a&gt; 옵션으로 사용하는 두 가지 방법이 있습니다 . 상호 배타적이지 않으며 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9e7530f090b66e3b01b4d280637820412cb520f" translate="yes" xml:space="preserve">
          <source>There can only be one select expression in a query, if the select expression is omitted, the query will by default select the full schema. If select is given more than once, an error is raised. Use &lt;a href=&quot;#exclude/2&quot;&gt;&lt;code&gt;exclude/2&lt;/code&gt;&lt;/a&gt; if you would like to remove a previous select for overriding or see &lt;a href=&quot;#select_merge/3&quot;&gt;&lt;code&gt;select_merge/3&lt;/code&gt;&lt;/a&gt; for a limited version of &lt;code&gt;select&lt;/code&gt; that is composable and can be called multiple times.</source>
          <target state="translated">쿼리에는 하나의 select 식만있을 수 있습니다. select 식을 생략하면 쿼리는 기본적으로 전체 스키마를 선택합니다. select가 두 번 이상 주어지면 오류가 발생합니다. 재정의를 위해 이전 선택을 제거 하려면 &lt;a href=&quot;#exclude/2&quot;&gt; &lt;code&gt;exclude/2&lt;/code&gt; &lt;/a&gt; 사용 하거나 &lt;a href=&quot;#select_merge/3&quot;&gt; &lt;code&gt;select_merge/3&lt;/code&gt; &lt;/a&gt; 가능하고 여러 번 호출 할 수 있는 제한된 &lt;code&gt;select&lt;/code&gt; 버전에 대해서는 select_merge / 3 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60774986335f094648654b82d018e24c6920015b" translate="yes" xml:space="preserve">
          <source>There is an example of working with changesets in the introductory documentation in the &lt;a href=&quot;ecto&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module. The functions &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#change/2&quot;&gt;&lt;code&gt;change/2&lt;/code&gt;&lt;/a&gt; are the usual entry points for creating changesets. The first one is used to cast and validate external parameters, such as parameters sent through a form, API, command line, etc. The second one is used to change data directly from your application.</source>
          <target state="translated">&lt;a href=&quot;ecto&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt; 모듈 의 소개 문서에 변경 세트로 작업하는 예가 있습니다 . &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#change/2&quot;&gt; &lt;code&gt;change/2&lt;/code&gt; &lt;/a&gt; 함수 는 변경 세트 작성을위한 일반적인 진입 점입니다. 첫 번째는 폼, API, 명령 행 등을 통해 전송 된 매개 변수와 같은 외부 매개 변수를 캐스트하고 유효성 검증하는 데 사용됩니다. 두 번째는 애플리케이션에서 직접 데이터를 변경하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bbbe69bd2d1d3f33a0989c0c7daf1e4f17426993" translate="yes" xml:space="preserve">
          <source>Therefore, if you get a warning that the host does not match, it is either because someone is attempting to steal CSRF tokens or because you have a misconfigured host configuration.</source>
          <target state="translated">따라서 호스트가 일치하지 않는다는 경고가 표시되면 누군가 CSRF 토큰을 훔치려 고하거나 호스트 구성이 잘못 구성되어 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="3748dac854496bc8faac9591f1822a153d556a4a" translate="yes" xml:space="preserve">
          <source>Therefore, when working with and manipulating external data, it is recommended to use &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s that are able to filter and properly cast external data:</source>
          <target state="translated">따라서 외부 데이터로 작업하고 조작 할 때는 외부 데이터 를 필터링하고 올바르게 &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; 수있는 Ecto.Changeset 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7e8893d85340fc3862c12874dc8c0caa638bca11" translate="yes" xml:space="preserve">
          <source>Therefore, when working with and manipulating external data, it is recommended to use &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;'s that are able to filter and properly cast external data:</source>
          <target state="translated">따라서 외부 데이터로 작업하고 조작 할 때 외부 데이터 를 필터링하고 적절하게 캐스팅 할 수있는 &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d4b6dd62855c1cdb8d6d7226945af7408045cf45" translate="yes" xml:space="preserve">
          <source>These attributes are:</source>
          <target state="translated">이러한 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dab402ac1558a423d6bfdf184cdcba60e59a9b1c" translate="yes" xml:space="preserve">
          <source>These fields are reserved for libraries/framework usage.</source>
          <target state="translated">이 필드는 라이브러리 / 프레임 워크 사용을 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="31125242793acf4be0a0cc8a21b6685bbae8a6a2" translate="yes" xml:space="preserve">
          <source>These fields contain request information:</source>
          <target state="translated">이 필드에는 요청 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c58c3f5a32cf2cabf47af4ce6c2874bf3d0f839" translate="yes" xml:space="preserve">
          <source>These fields contain response information:</source>
          <target state="translated">이 필드에는 응답 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef711a090a295d12005974a4d06b792bb140e9c3" translate="yes" xml:space="preserve">
          <source>These options are assigned to &lt;code&gt;:private&lt;/code&gt; in the call&amp;rsquo;s &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 옵션은 호출의 &lt;a href=&quot;plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;:private&lt;/code&gt; 에 할당됩니다 .</target>
        </trans-unit>
        <trans-unit id="59fd20a59fd71306464f90cbc93687125b053059" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;:through&lt;/code&gt; association will return all authors for all comments that belongs to that post:</source>
          <target state="translated">이 &lt;code&gt;:through&lt;/code&gt; 협회는 해당 게시물에 속한 모든 댓글에 대한 모든 작성자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="314e0a3a76540d899cae17754d71892826cfdce8" translate="yes" xml:space="preserve">
          <source>This allows developers to properly translate values coming from the Ecto into adapter ones. For example, if the database does not support booleans but instead returns 0 and 1 for them, you could add:</source>
          <target state="translated">이를 통해 개발자는 Ecto에서 오는 값을 어댑터 값으로 올바르게 변환 할 수 있습니다. 예를 들어, 데이터베이스가 부울을 지원하지 않고 대신 0과 1을 리턴하면 다음을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c34b4dd019d2b68a7383ace93f2215401ec4cad3" translate="yes" xml:space="preserve">
          <source>This allows developers to properly translate values coming from the adapters into Ecto ones. For example, if the database does not support booleans but instead returns 0 and 1 for them, you could add:</source>
          <target state="translated">이를 통해 개발자는 어댑터에서 나오는 값을 Ecto 값으로 올바르게 변환 할 수 있습니다. 예를 들어, 데이터베이스가 부울을 지원하지 않고 대신 0과 1을 리턴하면 다음을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9069e4b8ffaf3bc20294b7bd6a863e30171a4d03" translate="yes" xml:space="preserve">
          <source>This approach lets us not worry about keeping track of the position of the bindings when composing the query.</source>
          <target state="translated">이 방법을 사용하면 쿼리를 작성할 때 바인딩 위치를 추적 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="78e0d97646f179af897c91029155ab3de9f02b8b" translate="yes" xml:space="preserve">
          <source>This approach lets us not worry about keeping track of the position of the bindings when composing the query. The &lt;code&gt;:as&lt;/code&gt; option can be given both on joins and on &lt;code&gt;from&lt;/code&gt;:</source>
          <target state="translated">이 접근 방식을 사용하면 쿼리를 작성할 때 바인딩 위치를 추적하는 것에 대해 걱정할 필요가 없습니다. &lt;code&gt;:as&lt;/code&gt; 옵션이 조인과에 모두 부여 할 수 &lt;code&gt;from&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2f59bfe0a957636ece0be8bfd839e81d84f8f0ae" translate="yes" xml:space="preserve">
          <source>This behaviour provides presence features such as fetching presences for a given topic, as well as handling diffs of join and leave events as they occur in real-time. Using this module defines a supervisor and a module that implements the &lt;a href=&quot;../phoenix_pubsub/phoenix.tracker&quot;&gt;&lt;code&gt;Phoenix.Tracker&lt;/code&gt;&lt;/a&gt; behaviour that uses &lt;a href=&quot;../phoenix_pubsub/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; to broadcast presence updates.</source>
          <target state="translated">이 동작은 주어진 주제에 대한 현재 상태 가져 오기와 같은 현재 상태 기능을 제공하고 실시간으로 발생하는 참여 및 탈퇴 이벤트의 차이를 처리합니다. 이 모듈을 사용하여 감독자 및 모듈을 정의하는 구현하는 &lt;a href=&quot;../phoenix_pubsub/phoenix.tracker&quot;&gt; &lt;code&gt;Phoenix.Tracker&lt;/code&gt; 의&lt;/a&gt; 사용 행동 &lt;a href=&quot;../phoenix_pubsub/phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; 을&lt;/a&gt; 방송 존재 업데이트에.</target>
        </trans-unit>
        <trans-unit id="6967adaf22d337178372537c6118e0d2b8a63bd3" translate="yes" xml:space="preserve">
          <source>This behaviour provides presence features such as fetching presences for a given topic, as well as handling diffs of join and leave events as they occur in real-time. Using this module defines a supervisor and allows the calling module to implement the &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.tracker&quot;&gt;&lt;code&gt;Phoenix.Tracker&lt;/code&gt;&lt;/a&gt; behaviour which starts a tracker process to handle presence information.</source>
          <target state="translated">이 동작은 특정 토픽에 대한 프레즌스 가져 오기와 같은 프레즌스 기능을 제공 할뿐만 아니라 실시간으로 발생하는 조인 및 휴가 이벤트의 차이를 처리합니다. 이 모듈을 사용하면 감독자를 정의하고 호출 모듈 이 추적 정보 프로세스를 시작하여 현재 상태 정보를 처리하는 &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.tracker&quot;&gt; &lt;code&gt;Phoenix.Tracker&lt;/code&gt; &lt;/a&gt; 동작 을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7556041936c271690740591770bfe1ea6222272" translate="yes" xml:space="preserve">
          <source>This callback can be used to further modify the query and options before it is transformed and sent to the database.</source>
          <target state="translated">이 콜백은 쿼리 및 옵션이 변환되어 데이터베이스로 전송되기 전에 추가로 수정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b5289f3895306f4a2bb2ce650d1609e9b79d9c7" translate="yes" xml:space="preserve">
          <source>This callback is called on external input and can return any type, as long as the &lt;code&gt;dump/1&lt;/code&gt; function is able to convert the returned value into an Ecto native type. There are two situations where this callback is called:</source>
          <target state="translated">이 콜백은 외부 입력에서 호출되며 &lt;code&gt;dump/1&lt;/code&gt; 함수가 리턴 된 값을 Ecto 기본 유형으로 변환 할 수 있는 한 모든 유형을 리턴 할 수 있습니다 . 이 콜백이 호출되는 상황은 두 가지입니다.</target>
        </trans-unit>
        <trans-unit id="f6d40809f5928ded0783d1c5bde4c2ca0dacdca6" translate="yes" xml:space="preserve">
          <source>This callback is called when loading data from the database and receive an Ecto native type. It can return any type, as long as the &lt;code&gt;dump/1&lt;/code&gt; function is able to convert the returned value back into an Ecto native type.</source>
          <target state="translated">이 콜백은 데이터베이스에서 데이터를로드하고 Ecto 기본 유형을 수신 할 때 호출됩니다. &lt;code&gt;dump/1&lt;/code&gt; 함수가 리턴 된 값을 Ecto 기본 유형으로 다시 변환 할 수 있는 한 모든 유형을 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5dba0f0e5df500a1e88b72d27d9b478ed2ccb47c" translate="yes" xml:space="preserve">
          <source>This callback is called when loading data from the database and receives an Ecto native type. It can return any type, as long as the &lt;code&gt;dump/1&lt;/code&gt; function is able to convert the returned value back into an Ecto native type.</source>
          <target state="translated">이 콜백은 데이터베이스에서 데이터를로드 할 때 호출되고 Ecto 기본 유형을 수신합니다. &lt;code&gt;dump/1&lt;/code&gt; 함수가 반환 된 값을 Ecto 네이티브 유형으로 다시 변환 할 수 있는 한 모든 유형을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8391fe8b307eb118c66a1224a190e367cf1e34a5" translate="yes" xml:space="preserve">
          <source>This callback is called with any term that was stored in the struct and it needs to validate them and convert it to an Ecto native type.</source>
          <target state="translated">이 콜백은 구조체에 저장된 용어로 호출되며이를 검증하고 Ecto 기본 유형으로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="6bf00040ea79807475cd31c46b891cb8ded6c579" translate="yes" xml:space="preserve">
          <source>This callback is invoked as the entry point for all repository operations. For example, if you are executing a query with preloads, this callback will be invoked once at the beginning, but the options returned here will be passed to all following operations.</source>
          <target state="translated">이 콜백은 모든 저장소 작업의 진입 점으로 호출됩니다. 예를 들어 사전로드를 사용하여 쿼리를 실행하는 경우이 콜백은 처음에 한 번 호출되지만 여기에 반환 된 옵션은 다음 모든 작업에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="79748d4f4c53c8b678eba754fd8a33ed0dc52111" translate="yes" xml:space="preserve">
          <source>This callback is invoked for all query APIs, including the &lt;code&gt;stream&lt;/code&gt; function, but it is not invoked for &lt;code&gt;insert_all&lt;/code&gt; nor any of the schema functions.</source>
          <target state="translated">이 콜백은 &lt;code&gt;stream&lt;/code&gt; 함수를 포함한 모든 쿼리 API에 대해 호출 되지만 &lt;code&gt;insert_all&lt;/code&gt; 이나 스키마 함수에 대해서는 호출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d3dd66370a2871bfe63d6fef51a35166fbee8602" translate="yes" xml:space="preserve">
          <source>This can be used to load CSRF state into another process. See &lt;a href=&quot;#dump_state/0&quot;&gt;&lt;code&gt;dump_state/0&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;dump_state_from_session/2&lt;/code&gt; for dumping it.</source>
          <target state="translated">CSRF 상태를 다른 프로세스로로드하는 데 사용할 수 있습니다. 덤프에 대해서는 &lt;a href=&quot;#dump_state/0&quot;&gt; &lt;code&gt;dump_state/0&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;dump_state_from_session/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9942f198e47ea544c82a2f3149eb4db211bc77f7" translate="yes" xml:space="preserve">
          <source>This can be used to provide default values per operation that have higher precedence than the values given on configuration or when starting the repository. It can also be used to set query specific options, such as &lt;code&gt;:prefix&lt;/code&gt;.</source>
          <target state="translated">이는 구성에 지정된 값보다 우선 순위가 더 높은 작업 당 기본값을 제공하거나 저장소를 시작할 때 사용할 수 있습니다. 또한 &lt;code&gt;:prefix&lt;/code&gt; 와 같은 쿼리 특정 옵션을 설정하는 데 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7451f29af9970208fd48c0f77d572d71c9c6abab" translate="yes" xml:space="preserve">
          <source>This can be useful to implement nested layouts. For example, imagine you have an application layout like this:</source>
          <target state="translated">이는 중첩 된 레이아웃을 구현하는 데 유용 할 수 있습니다. 예를 들어 다음과 같은 애플리케이션 레이아웃이 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="36cde890ab9fc7b08ed69780233aa5e8d306807f" translate="yes" xml:space="preserve">
          <source>This converts the given embedded schema to a map to be serialized with the given format. For example:</source>
          <target state="translated">이것은 주어진 임베디드 스키마를 주어진 형식으로 직렬화 할 맵으로 변환합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="fffb99485473cd5f2890d8e671445895fea64111" translate="yes" xml:space="preserve">
          <source>This cookie store is based on &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageVerifier.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageEncryptor.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt;&lt;/a&gt; which encrypts and signs each cookie to ensure they can&amp;rsquo;t be read nor tampered with.</source>
          <target state="translated">이 쿠키 저장소는 &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageVerifier.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageEncryptor.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt; &lt;/a&gt; 를 기반으로 하며 쿠키를 읽거나 조작 할 수 없도록 각 쿠키를 암호화하고 서명합니다.</target>
        </trans-unit>
        <trans-unit id="53b55df014db1d36aa928a0d1ab68e9498d7f04f" translate="yes" xml:space="preserve">
          <source>This cookie store is based on &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageVerifier.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageEncryptor.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt;&lt;/a&gt; which encrypts and signs each cookie to ensure they can't be read nor tampered with.</source>
          <target state="translated">이 쿠키 저장소는 &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageVerifier.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageEncryptor.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt; &lt;/a&gt; 를 기반으로 하며 각 쿠키를 암호화하고 서명하여 읽거나 변경할 수 없도록합니다.</target>
        </trans-unit>
        <trans-unit id="88f415484d2416f0c9164e685095abeddba09475" translate="yes" xml:space="preserve">
          <source>This does not expect the repository and therefore does not leverage the cache.</source>
          <target state="translated">이것은 리포지토리를 기대하지 않으므로 캐시를 활용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8358ce5c448165474c59ccb6634f95fedb0d2fb6" translate="yes" xml:space="preserve">
          <source>This emulates behaviour performed by browsers where cookies returned in the response are available in following requests.</source>
          <target state="translated">이는 응답에서 반환 된 쿠키가 다음 요청에서 사용 가능한 브라우저에서 수행되는 동작을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="fa7d6e6dcda78ceca060025cce3f5837a513f835" translate="yes" xml:space="preserve">
          <source>This event should be invoked on every query sent to the adapter, including queries that are related to the transaction management.</source>
          <target state="translated">이 이벤트는 트랜잭션 관리와 관련된 쿼리를 포함하여 어댑터로 전송되는 모든 쿼리에서 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c0c41eb119619d93df37edc66780e62d9f72d4b1" translate="yes" xml:space="preserve">
          <source>This exception is commonly raised by &lt;a href=&quot;phoenix.controller#accepts/2&quot;&gt;&lt;code&gt;Phoenix.Controller.accepts/2&lt;/code&gt;&lt;/a&gt; which negotiates the media types the server is able to serve with the contents the client is able to render.</source>
          <target state="translated">이 예외는 일반적으로 &lt;a href=&quot;phoenix.controller#accepts/2&quot;&gt; &lt;code&gt;Phoenix.Controller.accepts/2&lt;/code&gt; 에&lt;/a&gt; 의해 발생하며 , 클라이언트가 렌더링 할 수있는 내용으로 서버가 제공 할 수있는 미디어 유형을 협상합니다.</target>
        </trans-unit>
        <trans-unit id="e27c88fc5d1a3d0121b169f096d2ac516c60e1ae" translate="yes" xml:space="preserve">
          <source>This exception is raised by &lt;a href=&quot;phoenix.controller#scrub_params/2&quot;&gt;&lt;code&gt;Phoenix.Controller.scrub_params/2&lt;/code&gt;&lt;/a&gt; which:</source>
          <target state="translated">이 예외는 &lt;a href=&quot;phoenix.controller#scrub_params/2&quot;&gt; &lt;code&gt;Phoenix.Controller.scrub_params/2&lt;/code&gt; 에&lt;/a&gt; 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="0fa6cbcebc05c777d1c7368f7969366f4e084a6c" translate="yes" xml:space="preserve">
          <source>This feature is very useful when queries need to be built based on some user input, like web search forms, CLIs and so on.</source>
          <target state="translated">이 기능은 웹 검색 양식, CLI 등과 같은 일부 사용자 입력을 기반으로 쿼리를 작성해야 할 때 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="736fb0a01b93ff59374b8773d572c0d61a1c4bf4" translate="yes" xml:space="preserve">
          <source>This first group contains validations that take a keyword list of validators, where the validators are shown immediately following the validation type. This list may also include a &lt;code&gt;message:&lt;/code&gt; key.</source>
          <target state="translated">이 첫 번째 그룹에는 유효성 검사기의 키워드 목록을 사용하는 유효성 검사가 포함되어 있으며 유효성 검사기는 유효성 검사 유형 바로 뒤에 표시됩니다. 이 목록에는 &lt;code&gt;message:&lt;/code&gt; key 도 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08a01cc9d2b834ac5065ca0c4859bc17a52873c2" translate="yes" xml:space="preserve">
          <source>This format is used when rendering a template as an atom. For example, &lt;code&gt;render(conn, :foo)&lt;/code&gt; will render &lt;code&gt;&quot;foo.FORMAT&quot;&lt;/code&gt; where the format is the one set here. The default format is typically set from the negotiation done in &lt;a href=&quot;#accepts/2&quot;&gt;&lt;code&gt;accepts/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 형식은 템플릿을 원자로 렌더링 할 때 사용됩니다. 예를 들어 &lt;code&gt;render(conn, :foo)&lt;/code&gt; 는 &lt;code&gt;&quot;foo.FORMAT&quot;&lt;/code&gt; 을 렌더링 합니다. 여기서 형식은 여기에 설정된 형식입니다. 기본 형식은 일반적으로 &lt;a href=&quot;#accepts/2&quot;&gt; &lt;code&gt;accepts/2&lt;/code&gt; &lt;/a&gt; 에서 수행 된 협상에서 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="a654e5931463e5b13804f19ebe7438789fab9cac" translate="yes" xml:space="preserve">
          <source>This function accepts all options defined &lt;a href=&quot;http://erlang.org/doc/man/ssl.html&quot;&gt;in Erlang/OTP &lt;code&gt;:ssl&lt;/code&gt; documentation&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;http://erlang.org/doc/man/ssl.html&quot;&gt;Erlang / OTP &lt;code&gt;:ssl&lt;/code&gt; 문서에&lt;/a&gt; 정의 된 모든 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="1b203fe59546a0ae658a9d0fdb623d409065b4b9" translate="yes" xml:space="preserve">
          <source>This function accepts and validates all options defined in &lt;a href=&quot;http://www.erlang.org/doc/man/ssl.html&quot;&gt;the &lt;code&gt;ssl&lt;/code&gt; erlang module&lt;/a&gt;. With the following additions:</source>
          <target state="translated">이 기능은 받아들이고에 정의 된 모든 옵션의 유효성을 확인 &lt;a href=&quot;http://www.erlang.org/doc/man/ssl.html&quot;&gt; &lt;code&gt;ssl&lt;/code&gt; &lt;/a&gt; 얼랑 모듈을 . 다음이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="ff98681cd9fee831827f27fd0a9d833563a2d938" translate="yes" xml:space="preserve">
          <source>This function allows you to automatically sign and encrypt cookies. When signing or encryption is enabled, then any Elixir value can be stored in the cookie (except anonymous functions for security reasons). Once a value is signed or encrypted, you must also call &lt;a href=&quot;#fetch_cookies/2&quot;&gt;&lt;code&gt;fetch_cookies/2&lt;/code&gt;&lt;/a&gt; with the name of the cookies that are either signed or encrypted.</source>
          <target state="translated">이 기능을 사용하면 쿠키에 자동으로 서명하고 암호화 할 수 있습니다. 서명 또는 암호화가 활성화되면 모든 Elixir 값이 쿠키에 저장 될 수 있습니다 (보안상의 이유로 익명 함수 제외). 값이 서명되거나 암호화되면 서명 또는 암호화 된 쿠키 이름으로 &lt;a href=&quot;#fetch_cookies/2&quot;&gt; &lt;code&gt;fetch_cookies/2&lt;/code&gt; &lt;/a&gt; 도 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8560ae300306496e1e57a607297b4be5809ada0e" translate="yes" xml:space="preserve">
          <source>This function behaves the same as &lt;a href=&quot;#dump/2&quot;&gt;&lt;code&gt;dump/2&lt;/code&gt;&lt;/a&gt;, except for composite types the given &lt;code&gt;dumper&lt;/code&gt; function is used.</source>
          <target state="translated">이 함수 는 지정된 &lt;code&gt;dumper&lt;/code&gt; 기능이 사용되는 복합 유형을 제외하고 &lt;a href=&quot;#dump/2&quot;&gt; &lt;code&gt;dump/2&lt;/code&gt; &lt;/a&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="6a586051ba535bcfaa3ec3caebe587edd887bffe" translate="yes" xml:space="preserve">
          <source>This function behaves the same as &lt;a href=&quot;#load/2&quot;&gt;&lt;code&gt;load/2&lt;/code&gt;&lt;/a&gt;, except for composite types the given &lt;code&gt;loader&lt;/code&gt; function is used.</source>
          <target state="translated">이 함수 는 주어진 &lt;code&gt;loader&lt;/code&gt; 함수가 사용되는 복합 유형을 제외하고 &lt;a href=&quot;#load/2&quot;&gt; &lt;code&gt;load/2&lt;/code&gt; &lt;/a&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="e50d6767dc020a64e6d3d29750a6078f1a51289d" translate="yes" xml:space="preserve">
          <source>This function can also be used to dynamically load through associations by giving it a list. For example, to get all authors for all comments for the given posts, do:</source>
          <target state="translated">이 함수는 또한 목록을 제공하여 연관을 통해 동적으로로드하는 데 사용될 수 있습니다. 예를 들어, 주어진 게시물에 대한 모든 의견에 대한 모든 저자를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b31679aebb0e8c28069688039b1fa1e4998948f2" translate="yes" xml:space="preserve">
          <source>This function copies the cookie information in &lt;code&gt;old_conn&lt;/code&gt; into &lt;code&gt;new_conn&lt;/code&gt;, emulating multiple requests done by clients where cookies are always passed forward, and returns the new version of &lt;code&gt;new_conn&lt;/code&gt;.</source>
          <target state="translated">이러한 기능은 복사 쿠키 정보를 &lt;code&gt;old_conn&lt;/code&gt; 에 &lt;code&gt;new_conn&lt;/code&gt; 쿠키는 항상 앞으로 전달되는 클라이언트 및 반환의 새 버전에 의해 수행 여러 요청 모방, &lt;code&gt;new_conn&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="1fe1674ac966f1e7e84fdd91a095f600ff50b42e" translate="yes" xml:space="preserve">
          <source>This function depends on gathering the messages sent by the test adapter when assets are pushed. Calling this function will clear the pushed message from the inbox for the process. To assert on multiple pushes, the result of the function should be stored in a variable.</source>
          <target state="translated">이 기능은 자산이 푸시 될 때 테스트 어댑터가 보낸 메시지를 수집하는 데 달려 있습니다. 이 기능을 호출하면 프로세스의받은 편지함에서 푸시 된 메시지가 지워집니다. 여러 번 푸시하려면 함수 결과를 변수에 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="1660cbe1db7037c9964f911ded4eb4f26591a176" translate="yes" xml:space="preserve">
          <source>This function depends on gathering the messages sent by the test adapter when informational messages, such as an early hint, are sent. Calling this function will clear the informational request messages from the inbox for the process. To assert on multiple informs, the result of the function should be stored in a variable.</source>
          <target state="translated">이 기능은 초기 힌트와 같은 정보 메시지가 전송 될 때 테스트 어댑터가 전송 한 메시지를 수집하는 데 달려 있습니다. 이 함수를 호출하면 프로세스의받은 편지함에서 정보 요청 메시지가 지워집니다. 여러 정보에 대해 주장하려면 함수 결과를 변수에 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="a9a8dbd1e103ae7949082890ccdcca71a8261b80" translate="yes" xml:space="preserve">
          <source>This function does not fetch parameters from the body. To fetch parameters from the body, use the &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; plug.</source>
          <target state="translated">이 함수는 본문에서 매개 변수를 가져 오지 않습니다. 본문에서 매개 변수를 가져 오려면 &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 플러그를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8689955a82c196a1de5806c3547594bd18663df" translate="yes" xml:space="preserve">
          <source>This function exists as an extension point for libraries to add new types of associations to Ecto. For the existing APIs, see &lt;a href=&quot;#belongs_to/3&quot;&gt;&lt;code&gt;belongs_to/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#has_one/3&quot;&gt;&lt;code&gt;has_one/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 라이브러리가 Ecto에 새로운 유형의 연관을 추가하기위한 확장 점으로 존재합니다. 기존 API의 경우 &lt;a href=&quot;#belongs_to/3&quot;&gt; &lt;code&gt;belongs_to/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#has_many/3&quot;&gt; &lt;code&gt;has_many/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#has_one/3&quot;&gt; &lt;code&gt;has_one/3&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; 를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b2304f76a58fd59e742ef62114c970eef992a68" translate="yes" xml:space="preserve">
          <source>This function exists to provide quick feedback to users of your application. It should not be relied on for any data guarantee as it has race conditions and is inherently unsafe. For example, if this check happens twice in the same time interval (because the user submitted a form twice), both checks may pass and you may end-up with duplicate entries in the database. Therefore, a &lt;a href=&quot;#unique_constraint/3&quot;&gt;&lt;code&gt;unique_constraint/3&lt;/code&gt;&lt;/a&gt; should also be used to ensure your data won&amp;rsquo;t get corrupted.</source>
          <target state="translated">이 기능은 애플리케이션 사용자에게 빠른 피드백을 제공하기 위해 존재합니다. 경쟁 조건이 있으며 본질적으로 안전하지 않으므로 데이터 보증에 의존해서는 안됩니다. 예를 들어,이 확인이 같은 시간 간격으로 두 번 발생하면 (사용자가 양식을 두 번 제출했기 때문에) 두 확인이 모두 통과되어 데이터베이스에 중복 항목이 생길 수 있습니다. 따라서 &lt;a href=&quot;#unique_constraint/3&quot;&gt; &lt;code&gt;unique_constraint/3&lt;/code&gt; &lt;/a&gt; 를 사용하여 데이터가 손상되지 않도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="dc2d67a85e75f44fb49399d03fb1c45ee6231022" translate="yes" xml:space="preserve">
          <source>This function exists to provide quick feedback to users of your application. It should not be relied on for any data guarantee as it has race conditions and is inherently unsafe. For example, if this check happens twice in the same time interval (because the user submitted a form twice), both checks may pass and you may end-up with duplicate entries in the database. Therefore, a &lt;a href=&quot;#unique_constraint/3&quot;&gt;&lt;code&gt;unique_constraint/3&lt;/code&gt;&lt;/a&gt; should also be used to ensure your data won't get corrupted.</source>
          <target state="translated">이 기능은 애플리케이션 사용자에게 빠른 피드백을 제공하기 위해 존재합니다. 경쟁 조건이 있고 본질적으로 안전하지 않기 때문에 데이터 보증에 의존해서는 안됩니다. 예를 들어,이 검사가 동일한 시간 간격에 두 번 발생하면 (사용자가 양식을 두 번 제출했기 때문에) 두 검사가 모두 통과되어 데이터베이스에 중복 항목이 생길 수 있습니다. 따라서 데이터가 손상되지 않도록 &lt;a href=&quot;#unique_constraint/3&quot;&gt; &lt;code&gt;unique_constraint/3&lt;/code&gt; 도&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="73fef9a49538642527fff343bf96706313c19d33" translate="yes" xml:space="preserve">
          <source>This function expects the current schema, the association cardinality, the association name, the association module (that implements &lt;code&gt;Ecto.Association&lt;/code&gt; callbacks) and a keyword list of options.</source>
          <target state="translated">이 함수는 현재 스키마, 연관 카디널리티, 연관 이름, 연관 모듈 ( &lt;code&gt;Ecto.Association&lt;/code&gt; 콜백 을 구현 하는) 및 키워드 옵션 목록을 예상 합니다.</target>
        </trans-unit>
        <trans-unit id="9dea39cef34defdfd207a8eb99802b8d948cd9f6" translate="yes" xml:space="preserve">
          <source>This function generates the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag without its closing part. Check &lt;a href=&quot;#form_tag/3&quot;&gt;&lt;code&gt;form_tag/3&lt;/code&gt;&lt;/a&gt; for generating an enclosing tag.</source>
          <target state="translated">이 함수 는 닫는 부분없이 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그를 생성합니다 . 둘러싸는 태그를 생성하려면 &lt;a href=&quot;#form_tag/3&quot;&gt; &lt;code&gt;form_tag/3&lt;/code&gt; &lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="53f40e7f6118a94a757813a716439f649282ffc1" translate="yes" xml:space="preserve">
          <source>This function is a shortcut for:</source>
          <target state="translated">이 기능은 다음에 대한 바로 가기입니다.</target>
        </trans-unit>
        <trans-unit id="6306e2e81e647cdb91b3f8a11699265b79a2778b" translate="yes" xml:space="preserve">
          <source>This function is able to handle both chunked and identity transfer-encoding by default.</source>
          <target state="translated">이 기능은 기본적으로 청크 분할 및 신원 전송 인코딩을 모두 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="fe83ec596d61f20f781d548aba70cef9549cb117" translate="yes" xml:space="preserve">
          <source>This function is called when an application is started using &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; (and functions on top of that, such as &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#ensure_started/2&quot;&gt;&lt;code&gt;Application.ensure_started/2&lt;/code&gt;&lt;/a&gt;). This function should start the top-level process of the application (which should be the top supervisor of the application&amp;rsquo;s supervision tree if the application follows the OTP design principles around supervision).</source>
          <target state="translated">애플리케이션이 기동 된 경우이 함수를 호출 &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; (예컨대 그 위에,과 기능 &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#ensure_started/2&quot;&gt; &lt;code&gt;Application.ensure_started/2&lt;/code&gt; &lt;/a&gt; ). 이 기능은 응용 프로그램의 최상위 프로세스를 시작해야합니다 (응용 프로그램이 감독과 관련된 OTP 설계 원칙을 따르는 경우 응용 프로그램 감독 트리의 최고 감독자 여야 함).</target>
        </trans-unit>
        <trans-unit id="866cdfbc4d38507dc477d2b6e7b5a6b73c6d3bd8" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use reraise/1 or reraise/4 instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. reraise / 1 또는 reraise / 4를 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="889e6268cee5d42d732aa072ffb292fc6aa1faee" translate="yes" xml:space="preserve">
          <source>This function is especially useful when parsing raw query results:</source>
          <target state="translated">이 함수는 원시 쿼리 결과를 구문 분석 할 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f2fbdc7b6be0d3c0040fc63965553cbf76fdb977" translate="yes" xml:space="preserve">
          <source>This function is often called internally by adapters, such as Cowboy, to validate and set reasonable defaults for SSL handling. Therefore Plug users are not expected to invoke it directly, rather you pass the relevant SSL options to your adapter which then invokes this.</source>
          <target state="translated">이 기능은 종종 SSL과 같은 합리적인 기본값을 확인하고 설정하기 위해 카우보이와 같은 어댑터에 의해 내부적으로 호출됩니다. 따라서 플러그 사용자는 직접 호출하지 않아도되며 관련 SSL 옵션을 어댑터에 전달한 다음이를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ce00aa1228b7b92a142997d61b397de721dd3451" translate="yes" xml:space="preserve">
          <source>This function is particularly useful when associations and embeds are cast in the changeset as it will traverse all associations and embeds and place all errors in a series of nested maps.</source>
          <target state="translated">이 기능은 모든 연관 및 임베드를 순회하고 모든 오류를 일련의 중첩 된 맵에 배치하므로 변경 세트에서 연관 및 임베드가 캐스트 될 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9ea2792030796068ebee3771205dce320fb98fd5" translate="yes" xml:space="preserve">
          <source>This function is primarily used by &lt;a href=&quot;ecto.query#select_merge/3&quot;&gt;&lt;code&gt;Ecto.Query.select_merge/3&lt;/code&gt;&lt;/a&gt; to merge different select clauses.</source>
          <target state="translated">이 함수는 주로 &lt;a href=&quot;ecto.query#select_merge/3&quot;&gt; &lt;code&gt;Ecto.Query.select_merge/3&lt;/code&gt; &lt;/a&gt; 에서 다른 select 절을 병합 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="95e4d0ba9a962e855d63d60b4fd26e982ea84569" translate="yes" xml:space="preserve">
          <source>This function is used for authorization purposes and it may be invoked outside of the process that effectively runs the socket.</source>
          <target state="translated">이 함수는 권한 부여 목적으로 사용되며 소켓을 효과적으로 실행하는 프로세스 외부에서 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1f60f736835987ffe4d869279d98e0a0470fd3a" translate="yes" xml:space="preserve">
          <source>This function is used to work with associations as a whole. For example, if a Post has many Comments, it allows you to add, remove or change all comments at once. If your goal is to simply add a new comment to a post, then it is preferred to do so manually, as we will describe later in the &quot;Example: Adding a comment to a post&quot; section.</source>
          <target state="translated">이 기능은 전체적으로 연관 작업에 사용됩니다. 예를 들어 게시물에 많은 댓글이있는 경우 모든 댓글을 한 번에 추가, 제거 또는 변경할 수 있습니다. 단순히 게시물에 새 댓글을 추가하는 것이 목표 인 경우 나중에 &quot;예 : 게시물에 댓글 추가&quot;섹션에서 설명 하겠지만 수동으로 추가하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="22adf8e4771dc77ddcc4249d7919749c29698a38" translate="yes" xml:space="preserve">
          <source>This function is used to work with associations as a whole. For example, if a Post has many Comments, it allows you to add, remove or change all comments at once. If your goal is to simply add a new comment to a post, then it is preferred to do so manually, as we will describe later in the &amp;ldquo;Example: Adding a comment to a post&amp;rdquo; section.</source>
          <target state="translated">이 기능은 전체적으로 연관 작업에 사용됩니다. 예를 들어 게시물에 댓글이 많은 경우 모든 댓글을 한 번에 추가, 제거 또는 변경할 수 있습니다. 목표가 단순히 게시물에 새 댓글을 추가하는 것이라면 나중에&amp;ldquo;예 : 게시물에 댓글 추가&amp;rdquo;섹션에서 설명 할 것처럼 수동으로 작성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="08eda1f3849525ce418b408dadef19a29c0b6f84" translate="yes" xml:space="preserve">
          <source>This function is used to work with embeds as a whole. For embeds with cardinality one, &lt;code&gt;nil&lt;/code&gt; can be used to remove the existing entry. For embeds with many entries, an empty list may be given instead.</source>
          <target state="translated">이 기능은 전체를 포함하여 작업하는 데 사용됩니다. 카디널리티가 1 인 임베드의 경우 &lt;code&gt;nil&lt;/code&gt; 을 사용하여 기존 항목을 제거 할 수 있습니다. 항목이 많은 임베드의 경우 빈 목록이 대신 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dd54b454514d325837202458e298d9589a1ceed" translate="yes" xml:space="preserve">
          <source>This function is useful for removing empty strings sent via HTML forms. If you are providing an API, there is likely no need to invoke &lt;a href=&quot;#scrub_params/2&quot;&gt;&lt;code&gt;scrub_params/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 HTML 양식을 통해 전송 된 빈 문자열을 제거하는 데 유용합니다. API를 제공하는 경우 &lt;a href=&quot;#scrub_params/2&quot;&gt; &lt;code&gt;scrub_params/2&lt;/code&gt; &lt;/a&gt; 를 호출 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="64ae2d3a9800574311ce709ebfa7b91aac472431" translate="yes" xml:space="preserve">
          <source>This function is useful for sending boolean values to the server.</source>
          <target state="translated">이 함수는 부울 값을 서버로 보내는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2e8d3ec5712ad07392b313c25f730d33813e39fc" translate="yes" xml:space="preserve">
          <source>This function is useful for:</source>
          <target state="translated">이 기능은 다음에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5f05751e977e06b61bae3058808ef7801122a3bf" translate="yes" xml:space="preserve">
          <source>This function is useful when the code being invoked crashes and there is a need to verify a particular response was sent even with the crash. It returns a tuple with &lt;code&gt;{status, headers, body}&lt;/code&gt;.</source>
          <target state="translated">이 함수는 호출되는 코드가 충돌하고 충돌이 발생하더라도 특정 응답이 전송되었는지 확인할 필요가있을 때 유용합니다. &lt;code&gt;{status, headers, body}&lt;/code&gt; 로 튜플을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="feb7b5f249171806db774de8814da72fc6867cc9" translate="yes" xml:space="preserve">
          <source>This function is useful when the multi to be merged requires information from the original multi. Hence the second argument is an anonymous function that receives the multi changes so far. The anonymous function must return another multi.</source>
          <target state="translated">이 기능은 병합 할 멀티에 원래 멀티의 정보가 필요한 경우에 유용합니다. 따라서 두 번째 인수는 지금까지 다중 변경 사항을 수신하는 익명 함수입니다. 익명 함수는 다른 멀티를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="ea36ab9cf50bba27fd6813a84418b75a89007160" translate="yes" xml:space="preserve">
          <source>This function is useful when you may want to serve different content-types (such as JSON and HTML) from the same routes. However, if you always have distinct routes, you can also disable content negotiation and simply hardcode your format of choice in your route pipelines:</source>
          <target state="translated">이 함수는 동일한 경로에서 다른 콘텐츠 유형 (예 : JSON 및 HTML)을 제공하려는 경우에 유용합니다. 그러나 항상 고유 한 경로가있는 경우 콘텐츠 협상을 비활성화하고 경로 파이프 라인에서 선택한 형식을 간단히 하드 코딩 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="51ef3241f414eaf2fb4a40b3c68e3fe5a7aa4417" translate="yes" xml:space="preserve">
          <source>This function merges two changesets provided they have been applied to the same data (their &lt;code&gt;:data&lt;/code&gt; field is equal); if the data differs, an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; exception is raised. If one of the changesets has a &lt;code&gt;:repo&lt;/code&gt; field which is not &lt;code&gt;nil&lt;/code&gt;, then the value of that field is used as the &lt;code&gt;:repo&lt;/code&gt; field of the resulting changeset; if both changesets have a non-&lt;code&gt;nil&lt;/code&gt; and different &lt;code&gt;:repo&lt;/code&gt; field, an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">이 함수는 동일한 데이터에 적용된 두 개의 변경 세트를 병합합니다 (그들의 &lt;code&gt;:data&lt;/code&gt; 필드는 동일합니다). 데이터가 다르면 &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 변경 세트 중 하나에 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;code&gt;:repo&lt;/code&gt; 필드가 있는 경우 해당 필드의 값은 결과 변경 세트 의 &lt;code&gt;:repo&lt;/code&gt; 필드 로 사용됩니다 . 두 변경 세트에 모두 &lt;code&gt;nil&lt;/code&gt; 이 아닌 다른 &lt;code&gt;:repo&lt;/code&gt; 필드가 있으면 &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dbc0dbbbaa75e1f372b0e07a9f6b951709ad2563" translate="yes" xml:space="preserve">
          <source>This function must be called after the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; plug is invoked. If a token was not yet computed, it will be.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt; 플러그가 호출 된 후에 호출되어야합니다 . 토큰이 아직 계산되지 않은 경우 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="47d374217596346a6c9bf2274712172feb075b08" translate="yes" xml:space="preserve">
          <source>This function only looks at the &lt;code&gt;:changes&lt;/code&gt; field of the given &lt;code&gt;changeset&lt;/code&gt; and returns &lt;code&gt;{:ok, value}&lt;/code&gt; if the change is present or &lt;code&gt;:error&lt;/code&gt; if it&amp;rsquo;s not.</source>
          <target state="translated">이 함수 는 지정된 &lt;code&gt;changeset&lt;/code&gt; 의 &lt;code&gt;:changes&lt;/code&gt; 필드 만보 고 변경이있는 경우 &lt;code&gt;{:ok, value}&lt;/code&gt; , 그렇지 않은 경우 &lt;code&gt;:error&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="5e1143e93cf32871e96d09b6d702308f61d09b3a" translate="yes" xml:space="preserve">
          <source>This function only looks at the &lt;code&gt;:changes&lt;/code&gt; field of the given &lt;code&gt;changeset&lt;/code&gt; and returns &lt;code&gt;{:ok, value}&lt;/code&gt; if the change is present or &lt;code&gt;:error&lt;/code&gt; if it's not.</source>
          <target state="translated">이 함수 는 주어진 &lt;code&gt;changeset&lt;/code&gt; 의 &lt;code&gt;:changes&lt;/code&gt; 필드 만보 고 변경 사항이 있으면 &lt;code&gt;{:ok, value}&lt;/code&gt; 반환하고 그렇지 않으면 &lt;code&gt;:error&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b8bed5158880c80ee8a08504ebf97b167b84dc1" translate="yes" xml:space="preserve">
          <source>This function overrides the default URL generation pulled from the &lt;code&gt;%Plug.Conn{}&lt;/code&gt;'s endpoint configuration.</source>
          <target state="translated">이 함수는 &lt;code&gt;%Plug.Conn{}&lt;/code&gt; 의 끝점 구성 에서 가져온 기본 URL 생성을 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="58cb08d9d2f1cf23b4f2a78d41b863c40f49073a" translate="yes" xml:space="preserve">
          <source>This function raises &lt;a href=&quot;phoenix.notacceptableerror&quot;&gt;&lt;code&gt;Phoenix.NotAcceptableError&lt;/code&gt;&lt;/a&gt;, which is rendered with status 406, whenever the server cannot serve a response in any of the formats expected by the client.</source>
          <target state="translated">이 함수 는 &lt;a href=&quot;phoenix.notacceptableerror&quot;&gt; &lt;code&gt;Phoenix.NotAcceptableError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다.이 오류는 서버가 클라이언트가 예상 한 형식으로 응답을 제공 할 수 없을 때마다 상태 406으로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="1c663a7b4ad2604d2adc9bea7e89c5bd791f16f9" translate="yes" xml:space="preserve">
          <source>This function reads a chunk of the request body up to a given &lt;code&gt;:length&lt;/code&gt;. If there is more data to be read, then &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; is returned. Otherwise &lt;code&gt;{:ok, body, conn}&lt;/code&gt; is returned. In case of an error reading the socket, &lt;code&gt;{:error, reason}&lt;/code&gt; is returned as per &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt;&lt;code&gt;:gen_tcp.recv/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 주어진 &lt;code&gt;:length&lt;/code&gt; 까지 요청 본문의 청크를 읽습니다 . 읽을 데이터가 더 있으면 &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; 이 반환됩니다. 그렇지 않으면 &lt;code&gt;{:ok, body, conn}&lt;/code&gt; 이 반환됩니다. 소켓을 읽는 중에 오류가 발생하면 &lt;code&gt;{:error, reason}&lt;/code&gt; 이 &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt; &lt;code&gt;:gen_tcp.recv/2&lt;/code&gt; 에&lt;/a&gt; 따라 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="68ac965b424fbcfc28adb7e70510b4a5060b1986" translate="yes" xml:space="preserve">
          <source>This function reads a chunk of the request body up to a given length (specified by the &lt;code&gt;:length&lt;/code&gt; option). If there is more data to be read, then &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; is returned. Otherwise &lt;code&gt;{:ok, body, conn}&lt;/code&gt; is returned. In case of an error reading the socket, &lt;code&gt;{:error, reason}&lt;/code&gt; is returned as per &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt;&lt;code&gt;:gen_tcp.recv/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 주어진 길이 ( &lt;code&gt;:length&lt;/code&gt; 옵션으로 지정)까지 ​​요청 본문의 청크를 읽습니다 . 읽을 데이터가 더 있으면 &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; 이 반환됩니다. 그렇지 않으면 &lt;code&gt;{:ok, body, conn}&lt;/code&gt; 이 반환됩니다. 소켓을 읽는 중에 오류가 발생하면 &lt;code&gt;{:error, reason}&lt;/code&gt; 이 &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt; &lt;code&gt;:gen_tcp.recv/2&lt;/code&gt; 에&lt;/a&gt; 따라 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="d0c8691b7f9dfce0fa8e902a83efb3fb90903475" translate="yes" xml:space="preserve">
          <source>This function removes every key from the session, clearing the session.</source>
          <target state="translated">이 기능은 세션에서 모든 키를 제거하여 세션을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="23ea244127c3693a61fb279dd8a8823e78d495c2" translate="yes" xml:space="preserve">
          <source>This function requires the associated data to have been preloaded, except when the parent changeset has been newly build and not yet persisted. Missing data will invoke the &lt;code&gt;:on_replace&lt;/code&gt; behaviour defined on the association.</source>
          <target state="translated">이 기능을 사용하려면 상위 변경 세트가 새로 빌드되고 아직 지속되지 않은 경우를 제외하고 연관된 데이터가 사전로드되어 있어야합니다. 누락 된 데이터는 연결에 정의 된 &lt;code&gt;:on_replace&lt;/code&gt; 동작을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="508ff7af2c7302ba5ea60f62775c6f5a3c9b9900" translate="yes" xml:space="preserve">
          <source>This function requires the associated data to have been preloaded, except when the parent changeset has been newly built and not yet persisted. Missing data will invoke the &lt;code&gt;:on_replace&lt;/code&gt; behaviour defined on the association.</source>
          <target state="translated">이 함수를 사용하려면 상위 변경 집합이 새로 빌드되고 아직 유지되지 않은 경우를 제외하고 관련 데이터가 미리로드되어 있어야합니다. 누락 된 데이터는 연관에 정의 된 &lt;code&gt;:on_replace&lt;/code&gt; 동작을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="84382455309fc0aaf784468937d5e8642608c1e5" translate="yes" xml:space="preserve">
          <source>This function should be used when working with the entire association at once (and not a single element of a many-style association) and receiving data external to the application.</source>
          <target state="translated">이 함수는 전체 연결을 한 번에 처리하고 (다양한 스타일 연결의 단일 요소가 아님) 응용 프로그램 외부의 데이터를 수신 할 때 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3736933a577a29ee24ad93a05c7c32aef1bea88b" translate="yes" xml:space="preserve">
          <source>This function should be used when working with the entire association at once (and not a single element of a many-style association) and using data external to the application.</source>
          <target state="translated">이 기능은 한 번에 전체 연관 (다중 스타일 연관의 단일 요소가 아님)을 작업하고 애플리케이션 외부의 데이터를 사용할 때 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="481b5ba0284c556ea198200d20cec067478414db" translate="yes" xml:space="preserve">
          <source>This function should either return &lt;code&gt;{:ok, pid}&lt;/code&gt; or &lt;code&gt;{:ok, pid, state}&lt;/code&gt; if startup is successful. &lt;code&gt;pid&lt;/code&gt; should be the PID of the top supervisor. &lt;code&gt;state&lt;/code&gt; can be an arbitrary term, and if omitted will default to &lt;code&gt;[]&lt;/code&gt;; if the application is later stopped, &lt;code&gt;state&lt;/code&gt; is passed to the &lt;code&gt;stop/1&lt;/code&gt; callback (see the documentation for the &lt;code&gt;c:stop/1&lt;/code&gt; callback for more information).</source>
          <target state="translated">시작에 성공하면 이 함수는 &lt;code&gt;{:ok, pid}&lt;/code&gt; 또는 &lt;code&gt;{:ok, pid, state}&lt;/code&gt; 를 반환해야합니다 . &lt;code&gt;pid&lt;/code&gt; 는 최고 감독자의 PID 여야합니다. &lt;code&gt;state&lt;/code&gt; 는 임의의 용어 일 수 있으며 생략하면 기본값은 &lt;code&gt;[]&lt;/code&gt; 입니다 . 응용 프로그램이 나중에 중지되면 &lt;code&gt;state&lt;/code&gt; 는 &lt;code&gt;stop/1&lt;/code&gt; 콜백으로 전달됩니다 (자세한 내용은 &lt;code&gt;c:stop/1&lt;/code&gt; 콜백 설명서를 참조하십시오).</target>
        </trans-unit>
        <trans-unit id="bf1fdd59778e871792165fd9cd597befae6dbe8a" translate="yes" xml:space="preserve">
          <source>This function should return &lt;code&gt;{:ok, value}&lt;/code&gt; where &lt;code&gt;value&lt;/code&gt; is the value under &lt;code&gt;key&lt;/code&gt; if the key exists in the term, or &lt;code&gt;:error&lt;/code&gt; if the key does not exist in the term.</source>
          <target state="translated">이 기능은 반환해야합니다 &lt;code&gt;{:ok, value}&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; 아래의 값이 &lt;code&gt;key&lt;/code&gt; 키가 장기에 존재하는 경우, 또는 &lt;code&gt;:error&lt;/code&gt; 키가 용어에 존재하지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="5ba272759196f5f4398bb53efebf29cecd454930" translate="yes" xml:space="preserve">
          <source>This function should return:</source>
          <target state="translated">이 함수는 다음을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="734b0856ba9ef7d3fe8e856bcb519a57b1180774" translate="yes" xml:space="preserve">
          <source>This function, as well as &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#post/3&quot;&gt;&lt;code&gt;post/3&lt;/code&gt;&lt;/a&gt; and friends, accepts the request body or parameters as last argument:</source>
          <target state="translated">이 함수와 &lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#post/3&quot;&gt; &lt;code&gt;post/3&lt;/code&gt; &lt;/a&gt; 및 friends는 요청 본문 또는 매개 변수를 마지막 인수로 승인합니다.</target>
        </trans-unit>
        <trans-unit id="206f33c29b6ec02bb699170e45e3a167ce8f68a1" translate="yes" xml:space="preserve">
          <source>This functionality exists mostly for integration with &lt;code&gt;Phoenix.LiveView&lt;/code&gt; that replaces the anonymous function for explicit closing of the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">이 기능은 주로 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그 를 명시 적으로 닫는 익명 함수를 대체하는 &lt;code&gt;Phoenix.LiveView&lt;/code&gt; 와의 통합을 위해 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="5e501818f2a9b8d26ee849f92368c85b2aa84ace" translate="yes" xml:space="preserve">
          <source>This functionality exists mostly for integration with &lt;code&gt;Phoenix.LiveView&lt;/code&gt; that replaces the anonymous function for returning the generated forms instead.</source>
          <target state="translated">이 기능은 대부분 생성 된 양식을 대신 반환하기 위해 익명 함수를 대체하는 &lt;code&gt;Phoenix.LiveView&lt;/code&gt; 와의 통합을 위해 존재 합니다.</target>
        </trans-unit>
        <trans-unit id="60a9005f28b867008de687c6b297116271dbe0ee" translate="yes" xml:space="preserve">
          <source>This generator uses default options provided in the &lt;code&gt;:generators&lt;/code&gt; configuration of the &lt;code&gt;:phoenix&lt;/code&gt; application. These are the defaults:</source>
          <target state="translated">이 생성기는 &lt;code&gt;:phoenix&lt;/code&gt; 응용 프로그램 의 &lt;code&gt;:generators&lt;/code&gt; 구성에 제공된 기본 옵션을 사용 합니다. 이것이 기본값입니다 :</target>
        </trans-unit>
        <trans-unit id="a8c79d64b76e704cc3305c267e9609ec954e0a9b" translate="yes" xml:space="preserve">
          <source>This generator uses default options provided in the &lt;code&gt;:generators&lt;/code&gt; configuration of your application. These are the defaults:</source>
          <target state="translated">이 생성기는 응용 프로그램 의 &lt;code&gt;:generators&lt;/code&gt; 구성에 제공된 기본 옵션을 사용 합니다. 이것이 기본값입니다 :</target>
        </trans-unit>
        <trans-unit id="ea9fd1bcd7395e4e765f0c8c83f634242ed59708" translate="yes" xml:space="preserve">
          <source>This generator will automatically open the config/config.exs after generation if you have &lt;code&gt;ECTO_EDITOR&lt;/code&gt; set in your environment variable.</source>
          <target state="translated">환경 변수에 &lt;code&gt;ECTO_EDITOR&lt;/code&gt; 가 설정되어 있으면 생성기에서 생성 후 config / config.exs를 자동으로 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="351d79dff782082a2ce188e37bb0ce9252eef229" translate="yes" xml:space="preserve">
          <source>This inner representation allows us to render and compose templates easily. For example, if you want to render JSON data, we could do so by adding a &quot;show.json&quot; entry to &lt;code&gt;render/2&lt;/code&gt; in our view:</source>
          <target state="translated">이 내부 표현을 통해 템플릿을 쉽게 렌더링하고 구성 할 수 있습니다. 예를 들어, JSON 데이터를 &lt;code&gt;render/2&lt;/code&gt; 하려면 뷰에서 render / 2 에 &quot;show.json&quot;항목을 추가하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="0ef1c03d35aad86fcc35b135848f7173bd9a0fa9" translate="yes" xml:space="preserve">
          <source>This inner representation allows us to render and compose templates easily. For example, if you want to render JSON data, we could do so by adding a &amp;ldquo;show.json&amp;rdquo; entry to &lt;code&gt;render/2&lt;/code&gt; in our view:</source>
          <target state="translated">이 내부 표현을 통해 템플릿을 쉽게 렌더링하고 작성할 수 있습니다. 예를 들어 JSON 데이터를 &lt;code&gt;render/2&lt;/code&gt; 하려면 뷰에서 render / 2 에 &quot;show.json&quot;항목을 추가하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="9df51736f8af300b7e83be2bba6d0538a65eaf19" translate="yes" xml:space="preserve">
          <source>This is an implementation of EEx.Engine that guarantees templates are HTML Safe.</source>
          <target state="translated">템플릿이 HTML 안전임을 보장하는 EEx.Engine의 구현입니다.</target>
        </trans-unit>
        <trans-unit id="22dfd0ec4ef3534510402dea1f9a067863780a64" translate="yes" xml:space="preserve">
          <source>This is available only inside subqueries.</source>
          <target state="translated">이것은 하위 쿼리 내에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5329254754bcb5b1518f7c46c55cd4246cdc7b2b" translate="yes" xml:space="preserve">
          <source>This is best used in conjunction with &lt;code&gt;parent_as&lt;/code&gt; to correlate the subquery with the parent query to test some condition on related rows in a different table. In the above example the query returns posts which have at least one comment that has more than 5 replies.</source>
          <target state="translated">이는 &lt;code&gt;parent_as&lt;/code&gt; 와 함께 사용 하여 하위 쿼리를 상위 쿼리와 연관시켜 다른 테이블의 관련 행에 대한 일부 조건을 테스트하는 데 가장 적합 합니다. 위의 예에서 쿼리는 답글이 5 개 이상인 댓글이 하나 이상있는 게시물을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dd363ee9be583e8940f3872abf411010d65f4b10" translate="yes" xml:space="preserve">
          <source>This is callback is invoked when a custom type is given to &lt;code&gt;field&lt;/code&gt; with the &lt;code&gt;:autogenerate&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;:autogenerate&lt;/code&gt; 플래그를 사용하여 &lt;code&gt;field&lt;/code&gt; 사용자 정의 유형이 제공 될 때 호출되는 콜백입니다 .</target>
        </trans-unit>
        <trans-unit id="7a6276fd1995acb9d422ef5b0fccedcd0f49f563" translate="yes" xml:space="preserve">
          <source>This is configured in your application environment like:</source>
          <target state="translated">이것은 응용 프로그램 환경에서 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="543130ccea506a07596bda5da2eb43221176545d" translate="yes" xml:space="preserve">
          <source>This is done as a security measure to avoid attacks that attempt to traverse entries with nil columns. To check that value is &lt;code&gt;nil&lt;/code&gt;, use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_nil/1&quot;&gt;&lt;code&gt;is_nil/1&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="translated">이것은 열이없는 항목을 가로 지르는 공격을 피하기위한 보안 수단으로 수행됩니다. 이 값을 확인하려면 것은 &lt;code&gt;nil&lt;/code&gt; , 사용 &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_nil/1&quot;&gt; &lt;code&gt;is_nil/1&lt;/code&gt; &lt;/a&gt; 대신 :</target>
        </trans-unit>
        <trans-unit id="4067008cb24e88317e907e2f01cf3fea3ce7a290" translate="yes" xml:space="preserve">
          <source>This is done by regularly fetching the record from the database, then checking whether another user has made changes to the record &lt;em&gt;only when updating the record&lt;/em&gt;. This behaviour is ideal in situations where the chances of concurrent updates to the same record are low; if they&amp;rsquo;re not, pessimistic locking or other concurrency patterns may be more suited.</source>
          <target state="translated">데이터베이스에서 레코드를 정기적으로 가져 와서 다른 사용자가 레코드 &lt;em&gt;를 업데이트 할 때만&lt;/em&gt; 레코드를 변경했는지 여부를 확인 &lt;em&gt;하면됩니다&lt;/em&gt; . 이 동작은 동일한 레코드에 대한 동시 업데이트 가능성이 낮은 상황에 이상적입니다. 그렇지 않은 경우 비관적 잠금 또는 다른 동시성 패턴이 더 적합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="823d31394ade33b7711fd9d9b5d40e1240503c08" translate="yes" xml:space="preserve">
          <source>This is done by regularly fetching the record from the database, then checking whether another user has made changes to the record &lt;em&gt;only when updating the record&lt;/em&gt;. This behaviour is ideal in situations where the chances of concurrent updates to the same record are low; if they're not, pessimistic locking or other concurrency patterns may be more suited.</source>
          <target state="translated">이는 데이터베이스에서 정기적으로 레코드를 가져온 다음 레코드 &lt;em&gt;를 업데이트 할 때만&lt;/em&gt; 다른 사용자가 레코드를 변경했는지 여부를 확인하여 수행됩니다 . 이 동작은 동일한 레코드에 대한 동시 업데이트 가능성이 낮은 상황에서 이상적입니다. 그렇지 않은 경우 비관적 잠금 또는 기타 동시성 패턴이 더 적합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e8026b3623dfa096a82605e21a4cd8c802a6f2c" translate="yes" xml:space="preserve">
          <source>This is equivalent to setting the status and the body and then calling &lt;a href=&quot;#send_resp/1&quot;&gt;&lt;code&gt;send_resp/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 상태와 본문을 설정 한 다음 &lt;a href=&quot;#send_resp/1&quot;&gt; &lt;code&gt;send_resp/1&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d9ba82c91234fa5021cfb3b5cb56f8799ec54310" translate="yes" xml:space="preserve">
          <source>This is especially useful when working with subqueries, where you may need to refer to a parent binding with &lt;code&gt;parent_as&lt;/code&gt;, which is not known when writing the subquery:</source>
          <target state="translated">이는 하위 쿼리 를 작성할 때 알려지지 않은 &lt;code&gt;parent_as&lt;/code&gt; 를 사용하여 부모 바인딩을 참조해야하는 하위 쿼리로 작업 할 때 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="66c9554f976f86ea7cfddef7a13a078b61322160" translate="yes" xml:space="preserve">
          <source>This is helpful when you are not testing joining the channel and just need the socket.</source>
          <target state="translated">채널 가입 테스트를하지 않고 소켓 만 필요한 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e67b3c4ca838f0b073d784d2fa79097d1fe7dad2" translate="yes" xml:space="preserve">
          <source>This is invoked only once per socket regardless of the number of transports and should be responsible for setting up any process structure used exclusively by the socket regardless of transports.</source>
          <target state="translated">이것은 전송 수에 관계없이 소켓 당 한 번만 호출되며 전송에 관계없이 소켓에서 독점적으로 사용되는 모든 프로세스 구조를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2d0916f452cd067b42f99269461a6e8a22fcd085" translate="yes" xml:space="preserve">
          <source>This is particularly useful when used with &lt;a href=&quot;plug.builder#builder_opts/0&quot;&gt;&lt;code&gt;Plug.Builder.builder_opts/0&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;builder_opts/0&lt;/code&gt; allows us to pass options received when initializing &lt;code&gt;AppRouter&lt;/code&gt; to a specific plug, such as dispatch itself. So if instead of:</source>
          <target state="translated">이것은 &lt;a href=&quot;plug.builder#builder_opts/0&quot;&gt; &lt;code&gt;Plug.Builder.builder_opts/0&lt;/code&gt; &lt;/a&gt; 과 함께 사용할 때 특히 유용합니다 . &lt;code&gt;builder_opts/0&lt;/code&gt; 을 사용하면 &lt;code&gt;AppRouter&lt;/code&gt; 를 초기화 할 때받은 옵션 을 디스패치 자체와 같은 특정 플러그 로 전달할 수 있습니다 . 따라서 대신에 :</target>
        </trans-unit>
        <trans-unit id="13e4b6dd8b33a2972a835278b18e46ff4920ac2a" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#foreign_key_constraint/3&quot;&gt;&lt;code&gt;foreign_key_constraint/3&lt;/code&gt;&lt;/a&gt; except that the field is inferred from the association definition. This is useful to guarantee that a child will only be created if the parent exists in the database too. Therefore, it only applies to &lt;code&gt;belongs_to&lt;/code&gt; associations.</source>
          <target state="translated">필드가 연관 정의에서 유추된다는 점을 제외하면 &lt;a href=&quot;#foreign_key_constraint/3&quot;&gt; &lt;code&gt;foreign_key_constraint/3&lt;/code&gt; &lt;/a&gt; 와 유사합니다 . 부모가 데이터베이스에도 존재하는 경우에만 자식이 만들어 지도록하는 데 유용합니다. 따라서 &lt;code&gt;belongs_to&lt;/code&gt; 연관 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="02210ecf6e704066e98f3f150578efab0c87344d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#foreign_key_constraint/3&quot;&gt;&lt;code&gt;foreign_key_constraint/3&lt;/code&gt;&lt;/a&gt; except that the field is inferred from the association definition. This is useful to guarantee that parent can only be deleted (or have its primary key changed) if no child exists in the database. Therefore, it only applies to &lt;code&gt;has_*&lt;/code&gt; associations.</source>
          <target state="translated">필드가 연관 정의에서 유추된다는 점을 제외하면 &lt;a href=&quot;#foreign_key_constraint/3&quot;&gt; &lt;code&gt;foreign_key_constraint/3&lt;/code&gt; &lt;/a&gt; 와 유사합니다 . 데이터베이스에 자식이없는 경우에만 부모를 삭제하거나 기본 키를 변경할 수 있도록하는 데 유용합니다. 따라서 &lt;code&gt;has_*&lt;/code&gt; 연관 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="246766b43ac065cf7a6813d58181faa7501710d2" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;ecto.query#preload/3&quot;&gt;&lt;code&gt;Ecto.Query.preload/3&lt;/code&gt;&lt;/a&gt; except it allows you to preload structs after they have been fetched from the database.</source>
          <target state="translated">이것은 &lt;a href=&quot;ecto.query#preload/3&quot;&gt; &lt;code&gt;Ecto.Query.preload/3&lt;/code&gt; &lt;/a&gt; 와 유사합니다. 구조체에서 데이터베이스에서 가져온 구조체를 미리로드 할 수 있다는 점이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e4eed9ef50790eac0932b578ea9d27bff84cfd58" translate="yes" xml:space="preserve">
          <source>This is the documentation for the Phoenix project.</source>
          <target state="translated">이것은 Phoenix 프로젝트에 대한 문서입니다.</target>
        </trans-unit>
        <trans-unit id="1871b378b5a1fb4c4012fd59a4ce5d038f416585" translate="yes" xml:space="preserve">
          <source>This is useful for things like validation hints on form fields, e.g. an empty changeset for a new form. That changeset isn&amp;rsquo;t valid, but we don&amp;rsquo;t want to show errors until an actual user action has been performed.</source>
          <target state="translated">이는 양식 필드의 유효성 검사 힌트 (예 : 새 양식의 빈 변경 집합)에 유용합니다. 해당 변경 집합은 유효하지 않지만 실제 사용자 작업이 수행 될 때까지 오류를 표시하고 싶지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8eac94b23ec614fdc27f65b1253b4162ffa8a109" translate="yes" xml:space="preserve">
          <source>This is useful for things like validation hints on form fields, e.g. an empty changeset for a new form. That changeset isn't valid, but we don't want to show errors until an actual user action has been performed.</source>
          <target state="translated">이는 양식 필드에 대한 유효성 검사 힌트 (예 : 새 양식에 대한 빈 변경 집합)에 유용합니다. 해당 변경 집합은 유효하지 않지만 실제 사용자 작업이 수행 될 때까지 오류를 표시하고 싶지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b547124ded5a56cf030283e1096472422e728527" translate="yes" xml:space="preserve">
          <source>This is useful when a specific connection is required for testing a plug or a particular function.</source>
          <target state="translated">플러그 또는 특정 기능을 테스트하기 위해 특정 연결이 필요한 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="967c2f65e325112d9e81267fb5e803aaad342521" translate="yes" xml:space="preserve">
          <source>This is useful when building the select by hand. It expects all options and one or more select values.</source>
          <target state="translated">이것은 손으로 선택을 만들 때 유용합니다. 모든 옵션과 하나 이상의 선택 값이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="cc164165494ed01035c2fea10f32c91cf135eaeb" translate="yes" xml:space="preserve">
          <source>This is useful when the whole dataset was already loaded or must be explicitly fetched from elsewhere. The IDs received by the preloading function and the result returned depends on the association type:</source>
          <target state="translated">전체 데이터 세트가 이미로드되었거나 다른 곳에서 명시 적으로 가져와야 할 때 유용합니다. 사전로드 기능이 수신 한 ID 및 리턴 된 결과는 연관 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c1ee8628cd73b8b7149d50d393fe7c8fa56a351b" translate="yes" xml:space="preserve">
          <source>This is useful when you are creating forms that are not backed by any kind of data from the data layer, like a search form.</source>
          <target state="translated">이는 검색 폼과 같이 데이터 계층의 모든 종류의 데이터가 지원하지 않는 폼을 만들 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0765c6b4474540e333d6f27c42f79680532d7ff2" translate="yes" xml:space="preserve">
          <source>This is useful when you are creating forms that are not backed by any kind of data layer. Let's assume that we're submitting a form to the &lt;code&gt;:new&lt;/code&gt; action in the &lt;code&gt;FooController&lt;/code&gt;:</source>
          <target state="translated">이것은 어떤 종류의 데이터 레이어에서도 지원되지 않는 양식을 만들 때 유용합니다. &lt;code&gt;FooController&lt;/code&gt; 의 &lt;code&gt;:new&lt;/code&gt; 액션에 폼을 제출한다고 가정 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="557303ac218e1708373d1b4d8a6f4a9c23b313d1" translate="yes" xml:space="preserve">
          <source>This is useful, for example, to recompile modules that depend on external systems, such as directories, databases, etc. Note if you simply depend on external files, &lt;code&gt;@external_resource&lt;/code&gt; annotation should be used.</source>
          <target state="translated">이것은 예를 들어 디렉토리, 데이터베이스 등과 같은 외부 시스템에 의존하는 모듈을 재 컴파일하는 데 유용합니다. 단순히 외부 파일에 의존하는 경우 &lt;code&gt;@external_resource&lt;/code&gt; 주석을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f798383afb7474b032be11f12e76fdd26cfd9f6b" translate="yes" xml:space="preserve">
          <source>This layout is used by many parts of your application. However, there is a subsection of your application that wants to also add a sidebar. Let's call it &quot;blog.html&quot;. You can build on top of the existing layout in two steps. First, define the blog layout:</source>
          <target state="translated">이 레이아웃은 애플리케이션의 여러 부분에서 사용됩니다. 그러나 사이드 바도 추가하려는 애플리케이션의 하위 섹션이 있습니다. &quot;blog.html&quot;이라고합시다. 두 단계로 기존 레이아웃 위에 빌드 할 수 있습니다. 먼저 블로그 레이아웃을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="44a1ef9e37129dec0a33744ad55541c8ec1d1309" translate="yes" xml:space="preserve">
          <source>This macro accepts a set of options:</source>
          <target state="translated">이 매크로는 일련의 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="30cad0a3d348831413868904461ce3cb02695bb7" translate="yes" xml:space="preserve">
          <source>This macro also supports passing a nested block of route definitions. This is helpful for nesting children resources within their parents to generate nested routes.</source>
          <target state="translated">이 매크로는 또한 중첩 된 경로 정의 블록 전달을 지원합니다. 이는 부모 리소스 내에 자식 리소스를 중첩하여 중첩 된 경로를 생성하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="5272cc1708a897442f49d3861c8376d2c1684484" translate="yes" xml:space="preserve">
          <source>This macro doesn&amp;rsquo;t add any guards when adding the new plug to the pipeline; for more information about adding plugs with guards see &lt;code&gt;compile/1&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 파이프 라인에 새 플러그를 추가 할 때 가드를 추가하지 않습니다. 가드로 플러그를 추가하는 방법에 대한 자세한 내용은 &lt;code&gt;compile/1&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="84875e3a7e5339034bbbeafae9696406ba8d0be0" translate="yes" xml:space="preserve">
          <source>This macro doesn't add any guards when adding the new plug to the pipeline; for more information about adding plugs with guards see &lt;a href=&quot;#compile/3&quot;&gt;&lt;code&gt;compile/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 매크로는 파이프 라인에 새 플러그를 추가 할 때 가드를 추가하지 않습니다. 가드가있는 플러그 추가에 대한 자세한 내용은 &lt;a href=&quot;#compile/3&quot;&gt; &lt;code&gt;compile/3&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa7e3fdecd39a60479ea64ca6e42ffb064952aa0" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;a href=&quot;#select/3&quot;&gt;&lt;code&gt;select/3&lt;/code&gt;&lt;/a&gt; except it may be specified multiple times as long as every entry is a map. This is useful for merging and composing selects. For example:</source>
          <target state="translated">이 매크로는 &lt;a href=&quot;#select/3&quot;&gt; &lt;code&gt;select/3&lt;/code&gt; &lt;/a&gt; 와 유사하지만 모든 항목이 맵인 경우 여러 번 지정할 수 있습니다. 이것은 선택을 병합하고 구성하는 데 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="80844b87a747d5e664d2490ade69aea11936ad23" translate="yes" xml:space="preserve">
          <source>This may also happen on redirects. If you have a POST request to &lt;code&gt;foo.example.com&lt;/code&gt; that redirects to &lt;code&gt;bar.example.com&lt;/code&gt; with status 307, the token will contain a different host than the one in the request.</source>
          <target state="translated">리디렉션에서도 발생할 수 있습니다. 상태가 307 인 &lt;code&gt;bar.example.com&lt;/code&gt; 으로 경로 재지 정하는 &lt;code&gt;foo.example.com&lt;/code&gt; 에 대한 POST 요청이있는 경우 , 토큰은 요청의 호스트와 다른 호스트를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4a4f142c5563004d2613132e5bfe4d91c45a1a1d" translate="yes" xml:space="preserve">
          <source>This means guards can be given to &lt;code&gt;match&lt;/code&gt;:</source>
          <target state="translated">이것은 다음과 &lt;code&gt;match&lt;/code&gt; 경비원을 줄 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="46fcd9b428f43bc3ceced700d0d499071542798d" translate="yes" xml:space="preserve">
          <source>This means that when working with changesets that are not meant to be persisted to the database, such as schemaless changesets, you may need to explicitly set the action to one specific value. Frameworks such as Phoenix use the action value to define how HTML forms should act.</source>
          <target state="translated">이는 스키마없는 변경 세트와 같이 데이터베이스에 유지되지 않는 변경 세트로 작업 할 때 조치를 하나의 특정 값으로 명시 적으로 설정해야 할 수도 있음을 의미합니다. Phoenix와 같은 프레임 워크는 action 값을 사용하여 HTML 양식의 작동 방식을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ee54c80446b3760c6fb0a7486f59b47f284f3002" translate="yes" xml:space="preserve">
          <source>This mimics the behaviour existing in clients.</source>
          <target state="translated">이것은 클라이언트에 존재하는 동작을 모방합니다.</target>
        </trans-unit>
        <trans-unit id="c496c6a2b0bd7dfb1281705f319360c782f54b15" translate="yes" xml:space="preserve">
          <source>This module also provides functions to enable a secure environment on transports that, at some point, have access to a &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 또한 어느 시점에서 &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; 에&lt;/a&gt; 액세스 할 수있는 전송 환경에서 안전한 환경을 가능하게하는 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0f3ec12e95282c603be600f76b1efa0ba48fef74" translate="yes" xml:space="preserve">
          <source>This module also provides functions to enable a secure environment on transports that, at some point, have access to a &lt;a href=&quot;../plug/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 또한 어느 시점에서 &lt;a href=&quot;../plug/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; 에&lt;/a&gt; 액세스 할 수있는 전송에서 보안 환경을 활성화하는 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="6ebb63837f361cbf03a3796451f4fe31cebbd7a9" translate="yes" xml:space="preserve">
          <source>This module also provides functions to simulate leaving and closing a channel. Once you leave or close a channel, because the channel is linked to the test process on join, it will crash the test process:</source>
          <target state="translated">이 모듈은 또한 채널을 떠나고 닫는 것을 시뮬레이션하는 기능을 제공합니다. 채널은 연결시 테스트 프로세스에 연결되므로 채널을 종료하거나 닫으면 테스트 프로세스가 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="85f9b5e0210ecd7fadc5d5b219e6eb2289448aaa" translate="yes" xml:space="preserve">
          <source>This module also specifies a behaviour that all the parsers to be used with Plug should adopt.</source>
          <target state="translated">이 모듈은 또한 Plug와 함께 사용되는 모든 파서가 채택해야하는 동작을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d9c3143248084cc9c9ababd5b063a0b53a122a9b" translate="yes" xml:space="preserve">
          <source>This module can be &lt;code&gt;use&lt;/code&gt;-d into a module in order to build a plug pipeline:</source>
          <target state="translated">플러그 파이프 라인을 빌드하기 위해이 모듈을 -d를 모듈에 &lt;code&gt;use&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b51e359d7e48f146d0d1e937d9d0255d91dad914" translate="yes" xml:space="preserve">
          <source>This module can be used in your test cases, like this:</source>
          <target state="translated">이 모듈은 다음과 같이 테스트 케이스에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29fc81812b5b90ffe59423aab0c8bc729d76484f" translate="yes" xml:space="preserve">
          <source>This module defines a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct and the main functions for working with Plug connections.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; 구조체와 Plug 연결 작업을위한 주요 기능을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="070196252438bbce61c0f717094acdcf2e81b7f0" translate="yes" xml:space="preserve">
          <source>This module defines a &lt;a href=&quot;plug.conn#content&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct and the main functions for working with Plug connections.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;plug.conn#content&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; 구조체와 플러그 연결 작업을위한 주요 기능을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="3a8c2c7d59b4c13115d6ac023bd8ac70e7f55fc3" translate="yes" xml:space="preserve">
          <source>This module describes what is required to build a Phoenix transport. The transport sits between the socket and channels, forwarding client messages to channels and vice-versa.</source>
          <target state="translated">이 모듈은 Phoenix 전송을 구축하는 데 필요한 사항을 설명합니다. 전송은 소켓과 채널 사이에 위치하여 클라이언트 메시지를 채널로 전달하거나 그 반대로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="1bf3d32030d6f8a66f143a02bbf8343a335a4b15" translate="yes" xml:space="preserve">
          <source>This module documents each of those macros, providing examples in both the keywords query and pipe expression formats.</source>
          <target state="translated">이 모듈은 해당 매크로 각각을 문서화하여 키워드 쿼리 및 파이프 표현식 형식으로 예제를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a4abc0ee1ab071690365f6c903e68103b59a8146" translate="yes" xml:space="preserve">
          <source>This module is commonly used within a &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;plug.router&quot;&gt;&lt;code&gt;Plug.Router&lt;/code&gt;&lt;/a&gt; and it wraps the &lt;code&gt;call/2&lt;/code&gt; function.</source>
          <target state="translated">이 모듈은 일반적으로 내에서 사용 &lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;plug.router&quot;&gt; &lt;code&gt;Plug.Router&lt;/code&gt; &lt;/a&gt; 그리고 랩 &lt;code&gt;call/2&lt;/code&gt; 기능.</target>
        </trans-unit>
        <trans-unit id="bf931afdfdb9158aece8ce5e671b27951b8f8dc7" translate="yes" xml:space="preserve">
          <source>This module is deprecated. To use Cowboy 1 With Plug please include &lt;code&gt;plug_cowboy&lt;/code&gt; version 1.0 or above in your &lt;code&gt;mix.exs&lt;/code&gt; file. It is recommended that you use the &lt;code&gt;Plug.Cowboy&lt;/code&gt; module directly instead of Plug.Adapters.Cowboy.</source>
          <target state="translated">이 모듈은 더 이상 사용되지 않습니다. Cowboy 1 with Plug를 사용하려면 &lt;code&gt;mix.exs&lt;/code&gt; 파일 에 &lt;code&gt;plug_cowboy&lt;/code&gt; 버전 1.0 이상을 포함 하십시오. &lt;code&gt;Plug.Cowboy&lt;/code&gt; 대신 Plug.Cowboy 모듈을 직접 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4a03284231b4c9beab2d0b3147c2e873d6724e04" translate="yes" xml:space="preserve">
          <source>This module is deprecated. To use Cowboy 2 With Plug please include &lt;code&gt;plug_cowboy&lt;/code&gt; version 2.0 or above in your &lt;code&gt;mix.exs&lt;/code&gt; file. It is recommended that you use the &lt;code&gt;Plug.Cowboy&lt;/code&gt; module directly instead of Plug.Adapters.Cowboy2</source>
          <target state="translated">이 모듈은 더 이상 사용되지 않습니다. Cowboy 2 with Plug를 사용하려면 &lt;code&gt;mix.exs&lt;/code&gt; 파일 에 &lt;code&gt;plug_cowboy&lt;/code&gt; 버전 2.0 이상을 포함 시키 십시오 . &lt;code&gt;Plug.Cowboy&lt;/code&gt; 대신 Plug.Cowboy 모듈을 직접 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b1128cd9517be1b80b829d37c77e14445123041b" translate="yes" xml:space="preserve">
          <source>This module is used by Phoenix pubsub adapters to handle their local node subscriptions and it is usually not accessed directly. See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; for an example integration.</source>
          <target state="translated">이 모듈은 Phoenix pubsub 어댑터에서 로컬 노드 구독을 처리하는 데 사용되며 일반적으로 직접 액세스되지 않습니다. 통합 예는 &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18749daab402c4f9221f76b108eba5a09277b12b" translate="yes" xml:space="preserve">
          <source>This module is used to define the application&amp;rsquo;s main view, which serves as the base for all other views and templates.</source>
          <target state="translated">이 모듈은 다른 모든보기 및 템플릿의 기본 역할을하는 응용 프로그램의 기본보기를 정의하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6bfcb71b5835a83213d4dfa6ee58017a4845f8d7" translate="yes" xml:space="preserve">
          <source>This module is used to define the application's main view, which serves as the base for all other views and templates.</source>
          <target state="translated">이 모듈은 다른 모든보기 및 템플릿의 기반 역할을하는 애플리케이션의 기본보기를 정의하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0cd0bbb57a64e46e86f20c8dc2b8b74868181cea" translate="yes" xml:space="preserve">
          <source>This module provides conveniences for reading all files from a particular directory and embedding them into a single module. Imagine you have a directory with templates:</source>
          <target state="translated">이 모듈은 특정 디렉토리에서 모든 파일을 읽고 단일 모듈에 임베드하는 편의를 제공합니다. 템플릿이있는 디렉토리가 있다고 가정 해보십시오.</target>
        </trans-unit>
        <trans-unit id="4237a22f395fffa8c90b7f272130e1f9c638e3db" translate="yes" xml:space="preserve">
          <source>This module specifies a behaviour that all sockets must implement. &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; is just one possible implementation of a socket that multiplexes events over multiple channels. Developers can implement their own sockets as long as they implement the behaviour outlined here.</source>
          <target state="translated">이 모듈은 모든 소켓이 구현해야하는 동작을 지정합니다. &lt;a href=&quot;phoenix.socket&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; 은 여러 채널을 통해 이벤트를 다중화하는 소켓의 가능한 구현 중 하나입니다. 개발자는 여기에 설명 된 동작을 구현하는 한 자체 소켓을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1f8c7a704d8b281a05ab2c2ee94c670ce893f15" translate="yes" xml:space="preserve">
          <source>This must be executed from the process that will effectively operate the socket.</source>
          <target state="translated">이것은 소켓을 효과적으로 운영 할 프로세스에서 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a54461d29fcec4b636adb86f49d11ebedc8a4319" translate="yes" xml:space="preserve">
          <source>This operation uses the query cache if one is available.</source>
          <target state="translated">이 작업은 사용 가능한 경우 쿼리 캐시를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2e6392283fe53096fd6723c6a52bb14c1fbe0eee" translate="yes" xml:space="preserve">
          <source>This operation will return the underlying data with changes regardless if the changeset is valid or not.</source>
          <target state="translated">이 작업은 변경 집합이 유효한지 여부에 관계없이 기본 데이터를 변경 내용으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="049c09158996c650e55b8f1ec4561fa180509070" translate="yes" xml:space="preserve">
          <source>This option assumes the project was generated with the &lt;code&gt;--binary-id&lt;/code&gt; option, that sets up models to use &lt;code&gt;binary_id&lt;/code&gt; by default. If that&amp;rsquo;s not the case you can still set all your models to use &lt;code&gt;binary_id&lt;/code&gt; by default, by adding the following to your &lt;code&gt;model&lt;/code&gt; function in &lt;code&gt;web/web.ex&lt;/code&gt; or before the &lt;code&gt;schema&lt;/code&gt; declaration:</source>
          <target state="translated">이 옵션은 &lt;code&gt;--binary-id&lt;/code&gt; 옵션으로 프로젝트가 생성되었다고 가정합니다.이 옵션은 모델이 기본적으로 &lt;code&gt;binary_id&lt;/code&gt; 를 사용 하도록 설정합니다. 그렇지 않은 경우 &lt;code&gt;web/web.ex&lt;/code&gt; 의 &lt;code&gt;model&lt;/code&gt; 함수에 또는 &lt;code&gt;schema&lt;/code&gt; 선언 전에 다음을 모델 함수에 추가하여 기본적으로 &lt;code&gt;binary_id&lt;/code&gt; 를 사용하도록 모든 모델을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0391ffae92290b282aabdcb9895807452f2bfe1" translate="yes" xml:space="preserve">
          <source>This option is passed as the &lt;code&gt;:init_mode&lt;/code&gt; to &lt;a href=&quot;plug/plug.builder#compile/3&quot;&gt;&lt;code&gt;Plug.Builder.compile/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;:init_mode&lt;/code&gt; 로 &lt;a href=&quot;plug/plug.builder#compile/3&quot;&gt; &lt;code&gt;Plug.Builder.compile/3&lt;/code&gt; 에&lt;/a&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="60fcee5e8373c0151773e4d41d75fd04ea48fab0" translate="yes" xml:space="preserve">
          <source>This plug also fetches query params in the connection through &lt;a href=&quot;plug.conn#fetch_query_params/2&quot;&gt;&lt;code&gt;Plug.Conn.fetch_query_params/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 플러그는 또한 &lt;a href=&quot;plug.conn#fetch_query_params/2&quot;&gt; &lt;code&gt;Plug.Conn.fetch_query_params/2&lt;/code&gt; 를&lt;/a&gt; 통해 연결에서 쿼리 매개 변수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="40a4f301d5fad92658d3d0724f2518201be2787a" translate="yes" xml:space="preserve">
          <source>This plug can be mounted in a &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; pipeline as follows:</source>
          <target state="translated">이 플러그는 다음과 같이 &lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt; 파이프 라인에 장착 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6cd45326cadd9e10a4b5dcc83af5b2968ec6084" translate="yes" xml:space="preserve">
          <source>This plug doesn&amp;rsquo;t accept any options.</source>
          <target state="translated">이 플러그에는 옵션이 없습니다.</target>
        </trans-unit>
        <trans-unit id="50cd1542f80ce2c27c4180007ab1670d825bb257" translate="yes" xml:space="preserve">
          <source>This plug doesn't accept any options.</source>
          <target state="translated">이 플러그는 옵션을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="540542716621eaa96ff36e27e48730d06833088f" translate="yes" xml:space="preserve">
          <source>This plug expects the body parameters to be already parsed and fetched. Those can be fetched with &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 플러그는 본문 매개 변수가 이미 구문 분석되고 페치 될 것으로 예상합니다. 이것들은 &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 로 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01da79a8a81b2988c34c2c491464c98d17827644" translate="yes" xml:space="preserve">
          <source>This plug only parses the body if the request method is one of the following:</source>
          <target state="translated">이 플러그는 요청 메소드가 다음 중 하나 인 경우에만 본문을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="dbc4a6cf27af703236d09b35d3f5b453a3411f43" translate="yes" xml:space="preserve">
          <source>This plug overrides the request&amp;rsquo;s &lt;code&gt;POST&lt;/code&gt; method with the method defined in the &lt;code&gt;_method&lt;/code&gt; request parameter.</source>
          <target state="translated">이 플러그 는 &lt;code&gt;_method&lt;/code&gt; 요청 매개 변수에 정의 된 메소드로 요청의 &lt;code&gt;POST&lt;/code&gt; 메소드를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="f9183cda5f0f143ddaa1b79b7dc207c527edb3d2" translate="yes" xml:space="preserve">
          <source>This plug overrides the request's &lt;code&gt;POST&lt;/code&gt; method with the method defined in the &lt;code&gt;_method&lt;/code&gt; request parameter.</source>
          <target state="translated">이 플러그 는 &lt;code&gt;_method&lt;/code&gt; 요청 매개 변수에 정의 된 메소드로 요청의 &lt;code&gt;POST&lt;/code&gt; 메소드를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="9cbb2239965b1d685814f5586def8ff4895965d5" translate="yes" xml:space="preserve">
          <source>This plug will raise &lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt;&lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt;&lt;/a&gt; by default if the request cannot be parsed by any of the given types and the MIME type has not been explicitly accepted with the &lt;code&gt;:pass&lt;/code&gt; option.</source>
          <target state="translated">이 플러그는 지정된 형식으로 요청을 구문 분석 할 수없고 MIME 형식이 &lt;code&gt;:pass&lt;/code&gt; 옵션 으로 명시 적으로 허용되지 않은 경우 기본적으로 &lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt; &lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="662ed6e00ff1f8efa3e545b88277587544f54665" translate="yes" xml:space="preserve">
          <source>This plug will raise &lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt;&lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt;&lt;/a&gt; by default if the request cannot be parsed by any of the given types and the MIME type has not been explicity accepted with the &lt;code&gt;:pass&lt;/code&gt; option.</source>
          <target state="translated">이 플러그는 지정된 형식으로 요청을 구문 분석 할 수없고 &lt;code&gt;:pass&lt;/code&gt; 옵션 으로 MIME 형식을 명시 적으로 허용하지 않은 경우 기본적으로 &lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt; &lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="20bad4ce825285978d82d9c5c3e6eb11442c40e0" translate="yes" xml:space="preserve">
          <source>This plug won&amp;rsquo;t generate tokens automatically. Instead, tokens will be generated only when required by calling &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt;. In case you are generating the token for certain specific URL, you should use &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt;&lt;code&gt;get_csrf_token_for/1&lt;/code&gt;&lt;/a&gt; as that will avoid tokens from being leaked to other applications.</source>
          <target state="translated">이 플러그는 토큰을 자동으로 생성하지 않습니다. 대신, &lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; &lt;/a&gt; 을 호출하여 필요한 경우에만 토큰이 생성됩니다 . 특정 특정 URL에 대한 토큰을 생성하는 경우 다른 응용 프로그램으로 토큰이 유출되지 않도록 &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt; &lt;code&gt;get_csrf_token_for/1&lt;/code&gt; &lt;/a&gt; 을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ebbff7ffc8f75e2adf94800f3c930587cc10fe90" translate="yes" xml:space="preserve">
          <source>This plug won't generate tokens automatically. Instead, tokens will be generated only when required by calling &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt;. In case you are generating the token for certain specific URL, you should use &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt;&lt;code&gt;get_csrf_token_for/1&lt;/code&gt;&lt;/a&gt; as that will avoid tokens from being leaked to other applications.</source>
          <target state="translated">이 플러그는 토큰을 자동으로 생성하지 않습니다. 대신 토큰은 &lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; &lt;/a&gt; 을 호출하여 필요할 때만 생성됩니다 . 특정 URL에 대한 토큰을 생성하는 경우 &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt; &lt;code&gt;get_csrf_token_for/1&lt;/code&gt; &lt;/a&gt; 을 사용해야 토큰이 다른 애플리케이션으로 유출되는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d38ed574d39239d3ce1ee54fa402c6b77436c31" translate="yes" xml:space="preserve">
          <source>This process is two-fold:</source>
          <target state="translated">이 과정은 두 가지입니다.</target>
        </trans-unit>
        <trans-unit id="a867af678f59d04d7a0076e28e130a1a90e313f4" translate="yes" xml:space="preserve">
          <source>This protocol is used by URL helpers and other parts of the Phoenix stack. For example, when you write:</source>
          <target state="translated">이 프로토콜은 URL 도우미 및 Phoenix 스택의 다른 부분에서 사용됩니다. 예를 들어 다음과 같이 쓸 때</target>
        </trans-unit>
        <trans-unit id="b21ceddd638e1843ee72cb36616db0e5a04aafff" translate="yes" xml:space="preserve">
          <source>This storage is meant to be used by libraries and frameworks to avoid writing to the user storage (the &lt;code&gt;:assigns&lt;/code&gt; field). It is recommended for libraries/frameworks to prefix the keys with the library name.</source>
          <target state="translated">이 스토리지는 사용자 스토리지 ( &lt;code&gt;:assigns&lt;/code&gt; 필드)에 쓰지 않도록 라이브러리와 프레임 워크에서 사용됩니다 . 라이브러리 / 프레임 워크가 키 앞에 라이브러리 이름을 붙일 것을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="bcee46e9d2a4acc15bb7cd9f93742faef542611d" translate="yes" xml:space="preserve">
          <source>This store does not create the ETS table; it expects that an existing named table with public properties is passed as an argument.</source>
          <target state="translated">이 상점은 ETS 테이블을 작성하지 않습니다. 공용 속성을 가진 기존 명명 된 테이블이 인수로 전달 될 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="625b9c2d872b70c5c1c2329e2373298bcd36763e" translate="yes" xml:space="preserve">
          <source>This store, however, can be used as an example for creating custom storages, based on Redis, Memcached, or a database itself.</source>
          <target state="translated">그러나이 저장소는 Redis, Memcached 또는 데이터베이스 자체를 기반으로 사용자 지정 저장소를 만드는 예제로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="caef9692752dfc364ac9616409959d533077b374" translate="yes" xml:space="preserve">
          <source>This task accepts the same command-line arguments as &lt;code&gt;run&lt;/code&gt;. For additional information, refer to the documentation for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt;&lt;code&gt;Mix.Tasks.Run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 작업은 &lt;code&gt;run&lt;/code&gt; 과 동일한 명령 줄 인수를 허용 합니다 . 자세한 내용은 &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt; &lt;code&gt;Mix.Tasks.Run&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5878eb3c414b2f8b0bc85b921219b0b8c00c144" translate="yes" xml:space="preserve">
          <source>This validation is used to check for one specific parameter being true and as such does not require the field to effectively exist in the schema or the data being validated.</source>
          <target state="translated">이 유효성 검사는 하나의 특정 매개 변수가 true인지 확인하는 데 사용되므로 스키마 또는 유효성을 검사하는 데이터에 필드가 효과적으로 존재하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="d696deb31d0b50d9d5193d12918eed93ff0a69c5" translate="yes" xml:space="preserve">
          <source>This will allow you to cast and update only the association for the given country. The important point for partial changes is that any addresses, which were not preloaded won&amp;rsquo;t be changed.</source>
          <target state="translated">이렇게하면 특정 국가의 연결 만 전송하고 업데이트 할 수 있습니다. 부분 변경의 중요한 점은 미리로드되지 않은 주소는 변경되지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a25d158d0047cb15049aa3798895382c7cd6f354" translate="yes" xml:space="preserve">
          <source>This will allow you to cast and update only the association for the given country. The important point for partial changes is that any addresses, which were not preloaded won't be changed.</source>
          <target state="translated">이렇게하면 해당 국가의 연결 만 전송하고 업데이트 할 수 있습니다. 부분 변경의 중요한 점은 미리로드되지 않은 주소는 변경되지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="96c8ad2e97ff0533cdfdce33b58a986331978807" translate="yes" xml:space="preserve">
          <source>This will force the token to be deleted once the response is sent.</source>
          <target state="translated">응답이 전송되면 토큰이 강제로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="c6845572f50f3240fbaa36674696b8cf400c3eda" translate="yes" xml:space="preserve">
          <source>This will result in a migration with an &lt;code&gt;:integer&lt;/code&gt; column of &lt;code&gt;:user_id&lt;/code&gt; and create an index.</source>
          <target state="translated">&lt;code&gt;:integer&lt;/code&gt; 열이 &lt;code&gt;:user_id&lt;/code&gt; 인 마이그레이션이 발생 하고 인덱스가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="cde93bead76f590b8ac92f4411245903df6471af" translate="yes" xml:space="preserve">
          <source>This will result in a migration with an &lt;code&gt;:integer&lt;/code&gt; column of &lt;code&gt;:user_id&lt;/code&gt; and create an index. It will also generate the appropriate &lt;code&gt;belongs_to&lt;/code&gt; entry in the schema.</source>
          <target state="translated">&lt;code&gt;:integer&lt;/code&gt; 열이 &lt;code&gt;:user_id&lt;/code&gt; 인 마이그레이션이 발생 하고 인덱스가 작성됩니다. 또한 스키마에서 적절한 &lt;code&gt;belongs_to&lt;/code&gt; 엔트리를 생성 할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="36a1b1b32231c3e4ff53add950295c72883cbbfb" translate="yes" xml:space="preserve">
          <source>Those functions are imported from two modules:</source>
          <target state="translated">이러한 기능은 다음 두 모듈에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6208b0413cd71b1dcc6adedd2bd128dd9d87591a" translate="yes" xml:space="preserve">
          <source>Those guards work like regular Elixir guards and the only variables accessible in the guard are &lt;code&gt;conn&lt;/code&gt;, the &lt;code&gt;action&lt;/code&gt; as an atom and the &lt;code&gt;controller&lt;/code&gt; as an alias.</source>
          <target state="translated">이 가드는 일반 Elixir 가드처럼 작동하며 가드에서 액세스 할 수있는 유일한 변수는 &lt;code&gt;conn&lt;/code&gt; , 원자로서의 &lt;code&gt;action&lt;/code&gt; 및 별명으로 &lt;code&gt;controller&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="39d358d22755c113807898f4d747028acc84c714" translate="yes" xml:space="preserve">
          <source>Timeout while waiting for the request.</source>
          <target state="translated">요청을 기다리는 동안 시간이 초과되었습니다.</target>
        </trans-unit>
        <trans-unit id="4909edd3c35b1902875bfd0c83e9c081850f71db" translate="yes" xml:space="preserve">
          <source>To allow the user to download contents that are in memory as a binary or string:</source>
          <target state="translated">사용자가 메모리에있는 컨텐츠를 2 진 또는 문자열로 다운로드 할 수있게하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e6a6975b062fa8a73779dc6d912719d7498131ee" translate="yes" xml:space="preserve">
          <source>To assert that your channel closes or errors asynchronously, you can monitor the channel process with the tools provided by Elixir, and wait for the &lt;code&gt;:DOWN&lt;/code&gt; message. Imagine an implementation of the &lt;code&gt;handle_info/2&lt;/code&gt; function that closes the channel when it receives &lt;code&gt;:some_message&lt;/code&gt;:</source>
          <target state="translated">채널이 비동기 적으로 닫히거나 오류가 발생하도록하려면 Elixir에서 제공하는 도구를 사용하여 채널 프로세스를 모니터링하고 &lt;code&gt;:DOWN&lt;/code&gt; 메시지를 기다리십시오 . 구현의 상상 &lt;code&gt;handle_info/2&lt;/code&gt; 가 수신되면 상기 채널을 닫는 기능 &lt;code&gt;:some_message&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="53a832ff355a8bff56d545715860a666b9283a42" translate="yes" xml:space="preserve">
          <source>To authorize a socket in &lt;code&gt;join/3&lt;/code&gt;, return &lt;code&gt;{:ok, socket}&lt;/code&gt;. To refuse authorization in &lt;code&gt;join/3&lt;/code&gt;, return &lt;code&gt;{:error, reply}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;join/3&lt;/code&gt; 의 소켓에 권한을 부여하려면 &lt;code&gt;{:ok, socket}&lt;/code&gt; 리턴하십시오 . &lt;code&gt;join/3&lt;/code&gt; 에서 권한 부여를 거부하려면 &lt;code&gt;{:error, reply}&lt;/code&gt; 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="de3aa50e1fa13ab8540858290ff3bab5cc1ae7a1" translate="yes" xml:space="preserve">
          <source>To authorize a socket, return &lt;code&gt;{:ok, socket}&lt;/code&gt; or &lt;code&gt;{:ok, reply, socket}&lt;/code&gt;. To refuse authorization, return &lt;code&gt;{:error, reason}&lt;/code&gt;.</source>
          <target state="translated">소켓을 인증하려면 &lt;code&gt;{:ok, socket}&lt;/code&gt; 또는 &lt;code&gt;{:ok, reply, socket}&lt;/code&gt; 반환하십시오 . 승인을 거부하려면 &lt;code&gt;{:error, reason}&lt;/code&gt; 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="68caf8123fc9000c1892d49a830e2a777c1a2f79" translate="yes" xml:space="preserve">
          <source>To avoid race conditions, all code reloads are funneled through a sequential call operation.</source>
          <target state="translated">경쟁 조건을 피하기 위해 모든 코드 재로드는 순차적 호출 작업을 통해 퍼널 링됩니다.</target>
        </trans-unit>
        <trans-unit id="8adf099970e8f40f42c4a78cc8072bacf109f61f" translate="yes" xml:space="preserve">
          <source>To avoid the repetition of always specifying the types, you may define an &lt;a href=&quot;ecto.schema&quot;&gt;&lt;code&gt;Ecto.Schema&lt;/code&gt;&lt;/a&gt;. In such cases, Ecto will analyze your queries and automatically cast the interpolated &quot;age&quot; when compared to the &lt;code&gt;u.age&lt;/code&gt; field, as long as the age field is defined with type &lt;code&gt;:integer&lt;/code&gt; in your schema:</source>
          <target state="translated">항상 유형을 지정하는 반복을 피하기 위해 &lt;a href=&quot;ecto.schema&quot;&gt; &lt;code&gt;Ecto.Schema&lt;/code&gt; 를&lt;/a&gt; 정의 할 수 있습니다 . 이러한 경우, Ecto는 쿼리를 분석하고 &lt;code&gt;u.age&lt;/code&gt; 필드 와 비교할 때 보간 된 &quot;age&quot;를 자동으로 캐스팅합니다. 단 , age 필드가 스키마에서 &lt;code&gt;:integer&lt;/code&gt; 유형으로 정의 되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4da79393192b9d811f048b628589434c69cfc70f" translate="yes" xml:space="preserve">
          <source>To avoid the repetition of always specifying the types, you may define an &lt;a href=&quot;ecto.schema&quot;&gt;&lt;code&gt;Ecto.Schema&lt;/code&gt;&lt;/a&gt;. In such cases, Ecto will analyze your queries and automatically cast the interpolated &amp;ldquo;age&amp;rdquo; when compared to the &lt;code&gt;u.age&lt;/code&gt; field, as long as the age field is defined with type &lt;code&gt;:integer&lt;/code&gt; in your schema:</source>
          <target state="translated">항상 유형을 지정하는 반복을 피하기 위해 &lt;a href=&quot;ecto.schema&quot;&gt; &lt;code&gt;Ecto.Schema&lt;/code&gt; 를&lt;/a&gt; 정의 할 수 있습니다 . 이러한 경우 Ecto는 연령 필드가 스키마에서 &lt;code&gt;:integer&lt;/code&gt; 유형으로 정의되어 있는 한 &lt;code&gt;u.age&lt;/code&gt; 필드 와 비교할 때 쿼리를 분석하고 보간 된 &quot;나이&quot;를 자동으로 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="671a861e30e1350c320f440b81de252cf52633f6" translate="yes" xml:space="preserve">
          <source>To check if a given value is not nil use:</source>
          <target state="translated">주어진 값이 아닌지 확인하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="32b59c202fb3d6f550fc3db4a98cf2a4a434dded" translate="yes" xml:space="preserve">
          <source>To customize the JSON library, including the following in your &lt;code&gt;config/config.exs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;config/config.exs&lt;/code&gt; 에 다음을 포함하여 JSON 라이브러리를 사용자 정의하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf7347e6fe2acbe195851637b64939807583f935" translate="yes" xml:space="preserve">
          <source>To deny connection, return &lt;code&gt;:error&lt;/code&gt;.</source>
          <target state="translated">연결을 거부하려면 &lt;code&gt;:error&lt;/code&gt; 를 반환 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c26c7d45e6051c71e7fe3c380da3a4f17f88bda" translate="yes" xml:space="preserve">
          <source>To dump the state from the current process and load into another one:</source>
          <target state="translated">현재 프로세스에서 상태를 덤프하고 다른 프로세스로로드하려면 :</target>
        </trans-unit>
        <trans-unit id="1756faaf0ba51188a497e41da02799505ffedbc4" translate="yes" xml:space="preserve">
          <source>To emulate this behaviour, this module provides the idea of recycling. The &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; function receives a connection and returns a new connection, similar to the one returned by &lt;a href=&quot;#build_conn/0&quot;&gt;&lt;code&gt;build_conn/0&lt;/code&gt;&lt;/a&gt; with all the response cookies from the previous connection defined as request headers. This is useful when testing multiple routes that require cookies or session to work.</source>
          <target state="translated">이 동작을 모방하기 위해이 모듈은 재활용에 대한 아이디어를 제공합니다. &lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt; 함수에 의해 리턴 된 것과 유사한 연결 복귀 새로운 연결 수신 &lt;a href=&quot;#build_conn/0&quot;&gt; &lt;code&gt;build_conn/0&lt;/code&gt; &lt;/a&gt; 요청 헤더로 정의 이전 연결 모든 응답을 쿠키. 이는 쿠키 또는 세션이 작동해야하는 여러 경로를 테스트 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="384f423fceb68dce0e44059e7dc17f0229bd095a" translate="yes" xml:space="preserve">
          <source>To emulate this behaviour, this module provides the idea of recycling. The &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; function receives a connection and returns a new connection, similar to the one returned by &lt;a href=&quot;#conn/0&quot;&gt;&lt;code&gt;conn/0&lt;/code&gt;&lt;/a&gt; with all the response cookies from the previous connection defined as request headers. This is useful when testing multiple routes that require cookies or session to work.</source>
          <target state="translated">이 동작을 모방하기 위해이 모듈은 재활용 아이디어를 제공합니다. &lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt; 함수에 의해 리턴 된 것과 유사한 연결 복귀 새로운 연결 수신 &lt;a href=&quot;#conn/0&quot;&gt; &lt;code&gt;conn/0&lt;/code&gt; &lt;/a&gt; 요청 헤더로 정의 이전 연결 모든 응답을 쿠키. 쿠키 나 세션이 작동해야하는 여러 경로를 테스트 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ce8e7a44c764d649b22d4767dfb19181500bc611" translate="yes" xml:space="preserve">
          <source>To encrypt, you would do:</source>
          <target state="translated">암호화하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9add98f21666a54716c50850567b90f96e0b16a8" translate="yes" xml:space="preserve">
          <source>To generate a path to an image hosted in your application &quot;priv/static&quot;, with the &lt;code&gt;@conn&lt;/code&gt; endpoint, use &lt;code&gt;static_path/2&lt;/code&gt; to get a URL with cache control parameters:</source>
          <target state="translated">&lt;code&gt;@conn&lt;/code&gt; 엔드 포인트를 사용 하여 애플리케이션 &quot;priv / static&quot;에서 호스팅되는 이미지에 대한 경로를 생성하려면 &lt;code&gt;static_path/2&lt;/code&gt; 를 사용 하여 캐시 제어 매개 변수가있는 URL을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b31df5e294e6f54107ca6b36caf70de5a703ae9d" translate="yes" xml:space="preserve">
          <source>To generate a path to an image hosted in your application &amp;ldquo;priv/static&amp;rdquo;, use &lt;code&gt;static_path/1&lt;/code&gt; to get a URL with cache control parameters:</source>
          <target state="translated">애플리케이션 &quot;priv / static&quot;에서 호스팅되는 이미지의 경로를 생성하려면 &lt;code&gt;static_path/1&lt;/code&gt; 을 사용 하여 캐시 제어 매개 변수가있는 URL을 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="166e05bfe8272abd2c663bb42e431b56b9c76ee6" translate="yes" xml:space="preserve">
          <source>To generate a path to an image hosted in your application &amp;ldquo;priv/static&amp;rdquo;, with the &lt;code&gt;@conn&lt;/code&gt; endpoint, use &lt;code&gt;static_path/2&lt;/code&gt; to get a URL with cache control parameters:</source>
          <target state="translated">&lt;code&gt;@conn&lt;/code&gt; 엔드 포인트를 사용 하여 애플리케이션 &quot;priv / static&quot;에서 호스팅되는 이미지의 경로를 생성하려면 &lt;code&gt;static_path/2&lt;/code&gt; 를 사용 하여 캐시 제어 매개 변수가있는 URL을 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="da5cf0c3b662f85cf689692d186e495d82685f37" translate="yes" xml:space="preserve">
          <source>To get started, define the module attribute &lt;code&gt;@endpoint&lt;/code&gt; in your test case pointing to your application endpoint.</source>
          <target state="translated">시작하려면 테스트 케이스에서 애플리케이션 엔드 포인트를 가리키는 모듈 속성 &lt;code&gt;@endpoint&lt;/code&gt; 를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f00e2408e6e8f684d6ca6cbd6ebed088bfa8147" translate="yes" xml:space="preserve">
          <source>To get started, see our &lt;a href=&quot;phoenix/overview&quot;&gt;overview guides&lt;/a&gt;.</source>
          <target state="translated">시작하려면 &lt;a href=&quot;phoenix/overview&quot;&gt;개요 가이드를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="2c017a576254a552f3b45b37a156813727bf60fc" translate="yes" xml:space="preserve">
          <source>To have coalesce/2 available, just import the module that defines it.</source>
          <target state="translated">통합 / 2를 사용 가능하게하려면이를 정의하는 모듈을 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="e75ef0e9c4fd7b13190431887d04db3dc76e0ef4" translate="yes" xml:space="preserve">
          <source>To hide a fields value from the inspect protocol of &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;, mark the field as &lt;code&gt;redact: true&lt;/code&gt; in the schema, and it will display with the value &lt;code&gt;**redacted**&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; 의 검사 프로토콜에서 필드 값을 숨기려면 스키마에서 필드를 redact &lt;code&gt;redact: true&lt;/code&gt; 로 표시하면 &lt;code&gt;**redacted**&lt;/code&gt; 값으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="07ecc754901c9b7b1612b2347516e5e86c89fd01" translate="yes" xml:space="preserve">
          <source>To load data from non-database sources, use &lt;a href=&quot;ecto#embedded_load/3&quot;&gt;&lt;code&gt;Ecto.embedded_load/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비 데이터베이스 소스에서 데이터를로드하려면 &lt;a href=&quot;ecto#embedded_load/3&quot;&gt; &lt;code&gt;Ecto.embedded_load/3&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9c5bfde6fe357ce410561f8996b3ca30aa626e4" translate="yes" xml:space="preserve">
          <source>To log the status of requests being sent:</source>
          <target state="translated">전송중인 요청의 상태를 기록하려면 다음을 수행하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
