<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="8f22e24a0f14141c0a07471831a995b431c4d4a9" translate="yes" xml:space="preserve">
          <source>Positional bindings</source>
          <target state="translated">위치 바인딩</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="1d8d45efe4711e940a65de942b245c7be34d53e8" translate="yes" xml:space="preserve">
          <source>PostgreSQL (via &lt;a href=&quot;https://github.com/elixir-ecto/postgrex&quot;&gt;&lt;code&gt;postgrex&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">PostgreSQL ( &lt;a href=&quot;https://github.com/elixir-ecto/postgrex&quot;&gt; &lt;code&gt;postgrex&lt;/code&gt; &lt;/a&gt; 를 통해 )</target>
        </trans-unit>
        <trans-unit id="00163df16628eaef40506b8cec5bfb27a52396ac" translate="yes" xml:space="preserve">
          <source>PostgreSQL is a relational database server. Phoenix configures applications to use it by default, but we can switch to MySQL or MSSQL by passing the &lt;code&gt;--database&lt;/code&gt; flag when creating a new application.</source>
          <target state="translated">PostgreSQL은 관계형 데이터베이스 서버입니다. Phoenix는 기본적으로이를 사용하도록 애플리케이션을 구성하지만 새 애플리케이션을 만들 때 &lt;code&gt;--database&lt;/code&gt; 플래그 를 전달하여 MySQL 또는 MSSQL로 전환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d8628155ecbea56dc3de3214b9bf98106246adc" translate="yes" xml:space="preserve">
          <source>Postgres will only count a row if it was affected and will return 0 if no new entry was added.</source>
          <target state="translated">Postgres will only count a row if it was affected and will return 0 if no new entry was added.</target>
        </trans-unit>
        <trans-unit id="43be1843debfbe414dde067364b7ee2a673dc134" translate="yes" xml:space="preserve">
          <source>Predefined Options</source>
          <target state="translated">미리 정의 된 옵션</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="ca26cf04dc10c40abe8bd5b4d429603695f19c64" translate="yes" xml:space="preserve">
          <source>Preload also allows functions to be given. In such cases, the function receives the IDs of the parent association and it must return the associated data. Ecto then will map this data and sort it by the relationship key:</source>
          <target state="translated">예압은 또한 기능을 부여 할 수 있습니다. 이러한 경우, 함수는 상위 연관의 ID를 수신하며 연관된 데이터를 리턴해야합니다. 그런 다음 Ecto는이 데이터를 매핑하고 관계 키를 기준으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="ff7140ac657faf56b763438de02e7461c0a93db8" translate="yes" xml:space="preserve">
          <source>Preload also allows queries to be given, allowing you to filter or customize how the preloads are fetched:</source>
          <target state="translated">또한 사전로드를 통해 쿼리를 제공하여 사전로드를 가져 오는 방법을 필터링하거나 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9110f27182acc231f413041578614fd22b8eb1f" translate="yes" xml:space="preserve">
          <source>Preload functions</source>
          <target state="translated">예압 기능</target>
        </trans-unit>
        <trans-unit id="2d581adaa509265aa0b4253352fab86b0836da76" translate="yes" xml:space="preserve">
          <source>Preload queries</source>
          <target state="translated">사전로드 쿼리</target>
        </trans-unit>
        <trans-unit id="0195153c4712fe97c5d243a78c341839a16f8830" translate="yes" xml:space="preserve">
          <source>Preloading and update</source>
          <target state="translated">미리로드 및 업데이트</target>
        </trans-unit>
        <trans-unit id="304623a6b5434594bc695a82d3d75f58820f512f" translate="yes" xml:space="preserve">
          <source>Preloading can also be done with a pre-defined join value:</source>
          <target state="translated">사전 정의 된 결합 값으로 사전로드를 수행 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="449fcc848afdf91c2d970b121f64f50471d49049" translate="yes" xml:space="preserve">
          <source>Preloads all associations on the given struct or structs</source>
          <target state="translated">주어진 구조체 또는 구조체에 대한 모든 연결을 미리로드합니다</target>
        </trans-unit>
        <trans-unit id="8ff284b72518fce2743861685658f4b586be1af9" translate="yes" xml:space="preserve">
          <source>Preloads all associations on the given struct or structs.</source>
          <target state="translated">주어진 구조체 또는 구조체에 대한 모든 연결을 미리로드합니다.</target>
        </trans-unit>
        <trans-unit id="ed8bc6be23a4152960a0dd5f09b747712848aa2c" translate="yes" xml:space="preserve">
          <source>Preloads the associations into the result set</source>
          <target state="translated">결과 집합에 연결을 미리로드</target>
        </trans-unit>
        <trans-unit id="6e1fba265bbc07b1018f3daff40a29e8807cf715" translate="yes" xml:space="preserve">
          <source>Preloads the associations into the result set.</source>
          <target state="translated">연결을 결과 집합에 미리로드합니다.</target>
        </trans-unit>
        <trans-unit id="e712bebf7898f5514cba7310bf2e423398e6a8f4" translate="yes" xml:space="preserve">
          <source>Prepends the list of headers to the connection response headers</source>
          <target state="translated">헤더 목록을 연결 응답 헤더 앞에 추가</target>
        </trans-unit>
        <trans-unit id="c8238eff0c74999befc9cd4bffa90cdc7f34ffd6" translate="yes" xml:space="preserve">
          <source>Prepends the list of headers to the connection response headers.</source>
          <target state="translated">헤더 목록을 연결 응답 헤더 앞에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1eaa5c07101c4c96d10c35b7c91b844b4826eb41" translate="yes" xml:space="preserve">
          <source>Prepends the second multi to the first one</source>
          <target state="translated">두 번째 멀티를 첫 번째 멀티 앞에 추가</target>
        </trans-unit>
        <trans-unit id="5f56bddd7cd54b857167ed79f490fa02ef38fcf8" translate="yes" xml:space="preserve">
          <source>Prepends the second multi to the first one.</source>
          <target state="translated">두 번째 멀티를 첫 번째 멀티 앞에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="87c03f8e193e2a1d889cbeee77155f96b4f96f39" translate="yes" xml:space="preserve">
          <source>Presence data structure</source>
          <target state="translated">Presence data structure</target>
        </trans-unit>
        <trans-unit id="1bf230814fff81dd8a0b32cf0b2e76e4135a707d" translate="yes" xml:space="preserve">
          <source>Presence datastructure</source>
          <target state="translated">존재 데이터 구조</target>
        </trans-unit>
        <trans-unit id="5d08b2e5f9de0676df3a449fc17978467cbe92c4" translate="yes" xml:space="preserve">
          <source>Presence metadata should be minimized and used to store small, ephemeral state, such as a user&amp;rsquo;s &amp;ldquo;online&amp;rdquo; or &amp;ldquo;away&amp;rdquo; status. More detailed information, such as user details that need to be fetched from the database, can be achieved by overriding the &lt;code&gt;fetch/2&lt;/code&gt; function. The &lt;code&gt;fetch/2&lt;/code&gt; callback is triggered when using &lt;code&gt;list/1&lt;/code&gt; and serves as a mechanism to fetch presence information a single time, before broadcasting the information to all channel subscribers. This prevents N query problems and gives you a single place to group isolated data fetching to extend presence metadata. The function must return a map of data matching the outlined Presence datastructure, including the &lt;code&gt;:metas&lt;/code&gt; key, but can extend the map of information to include any additional information. For example:</source>
          <target state="translated">존재 메타 데이터는 최소화되어야하며 사용자의 &quot;온라인&quot;또는 &quot;자리 비움&quot;상태와 같은 작은 임시 상태를 저장하는 데 사용해야합니다. 데이터베이스에서 페치해야하는 사용자 세부 사항과 같은보다 자세한 정보는 &lt;code&gt;fetch/2&lt;/code&gt; 기능 을 대체하여 얻을 수 있습니다 . &lt;code&gt;fetch/2&lt;/code&gt; 사용시 콜백 트리거 &lt;code&gt;list/1&lt;/code&gt; 모든 채널 가입자에게 정보를 방송하기 전에, 현재 상태 정보는 단일 시간 인출하는기구로서 기능한다. 이를 통해 N 쿼리 문제를 방지하고 격리 된 데이터 가져 오기를 그룹화하여 현재 상태 메타 데이터를 확장 할 수 있습니다. 이 함수는 &lt;code&gt;:metas&lt;/code&gt; 를 포함하여 설명 된 현재 상태 데이터 구조와 일치하는 데이터 맵을 리턴해야합니다 .추가 정보를 포함하도록 정보 맵을 확장 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a416b4573cdb9c8201cb1108e5abba31b620032d" translate="yes" xml:space="preserve">
          <source>Presence metadata should be minimized and used to store small, ephemeral state, such as a user's &quot;online&quot; or &quot;away&quot; status. More detailed information, such as user details that need to be fetched from the database, can be achieved by overriding the &lt;a href=&quot;#c:fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Presence metadata should be minimized and used to store small, ephemeral state, such as a user's &quot;online&quot; or &quot;away&quot; status. More detailed information, such as user details that need to be fetched from the database, can be achieved by overriding the &lt;a href=&quot;#c:fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt; function.</target>
        </trans-unit>
        <trans-unit id="f679a8e091eef73d07cba4ab47f3068b414227f9" translate="yes" xml:space="preserve">
          <source>Pretty neat, right? At compile-time, Phoenix precompiles all &lt;code&gt;*.html.eex&lt;/code&gt; templates and turns them into &lt;code&gt;render/2&lt;/code&gt; function clauses on their respective view modules. At runtime, all templates are already loaded in memory. There's no disk reads, complex file caching, or template engine computation involved.</source>
          <target state="translated">꽤 깔끔 하죠? 컴파일 타임에 Phoenix는 모든 &lt;code&gt;*.html.eex&lt;/code&gt; 템플릿을 사전 컴파일 하고 각 뷰 모듈에서 &lt;code&gt;render/2&lt;/code&gt; 함수 절로 변환합니다. 런타임에 모든 템플릿은 이미 메모리에로드되어 있습니다. 디스크 읽기, 복잡한 파일 캐싱 또는 템플릿 엔진 계산이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad4e547e8cb4878118301ac4a5a99eb9df61c2f4" translate="yes" xml:space="preserve">
          <source>Pretty simple, right? Let's see this function in action by adding it to our endpoint in &lt;code&gt;lib/hello_web/endpoint.ex&lt;/code&gt;. We can plug it anywhere, so let's do it before we delegate the request to the router:</source>
          <target state="translated">아주 간단 하죠? &lt;code&gt;lib/hello_web/endpoint.ex&lt;/code&gt; 의 엔드 포인트에 추가하여이 함수가 작동하는지 살펴 보겠습니다 . 아무 데나 연결할 수 있으므로 요청을 라우터에 위임하기 전에 먼저 연결해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="e517ee5fd3782b5ee136558aa5e08fab77ad1688" translate="yes" xml:space="preserve">
          <source>Primary keys</source>
          <target state="translated">기본 키</target>
        </trans-unit>
        <trans-unit id="d5d326173765f18d3920ac10253aee656359c234" translate="yes" xml:space="preserve">
          <source>Primary keys are automatically set up for embedded schemas as well, defaulting to &lt;code&gt;{:id, :binary_id, autogenerate: true}&lt;/code&gt;. You can customize it by passing a &lt;code&gt;:primary_key&lt;/code&gt; option with the same arguments as &lt;code&gt;@primary_key&lt;/code&gt; (see the &lt;a href=&quot;ecto.schema#module-schema-attributes&quot;&gt;Schema attributes&lt;/a&gt; section for more info).</source>
          <target state="translated">Primary keys are automatically set up for embedded schemas as well, defaulting to &lt;code&gt;{:id, :binary_id, autogenerate: true}&lt;/code&gt; . You can customize it by passing a &lt;code&gt;:primary_key&lt;/code&gt; option with the same arguments as &lt;code&gt;@primary_key&lt;/code&gt; (see the &lt;a href=&quot;ecto.schema#module-schema-attributes&quot;&gt;Schema attributes&lt;/a&gt; section for more info).</target>
        </trans-unit>
        <trans-unit id="2588c16289f8812a6ecec3a161121af067dfc0c2" translate="yes" xml:space="preserve">
          <source>Primitive Ecto types (handled by Ecto)</source>
          <target state="translated">기본 Ecto 유형 (Ecto에서 처리)</target>
        </trans-unit>
        <trans-unit id="0093cbed38843f68b6f366917fe909fd8402e40f" translate="yes" xml:space="preserve">
          <source>Primitive Ecto types (handled by Ecto).</source>
          <target state="translated">원시 Ecto 유형 (Ecto에서 처리).</target>
        </trans-unit>
        <trans-unit id="c7969f1f2306323d21ee870b267eca96e3a3e899" translate="yes" xml:space="preserve">
          <source>Primitive types</source>
          <target state="translated">기본 유형</target>
        </trans-unit>
        <trans-unit id="fe98f070edfbab910ee3be5d3d76bad2f467ce4f" translate="yes" xml:space="preserve">
          <source>Prints Ecto tasks and their information.</source>
          <target state="translated">Ecto 작업 및 해당 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="9df1e736d55890af35599510d5e38d8df9712b42" translate="yes" xml:space="preserve">
          <source>Prints Phoenix tasks and their information.</source>
          <target state="translated">Phoenix 작업 및 해당 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="4a298469066076ddb91007494cd88022b0f4cf3e" translate="yes" xml:space="preserve">
          <source>Prints all routes for the default or a given router.</source>
          <target state="translated">기본 라우터 또는 지정된 라우터의 모든 경로를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="82aec652f1c3e836ec44cf83ec9501b88e6be4c4" translate="yes" xml:space="preserve">
          <source>Private fields</source>
          <target state="translated">개인 분야</target>
        </trans-unit>
        <trans-unit id="9e489044184e7cf5d3cda9f6aa3a63baf00a3355" translate="yes" xml:space="preserve">
          <source>Products and their category names for breadcrumbs:</source>
          <target state="translated">Products and their category names for breadcrumbs:</target>
        </trans-unit>
        <trans-unit id="7877c89a86f5c4b6e93396bd56b4bbb6a92ccd09" translate="yes" xml:space="preserve">
          <source>Programming Phoenix 1.4 (by Bruce Tate and Phoenix core team members Chris McCord and Jos&amp;eacute; Valim - 2019)</source>
          <target state="translated">프로그래밍 Phoenix 1.4 (Bruce Tate 및 Phoenix 핵심 팀원 Chris McCord 및 Jos&amp;eacute; Valim-2019)</target>
        </trans-unit>
        <trans-unit id="801ffc72b4193c6782428c0718ed85066d64b674" translate="yes" xml:space="preserve">
          <source>Progress animation</source>
          <target state="translated">진행 애니메이션</target>
        </trans-unit>
        <trans-unit id="475e3aae10d5c63b46ce008725e2909682e8384a" translate="yes" xml:space="preserve">
          <source>Proper handling of latency is critical for good UX. LiveView's CSS loading states allow the client to provide user feedback while awaiting a server response. In development, near zero latency on localhost does not allow latency to be easily represented or tested, so LiveView includes a latency simulator with the JavaScript client to ensure your application provides a pleasant experience. Like the &lt;code&gt;enableDebug()&lt;/code&gt; function above, the &lt;code&gt;LiveSocket&lt;/code&gt; instance includes &lt;code&gt;enableLatencySim(milliseconds)&lt;/code&gt; and &lt;code&gt;disableLatencySim()&lt;/code&gt; functions which apply throughout the current browser session. The &lt;code&gt;enableLatencySim&lt;/code&gt; function accepts an integer in milliseconds for the round-trip-time to the server. For example:</source>
          <target state="translated">적절한 대기 시간 처리는 좋은 UX를 위해 중요합니다. LiveView의 CSS 로딩 상태를 통해 클라이언트는 서버 응답을 기다리는 동안 사용자 피드백을 제공 할 수 있습니다. 개발 과정에서 localhost의 대기 시간이 거의 제로에 가깝기 때문에 대기 시간을 쉽게 표현하거나 테스트 할 수 없으므로 LiveView에는 JavaScript 클라이언트와 함께 대기 시간 시뮬레이터가 포함되어있어 애플리케이션이 즐거운 경험을 제공 할 수 있습니다. 위 의 &lt;code&gt;enableDebug()&lt;/code&gt; 함수 와 마찬가지로 &lt;code&gt;LiveSocket&lt;/code&gt; 인스턴스에는 현재 브라우저 세션 전체에 적용되는 &lt;code&gt;enableLatencySim(milliseconds)&lt;/code&gt; 및 &lt;code&gt;disableLatencySim()&lt;/code&gt; 함수가 포함되어 있습니다. &lt;code&gt;enableLatencySim&lt;/code&gt; 의 기능은 서버에 대한 왕복 시간 (밀리 초)의 정수를 받아들입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="ee62e44d9fc28f0e40981ad46d74e22429e353a0" translate="yes" xml:space="preserve">
          <source>Pros and Cons</source>
          <target state="translated">장점과 단점</target>
        </trans-unit>
        <trans-unit id="00d7bff394707ff8ca7c92bbbd9cdf113ae8278b" translate="yes" xml:space="preserve">
          <source>Protocol Versioning</source>
          <target state="translated">프로토콜 버전 관리</target>
        </trans-unit>
        <trans-unit id="2a6e3082f7bd2a56b001fbb1624e361e5599002d" translate="yes" xml:space="preserve">
          <source>Protocols</source>
          <target state="translated">Protocols</target>
        </trans-unit>
        <trans-unit id="780f5573a265cc23b30d338cabcd3ea38a94ed92" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;~E&lt;/code&gt; sigil with HTML safe EEx syntax inside source files.</source>
          <target state="translated">소스 파일 내에서 HTML 안전 EEx 구문으로 &lt;code&gt;~E&lt;/code&gt; sigil을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="37a68a4ca8b314125d991ac037e071234c234845" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;~L&lt;/code&gt; sigil with HTML safe Live EEx syntax inside source files.</source>
          <target state="translated">소스 파일 내에서 HTML 안전 Live EEx 구문으로 &lt;code&gt;~L&lt;/code&gt; 시길을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="687a61c55b17542323d929bd200a10884a0e91be" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;~e&lt;/code&gt; sigil with HTML safe EEx syntax inside source files.</source>
          <target state="translated">소스 파일 내에서 HTML 안전 EEx 구문과 함께 &lt;code&gt;~e&lt;/code&gt; sigil을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d5a43c76749f2977a1181182f43e7ec44e6865ad" translate="yes" xml:space="preserve">
          <source>Provides LiveView routing for Phoenix routers.</source>
          <target state="translated">Phoenix 라우터에 대한 LiveView 라우팅을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="998f97af64a3938f5709a872c30f27a4b5e7a966" translate="yes" xml:space="preserve">
          <source>Provides Presence tracking to processes and channels.</source>
          <target state="translated">프로세스 및 채널에 현재 상태 추적을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e3d44138048976fdd4f21cedc40e7d02b11f8872" translate="yes" xml:space="preserve">
          <source>Provides a function executed by the repository on insert/update/delete.</source>
          <target state="translated">Provides a function executed by the repository on insert/update/delete.</target>
        </trans-unit>
        <trans-unit id="d34511baecbee2b647331ac6eec3703d31533067" translate="yes" xml:space="preserve">
          <source>Provides a function to run before emitting changes to the repository</source>
          <target state="translated">리포지토리에 변경 사항을 보내기 전에 실행할 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="51994184213ec7cfcec62e33c13c2bc71ab7f50d" translate="yes" xml:space="preserve">
          <source>Provides a function to run before emitting changes to the repository.</source>
          <target state="translated">저장소에 변경 사항을 생성하기 전에 실행할 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9b979a1bb30192f6df28ff86089f8880a0ed2d5f" translate="yes" xml:space="preserve">
          <source>Provides a keyword list of default configuration for socket transports</source>
          <target state="translated">소켓 전송을위한 기본 구성의 키워드 목록을 제공합니다</target>
        </trans-unit>
        <trans-unit id="f1c971eb806de2d6bb68ff53036312dadf3d1f30" translate="yes" xml:space="preserve">
          <source>Provides a keyword list of default configuration for socket transports.</source>
          <target state="translated">소켓 전송에 대한 기본 구성 키워드 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9d55f86792e5cf44aad6965f41554bd9b735d6b9" translate="yes" xml:space="preserve">
          <source>Provides a server child specification to be started under the endpoint</source>
          <target state="translated">엔드 포인트에서 시작될 서버 하위 스펙을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8682306f1ef165bae5c2cd28457fc3f9eb9169dd" translate="yes" xml:space="preserve">
          <source>Provides a server child specification to be started under the endpoint.</source>
          <target state="translated">엔드 포인트에서 시작될 서버 하위 스펙을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ba8a0eb4a37b52358e3cb2fe1dbb14623bdab7c7" translate="yes" xml:space="preserve">
          <source>Provides an ORSWOT CRDT.</source>
          <target state="translated">ORSWOT CRDT를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="73232c78dcef985cdff9857c0fd2512dd7d0853b" translate="yes" xml:space="preserve">
          <source>Provides distributed Presence tracking to processes.</source>
          <target state="translated">프로세스에 분산 된 프레즌스 추적을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="44be9870ae1bd5112e9210a7645bdf4a6faceafb" translate="yes" xml:space="preserve">
          <source>Provides support for row-level pessimistic locking using &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; or other, database-specific, locking clauses. &lt;code&gt;expr&lt;/code&gt; can be any expression but has to evaluate to a boolean value or to a string and it can&amp;rsquo;t include any fields.</source>
          <target state="translated">&lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; 또는 기타 데이터베이스 별 잠금 절을 사용하여 행 수준 비관적 잠금을 지원합니다 . &lt;code&gt;expr&lt;/code&gt; 은 모든 표현식이 될 수 있지만 부울 값 또는 문자열로 평가되어야하며 필드를 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7b19d0a9f2b10e76159a9372ebc4aa93900c6236" translate="yes" xml:space="preserve">
          <source>Provides support for row-level pessimistic locking using &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; or other, database-specific, locking clauses. &lt;code&gt;expr&lt;/code&gt; can be any expression but has to evaluate to a boolean value or to a string and it can't include any fields.</source>
          <target state="translated">Provides support for row-level pessimistic locking using &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; or other, database-specific, locking clauses. &lt;code&gt;expr&lt;/code&gt; can be any expression but has to evaluate to a boolean value or to a string and it can't include any fields.</target>
        </trans-unit>
        <trans-unit id="d5eb2c4db6daf7a18463ffbaa31d480a7a2ee937" translate="yes" xml:space="preserve">
          <source>Provides the Query DSL.</source>
          <target state="translated">쿼리 DSL을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5cc490a5d56473eaf126a919ed9e5f3d868ce250" translate="yes" xml:space="preserve">
          <source>Providing secure defaults</source>
          <target state="translated">안전한 기본값 제공</target>
        </trans-unit>
        <trans-unit id="1276f3b4f4dd53c6f5d22c75ea5ee23f93c6dfb6" translate="yes" xml:space="preserve">
          <source>Proxy type to the adapter meta</source>
          <target state="translated">어댑터 메타에 대한 프록시 유형</target>
        </trans-unit>
        <trans-unit id="5a34389b39c3b88f292ed74ab2d16c7cacfb3495" translate="yes" xml:space="preserve">
          <source>PubSub adapters run inside their own supervision tree. If you are interested in providing your own adapter, let&amp;rsquo;s call it &lt;code&gt;Phoenix.PubSub.MyQueue&lt;/code&gt;, the first step is to provide a supervisor module that receives the server name and a bunch of options on &lt;code&gt;start_link/2&lt;/code&gt;:</source>
          <target state="translated">PubSub 어댑터는 자체 감독 트리 내에서 실행됩니다. 자체 어댑터 제공에 관심이있는 경우 &lt;code&gt;Phoenix.PubSub.MyQueue&lt;/code&gt; 라는 첫 번째 단계는 &lt;code&gt;start_link/2&lt;/code&gt; 에서 서버 이름과 여러 옵션을 수신하는 수퍼바이저 모듈을 제공하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="5d2a845d92daf366b87a96034042e6b435a1c537" translate="yes" xml:space="preserve">
          <source>PubSub implementation for handling local-node process groups.</source>
          <target state="translated">로컬 노드 프로세스 그룹을 처리하기위한 PubSub 구현</target>
        </trans-unit>
        <trans-unit id="99cf009c36ce68265bfb1764fc3797590279cfc3" translate="yes" xml:space="preserve">
          <source>Pubsub adapters are often configured in your endpoint:</source>
          <target state="translated">Pubsub 어댑터는 종종 엔드 포인트에서 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="0fa8f337c4243b77ae52e53077d7b3e39bafed62" translate="yes" xml:space="preserve">
          <source>Push a resource to the client</source>
          <target state="translated">클라이언트에게 리소스를 푸시</target>
        </trans-unit>
        <trans-unit id="8dae6f573e91623ac373ec20142b10e46bff8ca9" translate="yes" xml:space="preserve">
          <source>Push a resource to the client.</source>
          <target state="translated">클라이언트에게 리소스를 푸시하십시오.</target>
        </trans-unit>
        <trans-unit id="fe640326b9ef3ba06df8495f92545c8251203dc4" translate="yes" xml:space="preserve">
          <source>Pushes a message into the channel</source>
          <target state="translated">메시지를 채널로 푸시</target>
        </trans-unit>
        <trans-unit id="ef300f5e659260d3eb4a7737cf01f710d20c2491" translate="yes" xml:space="preserve">
          <source>Pushes a message into the channel.</source>
          <target state="translated">메시지를 채널로 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="2aafdd29732bf6232c51fa8dff6c97cf039ad580" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client</source>
          <target state="translated">클라이언트에게 리소스를 푸시</target>
        </trans-unit>
        <trans-unit id="343e743a2165ed61ae48116989c279025c3d5d91" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client but raises if the adapter does not support server push</source>
          <target state="translated">클라이언트에 자원을 푸시하지만 어댑터가 서버 푸시를 지원하지 않으면 발생</target>
        </trans-unit>
        <trans-unit id="20fdcb6dfd8955f2c899e01fce1ff1d46da03169" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client but raises if the adapter does not support server push.</source>
          <target state="translated">클라이언트에 자원을 푸시하지만 어댑터가 서버 푸시를 지원하지 않으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f0e508bf2a11488e99e666f2bfe6e99c4276f338" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client.</source>
          <target state="translated">클라이언트에 리소스를 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="0e97f2c15978decddaafce51dad4277eb5b5c7cc" translate="yes" xml:space="preserve">
          <source>Pushes an event to the client to be consumed by hooks.</source>
          <target state="translated">후크에서 사용할 이벤트를 클라이언트에 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="3a67f3d149b84ceeec029ab012171057049c841e" translate="yes" xml:space="preserve">
          <source>Put headers that improve browser security</source>
          <target state="translated">브라우저 보안을 향상시키는 헤더 넣기</target>
        </trans-unit>
        <trans-unit id="f4a913b2f483af15d2f9e83b6901a9de1f588a0d" translate="yes" xml:space="preserve">
          <source>Put headers that improve browser security.</source>
          <target state="translated">브라우저 보안을 향상시키는 헤더를 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="8ee443cfc894074df3d4ec386ad8ca2b64de4375" translate="yes" xml:space="preserve">
          <source>Puts a change on the given &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 으로 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="00a4f82a5c5b18560d1aacba1550b6c83f1fa5b3" translate="yes" xml:space="preserve">
          <source>Puts a change on the given &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 로 변경 합니다 .</target>
        </trans-unit>
        <trans-unit id="741fd025d65f46f242fb5bd6a467fa59b5895077" translate="yes" xml:space="preserve">
          <source>Puts a request cookie</source>
          <target state="translated">요청 쿠키를 넣습니다</target>
        </trans-unit>
        <trans-unit id="7be5afb720006adb8876e294e39a4168d5efa70f" translate="yes" xml:space="preserve">
          <source>Puts a request cookie.</source>
          <target state="translated">요청 쿠키를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="4a6873e4434775312bde6568b519ae9caa4da55f" translate="yes" xml:space="preserve">
          <source>Puts a response cookie</source>
          <target state="translated">응답 쿠키를 넣습니다</target>
        </trans-unit>
        <trans-unit id="b6834445ae0b44b5bf121eaaab9f7de7f803ecb9" translate="yes" xml:space="preserve">
          <source>Puts a response cookie in the connection</source>
          <target state="translated">연결에 응답 쿠키를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="eae2e2953d992e259527f70922816fdaa79edb2b" translate="yes" xml:space="preserve">
          <source>Puts a response cookie in the connection.</source>
          <target state="translated">연결에 응답 쿠키를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="7c14521e098d7e0db356324b05045f4d7ed52bdb" translate="yes" xml:space="preserve">
          <source>Puts a response cookie.</source>
          <target state="translated">응답 쿠키를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="e3756acc73bbfc2da183a76a6bc36f399be1caba" translate="yes" xml:space="preserve">
          <source>Puts connect info to be used on LiveView connections.</source>
          <target state="translated">LiveView 연결에 사용할 연결 정보를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="e1ed15f311e02338c258abe86aca78be00c9e82e" translate="yes" xml:space="preserve">
          <source>Puts connect params to be used on LiveView connections.</source>
          <target state="translated">LiveView 연결에 사용할 연결 매개 변수를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="f25c1ae0cbc4f231cefcb63821a30f0fec461188" translate="yes" xml:space="preserve">
          <source>Puts the URL or &lt;code&gt;%URI{}&lt;/code&gt; to be used for the static url generation.</source>
          <target state="translated">Puts the URL or &lt;code&gt;%URI{}&lt;/code&gt; to be used for the static url generation.</target>
        </trans-unit>
        <trans-unit id="815a50a2068711e3951e905471b283fd46344a7d" translate="yes" xml:space="preserve">
          <source>Puts the format in the connection</source>
          <target state="translated">연결에 형식을 넣습니다.</target>
        </trans-unit>
        <trans-unit id="7d2d574ef257cfc83db02346e4caf116a2146dcc" translate="yes" xml:space="preserve">
          <source>Puts the format in the connection.</source>
          <target state="translated">연결에 형식을 넣습니다.</target>
        </trans-unit>
        <trans-unit id="fc09e81b5f5ad87cea799616c6d979c26d068caa" translate="yes" xml:space="preserve">
          <source>Puts the given association entry or entries as a change in the changeset</source>
          <target state="translated">주어진 연관 항목을 변경 세트의 변경 사항으로 넣습니다.</target>
        </trans-unit>
        <trans-unit id="54cd5c18dcae6efd2695b356d96271d86bdacd7a" translate="yes" xml:space="preserve">
          <source>Puts the given association entry or entries as a change in the changeset.</source>
          <target state="translated">지정된 연관 항목을 변경 세트의 변경 사항으로 둡니다.</target>
        </trans-unit>
        <trans-unit id="3d482cdc0094a992a33fd5968b2ef4bd5d6e9cf5" translate="yes" xml:space="preserve">
          <source>Puts the given embed entry or entries as a change in the changeset</source>
          <target state="translated">주어진 삽입 항목을 변경 세트의 변경 사항으로 넣습니다.</target>
        </trans-unit>
        <trans-unit id="d3fa1dbd91937b35d7af93ba24edaf83b40c842f" translate="yes" xml:space="preserve">
          <source>Puts the given embed entry or entries as a change in the changeset.</source>
          <target state="translated">지정된 포함 항목을 변경 세트의 변경 사항으로 둡니다.</target>
        </trans-unit>
        <trans-unit id="4b7c23045b0e446a9c3e13b41adaf8ee0f958807" translate="yes" xml:space="preserve">
          <source>Puts the given prefix in a query.</source>
          <target state="translated">Puts the given prefix in a query.</target>
        </trans-unit>
        <trans-unit id="8019e9293126a2bd7055b604b3b1f0d984ed00ee" translate="yes" xml:space="preserve">
          <source>Puts the given value under key in the flash storage</source>
          <target state="translated">플래시 스토리지의 키 아래에 주어진 값을 넣습니다.</target>
        </trans-unit>
        <trans-unit id="c2c33be180ad022ed8c9916ce7573ec126324a75" translate="yes" xml:space="preserve">
          <source>Puts the given value under key in the flash storage.</source>
          <target state="translated">플래시 스토리지에서 지정된 값을 키 아래에 둡니다.</target>
        </trans-unit>
        <trans-unit id="37c4f691ad78c67a6b79da1230c90f39bb3ee3ef" translate="yes" xml:space="preserve">
          <source>Puts the http protocol</source>
          <target state="translated">http 프로토콜을 넣습니다</target>
        </trans-unit>
        <trans-unit id="804d6529e64cb57585b1483683755688784089b3" translate="yes" xml:space="preserve">
          <source>Puts the http protocol.</source>
          <target state="translated">http 프로토콜을 넣습니다.</target>
        </trans-unit>
        <trans-unit id="55b710537ff243eb1a32ec97e8a8ef433da7a8e8" translate="yes" xml:space="preserve">
          <source>Puts the peer data</source>
          <target state="translated">피어 데이터를 넣습니다</target>
        </trans-unit>
        <trans-unit id="03bbdbff15d183654a7ba17044452221ba7178e5" translate="yes" xml:space="preserve">
          <source>Puts the peer data.</source>
          <target state="translated">피어 데이터를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="9dcf19c9d246dc16927f6649753724b24e760346" translate="yes" xml:space="preserve">
          <source>Puts the specified &lt;code&gt;value&lt;/code&gt; in the session for the given &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 대해 지정된 &lt;code&gt;value&lt;/code&gt; 을 세션에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="6d6ac7ef4b3b44a8c56a6e0c8f2e56c460c8e52e" translate="yes" xml:space="preserve">
          <source>Puts the specified &lt;code&gt;value&lt;/code&gt; in the session for the given &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;key&lt;/code&gt; 대해 지정된 &lt;code&gt;value&lt;/code&gt; 을 세션에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="0894d8085a67ad07a0624ae07069e419da43c71e" translate="yes" xml:space="preserve">
          <source>Puts the url string or &lt;code&gt;%URI{}&lt;/code&gt; to be used for route generation.</source>
          <target state="translated">Puts the url string or &lt;code&gt;%URI{}&lt;/code&gt; to be used for route generation.</target>
        </trans-unit>
        <trans-unit id="62d10c2aa8bacdd16162d644d77b4ee04bb0e190" translate="yes" xml:space="preserve">
          <source>Queries are defined and extended with the &lt;code&gt;from&lt;/code&gt; macro. The supported keywords are:</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; 매크로를 사용하여 쿼리를 정의하고 확장합니다 . 지원되는 키워드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="05c5af64d3e911887b9ce2bd58137225eabf7ce3" translate="yes" xml:space="preserve">
          <source>Queries are used to retrieve and manipulate data from a repository (see &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt;). Ecto queries come in two flavors: keyword-based and macro-based. Most examples will use the keyword-based syntax, the macro one will be explored in later sections.</source>
          <target state="translated">쿼리는 리포지토리에서 데이터를 검색하고 조작하는 데 사용됩니다 ( &lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt; 참조 ). Ecto 쿼리는 키워드 기반과 매크로 기반의 두 가지 형태로 제공됩니다. 대부분의 예제는 키워드 기반 구문을 사용하며 매크로는 다음 섹션에서 살펴볼 것입니다.</target>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="de8a1e1690d8b96ebb6d223c027cb63261ce097c" translate="yes" xml:space="preserve">
          <source>Query Prefix</source>
          <target state="translated">쿼리 접두사</target>
        </trans-unit>
        <trans-unit id="5a0c44c7fb8e785d997aa2361b47b3f7d57e2ac5" translate="yes" xml:space="preserve">
          <source>Query expressions</source>
          <target state="translated">쿼리 표현식</target>
        </trans-unit>
        <trans-unit id="e2b202096304737747a8e9856e1cf9ad13fa032f" translate="yes" xml:space="preserve">
          <source>Raised at compilation time when the query cannot be compiled.</source>
          <target state="translated">쿼리를 컴파일 할 수없는 컴파일 타임에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4a893f6e9499b7a91b676a282a54c00522815c56" translate="yes" xml:space="preserve">
          <source>Raised at runtime when a subquery is invalid.</source>
          <target state="translated">하위 쿼리가 유효하지 않은 런타임에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b0a75a685071ded5093063f2c839160c503f347d" translate="yes" xml:space="preserve">
          <source>Raised at runtime when a value cannot be cast.</source>
          <target state="translated">값을 캐스트 할 수없는 런타임에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="039805dc5f4fed9b5afea803e51808e617e43ca3" translate="yes" xml:space="preserve">
          <source>Raised at runtime when an operation that requires a primary key is invoked with a schema missing value for its primary key</source>
          <target state="translated">기본 키가 필요한 오퍼레이션이 기본 키에 대한 스키마 누락 값으로 호출되면 런타임시 발생</target>
        </trans-unit>
        <trans-unit id="afa673fd6977e244af2ea9dc91a6d8a824062c2a" translate="yes" xml:space="preserve">
          <source>Raised at runtime when an operation that requires a primary key is invoked with a schema that does not define a primary key by using &lt;code&gt;@primary_key false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@primary_key false&lt;/code&gt; 를 사용하여 기본 키를 정의하지 않는 스키마로 기본 키가 필요한 작업을 호출하면 런타임에 발생합니다. false</target>
        </trans-unit>
        <trans-unit id="bcbb0dc762ca0143ba465c1a0d2d32138bda79be" translate="yes" xml:space="preserve">
          <source>Raised at runtime when the query is invalid.</source>
          <target state="translated">쿼리가 유효하지 않은 런타임에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="118f69c0714f7c01f9e9cdb531cfaa10b0d03ee9" translate="yes" xml:space="preserve">
          <source>Raised when a changeset can&amp;rsquo;t cast a value.</source>
          <target state="translated">변경 세트가 값을 전송할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e0f29df7daab7838c57e74c1be46349e23ec5a7d" translate="yes" xml:space="preserve">
          <source>Raised when a changeset can't cast a value.</source>
          <target state="translated">Raised when a changeset can't cast a value.</target>
        </trans-unit>
        <trans-unit id="5a11dc0fa5c2256817b23669b7156b10e560879e" translate="yes" xml:space="preserve">
          <source>Raised when a key is expected to be present in the request parameters, but is not.</source>
          <target state="translated">요청 매개 변수에 키가있을 것으로 예상되지만 그렇지 않은 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="42cab9ec6b573ff081054ff4fc6a8a2e4aaec900" translate="yes" xml:space="preserve">
          <source>Raised when one of the &lt;code&gt;accept*&lt;/code&gt; headers is not accepted by the server.</source>
          <target state="translated">&lt;code&gt;accept*&lt;/code&gt; 헤더 중 하나가 서버에서 승인되지 않으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b97f65fe7b14617aed938b2f2242977964dc12e0" translate="yes" xml:space="preserve">
          <source>Raised when the request body contains bad encoding.</source>
          <target state="translated">요청 본문에 잘못된 인코딩이 포함되어있을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5d60569db9a3f0465a27300ec7b01dce02ec93b6" translate="yes" xml:space="preserve">
          <source>Raised when the request string is malformed, for example:</source>
          <target state="translated">요청 문자열이 잘못된 경우 발생합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="3cdcabdb93d143702babf6930f6c426fb8aa2f08" translate="yes" xml:space="preserve">
          <source>Raised when the socket message is invalid.</source>
          <target state="translated">소켓 메시지가 유효하지 않을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fea87b6163109a5bc634acb0e1d816c9a91f8d08" translate="yes" xml:space="preserve">
          <source>Raised when we cannot perform an action because the changeset is invalid.</source>
          <target state="translated">변경 세트가 유효하지 않아 조치를 수행 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="475ae2411b103f83d884dab316d4d332ad5264a5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;../plug/1.5.1/plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; if the conn was already sent.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;../plug/1.5.1/plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; 을&lt;/a&gt; CONN가 이미 전송 된 경우.</target>
        </trans-unit>
        <trans-unit id="460192804356e0a064cca9096055e1710bf5a0bd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;../plug/plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;conn&lt;/code&gt; is already sent.</source>
          <target state="translated">Raises &lt;a href=&quot;../plug/plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; &lt;/a&gt; if &lt;code&gt;conn&lt;/code&gt; is already sent.</target>
        </trans-unit>
        <trans-unit id="f6b2ab76d66ab83609669089c37b6026dde4116b" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt;&lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt;&lt;/a&gt; if the schema has no primary key field.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt; &lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt; 를&lt;/a&gt; 스키마가 기본 키 필드가없는 경우.</target>
        </trans-unit>
        <trans-unit id="9e432852a5cfcbc1745f137f001ef45d9f4f91c5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the socket is not connected.</source>
          <target state="translated">레이즈 &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 소켓이 접속되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="bcc5af49f7595bafb364615a87e41ed41850519d" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;phoenix.pubsub.broadcasterror&quot;&gt;&lt;code&gt;Phoenix.PubSub.BroadcastError&lt;/code&gt;&lt;/a&gt; if broadcast fails. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;phoenix.pubsub.broadcasterror&quot;&gt; &lt;code&gt;Phoenix.PubSub.BroadcastError&lt;/code&gt; 는&lt;/a&gt; 방송이 실패 할 경우. 사용법에 대한 자세한 내용은 &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="6c339d06aca80d10b93ed2ba5e58b88415158abe" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;phoenix.socket.invalidmessageerror&quot;&gt;&lt;code&gt;Phoenix.Socket.InvalidMessageError&lt;/code&gt;&lt;/a&gt; if not valid.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;phoenix.socket.invalidmessageerror&quot;&gt; &lt;code&gt;Phoenix.Socket.InvalidMessageError&lt;/code&gt; 는&lt;/a&gt; 유효하지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="4b8b11d47003ec5caaaf54545edd2877c3adf06e" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; if the connection has already been &lt;code&gt;:sent&lt;/code&gt; or &lt;code&gt;:chunked&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; 를&lt;/a&gt; 연결이 이미되어있는 경우 &lt;code&gt;:sent&lt;/code&gt; 나 &lt;code&gt;:chunked&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cfe7b7afc826f1392f773e233d0cdd1378710a5" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt;&lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt;&lt;/a&gt; if the header value contains control feed (&lt;code&gt;\r&lt;/code&gt;) or newline (&lt;code&gt;\n&lt;/code&gt;) characters.</source>
          <target state="translated">제기 &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt; &lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt; &lt;/a&gt; 헤더 값은 제어 피드 (포함 된 경우 &lt;code&gt;\r&lt;/code&gt; ) 또는 개행 ( &lt;code&gt;\n&lt;/code&gt; ) 문자.</target>
        </trans-unit>
        <trans-unit id="bee73cc34282fce055899543de5c4645a7a37220" translate="yes" xml:space="preserve">
          <source>Raises if more than one entry.</source>
          <target state="translated">둘 이상의 항목이 있으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f2982a9548290320e963ec17174cbd3754d9d580" translate="yes" xml:space="preserve">
          <source>Raises if the response does not match the redirect status code (defaults to 302).</source>
          <target state="translated">응답이 경로 재 지정 상태 코드와 일치하지 않으면 발생합니다 (기본값은 302).</target>
        </trans-unit>
        <trans-unit id="b57257fa83148b68a92b1b01038160b46f543517" translate="yes" xml:space="preserve">
          <source>Raises if the session was not yet fetched.</source>
          <target state="translated">Raises if the session was not yet fetched.</target>
        </trans-unit>
        <trans-unit id="76c0c35fa8f5e4f8eba486d8f7aced55594e8cd0" translate="yes" xml:space="preserve">
          <source>Raises in case of failures.</source>
          <target state="translated">실패시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2904017bb54ac0a5df8d68048890091d3625ccde" translate="yes" xml:space="preserve">
          <source>Raises on attempts to interpolate with &lt;code&gt;#{}&lt;/code&gt;, so &lt;code&gt;~E&lt;/code&gt; should be preferred.</source>
          <target state="translated">&lt;code&gt;#{}&lt;/code&gt; 로 보간을 시도 할 때 발생하므로 &lt;code&gt;~E&lt;/code&gt; 가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="54897ac5b409ee4fbad6ca98e668447e3b4b2917" translate="yes" xml:space="preserve">
          <source>Raises on umbrella application.</source>
          <target state="translated">우산 응용 프로그램에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b266dfb91e70dcf9cb786ff302db62d687a6446d" translate="yes" xml:space="preserve">
          <source>Raising version of &lt;a href=&quot;#broadcast!/4&quot;&gt;&lt;code&gt;broadcast!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Raising version of &lt;a href=&quot;#broadcast!/4&quot;&gt; &lt;code&gt;broadcast!/4&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cf2e7c04c50ef6390ad2340375c225650b64b1d1" translate="yes" xml:space="preserve">
          <source>Raising version of &lt;a href=&quot;#broadcast_from!/5&quot;&gt;&lt;code&gt;broadcast_from!/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Raising version of &lt;a href=&quot;#broadcast_from!/5&quot;&gt; &lt;code&gt;broadcast_from!/5&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0ab3f25e7a011f5c2d6c40c1aefc681fe37f18e9" translate="yes" xml:space="preserve">
          <source>Raising version of &lt;a href=&quot;#direct_broadcast!/5&quot;&gt;&lt;code&gt;direct_broadcast!/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Raising version of &lt;a href=&quot;#direct_broadcast!/5&quot;&gt; &lt;code&gt;direct_broadcast!/5&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e9f05aa2c47c6bff64cd5f9cf0a523af4429924d" translate="yes" xml:space="preserve">
          <source>Rate Limiting</source>
          <target state="translated">속도 제한</target>
        </trans-unit>
        <trans-unit id="d112aa4ca42456553257378683fb994d7cb8d2ed" translate="yes" xml:space="preserve">
          <source>Rate limiting events with Debounce and Throttle</source>
          <target state="translated">디 바운스 및 스로틀을 사용한 속도 제한 이벤트</target>
        </trans-unit>
        <trans-unit id="f4b37f3f7c65af036ff7c5735121007e76a2d3f8" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;https://github.com/phoenixframework/phoenix/blob/master/CONTRIBUTING.md#bug-reports&quot;&gt;bug reports&lt;/a&gt; or open an issue in the Phoenix &lt;a href=&quot;https://github.com/phoenixframework/phoenix/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/phoenixframework/phoenix/blob/master/CONTRIBUTING.md#bug-reports&quot;&gt;버그 보고서를&lt;/a&gt; 읽 거나 Phoenix &lt;a href=&quot;https://github.com/phoenixframework/phoenix/issues&quot;&gt;문제 추적기&lt;/a&gt; 에서 문제를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="fb2f7f1f24dbf8a9dc3b54234330c0d6d566463c" translate="yes" xml:space="preserve">
          <source>Read more about instrumentation in the &amp;ldquo;Instrumentation&amp;rdquo; section.</source>
          <target state="translated">&quot;계측&quot;섹션에서 계측에 대한 자세한 내용을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="8d9f56c16fe8df709a75816e07de21409a7f7ce5" translate="yes" xml:space="preserve">
          <source>Read more about the uses of &lt;code&gt;@myself&lt;/code&gt; in the &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">의 사용에 대해 더 자세히 &lt;code&gt;@myself&lt;/code&gt; 에서 &lt;a href=&quot;phoenix.livecomponent&quot;&gt; &lt;code&gt;Phoenix.LiveComponent&lt;/code&gt; 의&lt;/a&gt; 문서.</target>
        </trans-unit>
        <trans-unit id="cf81a76808387c613661473f19847c76f95810b7" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;ecto.type&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; documentation for more information on implementing your own types.</source>
          <target state="translated">자체 유형 구현에 대한 자세한 내용 은 &lt;a href=&quot;ecto.type&quot;&gt; &lt;code&gt;Ecto.Type&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1dbbabd4aa48aa268311ff06dc85e1f5fb62633c" translate="yes" xml:space="preserve">
          <source>Read the docs in &lt;a href=&quot;plug.conn#read_body/2&quot;&gt;&lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt;&lt;/a&gt; for the supported options and expected behaviour.</source>
          <target state="translated">지원되는 옵션 및 예상되는 동작 에 &lt;a href=&quot;plug.conn#read_body/2&quot;&gt; &lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt; &lt;/a&gt; 의 문서를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="cf9fbfe89ff9ebd0f2ce45986970e210b156155a" translate="yes" xml:space="preserve">
          <source>Read the documentation for &lt;code&gt;phx.gen.schema&lt;/code&gt; for more information on attributes.</source>
          <target state="translated">속성에 대한 자세한 내용 은 &lt;code&gt;phx.gen.schema&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c85a1cb667f5493c5954a596fc9d86416e86676f" translate="yes" xml:space="preserve">
          <source>Read-only repositories</source>
          <target state="translated">Read-only repositories</target>
        </trans-unit>
        <trans-unit id="4302f670076b3c8c049c3fe4414fb76ece2b07cd" translate="yes" xml:space="preserve">
          <source>Reads the body of a multipart request</source>
          <target state="translated">멀티 파트 요청의 본문을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="26c9e691a853c0a0d01f4f0830b192105639965c" translate="yes" xml:space="preserve">
          <source>Reads the body of a multipart request.</source>
          <target state="translated">멀티 파트 요청의 본문을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="34a37224cf0ecbffc7c6c717b57d3e8ad32be014" translate="yes" xml:space="preserve">
          <source>Reads the headers of a multipart request</source>
          <target state="translated">멀티 파트 요청의 헤더를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="08cd121077af574953c117de80dcab7e4da635b4" translate="yes" xml:space="preserve">
          <source>Reads the headers of a multipart request.</source>
          <target state="translated">멀티 파트 요청의 헤더를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="1279e6d0c4c4164e055e507973ca6dd7b2e2afa0" translate="yes" xml:space="preserve">
          <source>Reads the request body</source>
          <target state="translated">요청 본문을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="70e202d76afed3c97c207c8aed5eaa3b1f7107df" translate="yes" xml:space="preserve">
          <source>Reads the request body.</source>
          <target state="translated">요청 본문을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="ed44565579aeede069f4272107cab6756113cacb" translate="yes" xml:space="preserve">
          <source>Real-Time Phoenix - Build Highly Scalable Systems with Channels (by Stephen Bussey - 2020)</source>
          <target state="translated">Real-Time Phoenix-채널로 확장 성이 뛰어난 시스템 구축 (By Stephen Bussey-2020)</target>
        </trans-unit>
        <trans-unit id="3048eb643c615ac762c128afe2f9444ebb46eb93" translate="yes" xml:space="preserve">
          <source>Real-time components - in-depth guides covering Phoenix's built-in real-time components</source>
          <target state="translated">실시간 구성 요소-Phoenix의 내장 실시간 구성 요소를 다루는 심층 가이드</target>
        </trans-unit>
        <trans-unit id="a6194ddefc6791984389b31250403e3b26bb9f18" translate="yes" xml:space="preserve">
          <source>Realtime Publisher/Subscriber service.</source>
          <target state="translated">Realtime Publisher/Subscriber service.</target>
        </trans-unit>
        <trans-unit id="eabf5939f2bab37b43db33a656a82689c20d3d80" translate="yes" xml:space="preserve">
          <source>Receives a keyword list where keys are names of the windows and values are a keyword list with window expressions.</source>
          <target state="translated">키가 창의 이름이고 값이 창 표현식이있는 키워드 목록 인 키워드 목록을받습니다.</target>
        </trans-unit>
        <trans-unit id="c77a8f354103b07fe0b3cd31353909c942d259b1" translate="yes" xml:space="preserve">
          <source>Receives a source that is to be joined to the query and a condition for the join. The join condition can be any expression that evaluates to a boolean value. The join is by default an inner join, the qualifier can be changed by giving the atoms: &lt;code&gt;:inner&lt;/code&gt;, &lt;code&gt;:left&lt;/code&gt;, &lt;code&gt;:right&lt;/code&gt;, &lt;code&gt;:cross&lt;/code&gt;, &lt;code&gt;:full&lt;/code&gt;, &lt;code&gt;:inner_lateral&lt;/code&gt; or &lt;code&gt;:left_lateral&lt;/code&gt;. For a keyword query the &lt;code&gt;:join&lt;/code&gt; keyword can be changed to: &lt;code&gt;:inner_join&lt;/code&gt;, &lt;code&gt;:left_join&lt;/code&gt;, &lt;code&gt;:right_join&lt;/code&gt;, &lt;code&gt;:cross_join&lt;/code&gt;, &lt;code&gt;:full_join&lt;/code&gt;, &lt;code&gt;:inner_lateral_join&lt;/code&gt; or &lt;code&gt;:left_lateral_join&lt;/code&gt;.</source>
          <target state="translated">쿼리에 조인 할 소스와 조인 조건을받습니다. 결합 조건은 부울 값으로 평가되는 모든 표현식 일 수 있습니다. 조인은 기본적으로 내부 조인이며 한정자는 원자를 제공하여 변경할 수 있습니다 : &lt;code&gt;:inner&lt;/code&gt; , &lt;code&gt;:left&lt;/code&gt; , &lt;code&gt;:right&lt;/code&gt; , &lt;code&gt;:cross&lt;/code&gt; , &lt;code&gt;:full&lt;/code&gt; , &lt;code&gt;:inner_lateral&lt;/code&gt; 또는 &lt;code&gt;:left_lateral&lt;/code&gt; . 키워드 쿼리의 경우 &lt;code&gt;:join&lt;/code&gt; 키워드를 &lt;code&gt;:inner_join&lt;/code&gt; , &lt;code&gt;:left_join&lt;/code&gt; , &lt;code&gt;:right_join&lt;/code&gt; , &lt;code&gt;:cross_join&lt;/code&gt; , &lt;code&gt;:full_join&lt;/code&gt; , &lt;code&gt;:inner_lateral_join&lt;/code&gt; 또는 &lt;code&gt;:left_lateral_join&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ad2a4c966b04cb2feff57adf8111d3c1d972d01" translate="yes" xml:space="preserve">
          <source>Receives a source that is to be joined to the query and a condition for the join. The join condition can be any expression that evaluates to a boolean value. The qualifier must be one of &lt;code&gt;:inner&lt;/code&gt;, &lt;code&gt;:left&lt;/code&gt;, &lt;code&gt;:right&lt;/code&gt;, &lt;code&gt;:cross&lt;/code&gt;, &lt;code&gt;:full&lt;/code&gt;, &lt;code&gt;:inner_lateral&lt;/code&gt; or &lt;code&gt;:left_lateral&lt;/code&gt;.</source>
          <target state="translated">Receives a source that is to be joined to the query and a condition for the join. The join condition can be any expression that evaluates to a boolean value. The qualifier must be one of &lt;code&gt;:inner&lt;/code&gt; , &lt;code&gt;:left&lt;/code&gt; , &lt;code&gt;:right&lt;/code&gt; , &lt;code&gt;:cross&lt;/code&gt; , &lt;code&gt;:full&lt;/code&gt; , &lt;code&gt;:inner_lateral&lt;/code&gt; or &lt;code&gt;:left_lateral&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e5a65d84cc1617c8656889419c3e1afff0f97ff" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns its HTTP status code</source>
          <target state="translated">예외를 수신하고 해당 HTTP 상태 코드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1e0b05512f97f8ced79071f6934b97336f5bfc8e" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns its HTTP status code.</source>
          <target state="translated">예외를 수신하고 해당 HTTP 상태 코드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cb64545d9f070d4643f3cc21949571d97860fd0a" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns the possible actions that could be triggered for that error. Should return a list of actions in the following structure</source>
          <target state="translated">Receives an exception and returns the possible actions that could be triggered for that error. Should return a list of actions in the following structure</target>
        </trans-unit>
        <trans-unit id="ba968ad4a4e269cb4f614abd552e8b4ed05af97e" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns the possible actions that could be triggered for that error. Should return a list of actions in the following structure:</source>
          <target state="translated">Receives an exception and returns the possible actions that could be triggered for that error. Should return a list of actions in the following structure:</target>
        </trans-unit>
        <trans-unit id="8d512f74447ab57d70e943b026fec4ed4ff7e386" translate="yes" xml:space="preserve">
          <source>Receives the given field and returns its input type (:text_input, :select, etc). Returns &lt;code&gt;nil&lt;/code&gt; if the type is unknown</source>
          <target state="translated">주어진 필드를 받아서 입력 유형 (: text_input, : select 등)을 반환합니다. 형식을 알 수 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환</target>
        </trans-unit>
        <trans-unit id="b856625e980892122be13a03d8007488d047e9b7" translate="yes" xml:space="preserve">
          <source>Receives the given field and returns its input type (:text_input, :select, etc). Returns &lt;code&gt;nil&lt;/code&gt; if the type is unknown.</source>
          <target state="translated">주어진 필드를 받아서 입력 유형 (: text_input, : select 등)을 반환합니다. 형식을 알 수 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e1bc3d58618ebe92738a6425e44a7dc192725bca" translate="yes" xml:space="preserve">
          <source>Receives the parent changeset, the current changesets and the repository action options. Must return the persisted struct (or nil) or the changeset error.</source>
          <target state="translated">부모 변경 집합, 현재 변경 집합 및 리포지토리 작업 옵션을받습니다. 지속 된 구조체 (또는 nil) 또는 변경 세트 오류를 ​​반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf377c38819dc945c101acff3a1528c7baf6998f" translate="yes" xml:space="preserve">
          <source>Receives the socket params and authenticates the connection</source>
          <target state="translated">소켓 매개 변수를 수신하고 연결을 인증합니다</target>
        </trans-unit>
        <trans-unit id="eb2301c5911b40f9913b9b6d1946674d84780896" translate="yes" xml:space="preserve">
          <source>Receives the socket params and authenticates the connection.</source>
          <target state="translated">소켓 매개 변수를 수신하고 연결을 인증합니다.</target>
        </trans-unit>
        <trans-unit id="b85a5b35eaef34a24950b7e8c7add8fc69e80467" translate="yes" xml:space="preserve">
          <source>Recovery following crashes or disconnects</source>
          <target state="translated">충돌 또는 연결 해제 후 복구</target>
        </trans-unit>
        <trans-unit id="b27775f2ada8ba7639959e5e9d172ed6d5173436" translate="yes" xml:space="preserve">
          <source>Recursive CTEs</source>
          <target state="translated">Recursive CTEs</target>
        </trans-unit>
        <trans-unit id="6222bf4be21bb14034989750b2e140649fe2281b" translate="yes" xml:space="preserve">
          <source>Recycles the connection</source>
          <target state="translated">연결을 재활용</target>
        </trans-unit>
        <trans-unit id="657382112567654b7fe0e6918fc09747dad27f39" translate="yes" xml:space="preserve">
          <source>Recycles the connection.</source>
          <target state="translated">연결을 재활용합니다.</target>
        </trans-unit>
        <trans-unit id="170881344897f672ebed562b0d42c4dfc0416658" translate="yes" xml:space="preserve">
          <source>Recycling</source>
          <target state="translated">Recycling</target>
        </trans-unit>
        <trans-unit id="fab3c6c5f0427271a044d732cfd8e13c9fec6555" translate="yes" xml:space="preserve">
          <source>Recycling also recycles the &quot;accept&quot; and &quot;authorization&quot; headers, as well as peer data information.</source>
          <target state="translated">Recycling also recycles the &quot;accept&quot; and &quot;authorization&quot; headers, as well as peer data information.</target>
        </trans-unit>
        <trans-unit id="9838943fcaf9ab1eeab6ab7a01aebd973e7bbc80" translate="yes" xml:space="preserve">
          <source>Recycling also recycles the &amp;ldquo;accept&amp;rdquo; header.</source>
          <target state="translated">재활용은 또한 &quot;수락&quot;헤더를 재활용합니다.</target>
        </trans-unit>
        <trans-unit id="e72a653a457ec9342c852678afbf8100165e8415" translate="yes" xml:space="preserve">
          <source>Recycling receives a connection and returns a new connection, containing cookies and relevant information from the given one.</source>
          <target state="translated">재활용은 연결을 수신하고 쿠키 및 관련 정보가 포함 된 새 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="92c2106e1a1cbb38f9ee7a39a9f984536d14d202" translate="yes" xml:space="preserve">
          <source>Redacting fields</source>
          <target state="translated">Redacting fields</target>
        </trans-unit>
        <trans-unit id="d44978dbba0cd152461af8b48fc6813c1fd40ee4" translate="yes" xml:space="preserve">
          <source>Redacting fields in inspect</source>
          <target state="translated">Redacting fields in inspect</target>
        </trans-unit>
        <trans-unit id="b77aad5fb24921ef76ac8f3e500ed93fddae8f2a" translate="yes" xml:space="preserve">
          <source>Redirection</source>
          <target state="translated">Redirection</target>
        </trans-unit>
        <trans-unit id="db97caecdf30755367d9f80f76df15bcb36fb347" translate="yes" xml:space="preserve">
          <source>Refer to a named atom binding in the parent query.</source>
          <target state="translated">Refer to a named atom binding in the parent query.</target>
        </trans-unit>
        <trans-unit id="9fcba83c2a8c33f9f40bfc8329598f2f597e56ce" translate="yes" xml:space="preserve">
          <source>Refer to a named atom binding.</source>
          <target state="translated">Refer to a named atom binding.</target>
        </trans-unit>
        <trans-unit id="a21478294240776c9766c8b2af4e719b3ede76fb" translate="yes" xml:space="preserve">
          <source>Referencing parent assigns</source>
          <target state="translated">상위 할당 참조</target>
        </trans-unit>
        <trans-unit id="fda05af620d8f7d239d3f6e8e81b4403108f221e" translate="yes" xml:space="preserve">
          <source>Reflection</source>
          <target state="translated">Reflection</target>
        </trans-unit>
        <trans-unit id="f936baf01aa3ae9646dadaf9f5a4745fe2b7c907" translate="yes" xml:space="preserve">
          <source>Registers a callback to be invoked before the response is sent</source>
          <target state="translated">응답을 보내기 전에 호출 할 콜백을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="5244ec845fd9bf105d107be1519b099f79debf7a" translate="yes" xml:space="preserve">
          <source>Registers a callback to be invoked before the response is sent.</source>
          <target state="translated">응답을 보내기 전에 호출 할 콜백을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="08ce0fff58d051cd9c134a71c658ce212cc6660d" translate="yes" xml:space="preserve">
          <source>Registers the plug to call as a fallback to the controller action</source>
          <target state="translated">컨트롤러 동작에 대한 폴백으로 호출 할 플러그를 등록합니다</target>
        </trans-unit>
        <trans-unit id="40b67813f6d17a852ee36adfafd9be57608ee05e" translate="yes" xml:space="preserve">
          <source>Registers the plug to call as a fallback to the controller action.</source>
          <target state="translated">컨트롤러 작업에 대한 폴백으로 호출 할 플러그를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="9636957d5f6983c4ee722cfec9c80348d0b8ae7a" translate="yes" xml:space="preserve">
          <source>Reload the endpoint configuration on application upgrades</source>
          <target state="translated">애플리케이션 업그레이드시 엔드 포인트 구성을 다시로드하십시오.</target>
        </trans-unit>
        <trans-unit id="52294d825cdd8c5e8ba2a8c2240864605c1a4510" translate="yes" xml:space="preserve">
          <source>Reload the endpoint configuration on application upgrades.</source>
          <target state="translated">애플리케이션 업그레이드시 엔드 포인트 구성을 다시로드하십시오.</target>
        </trans-unit>
        <trans-unit id="640761c65632f7bca506a54b0cea4335ca33f1ff" translate="yes" xml:space="preserve">
          <source>Reloading &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; should show us a completely blank page. The network tab of our browser's developer tools should show a response status of &quot;201&quot;.</source>
          <target state="translated">&lt;a href=&quot;http://localhost:4000&quot;&gt;http : // localhost : 4000을&lt;/a&gt; 다시로드 하면 완전히 빈 페이지가 표시됩니다. 브라우저 개발자 도구의 네트워크 탭에 &quot;201&quot;응답 상태가 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e67cbf6a409c88eea14d88699b4e51dfa09ec82d" translate="yes" xml:space="preserve">
          <source>Reloading the page will start a disconnected render, that will cause &lt;code&gt;mount&lt;/code&gt; to be invoked again and most likely raise the same exception. Except this time it will be caught and converted to an exception page by Phoenix error views</source>
          <target state="translated">페이지를 다시로드하면 연결이 끊어진 렌더링이 시작되어 &lt;code&gt;mount&lt;/code&gt; 가 다시 호출되고 동일한 예외가 발생할 가능성이 높습니다. 이번을 제외하고는 Phoenix 오류보기에 의해 포착되어 예외 페이지로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="cff4f997b1b30675edab1d1d4ad1ec678ed60051" translate="yes" xml:space="preserve">
          <source>Reloads a given schema or schema list from the database.</source>
          <target state="translated">Reloads a given schema or schema list from the database.</target>
        </trans-unit>
        <trans-unit id="47e7c5465e5bbbf3cbdd1686cff7ea6c53743993" translate="yes" xml:space="preserve">
          <source>Reloads code for the current Mix project by invoking the &lt;code&gt;:reloadable_compilers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:reloadable_compilers&lt;/code&gt; 를 호출하여 현재 믹스 프로젝트의 코드를 다시로드합니다 .</target>
        </trans-unit>
        <trans-unit id="6531ef002be3f220b59e227aa0d4f63067ee602a" translate="yes" xml:space="preserve">
          <source>Reloads code for the current Mix project by invoking the &lt;code&gt;:reloadable_compilers&lt;/code&gt; on the list of &lt;code&gt;:reloadable_apps&lt;/code&gt;.</source>
          <target state="translated">Reloads code for the current Mix project by invoking the &lt;code&gt;:reloadable_compilers&lt;/code&gt; on the list of &lt;code&gt;:reloadable_apps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="817332bb13bf37a0a2275b54b00ef58fac94d844" translate="yes" xml:space="preserve">
          <source>Reloads code for the current Mix project by invoking the &lt;code&gt;:reloadable_compilers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:reloadable_compilers&lt;/code&gt; 를 호출하여 현재 믹스 프로젝트의 코드를 다시로드합니다 .</target>
        </trans-unit>
        <trans-unit id="f9f31954acfcc8e09658b7a48ab3711d1d695d74" translate="yes" xml:space="preserve">
          <source>Remember that, if you change the type of your primary keys, you will also need to change the type of all associations that point to said primary key.</source>
          <target state="translated">Remember that, if you change the type of your primary keys, you will also need to change the type of all associations that point to said primary key.</target>
        </trans-unit>
        <trans-unit id="22afefc0870e6cca6e44ec944c6e46acc3a5c732" translate="yes" xml:space="preserve">
          <source>Remember to exclude the files from version control, unless the certificate and key are shared by all developers for testing purposes only. For example, add this line to the '.gitignore' file: &lt;code&gt;priv/**/*.pem&lt;/code&gt;.</source>
          <target state="translated">테스트 목적으로 만 모든 개발자가 인증서와 키를 공유하지 않는 한 버전 제어에서 파일을 제외해야합니다. 예를 들어 '.gitignore'파일에 &lt;code&gt;priv/**/*.pem&lt;/code&gt; 행을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="766003dec9e1c1e02c51395fa2a565331aa2a7a0" translate="yes" xml:space="preserve">
          <source>Remote Client</source>
          <target state="translated">원격 클라이언트</target>
        </trans-unit>
        <trans-unit id="15325870375964566c0db153077605ee4d6ba5ef" translate="yes" xml:space="preserve">
          <source>Removes all elements for replicas that are permanently gone</source>
          <target state="translated">영구적으로 사라진 복제본의 모든 요소를 ​​제거합니다.</target>
        </trans-unit>
        <trans-unit id="de3c06260f245217fdccbebbeee618023b313316" translate="yes" xml:space="preserve">
          <source>Removes all elements for replicas that are permanently gone.</source>
          <target state="translated">영구적으로 사라진 복제본의 모든 요소를 ​​제거합니다.</target>
        </trans-unit>
        <trans-unit id="21ec5b5bc2425ec115c86a31d53e6303bc5e980d" translate="yes" xml:space="preserve">
          <source>Removes all elements from the set for the given pid</source>
          <target state="translated">주어진 pid에 대한 세트에서 모든 요소를 ​​제거합니다</target>
        </trans-unit>
        <trans-unit id="0baf5856ed740984940b6e3308ee165dfe19d975" translate="yes" xml:space="preserve">
          <source>Removes all elements from the set for the given pid.</source>
          <target state="translated">주어진 pid에 대한 세트에서 모든 요소를 ​​제거합니다.</target>
        </trans-unit>
        <trans-unit id="1cf882d0a99560f03a1cb1e5de642281ff708392" translate="yes" xml:space="preserve">
          <source>Removes an element from the set</source>
          <target state="translated">세트에서 요소를 제거합니다</target>
        </trans-unit>
        <trans-unit id="c52942e1f145b4031f59fd77a106a658cbf1ddeb" translate="yes" xml:space="preserve">
          <source>Removes an element from the set.</source>
          <target state="translated">세트에서 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="89a6ce134f77be0034d61842e6e4d6d5a96aa083" translate="yes" xml:space="preserve">
          <source>Removes old versions of compiled assets.</source>
          <target state="translated">컴파일 된 자산의 이전 버전을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="55ecb2c45ca7355e4abbce2db09e3b327c8c343c" translate="yes" xml:space="preserve">
          <source>Removes the given suffix from the name if it exists</source>
          <target state="translated">주어진 접미사가 있으면 이름에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1655bc2149cd6a146e2ac53ec4bc2dcfb14e9c25" translate="yes" xml:space="preserve">
          <source>Removes the given suffix from the name if it exists.</source>
          <target state="translated">지정된 접미사가 있으면 이름에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="08bbc0d9b4409e6f56f323f27880d90461c9435e" translate="yes" xml:space="preserve">
          <source>Removes the session associated with given session id from the store</source>
          <target state="translated">주어진 세션 ID와 연관된 세션을 상점에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="fb1f51dff10756f68903a361d28310a54d8a0da2" translate="yes" xml:space="preserve">
          <source>Removes the session associated with given session id from the store.</source>
          <target state="translated">주어진 세션 ID와 연관된 세션을 상점에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="8e6c88a6d94aea67d9ed896c21fdd6eac008a3ba" translate="yes" xml:space="preserve">
          <source>Removing data</source>
          <target state="translated">데이터 제거</target>
        </trans-unit>
        <trans-unit id="715ea197d938b513f90aa114bc91cb40055b67c2" translate="yes" xml:space="preserve">
          <source>Renaming value labels using tag values</source>
          <target state="translated">태그 값을 사용하여 값 레이블 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="529068386c7cf05f5b82c26b7ed494cf8f387f7a" translate="yes" xml:space="preserve">
          <source>Render the given template or the default template specified by the current action with the given assigns</source>
          <target state="translated">주어진 템플릿을 사용하여 현재 액션에 의해 지정된 템플릿 또는 기본 템플릿을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="10d799fe80c9c6cca9382808c5587a9f098b3385" translate="yes" xml:space="preserve">
          <source>Render the given template or the default template specified by the current action with the given assigns.</source>
          <target state="translated">주어진 템플릿을 사용하여 현재 액션에 의해 지정된 템플릿 또는 기본 템플릿을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="e066e80468f5234a1001137061731ae39a651ab5" translate="yes" xml:space="preserve">
          <source>Rendering</source>
          <target state="translated">Rendering</target>
        </trans-unit>
        <trans-unit id="6339ea04476fb73a07f6c2bf7d06080678f037c9" translate="yes" xml:space="preserve">
          <source>Rendering HTML through a template is fine, but what if we need to change the rendering format on the fly? Let's say that sometimes we need HTML, sometimes we need plain text, and sometimes we need JSON. Then what?</source>
          <target state="translated">템플릿을 통해 HTML을 렌더링하는 것은 좋지만 렌더링 형식을 즉시 변경해야하는 경우 어떻게해야합니까? 때로는 HTML이 필요하고, 때로는 일반 텍스트가 필요하고, 때로는 JSON이 필요하다고 가정 해 봅시다. 그리고 뭐?</target>
        </trans-unit>
        <trans-unit id="72d1e9d23467087d3ef881a542ef41d8676e41af" translate="yes" xml:space="preserve">
          <source>Rendering JSON</source>
          <target state="translated">JSON 렌더링</target>
        </trans-unit>
        <trans-unit id="99bd1e34cd164e21963997294779599c4962042e" translate="yes" xml:space="preserve">
          <source>Rendering Templates</source>
          <target state="translated">렌더링 템플릿</target>
        </trans-unit>
        <trans-unit id="679cb6713a426896fc72064370dad2fa4b9eabc4" translate="yes" xml:space="preserve">
          <source>Rendering and layouts</source>
          <target state="translated">렌더링 및 레이아웃</target>
        </trans-unit>
        <trans-unit id="875711d921f3bd103b9ac284647ab930488f4540" translate="yes" xml:space="preserve">
          <source>Rendering based on controller template</source>
          <target state="translated">컨트롤러 템플릿을 기반으로 렌더링</target>
        </trans-unit>
        <trans-unit id="fe6604af31647604a807a6a2b92cbe7f3f9f3dbe" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; within a parent LiveView.</source>
          <target state="translated">상위 LiveView 내 에서 &lt;a href=&quot;phoenix.livecomponent&quot;&gt; &lt;code&gt;Phoenix.LiveComponent&lt;/code&gt; 를&lt;/a&gt; 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="0ec185d3fabb0622c26ce2d9f106669457aada7b" translate="yes" xml:space="preserve">
          <source>Renders a LiveView within an originating plug request or within a parent LiveView.</source>
          <target state="translated">원래 플러그 요청 또는 상위 LiveView 내에서 LiveView를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="b3559380bd456e4c2804094a9b29890e9c270f0a" translate="yes" xml:space="preserve">
          <source>Renders a collection</source>
          <target state="translated">컬렉션을 렌더링</target>
        </trans-unit>
        <trans-unit id="9549acaeff8fac716c468a0d8a646735aca0f520" translate="yes" xml:space="preserve">
          <source>Renders a collection.</source>
          <target state="translated">컬렉션을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="a40799fe93c75eeabb0c37d4a141cd4d112365e5" translate="yes" xml:space="preserve">
          <source>Renders a live view from a Plug request and sends an HTML response.</source>
          <target state="translated">Plug 요청에서 라이브 뷰를 렌더링하고 HTML 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c05bb9af91e397c4329814d85a1daeb75b55c3dd" translate="yes" xml:space="preserve">
          <source>Renders a single item if not nil</source>
          <target state="translated">nil이 아닌 경우 단일 항목을 렌더링합니다</target>
        </trans-unit>
        <trans-unit id="5465a6020b101c71ea348e5dc16bceebfd3baa89" translate="yes" xml:space="preserve">
          <source>Renders a single item if not nil.</source>
          <target state="translated">nil이 아닌 경우 단일 항목을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="9af1e71744395a0c63fc6dde9d976827f2510835" translate="yes" xml:space="preserve">
          <source>Renders a template</source>
          <target state="translated">템플릿을 렌더링</target>
        </trans-unit>
        <trans-unit id="010c2f432938fdf78caf8cd600b018d715e4801f" translate="yes" xml:space="preserve">
          <source>Renders a template only if it exists</source>
          <target state="translated">템플릿이 존재하는 경우에만 렌더링합니다</target>
        </trans-unit>
        <trans-unit id="992076890c75e1ddadd6b55a2fce08858516d55a" translate="yes" xml:space="preserve">
          <source>Renders a template only if it exists.</source>
          <target state="translated">존재하는 경우에만 템플릿을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="8cedaf1b5b8cacfe220622e987d31a771f2a1e2b" translate="yes" xml:space="preserve">
          <source>Renders a template.</source>
          <target state="translated">템플릿을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="909250ba1e84aa97d601c3f62261ebccee8ea1bb" translate="yes" xml:space="preserve">
          <source>Renders a title tag with automatic prefix/suffix on &lt;code&gt;@page_title&lt;/code&gt; updates.</source>
          <target state="translated">&lt;code&gt;@page_title&lt;/code&gt; 업데이트시 자동 접두사 / 접미사로 제목 태그를 렌더링 합니다.</target>
        </trans-unit>
        <trans-unit id="64d44d832aae95fc0e71c4568a8c54f911980516" translate="yes" xml:space="preserve">
          <source>Renders the given &lt;code&gt;template&lt;/code&gt; and &lt;code&gt;assigns&lt;/code&gt; based on the &lt;code&gt;conn&lt;/code&gt; information</source>
          <target state="translated">주어진 렌더 &lt;code&gt;template&lt;/code&gt; 및 &lt;code&gt;assigns&lt;/code&gt; 에 기초 &lt;code&gt;conn&lt;/code&gt; 정보</target>
        </trans-unit>
        <trans-unit id="9e96a8eeaa46194b322dde6e45fda5119e3e7d34" translate="yes" xml:space="preserve">
          <source>Renders the given &lt;code&gt;template&lt;/code&gt; and &lt;code&gt;assigns&lt;/code&gt; based on the &lt;code&gt;conn&lt;/code&gt; information.</source>
          <target state="translated">주어진 렌더링 &lt;code&gt;template&lt;/code&gt; 및 &lt;code&gt;assigns&lt;/code&gt; 에 기초 &lt;code&gt;conn&lt;/code&gt; 정보를.</target>
        </trans-unit>
        <trans-unit id="70e6576d43955718fbbcfa5dda1aa687fc3373ae" translate="yes" xml:space="preserve">
          <source>Renders the given layout passing the given &lt;code&gt;do/end&lt;/code&gt; block as &lt;code&gt;@inner_content&lt;/code&gt;.</source>
          <target state="translated">Renders the given layout passing the given &lt;code&gt;do/end&lt;/code&gt; block as &lt;code&gt;@inner_content&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01e5ae376eb2e27afc27bece5699c6c4c43832e4" translate="yes" xml:space="preserve">
          <source>Renders the template and returns a string</source>
          <target state="translated">템플릿을 렌더링하고 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="482145d251e35fbac232d56594041c1658159f2a" translate="yes" xml:space="preserve">
          <source>Renders the template and returns a string.</source>
          <target state="translated">템플릿을 렌더링하고 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0ba8fe15fe6efc84ae418d19c35a6f2a62868124" translate="yes" xml:space="preserve">
          <source>Renders the template and returns iodata</source>
          <target state="translated">템플릿을 렌더링하고 iodata를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="258156edae9cfadf191684d2a711700a37bfd521" translate="yes" xml:space="preserve">
          <source>Renders the template and returns iodata.</source>
          <target state="translated">템플릿을 렌더링하고 iodata를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b3a40a7db856c7362b9e856af678ac5c5b3682b9" translate="yes" xml:space="preserve">
          <source>Renewing Certificates</source>
          <target state="translated">인증서 갱신</target>
        </trans-unit>
        <trans-unit id="63e181b6b5e496ea24c80abb198ebf3b2f1e76e6" translate="yes" xml:space="preserve">
          <source>Replace a presence's metadata by passing a new map or a function that takes the current map and returns a new one.</source>
          <target state="translated">Replace a presence's metadata by passing a new map or a function that takes the current map and returns a new one.</target>
        </trans-unit>
        <trans-unit id="359e2ed6e1358c6c2ad76486fc99b4d5f2eddc34" translate="yes" xml:space="preserve">
          <source>Replace page address</source>
          <target state="translated">페이지 주소 교체</target>
        </trans-unit>
        <trans-unit id="b55c540f8f16d7668abdc6c844f1322ecbbb484b" translate="yes" xml:space="preserve">
          <source>Replaces the default &lt;code&gt;:fetch_flash&lt;/code&gt; plug used by &lt;a href=&quot;../phoenix/phoenix.router&quot;&gt;&lt;code&gt;Phoenix.Router&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 대체 &lt;code&gt;:fetch_flash&lt;/code&gt; 에서 사용하는 플러그 &lt;a href=&quot;../phoenix/phoenix.router&quot;&gt; &lt;code&gt;Phoenix.Router&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8a103c73005ccd029f388a9b7336a994cad85ba" translate="yes" xml:space="preserve">
          <source>Replies</source>
          <target state="translated">Replies</target>
        </trans-unit>
        <trans-unit id="c6c7283edc1b89ebc241780e13dc46d48b4e8e25" translate="yes" xml:space="preserve">
          <source>Replies asynchronously to a socket push</source>
          <target state="translated">소켓 푸시에 비동기 적으로 응답</target>
        </trans-unit>
        <trans-unit id="4c5aff3395c1a416fa552f4f8ba9dfa3f96a78d8" translate="yes" xml:space="preserve">
          <source>Replies asynchronously to a socket push.</source>
          <target state="translated">소켓 푸시에 비동기 적으로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="2b931b386e46f8d01671e14069932e8687d6b8c2" translate="yes" xml:space="preserve">
          <source>Repo configuration</source>
          <target state="translated">저장소 구성</target>
        </trans-unit>
        <trans-unit id="91808ed37a0fb8608b1c734a889058462fc6e90c" translate="yes" xml:space="preserve">
          <source>Repo resolution</source>
          <target state="translated">리포 해상도</target>
        </trans-unit>
        <trans-unit id="4a28165bd85132c82d26771bbd29abef42ef343a" translate="yes" xml:space="preserve">
          <source>Reporters</source>
          <target state="translated">Reporters</target>
        </trans-unit>
        <trans-unit id="269bf13e176b27688a2e6bcef6b00e5d3cad9770" translate="yes" xml:space="preserve">
          <source>Reporters subscribe to Telemetry events using the common interface provided by &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html&quot;&gt;&lt;code&gt;Telemetry.Metrics&lt;/code&gt;&lt;/a&gt;. They then aggregate the measurements (data) into metrics to provide meaningful information about your application.</source>
          <target state="translated">기자가 제공하는 공통 인터페이스를 사용하여 원격 측정 이벤트를 구독 &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html&quot;&gt; &lt;code&gt;Telemetry.Metrics&lt;/code&gt; 을&lt;/a&gt; . 그런 다음 측정 (데이터)을 메트릭으로 집계하여 애플리케이션에 대한 의미있는 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="5a04a4b8c1f1c230bb0f4cd5a050787aaa087d8c" translate="yes" xml:space="preserve">
          <source>Repositories by default support URLs. For example, the configuration above could be rewritten to:</source>
          <target state="translated">기본적으로 리포지토리는 URL을 지원합니다. 예를 들어, 위 구성을 다음과 같이 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f046cc0117a29a6869d58d3d1cbd183012cd7a7" translate="yes" xml:space="preserve">
          <source>Request fields</source>
          <target state="translated">요청 필드</target>
        </trans-unit>
        <trans-unit id="6d0d4aafc904fd7e16177321d5cc96438f828ba7" translate="yes" xml:space="preserve">
          <source>Request life-cycle</source>
          <target state="translated">라이프 사이클 요청</target>
        </trans-unit>
        <trans-unit id="16346fdb36f9e7a7b03ee60d349e058748773ff3" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix</source>
          <target state="translated">주어진 접두사로 업로드 디렉토리에 임의의 파일을 작성하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="f771003acf808c23aa297fe7a02d6ba85cba28a5" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix.</source>
          <target state="translated">주어진 접두사를 사용하여 업로드 디렉토리에 무작위 파일을 작성하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="3b65aa51aac1696dfac54eb844bd22189d1c6c20" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix. Raises on failure</source>
          <target state="translated">주어진 접두사를 사용하여 업로드 디렉토리에 무작위 파일을 작성하도록 요청합니다. 실패 발생</target>
        </trans-unit>
        <trans-unit id="2ab73756308332af029c8c4ca625955161607b3d" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix. Raises on failure.</source>
          <target state="translated">주어진 접두사를 사용하여 업로드 디렉토리에 무작위 파일을 작성하도록 요청합니다. 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="11e5686899cd1bd7cc912e9cd9bab9ed0d5b1b5c" translate="yes" xml:space="preserve">
          <source>Requests basic authentication from the client.</source>
          <target state="translated">클라이언트에서 기본 인증을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="4d1ae43341a73c0e27d87662c768a5b3208168c7" translate="yes" xml:space="preserve">
          <source>Requests to our new route will be handled by the &lt;code&gt;HelloWeb.HelloController&lt;/code&gt;&lt;code&gt;show&lt;/code&gt; action. We already have the controller at &lt;code&gt;lib/hello_web/controllers/hello_controller.ex&lt;/code&gt;, so all we need to do is edit that file and add a &lt;code&gt;show&lt;/code&gt; action to it. This time, we'll need to extract the messenger from the parameters so that we can pass it (the messenger) to the template. To do that, we add this show function to the controller:</source>
          <target state="translated">새 경로에 대한 요청은 &lt;code&gt;HelloWeb.HelloController&lt;/code&gt; &lt;code&gt;show&lt;/code&gt; 작업에 의해 처리됩니다 . &lt;code&gt;lib/hello_web/controllers/hello_controller.ex&lt;/code&gt; 에 이미 컨트롤러가 있으므로 해당 파일을 편집하고 여기에 &lt;code&gt;show&lt;/code&gt; 작업을 추가하기 만하면 됩니다. 이번에는 매개 변수에서 메신저 (메신저)를 템플릿에 전달할 수 있도록 메신저를 추출해야합니다. 이를 위해 컨트롤러에이 show 함수를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fa7cc45a2f0b2c6e0f547254eb2a6537f51086e8" translate="yes" xml:space="preserve">
          <source>Required &lt;code&gt;pool_opts&lt;/code&gt;:</source>
          <target state="translated">필요한 &lt;code&gt;pool_opts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b3cb2ffed5bdda27fe0da4adfbf1afb494a74f72" translate="yes" xml:space="preserve">
          <source>Required &lt;code&gt;server_opts&lt;/code&gt;:</source>
          <target state="translated">필수 &lt;code&gt;server_opts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="aa41361501f00cf1711b54bba81131e78f51ac76" translate="yes" xml:space="preserve">
          <source>Requires OTP 20 or later.</source>
          <target state="translated">OTP 20 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="42c4c07337fd0b34244f71fc37173ddfa010fbce" translate="yes" xml:space="preserve">
          <source>Reraises an error or a wrapped one</source>
          <target state="translated">오류 또는 포장 된 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="b94d48b0d0a1e117c90995e12d265bb52a3ce3dd" translate="yes" xml:space="preserve">
          <source>Reraises an error or a wrapped one.</source>
          <target state="translated">오류 또는 랩핑 된 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="6bbd3e1733ab75e72f3a3e646ee564da325ab1a0" translate="yes" xml:space="preserve">
          <source>Reserved params</source>
          <target state="translated">예약 된 매개 변수</target>
        </trans-unit>
        <trans-unit id="cc9695ab8a0663ef8e4cdd91ed033dd93ef16b13" translate="yes" xml:space="preserve">
          <source>Resets a previously set field on a query</source>
          <target state="translated">쿼리에서 이전에 설정 한 필드를 재설정합니다</target>
        </trans-unit>
        <trans-unit id="cc1e5f63666771c6b295e03fcf89503d1e853b07" translate="yes" xml:space="preserve">
          <source>Resets a previously set field on a query.</source>
          <target state="translated">쿼리에서 이전에 설정 한 필드를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="4396d18ac6dfda8d326a50c720338a338ee1ce15" translate="yes" xml:space="preserve">
          <source>Resets the set&amp;rsquo;s delta</source>
          <target state="translated">세트의 델타를 재설정합니다</target>
        </trans-unit>
        <trans-unit id="49092afde09229f5643c56a7897ea603a13d3477" translate="yes" xml:space="preserve">
          <source>Resets the set&amp;rsquo;s delta.</source>
          <target state="translated">세트의 델타를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="cc4e6aa65bbfe59f56ddfe81d701204059f9bcb5" translate="yes" xml:space="preserve">
          <source>Resets the set's delta.</source>
          <target state="translated">Resets the set's delta.</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="cfdb8eac562178cecca6be0acf0b9946ca8aa0a1" translate="yes" xml:space="preserve">
          <source>Resources can be namespaced, for such, it is just necessary to namespace the first argument of the generator:</source>
          <target state="translated">리소스는 네임 스페이스가 될 수 있으므로 생성기의 첫 번째 인수를 네임 스페이스로 지정하면됩니다.</target>
        </trans-unit>
        <trans-unit id="18e25448e05fecbd64caa3f4eecb34874792c678" translate="yes" xml:space="preserve">
          <source>Resources may restrict the number of match function clauses by using the &lt;code&gt;only:&lt;/code&gt; or &lt;code&gt;except:&lt;/code&gt; options.</source>
          <target state="translated">리소스는 &lt;code&gt;only:&lt;/code&gt; 또는 &lt;code&gt;except:&lt;/code&gt; 옵션 을 사용하여 일치 함수 절의 수를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3fe9cc0330fb297336ec5adbab30db233008ca1" translate="yes" xml:space="preserve">
          <source>Response fields</source>
          <target state="translated">응답 필드</target>
        </trans-unit>
        <trans-unit id="345582f712e83488d6f10e1390dc22c73298edc6" translate="yes" xml:space="preserve">
          <source>Restart your server and make some more requests. You should begin to see logs with tags for both the HTTP method and the route.</source>
          <target state="translated">서버를 다시 시작하고 더 많은 요청을하십시오. HTTP 메소드와 경로 모두에 대한 태그가있는 로그를보기 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="f3615cfd051b8a853b99a3bbd39aecb14388d3d5" translate="yes" xml:space="preserve">
          <source>Restart your server, and then make requests to a page or two. In your terminal, you should see the ConsoleReporter print logs for the Telemetry events it received as a result of the metrics definitions you provided.</source>
          <target state="translated">서버를 다시 시작한 다음 한두 페이지에 요청하십시오. 터미널에서 제공 한 메트릭 정의의 결과로받은 Telemetry 이벤트에 대한 ConsoleReporter 인쇄 로그를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a8579fe199c1bd99b47dbe8b26a3074a6b7775b" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the first result ordered by primary key</source>
          <target state="translated">기본 키로 정렬 된 첫 번째 결과를 반환하도록 쿼리를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="1be5679f0d024487571e90253a8ab8bb6a3e035d" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the first result ordered by primary key.</source>
          <target state="translated">기본 키로 정렬 된 첫 번째 결과를 반환하도록 쿼리를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="7640144b5f59ee8fcfc21eba87bc4737035dbfe3" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the last result ordered by primary key</source>
          <target state="translated">기본 키로 정렬 된 마지막 결과를 반환하도록 쿼리를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="84f17f7e72e012fa8ecb25425c8d772c52b93041" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the last result ordered by primary key.</source>
          <target state="translated">기본 키로 정렬 된 마지막 결과를 반환하도록 쿼리를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="6010c234b4e246d2d0dc7bbc4169dea022ffc308" translate="yes" xml:space="preserve">
          <source>Results in the following content to be sent over the wire as iodata:</source>
          <target state="translated">다음 내용이 iodata로 유선을 통해 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="11245c1fc733e0c008fb66ce6a0748f0e5fb8e42" translate="yes" xml:space="preserve">
          <source>Retrieves current layout formats</source>
          <target state="translated">현재 레이아웃 형식을 검색합니다</target>
        </trans-unit>
        <trans-unit id="d1477fcc02b66876278353a61847e3a0adbf780b" translate="yes" xml:space="preserve">
          <source>Retrieves current layout formats.</source>
          <target state="translated">현재 레이아웃 형식을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="8cb31ca469458aaced9cd91b90af5fd5469a8ad3" translate="yes" xml:space="preserve">
          <source>Retrieves the current layout</source>
          <target state="translated">현재 레이아웃을 검색합니다</target>
        </trans-unit>
        <trans-unit id="7d8b89095847125b428e7d401d0d88cc8e7fc256" translate="yes" xml:space="preserve">
          <source>Retrieves the current layout.</source>
          <target state="translated">현재 레이아웃을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d5fe001dd2567e82361cac6ab201c8263caf35dc" translate="yes" xml:space="preserve">
          <source>Retrieves the current root layout.</source>
          <target state="translated">Retrieves the current root layout.</target>
        </trans-unit>
        <trans-unit id="de4e7e7f9ddfa130ffdaf5cdefb5744bc005d9c7" translate="yes" xml:space="preserve">
          <source>Retrieves the current view</source>
          <target state="translated">현재보기를 검색합니다</target>
        </trans-unit>
        <trans-unit id="fb4232316a5314aa554d2d39877bfc3bcce354c7" translate="yes" xml:space="preserve">
          <source>Retrieves the current view.</source>
          <target state="translated">현재보기를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="4bddf417a7de2f2c1bbe4dc8d6ee57105e612f2c" translate="yes" xml:space="preserve">
          <source>Retrieves the underlying schema type for the given, possibly custom, type</source>
          <target state="translated">주어진, 아마도 커스텀 타입에 대한 기본 스키마 타입을 검색</target>
        </trans-unit>
        <trans-unit id="5961cf468e4e2aa3afe98203f5b5c22bd0d77054" translate="yes" xml:space="preserve">
          <source>Retrieves the underlying schema type for the given, possibly custom, type.</source>
          <target state="translated">지정된 가능한 사용자 정의 유형에 대한 기본 스키마 유형을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ee1295c185bc34ef3a9c058cebfaa8b9fdbf9290" translate="yes" xml:space="preserve">
          <source>Return the assets that have been pushed</source>
          <target state="translated">푸시 된 자산 반환</target>
        </trans-unit>
        <trans-unit id="43c95fc10ae46b19b5ba89cee4d152f0acef55a8" translate="yes" xml:space="preserve">
          <source>Return the assets that have been pushed.</source>
          <target state="translated">푸시 된 자산을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e8b5c0d8b119dcf904ba88b367260c00c3ef9780" translate="yes" xml:space="preserve">
          <source>Return the informational requests that have been sent</source>
          <target state="translated">전송 된 정보 요청을 반환</target>
        </trans-unit>
        <trans-unit id="4fb34f4377ca6c1a70a8356ec50da9bcbcc53b11" translate="yes" xml:space="preserve">
          <source>Return the informational requests that have been sent.</source>
          <target state="translated">전송 된 정보 요청을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="9d42e2f739c476b4724ed40443cd1bdc8b0b0c31" translate="yes" xml:space="preserve">
          <source>Return values</source>
          <target state="translated">반환 값</target>
        </trans-unit>
        <trans-unit id="6d85682eefe81ef7b0bc4a48c1801bc1226f1365" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;:ignore&lt;/code&gt; will cause &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;:ignore&lt;/code&gt; and the process will exit normally without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The remainder of the supervision tree will be started and so the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; should not be required by other processes. It can be started later with &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt;&lt;code&gt;Supervisor.restart_child/2&lt;/code&gt;&lt;/a&gt; as the child specification is saved in the parent supervisor. The main use cases for this are:</source>
          <target state="translated">반환 &lt;code&gt;:ignore&lt;/code&gt; 하게됩니다 &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt; 반환 &lt;code&gt;:ignore&lt;/code&gt; 하고 프로세스가 루프를 입력하거나 호출하지 않고 정상적으로 종료됩니다 &lt;code&gt;c:terminate/2&lt;/code&gt; . 감독 트리의 일부로 사용될 때 상위 감독자가 시작하지 못하거나 즉시 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 를 다시 시작하려고 시도하지 않습니다 . 나머지 감시 트리가 시작되므로 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 가 다른 프로세스에 필요하지 않습니다. 하위 스펙이 상위 감독자에 저장되므로 나중에 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt; &lt;code&gt;Supervisor.restart_child/2&lt;/code&gt; &lt;/a&gt; 로 시작할 수 있습니다 . 이에 대한 주요 사용 사례는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00a41a817313be26ad6bd03d4d8bb8d0ef9b40ce" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;:ignore&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;:ignore&lt;/code&gt; and the process will exit normally without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The remainder of the supervision tree will be (re)started and so the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; should not be required by other processes. It can be started later with &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt;&lt;code&gt;Supervisor.restart_child/2&lt;/code&gt;&lt;/a&gt; as the child specification is saved in the parent supervisor. The main use cases for this are:</source>
          <target state="translated">반환 &lt;code&gt;:ignore&lt;/code&gt; 하게됩니다 &lt;code&gt;start_link/3&lt;/code&gt; 반환 &lt;code&gt;:ignore&lt;/code&gt; 하고 프로세스가 루프를 입력하거나 호출하지 않고 정상적으로 종료됩니다 &lt;code&gt;c:terminate/2&lt;/code&gt; . 감독 트리의 일부로 사용될 때 상위 감독자가 시작하지 못하거나 즉시 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 를 다시 시작하려고 시도하지 않습니다 . 나머지 감시 트리는 (재) 시작되므로 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 가 다른 프로세스에 필요하지 않습니다. 하위 스펙이 상위 감독자에 저장되므로 나중에 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt; &lt;code&gt;Supervisor.restart_child/2&lt;/code&gt; &lt;/a&gt; 로 시작할 수 있습니다 . 이에 대한 주요 사용 사례는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ff73e37511f28874066a51701c02984a9625ba4" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;:ignore&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;:ignore&lt;/code&gt; and the process will exit normally without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The remainder of the supervision tree will be started and so the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; should not be required by other processes. It can be started later with &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt;&lt;code&gt;Supervisor.restart_child/2&lt;/code&gt;&lt;/a&gt; as the child specification is saved in the parent supervisor. The main use cases for this are:</source>
          <target state="translated">반환 &lt;code&gt;:ignore&lt;/code&gt; 하게됩니다 &lt;code&gt;start_link/3&lt;/code&gt; 반환 &lt;code&gt;:ignore&lt;/code&gt; 하고 프로세스가 루프를 입력하거나 호출하지 않고 정상적으로 종료됩니다 &lt;code&gt;c:terminate/2&lt;/code&gt; . 감독 트리의 일부로 사용될 때 상위 감독자가 시작하지 못하거나 즉시 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 를 다시 시작하려고 시도하지 않습니다 . 나머지 감시 트리가 시작되므로 &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; 가 다른 프로세스에 필요하지 않습니다. 하위 스펙이 상위 감독자에 저장되므로 나중에 &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt; &lt;code&gt;Supervisor.restart_child/2&lt;/code&gt; &lt;/a&gt; 로 시작할 수 있습니다 . 이에 대한 주요 사용 사례는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1bff6cc29ca5bd8a34c473249c3c63fc7d76e68c" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;nil&lt;/code&gt; makes this socket anonymous.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 을 반환 하면이 소켓이 익명이됩니다.</target>
        </trans-unit>
        <trans-unit id="9072c59f2221595d98be6bb52b91c6b0c3b06c0b" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, :hibernate}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except the process is hibernated before entering the loop. See &lt;code&gt;c:handle_call/3&lt;/code&gt; for more information on hibernation.</source>
          <target state="translated">&lt;code&gt;{:ok, state, :hibernate}&lt;/code&gt; 반환 하는 것은 루프에 들어가기 전에 프로세스가 최대 절전 모드 인 것을 제외하고는 &lt;code&gt;{:ok, state}&lt;/code&gt; 와 비슷합니다 . 최대 절전 모드에 대한 자세한 내용 은 &lt;code&gt;c:handle_call/3&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="de90d70d60e20f4781d6329e3d49fc470b32ed7c" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, timeout}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except &lt;code&gt;handle_info(:timeout, state)&lt;/code&gt; will be called after &lt;code&gt;timeout&lt;/code&gt; milliseconds if no messages are received within the timeout.</source>
          <target state="translated">&lt;code&gt;{:ok, state, timeout}&lt;/code&gt; 반환하는 것은 {: ok, state} 와 비슷합니다 &lt;code&gt;{:ok, state}&lt;/code&gt; 단 , 타임 아웃 내에 메시지가 수신되지 않으면 &lt;code&gt;handle_info(:timeout, state)&lt;/code&gt; 는 &lt;code&gt;timeout&lt;/code&gt; 밀리 초 후에 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f4f89c1f4a5e07f563900cfccc5421ff9a8161b2" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, timeout}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt;, except that it also sets a timeout. See the &quot;Timeouts&quot; section in the module documentation for more information.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, state, timeout}&lt;/code&gt; 과 유사하다 &lt;code&gt;{:ok, state}&lt;/code&gt; , 또한 시간 제한을 설정하는 것을 제외하고. 자세한 내용은 모듈 설명서의 &quot;시간 초과&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0c5290df2c6b52f28b4e772545847564eeac993d" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except that immediately after entering the loop the &lt;code&gt;c:handle_continue/2&lt;/code&gt; callback will be invoked with &lt;code&gt;Continue&lt;/code&gt; as first argument.</source>
          <target state="translated">&lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; 리턴하는 것은 {: ok, state} 와 유사합니다 &lt;code&gt;{:ok, state}&lt;/code&gt; 루프에 들어가 자마자 &lt;code&gt;c:handle_continue/2&lt;/code&gt; 콜백이 첫 번째 인수 로 &lt;code&gt;Continue&lt;/code&gt; 로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="5e266ed35f5a07eeef5d08bc7de00ba6d44480f2" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except that immediately after entering the loop the &lt;code&gt;c:handle_continue/2&lt;/code&gt; callback will be invoked with the value &lt;code&gt;continue&lt;/code&gt; as first argument.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; 비슷 &lt;code&gt;{:ok, state}&lt;/code&gt; 것 이외에는 즉시 루프에게 입력 한 후 &lt;code&gt;c:handle_continue/2&lt;/code&gt; 콜백 값으로 호출된다는 &lt;code&gt;continue&lt;/code&gt; 제 인수로한다.</target>
        </trans-unit>
        <trans-unit id="4e7d4ebacb2fe086ff03c74440ab13b1423c917e" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state}&lt;/code&gt; will cause &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;{:ok, pid}&lt;/code&gt; and the process to enter its loop.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, state}&lt;/code&gt; 의 원인이됩니다 &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt; 돌아 &lt;code&gt;{:ok, pid}&lt;/code&gt; 과 그 루프를 입력하는 과정.</target>
        </trans-unit>
        <trans-unit id="7f3cdecd3e6dd19af77a3ae2d89ad09a2ac949c2" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state}&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;{:ok, pid}&lt;/code&gt; and the process to enter its loop.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, state}&lt;/code&gt; 의 원인이됩니다 &lt;code&gt;start_link/3&lt;/code&gt; 돌아 &lt;code&gt;{:ok, pid}&lt;/code&gt; 과 그 루프를 입력하는 과정.</target>
        </trans-unit>
        <trans-unit id="ff4885b193e5e31cd9b10b3bed429dbfedccbf7d" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:stop, reason}&lt;/code&gt; will cause &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;{:error, reason}&lt;/code&gt; and the process to exit with reason &lt;code&gt;reason&lt;/code&gt; without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{:stop, reason}&lt;/code&gt; 의 원인이됩니다 &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt; 돌아 &lt;code&gt;{:error, reason}&lt;/code&gt; 및 이유와 출구 과정 &lt;code&gt;reason&lt;/code&gt; 루프를 입력하거나 호출하지 않고 &lt;code&gt;c:terminate/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="958ba96970f27c1edef49fa9a09b56e9fb4a1f11" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:stop, reason}&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;{:error, reason}&lt;/code&gt; and the process to exit with reason &lt;code&gt;reason&lt;/code&gt; without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{:stop, reason}&lt;/code&gt; 의 원인이됩니다 &lt;code&gt;start_link/3&lt;/code&gt; 돌아 &lt;code&gt;{:error, reason}&lt;/code&gt; 및 이유와 출구 과정 &lt;code&gt;reason&lt;/code&gt; 루프를 입력하거나 호출하지 않고 &lt;code&gt;c:terminate/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0206911964c1dff05f04ec226aa02a9d1fc49c4b" translate="yes" xml:space="preserve">
          <source>Returning Ecto structures from context APIs</source>
          <target state="translated">컨텍스트 API에서 Ecto 구조 반환</target>
        </trans-unit>
        <trans-unit id="ead0287f37dbf41a5b3e642fa183f6cceae5aa19" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:ok&lt;/code&gt; if it was created successfully.</source>
          <target state="translated">성공적으로 작성된 경우 &lt;code&gt;:ok&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="70939585b75d8df6aeae0245bfdd5f2e2587b1a3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:ok&lt;/code&gt; if it was dropped successfully.</source>
          <target state="translated">성공적으로 삭제 된 경우 &lt;code&gt;:ok&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a2267d38e27ee29bf7513fada6d2716e40cdb163" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if no result was found. If the struct in the queryable has no or more than one primary key, it will raise an argument error.</source>
          <target state="translated">결과가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 쿼리 가능 객체의 구조체에 기본 키가 하나 이상 없으면 인수 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e53620a3b277dbf9a9602eb773594a80db3e44d6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if no result was found. Raises if more than one entry.</source>
          <target state="translated">결과가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 둘 이상의 항목이 있으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9360c2d44ef312594284b5a710755e2346b37d4b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if module implements behaviour</source>
          <target state="translated">모듈이 동작을 구현하면 &lt;code&gt;true&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="23a59d892319f7f0fbbc2e7a9dd75fa134a0f90b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if module implements behaviour.</source>
          <target state="translated">모듈이 동작을 구현하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2d19c7ee6da1e3f5da0fb1807858b4ade5c50360" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if query has binding with a given name, otherwise &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">쿼리에 지정된 이름의 바인딩이 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b85e7f5d19e828b88b0b056874576033b0a6b40f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if query has binding with a given name, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">쿼리에 지정된 이름의 바인딩이 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="3c78f17bafbd0dd213461c41dc67d858e69064d2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, :already_down}&lt;/code&gt; if the storage has already been dropped or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything else goes wrong.</source>
          <target state="translated">저장소가 이미 삭제 된 경우 &lt;code&gt;{:error, :already_down}&lt;/code&gt; 반환하거나 다른 문제가 발생할 경우 &lt;code&gt;{:error, term}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="605d378ffa674fae5a00cee570b0b7cdcad07117" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, :already_up}&lt;/code&gt; if the storage has already been created or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything else goes wrong.</source>
          <target state="translated">저장소가 이미 생성 된 경우 &lt;code&gt;{:error, :already_up}&lt;/code&gt; 반환하거나 다른 문제가 발생할 경우 &lt;code&gt;{:error, term}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="bbb74ea38a6533d0fe461ebaab3531e6bbb4441f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, {:already_started, pid}}&lt;/code&gt; if the repo is already started or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything else goes wrong.</source>
          <target state="translated">반환 &lt;code&gt;{:error, {:already_started, pid}}&lt;/code&gt; 의 repo은 이미 시작되었을 경우, 또는 &lt;code&gt;{:error, term}&lt;/code&gt; 다른 경우 아무것도에 잘못.</target>
        </trans-unit>
        <trans-unit id="58e63b43ef9abbb082be42bd8c0a86235c15cd73" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, body, conn}&lt;/code&gt; if all body has been read, &lt;code&gt;{:more, binary, conn}&lt;/code&gt; otherwise, and &lt;code&gt;{:done, conn}&lt;/code&gt; if there is no more body.</source>
          <target state="translated">반환 &lt;code&gt;{:ok, body, conn}&lt;/code&gt; 모든 몸이 된 경우 읽기, &lt;code&gt;{:more, binary, conn}&lt;/code&gt; 그렇지 않으면, 그리고 &lt;code&gt;{:done, conn}&lt;/code&gt; 더 이상 몸이없는 경우.</target>
        </trans-unit>
        <trans-unit id="492087e16b1e08208596bad63dcf4e6983dd69a6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, value}&lt;/code&gt; if the transaction was successful where &lt;code&gt;value&lt;/code&gt; is the value return by the function or &lt;code&gt;{:error, value}&lt;/code&gt; if the transaction was rolled back where &lt;code&gt;value&lt;/code&gt; is the value given to &lt;code&gt;rollback/1&lt;/code&gt;.</source>
          <target state="translated">트랜잭션이 성공한 경우 &lt;code&gt;{:ok, value}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;value&lt;/code&gt; 는 함수에 의해 리턴 된 &lt;code&gt;{:error, value}&lt;/code&gt; 이고, 트랜잭션이 롤백 된 경우에는 {: error, value}입니다. 여기서 &lt;code&gt;value&lt;/code&gt; 는 &lt;code&gt;rollback/1&lt;/code&gt; 에 제공된 값 입니다 .</target>
        </trans-unit>
        <trans-unit id="b3ac990ec0b9514356d2a034319c859849a9e6e5" translate="yes" xml:space="preserve">
          <source>Returns a 3-tuple of the updated set, and the joined and left elements.</source>
          <target state="translated">업데이트 된 세트의 3 튜플과 결합 및 왼쪽 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f35d9695ecb23f999b9998650d30381261bef9f" translate="yes" xml:space="preserve">
          <source>Returns a boolean.</source>
          <target state="translated">부울을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="650875231f8a18a81c1d81cac51379d58ccf1857" translate="yes" xml:space="preserve">
          <source>Returns a child specification for pubsub with the given &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">Returns a child specification for pubsub with the given &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53d474e2458adf04530aba9db61bc9313c251db4" translate="yes" xml:space="preserve">
          <source>Returns a child specification for socket management.</source>
          <target state="translated">Returns a child specification for socket management.</target>
        </trans-unit>
        <trans-unit id="0c450d44c35ef8df6b6562542b42842e6ac72c18" translate="yes" xml:space="preserve">
          <source>Returns a child specification that mounts the processes required for the adapter.</source>
          <target state="translated">어댑터에 필요한 프로세스를 마운트하는 하위 사양을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7ee158500b9f89a33b9ce70235221ba32299a4c5" translate="yes" xml:space="preserve">
          <source>Returns a connection with the value resulting from the async assignment placed under &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;:assigns&lt;/code&gt; field.</source>
          <target state="translated">반환 비동기 할당의 결과 값과의 연결은 아래에 배치 &lt;code&gt;key&lt;/code&gt; 에 &lt;code&gt;:assigns&lt;/code&gt; 필드.</target>
        </trans-unit>
        <trans-unit id="07bac1c9be8bf8bb3367a18c96209210550c6899" translate="yes" xml:space="preserve">
          <source>Returns a derived key suitable for use</source>
          <target state="translated">사용하기에 적합한 파생 키를 반환</target>
        </trans-unit>
        <trans-unit id="5e75f3416132b9bd95f6a63b5c6c85239a872598" translate="yes" xml:space="preserve">
          <source>Returns a derived key suitable for use.</source>
          <target state="translated">사용하기에 적합한 파생 키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="053dbbd549cdd02787ab581c34e5abf7e8bbc62f" translate="yes" xml:space="preserve">
          <source>Returns a form element to scope a function to.</source>
          <target state="translated">함수의 범위를 지정할 양식 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f0d71c80f5d0cc1a9d0ab8793b15d37692fd2cd" translate="yes" xml:space="preserve">
          <source>Returns a keyword list of the validations for this changeset</source>
          <target state="translated">이 변경 집합에 대한 유효성 검사 키워드 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a05481cc133c5c294e5f4dc6b7b8e55db365bfdf" translate="yes" xml:space="preserve">
          <source>Returns a keyword list of the validations for this changeset.</source>
          <target state="translated">이 변경 세트에 대한 유효성 검증 키워드 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="de4c44d4128ab187c15a7abb204260f88f3fdd0a" translate="yes" xml:space="preserve">
          <source>Returns a keyword list with all template engines extensions followed by their modules.</source>
          <target state="translated">Returns a keyword list with all template engines extensions followed by their modules.</target>
        </trans-unit>
        <trans-unit id="4eceacd5368c78d30c87b34a7ca397a7e8c03b4a" translate="yes" xml:space="preserve">
          <source>Returns a lazy enumerable that emits all entries from the data store matching the given query</source>
          <target state="translated">주어진 쿼리와 일치하는 데이터 저장소에서 모든 항목을 내보내는 지연 열거 형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d404a7c17f5a0b0c1453ff865660d917c5678214" translate="yes" xml:space="preserve">
          <source>Returns a lazy enumerable that emits all entries from the data store matching the given query.</source>
          <target state="translated">주어진 쿼리와 일치하는 데이터 저장소에서 모든 항목을 내보내는 지연 열거 형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6a34a3db584f9e3fd9604539366fb57ea2cd9ec6" translate="yes" xml:space="preserve">
          <source>Returns a list of elements for the topic who belong to an online replica</source>
          <target state="translated">온라인 복제본에 속하는 주제의 요소 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9728c9b94accd9419ab46a4602b235851d8df84e" translate="yes" xml:space="preserve">
          <source>Returns a list of elements for the topic who belong to an online replica.</source>
          <target state="translated">온라인 복제본에 속하는 주제의 요소 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="98ecba6737698c276fc7aa3bdae3b968207495ca" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in the set belonging to an online replica</source>
          <target state="translated">온라인 복제본에 속하는 세트의 요소 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fc5e4101925193876bb5c320c36427d878ef3ae3" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in the set belonging to an online replica.</source>
          <target state="translated">온라인 복제본에 속하는 세트의 요소 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8f6fc0dce67c81b4ef9135a5edd3f136b2cc99cb" translate="yes" xml:space="preserve">
          <source>Returns a lists of presence metadata.</source>
          <target state="translated">현재 상태 메타 데이터 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0dba8891d7dff85bea5812cb85aa4e955ebb95f7" translate="yes" xml:space="preserve">
          <source>Returns a lists of presences in key/metadata tuple pairs.</source>
          <target state="translated">키 / 메타 데이터 튜플 쌍으로 존재 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dff9c6907481d25cab3f4d2d9b09bf07ac097138" translate="yes" xml:space="preserve">
          <source>Returns a map of previously set flash messages or an empty map</source>
          <target state="translated">이전에 설정된 플래시 메시지의 맵 또는 빈 맵을 반환합니다</target>
        </trans-unit>
        <trans-unit id="6abe9dd0b8966c47f830c2f72b614d2c40758609" translate="yes" xml:space="preserve">
          <source>Returns a map of previously set flash messages or an empty map.</source>
          <target state="translated">이전에 설정된 플래시 메시지의 맵 또는 빈 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c1fa67674e571450599b4f305949a057482d509" translate="yes" xml:space="preserve">
          <source>Returns a message from flash by &lt;code&gt;key&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt; if no message is available for &lt;code&gt;key&lt;/code&gt;).</source>
          <target state="translated">Returns a message from flash by &lt;code&gt;key&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt; if no message is available for &lt;code&gt;key&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d3bcc9e9461f0d40bcb8ba9f9ff8bfdc0346797f" translate="yes" xml:space="preserve">
          <source>Returns a message from flash by key</source>
          <target state="translated">키를 기준으로 플래시에서 메시지를 반환</target>
        </trans-unit>
        <trans-unit id="c2fe41e82f07a1fbbbec018c8f53d0b6182a1482" translate="yes" xml:space="preserve">
          <source>Returns a message from flash by key.</source>
          <target state="translated">키를 기준으로 플래시에서 메시지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="93a50ae2e333787da62138b423eb8110c1bac7b7" translate="yes" xml:space="preserve">
          <source>Returns a name of a corresponding form field</source>
          <target state="translated">해당 양식 필드의 이름을 반환</target>
        </trans-unit>
        <trans-unit id="ba24e463caf9df93c02dd51780a0d08b0d2a6f81" translate="yes" xml:space="preserve">
          <source>Returns a name of a corresponding form field.</source>
          <target state="translated">해당 양식 필드의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="23d8b361ddbae32c3b63666cb80ebf1801f12704" translate="yes" xml:space="preserve">
          <source>Returns a new struct with updated metadata</source>
          <target state="translated">메타 데이터가 업데이트 된 새 구조체를 반환</target>
        </trans-unit>
        <trans-unit id="ea74e5d44dc13f49afdcf6a9719c7e7f2969a947" translate="yes" xml:space="preserve">
          <source>Returns a new struct with updated metadata.</source>
          <target state="translated">메타 데이터가 업데이트 된 새 구조체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cc37772c9a6de6fa11c8e433fbbf34e6823bf54" translate="yes" xml:space="preserve">
          <source>Returns a session id and the session contents. The session id is any value that can be used to identify the session by the store.</source>
          <target state="translated">세션 ID와 세션 내용을 반환합니다. 세션 ID는 상점에서 세션을 식별하는 데 사용할 수있는 값입니다.</target>
        </trans-unit>
        <trans-unit id="712005fc2a8f17e99905df105e8d47cda95bf3f0" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic</source>
          <target state="translated">주어진 주제에 대한 구독자 pid 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="df937cfc113e642fc0ab14e0072f837eab655ec5" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic with fastlane tuples. See &lt;code&gt;subscribers/1&lt;/code&gt; for more information</source>
          <target state="translated">fastlane 튜플이있는 주어진 주제에 대한 구독자 pid 세트를 리턴합니다. 참조 &lt;code&gt;subscribers/1&lt;/code&gt; 자세한 내용은</target>
        </trans-unit>
        <trans-unit id="42006bcaaa53701de4479a6f3f691e45702d2f9d" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic with fastlane tuples. See &lt;code&gt;subscribers/1&lt;/code&gt; for more information.</source>
          <target state="translated">fastlane 튜플이있는 주어진 주제에 대한 구독자 pid 세트를 리턴합니다. 자세한 내용은 &lt;code&gt;subscribers/1&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e8369338e0c05711ad6cbabafe9b930425cf95ff" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic.</source>
          <target state="translated">주어진 주제에 대한 구독자 pid 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f7fa95a2bef4637d7a4c87c84d82a9dc0cc098a5" translate="yes" xml:space="preserve">
          <source>Returns a specification to start this module under a supervisor</source>
          <target state="translated">수퍼바이저에서이 모듈을 시작하기위한 스펙을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3b59fc82f7ced9ba4e9462febb3a349db49c4788" translate="yes" xml:space="preserve">
          <source>Returns a specification to start this module under a supervisor.</source>
          <target state="translated">감독자 아래에서이 모듈을 시작하기위한 사양을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="091a21dd36a626bfc0c9fdf11d83c715167ffcdf" translate="yes" xml:space="preserve">
          <source>Returns a value of a corresponding form field</source>
          <target state="translated">해당 양식 필드의 값을 반환</target>
        </trans-unit>
        <trans-unit id="c131065afabb90589ca5cb098a3f27dc4b8fbde7" translate="yes" xml:space="preserve">
          <source>Returns a value of a corresponding form field.</source>
          <target state="translated">해당 양식 필드의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d3e30cae1b351831558c3c4eda6364b611ab6b4d" translate="yes" xml:space="preserve">
          <source>Returns all constraints in a changeset</source>
          <target state="translated">변경 세트의 모든 제약 조건을 반환</target>
        </trans-unit>
        <trans-unit id="4aaa08f650c9e2be4daa322f5d4b3b46852ea886" translate="yes" xml:space="preserve">
          <source>Returns all constraints in a changeset.</source>
          <target state="translated">변경 세트의 모든 제약 조건을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d6d383e0581ef77b281929559a10916020b77b8e" translate="yes" xml:space="preserve">
          <source>Returns all elements for the pid</source>
          <target state="translated">pid에 대한 모든 요소를 ​​반환</target>
        </trans-unit>
        <trans-unit id="4c5f82e0c986b328023167350fce7177ba20f9e1" translate="yes" xml:space="preserve">
          <source>Returns all elements for the pid.</source>
          <target state="translated">pid에 대한 모든 요소를 ​​반환합니다.</target>
        </trans-unit>
        <trans-unit id="c768ba09c5f9b6d19479b4f47aac0134680ef530" translate="yes" xml:space="preserve">
          <source>Returns all template paths in a given template root.</source>
          <target state="translated">Returns all template paths in a given template root.</target>
        </trans-unit>
        <trans-unit id="9f42f7ab01ca9e2ebb74b6867cbb9213381788a1" translate="yes" xml:space="preserve">
          <source>Returns an element to scope a function to.</source>
          <target state="translated">함수의 범위를 지정할 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36a571f52eaaca3cd18bc44b8b5c38c92c16a75b" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Returns an empty &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt; struct.</target>
        </trans-unit>
        <trans-unit id="34a3567f03d097e0d031fe8d6992717e2757962c" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">빈 &lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt; 구조체를 반환</target>
        </trans-unit>
        <trans-unit id="1867f1f84bca2a6baf78a27e20f0fdce6e1ae1c2" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">빈 &lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt; 구조체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="526b65bcb4e29d1d2c27932264c429305f684b08" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field</source>
          <target state="translated">해당 양식 필드의 id를 반환</target>
        </trans-unit>
        <trans-unit id="6acc1204e5851adb35e290223e348a15e77cdcad" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field and value attached to it</source>
          <target state="translated">해당 양식 필드의 ID와 이에 첨부 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="84efac80dbe5e7ed56e7537f4f686f3b07b5a266" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field and value attached to it.</source>
          <target state="translated">해당 양식 필드의 ID와 이에 첨부 된 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="06d59f08ef07f39b3381c35ebeeaac3548d6915d" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field.</source>
          <target state="translated">해당 양식 필드의 id를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c950ea011ddd66d93e6085ee84e7633de7da47d" translate="yes" xml:space="preserve">
          <source>Returns integer ranging from 1 to the argument value, dividing the partition as equally as possible</source>
          <target state="translated">1에서 인수 값 사이의 정수를 리턴하여 파티션을 가능한 한 동등하게 나눕니다.</target>
        </trans-unit>
        <trans-unit id="8ad75873b2bd9a76b194b17a4c985c8f1e83c429" translate="yes" xml:space="preserve">
          <source>Returns integer ranging from 1 to the argument value, dividing the partition as equally as possible.</source>
          <target state="translated">1에서 인수 값 사이의 정수를 리턴하여 파티션을 가능한 동일하게 나눕니다.</target>
        </trans-unit>
        <trans-unit id="1baae41f6c99996eaf501d247824dadd023b10fa" translate="yes" xml:space="preserve">
          <source>Returns number of the current row within its partition, counting from 1</source>
          <target state="translated">파티션 내에서 현재 행의 수를 1부터 계산하여 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9932f39d39d6470217cf5c772a738971839eda33" translate="yes" xml:space="preserve">
          <source>Returns number of the current row within its partition, counting from 1.</source>
          <target state="translated">파티션 내에서 현재 행의 번호를 1부터 계산하여 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df90f06f882579c05edd5cb0842ad2b6c18a486f" translate="yes" xml:space="preserve">
          <source>Returns options to be used inside a select.</source>
          <target state="translated">선택 내에서 사용할 옵션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8be052853a5bd97ee888d372e7c33d6889afd621" translate="yes" xml:space="preserve">
          <source>Returns peer information such as the address, port and ssl cert</source>
          <target state="translated">주소, 포트 및 SSL 인증서와 같은 피어 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="867abb050b04c70e2d39cfa72539e1b1fb73b750" translate="yes" xml:space="preserve">
          <source>Returns peer information such as the address, port and ssl cert.</source>
          <target state="translated">주소, 포트 및 SSL 인증서와 같은 피어 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad16e58f157d6278eb351b97f7b14f12edfbb1ef" translate="yes" xml:space="preserve">
          <source>Returns presences for a socket/topic.</source>
          <target state="translated">소켓 / 토픽에 대한 존재를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e37860b3854ed28f99b7bfe01b2180473629870" translate="yes" xml:space="preserve">
          <source>Returns presences for a topic</source>
          <target state="translated">주제에 대한 현재 상태를 반환</target>
        </trans-unit>
        <trans-unit id="fc774e47879528e1b847ce3dc85a651aca6c9e47" translate="yes" xml:space="preserve">
          <source>Returns presences for a topic.</source>
          <target state="translated">주제에 대한 현재 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0f1126842e744b3025b0d619e090904662cec2b5" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row with gaps; same as &lt;a href=&quot;#row_number/0&quot;&gt;&lt;code&gt;row_number/0&lt;/code&gt;&lt;/a&gt; of its first peer</source>
          <target state="translated">간격이있는 현재 행의 순위를 반환합니다. 첫 번째 피어의 &lt;a href=&quot;#row_number/0&quot;&gt; &lt;code&gt;row_number/0&lt;/code&gt; &lt;/a&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="02158dedc3007be2bcf9b530c44fda6f17caf48d" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row with gaps; same as &lt;a href=&quot;#row_number/0&quot;&gt;&lt;code&gt;row_number/0&lt;/code&gt;&lt;/a&gt; of its first peer.</source>
          <target state="translated">간격이있는 현재 행의 순위를 반환합니다. 첫 번째 피어의 &lt;a href=&quot;#row_number/0&quot;&gt; &lt;code&gt;row_number/0&lt;/code&gt; &lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="fddbdde5e0fcc48446d6963dc4e1bb39c09c2131" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row without gaps; this function counts peer groups</source>
          <target state="translated">간격없이 현재 행의 순위를 반환합니다. 이 함수는 피어 그룹을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="5225f09f4e714d425f8a20b25f28b5c3122951ff" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row without gaps; this function counts peer groups.</source>
          <target state="translated">간격없이 현재 행의 순위를 반환합니다. 이 함수는 피어 그룹을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="76d313e9fa898e49117fe34176712341a8b4242f" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (number of rows preceding or peer with current row) / (total rows)</source>
          <target state="translated">현재 행의 상대적 순위를 반환합니다 : (행 앞 또는 현재 행과 피어의 행 수) / (총 행)</target>
        </trans-unit>
        <trans-unit id="62ef57af9ff1721052c8c5207500454bbbd8bbd9" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (number of rows preceding or peer with current row) / (total rows).</source>
          <target state="translated">현재 행의 상대 순위를 리턴합니다 ((행 앞 또는 현재 행과 피어의 행 수) / (총 행)).</target>
        </trans-unit>
        <trans-unit id="b685e7622e432494c38b27cc47e7115839285d81" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (rank - 1) / (total rows - 1)</source>
          <target state="translated">현재 행의 상대 순위를 반환합니다 : (rank-1) / (total rows-1)</target>
        </trans-unit>
        <trans-unit id="03361fb003b6621abe3b317d1fac668752f73549" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (rank - 1) / (total rows - 1).</source>
          <target state="translated">현재 행의 상대 순위를 반환합니다 : (rank-1) / (total rows-1).</target>
        </trans-unit>
        <trans-unit id="369f4a16a3017444ca1fa810086afff165ef763f" translate="yes" xml:space="preserve">
          <source>Returns session value for the given &lt;code&gt;key&lt;/code&gt;. If &lt;code&gt;key&lt;/code&gt; is not set, &lt;code&gt;nil&lt;/code&gt; is returned</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 대한 세션 값을 반환 합니다 . 경우 &lt;code&gt;key&lt;/code&gt; 설정되어 있지 않은, &lt;code&gt;nil&lt;/code&gt; 반환된다</target>
        </trans-unit>
        <trans-unit id="d1c69cd8be5befb3d5c00261debf16c174734262" translate="yes" xml:space="preserve">
          <source>Returns session value for the given &lt;code&gt;key&lt;/code&gt;. If &lt;code&gt;key&lt;/code&gt; is not set, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">주어진 &lt;code&gt;key&lt;/code&gt; 대한 세션 값을 반환 합니다 . 경우 &lt;code&gt;key&lt;/code&gt; 설정되어 있지 않은, &lt;code&gt;nil&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="05633164a421bd4efd0b4e2ba2beb7006b142c18" translate="yes" xml:space="preserve">
          <source>Returns text transformed into HTML using simple formatting rules</source>
          <target state="translated">간단한 서식 규칙을 사용하여 HTML로 변환 된 텍스트를 반환</target>
        </trans-unit>
        <trans-unit id="3d4b947317ad0f07885eccbb4d12d0351c4fa428" translate="yes" xml:space="preserve">
          <source>Returns text transformed into HTML using simple formatting rules.</source>
          <target state="translated">간단한 서식 규칙을 사용하여 HTML로 변환 된 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9aac30c1bda08d19ebc46e4a80d899ef36d5aa1a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;:plug_init_mode&lt;/code&gt; that controls when plugs are initialized.</source>
          <target state="translated">플러그가 초기화되는시기를 제어 하는 &lt;code&gt;:plug_init_mode&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5c53b923c607b523ff225d0c3071654084a23552" translate="yes" xml:space="preserve">
          <source>Returns the Channel Transport protocol version</source>
          <target state="translated">채널 전송 프로토콜 버전을 반환</target>
        </trans-unit>
        <trans-unit id="e23faceeb11fa60c87847730bb469936acd6f935" translate="yes" xml:space="preserve">
          <source>Returns the Channel Transport protocol version.</source>
          <target state="translated">채널 전송 프로토콜 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4dfca911689de9a0a1ecb4eb60bbab5580c50fce" translate="yes" xml:space="preserve">
          <source>Returns the HTML string of the rendered view or element.</source>
          <target state="translated">렌더링 된 뷰 또는 요소의 HTML 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d945fca39a668ae2ba2c1f3dbe8860e0846e47c9" translate="yes" xml:space="preserve">
          <source>Returns the HTML5 validations that would apply to the given field</source>
          <target state="translated">주어진 필드에 적용 할 HTML5 유효성 검사를 반환합니다</target>
        </trans-unit>
        <trans-unit id="93e15a4efa63cbff7b529f340d1a8ac094f6045f" translate="yes" xml:space="preserve">
          <source>Returns the HTML5 validations that would apply to the given field.</source>
          <target state="translated">주어진 필드에 적용 할 HTML5 유효성 검사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="297f4a097f2d813abcdcd7f7a7dea37738b5a147" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and its version</source>
          <target state="translated">HTTP 프로토콜과 버전을 반환합니다</target>
        </trans-unit>
        <trans-unit id="3cd55cb29770ed1998aaee8252d9022dd1b3ffdf" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and its version.</source>
          <target state="translated">HTTP 프로토콜 및 해당 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="77c003c1086bd9009def4461daa696b798022d0c" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and version</source>
          <target state="translated">HTTP 프로토콜과 버전을 반환</target>
        </trans-unit>
        <trans-unit id="abbbefd3dc6d571e1ab61f5efadc5c62f6bd1921" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and version.</source>
          <target state="translated">HTTP 프로토콜 및 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d4ae4e71d932883592d92b3b18730d7945ee3f6" translate="yes" xml:space="preserve">
          <source>Returns the action name as an atom, raises if unavailable</source>
          <target state="translated">액션 이름을 아톰으로 반환하고 사용할 수없는 경우 발생</target>
        </trans-unit>
        <trans-unit id="dab666811158dbf3e899121dcc28421e073cca59" translate="yes" xml:space="preserve">
          <source>Returns the action name as an atom, raises if unavailable.</source>
          <target state="translated">조치 이름을 원자로 리턴하고 사용할 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0b6cba2473f3df8d32c492bf820514be4364ee6b" translate="yes" xml:space="preserve">
          <source>Returns the adapter configuration stored in the &lt;code&gt;:otp_app&lt;/code&gt; environment</source>
          <target state="translated">&lt;code&gt;:otp_app&lt;/code&gt; 환경에 저장된 어댑터 구성을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="43219329d2c7311ba7917eea1cd3cadeb5043975" translate="yes" xml:space="preserve">
          <source>Returns the adapter configuration stored in the &lt;code&gt;:otp_app&lt;/code&gt; environment.</source>
          <target state="translated">&lt;code&gt;:otp_app&lt;/code&gt; 환경에 저장된 어댑터 구성을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="e1cb0bc91613f679f66b52274c53f86a97f132a3" translate="yes" xml:space="preserve">
          <source>Returns the adapter metadata from the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback</source>
          <target state="translated">&lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; 콜백 에서 어댑터 메타 데이터를 반환합니다</target>
        </trans-unit>
        <trans-unit id="b25ba9df49d4304866b915c7b97adc987ba77126" translate="yes" xml:space="preserve">
          <source>Returns the adapter metadata from the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">&lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; 콜백 에서 어댑터 메타 데이터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a3da609c308705004b3b80761833002f2dcd8f53" translate="yes" xml:space="preserve">
          <source>Returns the adapter tied to the repository</source>
          <target state="translated">저장소에 연결된 어댑터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="afa3064748d47bf05c613027563ace33703b267f" translate="yes" xml:space="preserve">
          <source>Returns the adapter tied to the repository.</source>
          <target state="translated">저장소에 연결된 어댑터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="eebd96a05b7bb7055e52b0bef1a908d0ef6f7694" translate="yes" xml:space="preserve">
          <source>Returns the atom for given integer</source>
          <target state="translated">주어진 정수에 대한 원자를 반환</target>
        </trans-unit>
        <trans-unit id="e2a8f92cc144fb58c301420a3430dc5fe53b8d3f" translate="yes" xml:space="preserve">
          <source>Returns the atom for given integer.</source>
          <target state="translated">주어진 정수에 대한 아톰을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5539444ee76a2dd85b864e66df8aec9f7852ec9f" translate="yes" xml:space="preserve">
          <source>Returns the atom name or pid of the current repository.</source>
          <target state="translated">현재 저장소의 아톰 이름 또는 pid를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="afe87d163e6f10fac80385705026511ff9a2fc63" translate="yes" xml:space="preserve">
          <source>Returns the autogenerated value, or nil if it must be autogenerated inside the storage or raise if not supported.</source>
          <target state="translated">자동 생성 된 값을 반환하거나, 저장소 내에서 자동 생성되어야하는 경우 nil을 반환하거나 지원되지 않는 경우 올립니다.</target>
        </trans-unit>
        <trans-unit id="41855c6a8c275d3df47fd7a5ae7f9c49db9bb2bf" translate="yes" xml:space="preserve">
          <source>Returns the causal context for the set</source>
          <target state="translated">세트의 인과 문맥을 돌려줍니다</target>
        </trans-unit>
        <trans-unit id="986d9fe4d1da5ebbdf4d643a0485130c94c491eb" translate="yes" xml:space="preserve">
          <source>Returns the causal context for the set.</source>
          <target state="translated">세트의 인과 문맥을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="38a0025a0432e8c5dd01c86fe5200e8364746744" translate="yes" xml:space="preserve">
          <source>Returns the compile-time route info and runtime path params for a request.</source>
          <target state="translated">요청에 대한 컴파일 시간 경로 정보 및 런타임 경로 매개 변수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc97f956d4879678d0a667e8dda7692cb3182444" translate="yes" xml:space="preserve">
          <source>Returns the configured JSON encoding library for Phoenix.</source>
          <target state="translated">Phoenix에 대해 구성된 JSON 인코딩 라이브러리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f13c7ca8c83510b5ba4c0d86be35ae6da1dfc2ad" translate="yes" xml:space="preserve">
          <source>Returns the content type as long as it matches the given format</source>
          <target state="translated">주어진 형식과 일치하는 한 컨텐츠 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ab78007dc9ad8440236997eb2c61d39140378f99" translate="yes" xml:space="preserve">
          <source>Returns the content type as long as it matches the given format.</source>
          <target state="translated">주어진 형식과 일치하는 한 내용 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4cdf8ec9d9d779620e0eec0b47d35ce1fe55a705" translate="yes" xml:space="preserve">
          <source>Returns the controller module as an atom, raises if unavailable</source>
          <target state="translated">컨트롤러 모듈을 원자로 반환하고 사용할 수없는 경우 증가</target>
        </trans-unit>
        <trans-unit id="64f03d92d21ad1889682c560dd35e7aec5c1ad49" translate="yes" xml:space="preserve">
          <source>Returns the controller module as an atom, raises if unavailable.</source>
          <target state="translated">제어기 모듈을 원자로 리턴하고, 사용 불가능한 경우 증가합니다.</target>
        </trans-unit>
        <trans-unit id="562c41fa12cf6185d1da4523d2e646f503cf8b77" translate="yes" xml:space="preserve">
          <source>Returns the current list of LiveView children for the &lt;code&gt;parent&lt;/code&gt; LiveView.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; LiveView에 대한 현재 LiveView 자식 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1fd48f7f3712e81d4bbdae577329a2019eba98fa" translate="yes" xml:space="preserve">
          <source>Returns the current path with the given query parameters.</source>
          <target state="translated">주어진 쿼리 매개 변수가있는 현재 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="63686a054a364e3a980f670fc63fc1f9015be33a" translate="yes" xml:space="preserve">
          <source>Returns the current request URL with query params.</source>
          <target state="translated">쿼리 매개 변수가있는 현재 요청 URL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f89be3c230b99aea30665f474f698f13a5d2973" translate="yes" xml:space="preserve">
          <source>Returns the current request URL, with and without query params</source>
          <target state="translated">쿼리 매개 변수 유무에 관계없이 현재 요청 URL을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="31184fba0970ede83c32265639b32c06c6cdec55" translate="yes" xml:space="preserve">
          <source>Returns the current request URL, with and without query params.</source>
          <target state="translated">쿼리 매개 변수가 있거나없는 현재 요청 URL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eb5d3d27f926149e37699a0082246664f67bba2f" translate="yes" xml:space="preserve">
          <source>Returns the current request path with its default query parameters</source>
          <target state="translated">기본 쿼리 매개 변수와 함께 현재 요청 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="14cf551a1cf93c660073f49a15e6195b8743e811" translate="yes" xml:space="preserve">
          <source>Returns the current request path with its default query parameters:</source>
          <target state="translated">기본 쿼리 매개 변수와 함께 현재 요청 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b1788b0630ef9a2a5b8880213d51657b4a43cbe" translate="yes" xml:space="preserve">
          <source>Returns the current request path, with and without query params</source>
          <target state="translated">쿼리 매개 변수가 있거나없는 현재 요청 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb1d00072a164a62cd78f584a60d2aaed75756c4" translate="yes" xml:space="preserve">
          <source>Returns the current request path, with and without query params.</source>
          <target state="translated">쿼리 매개 변수가 있거나없는 현재 요청 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e953a1bee5326fe36593a6658fec08dbfcd39428" translate="yes" xml:space="preserve">
          <source>Returns the current request url with its default query parameters</source>
          <target state="translated">기본 쿼리 매개 변수와 함께 현재 요청 URL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e233d9d0c1d7d109518502eb5b8907d270998949" translate="yes" xml:space="preserve">
          <source>Returns the current request url with its default query parameters:</source>
          <target state="translated">기본 쿼리 매개 변수와 함께 현재 요청 URL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6d6fd594db5f4167f14ff769442c2780e64d3b7d" translate="yes" xml:space="preserve">
          <source>Returns the dize of the delta</source>
          <target state="translated">델타의 디제를 반환합니다</target>
        </trans-unit>
        <trans-unit id="4b9a2ef990990a8ff987cebe0412ba3bbf8611cb" translate="yes" xml:space="preserve">
          <source>Returns the dize of the delta.</source>
          <target state="translated">델타의 디제를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="00c0a7df8665d267c2e56560b9c045ed7db76ce0" translate="yes" xml:space="preserve">
          <source>Returns the dumpers for a given type</source>
          <target state="translated">주어진 유형에 대한 덤퍼를 반환</target>
        </trans-unit>
        <trans-unit id="7a2497832f7bcfb6e88665c8585668963d3cca68" translate="yes" xml:space="preserve">
          <source>Returns the dumpers for a given type.</source>
          <target state="translated">주어진 유형에 대한 덤퍼를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0f6a3f2613826d187578d61d7d31f66c6debdd4b" translate="yes" xml:space="preserve">
          <source>Returns the element matching the pid, topic, and key</source>
          <target state="translated">pid, topic 및 key와 일치하는 요소를 반환</target>
        </trans-unit>
        <trans-unit id="d6d35f53849214065ffcc43d7b4ad3a77780754c" translate="yes" xml:space="preserve">
          <source>Returns the element matching the pid, topic, and key.</source>
          <target state="translated">pid, topic 및 key와 일치하는 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20638dea09033f7657169d64b5e11b955236d84b" translate="yes" xml:space="preserve">
          <source>Returns the endpoint module as an atom, raises if unavailable</source>
          <target state="translated">엔드 포인트 모듈을 원자로 리턴하고 사용할 수없는 경우 증가</target>
        </trans-unit>
        <trans-unit id="8a6c894f1f606064758cb637a8852339bf27d6a1" translate="yes" xml:space="preserve">
          <source>Returns the endpoint module as an atom, raises if unavailable.</source>
          <target state="translated">엔드 포인트 모듈을 원자로 리턴하고 사용할 수없는 경우 증가합니다.</target>
        </trans-unit>
        <trans-unit id="d3d175e7c658b3a85108d5a157be7afc482d046f" translate="yes" xml:space="preserve">
          <source>Returns the flash message from the LiveView flash assign.</source>
          <target state="translated">LiveView 플래시 할당에서 플래시 메시지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ccb28bf8159434f83cef5ac232dce1a89281fb76" translate="yes" xml:space="preserve">
          <source>Returns the format encoder for the given template name.</source>
          <target state="translated">주어진 템플릿 이름에 대한 형식 인코더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="837b032a9b0f193f6a94af6e2384173e2adf060b" translate="yes" xml:space="preserve">
          <source>Returns the full alias with the current scope's aliased prefix.</source>
          <target state="translated">현재 범위의 별칭 접두사가있는 전체 별칭을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="81c4f57e8340c7fa3703a917eb311053a878a6a7" translate="yes" xml:space="preserve">
          <source>Returns the full request URL</source>
          <target state="translated">전체 요청 URL을 반환</target>
        </trans-unit>
        <trans-unit id="c451ed794ab55f42ac05ffbd3b4d13be2a8b1b6f" translate="yes" xml:space="preserve">
          <source>Returns the full request URL.</source>
          <target state="translated">전체 요청 URL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="38b6caa7cb70ca9897524769b1a2c4b0e24ff3f9" translate="yes" xml:space="preserve">
          <source>Returns the hash of all template paths in the given root.</source>
          <target state="translated">주어진 루트에있는 모든 템플릿 경로의 해시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="88b330bdec48902ab099588cb5b50bcabd64a93a" translate="yes" xml:space="preserve">
          <source>Returns the host from the :url configuration.</source>
          <target state="translated">: url 구성에서 호스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aff6a0e57acf43706a9d9848f3c066783ad36d35" translate="yes" xml:space="preserve">
          <source>Returns the list of operations stored in &lt;code&gt;multi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;multi&lt;/code&gt; 저장된 작업 목록을 반환</target>
        </trans-unit>
        <trans-unit id="ed2cbad32f95bd58d92985dd1bd9480b2d4a8a2a" translate="yes" xml:space="preserve">
          <source>Returns the list of operations stored in &lt;code&gt;multi&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;multi&lt;/code&gt; 에 저장된 작업 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="43b4c72a8491387d3f6f165eae448fb6c1e9d187" translate="yes" xml:space="preserve">
          <source>Returns the loaders for a given type</source>
          <target state="translated">주어진 타입의 로더를 반환</target>
        </trans-unit>
        <trans-unit id="58b222e3169d25c17d28138f04586ea1e6113f45" translate="yes" xml:space="preserve">
          <source>Returns the loaders for a given type.</source>
          <target state="translated">주어진 타입의 로더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="69f9f2cc454c894732aa61f3bc6e80aba04c0abc" translate="yes" xml:space="preserve">
          <source>Returns the location header from the given redirect response</source>
          <target state="translated">지정된 리디렉션 응답에서 위치 헤더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5739e4997bdc769bf5474bcfa9fac4151a32d297" translate="yes" xml:space="preserve">
          <source>Returns the location header from the given redirect response.</source>
          <target state="translated">지정된 리디렉션 응답에서 위치 헤더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="255b0457bc62c3ad5294451222b8bb7132a6ecf0" translate="yes" xml:space="preserve">
          <source>Returns the map of presence metadata for a socket/topic-key pair.</source>
          <target state="translated">소켓 / 주제 키 쌍에 대한 현재 상태 메타 데이터 맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61035299400c77ab7cced0b720a5327ee1f5cf7b" translate="yes" xml:space="preserve">
          <source>Returns the matched params from the URL the connection was redirected to</source>
          <target state="translated">연결이 리디렉션 된 URL에서 일치하는 매개 변수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a4a23e2fa600e45e3f5e331295efac3d128be479" translate="yes" xml:space="preserve">
          <source>Returns the matched params from the URL the connection was redirected to.</source>
          <target state="translated">연결이 재 지정된 URL에서 일치하는 매개 변수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ec4c69891742d5ad97122bdff1bd1850063ef0e5" translate="yes" xml:space="preserve">
          <source>Returns the message to be relayed when a channel exits</source>
          <target state="translated">채널이 종료 될 때 릴레이 될 메시지를 반환합니다</target>
        </trans-unit>
        <trans-unit id="33dcb027fa7f70ff0c7953fc2edf16263bfaf384" translate="yes" xml:space="preserve">
          <source>Returns the message to be relayed when a channel exits.</source>
          <target state="translated">채널이 종료 될 때 릴레이 될 메시지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7ca99c2f6cdef86996afbbf03371424a196d25df" translate="yes" xml:space="preserve">
          <source>Returns the most recent title that was updated via a &lt;code&gt;page_title&lt;/code&gt; assign.</source>
          <target state="translated">&lt;code&gt;page_title&lt;/code&gt; 할당을 통해 업데이트 된 가장 최근 제목을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="100586180f86523df1ebf8816d1d989915d449d1" translate="yes" xml:space="preserve">
          <source>Returns the node name as an atom or a binary.</source>
          <target state="translated">노드 이름을 원자 또는 바이너리로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="04e4b1e46b0eedeace7201b249a2a9eb08ab9034" translate="yes" xml:space="preserve">
          <source>Returns the node name of the PubSub server</source>
          <target state="translated">PubSub 서버의 노드 이름을 리턴합니다</target>
        </trans-unit>
        <trans-unit id="bbd108c68de99740a343af53d03365d6c3b662e4" translate="yes" xml:space="preserve">
          <source>Returns the node name of the PubSub server.</source>
          <target state="translated">PubSub 서버의 노드 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4e8885014a9fbe68742a61c9aa89716a5eb862f6" translate="yes" xml:space="preserve">
          <source>Returns the path of the route that the request was matched to</source>
          <target state="translated">요청이 일치 한 경로의 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6517a75556b972b837e10a7630e084f8ea18d310" translate="yes" xml:space="preserve">
          <source>Returns the path of the route that the request was matched to.</source>
          <target state="translated">요청이 일치 한 경로의 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b1e3d347797bc224b8f11a9685ae302d1194c3de" translate="yes" xml:space="preserve">
          <source>Returns the request format, such as &quot;json&quot;, &quot;html&quot;.</source>
          <target state="translated">&quot;json&quot;, &quot;html&quot;과 같은 요청 형식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="369952375711619fc078e933db93192a84285d6f" translate="yes" xml:space="preserve">
          <source>Returns the request format, such as &amp;ldquo;json&amp;rdquo;, &amp;ldquo;html&amp;rdquo;</source>
          <target state="translated">&quot;json&quot;, &quot;html&quot;과 같은 요청 형식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8c268e9dd52afbcd855aab53e68600ab8d740cf7" translate="yes" xml:space="preserve">
          <source>Returns the request format, such as &amp;ldquo;json&amp;rdquo;, &amp;ldquo;html&amp;rdquo;.</source>
          <target state="translated">&quot;json&quot;, &quot;html&quot;과 같은 요청 형식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a78dcb141688746066b0448f4eb3a835c720282" translate="yes" xml:space="preserve">
          <source>Returns the request peer data if one is present</source>
          <target state="translated">요청 피어 데이터가있는 경우이를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4b2e0a57ea27bb05609b77134ecd13b28493c675" translate="yes" xml:space="preserve">
          <source>Returns the request peer data if one is present.</source>
          <target state="translated">요청 피어 데이터가있는 경우이를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="be75d781c08d38d7140ec0f42705e1395f1faaf3" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable</source>
          <target state="translated">라우터 모듈을 원자로 반환하고 사용할 수없는 경우 증가</target>
        </trans-unit>
        <trans-unit id="46517d877826cd12571bc0d5ea5767ab4ff4514f" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable.</source>
          <target state="translated">라우터 모듈을 원자로 리턴하고, 사용 불가능한 경우 증가합니다.</target>
        </trans-unit>
        <trans-unit id="0990b614db2cb2aaa4b5be0e932ba3182ba36e5a" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list</source>
          <target state="translated">스키마 기본 키를 키워드 목록으로 반환</target>
        </trans-unit>
        <trans-unit id="a4800203999840972a3c41ffa66949d7538ddf07" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list.</source>
          <target state="translated">스키마 기본 키를 키워드 목록으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="18aa5a5a64f9ee6ab880dac05db023b32dc041ef" translate="yes" xml:space="preserve">
          <source>Returns the script name from the :url configuration.</source>
          <target state="translated">: url 구성에서 스크립트 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="31a12f4e96c0fc87ccd1e9bcf6c59f9306838d68" translate="yes" xml:space="preserve">
          <source>Returns the sent response</source>
          <target state="translated">보낸 응답을 반환</target>
        </trans-unit>
        <trans-unit id="25c8c207c3c88d97d73be4176fcfcb28de0cd546" translate="yes" xml:space="preserve">
          <source>Returns the sent response.</source>
          <target state="translated">보낸 응답을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d9fd20df924109bf62002e612bb2718fda58fd6c" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom</source>
          <target state="translated">정수 또는 알려진 아톰이 주어진 상태 코드를 반환합니다</target>
        </trans-unit>
        <trans-unit id="8112280a1d9a9eed9986a98a56185aaf0d3ad1b4" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom.</source>
          <target state="translated">정수 또는 알려진 아톰이 주어진 상태 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e0c4c0d3371a5faffa7436a461ad69dac4cf038" translate="yes" xml:space="preserve">
          <source>Returns the status of a storage given by options.</source>
          <target state="translated">옵션으로 주어진 스토리지의 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="036227c51832f19c8fe4491fec71303a7ca2fc92" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered)</source>
          <target state="translated">뷰에서 렌더링 된 템플릿 이름을 문자열로 반환합니다 (또는 템플릿이 렌더링되지 않은 경우 nil).</target>
        </trans-unit>
        <trans-unit id="b74a2ca0130c440e979a1e8c605e1c38a783872e" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered).</source>
          <target state="translated">뷰에서 렌더링 된 템플릿 이름을 문자열로 반환합니다 (템플릿이 렌더링되지 않은 경우 nil).</target>
        </trans-unit>
        <trans-unit id="5755763b4e70c82743c4957d0040a3afb209c5bd" translate="yes" xml:space="preserve">
          <source>Returns the transport pid of the socket.</source>
          <target state="translated">소켓의 전송 pid를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="783e99aa82ad7d796ea327d6aac11565abe4f437" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the ParameterizedType.</source>
          <target state="translated">ParameterizedType의 기본 스키마 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="507067fd0d89bd4f0ad50d809841a87c15cc8cb3" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type</source>
          <target state="translated">사용자 정의 유형의 기본 스키마 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="271a09cc9da9ced3d323139cc5b7522c3d1476c6" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type.</source>
          <target state="translated">사용자 정의 유형의 기본 스키마 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d0168d121e1fa46afffbf8dc03d00e9999b5676e" translate="yes" xml:space="preserve">
          <source>Returns the updated connection.</source>
          <target state="translated">업데이트 된 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8d989e0e48b23876aff9fc19ce0c7a1355322d7f" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field</source>
          <target state="translated">주어진 필드의 값을 반환</target>
        </trans-unit>
        <trans-unit id="eb635c80392dfe4a55166fd9b780bfd2fb360b6c" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field.</source>
          <target state="translated">주어진 필드의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bdede86e29744413b4c8bd8be88acede4fe0e4e1" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 지정된 요청 헤더의 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6821bba3917525e700d89961cc4335df9746ebad" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 로 지정된 요청 헤더의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6cde76fd3b77cd36620cfa2e2bcf5c4ab0a5aa45" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 지정된 응답 헤더의 값을 반환</target>
        </trans-unit>
        <trans-unit id="5ba2a203bbd819ca4ea6eea9c63bac5cb036c81a" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 로 지정된 응답 헤더의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3097f8bc663465d9a4efd1ef7a4f4b0433fc4f6a" translate="yes" xml:space="preserve">
          <source>Returns the whole session.</source>
          <target state="translated">전체 세션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d131adafde27edb203f3f487c15d74433a8bf3f" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction</source>
          <target state="translated">현재 프로세스가 트랜잭션 내에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="244cb8f64bc0228027dbfabcd56c8bf9cbaa85cc" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction.</source>
          <target state="translated">현재 프로세스가 트랜잭션 내에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0087a454276ead29151f3ca1b8a8149fe290a150" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction</source>
          <target state="translated">주어진 프로세스가 트랜잭션 내에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fa1b59614734c4fa1e0c7ba4f241012ebfe1a1ae" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction.</source>
          <target state="translated">주어진 프로세스가 트랜잭션 내부에있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b0c8ec1339bcd282812faf5c35e6feca89484534" translate="yes" xml:space="preserve">
          <source>Returns true if the socket is connected and the tracked static assets have changed.</source>
          <target state="translated">소켓이 연결되고 추적 된 정적 자산이 변경된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c2672269a7d2c204c8741218a812007bb94194c" translate="yes" xml:space="preserve">
          <source>Returns true if the socket is connected.</source>
          <target state="translated">소켓이 연결되어 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d326b663ee7befbea5ebdd7ab51a4926be86d1ea" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition</source>
          <target state="translated">파티션 내 현재 행 다음에 오프셋 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3bdf45df286504f65bab6bf86f355e22fff5faf" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition.</source>
          <target state="translated">파티션 내 현재 행 다음에 오프셋 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0fc4d407cffc48089a65568ac93f1138135c7d3c" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition</source>
          <target state="translated">파티션 내 현재 행 앞의 오프셋 행인 값을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="3d60bce40451a002cfea905ef0ccae99b43a3285" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition.</source>
          <target state="translated">파티션 내 현재 행 앞의 오프셋 행인 값을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="11d374928879f9ad2ae1990875af52884d99655e" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame</source>
          <target state="translated">윈도우 프레임의 첫 번째 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44abe5ff94ea4bbf4d6b793aca8de503901d2b46" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame.</source>
          <target state="translated">윈도우 프레임의 첫 번째 행인 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9e7492912bc687a0a0b1eb9832642cf502b4b219" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame</source>
          <target state="translated">윈도우 프레임의 마지막 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99307517be28f40f09f2b0911dee62531f2ecbae" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame.</source>
          <target state="translated">윈도우 프레임의 마지막 행인 행에서 평가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03d0b7038b7bcc307a1128ac325767a926e11cd2" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); &lt;code&gt;nil&lt;/code&gt; if no such row.</source>
          <target state="translated">창 프레임의 n 번째 행인 행에서 평가 된 값을 반환합니다 (1부터 계산). 그러한 행이 없으면 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="376350cf9e0c496114f28913dd5703e383ff95e9" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row</source>
          <target state="translated">윈도우 프레임의 n 번째 행인 1에서 계산 된 값을 반환합니다. 그러한 행이없는 경우는 null</target>
        </trans-unit>
        <trans-unit id="193d6465e6be547ab824ad9adc251443ea776fb4" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row.</source>
          <target state="translated">윈도우 프레임의 n 번째 행인 1에서 계산 된 값을 반환합니다. 그러한 행이없는 경우는 null</target>
        </trans-unit>
        <trans-unit id="4185cf841db525cb673b734d9d83b3f8d30499f6" translate="yes" xml:space="preserve">
          <source>Returns value from the &lt;code&gt;json_field&lt;/code&gt; pointed to by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 가리키는 &lt;code&gt;json_field&lt;/code&gt; 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="7e1b1179bc35ff04b58b12b35f9adb55ffe0b517" translate="yes" xml:space="preserve">
          <source>Reverses the ordering of the query.</source>
          <target state="translated">쿼리 순서를 반대로합니다.</target>
        </trans-unit>
        <trans-unit id="274cbf2f5a0cc2071c2807d8040166a6a044e82c" translate="yes" xml:space="preserve">
          <source>Right now, we have two transformations in our pipeline. In the first call, we invoke &lt;a href=&quot;../ecto/ecto.changeset#cast/3&quot;&gt;&lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt;&lt;/a&gt;, passing in our external parameters and marking which fields are required for validation.</source>
          <target state="translated">지금은 파이프 라인에 두 가지 변환이 있습니다. 첫 번째 호출에서 &lt;a href=&quot;../ecto/ecto.changeset#cast/3&quot;&gt; &lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt; 를&lt;/a&gt; 호출하여 외부 매개 변수를 전달하고 유효성 검사에 필요한 필드를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="6a4a0b5e1505a3cc5816c81e08650eced6f14871" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction</source>
          <target state="translated">현재 거래를 롤백</target>
        </trans-unit>
        <trans-unit id="08baa16b0080930585636decba273851109f2fef" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction.</source>
          <target state="translated">현재 트랜잭션을 롤백합니다.</target>
        </trans-unit>
        <trans-unit id="e617ddf68055b6bc3292185f04d048c328ed5104" translate="yes" xml:space="preserve">
          <source>Router plugs</source>
          <target state="translated">라우터 플러그</target>
        </trans-unit>
        <trans-unit id="cf67fbcf4a2aa171d81fa97e3bbadea7199593aa" translate="yes" xml:space="preserve">
          <source>Routers are the main hubs of Phoenix applications. They match HTTP requests to controller actions, wire up real-time channel handlers, and define a series of pipeline transformations scoped to a set of routes.</source>
          <target state="translated">라우터는 Phoenix 애플리케이션의 주요 허브입니다. HTTP 요청을 컨트롤러 작업에 일치시키고, 실시간 채널 핸들러를 연결하고, 일련의 경로로 범위가 지정된 일련의 파이프 라인 변환을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="5da2bca786eea68965488901fbfa83e2aa4a40c6" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can&amp;rsquo;t be followed by other segments:</source>
          <target state="translated">경로는 경로의 나머지 부분과 일치하고 함수 본문에서 매개 변수로 사용할 수있는 글 로빙을 허용합니다. 또한 글로브 뒤에 다른 세그먼트를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="02961ca7a4bc6b74268220225de904dfb4aefcab" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can't be followed by other segments:</source>
          <target state="translated">경로는 경로의 나머지 부분과 일치하는 글 로빙을 허용하며 함수 본문에서 매개 변수로 사용할 수 있습니다. 또한 glob 뒤에는 다른 세그먼트가 올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a628d96ac5d8409e24858c3a900fdee051d07a9f" translate="yes" xml:space="preserve">
          <source>Routes are defined inside scopes and scopes may pipe through multiple pipelines. Once a route matches, Phoenix invokes all plugs defined in all pipelines associated to that route. For example, accessing &quot;/&quot; will pipe through the &lt;code&gt;:browser&lt;/code&gt; pipeline, consequently invoking all of its plugs.</source>
          <target state="translated">경로는 범위 내에서 정의되며 범위는 여러 파이프 라인을 통해 파이프 될 수 있습니다. 경로가 일치하면 Phoenix는 해당 경로와 관련된 모든 파이프 라인에 정의 된 모든 플러그를 호출합니다. 예를 들어 &quot;/&quot;에 액세스하면 &lt;code&gt;:browser&lt;/code&gt; 파이프 라인을 통해 파이프되어 결과적으로 모든 플러그가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="579a42f5b5e0e0564cede3abd969bb3a7c3f2696" translate="yes" xml:space="preserve">
          <source>Routes are matched from top to bottom. The second route here:</source>
          <target state="translated">경로는 위에서 아래로 일치합니다. 두 번째 경로 :</target>
        </trans-unit>
        <trans-unit id="7c1c14571bc7de6b3055bd4f7d4f0dabba7f32cf" translate="yes" xml:space="preserve">
          <source>Routes can also match glob-like patterns, routing any path with a common base to the same controller. For example:</source>
          <target state="translated">라우트는 또한 공통베이스가있는 모든 경로를 동일한 컨트롤러로 라우트하는 글로브 모양의 패턴과 일치 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fa66d0ab61406d168f9a3b400e02c6c0a95ab178" translate="yes" xml:space="preserve">
          <source>Routes can use glob-like patterns to match trailing segments.</source>
          <target state="translated">경로는 glob과 유사한 패턴을 사용하여 후행 세그먼트를 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fec243ace8656b1c705371f569ea948d4d0ea95" translate="yes" xml:space="preserve">
          <source>Routes compilation</source>
          <target state="translated">경로 컴파일</target>
        </trans-unit>
        <trans-unit id="6e5549afb365bc0fa97665b0504dd6e6d2976e12" translate="yes" xml:space="preserve">
          <source>Routes options</source>
          <target state="translated">경로 옵션</target>
        </trans-unit>
        <trans-unit id="bbd62cdbcf46b02f52ad7b060f838dc9cd60b3a9" translate="yes" xml:space="preserve">
          <source>Routes which begin with 'resources' expand to 8 clauses of the match function.</source>
          <target state="translated">'resources'로 시작하는 경로는 match 함수의 8 개 절로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="8e8835b19e2eaad7b820c0594f5e37fcc2ce5f59" translate="yes" xml:space="preserve">
          <source>Routes which begin with an HTTP verb name expand to a single clause of the match function.</source>
          <target state="translated">HTTP 동사 이름으로 시작하는 경로는 일치 함수의 단일 절로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="84e224649c063e2dd1f82a224f93c548fef47dbc" translate="yes" xml:space="preserve">
          <source>Routing is a big topic, and we have covered a lot of ground here. The important points to take away from this guide are:</source>
          <target state="translated">라우팅은 큰 주제이며 여기에서 많은 부분을 다루었습니다. 이 가이드에서 빼야 할 중요한 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="130c795aadf43a7db5ad7e08b787f7cc9a8eb3e4" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; once again at the root of your project. You should see something like the following:</source>
          <target state="translated">프로젝트의 루트에서 &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; &lt;/a&gt; 를 다시 한 번 실행 합니다. 다음과 같은 내용이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2f00fc4cad71fdaaf68036430c78b988bd7086be" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; again, in addition to the previous set of routes we get the following:</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; 를&lt;/a&gt; 다시 실행 하면 이전 경로 세트 외에도 다음과 같은 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="26825f3f191e58c590a42f6acfadd3a65af1c55f" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; now shows that we have all the routes except the DELETE request to the delete action.</source>
          <target state="translated">이제 &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; 를&lt;/a&gt; 실행 하면 삭제 작업에 대한 DELETE 요청을 제외한 모든 경로가 있음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e301fd083c95f3de583f1471b3a6f06e21387a1" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; shows that we now only have the routes to the index and show actions defined.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; 를&lt;/a&gt; 실행 하면 이제 인덱스에 대한 경로 만 있고 정의 된 작업이 표시됨을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ed2d22d4523e3fc5d82bad24c4edc0794515584" translate="yes" xml:space="preserve">
          <source>Running the multi in a transaction will execute no previous steps and returns the value of the first error added.</source>
          <target state="translated">트랜잭션에서 멀티를 실행하면 이전 단계가 실행되지 않고 추가 된 첫 번째 오류 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f6ca3839dbd23c33b01182553ca5c3c46fb058fd" translate="yes" xml:space="preserve">
          <source>Runs the code reloader if enabled.</source>
          <target state="translated">활성화 된 경우 코드 리 로더를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="96ea572c5a69806aa87d98f4853db495ff69fe2c" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction</source>
          <target state="translated">트랜잭션 내에서 주어진 함수를 실행</target>
        </trans-unit>
        <trans-unit id="1b43f3d8a5a546054aa677d2470158616bf0b261" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction.</source>
          <target state="translated">트랜잭션 내에서 주어진 함수를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3172c85a51f1a6064e628809c6d4b4968b27fe04" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction</source>
          <target state="translated">트랜잭션 내 에서 주어진 함수 또는 &lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d03a7048df33145a714a4402106ee56bef98057a" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction.</source>
          <target state="translated">트랜잭션 내 에서 주어진 함수 또는 &lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">런타임 구성</target>
        </trans-unit>
        <trans-unit id="eb6d964d366ee36fc795e3db3126c304138f3875" translate="yes" xml:space="preserve">
          <source>Runtime configuration, instead, is accessed during or after your application is started and can be read through the &lt;a href=&quot;#c:config/2&quot;&gt;&lt;code&gt;config/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">대신 런타임 구성은 애플리케이션 시작 중 또는 후에 액세스되며 &lt;a href=&quot;#c:config/2&quot;&gt; &lt;code&gt;config/2&lt;/code&gt; &lt;/a&gt; 기능을 통해 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ccf39a54e7e6847cbc58f66ec8da72b3f8c6f27" translate="yes" xml:space="preserve">
          <source>Runtime-time usage</source>
          <target state="translated">런타임 사용</target>
        </trans-unit>
        <trans-unit id="78fe2b7f7666674900a3c15471ccc99184e3f647" translate="yes" xml:space="preserve">
          <source>SQL adapters, such as Postgres and MySQL, can only enumerate a stream inside a transaction.</source>
          <target state="translated">Postgres 및 MySQL과 같은 SQL 어댑터는 트랜잭션 내부의 스트림 만 열거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d485b7db48da4185e9bf643f37a6c7624112bb34" translate="yes" xml:space="preserve">
          <source>SVG support</source>
          <target state="translated">SVG 지원</target>
        </trans-unit>
        <trans-unit id="31be5af5971e510c34651813107373056d053546" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c0f4a3368e53f6e8567bf92693a54053f93f17a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="26f5ed3ec52e2d5cfcd2fd1792eff31c6659c93e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="04f6a54ce5f51c23469a584d22c02e19473ae3e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 브로드 캐스트가 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db5de4972e7e363b7c52f64b2eb5d90ef52d3ac5" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c35ae21530f6b981d3fffc6ca1e8df7ca170d9a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="226733d0f50b1f3b16fb5e58c11ac4844d58a7ac" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생</target>
        </trans-unit>
        <trans-unit id="968367c33e0b0cf121b143beda5c49d1c0848a24" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="632a0c7bbe3b6685b1ddbd04be7b8356ba08e7aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생</target>
        </trans-unit>
        <trans-unit id="d2d1c2ac23c385ba9429c1adba38eeb48052559d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="77f5ce57b6f04302cee6f42deda43b98256efd0e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="293c4f91ba874963771add9b057936efc16cc7a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 구조체를 반환하거나 변경 세트가 유효하지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c059b0c75bda32d71683e3cc464b2c56b540a1d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 잘못된 인수에서 &lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="559604890cc16a2cec1cf5330d10ff3357d7d356" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments.</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 잘못된 인수에서 &lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="8fdfe0c9c6c86949eead3814403a059c18d01794" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_change/2&quot;&gt;&lt;code&gt;fetch_change/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_change/2&quot;&gt; &lt;code&gt;fetch_change/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 값을 반환하거나 주어진 키를 찾을 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0e00e34052e2f613e9704fe4b4e5b654fbb8ff92" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_field/2&quot;&gt;&lt;code&gt;fetch_field/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_field/2&quot;&gt; &lt;code&gt;fetch_field/2&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 값을 반환하거나 주어진 키를 찾을 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="938bc5d04187bec60adad9f96b00fb0934dd29e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. This is often used with &lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt;&lt;/a&gt;, which must be imported into your views. See the &quot;Examples&quot; section below.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 올리는 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 이것은 종종 사용됩니다 &lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt; &lt;/a&gt; 귀하의 의견으로 가져와야합니다. 아래의 &quot;예제&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="43873fb5254efdd9068216bf949a05b8c683f8d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. Useful for dynamically rendering templates in the layout that may or may not be implemented by the &lt;code&gt;@view_module&lt;/code&gt; view.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 높이기 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . &lt;code&gt;@view_module&lt;/code&gt; 뷰에 의해 구현되거나 구현되지 않을 수있는 레이아웃에서 템플릿을 동적으로 렌더링하는 데 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="06b4a10e004cd74aa0f94998421cfc6dfe686a41" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 소켓을 반환하거나 오류를 발생시킵니다</target>
        </trans-unit>
        <trans-unit id="32e1585c10935eaf9f25e043fb1288b908327ad6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 소켓을 반환하거나 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="8832210111dce6e6f23cc1837828c66a6682403b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;inputs_for(form, field, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputs_for(form, field, [])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="6c2c9ca478645cb9af567a27b68f7e9eacddf986" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;update/3&lt;/code&gt;, but with an arbitrary process.</source>
          <target state="translated">&lt;code&gt;update/3&lt;/code&gt; 와 동일 하지만 임의의 프로세스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cadd66a2347f5e19072c0277b8c7358f4c96a166" translate="yes" xml:space="preserve">
          <source>Same with &lt;code&gt;track/3&lt;/code&gt;, except track any process by &lt;code&gt;topic&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; 및 &lt;code&gt;key&lt;/code&gt; 별로 모든 프로세스를 추적한다는 점을 제외하면 &lt;code&gt;track/3&lt;/code&gt; 과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="b5230ecdf4e78f0dd162281a0a78c6cdc853cbe8" translate="yes" xml:space="preserve">
          <source>Schema</source>
          <target state="translated">Schema</target>
        </trans-unit>
        <trans-unit id="301b2b96f90182287e27e3183bc54358047e0434" translate="yes" xml:space="preserve">
          <source>Schema attributes</source>
          <target state="translated">스키마 속성</target>
        </trans-unit>
        <trans-unit id="10521488170ddab303e05a3772fb749bf1fe39ec" translate="yes" xml:space="preserve">
          <source>Schemaless changesets</source>
          <target state="translated">스키마없는 변경 세트</target>
        </trans-unit>
        <trans-unit id="c37847eb673c5d234b9087b74aff7c743ce8ddd6" translate="yes" xml:space="preserve">
          <source>Schemas allow developers to define the shape of their data. Let's see an example:</source>
          <target state="translated">스키마를 통해 개발자는 데이터의 형태를 정의 할 수 있습니다. 예를 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="36e85587fa0a0a02a5d43c4f67e3b1d5f4e90b05" translate="yes" xml:space="preserve">
          <source>Schemas allows developers to define the shape of their data. Let&amp;rsquo;s see an example:</source>
          <target state="translated">스키마를 통해 개발자는 데이터의 형태를 정의 할 수 있습니다. 예를 보자.</target>
        </trans-unit>
        <trans-unit id="07e26be9db0f26172bb088855ef3ac5980016828" translate="yes" xml:space="preserve">
          <source>Scoped Routes</source>
          <target state="translated">범위가 지정된 경로</target>
        </trans-unit>
        <trans-unit id="466834fbbd30000fe5c774b9d9cd839774b60965" translate="yes" xml:space="preserve">
          <source>Scopes allow us to scope on any path or even on the helper name:</source>
          <target state="translated">범위를 사용하면 경로 또는 도우미 이름을 범위로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e61bf9a20029e1be9ec2969434d5904c25253a4" translate="yes" xml:space="preserve">
          <source>Scopes and Resources</source>
          <target state="translated">범위와 자원</target>
        </trans-unit>
        <trans-unit id="9a46c6901db820a406d4214e513af4b23e24d4c5" translate="yes" xml:space="preserve">
          <source>Scopes are a way to group routes under a common path prefix and scoped set of plugs. We might want to do this for admin functionality, APIs, and especially for versioned APIs. Let's say we have user generated reviews on a site, and that those reviews first need to be approved by an admin. The semantics of these resources are quite different, and they might not share the same controller. Scopes enable us to segregate these routes.</source>
          <target state="translated">범위는 공통 경로 접두사 및 범위가 지정된 플러그 세트로 경로를 그룹화하는 방법입니다. 관리자 기능, API, 특히 버전이 지정된 API에 대해이 작업을 수행 할 수 있습니다. 사이트에서 사용자가 작성한 리뷰가 있고 해당 리뷰는 먼저 관리자의 승인을 받아야한다고 가정 해 보겠습니다. 이러한 리소스의 의미는 매우 다르며 동일한 컨트롤러를 공유하지 않을 수 있습니다. 범위를 통해 이러한 경로를 분리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="b098ea702b81c313363d92a398d9e980eba7892e" translate="yes" xml:space="preserve">
          <source>Scopes can also be arbitrarily nested, but you should do it carefully as nesting can sometimes make our code confusing and less clear. With that said, suppose that we had a versioned API with resources defined for images, reviews and users. Then technically we could setup routes for the versioned API like this:</source>
          <target state="translated">범위는 임의로 중첩 될 수도 있지만 중첩은 때때로 코드를 혼란스럽고 덜 명확하게 만들 수 있으므로 신중하게 수행해야합니다. 그러나 이미지, 리뷰 및 사용자에 대해 정의 된 리소스가 포함 된 버전이 지정된 API가 있다고 가정 해 보겠습니다. 그런 다음 기술적으로 다음과 같이 버전이 지정된 API에 대한 경로를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c60ddff878bc99a3b1fe5b72bc3ec3a2e38ae776" translate="yes" xml:space="preserve">
          <source>Scopes have their own section in this guide, so we won't spend time on the &lt;code&gt;scope &quot;/&quot;, HelloWeb do&lt;/code&gt; block here. The &lt;code&gt;pipe_through :browser&lt;/code&gt; line will get a full treatment in the Pipeline section of this guide. For now, you only need to know that pipelines allow a set of plugs to be applied to different sets of routes.</source>
          <target state="translated">범위에는이 가이드에서 자체 섹션이 있으므로 &lt;code&gt;scope &quot;/&quot;, HelloWeb do&lt;/code&gt; 시간을 소비하지 않을 것입니다. HelloWeb은 여기에서 차단합니다. &lt;code&gt;pipe_through :browser&lt;/code&gt; 라인은이 가이드의 파이프 라인 섹션에서 전체 치료를 받게됩니다. 지금은 파이프 라인이 여러 경로 세트에 플러그 세트를 적용 할 수 있다는 사실 만 알면됩니다.</target>
        </trans-unit>
        <trans-unit id="8bed05cb9f24b2d7a8076ffec5f8730e920c018c" translate="yes" xml:space="preserve">
          <source>Screencasts/Courses</source>
          <target state="translated">Screencasts/Courses</target>
        </trans-unit>
        <trans-unit id="6a98f22dc569c4feed720b2ce5b3e5a64ff2b3dc" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request</source>
          <target state="translated">요청에서 매개 변수를 제거합니다</target>
        </trans-unit>
        <trans-unit id="27f0d186b8364ecab92240cc4869c5709c41e5a7" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request.</source>
          <target state="translated">요청에서 매개 변수를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="9468cdfe43170f8e1b7c161207fcd0d7f167d72f" translate="yes" xml:space="preserve">
          <source>Search functions: &lt;a href=&quot;#like/2&quot;&gt;&lt;code&gt;like/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ilike/2&quot;&gt;&lt;code&gt;ilike/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">검색 기능 : &lt;a href=&quot;#like/2&quot;&gt; &lt;code&gt;like/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#ilike/2&quot;&gt; &lt;code&gt;ilike/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="029b41059043179b345161e80cbafb609edaf362" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">에 대한 검색 &lt;code&gt;search&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8eb5e27c9b5ccf9b6aff18d10a22c385ce8d1536" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion</source>
          <target state="translated">에 대한 검색 &lt;code&gt;search&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt; 사례를 구분 방식으로</target>
        </trans-unit>
        <trans-unit id="dd7fbd2e5059a6a1e0fcfe24cbc5806164e322c8" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion.</source>
          <target state="translated">에 대한 검색 &lt;code&gt;search&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt; 사례를 구분 패션이다.</target>
        </trans-unit>
        <trans-unit id="d347710f20087bdf2cb082efeefb0ba70285ed03" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 에서 검색을 &lt;code&gt;search&lt;/code&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="5c834e995937b264bb5da33fb189e868a41d4685" translate="yes" xml:space="preserve">
          <source>Security considerations of the LiveView model</source>
          <target state="translated">LiveView 모델의 보안 고려 사항</target>
        </trans-unit>
        <trans-unit id="8262409c05b2324973c717b79900c50cf6161e00" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#apply_action/2&quot;&gt;&lt;code&gt;apply_action/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#apply_action/2&quot;&gt; &lt;code&gt;apply_action/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ea268d48151dccb1369aa816b76cee1cc4706d43" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#assign/3&quot;&gt;&lt;code&gt;assign/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assign/3&quot;&gt; &lt;code&gt;assign/3&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81561006a302e8eb9f2f8d7aba1fe152d658b05d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#bypass_through/1&quot;&gt;&lt;code&gt;bypass_through/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#bypass_through/1&quot;&gt; &lt;code&gt;bypass_through/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="429540a302a78a8a1ebb45909c07be1635915920" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:embed_as/1&quot;&gt;&lt;code&gt;embed_as/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c:embed_as/1&quot;&gt; &lt;code&gt;embed_as/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f85ce73a1d6d3c6c1224f375b5b84f470970aa61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:execute/5&quot;&gt;&lt;code&gt;execute/5&lt;/code&gt;&lt;/a&gt; for a description of arguments.</source>
          <target state="translated">인수에 대한 설명은 &lt;a href=&quot;#c:execute/5&quot;&gt; &lt;code&gt;execute/5&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d115725c55ec1d85116ad3d8c8b382bc34ea11f3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt;&lt;code&gt;put_dynamic_repo/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt; &lt;code&gt;put_dynamic_repo/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a9163e815f8428555b4d0758f30bebe740c9ac3f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;d prefer to cast and validate external parameters.</source>
          <target state="translated">외부 매개 변수를 캐스트하고 확인하려면 &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70d061cb540d5f0c11648f4d9f67f326ef8f0ba8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you'd prefer to cast and validate external parameters.</source>
          <target state="translated">외부 매개 변수를 캐스트하고 확인하려면 &lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; 를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="160359dfa99216e1c3e6c4a032ce68a16d781dd6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#code/1&quot;&gt;&lt;code&gt;code/1&lt;/code&gt;&lt;/a&gt; for the mapping.</source>
          <target state="translated">매핑에 대해서는 &lt;a href=&quot;#code/1&quot;&gt; &lt;code&gt;code/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54c38114b81a0de364df06f82b76a8b8d2fa3ade" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_path/2&quot;&gt;&lt;code&gt;current_path/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">기본 매개 변수를 대체하려면 &lt;a href=&quot;#current_path/2&quot;&gt; &lt;code&gt;current_path/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab8b7a05d70ebc5262d9bc1c4ae83f023d55df6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_url/2&quot;&gt;&lt;code&gt;current_url/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">기본 매개 변수를 대체하려면 &lt;a href=&quot;#current_url/2&quot;&gt; &lt;code&gt;current_url/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="47e01c9fd9229a5ca109aaef23fb86782167896d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#datetime_add/3&quot;&gt; &lt;code&gt;datetime_add/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="446dc24810f81cacc9b7d86ae05c8303571fb483" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#dispatch/5&quot;&gt;&lt;code&gt;dispatch/5&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#dispatch/5&quot;&gt; &lt;code&gt;dispatch/5&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f60ed55eadd7cfdd19c29fe8c1d112c6c91df3c1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#element/3&quot;&gt;&lt;code&gt;element/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;#element/3&quot;&gt; &lt;code&gt;element/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be219b9ba050253444f2a909dff91ef612e5fa56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">사용 가능한 옵션 은 &lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8899b0d287dfb8d878f8bbed5de0faa5bafbe98" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#get_format/1&quot;&gt;&lt;code&gt;get_format/1&lt;/code&gt;&lt;/a&gt; for retrieval.</source>
          <target state="translated">검색에 대해서는 &lt;a href=&quot;#get_format/1&quot;&gt; &lt;code&gt;get_format/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b19a5cfb329d7eacbbbf417d5b016f9ed41c581c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#inputs_for/4&quot;&gt;&lt;code&gt;inputs_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">사용 가능한 옵션 은 &lt;a href=&quot;#inputs_for/4&quot;&gt; &lt;code&gt;inputs_for/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="406dda280674bab437f44d83fb04430734616082" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#intercept/1&quot;&gt;&lt;code&gt;intercept/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#intercept/1&quot;&gt; &lt;code&gt;intercept/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f110d7ed07bcb97c4369788a800bd8c9a39394a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="89b41f097462aec0e3e090380c34040fd8c70750" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e5dc5d72d9569c3ffaf92d7fdf6652b4f2ac022" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="b4393f19dfec8ca9111f143b22c91f456d9a3c12" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f35e881a1408a4ab81f31c333ac0993cdbc2772" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#load_state/2&quot;&gt;&lt;code&gt;load_state/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#load_state/2&quot;&gt; &lt;code&gt;load_state/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a81c8ed463094cf76527d6eef0e1eee58f85d88a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; for more information on this particular approach.</source>
          <target state="translated">이 특정 방법에 대한 자세한 내용 은 &lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8ef1ba44a049b9e256d983fc00818e665b1193a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#match/5&quot;&gt;&lt;code&gt;match/5&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">옵션 은 &lt;a href=&quot;#match/5&quot;&gt; &lt;code&gt;match/5&lt;/code&gt; &lt;/a&gt; 를 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="2e302be972b9853f322f9a9d0314b6560ffd6f14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#module-intervals&quot;&gt;Intervals&lt;/a&gt; for supported &lt;code&gt;interval&lt;/code&gt; values.</source>
          <target state="translated">지원되는 &lt;code&gt;interval&lt;/code&gt; 값 은 &lt;a href=&quot;#module-intervals&quot;&gt;간격&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3bdddab0ca71be4e0d0e57670315f70dad3bd4f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pipeline/2&quot;&gt;&lt;code&gt;pipeline/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#pipeline/2&quot;&gt; &lt;code&gt;pipeline/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="135d4e719d0766f17d2e08228378ae66ce9a070b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#put_resp_cookie/4&quot;&gt;&lt;code&gt;put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#put_resp_cookie/4&quot;&gt; &lt;code&gt;put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4550d4697758fd204f59f25e0b1a6304c93be4d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9aebbba31dbd9458e7a25bf514e18665f833d3dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="908c56d179564b7cfdcfb8431f6434eefed5749c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#reply/2&quot;&gt;&lt;code&gt;reply/2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">사용법 예는 &lt;a href=&quot;#reply/2&quot;&gt; &lt;code&gt;reply/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="23896889763021c93678399c008455262a580462" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참고 &lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="426590122d0cb0370f085208f290b5ffde8c6940" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fbd426a6c1ba18664a76c286683f974c4a4dabb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#send_resp/1&quot;&gt;&lt;code&gt;send_resp/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#send_resp/1&quot;&gt; &lt;code&gt;send_resp/1&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1864cff94e119d0991c6193935a96f066936243f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="0a44ded8627dc7883d4a01683ab621667c67d00e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bd76cf963006223cb163794cd0b4753397ed92b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="a5b41f1b5289201c8a07f46617a40568bf625ff0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb57f840a4d423d2bed6c24c1306f8ecba33756e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; for example and docs.</source>
          <target state="translated">예를 들어, 문서는 &lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef7809f9d350584ddaf5e5164489a613a551a7af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#with_cte/3&quot;&gt;&lt;code&gt;with_cte/3&lt;/code&gt;&lt;/a&gt; on example of how to build a query with a recursive CTE.</source>
          <target state="translated">재귀 적 CTE를 사용하여 쿼리를 작성하는 방법에 대한 예제는 &lt;a href=&quot;#with_cte/3&quot;&gt; &lt;code&gt;with_cte/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="371fb723d2394a3831042751931faedbd69adef9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">옵션 은 &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c76e6cc809f1d86ecee6d287cd01c8ce78fd4a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">Plug를 통해 파일과 응답을 보내는 데 사용되는 하위 수준 함수에 액세스하려면 &lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4d2f93aa49abab488a0628776098394719d620c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">Plug를 통해 파일과 응답을 보내는 데 사용되는 하위 수준 함수에 액세스하려면 &lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; 를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="5de1813146a450d81745fae85a10011300e06e44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#subquery/2&quot;&gt;&lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;ecto.query#subquery/2&quot;&gt; &lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="45f659716a011dd99b8cca9ae0ba1df93a24b7e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#update/3&quot;&gt;&lt;code&gt;Ecto.Query.update/3&lt;/code&gt;&lt;/a&gt; for update operations that can be performed on fields.</source>
          <target state="translated">필드에서 수행 할 수있는 업데이트 작업에 대해서는 &lt;a href=&quot;ecto.query#update/3&quot;&gt; &lt;code&gt;Ecto.Query.update/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8092c29bbc4fb0de38c16b33a5a35d209a6c347" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt;&lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt; &lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="621718f4f723b87a1b297027378650881a8903bb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt;&lt;code&gt;GenServer.handle_call/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt; &lt;code&gt;GenServer.handle_call/3&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="643a98f8636b0a5bc5ab9349954ff26b77f1ceea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt;&lt;code&gt;GenServer.handle_cast/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt; &lt;code&gt;GenServer.handle_cast/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da23b7c841e113b3ff7ae3e4331a604fb3e4a99a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt;&lt;code&gt;GenServer.handle_info/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt; &lt;code&gt;GenServer.handle_info/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="657c18c9b964d238c5425faead2bdeca7303b75f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt;&lt;code&gt;GenServer.terminate/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt; &lt;code&gt;GenServer.terminate/2&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8355db15ad1ed182ee4f962ee451395b08a29a75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e44626997314e02c476e0acdd836813e795c9c5b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="66d24e14715f9e8d7b617ab80f19f4d81baeefa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels.</source>
          <target state="translated">채널에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="269436d2c9bb8a6deee2dcb74762908f63d5b0c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels. Check each transport module to find the options specific to each transport.</source>
          <target state="translated">채널에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 . 각 전송 모듈을 확인하여 각 전송에 특정한 옵션을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="307f6e4810e6a8623bf10bc3de9042be222e19df" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt;&lt;/a&gt; for more information on the options above.</source>
          <target state="translated">위의 옵션에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f492af01d862f52e16377df7fb35fa52d8b0cd41" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt;&lt;/a&gt; for more information and examples.</source>
          <target state="translated">자세한 내용과 예제는 &lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e1a37829390ab9022a01ffdeab66963922baae0e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.liveview#get_connect_info/1&quot;&gt;&lt;code&gt;Phoenix.LiveView.get_connect_info/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.liveview#get_connect_info/1&quot;&gt; &lt;code&gt;Phoenix.LiveView.get_connect_info/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd4ec485ed3113350b052f0eb6de4a8efe5359aa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.liveview#get_connect_params/1&quot;&gt;&lt;code&gt;Phoenix.LiveView.get_connect_params/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.liveview#get_connect_params/1&quot;&gt; &lt;code&gt;Phoenix.LiveView.get_connect_params/1&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7281895ace26a349e84151440f7e9536ff417edb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.liveview.helpers#live_render/3&quot;&gt;&lt;code&gt;Phoenix.LiveView.Helpers.live_render/3&lt;/code&gt;&lt;/a&gt; for all supported options.</source>
          <target state="translated">지원되는 모든 옵션 은 &lt;a href=&quot;phoenix.liveview.helpers#live_render/3&quot;&gt; &lt;code&gt;Phoenix.LiveView.Helpers.live_render/3&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa72fdb30cd34578ad87b4d3074be2504209c727" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.presence#list/2&quot;&gt;&lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt;&lt;/a&gt; for more information on the presence datastructure.</source>
          <target state="translated">현재 상태 데이터 구조에 대한 자세한 내용 은 &lt;a href=&quot;phoenix.presence#list/2&quot;&gt; &lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ef1bb15bff16619e10cef1d606d47af3888ec309" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt;&lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt;&lt;/a&gt; to implement a custom adapter.</source>
          <target state="translated">사용자 지정 어댑터를 구현하려면 &lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt; &lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88c8c4a4bcc3b23e8f0afc627aff2ba07638bb9c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">사용법 예는 &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee65f0a0a082cb9fe667267438125e815eeb29d0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.template.eexengine&quot;&gt;&lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt;&lt;/a&gt; for an example engine implementation.</source>
          <target state="translated">예제 엔진 구현 은 &lt;a href=&quot;phoenix.template.eexengine&quot;&gt; &lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d09ab09a80fc6e3371af67b48a45ec888d3b2ef6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.token&quot;&gt;&lt;code&gt;Phoenix.Token&lt;/code&gt;&lt;/a&gt; documentation for examples in performing token verification on connect.</source>
          <target state="translated">연결시 토큰 확인을 수행하는 예제는 &lt;a href=&quot;phoenix.token&quot;&gt; &lt;code&gt;Phoenix.Token&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="261e1ae56f3a072bff65a99c72ff577be8137484" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;plug.session.store&quot;&gt;&lt;code&gt;Plug.Session.Store&lt;/code&gt;&lt;/a&gt; for the specification session stores are required to implement.</source>
          <target state="translated">구현하려면 사양 세션 저장소가 필요하므로 &lt;a href=&quot;plug.session.store&quot;&gt; &lt;code&gt;Plug.Session.Store&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9230a87cc68c046eee9248393a3f13e2c8ee374f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;aggregate/2&lt;/code&gt; for general considerations and options.</source>
          <target state="translated">일반적인 고려 사항 및 옵션 은 &lt;code&gt;aggregate/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c5bed7ccad22aa1051678c95f9fb7801d6255d5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;c:list/2&lt;/code&gt; for more information on the presence data structure.</source>
          <target state="translated">현재 상태 데이터 구조에 대한 자세한 내용 은 &lt;code&gt;c:list/2&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5c11d0599aa5ae1717c8ef4754f747abcfaf6c60" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;inform/1&lt;/code&gt; for more information.</source>
          <target state="translated">자세한 &lt;code&gt;inform/1&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="70f90e4dab7d5308ae5484d73eec0536670ce38d" translate="yes" xml:space="preserve">
          <source>See a description about its fields and use cases in &lt;a href=&quot;phoenix.liveview.engine&quot;&gt;&lt;code&gt;Phoenix.LiveView.Engine&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">&lt;a href=&quot;phoenix.liveview.engine&quot;&gt; &lt;code&gt;Phoenix.LiveView.Engine&lt;/code&gt; &lt;/a&gt; 문서 에서 해당 필드 및 사용 사례에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1fb76575f5700f016472c68381141953c4df7440" translate="yes" xml:space="preserve">
          <source>See the &quot;Named binding&quot; section in &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; 의 &quot;명명 된 바인딩&quot;섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="161ac165bdee8f21fa6629207e7cef6c2626b8ba" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for more options.</source>
          <target state="translated">추가 옵션은 모듈 문서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aa3ed528817fda45b3391d7fe285532382e90f27" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for remaining options.</source>
          <target state="translated">나머지 옵션은 모듈 문서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9ee043fc5ef54fddf8825b05f20c419d2581cb7f" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation for remaining options.</source>
          <target state="translated">나머지 옵션에 대해서는 모듈 설명서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7649523e1a49db136fa7cc9581afc36295590af4" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation.</source>
          <target state="translated">모듈 설명서의 &quot;공유 옵션&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a3b2e55e84311bdcd28e3a7c26f23056f3b42cfe" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView integration&lt;/a&gt; section in module documentation for examples of using this function.</source>
          <target state="translated">이 기능을 사용하는 예제는 모듈 설명서 의 &lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView 통합&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="831c83e86f46bd94d2d80b20745c47e78ec12552" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">이 콜백을 구현하는 방법에 대한 예제 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="acffe996dfff2cb111fe66c67b0ec18298382268" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.liveviewtest&quot;&gt;&lt;code&gt;Phoenix.LiveViewTest&lt;/code&gt;&lt;/a&gt; documentation for usage.</source>
          <target state="translated">사용법 은 &lt;a href=&quot;phoenix.liveviewtest&quot;&gt; &lt;code&gt;Phoenix.LiveViewTest&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52bfe9d775fe2216e987697974fbdb4950dfca06" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own socket that does not leverage channels or for writing your own transports that interacts with other sockets.</source>
          <target state="translated">채널을 활용하지 않는 자체 소켓 작성 또는 다른 소켓과 상호 작용하는 자체 전송 작성에 대한 자세한 내용은 &lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="48b888cf8ed338dd5d7dafa38b1755fcf07c5cc2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own transports.</source>
          <target state="translated">자체 교통편 작성에 대한 자세한 내용은 &lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1684cff4f2015c60813bad9a0c254c9bb819dc89" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter&amp;rsquo;s documentation.</source>
          <target state="translated">어댑터 간 공유 옵션에 대해서는 moduledoc의 구성을 참조하십시오. 어댑터 별 구성은 어댑터의 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0faab496e8605530beb9dcbc7065e79751224fbe" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter's documentation.</source>
          <target state="translated">어댑터간에 공유되는 옵션은 moduledoc의 구성을 참조하고 어댑터 별 구성은 어댑터 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="312fb50202d073fcbd9ec6a658fd9509a91a8bd0" translate="yes" xml:space="preserve">
          <source>See the documentation for those functions for more information.</source>
          <target state="translated">자세한 내용은 해당 기능의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a99809f8ab2290821228a7754fff870d3b2e5a30" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">더 많은 예제 는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0436c22fef845c067bef662ef491804de17b0b6d" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">자세한 예는 &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt; 의 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d0eeab9b3bcf028d49b64aacb7b091dca517bce" translate="yes" xml:space="preserve">
          <source>See the module docs for examples.</source>
          <target state="translated">예제는 모듈 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e65e93f5d1b1c4b0155385905ede5a1c03af66b" translate="yes" xml:space="preserve">
          <source>See the module documentation for examples of using this function.</source>
          <target state="translated">이 기능을 사용하는 예는 모듈 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="679a357d872f534ff44cb3b4a7a3b383d13c7888" translate="yes" xml:space="preserve">
          <source>Select also allows each expression to be wrapped in lists, tuples or maps as shown in the examples below. A full schema can also be selected.</source>
          <target state="translated">또한 Select는 아래 예제와 같이 각 표현식을 목록, 튜플 또는 맵으로 래핑 할 수 있도록합니다. 전체 스키마를 선택할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4b7e5cb92e8ac0fb52771a37b4eceb5fa84c44e" translate="yes" xml:space="preserve">
          <source>Select the 'Prime' (SECP) curves for use in Elliptic Curve Cryptography (ECC)</source>
          <target state="translated">ECC (타원 곡선 암호화)에서 사용할 '프라임'(SECP) 곡선을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="d033c83fffaa5673b1a414ddfda2c025b06d961a" translate="yes" xml:space="preserve">
          <source>Selects which fields will be selected from the schema and any transformations that should be performed on the fields. Any expression that is accepted in a query can be a select field.</source>
          <target state="translated">스키마에서 선택할 필드와 필드에서 수행해야 할 변환을 선택합니다. 쿼리에서 허용되는 모든 표현식은 선택 필드 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac9458ba400892c1472d9210ab76fde833fe2f3c" translate="yes" xml:space="preserve">
          <source>Self-signed Certificate</source>
          <target state="translated">자체 서명 된 인증서</target>
        </trans-unit>
        <trans-unit id="5e91d1e0f5e9487059e916a996058cf9e1dc6766" translate="yes" xml:space="preserve">
          <source>Send &lt;code&gt;:garbage_collect&lt;/code&gt; clause to the transport process:</source>
          <target state="translated">전송 프로세스에 : &lt;code&gt;:garbage_collect&lt;/code&gt; 절을 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="339bcde69154793c7987399aaf319979a690b702" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client</source>
          <target state="translated">고객에게 정보 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3ed9da092f3a4af112039ba3e975724f7aa96536" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client.</source>
          <target state="translated">정보 응답을 클라이언트에게 보냅니다.</target>
        </trans-unit>
        <trans-unit id="e173371abf693a34430650d6ef0622ed0064635e" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database</source>
          <target state="translated">데이터베이스로 직접 조각 보내기</target>
        </trans-unit>
        <trans-unit id="16e544758dfbf09ced50ada38b4b05192f7e5c8b" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database.</source>
          <target state="translated">조각을 데이터베이스에 직접 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0da65406cb576e3d561db5540fd2eabd03bc9ab9" translate="yes" xml:space="preserve">
          <source>Sending responses directly</source>
          <target state="translated">직접 응답 보내기</target>
        </trans-unit>
        <trans-unit id="489239a1181fd2c713a82111145edf54439dab29" translate="yes" xml:space="preserve">
          <source>Sends JSON response</source>
          <target state="translated">JSON 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="5a525bc62260b0e127c7db79abcc3613f2585efb" translate="yes" xml:space="preserve">
          <source>Sends JSON response.</source>
          <target state="translated">JSON 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0d28bc04596c385c38b3aac3942c504d8e6b8566" translate="yes" xml:space="preserve">
          <source>Sends a blur event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 제공하는 흐림 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df2fdde6fc14cda41cffea4c713c7a6bc257872b" translate="yes" xml:space="preserve">
          <source>Sends a blur event to the view and returns the rendered result.</source>
          <target state="translated">뷰에 흐림 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8660cb1f08099de5fb0f65076cb9f9400d7c92b6" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response</source>
          <target state="translated">청크를 청크 응답의 일부로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="fe6e56dadcec8e96d4db4592922c851f171d45e5" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response.</source>
          <target state="translated">청크를 청크 응답의 일부로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="159b4be78595cfa9e13576378a181ce38afd7078" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response</source>
          <target state="translated">청크 응답에서 청크를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4b026d5ba5a419651b4118cb2aa26c82b8a7e8dc" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response.</source>
          <target state="translated">청크 응답에서 청크를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="e4eb0e0c72673d960138d7009120ef65a0c0bc39" translate="yes" xml:space="preserve">
          <source>Sends a click &lt;code&gt;event&lt;/code&gt; to the &lt;code&gt;view&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">클릭 &lt;code&gt;event&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 과 함께 &lt;code&gt;view&lt;/code&gt; 에 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aca4ef733d3eda44a1aacff086660ed7f4d1228c" translate="yes" xml:space="preserve">
          <source>Sends a click event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 제공하는 클릭 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="de3d8a2105ba453f710652c7ae63c978abfb2c82" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 의 파일을 응답 본문으로 보내고 선택적으로 주어진 길이까지 주어진 오프셋에서 시작</target>
        </trans-unit>
        <trans-unit id="e9dcef495e0b37b6a9a55b68958139330d7d9f0e" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length.</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 의 파일을 응답 본문으로 보내고 선택적으로 주어진 길이까지 주어진 오프셋에서 시작합니다.</target>
        </trans-unit>
        <trans-unit id="2729f47c08546b1d4165da30335d70a0aab12d1a" translate="yes" xml:space="preserve">
          <source>Sends a focus event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 제공하는 포커스 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5adb9345d28102ac1c763b4f6a4a007b8375b80c" translate="yes" xml:space="preserve">
          <source>Sends a focus event to the view and returns the rendered result.</source>
          <target state="translated">뷰에 포커스 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="64e540d5599cb2c4b0cefa2a2948800957a32e8a" translate="yes" xml:space="preserve">
          <source>Sends a form change event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 제공하는 양식 변경 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d2761baa7d0cbffc025a7467c4906593935e13a4" translate="yes" xml:space="preserve">
          <source>Sends a form change event to the view and returns the rendered result.</source>
          <target state="translated">보기에 양식 변경 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b36b85c5dc6d00fe4d679346cf194a6d075f72d" translate="yes" xml:space="preserve">
          <source>Sends a form submit event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 제공하는 양식 제출 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d740cf6907655bf8cef3d027cc12dfb8372a0be5" translate="yes" xml:space="preserve">
          <source>Sends a form submit event to the view and returns the rendered result.</source>
          <target state="translated">보기에 양식 제출 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8a896369eae35006083d38db22a4868d7211b60d" translate="yes" xml:space="preserve">
          <source>Sends a hook event to the view or an element and returns the rendered result.</source>
          <target state="translated">후크 이벤트를 뷰 또는 요소로 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cd93703cdcdd6e0d97b2d07ea7d8f4e7e392863a" translate="yes" xml:space="preserve">
          <source>Sends a keydown event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 제공하는 keydown 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e00faaaab158cfd84292bf03055da27c943a1855" translate="yes" xml:space="preserve">
          <source>Sends a keydown event to the view and returns the rendered result.</source>
          <target state="translated">keydown 이벤트를 뷰에 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc6f91c3d747bd32f00e55c1f38ac01a88aa735e" translate="yes" xml:space="preserve">
          <source>Sends a keyup event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 제공하는 keyup 이벤트를 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20f7c6d9da28d451150734cab4f50b60cf5da286" translate="yes" xml:space="preserve">
          <source>Sends a keyup event to the view and returns the rendered result.</source>
          <target state="translated">keyup 이벤트를 뷰에 보내고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe9eb2fee9ae60e2ca92121924ef824a470a07cb" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic</source>
          <target state="translated">주제의 모든 구독자에게 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3f4328e232001421bf2c872503e97a20d3232f5b" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic.</source>
          <target state="translated">주제의 모든 구독자에게 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a373ddfffbe146ddac8a173341a9221d9a4ffded" translate="yes" xml:space="preserve">
          <source>Sends a response to the client</source>
          <target state="translated">클라이언트에게 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="d1fba647ce413e6f7c8b1af6df87c6c2745e996c" translate="yes" xml:space="preserve">
          <source>Sends a response to the client.</source>
          <target state="translated">클라이언트에게 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="ea3622a1491a4991ba2109ef9333051926e18c86" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body</source>
          <target state="translated">주어진 상태와 본문으로 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="4cd23c51688616b423a756b98b293b101621efe1" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body.</source>
          <target state="translated">주어진 상태와 본문으로 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c7f30c86685aa3607c7ab991521564787425248b" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform</source>
          <target state="translated">클라이언트에 정보 응답을 보내지 만 어댑터가 정보를 지원하지 않으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7d87f8aad66e77be3e8f2d5bfa286b94bb99af45" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform.</source>
          <target state="translated">정보 응답을 클라이언트에 전송하지만 어댑터가 정보를 지원하지 않으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8957b8bad5a32e15394a3faa2bd6607a6ee1ae15" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client</source>
          <target state="translated">클라이언트에게 정보를 보내고 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3d64de4420bbf1ab57866fc08ef6ebb0cf9d618f" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client.</source>
          <target state="translated">클라이언트에게 정보 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="034c6ea35c7dac4497fff0e97f6a65dc6add09be" translate="yes" xml:space="preserve">
          <source>Sends event to the socket</source>
          <target state="translated">소켓으로 이벤트를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="7083990a770deb6247c289c9286b7c9ad92c5f99" translate="yes" xml:space="preserve">
          <source>Sends event to the socket.</source>
          <target state="translated">소켓으로 이벤트를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="64a9e7c61acbcd7bc8acc5dedf73b365451f695e" translate="yes" xml:space="preserve">
          <source>Sends html response</source>
          <target state="translated">HTML 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="1ee2773809b54afc3ec4a9bde01d6f87355f8588" translate="yes" xml:space="preserve">
          <source>Sends html response.</source>
          <target state="translated">html 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="555a5345663c5549c5012382603ce0975ba2f157" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url</source>
          <target state="translated">지정된 URL로 리디렉션 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a5ccf0adfdfd164726fa10b86b27442adb2d4682" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url.</source>
          <target state="translated">지정된 URL로 리디렉션 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8e530140d82c52f53e8acdaad18b70006366216e" translate="yes" xml:space="preserve">
          <source>Sends text response</source>
          <target state="translated">문자 응답을 보냅니다</target>
        </trans-unit>
        <trans-unit id="c1248e478956ecfda126a47e010af683a1a9fef9" translate="yes" xml:space="preserve">
          <source>Sends text response.</source>
          <target state="translated">텍스트 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b11b79b63b737f42e6de87481fdbad625665e341" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download</source>
          <target state="translated">주어진 파일 또는 바이너리를 다운로드로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d7eb8984be042027d6d16e842e16fe4fffc0d82e" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download.</source>
          <target state="translated">주어진 파일 또는 바이너리를 다운로드로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="01c751c691b5cd02c867c6c00a48fa707b7abaa0" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client</source>
          <target state="translated">주어진 상태, 헤더 및 본문을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b1b5e5859a86db864471510765fc638d073c3a7c" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client.</source>
          <target state="translated">주어진 상태, 헤더 및 본문을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3f667a597d0810736bda963eefbc33a74f24820b" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client</source>
          <target state="translated">주어진 상태, 헤더 및 파일을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8fa020f53cdee1e58149be6a170a81ebd2b8f16a" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client.</source>
          <target state="translated">주어진 상태, 헤더 및 파일을 클라이언트로 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b1ae73f262918a400f2777f879f98b14757c0356" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client</source>
          <target state="translated">주어진 상태, 헤더를 클라이언트에게 청크 응답의 시작으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="98f05b4a43a17d1506c7c0722b3b1b76cd400e66" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client.</source>
          <target state="translated">주어진 상태, 헤더를 청크 응답의 시작으로 클라이언트에 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4ed850761dfe7724d1b944f2ffc0f7d2de013f38" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response</source>
          <target state="translated">응답 헤더를 청크 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="04d8681376a92c3eb52331e76051230a4195c17d" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response.</source>
          <target state="translated">응답 헤더를 청크 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="59bee72c1fd17c82da45c231f035a209dfdee94a" translate="yes" xml:space="preserve">
          <source>Serializer</source>
          <target state="translated">Serializer</target>
        </trans-unit>
        <trans-unit id="85792e8a3d476121d2028fa22f8b1db5759e853e" translate="yes" xml:space="preserve">
          <source>Server pushes must happen prior to a response being sent. If a server push is attempted after a response is sent then a &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">응답을 보내기 전에 서버 푸시가 발생해야합니다. 응답이 전송 된 후 서버 푸시가 시도되면 &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="de4939a48f32b39f26e5821586e2778e7fabfb3f" translate="yes" xml:space="preserve">
          <source>Server-side</source>
          <target state="translated">Server-side</target>
        </trans-unit>
        <trans-unit id="3facdb03e5d7811371bc108d458d02bf7b7534eb" translate="yes" xml:space="preserve">
          <source>Session stores</source>
          <target state="translated">세션 상점</target>
        </trans-unit>
        <trans-unit id="453262679874b2f4c8ad87db24353e55de7dea32" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;reuse_sessions: true&lt;/code&gt;, for improved handshake performance of recurring connections</source>
          <target state="translated">되풀이 연결의 핸드 셰이크 성능 향상을 위해 &lt;code&gt;reuse_sessions: true&lt;/code&gt; 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="345843c150fb23f55a30c97cd2b8a56d805955b0" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;secure_renegotiate: true&lt;/code&gt;, to avoid certain types of man-in-the-middle attacks</source>
          <target state="translated">특정 유형의 중간자 공격을 방지하려면 &lt;code&gt;secure_renegotiate: true&lt;/code&gt; 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="0762d654ef1cd87661534f45fd60626730f25204" translate="yes" xml:space="preserve">
          <source>Sets the dynamic repository to be used in further interactions.</source>
          <target state="translated">추가 상호 작용에 사용할 동적 저장소를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="973de0fad1a86720c3b14c87e1f533753fabc33e" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 와 &lt;code&gt;body&lt;/code&gt; 대한 응답을 설정합니다</target>
        </trans-unit>
        <trans-unit id="7e2971886484c2d54f52fda136a1853fe373601c" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;status&lt;/code&gt; 와 &lt;code&gt;body&lt;/code&gt; 응답을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7b11288ff44d6a2c856bd42c2433b817ee3c0d33" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; 을 고려한 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 응답 헤더 의 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="60a9f444fec9661326170fa10d3b28058820fb13" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; 을 고려하여 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 응답 헤더 의 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="124bfef7545ed44d34ed68aea26689653267a541" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering</source>
          <target state="translated">렌더링 할 때 레이아웃이있는 형식을 설정합니다</target>
        </trans-unit>
        <trans-unit id="1a3e25289d98574f8d2ce6e7f348df35c2108378" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering.</source>
          <target state="translated">렌더링시 레이아웃이있는 형식을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="69c034b8463a4be4d10bca2b3be19119c3e74cf2" translate="yes" xml:space="preserve">
          <source>Setting the Content Type</source>
          <target state="translated">콘텐츠 유형 설정</target>
        </trans-unit>
        <trans-unit id="a3c53ebe741ed925ba086fe1e96c93b536b4074c" translate="yes" xml:space="preserve">
          <source>Setting the HTTP Status</source>
          <target state="translated">HTTP 상태 설정</target>
        </trans-unit>
        <trans-unit id="292ac677682669584112c602ca4559bccf6f2e08" translate="yes" xml:space="preserve">
          <source>Setting the namespace to &lt;code&gt;MyApp.Admin&lt;/code&gt; in the second example will force the template to also be looked up at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;.</source>
          <target state="translated">두 번째 예제에서 네임 스페이스를 &lt;code&gt;MyApp.Admin&lt;/code&gt; 으로 설정하면 템플릿을 &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; 에서도 찾아야 합니다.</target>
        </trans-unit>
        <trans-unit id="fe94160acd6fbedcc5be6644df56f9ce11f302f5" translate="yes" xml:space="preserve">
          <source>Setting the prefix in the query changes the default prefix of all &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; expressions. You can override the query prefix by either setting the &lt;code&gt;@schema_prefix&lt;/code&gt; in your schema definitions or by passing the prefix option:</source>
          <target state="translated">쿼리에서 접두사를 설정하면 모든 &lt;code&gt;from&lt;/code&gt; 및 &lt;code&gt;join&lt;/code&gt; 식 의 기본 접두사가 변경 됩니다. 스키마 정의에서 &lt;code&gt;@schema_prefix&lt;/code&gt; 를 설정 하거나 prefix 옵션을 전달하여 조회 접 두부를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1511667d6b259adc4e62f0970e71e5fc502c0dde" translate="yes" xml:space="preserve">
          <source>Shared options</source>
          <target state="translated">공유 옵션</target>
        </trans-unit>
        <trans-unit id="6d2d3870c881115756488bbf909a1f8705245a13" translate="yes" xml:space="preserve">
          <source>Sharing views and templates</source>
          <target state="translated">보기 및 템플릿 공유</target>
        </trans-unit>
        <trans-unit id="d4bd5f107140360dabc5810290c12cbefe328539" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the origin header matches the allowed origins, no origin header was sent or no origin was configured, it will return the given connection.</source>
          <target state="translated">적절한 경우 연결하기 전에 운송 업체가 호출해야합니다. 오리진 헤더가 허용 된 오리진과 일치하거나, ​​오리진 헤더가 전송되지 않았거나 오리진이 구성되지 않은 경우 지정된 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2ef97bd3fcfc474fd6914d207ec1a85adccfa1e4" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the sec-websocket-protocol header matches the allowed subprotocols, it will put sec-websocket-protocol response header and return the given connection. If no sec-websocket-protocol header was sent it will return the given connection.</source>
          <target state="translated">적절한 경우 연결하기 전에 전송에서 호출해야합니다. sec-websocket-protocol 헤더가 허용 된 하위 프로토콜과 일치하면 sec-websocket-protocol 응답 헤더를 넣고 주어진 연결을 반환합니다. sec-websocket-protocol 헤더가 전송되지 않으면 주어진 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="23c54dd01c1ae034689416b4628f1c012e01870d" translate="yes" xml:space="preserve">
          <source>Should you choose to configure your own ciphers you cannot use the &lt;code&gt;:cipher_suite&lt;/code&gt; option as setting a cipher suite overrides your cipher selections.</source>
          <target state="translated">자체 암호를 구성하도록 선택 하면 암호 스위트 설정이 암호 선택을 대체 하므로 &lt;code&gt;:cipher_suite&lt;/code&gt; 옵션을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7fddb7d8d1d60b1eeefa9af01082e0811d4b484d" translate="yes" xml:space="preserve">
          <source>Shutdown</source>
          <target state="translated">Shutdown</target>
        </trans-unit>
        <trans-unit id="8129fdbbafce686a971d68a97e93da4f5a6707c4" translate="yes" xml:space="preserve">
          <source>Shuts down the repository</source>
          <target state="translated">저장소를 종료합니다</target>
        </trans-unit>
        <trans-unit id="9222d2164ca189b6d70bf3e2d13ec35ad176331f" translate="yes" xml:space="preserve">
          <source>Shuts down the repository.</source>
          <target state="translated">저장소를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="e5c71aeaef6a40bb5b30896d0edde13cc4545556" translate="yes" xml:space="preserve">
          <source>Signing and encrypting cookies</source>
          <target state="translated">쿠키 서명 및 암호화</target>
        </trans-unit>
        <trans-unit id="06b57e7149cc2b9d37d8a5281c9d4d4f468fc518" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">유사합니다 &lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 있지만, 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 을&lt;/a&gt; 더 기록이 발견되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="c1de6be4d4a7d0026737bbb929476b58a3899d7c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">유사합니다 &lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 있지만, 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 를&lt;/a&gt; 더 레코드가 발견되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="716e7b8304762059e3756e20b26dcccee049164e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get_by/3&quot;&gt;&lt;code&gt;get_by/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:get_by/3&quot;&gt; &lt;code&gt;get_by/3&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 레코드가 없으면 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="a9a71d0ef4f57438fb836bf75362c66c11034d6e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">유사 &lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; &lt;/a&gt; 만 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt; 대한 기록이 발견되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="42730c52cfc74f4b110f480503b0827db35ef6d8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">유사에 &lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; &lt;/a&gt; 만은 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 를&lt;/a&gt; 더 레코드가 발견되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="9602d57832535417770f387c5a5d0450aa7cf242" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:reload/2&quot;&gt;&lt;code&gt;reload/2&lt;/code&gt;&lt;/a&gt;, but raises when something is not found.</source>
          <target state="translated">&lt;a href=&quot;#c:reload/2&quot;&gt; &lt;code&gt;reload/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 무언가를 찾을 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b6c78b9004e61663051dcd4d055a5bf8cafaeafb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">유사하게 &lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; &lt;/a&gt; 하지만, 모듈 이름, 기능 및 인수를 전달할 수있다. 함수는 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 반환해야 하며 첫 번째 인수 (함수 호출에서 전달 된 인수 앞에 추가됨 )까지 변경 사항을받습니다.</target>
        </trans-unit>
        <trans-unit id="6418545197a346d3b8671927d501e7da02f8b915" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 모듈 이름, 함수 및 인수를 전달할 수 있습니다. 이 함수는 &lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 를&lt;/a&gt; 반환 하고 첫 번째 인수 (함수 호출에 전달 된 인수 앞에 추가)까지 변경 사항을 수신해야합니다.</target>
        </trans-unit>
        <trans-unit id="45981842f8238a3b10a636959d5a33b8843118a3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#run/3&quot;&gt;&lt;code&gt;run/3&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return either &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt;, and receives the repo as the first argument, and the changes so far as the second argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#run/3&quot;&gt; &lt;code&gt;run/3&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 모듈 이름, 함수 및 인수를 전달할 수 있습니다. 함수는 &lt;code&gt;{:ok, value}&lt;/code&gt; 또는 &lt;code&gt;{:error, value}&lt;/code&gt; 리턴해야 하며 repo를 첫 번째 인수로, 두 번째 인수까지의 변경 사항을 수신합니다 (함수 호출에 전달 된 것 앞에 추가).</target>
        </trans-unit>
        <trans-unit id="32ed9c69f0771ab7837e0807b2dd78cbca41d601" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#send_update/2&quot;&gt;&lt;code&gt;send_update/2&lt;/code&gt;&lt;/a&gt; but the update will be delayed according to the given &lt;code&gt;time_in_milliseconds&lt;/code&gt;.</source>
          <target state="translated">유사합니다 &lt;a href=&quot;#send_update/2&quot;&gt; &lt;code&gt;send_update/2&lt;/code&gt; &lt;/a&gt; 하지만 업데이트는 주어진에 따라 지연 될 &lt;code&gt;time_in_milliseconds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87dd2f0ff960411a79daab240746f7e7a73e8806" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#validate_change/3&quot;&gt;&lt;code&gt;validate_change/3&lt;/code&gt;&lt;/a&gt; but stores the validation metadata into the changeset validators. The validator metadata is often used as a reflection mechanism, to automatically generate code based on the available validations.</source>
          <target state="translated">&lt;a href=&quot;#validate_change/3&quot;&gt; &lt;code&gt;validate_change/3&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 유효성 검증 메타 데이터를 변경 세트 유효성 검증기에 저장합니다. 유효성 검사기 메타 데이터는 종종 사용 가능한 유효성 검사를 기반으로 코드를 자동 생성하기 위해 리플렉션 메커니즘으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="69474a73059972b96b5e3b7fbabc31c9b8dd1aa4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">유사합니다 &lt;code&gt;get_by/3&lt;/code&gt; 하지만 제기 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; 을&lt;/a&gt; 더 기록이 발견되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="f6dff33ff4e2317639d9e9d27bfcadf16c760660" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;code&gt;get_by/3&lt;/code&gt; 와 유사 하지만 레코드가 없으면 &lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a4bfbecdbc63477571a9c0d33b98c72fbcd63302" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the exising one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; 와 유사 하게이 함수는 새로운 응답 헤더 ( &lt;code&gt;key&lt;/code&gt; )를 추가하지만 확장 헤더 를 교체하는 대신 다른 헤더 앞에 동일한 &lt;code&gt;key&lt;/code&gt; 추가 합니다 .</target>
        </trans-unit>
        <trans-unit id="cfa80534ecc93a99a1d8974de760e1142bde5992" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the existing one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; 와 유사 하게이 함수는 새로운 응답 헤더 ( &lt;code&gt;key&lt;/code&gt; )를 추가하지만 기존 헤더를 바꾸는 대신 다른 헤더 앞에 동일한 &lt;code&gt;key&lt;/code&gt; 추가 합니다 .</target>
        </trans-unit>
        <trans-unit id="ab5bf4ad0fb269878b98a7b0f7ef7355adbfe629" translate="yes" xml:space="preserve">
          <source>Similarly - if we want a context created without a schema for our resource we can use the &lt;code&gt;--no-schema&lt;/code&gt; flag.</source>
          <target state="translated">마찬가지로-리소스에 대한 스키마없이 컨텍스트를 생성하려면 &lt;code&gt;--no-schema&lt;/code&gt; 플래그를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98e4dda7b7875cb9d20ae609f0bb88a5a60e78ec" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;strong&gt;do not&lt;/strong&gt; define variables at the top of your &lt;code&gt;render&lt;/code&gt; function:</source>
          <target state="translated">마찬가지로 &lt;code&gt;render&lt;/code&gt; 함수 상단에 변수를 정의 &lt;strong&gt;하지 마십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="afed92112a32d9f76a405980ae6151cb35ecec5a" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;code&gt;--no-html&lt;/code&gt; is given, the files generated by &lt;code&gt;phx.gen.html&lt;/code&gt; will no longer work, as important HTML components will be missing.</source>
          <target state="translated">마찬가지로 &lt;code&gt;--no-html&lt;/code&gt; 을 지정 하면 중요한 HTML 구성 요소가 누락 &lt;code&gt;phx.gen.html&lt;/code&gt; 생성 된 파일 이 더 이상 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f3e7e6dc2f47afe54084e928fa6dd69a44fcc94" translate="yes" xml:space="preserve">
          <source>Similarly, if we have a comments resource, and we don't want to provide a route to delete one, we could define a route like this.</source>
          <target state="translated">마찬가지로, comments 리소스가 있고이를 삭제할 경로를 제공하지 않으려면 다음과 같은 경로를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c937da7e4c92af6c87282cbfbca854b6a0365283" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &quot;all bindings before&quot; and match on the last one.</source>
          <target state="translated">마찬가지로 쿼리의 마지막 바인딩 (또는 마지막 바인딩)에만 관심이있는 경우 &lt;code&gt;...&lt;/code&gt; 를 사용하여 &quot;이전의 모든 바인딩&quot;을 지정하고 마지막 바인딩과 일치 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4da369a800240a36c38a1a1b6280abdb44b5760a" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &amp;ldquo;all bindings before&amp;rdquo; and match on the last one.</source>
          <target state="translated">마찬가지로 쿼리의 마지막 바인딩 (또는 마지막 바인딩)에만 관심이있는 경우 &lt;code&gt;...&lt;/code&gt; 을 사용하여&amp;ldquo;이전의 모든 바인딩&amp;rdquo;을 지정하고 마지막 바인딩과 일치 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="315b1ca0f3b405f6a32b3e7f54525c8fad241b41" translate="yes" xml:space="preserve">
          <source>Similarly, other types, such as datetimes, are returned as strings. This means conditions like &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; may return incorrect results or fail as the underlying database tries to compare incompatible types. You can, however, use &lt;a href=&quot;#type/2&quot;&gt;&lt;code&gt;type/2&lt;/code&gt;&lt;/a&gt; to force the types on the database level.</source>
          <target state="translated">마찬가지로 datetimes와 같은 다른 유형도 문자열로 반환됩니다. 이는 &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; 와 같은 조건이 잘못된 결과를 반환하거나 기본 데이터베이스가 호환되지 않는 유형을 비교하려고 할 때 실패 할 수 있음을 의미합니다. 그러나 &lt;a href=&quot;#type/2&quot;&gt; &lt;code&gt;type/2&lt;/code&gt; &lt;/a&gt; 를 사용 하여 데이터베이스 수준에서 유형을 강제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16f710f42a00a1f126107e1d5daf3f6f20d75e44" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;:binary_id&lt;/code&gt; type may be generated in the adapter for cases like UUID but it may also be handled by the database if required. In any case, both scenarios are handled transparently by Ecto.</source>
          <target state="translated">마찬가지로 &lt;code&gt;:binary_id&lt;/code&gt; 유형은 UUID와 같은 경우 어댑터에서 생성 될 수 있지만 필요한 경우 데이터베이스에서 처리 될 수도 있습니다. 어쨌든 두 시나리오는 모두 Ecto에서 투명하게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="078c6fd53d813553c8bb3c25ef271cc99e49016a" translate="yes" xml:space="preserve">
          <source>Similarly, variables introduced by Elixir's block constructs are fine. For example, accessing the &lt;code&gt;post&lt;/code&gt; variable defined by the comprehension below works as expected:</source>
          <target state="translated">마찬가지로 Elixir의 블록 구조에서 도입 한 변수도 괜찮습니다. 예를 들어, 아래 이해에 의해 정의 된 &lt;code&gt;post&lt;/code&gt; 변수에 액세스하는 것은 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ac8a6784f582b6e7efb616680c77e30d6b1bf4b4" translate="yes" xml:space="preserve">
          <source>Similarly, we can broadcast messages from the test itself on the topic that both test and channel are subscribed to, triggering &lt;code&gt;handle_out/3&lt;/code&gt; on the channel:</source>
          <target state="translated">마찬가지로 채널에서 &lt;code&gt;handle_out/3&lt;/code&gt; 을 트리거하여 테스트와 채널이 모두 구독되는 주제에 대해 테스트 자체의 메시지를 브로드 캐스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="934003393a7b994a6fab818e0cceca3b6d90f305" translate="yes" xml:space="preserve">
          <source>Simulates a &lt;code&gt;live_patch&lt;/code&gt; to the given &lt;code&gt;path&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">주어진 &lt;code&gt;path&lt;/code&gt; 대한 &lt;code&gt;live_patch&lt;/code&gt; 를 시뮬레이션 하고 렌더링 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7d5b785f18c4f2f1268e0bd25efa3ac9f932fb4" translate="yes" xml:space="preserve">
          <source>Simulating Latency</source>
          <target state="translated">지연 시간 시뮬레이션</target>
        </trans-unit>
        <trans-unit id="ba2a4b81dcb8c380e3750ed555ff5ecfbfd0abeb" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;phoenix.view&quot;&gt;&lt;code&gt;Phoenix.View&lt;/code&gt;&lt;/a&gt; is automatically imported into our templates, we could even skip the &lt;a href=&quot;phoenix.view&quot;&gt;&lt;code&gt;Phoenix.View&lt;/code&gt;&lt;/a&gt; module name and simply invoke &lt;code&gt;render(...)&lt;/code&gt; directly:</source>
          <target state="translated">이후 &lt;a href=&quot;phoenix.view&quot;&gt; &lt;code&gt;Phoenix.View&lt;/code&gt; 가&lt;/a&gt; 자동으로 우리의 템플릿으로 가져, 우리는 심지어 건너 뛸 수 &lt;a href=&quot;phoenix.view&quot;&gt; &lt;code&gt;Phoenix.View&lt;/code&gt; 의&lt;/a&gt; 모듈 이름을 단순히 호출 &lt;code&gt;render(...)&lt;/code&gt; 직접 :</target>
        </trans-unit>
        <trans-unit id="829e55987872ebea2c89921e68e0631668fb6fc9" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to create multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ecto 태스크는 한 번만 실행될 수 있으므로 여러 저장소를 작성해야하는 경우 적절하게 &lt;code&gt;:ecto_repos&lt;/code&gt; 를 설정 하거나 &lt;code&gt;-r&lt;/code&gt; 플래그를 여러 번 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="cba3b9261a84cf0943491491af9376a0a3e36cc6" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to drop multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ecto 태스크는 한 번만 실행될 수 있으므로 여러 저장소를 삭제해야하는 경우 &lt;code&gt;:ecto_repos&lt;/code&gt; 따라 : ecto_repos를 설정 하거나 &lt;code&gt;-r&lt;/code&gt; 플래그를 여러 번 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d532ae08cb5cca6185a53fae8d86b3abd5196e4" translate="yes" xml:space="preserve">
          <source>Since in this case we always require the user to pass all tags directly, using &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt; is a great fit. It will automatically remove any tag not given and properly associate all of the given tags with the post.</source>
          <target state="translated">이 경우 항상 사용자가 모든 태그를 직접 전달해야하므로 &lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다. 제공되지 않은 태그를 자동으로 제거하고 지정된 모든 태그를 게시물과 올바르게 연결합니다.</target>
        </trans-unit>
        <trans-unit id="8c56a316edda5c41dc92d4d330f74b5b2defc49b" translate="yes" xml:space="preserve">
          <source>Since layouts are really just templates, they need a view to render them. This is the &lt;code&gt;LayoutView&lt;/code&gt; module defined in &lt;code&gt;lib/hello_web/views/layout_view.ex&lt;/code&gt;. Since Phoenix generated this view for us, we won't have to create a new one as long as we put the layouts we want to render inside the &lt;code&gt;lib/hello_web/templates/layout&lt;/code&gt; directory.</source>
          <target state="translated">레이아웃은 실제로 템플릿 일 뿐이므로 렌더링하려면보기가 필요합니다. 이것은이다 &lt;code&gt;LayoutView&lt;/code&gt; 의 에 정의 된 모듈 &lt;code&gt;lib/hello_web/views/layout_view.ex&lt;/code&gt; . Phoenix가이 뷰를 생성했기 때문에 렌더링하려는 레이아웃을 &lt;code&gt;lib/hello_web/templates/layout&lt;/code&gt; 디렉토리에 넣는 한 새 뷰를 만들 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3dd6831992c073280cf00432e8f433224c821023" translate="yes" xml:space="preserve">
          <source>Since many views render significant content, for example a whole HTML file, it is common to put these files into a particular directory, typically &quot;APP_web/templates&quot;.</source>
          <target state="translated">많은 뷰가 중요한 콘텐츠 (예 : 전체 HTML 파일)를 렌더링하므로 이러한 파일을 특정 디렉토리 (일반적으로 &quot;APP_web / templates&quot;)에 배치하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="42211fc05091b9e37c6644b60fb5c19e12f5f118" translate="yes" xml:space="preserve">
          <source>Since rewriting the scheme based on &lt;code&gt;x-forwarded-*&lt;/code&gt; headers can open up security vulnerabilities, only use this plug if:</source>
          <target state="translated">&lt;code&gt;x-forwarded-*&lt;/code&gt; 헤더를 기반으로 스키마를 다시 작성하면 보안 취약점이 발생할 수 있으므로 다음과 같은 경우에만이 플러그를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eefc84b03d574da756bb5bd39f349a4317dd4518" translate="yes" xml:space="preserve">
          <source>Since rewriting the scheme based on &lt;code&gt;x-forwarded-proto&lt;/code&gt; can open up security vulnerabilities, only provide the option above if:</source>
          <target state="translated">&lt;code&gt;x-forwarded-proto&lt;/code&gt; 를 기반으로 스키마를 다시 작성하면 보안 취약점이 발생할 수 있으므로 다음과 같은 경우에만 위 옵션을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="28df1368db59ac470c073051cf5513f7f6fe19af" translate="yes" xml:space="preserve">
          <source>Since the socket supervision tree is started by the endpoint, any custom transport must be started after the endpoint in a supervision tree.</source>
          <target state="translated">소켓 감독 트리는 엔드 포인트에 의해 시작되므로 모든 사용자 지정 전송은 감독 트리의 엔드 포인트 이후에 시작되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7a1a942e8a8e1a1d6886838701da36fc7a53020d" translate="yes" xml:space="preserve">
          <source>Since this one is not valid, we can ask it what the errors are.</source>
          <target state="translated">이것은 유효하지 않기 때문에 오류가 무엇인지 물어볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9959ad819fdc6ce082fcbfcacbea425e36ef2224" translate="yes" xml:space="preserve">
          <source>Since this store uses crypto features, it requires you to set the &lt;code&gt;:secret_key_base&lt;/code&gt; field in your connection. This can be easily achieved with a plug:</source>
          <target state="translated">이 저장소는 암호화 기능을 사용하므로 연결에서 &lt;code&gt;:secret_key_base&lt;/code&gt; 필드 를 설정 해야합니다. 플러그로 쉽게 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2145cdddf8b7a86eb70eb4c38e16b06938fe7cd1" translate="yes" xml:space="preserve">
          <source>Since v1.5, new Phoenix applications are generated with a Telemetry supervisor. This module is responsible for managing the lifecycle of your Telemetry processes. It also defines a &lt;code&gt;metrics/0&lt;/code&gt; function, which returns a list of &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics&quot;&gt;&lt;code&gt;Telemetry.Metrics&lt;/code&gt;&lt;/a&gt; that you define for your application.</source>
          <target state="translated">v1.5부터 새로운 Phoenix 애플리케이션은 Telemetry 감독자와 함께 생성됩니다. 이 모듈은 Telemetry 프로세스의 수명주기를 관리합니다. 또한 애플리케이션에 대해 정의한 &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics&quot;&gt; &lt;code&gt;Telemetry.Metrics&lt;/code&gt; &lt;/a&gt; 목록을 반환 하는 &lt;code&gt;metrics/0&lt;/code&gt; 함수 를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8912a71b3fe9cbd76561667ba2df8c846422505a" translate="yes" xml:space="preserve">
          <source>Singleton resources</source>
          <target state="translated">싱글 톤 리소스</target>
        </trans-unit>
        <trans-unit id="6902fa751afee1587733342b99b1168338cc5b66" translate="yes" xml:space="preserve">
          <source>So by default, &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; will read 1_000_000 bytes at a time from the socket with an overall limit of 8_000_000 bytes.</source>
          <target state="translated">따라서 기본적으로 &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; 는 소켓에서 한 번에 1_000_000 바이트를 읽고 전체 제한은 8_000_000 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="00ea957ffba316f0ff6e8a0cb1faec55ce38d672" translate="yes" xml:space="preserve">
          <source>So far this document has focussed on configuring Plug to handle TLS within the application. Some people instead prefer to terminate TLS in a proxy or load balancer deployed in front of the Plug application.</source>
          <target state="translated">지금까지이 문서는 애플리케이션 내에서 TLS를 처리하도록 Plug를 구성하는 데 중점을 두었습니다. 대신 어떤 사람들은 플러그 애플리케이션 앞에 배치 된 프록시 또는로드 밸런서에서 TLS를 종료하는 것을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="9bde55a3bec7d2672624d4d25638473a9fc2eaa4" translate="yes" xml:space="preserve">
          <source>So far we have seen some of the Telemetry events common to Phoenix applications, along with some examples of their various measurements and metadata. With all of this data just waiting to be consumed, let's talk about reporters.</source>
          <target state="translated">지금까지 다양한 측정 및 메타 데이터의 몇 가지 예와 함께 Phoenix 애플리케이션에 공통적 인 원격 측정 이벤트 중 일부를 살펴 보았습니다. 이 모든 데이터가 소비되기를 기다리고 있으므로 기자에 대해 이야기합시다.</target>
        </trans-unit>
        <trans-unit id="6c83ac72ddfb660ecd5c109994b440904cbc16c5" translate="yes" xml:space="preserve">
          <source>So far, Phoenix has taken care of putting everything in place and rendering views for us. However, we can also render views directly.</source>
          <target state="translated">지금까지 Phoenix는 모든 것을 제자리에 배치하고 뷰를 렌더링하는 작업을 처리했습니다. ㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 그러나 뷰를 직접 렌더링 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="efca62250461511b076bae23e2ce1bfca52d9fb3" translate="yes" xml:space="preserve">
          <source>So far, so good, but does it work?</source>
          <target state="translated">지금까지는 훌륭하지만 작동합니까?</target>
        </trans-unit>
        <trans-unit id="b3cde60346758cf7848c88a017ad144fce11f60b" translate="yes" xml:space="preserve">
          <source>So far, we've built pages, wired up controller actions through our routers, and learned how Ecto allows data to be validated and persisted. Now it's time to tie it all together by writing web-facing features that interact with our greater Elixir application.</source>
          <target state="translated">지금까지 페이지를 구축하고 라우터를 통해 컨트롤러 작업을 연결했으며 Ecto가 데이터의 유효성을 검사하고 유지하는 방법을 배웠습니다. 이제 더 큰 Elixir 응용 프로그램과 상호 작용하는 웹 지향 기능을 작성하여 모든 것을 하나로 묶을 때입니다.</target>
        </trans-unit>
        <trans-unit id="0791af6a9061b0bd9104c3318c0999563ce5a7b3" translate="yes" xml:space="preserve">
          <source>So in order to avoid new lines provided by the user from being ignored when the form is resubmitted, we automatically add a new line before the text area value.</source>
          <target state="translated">따라서 양식을 다시 제출할 때 사용자가 제공 한 새 행이 무시되지 않도록 텍스트 영역 값 앞에 새 행을 자동으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6e47878c43698d7f3037f5afba76f06e77b881d8" translate="yes" xml:space="preserve">
          <source>So on first render, the following callbacks will be invoked:</source>
          <target state="translated">따라서 첫 번째 렌더링에서 다음 콜백이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="30e4e0636ef80614c6a204a9f77fd4fa5e406c3a" translate="yes" xml:space="preserve">
          <source>So the custom type does need to handle the conversion from external data to runtime data (&lt;a href=&quot;#c:cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt;) as well as transforming that runtime data into the &lt;code&gt;:map&lt;/code&gt; Ecto native type and back (&lt;a href=&quot;#c:dump/1&quot;&gt;&lt;code&gt;dump/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c:load/1&quot;&gt;&lt;code&gt;load/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">따라서 사용자 정의 유형은 외부 데이터에서 런타임 데이터 ( &lt;a href=&quot;#c:cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt; ) 로의 변환을 처리하고 해당 런타임 데이터를 &lt;code&gt;:map&lt;/code&gt; Ecto 기본 유형 으로 변환하고 ( &lt;a href=&quot;#c:dump/1&quot;&gt; &lt;code&gt;dump/1&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#c:load/1&quot;&gt; &lt;code&gt;load/1&lt;/code&gt; &lt;/a&gt; ) 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f6d61673c056f0d9b6ae9f15c5366544e2df8ce" translate="yes" xml:space="preserve">
          <source>Socket Behaviour</source>
          <target state="translated">소켓 동작</target>
        </trans-unit>
        <trans-unit id="ce8db0a6f5c8a561689e5b447b552eb7713259e8" translate="yes" xml:space="preserve">
          <source>Socket Fields</source>
          <target state="translated">소켓 필드</target>
        </trans-unit>
        <trans-unit id="71e32d448a3d576193b708bcfd66b979cebaa038" translate="yes" xml:space="preserve">
          <source>Socket IDs are topics that allow you to identify all sockets for a given user:</source>
          <target state="translated">소켓 ID는 주어진 사용자에 대한 모든 소켓을 식별 할 수있는 주제입니다.</target>
        </trans-unit>
        <trans-unit id="c3497bc7ef561824cf3d270e2a939d9fd8de8f0c" translate="yes" xml:space="preserve">
          <source>Socket connections</source>
          <target state="translated">소켓 연결</target>
        </trans-unit>
        <trans-unit id="fcd871ca1e2946874651dc3c49f23c0f8ab2d9ce" translate="yes" xml:space="preserve">
          <source>Socket fields</source>
          <target state="translated">소켓 필드</target>
        </trans-unit>
        <trans-unit id="2c066e895961b889ac1d641af69e732ed7a3dfb8" translate="yes" xml:space="preserve">
          <source>Socket handlers are mounted in Endpoints and must define two callbacks:</source>
          <target state="translated">소켓 핸들러는 엔드 포인트에 마운트되며 두 개의 콜백을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="26c7d7e3cabe08ea953e3c1dee57cd02065df6e1" translate="yes" xml:space="preserve">
          <source>Socket params and assigns</source>
          <target state="translated">소켓 매개 변수 및 할당</target>
        </trans-unit>
        <trans-unit id="d3298d773701ba60ff3b0ed43b4a56d5ce41b6c4" translate="yes" xml:space="preserve">
          <source>Socket params are passed from the client and can be used to verify and authenticate a user. After verification, you can put default assigns into the socket that will be set for all channels, ie</source>
          <target state="translated">소켓 매개 변수는 클라이언트에서 전달되며 사용자를 확인하고 인증하는 데 사용될 수 있습니다. 확인 후 모든 채널에 대해 설정 될 소켓에 기본 할당을 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4451e4b0bc65dbc1e28eb76c83f0fed8fe83ed4" translate="yes" xml:space="preserve">
          <source>Socket transport for long poll clients.</source>
          <target state="translated">긴 폴링 클라이언트를위한 소켓 전송.</target>
        </trans-unit>
        <trans-unit id="dfffadfddf7c3296669cff7822b6c0bbfa4c059d" translate="yes" xml:space="preserve">
          <source>Socket transport for websocket clients.</source>
          <target state="translated">웹 소켓 클라이언트를위한 소켓 전송.</target>
        </trans-unit>
        <trans-unit id="659ec7a0e44b1e98288c982fc69284240ea4c909" translate="yes" xml:space="preserve">
          <source>Sockets are operated by a transport. When a transport is defined, it usually receives a socket module and the module will be invoked when certain events happen at the transport level.</source>
          <target state="translated">소켓은 전송에 의해 작동됩니다. 전송이 정의되면 일반적으로 소켓 모듈을 수신하고 전송 수준에서 특정 이벤트가 발생할 때 모듈이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="43df9a6501aafdc4a5241768cdf8869bfadda28e" translate="yes" xml:space="preserve">
          <source>Some abstractions would force you to define some sort of polymorphic association with two fields in your database:</source>
          <target state="translated">일부 추상화는 데이터베이스의 두 필드와 일종의 다형성 연관을 정의하도록 강제합니다.</target>
        </trans-unit>
        <trans-unit id="365899add53094029b4e1b37974677c0d55477dc" translate="yes" xml:space="preserve">
          <source>Some databases support deferred constraints, i.e., constraints which are checked at the end of the transaction rather than at the end of each statement.</source>
          <target state="translated">일부 데이터베이스는 지연된 제한 조건, 즉 각 명령문의 끝이 아닌 트랜잭션의 끝에서 점검되는 제한 조건을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ca11a570261843c9e308cec1aa0b8a90d4b7a089" translate="yes" xml:space="preserve">
          <source>Some other examples:</source>
          <target state="translated">다른 예 :</target>
        </trans-unit>
        <trans-unit id="5318e50e08db16692441e24f9e4afd433620cdcc" translate="yes" xml:space="preserve">
          <source>Sometimes it is preferable to not store the private key on disk at all. Instead, the private key might be passed to the application using an environment variable or retrieved from a key store such as Vault.</source>
          <target state="translated">때로는 개인 키를 디스크에 전혀 저장하지 않는 것이 좋습니다. 대신 개인 키는 환경 변수를 사용하여 애플리케이션에 전달되거나 Vault와 같은 키 저장소에서 검색 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5913001b57852706913419ef5a93b665b06a52a3" translate="yes" xml:space="preserve">
          <source>Sometimes it may be tricky to determine if two resources belong to the same context or not. In those cases, prefer distinct contexts per resource and refactor later if necessary. Otherwise you can easily end-up with large contexts of loosely related entities. Also keep in mind that the fact two resources are related does not necessarily mean they belong to the same context, otherwise you would quickly end-up with one large context, as the majority of resources in an application are connected to each other. To sum it up: if you are unsure, you should prefer explicit modules (contexts) between resources.</source>
          <target state="translated">때로는 두 리소스가 동일한 컨텍스트에 속하는지 확인하기가 까다로울 수 있습니다. 이 경우 리소스별로 고유 한 컨텍스트를 선호하고 필요한 경우 나중에 리팩터링하십시오. 그렇지 않으면 느슨하게 관련된 엔터티의 대규모 컨텍스트로 쉽게 끝날 수 있습니다. 또한 두 리소스가 관련되어 있다는 사실이 반드시 동일한 컨텍스트에 속함을 의미하는 것은 아닙니다. 그렇지 않으면 애플리케이션의 대부분의 리소스가 서로 연결되어 있으므로 하나의 큰 컨텍스트로 빠르게 끝날 것입니다. 요약하자면, 확실하지 않은 경우 리소스간에 명시 적 모듈 (컨텍스트)을 선호해야합니다.</target>
        </trans-unit>
        <trans-unit id="3ca6500c14086df6d1af4feac56d17e052d08ced" translate="yes" xml:space="preserve">
          <source>Sometimes we may want to generate a &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; or any other tag outside of a form. The functions in this module also support such usage by simply passing an atom as first argument instead of the form.</source>
          <target state="translated">때로는 &lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt; 또는 폼 외부의 다른 태그 를 생성하려고 할 수 있습니다 . 이 모듈의 함수는 또한 아톰을 폼 대신 첫 번째 인수로 전달하여 이러한 사용법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="da88f0784945ca0d776a5f27b25b385622cd33d8" translate="yes" xml:space="preserve">
          <source>Sometimes when displaying a metric, the value label may need to be transformed to improve readability. Take for example the following metric that displays the duration of the each LiveView's &lt;code&gt;mount/3&lt;/code&gt; callback by &lt;code&gt;connected?&lt;/code&gt; status.</source>
          <target state="translated">메트릭을 표시 할 때 가독성을 높이기 위해 값 레이블을 변환해야하는 경우가 있습니다. 예를 들어 &lt;code&gt;connected?&lt;/code&gt; 의한 각 LiveView의 &lt;code&gt;mount/3&lt;/code&gt; 콜백 기간을 표시하는 다음 측정 항목을 살펴 보겠습니다 . 상태.</target>
        </trans-unit>
        <trans-unit id="78254dfb54f129d1d3abccd68e001b90de9bad56" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">때로는 내부 &lt;code&gt;socket.topic&lt;/code&gt; 외에도 소켓을 외부 주제에 프로그래밍 방식으로 구독해야 할 수도 있습니다 . 예를 들어 원격 클라이언트가 입찰 알림을 받고자하는 제품에 대한 환경 설정을 동적으로 설정하는 입찰 시스템이 있다고 가정 해보십시오. 고유 한 채널 프로세스와 선호도 별 주제를 요구하는 대신 더 효율적이고 간단한 접근 방식은 엔드 포인트를 통해 관련 알림에 단일 채널을 구독하는 것입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="f12506ae9375b0c2f497ee7bafe9b9fbba8626a5" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">때로는 내부 &lt;code&gt;socket.topic&lt;/code&gt; 외에도 외부 주제에 소켓을 프로그래밍 방식으로 구독해야 할 수도 있습니다 . 예를 들어, 원격 클라이언트가 입찰 알림을 수신하려는 제품에 대한 환경 설정을 동적으로 설정하는 입찰 시스템이 있다고 가정하십시오. 고유 한 채널 프로세스 및 선호 사항 당 주제를 요구하는 대신,보다 효율적이고 간단한 방법은 엔드 포인트를 통해 단일 채널을 관련 알림에 구독하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5c39a1a34f3190a4e116f58e40087a04eff55fbd" translate="yes" xml:space="preserve">
          <source>Sometimes you may want a single Ecto repository to talk to many different database instances. By default, when you call &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt;, it will start a repository with name &lt;code&gt;MyApp.Repo&lt;/code&gt;. But if you want to start multiple repositories, you can give each of them a different name:</source>
          <target state="translated">때로는 단일 Ecto 저장소가 여러 데이터베이스 인스턴스와 통신하기를 원할 수 있습니다. 당신이 전화를 기본적으로 &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt; , 그것은 이름을 가진 저장소가 시작됩니다 &lt;code&gt;MyApp.Repo&lt;/code&gt; 을 . 그러나 여러 저장소를 시작하려면 각 저장소에 다른 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb98739576cc374632c2a09c6868c93331dba1aa" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a parser reads the body from the connection. For example, you may want to cache the body to perform verification later, such as HTTP Signature Verification. This can be achieved with a custom body reader that would read the body and store it in the connection, such as:</source>
          <target state="translated">때때로 구문 분석기가 연결에서 본문을 읽는 방법을 사용자 정의 할 수 있습니다. 예를 들어 HTTP 서명 확인과 같이 나중에 확인을 수행하기 위해 본문을 캐시 할 수 있습니다. 이것은 다음과 같이 본문을 읽고 연결에 저장하는 맞춤형 본문 판독기를 사용하여 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bee18a6f85fe70265dd2112210c0f92b124fa91e" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a route behaves during dispatch. This can be done by accessing the &lt;code&gt;opts&lt;/code&gt; variable inside the route:</source>
          <target state="translated">때로는 디스패치 중에 라우트가 작동하는 방식을 사용자 정의 할 수 있습니다. 경로 내에서 &lt;code&gt;opts&lt;/code&gt; 변수 에 액세스하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="57695e6a0ad690f3839c3c458acee10d3ef2f104" translate="yes" xml:space="preserve">
          <source>Spawns a connected LiveView process mounted in isolation as the sole rendered element.</source>
          <target state="translated">단독으로 렌더링 된 요소로 분리되어 마운트 된 연결된 LiveView 프로세스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3d873a08280075d1d844eff015630ed561f7214d" translate="yes" xml:space="preserve">
          <source>Spawns a connected LiveView process.</source>
          <target state="translated">연결된 LiveView 프로세스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b58df17aaf2c2fd278d4f2fead7fc6caf5b5a7b6" translate="yes" xml:space="preserve">
          <source>Special Considerations</source>
          <target state="translated">특별 고려 사항</target>
        </trans-unit>
        <trans-unit id="aa67403b7f992c15b19fceea8ba389d87283c89d" translate="yes" xml:space="preserve">
          <source>Specification for session stores.</source>
          <target state="translated">세션 저장소에 대한 사양</target>
        </trans-unit>
        <trans-unit id="93962ecd7513a0e8dedab96e5494d4e71a85820a" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers</source>
          <target state="translated">웹 서버가 구현 한 연결 어댑터 API 사양</target>
        </trans-unit>
        <trans-unit id="8c21a5512c1d500b4e3bffdba45c1ac3cbd76fc9" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers.</source>
          <target state="translated">웹 서버에 의해 구현 된 연결 어댑터 API의 사양.</target>
        </trans-unit>
        <trans-unit id="662bce5f894d0b8716db365e0a7c21cf98224a81" translate="yes" xml:space="preserve">
          <source>Specification to implement a custom PubSub adapter.</source>
          <target state="translated">커스텀 PubSub 어댑터를 구현하기위한 사양입니다.</target>
        </trans-unit>
        <trans-unit id="06b1405ff71558191ac1ba8cbd0d31a2429ee631" translate="yes" xml:space="preserve">
          <source>Specifies the API for adding custom template engines into Phoenix.</source>
          <target state="translated">사용자 지정 템플릿 엔진을 Phoenix에 추가하기위한 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ae4da6d464094a11a257778d0bd2d7402189cc86" translate="yes" xml:space="preserve">
          <source>Specifies the adapter storage API.</source>
          <target state="translated">어댑터 스토리지 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="23d851285a99e6b319346c3a2a806860a7a756b3" translate="yes" xml:space="preserve">
          <source>Specifies the adapter transactions API.</source>
          <target state="translated">어댑터 트랜잭션 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="574a225935448a3b5783969d2155a7104be5b213" translate="yes" xml:space="preserve">
          <source>Specifies the minimal API required from adapters.</source>
          <target state="translated">어댑터에 필요한 최소 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="323dcc74c0661608c4ff58df91ef59dcdbb6402c" translate="yes" xml:space="preserve">
          <source>Specifies the query API required from adapters.</source>
          <target state="translated">어댑터에서 필요한 조회 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a42ccb23437e0306fbc55a97042f6087bc6900c8" translate="yes" xml:space="preserve">
          <source>Specifies the schema API required from adapters.</source>
          <target state="translated">어댑터에 필요한 스키마 API를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="acf7976eaa2a183ab2459a4d7b272d56d0678d47" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;read_after_writes: true&lt;/code&gt; in your schema for choosing fields that are read from the database after every operation. Or pass &lt;code&gt;returning: true&lt;/code&gt; to &lt;code&gt;insert&lt;/code&gt; to read all fields back:</source>
          <target state="translated">모든 조작 후 데이터베이스에서 읽을 필드를 선택하기 위해 스키마에서 &lt;code&gt;read_after_writes: true&lt;/code&gt; 를 지정 하십시오. 또는 모든 필드를 다시 읽 도록 &lt;code&gt;insert&lt;/code&gt; 하려면 &lt;code&gt;returning: true&lt;/code&gt; 를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="425abcb3fa216c718977c7117020fb893407d770" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">사용하는 응용 프로그램 내 존재 모듈 정의하여 시작 &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; 을&lt;/a&gt; 하고 제공 &lt;code&gt;:otp_app&lt;/code&gt; 구성을 보유하고,뿐만 아니라 &lt;code&gt;:pubsub_server&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="9aeb6c896025284c2220fec468d5df1f53bee18c" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;phoenix.presence#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">사용하는 응용 프로그램 내 존재 모듈 정의하여 시작 &lt;a href=&quot;phoenix.presence#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; 을&lt;/a&gt; 하고 제공 &lt;code&gt;:otp_app&lt;/code&gt; 구성을 보유하고,뿐만 아니라 &lt;code&gt;:pubsub_server&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="36627c2aab29ab6e532f5e3d195bb1087b2dd53b" translate="yes" xml:space="preserve">
          <source>Starting With Generators</source>
          <target state="translated">발전기로 시작</target>
        </trans-unit>
        <trans-unit id="a0e558f1d578a0b0bbe5b2674d9f1be49c54327d" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection</source>
          <target state="translated">연결에서 키에 값을 할당하는 작업을 시작합니다</target>
        </trans-unit>
        <trans-unit id="5b7daad4b6fff18a4b4bc540bde997e7392379ff" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection.</source>
          <target state="translated">연결에서 키에 값을 할당하는 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="04f1da3ebc9ca839c95f8f179871511231ce4fd1" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done</source>
          <target state="translated">연결 풀링 또는 감독을 시작하고 &lt;code&gt;{:ok, pid}&lt;/code&gt; 또는 아무것도 수행하지 않아도되는 경우 &lt;code&gt;:ok&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f79a24140d5b97d1763dd99ca8ad2521906cc980" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done.</source>
          <target state="translated">연결 풀링 또는 감독을 시작하고 수행 할 필요가없는 경우 &lt;code&gt;{:ok, pid}&lt;/code&gt; 또는 그냥 &lt;code&gt;:ok&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dbcf0ce19d7f72817408d1b66fce3e46bfbcca2f" translate="yes" xml:space="preserve">
          <source>Starts endpoint&amp;rsquo;s configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">엔드 포인트의 구성 캐시와 요청 처리를위한 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e3a54eb716a9c3cdfe4b9a7ad4cee9354a40712d" translate="yes" xml:space="preserve">
          <source>Starts endpoint's configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">요청을 처리하기 위해 엔드 포인트의 구성 캐시 및 가능하면 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ae77342fe2af2cc246a241cebd3e89697a20ce7d" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree</source>
          <target state="translated">엔드 포인트 감독 트리를 시작합니다</target>
        </trans-unit>
        <trans-unit id="03f88e6163759407a0545e07892ca337d17fb9a4" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree.</source>
          <target state="translated">엔드 포인트 감독 트리를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="05c0daa7470b7dd485d073925efda89a62e524df" translate="yes" xml:space="preserve">
          <source>Starts the application by configuring all endpoints servers to run.</source>
          <target state="translated">실행할 모든 엔드 포인트 서버를 구성하여 애플리케이션을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="13005fdc1263d7b288dd9b04fe58b326107c112c" translate="yes" xml:space="preserve">
          <source>Starts the endpoint supervision tree.</source>
          <target state="translated">엔드 포인트 감독 트리를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="fe39de33b591bfb6bcb3deb612aa31421a0a6d36" translate="yes" xml:space="preserve">
          <source>Starts the server</source>
          <target state="translated">서버를 시작합니다</target>
        </trans-unit>
        <trans-unit id="bb0ca4e227518b7b5cc054b544be753f6cb2b6a2" translate="yes" xml:space="preserve">
          <source>Starts the server.</source>
          <target state="translated">서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="d34d7622ebcade9f9b5155dfd196d5e29fe82811" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server</source>
          <target state="translated">업로드 처리 서버를 시작합니다</target>
        </trans-unit>
        <trans-unit id="59489acfbc0005766722394416981887c2b45cf6" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server.</source>
          <target state="translated">업로드 처리 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="98ca6a6b05fbb33c6ebc3102b6ec341dd2e220c1" translate="yes" xml:space="preserve">
          <source>Stateful components are identified by the component module and their ID. Therefore, two different component modules with the same ID are different components. This means we can often tie the component ID to some application based ID:</source>
          <target state="translated">상태 저장 구성 요소는 구성 요소 모듈과 해당 ID로 식별됩니다. 따라서 동일한 ID를 가진 두 개의 서로 다른 구성 요소 모듈은 서로 다른 구성 요소입니다. 즉, 구성 요소 ID를 일부 응용 프로그램 기반 ID에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="943fc7065d566a5c3951630f9ef155baabe360c1" translate="yes" xml:space="preserve">
          <source>Stateful components can also implement the &lt;a href=&quot;#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; callback that works exactly the same as in LiveView. For a client event to reach a component, the tag must be annotated with a &lt;code&gt;phx-target&lt;/code&gt;. If you want to send the event to yourself, you can simply use the &lt;code&gt;@myself&lt;/code&gt; assign, which is an &lt;em&gt;internal unique reference&lt;/em&gt; to the component instance:</source>
          <target state="translated">상태 저장 구성 요소는 LiveView에서와 똑같이 작동 하는 &lt;a href=&quot;#c:handle_event/3&quot;&gt; &lt;code&gt;handle_event/3&lt;/code&gt; &lt;/a&gt; 콜백을 구현할 수도 있습니다 . 클라이언트 이벤트가 구성 요소에 도달하려면 태그에 &lt;code&gt;phx-target&lt;/code&gt; 으로 주석을 달아야 합니다. 자신에게 이벤트를 보내려면 구성 요소 인스턴스에 대한 &lt;em&gt;내부 고유 참조 인 &lt;/em&gt; &lt;code&gt;@myself&lt;/code&gt; 할당을 사용하면 됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85f5667d6346cb1d9f2cfae9d4b0cf8e7e77a786" translate="yes" xml:space="preserve">
          <source>Stateful components life-cycle</source>
          <target state="translated">상태 저장 구성 요소 수명주기</target>
        </trans-unit>
        <trans-unit id="79e3c6e991cdd5cdd5d9b4459bc8d600b63c228e" translate="yes" xml:space="preserve">
          <source>Stateless components life-cycle</source>
          <target state="translated">상태 비 저장 구성 요소 수명주기</target>
        </trans-unit>
        <trans-unit id="f9ef14ce4d16dc528341a2c579120765c5772ff7" translate="yes" xml:space="preserve">
          <source>Stop tracking a channel's process.</source>
          <target state="translated">채널의 프로세스 추적을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="4a58f463b521a331812c7340cc2eaa6fb7aec040" translate="yes" xml:space="preserve">
          <source>Stop tracking a process.</source>
          <target state="translated">프로세스 추적을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="cb95290f3e237b98634fde98df7f64003f647f47" translate="yes" xml:space="preserve">
          <source>Stores metadata of a struct.</source>
          <target state="translated">구조체의 메타 데이터를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="13696602150188b92bcbb9de1c78c62048beb623" translate="yes" xml:space="preserve">
          <source>Stores subquery information.</source>
          <target state="translated">하위 쿼리 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e21ecec1414d0590ee874d09ffbfacfe188ffd3b" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection</source>
          <target state="translated">주어진 상태 코드를 연결에 저장</target>
        </trans-unit>
        <trans-unit id="c1f39eb0958f7137f6ff09d4f5e228918ad2517e" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection.</source>
          <target state="translated">주어진 상태 코드를 연결에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="38f6cce826fac3c33ab9244e079a3a806aad671a" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering</source>
          <target state="translated">렌더링을위한 레이아웃을 저장합니다</target>
        </trans-unit>
        <trans-unit id="44a511d7881bc48902e485e8cef69c3184112cca" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet</source>
          <target state="translated">아직 저장하지 않은 경우 렌더링을위한 레이아웃을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d4447aa8196bd52c99b44a3f461e9a0c6a8e4f24" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet.</source>
          <target state="translated">렌더링을위한 레이아웃을 아직 저장하지 않은 경우 저장합니다.</target>
        </trans-unit>
        <trans-unit id="fe1f14bafc132a296718c9bf7c3aa8d7ee1a4892" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering.</source>
          <target state="translated">렌더링을위한 레이아웃을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a58b520dcd2f8f3484f39ecd049969a062130a5d" translate="yes" xml:space="preserve">
          <source>Stores the root layout for rendering.</source>
          <target state="translated">렌더링을위한 루트 레이아웃을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d2499f2f97aaac5c6a4106688dd5926525b5161f" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id</source>
          <target state="translated">주어진 세션 ID와 관련된 세션을 저장합니다</target>
        </trans-unit>
        <trans-unit id="b5f30bb51a27d5e5c9883d8a8bfea71b75448550" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id.</source>
          <target state="translated">주어진 세션 ID와 연관된 세션을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="8d7514a1fd361b438f0dc122dc301f9e889c8d5d" translate="yes" xml:space="preserve">
          <source>Stores the session in a cookie.</source>
          <target state="translated">쿠키에 세션을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="03d905412bbe2c82c304b3383bfdfba9329c96c3" translate="yes" xml:space="preserve">
          <source>Stores the session in an in-memory ETS table.</source>
          <target state="translated">세션을 메모리 내 ETS 테이블에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="8f72ad9daeeff4d9baca2bd6929f5a7531645f3b" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change</source>
          <target state="translated">유효성 검사 &lt;code&gt;metadata&lt;/code&gt; 저장하고 지정된 &lt;code&gt;field&lt;/code&gt; 변경을 유효성 검사합니다</target>
        </trans-unit>
        <trans-unit id="968dd6eda848310ed9d09eb97512cb82b641d047" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change.</source>
          <target state="translated">유효성 검사 &lt;code&gt;metadata&lt;/code&gt; 저장하고 지정된 &lt;code&gt;field&lt;/code&gt; 변경을 유효성 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="52d2b56e1a53d98739305b2938ad7d1bce7e6d45" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering</source>
          <target state="translated">렌더링을위한 뷰를 저장합니다</target>
        </trans-unit>
        <trans-unit id="08b34341b166965c032c307af7cd997af4e4274f" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet</source>
          <target state="translated">뷰가 아직 저장되지 않은 경우 렌더링을 위해 뷰를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a0f8dab1413ae13607334c46326f1ae3400b89ca" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet.</source>
          <target state="translated">뷰가 아직 저장되지 않은 경우 렌더링을 위해 뷰를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="14870e3b5dd83d56e16e75cb2089322baeeb8568" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering.</source>
          <target state="translated">렌더링 할 뷰를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="45931e30fa075a4b9ed49a51fa8adee528c6580f" translate="yes" xml:space="preserve">
          <source>Strategies for cross-context workflows</source>
          <target state="translated">컨텍스트 간 워크 플로를위한 전략</target>
        </trans-unit>
        <trans-unit id="c3f496380c040f77fae6d0272d93930122999072" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query</source>
          <target state="translated">이전에 준비된 쿼리를 스트리밍</target>
        </trans-unit>
        <trans-unit id="3501f11bb258ecc0cbfd49dd264bd6b9c0a2fbd3" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query.</source>
          <target state="translated">이전에 준비된 쿼리를 스트리밍합니다.</target>
        </trans-unit>
        <trans-unit id="01b0b95c5902c4eba4fd8ac0fa3bcdfa9327e36b" translate="yes" xml:space="preserve">
          <source>Strings: &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt;, &lt;code&gt;~s(this is a string)&lt;/code&gt;</source>
          <target state="translated">문자열 : &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt; , &lt;code&gt;~s(this is a string)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94e56f9c7abe8770247628846d04bea10f7cd815" translate="yes" xml:space="preserve">
          <source>Struct for socket.assigns while rendering.</source>
          <target state="translated">렌더링하는 동안 socket.assigns의 구조.</target>
        </trans-unit>
        <trans-unit id="4d224d61643a39a4962579d1f48e5eeed4e12b15" translate="yes" xml:space="preserve">
          <source>Struct returned by associations when they are not loaded.</source>
          <target state="translated">연결이로드되지 않은 경우 연관이 리턴 한 구조입니다.</target>
        </trans-unit>
        <trans-unit id="25f57ecf7083fcb5184876a5d2f3f856041dba67" translate="yes" xml:space="preserve">
          <source>Struct used for logging entries.</source>
          <target state="translated">항목을 기록하는 데 사용되는 구조.</target>
        </trans-unit>
        <trans-unit id="c79a8485fa7523df8365330c835750e74643b0a4" translate="yes" xml:space="preserve">
          <source>Submitting the form action over HTTP</source>
          <target state="translated">HTTP를 통해 양식 조치 제출</target>
        </trans-unit>
        <trans-unit id="f3d62142352d12e869d2bfc88d72b68c4bcade9c" translate="yes" xml:space="preserve">
          <source>Subqueries are currently only supported in the &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; fields.</source>
          <target state="translated">하위 쿼리는 현재에서만 지원됩니다 &lt;code&gt;from&lt;/code&gt; 와 &lt;code&gt;join&lt;/code&gt; 필드.</target>
        </trans-unit>
        <trans-unit id="63844850c088c1e41377067736b623f102b7fb1e" translate="yes" xml:space="preserve">
          <source>Subquery can also be used in a &lt;code&gt;join&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;join&lt;/code&gt; 식에서 하위 쿼리를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a16a28f51515abb3ed23ddfbd71c229b425f64e4" translate="yes" xml:space="preserve">
          <source>Subquery operators: &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt; and &lt;code&gt;exists&lt;/code&gt;</source>
          <target state="translated">하위 쿼리 연산자 : &lt;code&gt;any&lt;/code&gt; , &lt;code&gt;all&lt;/code&gt; 및 &lt;code&gt;exists&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f736150f2e074a22ead83dcf3dd8dc239fcdf5a" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic</source>
          <target state="translated">호출자를 PubSub 어댑터의 주제에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="50fd989211bc229d515632d14f3ae08584891447" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic.</source>
          <target state="translated">호출자를 PubSub 어댑터의 주제에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="8180ff8882fe43143269f06ada06be7291b3a91d" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter's topic.</source>
          <target state="translated">호출자를 PubSub 어댑터의 주제에 구독합니다.</target>
        </trans-unit>
        <trans-unit id="0f7820628e3c2c90b1707fb8c99222b97a355f14" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic</source>
          <target state="translated">주어진 주제에 발신자를 구독</target>
        </trans-unit>
        <trans-unit id="ca915041edbd919564fcfda571e153ced9e140ff" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic.</source>
          <target state="translated">발신자를 지정된 주제에 가입시킵니다.</target>
        </trans-unit>
        <trans-unit id="d5a4ec85d0d7c78af495961dd1c6901510edd509" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic</source>
          <target state="translated">주제에 pid를 구독</target>
        </trans-unit>
        <trans-unit id="c9d68c17cbbbd09344558cb7a8a42d8bcb73dc0a" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic.</source>
          <target state="translated">pid를 주제에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="81fb714bc39d524ea01b4a9e05095ad6d574bf09" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload</source>
          <target state="translated">주어진 주제를 구독하고 주어진 주제 및 페이로드에서 채널에 참여</target>
        </trans-unit>
        <trans-unit id="ea4e3ab0ff72e4151f4050d7eb16dd17b07a2093" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload.</source>
          <target state="translated">주어진 주제를 구독하고 주어진 주제 및 페이로드 아래 채널에 참여합니다.</target>
        </trans-unit>
        <trans-unit id="aae12d55adc496ed2380985ca3dfdd4bfb6a021e" translate="yes" xml:space="preserve">
          <source>Subscribing to external topics</source>
          <target state="translated">외부 주제 구독</target>
        </trans-unit>
        <trans-unit id="56c74c3880af80af2ab03c8135c1200b420fc782" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC</source>
          <target state="translated">UTC로 현재 시간에서 주어진 간격을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="451a00abcc42f5e6f995d27c0b6a7af19b580234" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC.</source>
          <target state="translated">UTC로 현재 시간에서 주어진 간격을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="1ac3ce0208da6a86296e45e27cd74061800554e3" translate="yes" xml:space="preserve">
          <source>Such allows developers to write queries using bindings only in more complex query expressions.</source>
          <target state="translated">이를 통해 개발자는보다 복잡한 쿼리 표현식에서만 바인딩을 사용하여 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6e2150503cfdddffd579e84eb195842a0ed309f" translate="yes" xml:space="preserve">
          <source>Such cases will be explicitly documented as well as any extra option.</source>
          <target state="translated">이러한 경우는 추가 옵션뿐만 아니라 명시 적으로 문서화됩니다.</target>
        </trans-unit>
        <trans-unit id="50124ed41dfb05f2530c51e775a800383a6b00d5" translate="yes" xml:space="preserve">
          <source>Such function receives the changeset and must return a changeset, allowing developers to do final adjustments to the changeset or to issue data consistency commands.</source>
          <target state="translated">이러한 기능은 변경 세트를 수신하고 변경 세트를 리턴하여 개발자가 변경 세트를 최종 조정하거나 데이터 일관성 명령을 실행할 수 있도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="23c18ef6e8fd8883f3f4e7f89080b810f7cfc463" translate="yes" xml:space="preserve">
          <source>Such functionality makes Ecto extremely useful to cast, validate and prune data even if it is not meant to be persisted to the database.</source>
          <target state="translated">이러한 기능을 통해 Ecto는 데이터가 데이터베이스에 유지되지 않아도 데이터를 캐스트, 유효성 검사 및 제거하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6b9e8b1f0c2164b70c31da5ac6e2eec9b106f2b0" translate="yes" xml:space="preserve">
          <source>Such transformations are defined via plugs, as defined in the &lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; specification. Once a pipeline is defined, it can be piped through per scope.</source>
          <target state="translated">이러한 변환은 &lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;플러그&lt;/a&gt; 사양에 정의 된대로 플러그를 통해 정의됩니다 . 파이프 라인이 정의되면 범위별로 파이프 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="7154b2f71294d8b9887ef951f46556c9be3650d1" translate="yes" xml:space="preserve">
          <source>Supported attributes for configuring the defined schema. They must be set after the &lt;code&gt;use Ecto.Schema&lt;/code&gt; call and before the &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">정의 된 스키마 구성에 지원되는 속성입니다. &lt;code&gt;use Ecto.Schema&lt;/code&gt; 호출 후 &lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt; 정의 전에 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f341132e53d4cf0ae3e38d6cb0bb2af57a08b5a5" translate="yes" xml:space="preserve">
          <source>Supported attributes, to be set beforehand, for configuring the defined schema.</source>
          <target state="translated">정의 된 스키마를 구성하기 위해 사전에 설정되는 지원되는 속성.</target>
        </trans-unit>
        <trans-unit id="c5ff84c7e3ceaccb9c98b2f6598a1f8252b42048" translate="yes" xml:space="preserve">
          <source>Supported date values</source>
          <target state="translated">지원되는 날짜 값</target>
        </trans-unit>
        <trans-unit id="ca8d530e21e98d39ae16f271fc7325bc86189c4c" translate="yes" xml:space="preserve">
          <source>Supported time values</source>
          <target state="translated">지원되는 시간 값</target>
        </trans-unit>
        <trans-unit id="9d3f3e9633ea619cf7d3b61bb59849ea6aa4bc12" translate="yes" xml:space="preserve">
          <source>Supports the same options as the &lt;code&gt;phx.new&lt;/code&gt; task. See &lt;a href=&quot;mix.tasks.phx.new&quot;&gt;&lt;code&gt;Mix.Tasks.Phx.New&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;phx.new&lt;/code&gt; 작업 과 동일한 옵션을 지원합니다 . 자세한 내용은 &lt;a href=&quot;mix.tasks.phx.new&quot;&gt; &lt;code&gt;Mix.Tasks.Phx.New&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="11c75646068c02f7f50cd063ddb4f3bd6b8f1c0c" translate="yes" xml:space="preserve">
          <source>TLS Protocol Options</source>
          <target state="translated">TLS 프로토콜 옵션</target>
        </trans-unit>
        <trans-unit id="7b672c250a692c7930dcea47f4f2882d8d6cb220" translate="yes" xml:space="preserve">
          <source>Tag attributes</source>
          <target state="translated">태그 속성</target>
        </trans-unit>
        <trans-unit id="49c2dd06d553be816ddc929d5827b8f4d498973a" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; flag to return lowerCamelCase.</source>
          <target state="translated">선택적인 &lt;code&gt;:lower&lt;/code&gt; 플래그를 사용하여 lowerCamelCase를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7ac4b3291b61ef8c743bfc95248b0fb3f14f2f4d" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; option to return lowerCamelCase.</source>
          <target state="translated">lowerCamelCase를 반환하기 위해 선택적인 &lt;code&gt;:lower&lt;/code&gt; 옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c7c29adf9027dec2f86ef5a16f075c3d628928d4" translate="yes" xml:space="preserve">
          <source>Takes the difference of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">여러 쿼리의 결과 집합의 차이를 가져옵니다. 각 쿼리 의 &lt;code&gt;select&lt;/code&gt; 은 동일한 순서로 동일한 유형으로 정확히 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="c5474cd2cac56f1497f50f85ecd38b5c6c812e93" translate="yes" xml:space="preserve">
          <source>Takes the overlap of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">여러 쿼리의 결과 집합이 겹칩니다. 각 쿼리 의 &lt;code&gt;select&lt;/code&gt; 은 동일한 순서로 동일한 유형으로 정확히 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="3db034b2c134d1803cc0048359b2bec75cc50891" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are</source>
          <target state="translated">널이 아닌 값을 취하거나 둘 다인 경우 널을 취합니다.</target>
        </trans-unit>
        <trans-unit id="385318970f2d6fbd0e9c01294074ec0db698c3bc" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are.</source>
          <target state="translated">널이 아닌 값을 취하거나 둘 다인 경우 널을 취합니다.</target>
        </trans-unit>
        <trans-unit id="b3b8c57740e772fbfade922d8b797cd74dba1963" translate="yes" xml:space="preserve">
          <source>Taking the initial example of users having addresses imagine those addresses are set up to belong to a country. If you want to allow users to bulk edit all addresses that belong to a single country, you can do so by changing the preload query:</source>
          <target state="translated">주소를 가진 사용자의 초기 예를 들어 보면 해당 주소가 국가에 속하도록 설정되어 있다고 상상해보십시오. 사용자가 단일 국가에 속한 모든 주소를 대량으로 편집 할 수있게하려면 사전로드 쿼리를 변경하면됩니다.</target>
        </trans-unit>
        <trans-unit id="7b829a8bd084cbbd11fed6b0c4b3e930aaf5a925" translate="yes" xml:space="preserve">
          <source>Targeting Component Events</source>
          <target state="translated">구성 요소 이벤트 타겟팅</target>
        </trans-unit>
        <trans-unit id="6dd4fe806eb6aa488b589abd5daaa57f324f6077" translate="yes" xml:space="preserve">
          <source>Telemetry</source>
          <target state="translated">Telemetry</target>
        </trans-unit>
        <trans-unit id="7db0d62bb66cca4109cc535277b60d054734c61d" translate="yes" xml:space="preserve">
          <source>Telemetry Events</source>
          <target state="translated">원격 측정 이벤트</target>
        </trans-unit>
        <trans-unit id="d5e31566fc119a3fb202242cb49b826a32c929b4" translate="yes" xml:space="preserve">
          <source>Telemetry events</source>
          <target state="translated">원격 측정 이벤트</target>
        </trans-unit>
        <trans-unit id="a2fabe735bb0a87d551cfeb2c9f79d6381c2becd" translate="yes" xml:space="preserve">
          <source>Telemetry is quickly becoming the de-facto standard for package instrumentation in Elixir. Here is a list of libraries currently emitting &lt;code&gt;:telemetry&lt;/code&gt; events.</source>
          <target state="translated">Telemetry는 Elixir의 패키지 계측을위한 사실상의 표준이되고 있습니다. 다음은 현재 &lt;code&gt;:telemetry&lt;/code&gt; 이벤트를 생성 하는 라이브러리 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="66057e4110476ee266aef488f256efc08a7be93f" translate="yes" xml:space="preserve">
          <source>Telemetry stores events by their name in an ETS table, along with the handler for each event. Then, when a given event is executed, Telemetry looks up its handler and invokes it.</source>
          <target state="translated">Telemetry는 각 이벤트에 대한 핸들러와 함께 이름별로 이벤트를 ETS 테이블에 저장합니다. 그런 다음 주어진 이벤트가 실행되면 Telemetry는 핸들러를 찾아서 호출합니다.</target>
        </trans-unit>
        <trans-unit id="83de0890704eb8fb0a403e0bb80045e46a3e0c37" translate="yes" xml:space="preserve">
          <source>Telemetry.Metrics.ConsoleReporter</source>
          <target state="translated">Telemetry.Metrics.ConsoleReporter</target>
        </trans-unit>
        <trans-unit id="d4ac83b979f38010b10a99b73e1e401a2fec66f9" translate="yes" xml:space="preserve">
          <source>Templates are often rendered inside layouts. By default, Phoenix will render layouts for html requests. For example:</source>
          <target state="translated">템플릿은 종종 레이아웃 내부에 렌더링됩니다. 기본적으로 Phoenix는 html 요청에 대한 레이아웃을 렌더링합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="83df20b5f538ba4bf70930df924ee3e9ff74c9fe" translate="yes" xml:space="preserve">
          <source>Templates are used by Phoenix when rendering responses.</source>
          <target state="translated">응답을 렌더링 할 때 Phoenix에서 템플릿을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="064acb0eabd4a2c305afa47b705ad6352a299f5c" translate="yes" xml:space="preserve">
          <source>Templates can be rendered within other templates using the &lt;code&gt;:layout&lt;/code&gt; option. &lt;code&gt;:layout&lt;/code&gt; accepts a tuple of the form &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:layout&lt;/code&gt; 옵션을 사용하여 다른 템플릿 내에서 템플릿을 렌더링 할 수 있습니다 . &lt;code&gt;:layout&lt;/code&gt; 은 &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt; 형식의 튜플을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="f11c1d1a4fa59b1e8e5007666922499bf61d170c" translate="yes" xml:space="preserve">
          <source>Temporary assigns</source>
          <target state="translated">임시 할당</target>
        </trans-unit>
        <trans-unit id="77517bd07ed49be0dde5e9aa42b90f66aa74f959" translate="yes" xml:space="preserve">
          <source>Terminate</source>
          <target state="translated">Terminate</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="059bc2004050046f69265527d915f12b37ceaf28" translate="yes" xml:space="preserve">
          <source>Testing - in-depth guides about testing</source>
          <target state="translated">테스트-테스트에 대한 심층 가이드</target>
        </trans-unit>
        <trans-unit id="5e12404061fb8f0e7a0186cf61505e566261b30d" translate="yes" xml:space="preserve">
          <source>Testing Events</source>
          <target state="translated">테스트 이벤트</target>
        </trans-unit>
        <trans-unit id="30bde24df09cc9e595122110c4b2223a4b0899f9" translate="yes" xml:space="preserve">
          <source>Testing components</source>
          <target state="translated">구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="ae9ea2d5e15f8034bf2038ee59e46a5ad29f2c63" translate="yes" xml:space="preserve">
          <source>Testing regular messages</source>
          <target state="translated">일반 메시지 테스트</target>
        </trans-unit>
        <trans-unit id="cf28e2a327522d6ff3d688f8ac4b32ee2c8f9807" translate="yes" xml:space="preserve">
          <source>Testing with Presence</source>
          <target state="translated">현재 상태로 테스트</target>
        </trans-unit>
        <trans-unit id="8525247497cae160635c04a5c0a67e8ee5e93c2b" translate="yes" xml:space="preserve">
          <source>Tests whether one or more values returned from the provided subquery match in a comparison operation.</source>
          <target state="translated">제공된 하위 쿼리에서 반환 된 하나 이상의 값이 비교 작업에서 일치하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5d107b2fc9184fd0aa26c9acb96418a6c1a616a1" translate="yes" xml:space="preserve">
          <source>That little &lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt;&lt;code&gt;mix phx.gen.html&lt;/code&gt;&lt;/a&gt; command packed a surprising punch. We got a lot of functionality out-of-the-box for creating, updating, and deleting users. This is far from a full-featured app, but remember, generators are first and foremost learning tools and a starting point for you to begin building real features. Code generation can't solve all your problems, but it will teach you the ins and outs of Phoenix and nudge you towards the proper mind-set when designing your application.</source>
          <target state="translated">그 작은 &lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt; &lt;code&gt;mix phx.gen.html&lt;/code&gt; &lt;/a&gt; 명령은 놀라운 펀치를 포장했습니다. 사용자 생성, 업데이트 및 삭제를위한 많은 기능이 기본 제공됩니다. 이것은 완전한 기능을 갖춘 앱과는 거리가 멀지 만 생성기는 가장 먼저 배우는 도구이며 실제 기능을 구축하기위한 시작점이라는 점을 기억하십시오. 코드 생성은 모든 문제를 해결할 수는 없지만 Phoenix의 기능을 익히고 애플리케이션을 설계 할 때 적절한 사고 방식으로 안내 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="1b7ce032abc31d5af7e26e4d692371eeb0a828f8" translate="yes" xml:space="preserve">
          <source>That little query packed a big punch. It both fetched all user emails from the database and efficiently built a map of the results in one go. You should browse the &lt;a href=&quot;../ecto/ecto.query#content&quot;&gt;Ecto.Query documentation&lt;/a&gt; to see the breadth of supported query features.</source>
          <target state="translated">그 작은 질문이 큰 힘을주었습니다. 데이터베이스에서 모든 사용자 이메일을 가져 왔고 한 번에 결과지도를 효율적으로 구축했습니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 지원되는 쿼리 기능의 폭을 확인 하려면 &lt;a href=&quot;../ecto/ecto.query#content&quot;&gt;Ecto.Query 문서&lt;/a&gt; 를 찾아야 합니다.</target>
        </trans-unit>
        <trans-unit id="ca01fe4f657c54f138e50335aafeba402d65b6cd" translate="yes" xml:space="preserve">
          <source>That looks great. Our callers will have no confusion over what this function does and we can wrap up the increment in an atomic operation to prevent race conditions.</source>
          <target state="translated">멋지네요. 호출자는이 함수가하는 일에 대해 혼동하지 않을 것이며 경쟁 조건을 방지하기 위해 원자 적 연산에서 증분을 래핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8156ef5e951259f89a546e63d960ad64e67f4a98" translate="yes" xml:space="preserve">
          <source>That looks nice. A descriptive name that exposes the intent of our code is best. This function makes it crystal clear what purpose it serves, while allowing our caller to remain blissfully unaware of the internal details. Make the following additions to your &lt;code&gt;lib/hello/accounts.ex&lt;/code&gt; file:</source>
          <target state="translated">멋지네요. 코드의 의도를 드러내는 설명적인 이름이 가장 좋습니다. 이 기능은 그것이 어떤 용도로 사용되는지 명확하게 보여 주면서 호출자가 내부 세부 사항을 알지 못하는 상태로 유지할 수 있도록합니다. &lt;code&gt;lib/hello/accounts.ex&lt;/code&gt; 파일에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="4299eb0f72ea06751b0374f80005eca95a002f5f" translate="yes" xml:space="preserve">
          <source>That was easy! &lt;code&gt;Repo.all/1&lt;/code&gt; takes a data source, our &lt;code&gt;User&lt;/code&gt; schema in this case, and translates that to an underlying SQL query against our database. After it fetches the data, the Repo then uses our Ecto schema to map the database values back into Elixir data-structures according to our &lt;code&gt;User&lt;/code&gt; schema. We're not just limited to basic querying &amp;ndash; Ecto includes a full-fledged query DSL for advanced SQL generation. In addition to a natural Elixir DSL, Ecto's query engine gives us multiple great features, such as SQL injection protection and compile-time optimization of queries. Let's try it out.</source>
          <target state="translated">그것은 쉽다! &lt;code&gt;Repo.all/1&lt;/code&gt; 은이 경우 &lt;code&gt;User&lt;/code&gt; 스키마 인 데이터 소스를 가져 와서 데이터베이스에 대한 기본 SQL 쿼리로 변환합니다. 데이터를 가져온 후 Repo는 Ecto 스키마를 사용하여 데이터베이스 값을 &lt;code&gt;User&lt;/code&gt; 스키마 에 따라 Elixir 데이터 구조로 다시 매핑합니다 . 우리는 기본적인 쿼리에만 국한되지 않습니다. Ecto에는 고급 SQL 생성을위한 완전한 쿼리 DSL이 포함되어 있습니다. 자연스러운 Elixir DSL 외에도 Ecto의 쿼리 엔진은 SQL 주입 보호 및 쿼리의 컴파일 시간 최적화와 같은 여러 가지 훌륭한 기능을 제공합니다. 그것을 시도해 봅시다.</target>
        </trans-unit>
        <trans-unit id="d96a62253a0a940d11d0cbddd714020d577eed67" translate="yes" xml:space="preserve">
          <source>That wraps up our &lt;code&gt;CMS&lt;/code&gt; changes. Now, let's update our web layer to support our additions. Before we update our individual CMS controller actions, we need to make a couple of additions to the &lt;code&gt;CMS.PageController&lt;/code&gt; plug pipeline. First, we must ensure an author exists for end-users accessing the CMS, and we need to authorize access to page owners.</source>
          <target state="translated">이것으로 &lt;code&gt;CMS&lt;/code&gt; 변경을 마쳤습니다 . 이제 추가 기능을 지원하도록 웹 레이어를 업데이트하겠습니다. 개별 CMS 컨트롤러 작업을 업데이트하기 전에 &lt;code&gt;CMS.PageController&lt;/code&gt; 플러그 파이프 라인에 몇 가지를 추가해야합니다 . 먼저 CMS에 액세스하는 최종 사용자를위한 작성자가 있는지 확인하고 페이지 소유자에 대한 액세스 권한을 부여해야합니다.</target>
        </trans-unit>
        <trans-unit id="b81a349b0bab78337582374bd5db34c83cb85969" translate="yes" xml:space="preserve">
          <source>That's a mouthful. Let's see it in action. Run &lt;code&gt;iex -S mix&lt;/code&gt; at the root of the project. When we call the &lt;code&gt;page_path&lt;/code&gt; function on our router helpers with the &lt;code&gt;Endpoint&lt;/code&gt; or connection and action as arguments, it returns the path to us.</source>
          <target state="translated">한입입니다. 실제 동작을 봅시다. 프로젝트의 루트에서 &lt;code&gt;iex -S mix&lt;/code&gt; 를 실행하십시오 . &lt;code&gt;Endpoint&lt;/code&gt; 또는 연결 및 작업을 인수로 사용하여 라우터 도우미 에서 &lt;code&gt;page_path&lt;/code&gt; 함수를 호출 하면 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4e28e598c2a9df40041492019b8b754a69b24d9e" translate="yes" xml:space="preserve">
          <source>That's all there is to Plug. Phoenix embraces the plug design of composable transformations all the way up and down the stack. Let's see some examples!</source>
          <target state="translated">이것이 Plug의 전부입니다. Phoenix는 스택 위아래로 구성 가능한 변환의 플러그 디자인을 수용합니다. 몇 가지 예를 살펴 보겠습니다!</target>
        </trans-unit>
        <trans-unit id="77ca226134ff811575fb9ab965fc65eb585698ab" translate="yes" xml:space="preserve">
          <source>That's it! We're ready to run our migration.</source>
          <target state="translated">그게 다야! 마이그레이션을 실행할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="85714e19d4047e11aa732ce9bb41fd2ea3696d9b" translate="yes" xml:space="preserve">
          <source>That's simple enough. There's only one line, &lt;code&gt;use HelloWeb, :view&lt;/code&gt;. This line calls the &lt;code&gt;view/0&lt;/code&gt; function we just saw above. Besides allowing us to change our template root, &lt;code&gt;view/0&lt;/code&gt; exercises the &lt;code&gt;__using__&lt;/code&gt; macro in the &lt;a href=&quot;phoenix.view&quot;&gt;&lt;code&gt;Phoenix.View&lt;/code&gt;&lt;/a&gt; module. It also handles any module imports or aliases our application's view modules might need.</source>
          <target state="translated">그것은 충분히 간단합니다. 한 줄만 &lt;code&gt;use HelloWeb, :view&lt;/code&gt; . HelloWeb, : view를 사용하십시오 . 이 줄 은 위에서 본 &lt;code&gt;view/0&lt;/code&gt; 함수를 호출합니다 . 우리의 템플릿 루트를 변경할 수 있도록 외에, &lt;code&gt;view/0&lt;/code&gt; 연습 &lt;code&gt;__using__&lt;/code&gt; 의 매크로 &lt;a href=&quot;phoenix.view&quot;&gt; &lt;code&gt;Phoenix.View&lt;/code&gt; 의&lt;/a&gt; 모듈을. 또한 애플리케이션의 뷰 모듈에 필요할 수있는 모든 모듈 가져 오기 또는 별칭을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="48e022a5885231d8982dbfde0267dab94ee7aeeb" translate="yes" xml:space="preserve">
          <source>The &quot;app&quot; and &quot;live&quot; layouts are often small and similar to each other, but the &quot;app&quot; layout uses the &lt;code&gt;@conn&lt;/code&gt; and is used as part of the regular request life-cycle. The &quot;live&quot; layout is part of the LiveView and therefore has direct access to the &lt;code&gt;@socket&lt;/code&gt;.</source>
          <target state="translated">&quot;앱&quot;및 &quot;라이브&quot;레이아웃은 종종 작고 서로 유사하지만 &quot;앱&quot;레이아웃은 &lt;code&gt;@conn&lt;/code&gt; 을 사용하며 일반 요청 수명주기의 일부로 사용됩니다. &quot;라이브&quot;레이아웃은 LiveView의 일부이므로 &lt;code&gt;@socket&lt;/code&gt; 에 직접 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fb157ec7c4ab4b43a8f7610702a11f4abf5a859" translate="yes" xml:space="preserve">
          <source>The &quot;assigns&quot; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">&quot;할당&quot;저장소는 플러그 파이프 라인의 다른 플러그가 액세스 할 수 있도록 연결에 값을 저장하는 데 사용됩니다. 할당 스토리지는 맵입니다.</target>
        </trans-unit>
        <trans-unit id="46c92c474fea56f05073b05b5637a34a85f3e969" translate="yes" xml:space="preserve">
          <source>The &quot;ignore&quot; behaviour is frequently used when you need to integrate with another JS library. The &quot;append&quot; and &quot;prepend&quot; feature is often used with &quot;Temporary assigns&quot; to work with large amounts of data. Let's learn more.</source>
          <target state="translated">&quot;무시&quot;동작은 다른 JS 라이브러리와 통합해야 할 때 자주 사용됩니다. &quot;추가&quot;및 &quot;앞에 추가&quot;기능은 많은 양의 데이터를 처리하기 위해 &quot;임시 할당&quot;과 함께 자주 사용됩니다. 더 알아 보자.</target>
        </trans-unit>
        <trans-unit id="dc51653bb522faccbc73e58dda64d98967bb1f09" translate="yes" xml:space="preserve">
          <source>The &quot;patch&quot; operations must be used when you want to navigate to the current LiveView, simply updating the URL and the current parameters, without mounting a new LiveView. When patch is used, the &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt;&lt;code&gt;handle_params/3&lt;/code&gt;&lt;/a&gt; callback is invoked and the minimal set of changes are sent to the client. See the next section for more information.</source>
          <target state="translated">&quot;패치&quot;작업은 새 LiveView를 마운트하지 않고 단순히 URL과 현재 매개 변수를 업데이트하여 현재 LiveView로 이동하려는 경우에 사용해야합니다. 패치가 사용되면 &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt; &lt;code&gt;handle_params/3&lt;/code&gt; &lt;/a&gt; 콜백이 호출되고 최소한의 변경 사항이 클라이언트로 전송됩니다. 자세한 내용은 다음 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="955a18dfbce56f1b50104281b12ba9744e407797" translate="yes" xml:space="preserve">
          <source>The &quot;redirect&quot; operations must be used when you want to dismount the current LiveView and mount a new one. In those cases, an Ajax request is made to fetch the necessary information about the new LiveView, which is mounted in place of the current one within the current layout. While redirecting, a &lt;code&gt;phx-disconnected&lt;/code&gt; class is added to the LiveView, which can be used to indicate to the user a new page is being loaded.</source>
          <target state="translated">현재 LiveView를 마운트 해제하고 새 LiveView를 마운트하려면 &quot;리디렉션&quot;작업을 사용해야합니다. 이 경우 Ajax 요청이 새 LiveView에 대한 필요한 정보를 가져 오도록 만들어지며,이 정보는 현재 레이아웃 내에서 현재 위치 대신 마운트됩니다. 리디렉션하는 동안 &lt;code&gt;phx-disconnected&lt;/code&gt; 클래스가 LiveView에 추가되어 사용자에게 새 페이지가로드되고 있음을 나타내는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87ed13eb7b7b5c4a065945c1b888d871c4ff5ece" translate="yes" xml:space="preserve">
          <source>The &quot;root&quot; layout is shared by both &quot;app&quot; and &quot;live&quot; layouts. It is rendered only on the initial request and therefore it has access to the &lt;code&gt;@conn&lt;/code&gt; assign. The root layout must be defined in your router:</source>
          <target state="translated">&quot;루트&quot;레이아웃은 &quot;앱&quot;및 &quot;라이브&quot;레이아웃 모두에서 공유됩니다. 초기 요청에서만 렌더링되므로 &lt;code&gt;@conn&lt;/code&gt; 할당에 액세스 할 수 있습니다. 라우터에서 루트 레이아웃을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="34cc66037bd21d671d1d361a106b7dc4195ccf47" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;assigns&amp;rdquo; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">&quot;할당&quot;스토리지는 플러그 파이프 라인의 다른 플러그가 액세스 할 수 있도록 연결에 값을 저장하는 데 사용됩니다. 지정 스토리지는 맵입니다.</target>
        </trans-unit>
        <trans-unit id="ed7d2aece955d0eb0adbd5c3ead7547ebda6a576" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#c:fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; callback is triggered when using &lt;code&gt;c:list/2&lt;/code&gt; and on every update, and it serves as a mechanism to fetch presence information a single time, before broadcasting the information to all channel subscribers. This prevents N query problems and gives you a single place to group isolated data fetching to extend presence metadata.</source>
          <target state="translated">는 &lt;a href=&quot;#c:fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt; 사용시 콜백이 트리거 &lt;code&gt;c:list/2&lt;/code&gt; 매를 업데이트에, 모든 채널에 대한 가입자 정보를 방송하기 전에, 현재 상태 정보는 단일 시간 인출하는기구로서 기능한다. 이는 N 개의 쿼리 문제를 방지하고 격리 된 데이터 가져 오기를 그룹화하여 현재 상태 메타 데이터를 확장 할 수있는 단일 위치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9ce9029acc8891c142483845e6415a481027865f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#c:render/1&quot;&gt;&lt;code&gt;render/1&lt;/code&gt;&lt;/a&gt; callback receives the &lt;code&gt;socket.assigns&lt;/code&gt; and is responsible for returning rendered content. You can use &lt;a href=&quot;phoenix.liveview.helpers#sigil_L/2&quot;&gt;&lt;code&gt;Phoenix.LiveView.Helpers.sigil_L/2&lt;/code&gt;&lt;/a&gt; to inline LiveView templates.</source>
          <target state="translated">는 &lt;a href=&quot;#c:render/1&quot;&gt; &lt;code&gt;render/1&lt;/code&gt; &lt;/a&gt; 콜백은 수신 &lt;code&gt;socket.assigns&lt;/code&gt; 을 하고 렌더링 된 내용을 반환 할 책임이있다. &lt;a href=&quot;phoenix.liveview.helpers#sigil_L/2&quot;&gt; &lt;code&gt;Phoenix.LiveView.Helpers.sigil_L/2&lt;/code&gt; &lt;/a&gt; 를 사용 하여 LiveView 템플릿을 인라인 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccee99ea15b107959f66e403e4586ed71a7b198b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#connect/6&quot;&gt;&lt;code&gt;connect/6&lt;/code&gt;&lt;/a&gt; function in this module can be used as a convenience or a documentation on such steps.</source>
          <target state="translated">이 모듈 의 &lt;a href=&quot;#connect/6&quot;&gt; &lt;code&gt;connect/6&lt;/code&gt; &lt;/a&gt; 기능은 이러한 단계에 대한 편의 또는 문서로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef89800e0cbbeab27286654a528b11abba734ba6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 의&lt;/a&gt; 구조는 불투명으로 간주되어야한다. &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; 를 사용 하여 유형 일치를 패턴 화할 수 있지만 필드에 액세스하거나 직접 수정하는 것은 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="334abf61e2eb9d49fa7423881b32cb13154f6a3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt; 모듈은 또한 협회 작업을위한 편의 시설을 제공합니다. 예를 들어 &lt;a href=&quot;#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt; 는 주어진 구조체에 대한 모든 관련 데이터가있는 쿼리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1000118f12916a7a73fddff1f37da63c9cd690ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; implementation may also send special messages and replies:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; 의&lt;/a&gt; 구현은 특별한 메시지와 답장을 보낼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fdd88277b1d89a27b6b11599f8d9956fb7c2f53b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#encode_to_iodata!/1&quot;&gt;&lt;code&gt;encode_to_iodata!/1&lt;/code&gt;&lt;/a&gt; function converts the rendered template result into iodata.</source>
          <target state="translated">&lt;a href=&quot;#encode_to_iodata!/1&quot;&gt; &lt;code&gt;encode_to_iodata!/1&lt;/code&gt; &lt;/a&gt; 함수 iodata로 템플릿 렌더링 결과를 변환한다.</target>
        </trans-unit>
        <trans-unit id="9699f16f2bf7e747e122f9ca173cd7f42ddcffe3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request of format &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; and dispatches it to the show action in the &lt;code&gt;PageController&lt;/code&gt;.</source>
          <target state="translated">위의 &lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 매크로는 &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; 형식의 요청을 수락하고 이를 &lt;code&gt;PageController&lt;/code&gt; 의 show 액션으로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="1e6610e758202b62590baa5e46b378b4bf396178" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request to &lt;code&gt;/pages/hello&lt;/code&gt; and dispatches it to the &lt;code&gt;PageController&lt;/code&gt;'s &lt;code&gt;show&lt;/code&gt; action with &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">위의 &lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt; 매크로는 &lt;code&gt;/pages/hello&lt;/code&gt; 에 대한 요청을 수락하고 &lt;code&gt;params&lt;/code&gt; 에서 &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; 를 사용하여 &lt;code&gt;PageController&lt;/code&gt; 의 &lt;code&gt;show&lt;/code&gt; 액션으로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="b4d5b3e248d2fbc1eca751de4ab135e756ebf19b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;ecto#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;ecto#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt; 모듈은 또한 협회 작업을위한 편의 시설을 제공합니다. 예를 들어 &lt;a href=&quot;ecto#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt; 는 모든 관련 데이터가 포함 된 쿼리를 주어진 구조체에 반환합니다.</target>
        </trans-unit>
        <trans-unit id="58fb745a2e57967c454ef61e37a343c8af7ac169" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; 의&lt;/a&gt; 구조는 불투명으로 간주되어야한다. &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; 를 사용 하여 유형과 패턴을 일치시킬 수 있지만 필드에 액세스하거나 직접 수정하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fa9514b9adddb69475024589cdb99afc99238dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is disabled by configuration but might be enabled later.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; 는&lt;/a&gt; 구성으로 비활성화되어 나중에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba6f27f85d7ce239b979057471cc92f95d3ac7cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://phoenixframework.org/&quot;&gt;Phoenix&lt;/a&gt; project includes a Mix task &lt;code&gt;mix phx.gen.cert&lt;/code&gt; that generates the necessary files and places them in the application's 'priv' directory. The &lt;a href=&quot;https://hex.pm/packages/x509&quot;&gt;X509&lt;/a&gt; package can be used as a dev-only dependency to add a similar &lt;code&gt;mix x509.gen.selfsigned&lt;/code&gt; task to non-Phoenix projects.</source>
          <target state="translated">&lt;a href=&quot;https://phoenixframework.org/&quot;&gt;피닉스&lt;/a&gt; 프로젝트는 믹스 작업이 포함 &lt;code&gt;mix phx.gen.cert&lt;/code&gt; 응용 프로그램의 'priv에'디렉토리에 필요한 파일과 장소를 생성합니다. &lt;a href=&quot;https://hex.pm/packages/x509&quot;&gt;X509의&lt;/a&gt; 패키지는 유사한 추가 dev에 전용 종속성으로 사용할 수있는 &lt;code&gt;mix x509.gen.selfsigned&lt;/code&gt; 비 피닉스 프로젝트에 작업을.</target>
        </trans-unit>
        <trans-unit id="d7dffb7977e667629020dcfd800d63da4bfbb976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.context&quot;&gt;&lt;code&gt;mix phx.gen.context&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the context, the module name of the schema, the resource name, and a list of column_name:type attributes.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.context&quot;&gt; &lt;code&gt;mix phx.gen.context&lt;/code&gt; &lt;/a&gt; 유형 속성 : 작업은 인수의 수, 컨텍스트의 모듈 이름, 스키마의 모듈 이름, 자원 이름 및 COLUMN_NAME의 목록을합니다.</target>
        </trans-unit>
        <trans-unit id="ed6566219635bf8a60afebbde390a8f984b47e1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt;&lt;code&gt;mix phx.gen.html&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the context, the module name of the schema, the resource name, and a list of column_name:type attributes. The module name we pass in must conform to the Elixir rules of module naming, following proper capitalization.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt; &lt;code&gt;mix phx.gen.html&lt;/code&gt; &lt;/a&gt; 유형 속성 : 작업은 인수의 수, 컨텍스트의 모듈 이름, 스키마의 모듈 이름, 자원 이름 및 COLUMN_NAME의 목록을합니다. 우리가 전달하는 모듈 이름은 적절한 대문자를 사용하여 모듈 이름 지정의 Elixir 규칙을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="753bc2e1d97fded3410ce3a6fc1fbd5a8326f374" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.json&quot;&gt;&lt;code&gt;mix phx.gen.json&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the context, the module name of the schema, the resource name, and a list of column_name:type attributes. The module name we pass in must conform to the Elixir rules of module naming, following proper capitalization.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.json&quot;&gt; &lt;code&gt;mix phx.gen.json&lt;/code&gt; &lt;/a&gt; 유형 속성 : 작업은 인수의 수, 컨텍스트의 모듈 이름, 스키마의 모듈 이름, 자원 이름 및 COLUMN_NAME의 목록을합니다. 우리가 전달하는 모듈 이름은 적절한 대문자를 사용하여 모듈 이름 지정의 Elixir 규칙을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="eb0caef39b907649b24a2d0e495927e96ee71869" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt;&lt;code&gt;mix phx.gen.schema&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the schema (which may be namespaced), the resource name, and a list of column_name:type attributes.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt; &lt;code&gt;mix phx.gen.schema&lt;/code&gt; &lt;/a&gt; 유형 속성 : 작업은 많은 수의 인자 (네임 스페이스 될 수 있습니다) 스키마의 모듈 이름, 자원 이름 및 COLUMN_NAME의 목록을합니다.</target>
        </trans-unit>
        <trans-unit id="a05ece4440acf4d8599acde999876382edcbff28" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;phoenix.controller&quot;&gt;&lt;code&gt;Phoenix.Controller&lt;/code&gt;&lt;/a&gt; module provides the &lt;code&gt;put_flash/3&lt;/code&gt; and &lt;code&gt;get_flash/2&lt;/code&gt; functions to help us set and retrieve flash messages as a key value pair. Let's set two flash messages in our &lt;code&gt;HelloWeb.PageController&lt;/code&gt; to try this out.</source>
          <target state="translated">&lt;a href=&quot;phoenix.controller&quot;&gt; &lt;code&gt;Phoenix.Controller&lt;/code&gt; 의&lt;/a&gt; 모듈은 제공 &lt;code&gt;put_flash/3&lt;/code&gt; 및 &lt;code&gt;get_flash/2&lt;/code&gt; 우리가 키 값 쌍으로 플래시 메시지를 설정하고 검색 도움말 기능을. &lt;code&gt;HelloWeb.PageController&lt;/code&gt; 에 두 개의 플래시 메시지를 설정해 보겠습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
