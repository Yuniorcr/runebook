<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="04391319040686e843d56c5f21cecccf5cd326eb" translate="yes" xml:space="preserve">
          <source>This sets the parent keymap of &lt;var&gt;keymap&lt;/var&gt; to &lt;var&gt;parent&lt;/var&gt;, and returns &lt;var&gt;parent&lt;/var&gt;. If &lt;var&gt;parent&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function gives &lt;var&gt;keymap&lt;/var&gt; no parent at all.</source>
          <target state="translated">이의 부모 키 맵 설정 &lt;var&gt;keymap&lt;/var&gt; 에 &lt;var&gt;parent&lt;/var&gt; 및 반환 &lt;var&gt;parent&lt;/var&gt; . 경우 &lt;var&gt;parent&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; ,이 기능은 제공하지 않습니다 &lt;var&gt;keymap&lt;/var&gt; 전혀 부모를.</target>
        </trans-unit>
        <trans-unit id="5fd1d959bf3eee4035314d15ad7dcc57aa8e0c7c" translate="yes" xml:space="preserve">
          <source>This sets up a timer that calls the function &lt;var&gt;function&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt; at time &lt;var&gt;time&lt;/var&gt;. If &lt;var&gt;repeat&lt;/var&gt; is a number (integer or floating point), the timer is scheduled to run again every &lt;var&gt;repeat&lt;/var&gt; seconds after &lt;var&gt;time&lt;/var&gt;. If &lt;var&gt;repeat&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the timer runs only once.</source>
          <target state="translated">이것은 time &lt;var&gt;time&lt;/var&gt; 에 &lt;var&gt;args&lt;/var&gt; 인수를 사용 하여 함수 &lt;var&gt;function&lt;/var&gt; 를 호출하는 타이머를 설정합니다 . 경우 &lt;var&gt;repeat&lt;/var&gt; 숫자 (정수 또는 부동 소수점)는, 타이머가 다시마다 실행되도록 예약 된 &lt;var&gt;repeat&lt;/var&gt; 한 후 초 &lt;var&gt;time&lt;/var&gt; . 경우 &lt;var&gt;repeat&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , 타이머는 한 번만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="0d746b10f65277e46c48ffc8379f07a74da098ed" translate="yes" xml:space="preserve">
          <source>This setting will cause &lt;code&gt;display-buffer&lt;/code&gt; to first try to find a window showing the buffer on a visible or iconified frame and, if no such frame exists, pop up a new frame. You can observe this behavior on a graphical system by typing</source>
          <target state="translated">이 설정을 사용하면 &lt;code&gt;display-buffer&lt;/code&gt; 가 먼저 표시되거나 아이콘 화 된 프레임에서 버퍼를 보여주는 창을 찾고 그러한 프레임이 없으면 새 프레임을 팝업합니다. 그래픽 시스템에서 다음을 입력하여이 동작을 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4c48ab26b54a2b63a4fc53550334fbca5ebfb47" translate="yes" xml:space="preserve">
          <source>This should be a number, where values higher than 1 means to increase the size, and lower means to decrease the size, by multiplying both the width and height. For instance, a value of 0.25 will make the image a quarter size of what it originally was. If the scaling makes the image larger than specified by &lt;code&gt;:max-width&lt;/code&gt; or &lt;code&gt;:max-height&lt;/code&gt;, the resulting size will not exceed those two values. If both &lt;code&gt;:scale&lt;/code&gt; and &lt;code&gt;:height&lt;/code&gt;/&lt;code&gt;:width&lt;/code&gt; are specified, the height/width will be adjusted by the specified scaling factor.</source>
          <target state="translated">1보다 큰 값은 크기를 늘리는 것을 의미하고, 값이 낮 으면 너비와 높이를 곱하여 크기를 줄이는 숫자 여야합니다. 예를 들어 0.25 값은 이미지를 원래 크기의 1/4 크기로 만듭니다. 크기 조정으로 인해 이미지가 &lt;code&gt;:max-width&lt;/code&gt; 또는 &lt;code&gt;:max-height&lt;/code&gt; 에 지정된 것보다 커지면 결과 크기는이 두 값을 초과하지 않습니다. 양쪽 모두 &lt;code&gt;:scale&lt;/code&gt; 및 &lt;code&gt;:height&lt;/code&gt; / &lt;code&gt;:width&lt;/code&gt; , 지정된 높이 / 폭을 지정한 배율 인수로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="ca351ac6c1fcb484569ed8051d8b192cce01a187" translate="yes" xml:space="preserve">
          <source>This shows the symmetry of the lowest-level operations; reading and writing handle things in opposite order. The rest of this section describes the two facilities surrounding the three variables named above, as well as some related functions. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;, for details on character encoding and decoding.</source>
          <target state="translated">이것은 가장 낮은 수준의 작업의 대칭성을 보여줍니다. 읽기와 쓰기는 반대 순서로 처리합니다. 이 섹션의 나머지 부분에서는 위에서 명명 된 세 가지 변수를 둘러싼 두 가지 기능과 일부 관련 함수에 대해 설명합니다. 문자 인코딩 및 디코딩에 대한 자세한 내용은 &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;코딩 시스템&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e3159399b391899969ef053a921d0c0eddf8f82" translate="yes" xml:space="preserve">
          <source>This simple expression is placed in a separate function to make it easy to redefine for customization.</source>
          <target state="translated">이 간단한 표현식은 사용자 정의를 위해 쉽게 재정의 할 수 있도록 별도의 함수에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="584276a26501f4379ac07846055e032002721c0a" translate="yes" xml:space="preserve">
          <source>This situation is best understood in the context of converting text properties during &lt;code&gt;write-region&lt;/code&gt;. For example, the character at position 42 in a buffer is &amp;lsquo;</source>
          <target state="translated">이 상황은 &lt;code&gt;write-region&lt;/code&gt; 동안 텍스트 속성을 변환하는 맥락에서 가장 잘 이해됩니다 . 예를 들어, 버퍼의 위치 42에있는 문자는 '</target>
        </trans-unit>
        <trans-unit id="64982cd3f5798a3266f75f2afef44d0de9678e82" translate="yes" xml:space="preserve">
          <source>This sort of element specifies several &lt;var&gt;highlighter&lt;/var&gt; lists for a single &lt;var&gt;matcher&lt;/var&gt;. A &lt;var&gt;highlighter&lt;/var&gt; list can be of the type &lt;var&gt;subexp-highlighter&lt;/var&gt; or &lt;var&gt;anchored-highlighter&lt;/var&gt; as described above.</source>
          <target state="translated">이러한 종류의 요소 는 단일 &lt;var&gt;matcher&lt;/var&gt; 대해 여러 개의 &lt;var&gt;highlighter&lt;/var&gt; 목록을 지정합니다 . &lt;var&gt;highlighter&lt;/var&gt; 리스트 형식 일 수 &lt;var&gt;subexp-highlighter&lt;/var&gt; 또는 &lt;var&gt;anchored-highlighter&lt;/var&gt; 상술 한 바와 같이.</target>
        </trans-unit>
        <trans-unit id="ce9211df654da30cc4c774e536fa2f8e48ebc6b3" translate="yes" xml:space="preserve">
          <source>This special form declares that a function is a command, and that it may therefore be called interactively (via</source>
          <target state="translated">이 특수 형식은 함수가 명령이므로 대화식으로 호출 할 수 있음을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="28dd7b27677277ba15ffcea1d4402a691396d24f" translate="yes" xml:space="preserve">
          <source>This special form defines &lt;var&gt;symbol&lt;/var&gt; as a value and initializes it. It informs a person reading your code that &lt;var&gt;symbol&lt;/var&gt; has a standard global value, established here, that should not be changed by the user or by other programs. Note that &lt;var&gt;symbol&lt;/var&gt; is not evaluated; the symbol to be defined must appear explicitly in the &lt;code&gt;defconst&lt;/code&gt;.</source>
          <target state="translated">이 특수 형식은 &lt;var&gt;symbol&lt;/var&gt; 를 값으로 정의 하고 초기화합니다. 사용자 또는 다른 프로그램에 의해 변경되어서는 안되는 여기에 설정된 표준 전역 값 이 &lt;var&gt;symbol&lt;/var&gt; 을 코드를 읽는 사람에게 알립니다 . 주의 &lt;var&gt;symbol&lt;/var&gt; 평가되지 않습니다; 정의 할 기호는 &lt;code&gt;defconst&lt;/code&gt; 에 명시 적으로 나타나야합니다 .</target>
        </trans-unit>
        <trans-unit id="44c5c12c983baac190e9ec9f02642c715903a677" translate="yes" xml:space="preserve">
          <source>This special form defines &lt;var&gt;symbol&lt;/var&gt; as a variable. Note that &lt;var&gt;symbol&lt;/var&gt; is not evaluated; the symbol to be defined should appear explicitly in the &lt;code&gt;defvar&lt;/code&gt; form. The variable is marked as &lt;em&gt;special&lt;/em&gt;, meaning that it should always be dynamically bound (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;).</source>
          <target state="translated">이 특수 형식은 &lt;var&gt;symbol&lt;/var&gt; 를 변수로 정의 합니다. 주의 &lt;var&gt;symbol&lt;/var&gt; 평가되지 않습니다; 정의 할 기호는 &lt;code&gt;defvar&lt;/code&gt; 형식 으로 명시 적으로 나타나야 합니다. 변수는 &lt;em&gt;special&lt;/em&gt; 으로 표시되어 항상 동적으로 바인딩되어야합니다 ( &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;변수 범위 지정&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="aef7bf0c67cbe574cae7cb7cced475c660e0388d" translate="yes" xml:space="preserve">
          <source>This special form establishes the error handlers &lt;var&gt;handlers&lt;/var&gt; around the execution of &lt;var&gt;protected-form&lt;/var&gt;. If &lt;var&gt;protected-form&lt;/var&gt; executes without error, the value it returns becomes the value of the &lt;code&gt;condition-case&lt;/code&gt; form; in this case, the &lt;code&gt;condition-case&lt;/code&gt; has no effect. The &lt;code&gt;condition-case&lt;/code&gt; form makes a difference when an error occurs during &lt;var&gt;protected-form&lt;/var&gt;.</source>
          <target state="translated">이 특수 형식 은 &lt;var&gt;protected-form&lt;/var&gt; 실행에 대한 오류 처리기 &lt;var&gt;handlers&lt;/var&gt; 설정합니다 . 경우 &lt;var&gt;protected-form&lt;/var&gt; 에러없이 실행하고, 그 반환 값은의 값이된다 &lt;code&gt;condition-case&lt;/code&gt; 형태; 이 경우 &lt;code&gt;condition-case&lt;/code&gt; 는 효과가 없습니다. &lt;code&gt;condition-case&lt;/code&gt; 에러가 발생하면시 폼이 차이가 &lt;var&gt;protected-form&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5b82c5527174a8c879580e2c4c03d52282e1cc4d" translate="yes" xml:space="preserve">
          <source>This special form evaluates &lt;var&gt;form1&lt;/var&gt; and all of the &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of &lt;var&gt;form1&lt;/var&gt;.</source>
          <target state="translated">이 특별한 형태들을 평가는 &lt;var&gt;form1&lt;/var&gt; 와 모든 &lt;var&gt;forms&lt;/var&gt; 의 결과 반환 텍스트 위해, &lt;var&gt;form1&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="264a11e6a2d63044cc3557eb49b8c98b48f173e4" translate="yes" xml:space="preserve">
          <source>This special form evaluates &lt;var&gt;form1&lt;/var&gt;, &lt;var&gt;form2&lt;/var&gt;, and all of the following &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of &lt;var&gt;form2&lt;/var&gt;.</source>
          <target state="translated">이 특수 형식은 &lt;var&gt;form1&lt;/var&gt; , &lt;var&gt;form2&lt;/var&gt; 및 다음 모든 &lt;var&gt;forms&lt;/var&gt; 을 텍스트 순서로 평가하여 &lt;var&gt;form2&lt;/var&gt; 의 결과를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cb99abb8e0181d4d27838d8be018a6b83c5d7d2e" translate="yes" xml:space="preserve">
          <source>This special form evaluates all of the &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of the final form.</source>
          <target state="translated">이 특수 양식은 모든 &lt;var&gt;forms&lt;/var&gt; 을 텍스트 순서 로 평가 하여 최종 양식의 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d0978706853a1b24de3d942777b01b642f856ba1" translate="yes" xml:space="preserve">
          <source>This special form gives each &lt;var&gt;symbol&lt;/var&gt; a new default value, which is the result of evaluating the corresponding &lt;var&gt;form&lt;/var&gt;. It does not evaluate &lt;var&gt;symbol&lt;/var&gt;, but does evaluate &lt;var&gt;form&lt;/var&gt;. The value of the &lt;code&gt;setq-default&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">이 특수 양식은 각 &lt;var&gt;symbol&lt;/var&gt; 에 새 기본값을 제공하며 이는 해당 &lt;var&gt;form&lt;/var&gt; 을 평가 한 결과입니다 . 이 평가하지 않습니다 &lt;var&gt;symbol&lt;/var&gt; 하지만, 평가합니까 &lt;var&gt;form&lt;/var&gt; . 의 값 &lt;code&gt;setq-default&lt;/code&gt; 형태는 마지막의 값 &lt;var&gt;form&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3c676779da66f5ffe35440dff400bd9502ca2be7" translate="yes" xml:space="preserve">
          <source>This special form is like &lt;code&gt;let*&lt;/code&gt;, but all the variables are bound before any of the local values are computed. The values are then assigned to the locally bound variables. This is only useful when lexical binding is in effect, and you want to create closures that refer to bindings that would otherwise not yet be in effect when using &lt;code&gt;let*&lt;/code&gt;.</source>
          <target state="translated">이 특수한 형식은 &lt;code&gt;let*&lt;/code&gt; 과 비슷하지만 모든 변수는 로컬 값이 계산되기 전에 바인딩됩니다. 그런 다음 값이 로컬 바운드 변수에 할당됩니다. 이것은 어휘 바인딩이 유효하고 &lt;code&gt;let*&lt;/code&gt; 사용할 때 아직 유효하지 않은 바인딩을 참조하는 클로저를 만들려는 경우에만 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="a6a29db6dbf25f40b7c3f2e5454d38aa2ec66ed8" translate="yes" xml:space="preserve">
          <source>This special form is like &lt;code&gt;let&lt;/code&gt;, but it binds each variable right after computing its local value, before computing the local value for the next variable. Therefore, an expression in &lt;var&gt;bindings&lt;/var&gt; can refer to the preceding symbols bound in this &lt;code&gt;let*&lt;/code&gt; form. Compare the following example with the example above for &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">이 특별한 형식은 &lt;code&gt;let&lt;/code&gt; 과 비슷하지만 다음 변수에 대한 로컬 값을 계산하기 전에 로컬 값을 계산 한 직후에 각 변수를 바인딩합니다. 따라서 &lt;var&gt;bindings&lt;/var&gt; 의 식은 이 &lt;code&gt;let*&lt;/code&gt; 형식에 바인딩 된 선행 기호를 참조 할 수 있습니다 . 다음 예제를 &lt;code&gt;let&lt;/code&gt; 에 대한 위의 예제와 비교하십시오 .</target>
        </trans-unit>
        <trans-unit id="16ed39c262cfc01a3b86e18e6247c39ca8fc1d45" translate="yes" xml:space="preserve">
          <source>This special form is the most common method of changing a variable&amp;rsquo;s value. Each &lt;var&gt;symbol&lt;/var&gt; is given a new value, which is the result of evaluating the corresponding &lt;var&gt;form&lt;/var&gt;. The current binding of the symbol is changed.</source>
          <target state="translated">이 특수 형식은 변수 값을 변경하는 가장 일반적인 방법입니다. 각 &lt;var&gt;symbol&lt;/var&gt; 에는 해당 &lt;var&gt;form&lt;/var&gt; 을 평가 한 결과 인 새 값이 지정 됩니다 . 기호의 현재 바인딩이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="a33e53aa9f331f7cfc924713142588561b38eb8c" translate="yes" xml:space="preserve">
          <source>This special form returns &lt;var&gt;function-object&lt;/var&gt; without evaluating it. In this, it is similar to &lt;code&gt;quote&lt;/code&gt; (see &lt;a href=&quot;quoting#Quoting&quot;&gt;Quoting&lt;/a&gt;). But unlike &lt;code&gt;quote&lt;/code&gt;, it also serves as a note to the Emacs evaluator and byte-compiler that &lt;var&gt;function-object&lt;/var&gt; is intended to be used as a function. Assuming &lt;var&gt;function-object&lt;/var&gt; is a valid lambda expression, this has two effects:</source>
          <target state="translated">이 특별한 형식은 평가하지 않고 &lt;var&gt;function-object&lt;/var&gt; 를 반환 합니다. 여기에서는 &lt;code&gt;quote&lt;/code&gt; 와 유사합니다 ( &lt;a href=&quot;quoting#Quoting&quot;&gt;Quoting&lt;/a&gt; 참조 ). 그러나 &lt;code&gt;quote&lt;/code&gt; 와는 달리 &lt;var&gt;function-object&lt;/var&gt; 가 함수 로 사용되도록 의도 된 Emacs 평가자 및 바이트 컴파일러에 대한 메모 역할도합니다 . &lt;var&gt;function-object&lt;/var&gt; 가 유효한 람다식이 라고 가정하면 두 가지 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="91207eb1ac837c15393b1238eabb01fa5a18c2de" translate="yes" xml:space="preserve">
          <source>This special form returns &lt;var&gt;object&lt;/var&gt;, without evaluating it. The returned value might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">이 특수 형식은 평가하지 않고 &lt;var&gt;object&lt;/var&gt; 를 반환 합니다 . 반환 된 값은 공유 될 수 있으며 수정해서는 안됩니다. &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;자체 평가 양식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e263baabd2d21b25cf9933e4bfe225bb216dcf20" translate="yes" xml:space="preserve">
          <source>This special form saves the current bounds of the accessible portion, evaluates the &lt;var&gt;body&lt;/var&gt; forms, and finally restores the saved bounds, thus restoring the same state of narrowing (or absence thereof) formerly in effect. The state of narrowing is restored even in the event of an abnormal exit via &lt;code&gt;throw&lt;/code&gt; or error (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;). Therefore, this construct is a clean way to narrow a buffer temporarily.</source>
          <target state="translated">이 특수 양식은 액세스 가능한 부분의 현재 경계를 저장하고, &lt;var&gt;body&lt;/var&gt; 양식을 평가하고 , 마지막으로 저장된 경계를 복원하여 이전에 유효했던 동일한 축소 상태 (또는 부재)를 복원합니다. 축소 상태는 &lt;code&gt;throw&lt;/code&gt; 또는 오류 를 통해 비정상적인 종료가 발생한 경우에도 복원됩니다 ( &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt; 참조 ). 따라서이 구조는 버퍼를 일시적으로 좁히는 깨끗한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5cc6973e4a1690df87e779d2a83831c124d6fe90" translate="yes" xml:space="preserve">
          <source>This special form saves the identity of the current buffer and the value of point in it, evaluates &lt;var&gt;body&lt;/var&gt;, and finally restores the buffer and its saved value of point. Both saved values are restored even in case of an abnormal exit via &lt;code&gt;throw&lt;/code&gt; or error (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">이 특별한 형식은 현재 버퍼의 ID와 그 안에있는 포인트의 값을 저장하고, &lt;var&gt;body&lt;/var&gt; 를 평가 하고, 마지막으로 버퍼와 저장된 포인트 값을 복원합니다. &lt;code&gt;throw&lt;/code&gt; 또는 오류 를 통해 비정상적인 종료가 발생한 경우에도 저장된 값은 모두 복원됩니다 ( &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exit&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="cd6c4fcda7a2089f2d7f8d8eff82a403a84ab6ae" translate="yes" xml:space="preserve">
          <source>This special form sets up local bindings for a certain set of variables, as specified by &lt;var&gt;bindings&lt;/var&gt;, and then evaluates all of the &lt;var&gt;forms&lt;/var&gt; in textual order. Its return value is the value of the last form in &lt;var&gt;forms&lt;/var&gt;. The local bindings set up by &lt;code&gt;let&lt;/code&gt; will be in effect only within the body of &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">에 의해 지정된 변수의 특정 세트에 대한 지역 바인딩까지이 특별한 형태의 세트 &lt;var&gt;bindings&lt;/var&gt; , 다음의 모든 평가 &lt;var&gt;forms&lt;/var&gt; 텍스트 순서를. 그것의 반환 값의 마지막 형태의 값입니다 &lt;var&gt;forms&lt;/var&gt; . &lt;code&gt;let&lt;/code&gt; 에 의해 설정된 로컬 바인딩 은 &lt;var&gt;forms&lt;/var&gt; 본문 내에서만 유효 합니다 .</target>
        </trans-unit>
        <trans-unit id="8ba16b0c0709545a810b20f23771ee985821abb5" translate="yes" xml:space="preserve">
          <source>This special property records a list of functions that react to cursor motion. Each function in the list is called, just before redisplay, with 3 arguments: the affected window, the previous known position of the cursor, and one of the symbols &lt;code&gt;entered&lt;/code&gt; or &lt;code&gt;left&lt;/code&gt;, depending on whether the cursor is entering the text that has this property or leaving it. The functions are called only when the minor mode &lt;code&gt;cursor-sensor-mode&lt;/code&gt; is turned on.</source>
          <target state="translated">이 특수 속성은 커서 동작에 반응하는 함수 목록을 기록합니다. 목록의 각 함수는 다시 표시하기 직전에 3 개의 인수 ( 커서가이 속성이있는 텍스트를 입력하는지 여부에 따라 영향을받는 창, 이전에 알려진 커서 위치 및 &lt;code&gt;entered&lt;/code&gt; 또는 &lt;code&gt;left&lt;/code&gt; 기호 중 하나)를 사용하여 호출됩니다. 또는 떠나. 이 기능은 부 모드 &lt;code&gt;cursor-sensor-mode&lt;/code&gt; 가 켜져 있을 때만 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="97d8e4b9e4535b8ad3a6ea6a3461c5a524fe91be" translate="yes" xml:space="preserve">
          <source>This specializer requires the argument be &lt;code&gt;eql&lt;/code&gt; to the given &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">이 전문화 는 주어진 &lt;var&gt;object&lt;/var&gt; 대한 인수가 &lt;code&gt;eql&lt;/code&gt; 이어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="8e463a055dfec13e57cff30b0d309557a0007f63" translate="yes" xml:space="preserve">
          <source>This specializer requires the argument to be of the given &lt;var&gt;type&lt;/var&gt;, one of the types from the type hierarchy described below.</source>
          <target state="translated">이 전문화는 인수가 아래에 설명 된 유형 계층의 유형 중 하나 인 지정된 &lt;var&gt;type&lt;/var&gt; 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="c82c41eac63a3e2908a3e1f1922a6ead4ab20220" translate="yes" xml:space="preserve">
          <source>This specification together with &lt;code&gt;image&lt;/code&gt; specifies a &lt;em&gt;slice&lt;/em&gt; (a partial area) of the image to display. The elements &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;x&lt;/var&gt; specify the top left corner of the slice, within the image; &lt;var&gt;width&lt;/var&gt; and &lt;var&gt;height&lt;/var&gt; specify the width and height of the slice. Integers are numbers of pixels. A floating-point number in the range 0.0&amp;ndash;1.0 stands for that fraction of the width or height of the entire image.</source>
          <target state="translated">이 사양은 &lt;code&gt;image&lt;/code&gt; 와 함께 표시 할 이미지 의 &lt;em&gt;슬라이스&lt;/em&gt; (일부 영역)를 지정합니다. 요소 &lt;var&gt;y&lt;/var&gt; 및 &lt;var&gt;x&lt;/var&gt; 는 이미지 내에서 슬라이스의 왼쪽 상단 모서리를 지정합니다. &lt;var&gt;width&lt;/var&gt; 와 &lt;var&gt;height&lt;/var&gt; 슬라이스의 너비 와 높이를 지정합니다. 정수는 픽셀 수입니다. 0.0&amp;ndash;1.0 범위의 부동 소수점 숫자는 전체 이미지의 너비 또는 높이의 해당 부분을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="603bee7cf5faa4b185cf146adf2053aaf175fade" translate="yes" xml:space="preserve">
          <source>This specifies &lt;code&gt;display-buffer-alist&lt;/code&gt; entries (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) for buffers with fixed names. In particular, it asks for showing</source>
          <target state="translated">이것은 고정 된 이름을 가진 버퍼에 대한 &lt;code&gt;display-buffer-alist&lt;/code&gt; 항목 ( &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;창 선택&lt;/a&gt; 참조 )을 지정합니다. 특히</target>
        </trans-unit>
        <trans-unit id="08c2b1fdcea51a014ac8acf0cd667967e92d4c87" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;completion-boundaries&lt;/code&gt; operation. The function should return &lt;code&gt;(boundaries &lt;var&gt;start&lt;/var&gt; . &lt;var&gt;end&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;start&lt;/var&gt; is the position of the beginning boundary in the specified string, and &lt;var&gt;end&lt;/var&gt; is the position of the end boundary in &lt;var&gt;suffix&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;completion-boundaries&lt;/code&gt; 작업을 지정합니다 . 함수는 &lt;code&gt;(boundaries &lt;var&gt;start&lt;/var&gt; . &lt;var&gt;end&lt;/var&gt;)&lt;/code&gt; 반환해야합니다 . 여기서 &lt;var&gt;start&lt;/var&gt; 는 지정된 문자열에서 시작 경계 의 위치 이고 &lt;var&gt;end&lt;/var&gt; 는 &lt;var&gt;suffix&lt;/var&gt; 의 끝 경계 위치입니다 .</target>
        </trans-unit>
        <trans-unit id="008094b58d31ed22d08e10e2f1857317a76409ef" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;test-completion&lt;/code&gt; operation. The function should return &lt;code&gt;t&lt;/code&gt; if the specified string is an exact match for some completion alternative; &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;test-completion&lt;/code&gt; 작업을 지정합니다 . 지정된 문자열이 일부 완성 대안과 정확히 일치하면 함수는 &lt;code&gt;t&lt;/code&gt; 를 반환해야합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc4b46d1ccd6ed412576e73946e870435c93aabe" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;try-completion&lt;/code&gt; operation. The function should return &lt;code&gt;nil&lt;/code&gt; if there are no matches; it should return &lt;code&gt;t&lt;/code&gt; if the specified string is a unique and exact match; and it should return the longest common prefix substring of all matches otherwise.</source>
          <target state="translated">이것은 &lt;code&gt;try-completion&lt;/code&gt; 작업을 지정합니다 . 일치하는 항목이 없으면 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환해야합니다 . 지정된 문자열이 고유하고 정확히 일치하는 경우 &lt;code&gt;t&lt;/code&gt; 를 반환해야합니다 . 그렇지 않으면 모든 일치 항목의 가장 긴 공통 접두사 하위 문자열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="ce6c2cebbed4f94eb1f2b1e4c5cc7e35ad712e34" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;em&gt;default key binding&lt;/em&gt;; any event not bound by other elements of the keymap is given &lt;var&gt;binding&lt;/var&gt; as its binding. Default bindings allow a keymap to bind all possible event types without having to enumerate all of them. A keymap that has a default binding completely masks any lower-precedence keymap, except for events explicitly bound to &lt;code&gt;nil&lt;/code&gt; (see below).</source>
          <target state="translated">이것은 &lt;em&gt;기본 키 바인딩을&lt;/em&gt; 지정합니다 . 키맵의 다른 요소에 의해 바인딩되지 않은 모든 이벤트는 &lt;var&gt;binding&lt;/var&gt; 으로 바인딩됩니다. 기본 바인딩을 사용하면 키맵이 모든 이벤트 유형을 열거하지 않고도 가능한 모든 이벤트 유형을 바인딩 할 수 있습니다. 기본 바인딩이있는 키맵은 명시 적으로 &lt;code&gt;nil&lt;/code&gt; 에 바인딩 된 이벤트를 제외하고 우선 순위가 낮은 모든 키맵을 완전히 마스킹합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="b1591cb7fa920771f20d99fc9c87c33dd446a04e" translate="yes" xml:space="preserve">
          <source>This specifies a binding which is also a simple menu item that displays as &lt;var&gt;item-name&lt;/var&gt; in the menu. See &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;.</source>
          <target state="translated">이것은 메뉴에서 항목 &lt;var&gt;item-name&lt;/var&gt; 으로 표시되는 간단한 메뉴 항목이기도 한 바인딩을 지정 합니다. &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;간단한 메뉴 항목을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbdb2a8248313643bdd6bdff1df0b66eda0349c3" translate="yes" xml:space="preserve">
          <source>This specifies a binding which is also an extended menu item. This allows use of other features. See &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;.</source>
          <target state="translated">확장 메뉴 항목이기도 한 바인딩을 지정합니다. 이를 통해 다른 기능을 사용할 수 있습니다. &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;확장 메뉴 항목을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7c26887681428ea3c0030e96ac728026adffd5a" translate="yes" xml:space="preserve">
          <source>This specifies a buffer or a string as described above, but an optional range can be specified with &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">위에서 설명한대로 버퍼 또는 문자열을 지정하지만 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 로 선택적 범위를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8754fe872cbff2346f1a6701ecb39512d99130a4" translate="yes" xml:space="preserve">
          <source>This specifies a conversion algorithm that should be applied to the image before it is displayed; the value, &lt;var&gt;algorithm&lt;/var&gt;, specifies which algorithm.</source>
          <target state="translated">이미지를 표시하기 전에 적용해야하는 변환 알고리즘을 지정합니다. 값 &lt;var&gt;algorithm&lt;/var&gt; 은 알고리즘 을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ec2378a6a4e4f5f35a38fa225e37a4f493c8e458" translate="yes" xml:space="preserve">
          <source>This specifies a delay in seconds after which auto-selection triggers. The window under the mouse pointer is selected after the mouse has remained in it for the entire duration of the delay.</source>
          <target state="translated">자동 선택이 트리거되는 지연 시간 (초)을 지정합니다. 마우스 포인터 아래의 창은 전체 지연 시간 동안 마우스가 그 안에 남아있는 후에 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="420eaeb6676c9efeacc1606fc52cb8a3ad89406f" translate="yes" xml:space="preserve">
          <source>This specifies a hint for how many associations you plan to store in the hash table. If you know the approximate number, you can make things a little more efficient by specifying it this way. If you specify too small a size, the hash table will grow automatically when necessary, but doing that takes some extra time.</source>
          <target state="translated">해시 테이블에 저장할 연결 수에 대한 힌트를 지정합니다. 대략적인 숫자를 알고 있다면 이런 식으로 지정하여 좀 더 효율적으로 만들 수 있습니다. 크기를 너무 작게 지정하면 필요에 따라 해시 테이블이 자동으로 커지지 만 시간이 더 걸립니다.</target>
        </trans-unit>
        <trans-unit id="0d542d82ff452e212946b1ada7c8919996460c66" translate="yes" xml:space="preserve">
          <source>This specifies a request for information about the state of the current completion. The return value should have the form &lt;code&gt;(metadata . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;alist&lt;/var&gt; is an alist whose elements are described below.</source>
          <target state="translated">현재 완료 상태에 대한 정보 요청을 지정합니다. 반환 값은 &lt;code&gt;(metadata . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; 형식이어야합니다 . 여기서 &lt;var&gt;alist&lt;/var&gt; 는 요소가 아래에 설명 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d4d061f49a452c6a4cb447e2e21da5d60c7677ca" translate="yes" xml:space="preserve">
          <source>This specifies a specific pointer shape when the mouse pointer is over this text or image. See &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Pointer Shape&lt;/a&gt;, for possible pointer shapes.</source>
          <target state="translated">마우스 포인터가이 텍스트 또는 이미지 위에있을 때 특정 포인터 모양을 지정합니다. 가능한 포인터 모양 은 &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;포인터 모양을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43834e1e2123ce5d60aa2e3d2145d5b8d214e4ad" translate="yes" xml:space="preserve">
          <source>This specifies an &lt;code&gt;all-completions&lt;/code&gt; operation. The function should return a list of all possible completions of the specified string.</source>
          <target state="translated">&lt;code&gt;all-completions&lt;/code&gt; 작업을 지정합니다 . 함수는 지정된 문자열의 가능한 모든 완료 목록을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="4e4bc6c301646426b8d2d7bade697a36650e543a" translate="yes" xml:space="preserve">
          <source>This specifies how loud to play the sound. It should be a number in the range of 0 to 1. The default is to use whatever volume has been specified before.</source>
          <target state="translated">소리를 얼마나 크게 재생할지 지정합니다. 0에서 1 사이의 숫자 여야합니다. 기본값은 이전에 지정된 볼륨을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="636a06ca0cbd154e22bd2aed442fa25383c8080c" translate="yes" xml:space="preserve">
          <source>This specifies how many pixels to add as an extra margin around the image. The value, &lt;var&gt;margin&lt;/var&gt;, must be a non-negative number, or a pair &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; of such numbers. If it is a pair, &lt;var&gt;x&lt;/var&gt; specifies how many pixels to add horizontally, and &lt;var&gt;y&lt;/var&gt; specifies how many pixels to add vertically. If &lt;code&gt;:margin&lt;/code&gt; is not specified, the default is zero.</source>
          <target state="translated">이미지 주변에 추가 여백으로 추가 할 픽셀 수를 지정합니다. 값 &lt;var&gt;margin&lt;/var&gt; 은 음수가 아니거나 이러한 숫자 의 쌍 &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 이어야합니다 . 쌍인 경우 &lt;var&gt;x&lt;/var&gt; 는 가로로 추가 할 픽셀 수를 지정 하고 &lt;var&gt;y&lt;/var&gt; 는 세로로 추가 할 픽셀 수를 지정합니다. 경우 &lt;code&gt;:margin&lt;/code&gt; 지정되지 않은 경우 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="ac7dbfa3b693d7da04a20deacef5e42a4f5dd096" translate="yes" xml:space="preserve">
          <source>This specifies how to order the advice, should several pieces of advice be present. By default, the depth is 0. A depth of 100 indicates that this piece of advice should be kept as deep as possible, whereas a depth of -100 indicates that it should stay as the outermost piece. When two pieces of advice specify the same depth, the most recently added one will be outermost.</source>
          <target state="translated">몇 가지 조언이있는 경우 조언을 주문하는 방법을 지정합니다. 기본적으로 깊이는 0입니다. 깊이가 100이면이 조언이 가능한 한 깊이 유지되어야 함을 나타내는 반면 깊이 -100은 가장 바깥쪽에 있어야 함을 나타냅니다. 두 개의 어드바이스가 동일한 깊이를 지정하면 가장 최근에 추가 된 어드바이스가 가장 바깥쪽에 있습니다.</target>
        </trans-unit>
        <trans-unit id="80eab38c19033a28010b8322a79585bc2263eed4" translate="yes" xml:space="preserve">
          <source>This specifies one binding, for events of type &lt;var&gt;type&lt;/var&gt;. Each ordinary binding applies to events of a particular &lt;em&gt;event type&lt;/em&gt;, which is always a character or a symbol. See &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;. In this kind of binding, &lt;var&gt;binding&lt;/var&gt; is a command.</source>
          <target state="translated">type &lt;var&gt;type&lt;/var&gt; 이벤트에 대해 하나의 바인딩을 지정 합니다 . 각 일반 바인딩 은 항상 문자 또는 기호 인 특정 &lt;em&gt;이벤트 유형의&lt;/em&gt; 이벤트에 적용됩니다 . &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;이벤트 분류를&lt;/a&gt; 참조하십시오 . 이러한 종류의 바인딩에서 &lt;var&gt;binding&lt;/var&gt; 은 명령입니다.</target>
        </trans-unit>
        <trans-unit id="3b09d5a5fd5d8456fe425afcc9a7b5eddd4a5049" translate="yes" xml:space="preserve">
          <source>This specifies the amount of the image&amp;rsquo;s height to use for its ascent&amp;mdash;that is, the part above the baseline. The value, &lt;var&gt;ascent&lt;/var&gt;, must be a number in the range 0 to 100, or the symbol &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">이것은 상승에 사용할 이미지 높이의 양, 즉 기준선 위 부분을 지정합니다. 값 &lt;var&gt;ascent&lt;/var&gt; 는 0에서 100 사이의 숫자이거나 &lt;code&gt;center&lt;/code&gt; 기호 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="16ee6a4b9a9e9e0999d2f53b7f0854dcff245228" translate="yes" xml:space="preserve">
          <source>This specifies the criterion for when the hash table is full (so it should be made larger). The value, &lt;var&gt;threshold&lt;/var&gt;, should be a positive floating-point number, no greater than 1. The hash table is full whenever the actual number of entries exceeds the nominal size multiplied by an approximation to this value. The default for &lt;var&gt;threshold&lt;/var&gt; is 0.8125.</source>
          <target state="translated">이것은 해시 테이블이 꽉 찼을 때에 대한 기준을 지정합니다 (따라서 더 크게 만들어야 함). 값 &lt;var&gt;threshold&lt;/var&gt; 는 1보다 크지 않은 양의 부동 소수점 숫자 여야합니다. 해시 테이블은 실제 항목 수가 공칭 크기에이 값에 대한 근사를 곱한 값을 초과 할 때마다 가득 찼습니다. &lt;var&gt;threshold&lt;/var&gt; 의 기본값 은 0.8125입니다.</target>
        </trans-unit>
        <trans-unit id="80e656fda6f3abfec4b701bcf321f0a84418d9fd" translate="yes" xml:space="preserve">
          <source>This specifies the file containing the sound to play. If the file name is not absolute, it is expanded against the directory &lt;code&gt;data-directory&lt;/code&gt;.</source>
          <target state="translated">재생할 사운드가 포함 된 파일을 지정합니다. 파일 이름이 절대적이지 않으면 &lt;code&gt;data-directory&lt;/code&gt; 디렉토리에 대해 확장 됩니다.</target>
        </trans-unit>
        <trans-unit id="e0e00dec6d1703f97c6b4cb314ea0b91b9b5c3f9" translate="yes" xml:space="preserve">
          <source>This specifies the method of key lookup for this hash table. The default is &lt;code&gt;eql&lt;/code&gt;; &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt; are other alternatives:</source>
          <target state="translated">이 해시 테이블에 대한 키 조회 방법을 지정합니다. 기본값은 &lt;code&gt;eql&lt;/code&gt; 입니다 . &lt;code&gt;eq&lt;/code&gt; 및 &lt;code&gt;equal&lt;/code&gt; 은 다른 대안입니다.</target>
        </trans-unit>
        <trans-unit id="02f66248031d6c07808e4997b2b86d55abbdd724" translate="yes" xml:space="preserve">
          <source>This specifies the name of the desktop filename representing the calling program, like &amp;lsquo;</source>
          <target state="translated">이것은 호출 프로그램을 나타내는 데스크탑 파일 이름의 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4b2119186627a5ff369dc726d7edc0ee7f5e9ce4" translate="yes" xml:space="preserve">
          <source>This specifies the pointer shape when the mouse pointer is over this image. See &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Pointer Shape&lt;/a&gt;, for available pointer shapes.</source>
          <target state="translated">마우스 포인터가이 이미지 위에있을 때 포인터 모양을 지정합니다. 사용 가능한 포인터 모양 은 &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;포인터 모양을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e46c3d1f2e901a34a06d424a73afc21b9b3e211" translate="yes" xml:space="preserve">
          <source>This specifies the position of the left frame edge relative to the left edge of its display or parent frame. The integer &lt;var&gt;pos&lt;/var&gt; may be positive or negative; a negative value specifies a position outside the screen or parent frame or on a monitor other than the primary one (for multi-monitor displays).</source>
          <target state="translated">디스플레이 또는 상위 프레임의 왼쪽 가장자리를 기준으로 왼쪽 프레임 가장자리의 위치를 ​​지정합니다. 정수 &lt;var&gt;pos&lt;/var&gt; 는 양수 또는 음수 일 수 있습니다. 음수 값은 화면 또는 상위 프레임 외부 또는 기본 프레임 (다중 모니터 디스플레이의 경우)이 아닌 다른 모니터의 위치를 ​​지정합니다.</target>
        </trans-unit>
        <trans-unit id="957429b50e3085c529b603ab0ba338f67841d193" translate="yes" xml:space="preserve">
          <source>This specifies the position of the right frame edge relative to the right edge of the display or parent frame. The integer &lt;var&gt;pos&lt;/var&gt; may be positive or negative; a negative value specifies a position outside the screen or parent frame or on a monitor other than the primary one (for multi-monitor displays).</source>
          <target state="translated">디스플레이 또는 상위 프레임의 오른쪽 가장자리를 기준으로 오른쪽 프레임 가장자리의 위치를 ​​지정합니다. 정수 &lt;var&gt;pos&lt;/var&gt; 는 양수 또는 음수 일 수 있습니다. 음수 값은 화면 또는 상위 프레임 외부 또는 기본 프레임 (다중 모니터 디스플레이의 경우)이 아닌 다른 모니터의 위치를 ​​지정합니다.</target>
        </trans-unit>
        <trans-unit id="4907b0f80b9cc6eaa461804718a3518fa0e9a301" translate="yes" xml:space="preserve">
          <source>This specifies the raw image data. Each image descriptor must have either &lt;code&gt;:data&lt;/code&gt; or &lt;code&gt;:file&lt;/code&gt;, but not both.</source>
          <target state="translated">원시 이미지 데이터를 지정합니다. 각 이미지 설명자에는 &lt;code&gt;:data&lt;/code&gt; 또는 &lt;code&gt;:file&lt;/code&gt; 중 하나가 있어야 하지만 둘 다 있으면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="1d7b6dbb2d56faacdaa4ae079c64a9dab06fd918" translate="yes" xml:space="preserve">
          <source>This specifies the sound to play without need to refer to a file. The value, &lt;var&gt;data&lt;/var&gt;, should be a string containing the same bytes as a sound file. We recommend using a unibyte string.</source>
          <target state="translated">파일을 참조 할 필요없이 재생할 사운드를 지정합니다. 값 &lt;var&gt;data&lt;/var&gt; 는 사운드 파일과 동일한 바이트를 포함하는 문자열이어야합니다. 유니 바이트 문자열을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cfff7690d010381cc8efe398693dc495791b7cbb" translate="yes" xml:space="preserve">
          <source>This specifies the system device on which to play the sound, as a string. The default device is system-dependent.</source>
          <target state="translated">사운드를 재생할 시스템 장치를 문자열로 지정합니다. 기본 장치는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="12405c5a16df3c4cdd1ee941936ed75b73ff085f" translate="yes" xml:space="preserve">
          <source>This stands for &amp;lsquo;</source>
          <target state="translated">이것은 '</target>
        </trans-unit>
        <trans-unit id="5a953af8aa164ab5f8d58298d2321db2ec0308df" translate="yes" xml:space="preserve">
          <source>This stands for a newline.</source>
          <target state="translated">이것은 개행을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="9b0016aa8b716c6af855126075823f4252e7ec78" translate="yes" xml:space="preserve">
          <source>This stands for a single &amp;lsquo;</source>
          <target state="translated">이것은 단일 '</target>
        </trans-unit>
        <trans-unit id="0e917109cff73a7b823395ab21db7224d5f7916a" translate="yes" xml:space="preserve">
          <source>This stands for a tab character.</source>
          <target state="translated">이것은 탭 문자를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3a7a2d671e051c239370ec053c15f604bdabbddc" translate="yes" xml:space="preserve">
          <source>This stands for itself (for compatibility with &lt;code&gt;replace-regexp&lt;/code&gt; and related commands; see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html#Regexp-Replace&quot;&gt;Regexp Replace&lt;/a&gt; in</source>
          <target state="translated">이과의 호환성을 위해 (그 자체를 의미 &lt;code&gt;replace-regexp&lt;/code&gt; 및 관련 명령, 참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html#Regexp-Replace&quot;&gt;정규 표현식은 교체&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="07f5cc5b2c51eab6ca801b512988900191b8802d" translate="yes" xml:space="preserve">
          <source>This stands for itself (for compatibility with &lt;code&gt;replace-regexp&lt;/code&gt; and related commands; see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html#Regexp-Replace&quot;&gt;Regexp Replace&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3387e4f79d8cd590967097ff5b127243b7b1ed8f" translate="yes" xml:space="preserve">
          <source>This stands for the ISO 8601 date format, which is like &amp;lsquo;</source>
          <target state="translated">이것은 ISO 8601 날짜 형식을 나타내며 '</target>
        </trans-unit>
        <trans-unit id="edd29e424029ff0854d7cfa739b245a5eec7b500" translate="yes" xml:space="preserve">
          <source>This stands for the abbreviated name of the day of week.</source>
          <target state="translated">요일의 축약 된 이름을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bc9222c1841aeb4cbf336678d516197d20ceac01" translate="yes" xml:space="preserve">
          <source>This stands for the abbreviated name of the month.</source>
          <target state="translated">이것은 월의 축약 된 이름을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8b449135807d1a7f8bad8de5a1ec22c38595cd1d" translate="yes" xml:space="preserve">
          <source>This stands for the calendar quarter (1&amp;ndash;4).</source>
          <target state="translated">이것은 달력 분기 (1-4)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3dd560747b9d649e7854d9c75acc46622ee0a66a" translate="yes" xml:space="preserve">
          <source>This stands for the century, that is, the year divided by 100, truncated toward zero. The default field width is 2.</source>
          <target state="translated">이것은 세기, 즉 연도를 100으로 나누고 0으로 잘린 것을 나타냅니다. 기본 필드 너비는 2입니다.</target>
        </trans-unit>
        <trans-unit id="ae227701e35d35c1d29a843a26717ba68366fc3a" translate="yes" xml:space="preserve">
          <source>This stands for the day of month, blank-padded.</source>
          <target state="translated">이것은 공백으로 채워진 날짜를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="49b285e0dbd8927bb3605f6adff88ee0e560d820" translate="yes" xml:space="preserve">
          <source>This stands for the day of month, zero-padded.</source>
          <target state="translated">이것은 0으로 채워지는 날짜를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="064771e0212f52eaf6bb077d5c89e012dbbf7e9a" translate="yes" xml:space="preserve">
          <source>This stands for the day of the year (001&amp;ndash;366).</source>
          <target state="translated">이것은 일 (001-366)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3def3d214ee2f920b6f973c46db794c165bad230" translate="yes" xml:space="preserve">
          <source>This stands for the entire text being replaced.</source>
          <target state="translated">이것은 대체되는 전체 텍스트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="97a3f005bc528071dc94bda474d65907b2f15eb6" translate="yes" xml:space="preserve">
          <source>This stands for the full name of the day of week.</source>
          <target state="translated">이것은 요일의 전체 이름을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5ad4f46ba0d97d78d7b8729757ef4ae745b1d4bd" translate="yes" xml:space="preserve">
          <source>This stands for the full name of the month.</source>
          <target state="translated">이 달의 전체 이름을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="968fede9c0f20efacabdfce884cba8aed4ae107c" translate="yes" xml:space="preserve">
          <source>This stands for the hour (0&amp;ndash;23), blank padded.</source>
          <target state="translated">이것은 시간 (0&amp;ndash;23)을 나타내며 공백으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="ea6d60d5b7ddf9d7445311728c02de86ae7c5e80" translate="yes" xml:space="preserve">
          <source>This stands for the hour (00&amp;ndash;23).</source>
          <target state="translated">이것은 시간 (00-23)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5e456b0ab7b5e4d1a8c3aaef0985bd7177d01aa9" translate="yes" xml:space="preserve">
          <source>This stands for the hour (01&amp;ndash;12).</source>
          <target state="translated">이것은 시간 (01-12)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="704f5f4a59d6eecbbc9520f49b5d500586687258" translate="yes" xml:space="preserve">
          <source>This stands for the hour (1&amp;ndash;12), blank padded.</source>
          <target state="translated">이것은 시간 (1-12)을 나타내며 공백으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="d9c549197fb5ee38e6fe7635c9fe0a9cd461efcc" translate="yes" xml:space="preserve">
          <source>This stands for the integer number of seconds since the epoch.</source>
          <target state="translated">이것은 에포크 이후의 정수 초를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5088832e60d39beb8ff508ab8c2650dbec32f8aa" translate="yes" xml:space="preserve">
          <source>This stands for the minute (00&amp;ndash;59).</source>
          <target state="translated">이것은 분 (00-59)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="39797223f5511ac56dcc1624ce5474a859de6052" translate="yes" xml:space="preserve">
          <source>This stands for the month (01&amp;ndash;12).</source>
          <target state="translated">이것은 월 (01-12)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="04dfcba9a2dd5c7e09acacd439a11e31c0e060ed" translate="yes" xml:space="preserve">
          <source>This stands for the nanoseconds (000000000&amp;ndash;999999999). To ask for fewer digits, use &amp;lsquo;</source>
          <target state="translated">이것은 나노초 (000000000&amp;ndash;999999999)를 나타냅니다. 더 적은 숫자를 요청하려면 '</target>
        </trans-unit>
        <trans-unit id="3db94f8a20bfee370c172a8d80873aac1a581572" translate="yes" xml:space="preserve">
          <source>This stands for the numeric day of week (0&amp;ndash;6). Sunday is day 0.</source>
          <target state="translated">이것은 숫자 요일 (0&amp;ndash;6)을 나타냅니다. 일요일은 0 일입니다.</target>
        </trans-unit>
        <trans-unit id="177650152cc80e4212fa464ec5e952c230ed4210" translate="yes" xml:space="preserve">
          <source>This stands for the numeric day of week (1&amp;ndash;7). Monday is day 1.</source>
          <target state="translated">이것은 숫자 요일 (1&amp;ndash;7)을 나타냅니다. 월요일은 1 일차입니다.</target>
        </trans-unit>
        <trans-unit id="c083941f6ca04d443d5cb2cafb5019b62a031e61" translate="yes" xml:space="preserve">
          <source>This stands for the second (00&amp;ndash;59, or 00&amp;ndash;60 on platforms that support leap seconds).</source>
          <target state="translated">이것은 초를 나타냅니다 (윤초를 지원하는 플랫폼에서는 00&amp;ndash;59 또는 00&amp;ndash;60).</target>
        </trans-unit>
        <trans-unit id="0c4c0c2b67f5e5924f94befd6929b445660d9af1" translate="yes" xml:space="preserve">
          <source>This stands for the text that matched the &lt;var&gt;n&lt;/var&gt;th subexpression in the original regexp. Subexpressions are those expressions grouped inside &amp;lsquo;</source>
          <target state="translated">이것은 원래 정규 표현식 의 &lt;var&gt;n&lt;/var&gt; 번째 하위 표현식 과 일치하는 텍스트를 나타냅니다 . 하위 표현식은 '</target>
        </trans-unit>
        <trans-unit id="c18f82e02830c17a25eb0725b6975c2c63575303" translate="yes" xml:space="preserve">
          <source>This stands for the time zone abbreviation (e.g., &amp;lsquo;</source>
          <target state="translated">표준 시간대 약어 (예 : '</target>
        </trans-unit>
        <trans-unit id="fbb40385db73e63604136e8b321108475638c373" translate="yes" xml:space="preserve">
          <source>This stands for the time zone numerical offset. The &amp;lsquo;</source>
          <target state="translated">이것은 시간대 숫자 오프셋을 나타냅니다. '</target>
        </trans-unit>
        <trans-unit id="5b19d340158d0c3da63219de4486245a577e2083" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year (01&amp;ndash;52), assuming that weeks start on Monday.</source>
          <target state="translated">이것은 주가 월요일에 시작한다고 가정하고 한 해의 주 (01&amp;ndash;52)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dfce6f25ec1e050917792e0e39e9c33fb54d05e1" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year (01&amp;ndash;52), assuming that weeks start on Sunday.</source>
          <target state="translated">이것은 주가 일요일에 시작된다고 가정하여 한 해의 주 (01&amp;ndash;52)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b8029306811fc4956c9103561527aa3510617784" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year according to ISO 8601.</source>
          <target state="translated">이것은 ISO 8601에 따라 한 해의 주를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="90f60c021a9289d1ed10fd708c351cdcc2c3e640" translate="yes" xml:space="preserve">
          <source>This stands for the year corresponding to the ISO week within the century.</source>
          <target state="translated">이것은 세기 내의 ISO 주에 해당하는 연도를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="734051b8f4d85dc4b7973e61ba1e5de2940277d3" translate="yes" xml:space="preserve">
          <source>This stands for the year corresponding to the ISO week.</source>
          <target state="translated">이것은 ISO 주에 해당하는 연도를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a481e48ac8618a686937c594d2ec24c50c7933f5" translate="yes" xml:space="preserve">
          <source>This stands for the year with century.</source>
          <target state="translated">이것은 세기가있는 해를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c52be8e987612c175ad50ad027d72af938ebf6fd" translate="yes" xml:space="preserve">
          <source>This stands for the year without century (00&amp;ndash;99).</source>
          <target state="translated">이것은 세기가없는 연도 (00-99)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0a812dcbe35e574bb3ff47b98fb24acf995d335" translate="yes" xml:space="preserve">
          <source>This state of affairs might occur after</source>
          <target state="translated">이 상태는</target>
        </trans-unit>
        <trans-unit id="e50845c7ef4403d40df2b32bcbb76644f015f186" translate="yes" xml:space="preserve">
          <source>This stores &lt;var&gt;value&lt;/var&gt; as the value of the &lt;var&gt;property&lt;/var&gt; property in the property list &lt;var&gt;plist&lt;/var&gt;. It may modify &lt;var&gt;plist&lt;/var&gt; destructively, or it may construct a new list structure without altering the old. The function returns the modified property list, so you can store that back in the place where you got &lt;var&gt;plist&lt;/var&gt;. For example,</source>
          <target state="translated">속성 목록 &lt;var&gt;plist&lt;/var&gt; 에 &lt;var&gt;property&lt;/var&gt; 속성 의 값으로 &lt;var&gt;value&lt;/var&gt; 을 저장 합니다 . &lt;var&gt;plist&lt;/var&gt; 를 파괴적으로 수정 하거나 이전 목록을 변경하지 않고 새 목록 구조를 구성 할 수 있습니다. 이 함수는 수정 된 속성 목록을 반환하므로 &lt;var&gt;plist&lt;/var&gt; 를 얻은 위치에 다시 저장할 수 있습니다 . 예를 들면</target>
        </trans-unit>
        <trans-unit id="f3388ba5c690beee5edfd9f9d5bdd75d7848169a" translate="yes" xml:space="preserve">
          <source>This string will be inserted in the buffer to represent the value corresponding to the type. The following &amp;lsquo;</source>
          <target state="translated">이 문자열은 유형에 해당하는 값을 나타 내기 위해 버퍼에 삽입됩니다. 다음과 같은 '</target>
        </trans-unit>
        <trans-unit id="c5a4d7c65fc7ec810b86841ea2eaacf36a447f37" translate="yes" xml:space="preserve">
          <source>This subsection describes &lt;em&gt;backquote-style patterns&lt;/em&gt;, a set of builtin patterns that eases structural matching. For background, see &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;.</source>
          <target state="translated">이 하위 섹션 에서는 구조적 일치를 용이하게하는 기본 제공 패턴 집합 인 &lt;em&gt;역 따옴표 스타일 패턴에&lt;/em&gt; 대해 설명 합니다. 배경은 &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional 항목을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="154429dc78dfad816a4ac29212ae25a5e888cd76" translate="yes" xml:space="preserve">
          <source>This subsection describes a few convenience functions provided by the module</source>
          <target state="translated">이 하위 섹션에서는 모듈에서 제공하는 몇 가지 편의 기능을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="86b5aca2b6065ce4c3a174a66d3a2bbe1b407627" translate="yes" xml:space="preserve">
          <source>This swaps the foreground and background colors of face &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">이것은 얼굴의 전경색과 배경색 스왑 &lt;var&gt;face&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3f649cbd02b8cfad82bd467b806fc29a75e8a69a" translate="yes" xml:space="preserve">
          <source>This symbol also serves as the event type of the event. Key bindings describe events by their types; thus, if there is a key binding for &lt;code&gt;mouse-1&lt;/code&gt;, that binding would apply to all events whose &lt;var&gt;event-type&lt;/var&gt; is &lt;code&gt;mouse-1&lt;/code&gt;.</source>
          <target state="translated">이 기호는 이벤트의 이벤트 유형으로도 사용됩니다. 키 바인딩은 유형별로 이벤트를 설명합니다. 따라서 &lt;code&gt;mouse-1&lt;/code&gt; 에 대한 키 바인딩이있는 경우 해당 바인딩은 &lt;var&gt;event-type&lt;/var&gt; 이 &lt;code&gt;mouse-1&lt;/code&gt; 인 모든 이벤트에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9217dccc658d2b4111ac58407c42c117df57d7a" translate="yes" xml:space="preserve">
          <source>This symbol is not a function; its function definition cell holds the keymap known as &lt;code&gt;help-map&lt;/code&gt;. It is defined in</source>
          <target state="translated">이 기호는 기능이 아닙니다. 함수 정의 셀에는 &lt;code&gt;help-map&lt;/code&gt; 이라는 키맵 이 있습니다 . 그것은에서 정의됩니다</target>
        </trans-unit>
        <trans-unit id="673f6e4af0c96f767d81720847bed4fb616b129e" translate="yes" xml:space="preserve">
          <source>This syntax class can be designated by either &amp;lsquo;&amp;rsquo; or &amp;lsquo;</source>
          <target state="translated">이 구문 클래스는 ''또는 '로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef814764713d6b4efc3e07483964d8fd17bda004" translate="yes" xml:space="preserve">
          <source>This syntax class does not specify a particular syntax. It says to look in the standard syntax table to find the syntax of this character.</source>
          <target state="translated">이 구문 클래스는 특정 구문을 지정하지 않습니다. 이 문자의 구문을 찾기 위해 표준 구문 테이블을 살펴 보라고합니다.</target>
        </trans-unit>
        <trans-unit id="fe0fd84ab9486a7e5129fc03483d021c695e5e96" translate="yes" xml:space="preserve">
          <source>This syntax class is primarily meant for use with the &lt;code&gt;syntax-table&lt;/code&gt; text property (see &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;). You can mark any range of characters as forming a comment, by giving the first and last characters of the range &lt;code&gt;syntax-table&lt;/code&gt; properties identifying them as generic comment delimiters.</source>
          <target state="translated">이 구문 클래스는 주로 &lt;code&gt;syntax-table&lt;/code&gt; 텍스트 속성 과 함께 사용하기위한 것입니다 ( &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;구문 속성&lt;/a&gt; 참조 ). 일반 주석 구분 기호로 식별 하는 범위 &lt;code&gt;syntax-table&lt;/code&gt; 속성 의 첫 번째 및 마지막 문자를 제공하여 모든 범위의 문자를 주석을 형성하는 것으로 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb55ccc90a19d9543bebe0f564333ab2f4125de1" translate="yes" xml:space="preserve">
          <source>This syntax class is primarily meant for use with the &lt;code&gt;syntax-table&lt;/code&gt; text property (see &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;). You can mark any range of characters as forming a string constant, by giving the first and last characters of the range &lt;code&gt;syntax-table&lt;/code&gt; properties identifying them as generic string delimiters.</source>
          <target state="translated">이 구문 클래스는 주로 &lt;code&gt;syntax-table&lt;/code&gt; 텍스트 속성 과 함께 사용하기위한 것입니다 ( &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;구문 속성&lt;/a&gt; 참조 ). 일반 문자열 구분 기호로 식별 하는 범위 &lt;code&gt;syntax-table&lt;/code&gt; 속성 의 첫 번째 및 마지막 문자를 제공하여 모든 범위의 문자를 문자열 상수로 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58f07cd6c95c32700a7e121f78af542732c60dcf" translate="yes" xml:space="preserve">
          <source>This tells Emacs that new buffers created while the current buffer is in Funny mode should not be put in Funny mode, even though the default value of &lt;code&gt;major-mode&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. By default, the value of &lt;code&gt;nil&lt;/code&gt; for &lt;code&gt;major-mode&lt;/code&gt; means to use the current buffer&amp;rsquo;s major mode when creating new buffers (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;), but with such &lt;code&gt;special&lt;/code&gt; modes, Fundamental mode is used instead. Modes such as Dired, Rmail, and Buffer List use this feature.</source>
          <target state="translated">이것은 Emacs에게 현재 버퍼가 Funny 모드에있는 동안 생성 된 새 버퍼가 &lt;code&gt;major-mode&lt;/code&gt; 의 기본값 이 &lt;code&gt;nil&lt;/code&gt; 이더라도 Funny 모드에 넣어서는 안된다는 것을 알려줍니다 . 기본적으로 &lt;code&gt;major-mode&lt;/code&gt; 대한 &lt;code&gt;nil&lt;/code&gt; 값은 새 버퍼를 만들 때 현재 버퍼의 주 모드를 사용하는 것을 의미 하지만 ( &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major 모드&lt;/a&gt; 참조 ) 이러한 &lt;code&gt;special&lt;/code&gt; 모드에서는 대신 Fundamental 모드가 사용됩니다. Dired, Rmail 및 Buffer List와 같은 모드에서이 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="bde260e27250cfd753a3c4b7e603c2a76b516f62" translate="yes" xml:space="preserve">
          <source>This tells on which side the tool bar on &lt;var&gt;frame&lt;/var&gt; is and can be one of &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt;. The only toolkit that currently supports a value other than &lt;code&gt;top&lt;/code&gt; is GTK+.</source>
          <target state="translated">이것은 &lt;var&gt;frame&lt;/var&gt; 의 도구 모음이 어느쪽에 있는지 알려주며 &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; 또는 &lt;code&gt;bottom&lt;/code&gt; 중 하나 일 수 있습니다 . 현재 &lt;code&gt;top&lt;/code&gt; 이외의 값을 지원하는 유일한 툴킷 은 GTK +입니다.</target>
        </trans-unit>
        <trans-unit id="32b8cf45acd383d2dbdafc81124a283377a4b40a" translate="yes" xml:space="preserve">
          <source>This terminal-local variable is the translate table for keyboard characters. It lets you reshuffle the keys on the keyboard without changing any command bindings. Its value is normally a char-table, or else &lt;code&gt;nil&lt;/code&gt;. (It can also be a string or vector, but this is considered obsolete.)</source>
          <target state="translated">이 터미널 로컬 변수는 키보드 문자에 대한 변환 테이블입니다. 명령 바인딩을 변경하지 않고 키보드의 키를 다시 섞을 수 있습니다. 그 값은 일반적으로 char-table 또는 &lt;code&gt;nil&lt;/code&gt; 입니다. (문자열 또는 벡터 일 수도 있지만 사용되지 않는 것으로 간주됩니다.)</target>
        </trans-unit>
        <trans-unit id="6c1f17a39e214c3fc1899b7de28e5d36f79d9112" translate="yes" xml:space="preserve">
          <source>This terminal-local variable tells Lisp programs what window system Emacs is using for displaying the frame. The possible values are</source>
          <target state="translated">이 터미널 로컬 변수는 Emacs가 프레임을 표시하기 위해 사용하는 윈도우 시스템을 Lisp 프로그램에 알려줍니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd7cffc1adb6bc8407cfad443279f6431bbea02f" translate="yes" xml:space="preserve">
          <source>This text property is used to display a sequence of characters as a single glyph composed from components. But the value of the property itself is completely internal to Emacs and should not be manipulated directly by, for instance, &lt;code&gt;put-text-property&lt;/code&gt;.</source>
          <target state="translated">이 텍스트 속성은 문자 시퀀스를 구성 요소로 구성된 단일 글리프로 표시하는 데 사용됩니다. 그러나 속성 자체의 값은 완전히 Emacs 내부에 있으며, 예를 들어 &lt;code&gt;put-text-property&lt;/code&gt; 에 의해 직접 조작되어서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="f8c4748eb4bcc830914ab5965b177f8a79c96393" translate="yes" xml:space="preserve">
          <source>This text property tells where to display temporary messages in an active minibuffer. Specifically, the first character of the minibuffer text which has this property will have the temporary message displayed before it. The default is to display temporary messages at the end of the minibuffer text. This text property is used by the function that is the default value of &lt;code&gt;set-message-function&lt;/code&gt; (see &lt;a href=&quot;displaying-messages#Displaying-Messages&quot;&gt;Displaying Messages&lt;/a&gt;).</source>
          <target state="translated">이 텍스트 속성은 활성 미니 버퍼에서 임시 메시지를 표시 할 위치를 알려줍니다. 특히,이 속성을 가진 미니 버퍼 텍스트의 첫 번째 문자는 그 앞에 임시 메시지가 표시됩니다. 기본값은 미니 버퍼 텍스트 끝에 임시 메시지를 표시하는 것입니다. 이 텍스트 속성은 &lt;code&gt;set-message-function&lt;/code&gt; 의 기본값 인 함수에서 사용합니다 ( &lt;a href=&quot;displaying-messages#Displaying-Messages&quot;&gt;메시지 표시&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="80d3f28d900c71c4a56a870fd0dd86a495abb863" translate="yes" xml:space="preserve">
          <source>This translation of one event into two happens only for characters, not for other kinds of input events. Thus,</source>
          <target state="translated">하나의 이벤트를 두 개의 이벤트로 변환하는 것은 다른 종류의 입력 이벤트가 아닌 문자에 대해서만 발생합니다. 그러므로,</target>
        </trans-unit>
        <trans-unit id="4042fd2a7bbc1fbf60ab85450aadd81afe2c53ef" translate="yes" xml:space="preserve">
          <source>This user option provides a convenient way to set &lt;code&gt;glyphless-char-display&lt;/code&gt; for groups of similar characters. Do not set its value directly from Lisp code; the value takes effect only via a custom &lt;code&gt;:set&lt;/code&gt; function (see &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;), which updates &lt;code&gt;glyphless-char-display&lt;/code&gt;.</source>
          <target state="translated">이 사용자 옵션은 유사한 문자 그룹에 대해 &lt;code&gt;glyphless-char-display&lt;/code&gt; 를 설정하는 편리한 방법을 제공합니다 . Lisp 코드에서 직접 값을 설정하지 마십시오. 이 값은 &lt;code&gt;glyphless-char-display&lt;/code&gt; 를 업데이트 하는 사용자 정의 &lt;code&gt;:set&lt;/code&gt; 함수 ( &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;변수 정의&lt;/a&gt; 참조 )를 통해서만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c43441b638e24d3c31e405be655f435a0b96c1e" translate="yes" xml:space="preserve">
          <source>This user option specifies the minimum severity level that should be logged in the warnings buffer. The default is &lt;code&gt;:warning&lt;/code&gt;, which means to log all warnings except &lt;code&gt;:debug&lt;/code&gt; warnings.</source>
          <target state="translated">이 사용자 옵션은 경고 버퍼에 기록되어야하는 최소 심각도 수준을 지정합니다. 기본값은 &lt;code&gt;:warning&lt;/code&gt; 이며, 이는 &lt;code&gt;:debug&lt;/code&gt; 경고를 제외한 모든 경고를 기록함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="e64c878b26925434e6a40e0303b5fb803eb4cc51" translate="yes" xml:space="preserve">
          <source>This user option specifies the minimum severity level that should be shown immediately to the user. The default is &lt;code&gt;:warning&lt;/code&gt;, which means to immediately display all warnings except &lt;code&gt;:debug&lt;/code&gt; warnings.</source>
          <target state="translated">이 사용자 옵션은 사용자에게 즉시 표시되어야하는 최소 심각도 수준을 지정합니다. 기본값은 &lt;code&gt;:warning&lt;/code&gt; 입니다 . 즉, &lt;code&gt;:debug&lt;/code&gt; 경고를 제외한 모든 경고를 즉시 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="b5b9b2cc09e34e60fa27afe3f2f9df4ee68dc6f1" translate="yes" xml:space="preserve">
          <source>This value is currently unused.</source>
          <target state="translated">이 값은 현재 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d0808294a46fd7a89020048de1c201288dc7edcf" translate="yes" xml:space="preserve">
          <source>This value means the parameter is saved neither by &lt;code&gt;window-state-get&lt;/code&gt; nor by &lt;code&gt;current-window-configuration&lt;/code&gt;.</source>
          <target state="translated">이 값은 매개 변수가 &lt;code&gt;window-state-get&lt;/code&gt; 또는 &lt;code&gt;current-window-configuration&lt;/code&gt; 에 의해 저장되지 않음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="4bfc68b6ab18e3fede182d98877be70af1835e06" translate="yes" xml:space="preserve">
          <source>This value specifies that the parameter is saved by &lt;code&gt;current-window-configuration&lt;/code&gt; and (provided its &lt;var&gt;writable&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;) by &lt;code&gt;window-state-get&lt;/code&gt;.</source>
          <target state="translated">이 값은 매개 변수가 &lt;code&gt;current-window-configuration&lt;/code&gt; 에 의해 저장되고 ( &lt;var&gt;writable&lt;/var&gt; 인수가 &lt;code&gt;nil&lt;/code&gt; 인 경우 ) &lt;code&gt;window-state-get&lt;/code&gt; 에 의해 저장됨을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="396365e7ff81be1272c7622f94ceb6bdf3a10927" translate="yes" xml:space="preserve">
          <source>This variable (if non-&lt;code&gt;nil&lt;/code&gt;) specifies a file for recording the names of all the auto-save files. Each time Emacs does auto-saving, it writes two lines into this file for each buffer that has auto-saving enabled. The first line gives the name of the visited file (it&amp;rsquo;s empty if the buffer has none), and the second gives the name of the auto-save file.</source>
          <target state="translated">이 변수 ( &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 )는 모든 자동 저장 파일의 이름을 기록하기위한 파일을 지정합니다. Emacs가 자동 저장을 수행 할 때마다 자동 저장이 활성화 된 각 버퍼에 대해이 파일에 두 줄을 기록합니다. 첫 번째 줄은 방문한 파일의 이름을 제공하고 (버퍼에없는 경우 비어 있음) 두 번째 줄은 자동 저장 파일의 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8af93758c6ea4b3157635acdea90f48aa7e3a4b4" translate="yes" xml:space="preserve">
          <source>This variable affects the behavior of &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;backward-word&lt;/code&gt;, and everything that uses them. If it is non-&lt;code&gt;nil&lt;/code&gt;, then characters in the escape and character-quote syntax classes count as part of words. Otherwise, they do not.</source>
          <target state="translated">이 변수는 &lt;code&gt;forward-word&lt;/code&gt; 및 &lt;code&gt;backward-word&lt;/code&gt; 의 동작 과이를 사용하는 모든 것에 영향을줍니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 이스케이프 및 문자 인용 구문 클래스의 문자는 단어의 일부로 간주됩니다. 그렇지 않으면 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc51974be5abb325d7e9dd33a53d17599959c4e2" translate="yes" xml:space="preserve">
          <source>This variable affects the behavior of &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;backward-word&lt;/code&gt;, and everything that uses them. Its value is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) of functions to search for word boundaries. If a character has a non-&lt;code&gt;nil&lt;/code&gt; entry in this table, then when a word starts or ends with that character, the corresponding function will be called with 2 arguments: &lt;var&gt;pos&lt;/var&gt; and &lt;var&gt;limit&lt;/var&gt;. The function should return the position of the other word boundary. Specifically, if &lt;var&gt;pos&lt;/var&gt; is smaller than &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;pos&lt;/var&gt; is at the beginning of a word, and the function should return the position after the last character of the word; otherwise, &lt;var&gt;pos&lt;/var&gt; is at the last character of a word, and the function should return the position of that word&amp;rsquo;s first character.</source>
          <target state="translated">이 변수는 &lt;code&gt;forward-word&lt;/code&gt; 및 &lt;code&gt;backward-word&lt;/code&gt; 의 동작 과이를 사용하는 모든 것에 영향을줍니다. 그 값은 단어 경계를 검색하는 함수의 &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;문자&lt;/a&gt; 테이블 ( Char-Tables 참조 )입니다. 문자 가이 테이블에서 &lt;code&gt;nil&lt;/code&gt; 이 아닌 항목을 가지고있는 경우 단어가 해당 문자로 시작하거나 끝날 때 해당 함수는 &lt;var&gt;pos&lt;/var&gt; 및 &lt;var&gt;limit&lt;/var&gt; 의 두 인수로 호출 됩니다 . 함수는 다른 단어 경계의 위치를 ​​반환해야합니다. 경우 즉, &lt;var&gt;pos&lt;/var&gt; 보다 작 &lt;var&gt;limit&lt;/var&gt; 다음, &lt;var&gt;pos&lt;/var&gt; 단어의 시작 부분에, 상기 기능은 단어의 마지막 문자의 위치를 반환한다; 그렇지 않으면, &lt;var&gt;pos&lt;/var&gt; 는 단어의 마지막 문자에 있으며 함수는 해당 단어의 첫 문자 위치를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="b6a24ba7e7a7fe338c696f697deb90284730b3b9" translate="yes" xml:space="preserve">
          <source>This variable affects the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting. It does not affect &lt;code&gt;princ&lt;/code&gt;. Here is an example using &lt;code&gt;prin1&lt;/code&gt;:</source>
          <target state="translated">이 변수는 인쇄 기능에 영향을 &lt;code&gt;prin1&lt;/code&gt; 및 &lt;code&gt;print&lt;/code&gt; 인용과 그 인쇄. &lt;code&gt;princ&lt;/code&gt; 에는 영향을주지 않습니다 . 다음은 &lt;code&gt;prin1&lt;/code&gt; 을 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="6afefb9044b50bb998d4fab4b655e075f7420cab" translate="yes" xml:space="preserve">
          <source>This variable allow setting which special events &lt;code&gt;while-no-input&lt;/code&gt; should ignore. It is a list of event symbols (see &lt;a href=&quot;event-examples#Event-Examples&quot;&gt;Event Examples&lt;/a&gt;).</source>
          <target state="translated">이 변수를 사용하면 &lt;code&gt;while-no-input&lt;/code&gt; 이 없는 동안 무시해야하는 특수 이벤트 를 설정할 수 있습니다. 이벤트 심볼의 목록입니다 ( &lt;a href=&quot;event-examples#Event-Examples&quot;&gt;이벤트 예&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7b537327c14ead258a3541adaa1376e0ca95e3ea" translate="yes" xml:space="preserve">
          <source>This variable allows major modes to override the key bindings for particular minor modes. The elements of this alist look like the elements of &lt;code&gt;minor-mode-map-alist&lt;/code&gt;: &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt;
. &lt;var&gt;keymap&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이 변수를 사용하면 주 모드가 특정 부 모드에 대한 키 바인딩을 재정의 할 수 있습니다. 이 alist의 요소는 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; : &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt; . &lt;var&gt;keymap&lt;/var&gt;)&lt;/code&gt; 의 요소처럼 보입니다 .</target>
        </trans-unit>
        <trans-unit id="530af1cea5e9f2c8bddfe1ad4730aec6c3806310" translate="yes" xml:space="preserve">
          <source>This variable allows the user to specify the dimensions of graphical displays returned by &lt;code&gt;display-mm-height&lt;/code&gt; and &lt;code&gt;display-mm-width&lt;/code&gt; in case the system provides incorrect values.</source>
          <target state="translated">이 변수를 사용하면 시스템이 잘못된 값을 제공하는 경우 &lt;code&gt;display-mm-height&lt;/code&gt; 및 &lt;code&gt;display-mm-width&lt;/code&gt; 가 반환하는 그래픽 디스플레이의 크기를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="638c9ca74c10e3a9ffe0efaa9db9b416b31d0f88" translate="yes" xml:space="preserve">
          <source>This variable alters the action of &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; as described above.</source>
          <target state="translated">이 변수 는 위에서 설명한대로 &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; 의 동작을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="3b607c668560c735b23877aee893242dff7ec052" translate="yes" xml:space="preserve">
          <source>This variable automatically becomes buffer-local when set.</source>
          <target state="translated">이 변수는 설정되면 자동으로 버퍼 로컬이됩니다.</target>
        </trans-unit>
        <trans-unit id="cc32379074d162cca56e22d0efa11b26935e4821" translate="yes" xml:space="preserve">
          <source>This variable can be buffer-local.</source>
          <target state="translated">이 변수는 버퍼 로컬 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79db4611e6e1a7f4ff38923fb56fd4fa3c0112fa" translate="yes" xml:space="preserve">
          <source>This variable can be used to customize the behavior of the</source>
          <target state="translated">이 변수를 사용하여</target>
        </trans-unit>
        <trans-unit id="6a51d16aca34c2aebf4460ccbddbca97f87926c2" translate="yes" xml:space="preserve">
          <source>This variable contains a list of type symbols for image formats which are potentially supported in the current configuration.</source>
          <target state="translated">이 변수는 현재 구성에서 잠재적으로 지원되는 이미지 형식에 대한 유형 기호 목록을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c036ffaeed03edc809a86a2cee550de0fdd25651" translate="yes" xml:space="preserve">
          <source>This variable contains a regexp that is guaranteed not to match any string at all. It is particularly useful as default value for variables that may be set to a pattern that actually matches something.</source>
          <target state="translated">이 변수에는 문자열과 전혀 일치하지 않는 정규 표현식이 포함되어 있습니다. 실제로 어떤 것과 일치하는 패턴으로 설정 될 수있는 변수의 기본값으로 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="83869bf511c19ccf200615448ea094eb8264fd05" translate="yes" xml:space="preserve">
          <source>This variable contains an association list of file name patterns (regular expressions) and corresponding major mode commands. Usually, the file name patterns test for suffixes, such as &amp;lsquo;</source>
          <target state="translated">이 변수에는 파일 이름 패턴 (정규식) 및 해당 주요 모드 명령의 연관 목록이 포함됩니다. 일반적으로 파일 이름 패턴은 '와 같은 접미사를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="e804e8c8b587ca36a6d3e32c7a05dc988aeb0175" translate="yes" xml:space="preserve">
          <source>This variable contains the default global keymap that maps Emacs keyboard input to commands. The global keymap is normally this keymap. The default global keymap is a full keymap that binds &lt;code&gt;self-insert-command&lt;/code&gt; to all of the printing characters.</source>
          <target state="translated">이 변수는 Emacs 키보드 입력을 명령에 매핑하는 기본 전역 키맵을 포함합니다. 전역 키맵은 일반적으로이 키맵입니다. 기본 전역 키맵은 &lt;code&gt;self-insert-command&lt;/code&gt; 을 모든 인쇄 문자에 바인딩하는 전체 키맵입니다 .</target>
        </trans-unit>
        <trans-unit id="e4be09f34ec123990f2c0246a3f4862a2359ec9f" translate="yes" xml:space="preserve">
          <source>This variable contains the string or vector that defines the keyboard macro that is currently executing. It is &lt;code&gt;nil&lt;/code&gt; if no macro is currently executing. A command can test this variable so as to behave differently when run from an executing macro. Do not set this variable yourself.</source>
          <target state="translated">이 변수에는 현재 실행중인 키보드 매크로를 정의하는 문자열 또는 벡터가 포함됩니다. 그것은이다 &lt;code&gt;nil&lt;/code&gt; 을 더 매크로는 현재 실행되지 않는 경우. 명령은 실행중인 매크로에서 실행할 때 다르게 작동하도록이 변수를 테스트 할 수 있습니다. 이 변수를 직접 설정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="7e6d774a84f545c518048f0a484c668d776d9a21" translate="yes" xml:space="preserve">
          <source>This variable contains the total number of garbage collections done so far in this Emacs session.</source>
          <target state="translated">이 변수는이 Emacs 세션에서 지금까지 수행 된 총 가비지 콜렉션 수를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="59f6be89e0adfe21082faa223671481442a9e882" translate="yes" xml:space="preserve">
          <source>This variable contains the total number of seconds of elapsed time during garbage collection so far in this Emacs session, as a floating-point number.</source>
          <target state="translated">이 변수는이 Emacs 세션에서 지금까지 가비지 콜렉션 동안 경과 된 총 시간 (초)을 부동 소수점 숫자로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="50d408442d8079d9f6115134b3b5c66138abfe92" translate="yes" xml:space="preserve">
          <source>This variable controls automatic deletion of processes that have terminated (due to calling &lt;code&gt;exit&lt;/code&gt; or to a signal). If it is &lt;code&gt;nil&lt;/code&gt;, then they continue to exist until the user runs &lt;code&gt;list-processes&lt;/code&gt;. Otherwise, they are deleted immediately after they exit.</source>
          <target state="translated">이 변수는 종료 된 프로세스의 자동 삭제를 제어합니다 ( &lt;code&gt;exit&lt;/code&gt; 호출 또는 신호 로 인해 ). 이 경우 &lt;code&gt;nil&lt;/code&gt; , 그들은 사용자가 실행될 때까지 계속 존재 &lt;code&gt;list-processes&lt;/code&gt; . 그렇지 않으면 종료 후 즉시 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="9f1368d3656eb83cf1871e0b34b8f8be4582bf2e" translate="yes" xml:space="preserve">
          <source>This variable controls how &lt;code&gt;recenter-top-bottom&lt;/code&gt; behaves when called with no argument. The default value is &lt;code&gt;(middle top
bottom)&lt;/code&gt;, which means that successive calls of &lt;code&gt;recenter-top-bottom&lt;/code&gt; with no argument cycle between placing point at the middle, top, and bottom of the window.</source>
          <target state="translated">이 변수는 인수없이 호출 될 때 최근 &lt;code&gt;recenter-top-bottom&lt;/code&gt; 동작을 제어합니다 . 기본값은 &lt;code&gt;(middle top bottom)&lt;/code&gt; 이며, 이는 창의 중간, 상단 및 하단에 포인트를 배치하는 사이에 인수 순환없이 &lt;code&gt;recenter-top-bottom&lt;/code&gt; 의 연속 호출을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="dd2f55287cae06926037fbae5d83d066c0d39908" translate="yes" xml:space="preserve">
          <source>This variable controls how scrolling is done automatically when point moves off the screen (or into the scroll margin). If the value is a positive integer &lt;var&gt;n&lt;/var&gt;, then redisplay scrolls the text up to &lt;var&gt;n&lt;/var&gt; lines in either direction, if that will bring point back into proper view. This behavior is called &lt;em&gt;conservative scrolling&lt;/em&gt;. Otherwise, scrolling happens in the usual way, under the control of other variables such as &lt;code&gt;scroll-up-aggressively&lt;/code&gt; and &lt;code&gt;scroll-down-aggressively&lt;/code&gt;.</source>
          <target state="translated">이 변수는 포인트가 화면 밖으로 (또는 스크롤 여백으로) 이동할 때 스크롤이 자동으로 수행되는 방식을 제어합니다. 값이 양의 정수 &lt;var&gt;n&lt;/var&gt; 인 경우 redisplay는 텍스트 를 어느 방향 으로든 최대 &lt;var&gt;n&lt;/var&gt; 줄 까지 스크롤합니다 . 이 동작을 &lt;em&gt;보수적 스크롤&lt;/em&gt; 이라고 합니다. 그렇지 않으면 &lt;code&gt;scroll-up-aggressively&lt;/code&gt; 및 &lt;code&gt;scroll-down-aggressively&lt;/code&gt; 와 같은 다른 변수의 제어하에 일반적인 방식으로 스크롤이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="366a8ab116129b00f2c6cd35a8a114c7dc0c97b9" translate="yes" xml:space="preserve">
          <source>This variable controls line truncation in &lt;em&gt;partial-width&lt;/em&gt; windows. A partial-width window is one that does not occupy the entire frame width (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;). If the value is &lt;code&gt;nil&lt;/code&gt;, line truncation is determined by the variable &lt;code&gt;truncate-lines&lt;/code&gt; (see above). If the value is an integer &lt;var&gt;n&lt;/var&gt;, lines are truncated if the partial-width window has fewer than &lt;var&gt;n&lt;/var&gt; columns, regardless of the value of &lt;code&gt;truncate-lines&lt;/code&gt;; if the partial-width window has &lt;var&gt;n&lt;/var&gt; or more columns, line truncation is determined by &lt;code&gt;truncate-lines&lt;/code&gt;. For any other non-&lt;code&gt;nil&lt;/code&gt; value, lines are truncated in every partial-width window, regardless of the value of &lt;code&gt;truncate-lines&lt;/code&gt;.</source>
          <target state="translated">이 변수는 &lt;em&gt;부분 너비&lt;/em&gt; 창 에서 줄 잘림을 제어합니다 . 부분 너비 창은 전체 프레임 너비를 차지하지 않는 창입니다 (창 &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;분할&lt;/a&gt; 참조 ). 값이 &lt;code&gt;nil&lt;/code&gt; 이면 줄 잘림은 변수 &lt;code&gt;truncate-lines&lt;/code&gt; 에 의해 결정됩니다 (위 참조). 값이 정수 &lt;var&gt;n&lt;/var&gt; 이면 &lt;code&gt;truncate-lines&lt;/code&gt; 값에 관계없이 부분 너비 창의 열 이 &lt;var&gt;n&lt;/var&gt; 개 미만 이면 행이 잘립니다 . 부분 너비 창에 &lt;var&gt;n&lt;/var&gt; 개 이상의 열이있는 경우 줄 잘림은 &lt;code&gt;truncate-lines&lt;/code&gt; 에 의해 결정됩니다 . 기타 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우값을 지정하면 &lt;code&gt;truncate-lines&lt;/code&gt; 값에 관계없이 모든 부분 너비 창에서 줄이 잘립니다 .</target>
        </trans-unit>
        <trans-unit id="ec8d4a2a0c45b38bcb6700c9a2108cb5ab4130dd" translate="yes" xml:space="preserve">
          <source>This variable controls printing of &amp;lsquo;charset&amp;rsquo; text property on printing a string. The value should be &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, or &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">이 변수는 문자열 인쇄시 'charset'텍스트 속성 인쇄를 제어합니다. 값은 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;t&lt;/code&gt; 또는 &lt;code&gt;default&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="ddab823b28c28e86db35ce74b222db2e26efcedb" translate="yes" xml:space="preserve">
          <source>This variable controls processing of &amp;lsquo;</source>
          <target state="translated">이 변수는 '</target>
        </trans-unit>
        <trans-unit id="54c6f7b5b68437535cb932d55639d9d12f77049e" translate="yes" xml:space="preserve">
          <source>This variable controls the display of the startup echo area message. You can suppress the startup echo area message by adding text with this form to your init file:</source>
          <target state="translated">이 변수는 시작 에코 영역 메시지의 표시를 제어합니다. 다음 형식의 텍스트를 초기화 파일에 추가하여 시작 에코 영역 메시지를 표시하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cd342ba06c23a25d16fd236a7f966d0d056af1f" translate="yes" xml:space="preserve">
          <source>This variable controls the type of device used to communicate with asynchronous subprocesses. If it is non-&lt;code&gt;nil&lt;/code&gt;, then ptys are used, when available. Otherwise, pipes are used.</source>
          <target state="translated">이 변수는 비동기 하위 프로세스와 통신하는 데 사용되는 장치 유형을 제어합니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 사용 가능한 경우 pty가 사용됩니다. 그렇지 않으면 파이프가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="08dab0e1be55eda47d60f04b66e72dbf4991257a" translate="yes" xml:space="preserve">
          <source>This variable controls the width of the block cursor displayed on extra-wide glyphs such as a tab or a stretch of white space. By default, the block cursor is only as wide as the font&amp;rsquo;s default character, and will not cover all of the width of the glyph under it if that glyph is extra-wide. A non-&lt;code&gt;nil&lt;/code&gt; value of this variable means draw the block cursor as wide as the glyph under it. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 변수는 탭이나 공백 확장과 같은 매우 넓은 글리프에 표시되는 블록 커서의 너비를 제어합니다. 기본적으로 블록 커서는 글꼴의 기본 문자만큼만 넓으며 해당 글리프가 매우 넓은 경우 그 아래의 글리프 너비를 모두 덮지 않습니다. 이 변수의 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값은 블록 커서를 그 아래의 문양만큼 넓게 그리는 것을 의미합니다. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d2c94643005270d2f6942ac824485b58fccd37c3" translate="yes" xml:space="preserve">
          <source>This variable controls where the cursor appears when a message is displayed in the echo area. If it is non-&lt;code&gt;nil&lt;/code&gt;, then the cursor appears at the end of the message. Otherwise, the cursor appears at point&amp;mdash;not in the echo area at all.</source>
          <target state="translated">이 변수는 메시지가 에코 영역에 표시 될 때 커서가 나타나는 위치를 제어합니다. 가 아닌 경우, &lt;code&gt;nil&lt;/code&gt; 다음 커서는 메시지의 끝에 나타납니다. 그렇지 않으면 커서가 에코 영역이 아닌 지점에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="78e7ca46765b59977f37436355a9173f0e329969" translate="yes" xml:space="preserve">
          <source>This variable controls whether Emacs redraws the entire screen after it has been suspended and resumed. Non-&lt;code&gt;nil&lt;/code&gt; means there is no need to redraw, &lt;code&gt;nil&lt;/code&gt; means redrawing is needed. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 변수는 Emacs가 일시 중단 및 재개 된 후 전체 화면을 다시 그릴 지 여부를 제어합니다. Non- &lt;code&gt;nil&lt;/code&gt; 은 다시 그릴 필요가 &lt;code&gt;nil&lt;/code&gt; 의미 하고 nil 은 다시 그릴 필요가 있음을 의미합니다. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="95ed5a9c5b6a6c89551fc1e814afb457f4301833" translate="yes" xml:space="preserve">
          <source>This variable controls whether and where to put vertical scroll bars in all frames. The possible values are &lt;code&gt;nil&lt;/code&gt; for no scroll bars, &lt;code&gt;left&lt;/code&gt; to put scroll bars on the left and &lt;code&gt;right&lt;/code&gt; to put scroll bars on the right.</source>
          <target state="translated">이 변수는 모든 프레임에 세로 스크롤 막대를 배치할지 여부와 위치를 제어합니다. 가능한 값은 스크롤 막대가없는 경우 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; 에 스크롤 막대를 배치하려면 왼쪽, 스크롤 막대를 &lt;code&gt;right&lt;/code&gt; 에 배치 하려면 왼쪽 입니다.</target>
        </trans-unit>
        <trans-unit id="7df164e792b3f011293c3807677c5d151cc496d6" translate="yes" xml:space="preserve">
          <source>This variable controls whether matching against the regular expressions in the value of &lt;code&gt;imenu-generic-expression&lt;/code&gt; is case-sensitive: &lt;code&gt;t&lt;/code&gt;, the default, means matching should ignore case.</source>
          <target state="translated">이 변수는 &lt;code&gt;imenu-generic-expression&lt;/code&gt; 값에서 정규식에 대한 일치 가 대소 문자를 구분 하는지 여부를 제어합니다 . 기본값 인 &lt;code&gt;t&lt;/code&gt; 는 일치가 대소 문자를 무시해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d02e62e020640c94610e93821c553803a4840267" translate="yes" xml:space="preserve">
          <source>This variable controls whether overwrite mode is in effect. The value should be &lt;code&gt;overwrite-mode-textual&lt;/code&gt;, &lt;code&gt;overwrite-mode-binary&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;overwrite-mode-textual&lt;/code&gt; specifies textual overwrite mode (treats newlines and tabs specially), and &lt;code&gt;overwrite-mode-binary&lt;/code&gt; specifies binary overwrite mode (treats newlines and tabs like any other characters).</source>
          <target state="translated">이 변수는 덮어 쓰기 모드가 적용되는지 여부를 제어합니다. 값은 &lt;code&gt;overwrite-mode-textual&lt;/code&gt; , &lt;code&gt;overwrite-mode-binary&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 이어야합니다 . &lt;code&gt;overwrite-mode-textual&lt;/code&gt; 은 텍스트 덮어 쓰기 모드 (특별히 줄 바꿈 및 탭 처리)를 지정하고 &lt;code&gt;overwrite-mode-binary&lt;/code&gt; 는 이진 덮어 쓰기 모드 (다른 문자와 마찬가지로 줄 바꿈 및 탭 처리)를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="71582013e38557cb3e57f0a7f2ea5f5ca1a89269" translate="yes" xml:space="preserve">
          <source>This variable controls whether splitting a window shall make a new parent window. The following values are recognized:</source>
          <target state="translated">이 변수는 창 분할이 새 부모 창을 만들지 여부를 제어합니다. 다음 값이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="5eb9cb044b76a0dc1c9f45e7078a6e99b97f7127" translate="yes" xml:space="preserve">
          <source>This variable controls whether to display horizontal scroll bars on all frames.</source>
          <target state="translated">이 변수는 모든 프레임에 가로 스크롤 막대를 표시할지 여부를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="a632ac8d482713a1abb64ffbcdfcbb77d0cb10ea" translate="yes" xml:space="preserve">
          <source>This variable controls whether to make a single non-numbered backup file or multiple numbered backups.</source>
          <target state="translated">이 변수는 번호가 지정되지 않은 단일 백업 파일을 만들지 또는 여러 번호가 지정된 백업을 만들지 여부를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="db956e2faef94ec73d2a29df9c5551af74d3a3ab" translate="yes" xml:space="preserve">
          <source>This variable controls whether to process file-local variables. The possible values are:</source>
          <target state="translated">이 변수는 파일 로컬 변수를 처리할지 여부를 제어합니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e955c53253b76738989360bbe0d5dea962526fe9" translate="yes" xml:space="preserve">
          <source>This variable controls which scalable fonts to use. A value of &lt;code&gt;nil&lt;/code&gt;, the default, means do not use scalable fonts. &lt;code&gt;t&lt;/code&gt; means to use any scalable font that seems appropriate for the text.</source>
          <target state="translated">이 변수는 사용할 확장 가능한 글꼴을 제어합니다. 기본값 인 &lt;code&gt;nil&lt;/code&gt; 값은 확장 가능한 글꼴을 사용하지 않음을 의미합니다. &lt;code&gt;t&lt;/code&gt; 는 텍스트에 적합한 확장 가능한 글꼴을 사용하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2b112526a1bb4b41aeac91c7058d7c49be5a3fab" translate="yes" xml:space="preserve">
          <source>This variable defines all the supported input methods. Each element defines one input method, and should have the form:</source>
          <target state="translated">이 변수는 지원되는 모든 입력 방법을 정의합니다. 각 요소는 하나의 입력 방법을 정의하며 다음 형식을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="5dcb928d3e7690e22825f5503358d051f545a004" translate="yes" xml:space="preserve">
          <source>This variable defines the limit on the total number of local variable bindings and &lt;code&gt;unwind-protect&lt;/code&gt; cleanups (see &lt;a href=&quot;cleanups#Cleanups&quot;&gt;Cleaning Up from Nonlocal Exits&lt;/a&gt;) that are allowed before Emacs signals an error (with data &lt;code&gt;&quot;Variable binding depth exceeds
max-specpdl-size&quot;&lt;/code&gt;).</source>
          <target state="translated">이 변수는 Emacs가 오류 ( &lt;code&gt;&quot;Variable binding depth exceeds max-specpdl-size&quot;&lt;/code&gt; 데이터 포함) 신호를 보내기 전에 허용되는 로컬 변수 바인딩 및 &lt;code&gt;unwind-protect&lt;/code&gt; 정리 (비 &lt;a href=&quot;cleanups#Cleanups&quot;&gt;로컬 종료에서&lt;/a&gt; 정리 참조) 의 총 수에 대한 제한을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="90c7b8613d0ea919fdf51054ed265d37e7c5583c" translate="yes" xml:space="preserve">
          <source>This variable defines the maximum depth allowed in calls to &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt;, and &lt;code&gt;funcall&lt;/code&gt; before an error is signaled (with error message &lt;code&gt;&quot;Lisp nesting exceeds max-lisp-eval-depth&quot;&lt;/code&gt;).</source>
          <target state="translated">이 변수는 오류가 신호를 &lt;code&gt;funcall&lt;/code&gt; 전에 &lt;code&gt;eval&lt;/code&gt; , &lt;code&gt;apply&lt;/code&gt; 및 funcall 호출에 허용되는 최대 깊이를 정의합니다 (오류 메시지 &lt;code&gt;&quot;Lisp nesting exceeds max-lisp-eval-depth&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="90f7b79d53299023760247cd85be49bd9dc75aa5" translate="yes" xml:space="preserve">
          <source>This variable defines the tab stop columns used by &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. It should be either &lt;code&gt;nil&lt;/code&gt;, or a list of increasing integers, which need not be evenly spaced. The list is implicitly extended to infinity through repetition of the interval between the last and penultimate elements (or &lt;code&gt;tab-width&lt;/code&gt; if the list has fewer than two elements). A value of &lt;code&gt;nil&lt;/code&gt; means a tab stop every &lt;code&gt;tab-width&lt;/code&gt; columns.</source>
          <target state="translated">이 변수는 &lt;code&gt;tab-to-tab-stop&lt;/code&gt; 에서 사용하는 탭 정지 열을 정의합니다 . &lt;code&gt;nil&lt;/code&gt; 이거나 균등 한 간격을 둘 필요가없는 증가하는 정수 목록 이어야합니다 . 목록은 마지막 요소와 끝에서 두 번째 요소 사이의 간격을 반복하여 암시 적으로 무한대로 확장됩니다 (또는 목록에 요소가 두 개 미만인 경우 &lt;code&gt;tab-width&lt;/code&gt; ). &lt;code&gt;nil&lt;/code&gt; 값은 &lt;code&gt;tab-width&lt;/code&gt; 열 마다 탭 정지를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="469a95c0cf0383f02d3f41134c71a2730552315f" translate="yes" xml:space="preserve">
          <source>This variable determines how much time should elapse before command characters echo. Its value must be a number, and specifies the number of seconds to wait before echoing. If the user types a prefix key (such as</source>
          <target state="translated">이 변수는 명령 문자가 에코되기 전에 경과해야하는 시간을 결정합니다. 값은 숫자 여야하며 에코되기 전에 대기 할 시간 (초)을 지정합니다. 사용자가 접두사 키 (예 :</target>
        </trans-unit>
        <trans-unit id="4fd680cb90cefb4c53559f6e815614208c70e0f1" translate="yes" xml:space="preserve">
          <source>This variable determines whether &lt;code&gt;defun&lt;/code&gt; should make a copy of the function definition in pure storage. If it is non-&lt;code&gt;nil&lt;/code&gt;, then the function definition is copied into pure storage.</source>
          <target state="translated">이 변수는 &lt;code&gt;defun&lt;/code&gt; 이 순수 저장소에 함수 정의의 복사본을 만들어야 하는지 여부를 결정합니다 . 가 아닌 경우, &lt;code&gt;nil&lt;/code&gt; , 다음 함수 정의는 순수한 스토리지에 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="a9b3f4c2a441b23660570b29f6532cc9e1efcda6" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs asks for confirmation before exiting the minibuffer; &lt;code&gt;completing-read&lt;/code&gt; binds this variable, and the function &lt;code&gt;minibuffer-complete-and-exit&lt;/code&gt; checks the value before exiting. If the value is &lt;code&gt;nil&lt;/code&gt;, confirmation is not required. If the value is &lt;code&gt;confirm&lt;/code&gt;, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation. If the value is &lt;code&gt;confirm-after-completion&lt;/code&gt;, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation if the user submitted the input right after any of the completion commands in &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt;.</source>
          <target state="translated">이 변수는 Emacs가 미니 버퍼를 종료하기 전에 확인을 요청할지 여부를 결정합니다. &lt;code&gt;minibuffer-complete-and-exit&lt;/code&gt; &lt;code&gt;completing-read&lt;/code&gt; 이 변수를 바인딩하고 minibuffer-complete-and-exit 함수는 종료하기 전에 값을 확인합니다. 값이 &lt;code&gt;nil&lt;/code&gt; 이면 확인이 필요하지 않습니다. 값이 &lt;code&gt;confirm&lt;/code&gt; 이면 사용자는 유효한 완료 대안이 아닌 입력으로 종료 할 수 있지만 Emacs는 확인을 요청합니다. 값이 &lt;code&gt;confirm-after-completion&lt;/code&gt; 인 경우 사용자는 유효한 완료 대안이 아닌 입력으로 종료 할 수 있지만, Emacs는 사용자가 &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt; 의 완료 명령 직후 입력을 제출했는지 확인을 요청합니다. 명령 .</target>
        </trans-unit>
        <trans-unit id="0a786b1fd8466ab1fe094be0c082410ad1c7ed6a" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs should flash the screen to represent a bell. Non-&lt;code&gt;nil&lt;/code&gt; means yes, &lt;code&gt;nil&lt;/code&gt; means no. This is effective on graphical displays, and on text terminals provided the terminal&amp;rsquo;s Termcap entry defines the visible bell capability (&amp;lsquo;</source>
          <target state="translated">이 변수는 Emacs가 종을 나타 내기 위해 화면을 깜박 일지 여부를 결정합니다. Non- &lt;code&gt;nil&lt;/code&gt; 은 yes를 의미하고 &lt;code&gt;nil&lt;/code&gt; 은 no를 의미합니다. 이것은 그래픽 디스플레이에서 효과적이며 터미널의 Termcap 항목이 가시적 인 벨 기능 ( '</target>
        </trans-unit>
        <trans-unit id="a591395fdfa218eef7172413d43a22630bda1ff1" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs should quit when &lt;code&gt;quit-flag&lt;/code&gt; is set to a value other than &lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;quit-flag&lt;/code&gt; has no special effect.</source>
          <target state="translated">이 변수 는 &lt;code&gt;quit-flag&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이외의 값으로 설정 될 때 Emacs를 종료해야하는지 여부를 결정합니다 . 경우 &lt;code&gt;inhibit-quit&lt;/code&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , 후 &lt;code&gt;quit-flag&lt;/code&gt; 특별한 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="893f930fc46c884a3893f35797c61c21e39223ef" translate="yes" xml:space="preserve">
          <source>This variable determines whether files may be written out that do &lt;em&gt;not&lt;/em&gt; end with a newline. If the value of the variable is &lt;code&gt;t&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; silently adds a newline at the end of the buffer whenever it does not already end in one. If the value is &lt;code&gt;visit&lt;/code&gt;, Emacs adds a missing newline just after it visits the file. If the value is &lt;code&gt;visit-save&lt;/code&gt;, Emacs adds a missing newline both on visiting and on saving. For any other non-&lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;save-buffer&lt;/code&gt; asks the user whether to add a newline each time the case arises.</source>
          <target state="translated">이 변수 는 줄 바꿈으로 끝나지 &lt;em&gt;않는&lt;/em&gt; 파일을 쓸 수 있는지 여부를 결정합니다 . 변수의 값이 &lt;code&gt;t&lt;/code&gt; 이면 &lt;code&gt;save-buffer&lt;/code&gt; 는 버퍼가 아직 하나로 끝나지 않을 때마다 자동 으로 버퍼 끝에 개행 문자를 추가합니다. 값이 &lt;code&gt;visit&lt;/code&gt; 이면 Emacs는 파일을 방문한 직후 누락 된 개행 문자를 추가합니다. 값이 &lt;code&gt;visit-save&lt;/code&gt; 이면 Emacs는 방문 및 저장시 누락 된 개행 문자를 추가합니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 다른 값의 경우 &lt;code&gt;save-buffer&lt;/code&gt; 는 케이스가 발생할 때마다 줄 바꿈을 추가할지 여부를 사용자에게 묻습니다.</target>
        </trans-unit>
        <trans-unit id="e172255c5f5beddb870c65d32a0c64c4e7560b8b" translate="yes" xml:space="preserve">
          <source>This variable determines whether or not to make backup files. If it is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs creates a backup of each file when it is saved for the first time&amp;mdash;provided that &lt;code&gt;backup-inhibited&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; (see below).</source>
          <target state="translated">이 변수는 백업 파일을 만들지 여부를 결정합니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 , Emacs는 처음 저장할 때 각 파일의 백업을 생성합니다. 단, &lt;code&gt;backup-inhibited&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이면 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="d0557efc37e8614c9df4ccd758ad183283699c70" translate="yes" xml:space="preserve">
          <source>This variable determines whether the debugger is called when &lt;code&gt;quit&lt;/code&gt; is signaled and not handled. If &lt;code&gt;debug-on-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the debugger is called whenever you quit (that is, type</source>
          <target state="translated">이 변수는 &lt;code&gt;quit&lt;/code&gt; 신호를 받고 처리되지 않을 때 디버거가 호출되는지 여부를 결정합니다 . 경우 &lt;code&gt;debug-on-quit&lt;/code&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; 당신이 종료 할 때마다 다음 디버거가 호출이, (즉, 유형</target>
        </trans-unit>
        <trans-unit id="bac72ab8ca2d7af1e4899843968d1d08e03b798d" translate="yes" xml:space="preserve">
          <source>This variable determines whether the debugger is called when an error is signaled and not handled. If &lt;code&gt;debug-on-error&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, all kinds of errors call the debugger, except those listed in &lt;code&gt;debug-ignored-errors&lt;/code&gt; (see below). If it is &lt;code&gt;nil&lt;/code&gt;, none call the debugger.</source>
          <target state="translated">이 변수는 오류가 신호를 받고 처리되지 않을 때 디버거가 호출되는지 여부를 결정합니다. 경우 &lt;code&gt;debug-on-error&lt;/code&gt; 있다 &lt;code&gt;t&lt;/code&gt; 는 , 모든 종류의 오류에 나열된 제외하고, 디버거를 호출 &lt;code&gt;debug-ignored-errors&lt;/code&gt; (아래 참조). 이 경우 &lt;code&gt;nil&lt;/code&gt; , 아무도 디버거를 호출하지.</target>
        </trans-unit>
        <trans-unit id="cffccb915c87836e47c44ecb08b11f0fb475fd65" translate="yes" xml:space="preserve">
          <source>This variable determines whether the higher-level replacement functions should preserve case. If the variable is &lt;code&gt;nil&lt;/code&gt;, that means to use the replacement text verbatim. A non-&lt;code&gt;nil&lt;/code&gt; value means to convert the case of the replacement text according to the text being replaced.</source>
          <target state="translated">이 변수는 상위 레벨 대체 함수가 대소 문자를 유지해야하는지 여부를 결정합니다. 변수가 &lt;code&gt;nil&lt;/code&gt; 이면 대체 텍스트를 그대로 사용함을 의미합니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 값은 대체되는 텍스트에 따라 대체 텍스트의 대소 문자를 변환하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="bcc4ce012d842154070d4da43d844b8f600202a4" translate="yes" xml:space="preserve">
          <source>This variable displays the buffer&amp;rsquo;s major and minor modes. Its default value also displays the recursive editing level, information on the process status, and whether narrowing is in effect.</source>
          <target state="translated">이 변수는 버퍼의 주 모드와 부 모드를 표시합니다. 기본값은 재귀 편집 수준, 프로세스 상태에 대한 정보 및 축소가 적용되는지 여부도 표시합니다.</target>
        </trans-unit>
        <trans-unit id="01dfec2e7126648b5e75cc691fb798cf60c163e9" translate="yes" xml:space="preserve">
          <source>This variable gives major modes a way to specify not to break a line at certain places. Its value should be a list of functions. Whenever filling considers breaking the line at a certain place in the buffer, it calls each of these functions with no arguments and with point located at that place. If any of the functions returns non-&lt;code&gt;nil&lt;/code&gt;, then the line won&amp;rsquo;t be broken there.</source>
          <target state="translated">이 변수는 특정 위치에서 줄을 끊지 않도록 지정하는 주요 모드를 제공합니다. 그 값은 함수 목록이어야합니다. 채우기가 버퍼의 특정 위치에서 줄을 끊는 것을 고려할 때마다 인수없이 해당 위치에있는 점을 사용하여 이러한 각 함수를 호출합니다. 함수 중 하나가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 하면 줄이 끊어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c19ca7b3824dbf0d5ea6d173e4af5d21990d9b95" translate="yes" xml:space="preserve">
          <source>This variable has no effect on text-mode frames, since the text-mode cursor is drawn by the terminal out of Emacs&amp;rsquo;s control.</source>
          <target state="translated">이 변수는 텍스트 모드 프레임에 영향을주지 않습니다. 텍스트 모드 커서는 터미널이 Emacs의 통제를 벗어나게 되었기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="6457fcf88f857a96880e9cc70e03f9164c5c33c4" translate="yes" xml:space="preserve">
          <source>This variable holds a function to print help for a prefix key. The function is called when the user types a prefix key followed by the help character, and the help character has no binding after that prefix. The variable&amp;rsquo;s default value is &lt;code&gt;describe-prefix-bindings&lt;/code&gt;.</source>
          <target state="translated">이 변수에는 접두사 키에 대한 도움말을 인쇄하는 기능이 있습니다. 이 함수는 사용자가 접두사 키 다음에 도움말 문자를 입력하고 도움말 문자에 해당 접두사 뒤에 바인딩이 없을 때 호출됩니다. 변수의 기본값은 &lt;code&gt;describe-prefix-bindings&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8ad3f587330f30e2a8a998a4442a0dbd9fcda3c4" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap for special events. If an event type has a binding in this keymap, then it is special, and the binding for the event is run directly by &lt;code&gt;read-event&lt;/code&gt;. See &lt;a href=&quot;special-events#Special-Events&quot;&gt;Special Events&lt;/a&gt;.</source>
          <target state="translated">이 변수는 특수 이벤트에 대한 키맵을 보유합니다. 이벤트 유형에이 키맵에 바인딩이있는 경우 이는 특별하며 이벤트에 대한 바인딩은 &lt;code&gt;read-event&lt;/code&gt; 에 의해 직접 실행됩니다 . &lt;a href=&quot;special-events#Special-Events&quot;&gt;특별 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="acdb9255d8d2ac1527090085d7cd0dcaafbc9b9e" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap similar to &lt;code&gt;input-decode-map&lt;/code&gt; except that it describes key sequences which should be translated to alternative interpretations that are usually preferred. It applies after &lt;code&gt;input-decode-map&lt;/code&gt; and before &lt;code&gt;key-translation-map&lt;/code&gt;.</source>
          <target state="translated">이 변수 는 일반적으로 선호되는 대체 해석으로 변환되어야하는 키 시퀀스를 설명한다는 점을 제외하면 &lt;code&gt;input-decode-map&lt;/code&gt; 과 유사한 키맵을 보유합니다 . &lt;code&gt;input-decode-map&lt;/code&gt; 이후 와 &lt;code&gt;key-translation-map&lt;/code&gt; 이전에 적용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a37ca85b72485a9401ac40435b9a83097a9637b7" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap that describes the character sequences sent by function keys on an ordinary character terminal.</source>
          <target state="translated">이 변수는 일반 문자 터미널의 기능 키에 의해 전송 된 문자 시퀀스를 설명하는 키맵을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="26eed1dd6f3bb036d68a21adce16e29025efd29e" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap that extends &lt;code&gt;query-replace-map&lt;/code&gt; by providing additional keybindings that are useful in multi-buffer replacements. The additional bindings are:</source>
          <target state="translated">이 변수는 다중 버퍼 대체에 유용한 추가 키 바인딩을 제공하여 &lt;code&gt;query-replace-map&lt;/code&gt; 맵을 확장하는 키맵을 보유합니다 . 추가 바인딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="519c8bdd8ad460519783549c408e663b9e9f1b93" translate="yes" xml:space="preserve">
          <source>This variable holds a list of all variables of type &lt;code&gt;DEFVAR_BOOL&lt;/code&gt;.</source>
          <target state="translated">이 변수는 &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; 유형의 모든 변수 목록을 보유합니다 .</target>
        </trans-unit>
        <trans-unit id="f8883be969a765e6d09cf5ca1b75b7d3d50f0803" translate="yes" xml:space="preserve">
          <source>This variable holds a list of commands that cause Emacs to ask for confirmation before exiting the minibuffer, if the &lt;var&gt;require-match&lt;/var&gt; argument to &lt;code&gt;completing-read&lt;/code&gt; is &lt;code&gt;confirm-after-completion&lt;/code&gt;. The confirmation is requested if the user attempts to exit the minibuffer immediately after calling any command in this list.</source>
          <target state="translated">이 변수는 complete &lt;code&gt;completing-read&lt;/code&gt; 대한 &lt;var&gt;require-match&lt;/var&gt; 인수 가 &lt;code&gt;confirm-after-completion&lt;/code&gt; 인 경우 Emacs가 미니 버퍼를 종료하기 전에 확인을 요청하도록하는 명령 목록을 보유합니다 . 사용자가이 목록의 명령을 호출 한 후 즉시 미니 버퍼를 종료하려고하면 확인이 요청됩니다.</target>
        </trans-unit>
        <trans-unit id="4dd1042e2c01f4b8fa8b02392a9cab7b62f91950" translate="yes" xml:space="preserve">
          <source>This variable holds a list of events waiting to be read as command input. The events are used in the order they appear in the list, and removed one by one as they are used.</source>
          <target state="translated">이 변수는 명령 입력으로 읽기를 기다리는 이벤트 목록을 보유합니다. 이벤트는 목록에 나타나는 순서대로 사용되며 사용되는대로 하나씩 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="c8b955a77f35fb09b5608537bbc29fbda392394f" translate="yes" xml:space="preserve">
          <source>This variable holds a list of expressions that are safe to evaluate when found in the &amp;lsquo;</source>
          <target state="translated">이 변수는 '에서 찾을 때 평가하기에 안전한 표현식 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="bd6bb60be08f69010d3276ce4955632b8da29bca" translate="yes" xml:space="preserve">
          <source>This variable holds a list of fake function keys for items to display at the end of the menu bar rather than in normal sequence. The default value is &lt;code&gt;(help-menu)&lt;/code&gt;; thus, the &amp;lsquo;</source>
          <target state="translated">이 변수는 정상적인 순서가 아닌 메뉴 표시 줄 끝에 표시 할 항목에 대한 가짜 기능 키 목록을 보유합니다. 기본값은 &lt;code&gt;(help-menu)&lt;/code&gt; 입니다 . 그래서 '</target>
        </trans-unit>
        <trans-unit id="4d8e53c3f492a4feeb707a31a70018e618b50aea" translate="yes" xml:space="preserve">
          <source>This variable holds a list of files that should be reverted without query. The value is a list of regular expressions. If the visited file name matches one of these regular expressions, and the file has changed on disk but the buffer is not modified, then &lt;code&gt;revert-buffer&lt;/code&gt; reverts the file without asking the user for confirmation.</source>
          <target state="translated">이 변수는 쿼리없이 되돌려 야하는 파일 목록을 보유합니다. 값은 정규식 목록입니다. 방문한 파일 이름이 이러한 정규식 중 하나와 일치하고 파일이 디스크에서 변경되었지만 버퍼가 수정되지 않은 경우 &lt;code&gt;revert-buffer&lt;/code&gt; 는 사용자에게 확인을 요청하지 않고 파일을 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="05f0e9a25b020fbdaf07864fbfca1659990b7ee9" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions for computing text properties. Before &lt;code&gt;buffer-substring&lt;/code&gt; copies the text and text properties for a portion of the buffer, it calls all the functions in this list. Each of the functions receives two arguments that specify the range of the buffer being accessed. (The buffer itself is always the current buffer.)</source>
          <target state="translated">이 변수는 텍스트 속성을 계산하기위한 함수 목록을 보유합니다. &lt;code&gt;buffer-substring&lt;/code&gt; 은 버퍼의 일부에 대한 텍스트 및 텍스트 속성을 복사 하기 전에이 목록의 모든 함수를 호출합니다. 각 함수는 액세스되는 버퍼의 범위를 지정하는 두 개의 인수를받습니다. (버퍼 자체는 항상 현재 버퍼입니다.)</target>
        </trans-unit>
        <trans-unit id="39212b9fda9b331c0853ff560cd41550f9877e99" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that Emacs should call before redisplaying a window with scrolling. Displaying a different buffer in a window and making a new window also call these functions.</source>
          <target state="translated">이 변수는 스크롤로 창을 다시 표시하기 전에 Emacs가 호출해야하는 함수 목록을 보유합니다. 창에 다른 버퍼를 표시하고 새 창을 만드는 것도 이러한 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="cb3bc673165c3862f8f3b5f00bed0f9586bd5e48" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that are called by Emacs redisplay as needed, just before doing redisplay. They are called even when Font Lock Mode isn&amp;rsquo;t enabled. When Font Lock Mode is enabled, this variable usually holds just one function, &lt;code&gt;jit-lock-function&lt;/code&gt;.</source>
          <target state="translated">이 변수는 redisplay를 수행하기 직전에 필요에 따라 Emacs redisplay에 의해 호출되는 함수 목록을 보유합니다. 글꼴 잠금 모드가 활성화되지 않은 경우에도 호출됩니다. 글꼴 잠금 모드가 활성화 된 경우이 변수는 일반적으로 &lt;code&gt;jit-lock-function&lt;/code&gt; 함수 하나만 보유 합니다 .</target>
        </trans-unit>
        <trans-unit id="57ae90a775480403077f7b65b706fafab3e50565" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that try to determine a coding system for a file based on its undecoded contents.</source>
          <target state="translated">이 변수는 디코딩되지 않은 내용을 기반으로 파일의 코딩 시스템을 결정하려는 함수 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="b0df7a29f56cb8c387d8d3a398285ded4a61ed8b" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions to call after Emacs modifies a buffer. Each function receives three arguments: the beginning and end of the region just changed, and the length of the text that existed before the change. All three arguments are integers. The buffer that has been changed is always the current buffer when the function is called.</source>
          <target state="translated">이 변수는 Emacs가 버퍼를 수정 한 후 호출 할 함수 목록을 보유합니다. 각 함수는 방금 변경된 영역의 시작과 끝, 변경 전에 존재했던 텍스트의 길이라는 세 가지 인수를받습니다. 세 가지 인수는 모두 정수입니다. 변경된 버퍼는 함수가 호출 될 때 항상 현재 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="72161f22138defda7e8b68a6f85e2c55d4627ebb" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions to call when Emacs is about to modify a buffer. Each function gets two arguments, the beginning and end of the region that is about to change, represented as integers. The buffer that is about to change is always the current buffer when the function is called.</source>
          <target state="translated">이 변수는 Emacs가 버퍼를 수정하려고 할 때 호출 할 함수 목록을 보유합니다. 각 함수는 정수로 표시되는 변경 될 영역의 시작과 끝인 두 개의 인수를 가져옵니다. 변경하려는 버퍼는 함수가 호출 될 때 항상 현재 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="3c016e628b4a6507907ac2c4314536d83f87d5c9" translate="yes" xml:space="preserve">
          <source>This variable holds a list of handlers whose use is presently inhibited for a certain operation.</source>
          <target state="translated">이 변수는 현재 특정 작업에 대해 사용이 금지 된 핸들러 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="ea61d5937ac2a283fec1ab3e7face5cd37b6540a" translate="yes" xml:space="preserve">
          <source>This variable holds a list of hooks to be scanned before unloading a library, to remove functions defined in the library.</source>
          <target state="translated">이 변수는 라이브러리에 정의 된 함수를 제거하기 위해 라이브러리를 언로드하기 전에 스캔 할 후크 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="7a0b38af7c3d63375438c7111762565267f721a0" translate="yes" xml:space="preserve">
          <source>This variable holds a list of keymap alists to use for emulation modes. It is intended for modes or packages using multiple minor-mode keymaps. Each element is a keymap alist which has the same format and meaning as &lt;code&gt;minor-mode-map-alist&lt;/code&gt;, or a symbol with a variable binding which is such an alist. The active keymaps in each alist are used before &lt;code&gt;minor-mode-map-alist&lt;/code&gt; and &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt;.</source>
          <target state="translated">이 변수는 에뮬레이션 모드에 사용할 키맵 목록 목록을 보유합니다. 여러 부 모드 키맵을 사용하는 모드 또는 패키지 용입니다. 각 요소는 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 와 동일한 형식 및 의미를 갖는 키맵 목록 이거나 이러한 목록 인 변수 바인딩이있는 기호입니다. 각 목록의 활성 키맵은 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 및 &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt; 이전에 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="fb2f272aee36e56653000a6360b6770eb64c46cb" translate="yes" xml:space="preserve">
          <source>This variable holds a list of variables that should not be given local values by files. Any value specified for one of these variables is completely ignored.</source>
          <target state="translated">이 변수는 파일별로 지역 값을 제공해서는 안되는 변수 목록을 보유합니다. 이러한 변수 중 하나에 지정된 값은 완전히 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bc86c91af69c14fafcd027fed651f97ec5d6985b" translate="yes" xml:space="preserve">
          <source>This variable holds a marker that indicates where to display the overlay arrow. It should point at the beginning of a line. On a non-graphical display the arrow text appears at the beginning of that line, overlaying any text that would otherwise appear. Since the arrow is usually short, and the line usually begins with indentation, normally nothing significant is overwritten.</source>
          <target state="translated">이 변수에는 오버레이 화살표를 표시 할 위치를 나타내는 마커가 있습니다. 줄의 시작 부분을 가리켜 야합니다. 그래픽이 아닌 디스플레이에서 화살표 텍스트는 해당 줄의 시작 부분에 표시되며 그렇지 않으면 표시되는 텍스트를 오버레이합니다. 화살표는 일반적으로 짧고 줄은 일반적으로 들여 쓰기로 시작하므로 일반적으로 중요한 것은 덮어 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d61ea0c88eaa0a5e4b9f178d493594754669b2c" translate="yes" xml:space="preserve">
          <source>This variable holds a mode line construct that, by default, appears in the mode line just after the &lt;code&gt;which-func-mode&lt;/code&gt; minor mode if set, else after &lt;code&gt;mode-line-modes&lt;/code&gt;. The command &lt;code&gt;display-time&lt;/code&gt; sets &lt;code&gt;global-mode-string&lt;/code&gt; to refer to the variable &lt;code&gt;display-time-string&lt;/code&gt;, which holds a string containing the time and load information.</source>
          <target state="translated">이 변수는 기본적으로 &lt;code&gt;which-func-mode&lt;/code&gt; 부 모드가 설정된 경우 모드 라인 바로 뒤 , 그렇지 않으면 &lt;code&gt;mode-line-modes&lt;/code&gt; 뒤의 모드 라인에 나타나는 모드 라인 구성을 보유 합니다 . &lt;code&gt;display-time&lt;/code&gt; 명령 은 &lt;code&gt;global-mode-string&lt;/code&gt; 을 설정 하여 시간 및로드 정보를 포함하는 문자열을 보유하는 &lt;code&gt;display-time-string&lt;/code&gt; 변수를 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="fcba3becc0285d5958e5e08987d62cf7feaa8bf7" translate="yes" xml:space="preserve">
          <source>This variable holds a property list giving default values for text properties. Whenever a character does not specify a value for a property, neither directly, through a category symbol, or through &lt;code&gt;char-property-alias-alist&lt;/code&gt;, the value stored in this list is used instead. Here is an example:</source>
          <target state="translated">이 변수에는 텍스트 속성에 대한 기본값을 제공하는 속성 목록이 있습니다. 문자가 직접, 범주 기호를 통해 또는 &lt;code&gt;char-property-alias-alist&lt;/code&gt; 를 통해 속성 값을 지정하지 않을 때 마다이 목록에 저장된 값이 대신 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6febb37570f0069143f80c3299aa0ae6dc1ea022" translate="yes" xml:space="preserve">
          <source>This variable holds a special keymap that defines the valid user responses for &lt;code&gt;perform-replace&lt;/code&gt; and the commands that use it, as well as &lt;code&gt;y-or-n-p&lt;/code&gt; and &lt;code&gt;map-y-or-n-p&lt;/code&gt;. This map is unusual in two ways:</source>
          <target state="translated">이 변수에는 &lt;code&gt;perform-replace&lt;/code&gt; 에 대한 유효한 사용자 응답 과이를 사용하는 명령, &lt;code&gt;y-or-n-p&lt;/code&gt; 및 &lt;code&gt;map-y-or-n-p&lt;/code&gt; 를 정의하는 특수 키맵이 있습니다 . 이지도는 두 가지면에서 특이합니다.</target>
        </trans-unit>
        <trans-unit id="e027cb271cc7816d0728efbc0b205739d6616ba6" translate="yes" xml:space="preserve">
          <source>This variable holds a string that says which character separates directories in a search path (as found in an environment variable). Its value is &lt;code&gt;&quot;:&quot;&lt;/code&gt; for Unix and GNU systems, and &lt;code&gt;&quot;;&quot;&lt;/code&gt; for MS systems.</source>
          <target state="translated">이 변수는 검색 경로에서 디렉토리를 구분하는 문자 (환경 변수에 있음)를 나타내는 문자열을 보유합니다. 값은 Unix 및 GNU 시스템의 경우 &lt;code&gt;&quot;:&quot;&lt;/code&gt; 이고 &lt;code&gt;&quot;;&quot;&lt;/code&gt; 입니다.MS 시스템 용.</target>
        </trans-unit>
        <trans-unit id="a5ce090ba1e37fd187314cd6eb4cbc03eea27056" translate="yes" xml:space="preserve">
          <source>This variable holds a vector used internally by printing to implement the &lt;code&gt;print-circle&lt;/code&gt; feature. You should not use it except to bind it to &lt;code&gt;nil&lt;/code&gt; when you bind &lt;code&gt;print-continuous-numbering&lt;/code&gt;.</source>
          <target state="translated">이 변수는 &lt;code&gt;print-circle&lt;/code&gt; 기능 을 구현하기 위해 인쇄에서 내부적으로 사용되는 벡터를 보유 합니다. &lt;code&gt;print-continuous-numbering&lt;/code&gt; 을 바인드 할 때 &lt;code&gt;nil&lt;/code&gt; 에 바인드하는 경우를 제외하고 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="e8c8534f7c8274e8bf6f37c2fe9a42af806712e5" translate="yes" xml:space="preserve">
          <source>This variable holds an alist of frame parameters (see &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;), which is used by the function specified by &lt;code&gt;pop-up-frame-function&lt;/code&gt; to make a new frame. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 변수는 새 프레임을 만들기 위해 &lt;code&gt;pop-up-frame-function&lt;/code&gt; 에 지정된 함수에서 사용하는 &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;프레임 매개&lt;/a&gt; 변수 목록 (프레임 매개 변수 참조)을 보유합니다 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2bd0f19b72e06400232e027dac176fbbf7f56c2c" translate="yes" xml:space="preserve">
          <source>This variable holds an alist which defines the default rear-stickiness of various text properties. Each element has the form &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; . &lt;var&gt;nonstickiness&lt;/var&gt;)&lt;/code&gt;, and it defines the stickiness of a particular text property, &lt;var&gt;property&lt;/var&gt;.</source>
          <target state="translated">이 변수는 다양한 텍스트 속성의 기본 후면 고정을 정의하는 목록을 보유합니다. 각 요소는 &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; . &lt;var&gt;nonstickiness&lt;/var&gt;)&lt;/code&gt; 형식 을 가지며 특정 텍스트 속성 인 &lt;var&gt;property&lt;/var&gt; 의 고 정성을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="4d7db826376c8067cacb3f63ed8e4b98a30275b6" translate="yes" xml:space="preserve">
          <source>This variable holds an alist which maps property names to a list of alternative property names. If a character does not specify a direct value for a property, the alternative property names are consulted in order; the first non-&lt;code&gt;nil&lt;/code&gt; value is used. This variable takes precedence over &lt;code&gt;default-text-properties&lt;/code&gt;, and &lt;code&gt;category&lt;/code&gt; properties take precedence over this variable.</source>
          <target state="translated">이 변수는 속성 이름을 대체 속성 이름 목록에 매핑하는 목록을 보유합니다. 문자가 속성에 대한 직접 값을 지정하지 않으면 대체 속성 이름이 순서대로 참조됩니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 첫 번째 값이 사용됩니다. 이 변수는 &lt;code&gt;default-text-properties&lt;/code&gt; 보다 우선 하며 &lt;code&gt;category&lt;/code&gt; 속성은이 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="af2c67026fb0f574e04fc0b237633d78c6ce4340" translate="yes" xml:space="preserve">
          <source>This variable holds an association list whose elements specify how the mode line should indicate that a minor mode is active. Each element of the &lt;code&gt;minor-mode-alist&lt;/code&gt; should be a two-element list:</source>
          <target state="translated">이 변수는 모드 행이 부 모드가 활성임을 나타내는 방법을 지정하는 요소가있는 연관 목록을 보유합니다. &lt;code&gt;minor-mode-alist&lt;/code&gt; 의 각 요소는 두 요소 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c2ef0f3af4d98038c101a6cf8a10b77abd695807" translate="yes" xml:space="preserve">
          <source>This variable holds the absolute file name of the user&amp;rsquo;s init file. If the actual init file loaded is a compiled file, such as</source>
          <target state="translated">이 변수는 사용자 init 파일의 절대 파일 이름을 보유합니다. 로드 된 실제 초기화 파일이 다음과 같이 컴파일 된 파일 인 경우</target>
        </trans-unit>
        <trans-unit id="344e3ec7ab37cb172cdd1eced860a903d281793e" translate="yes" xml:space="preserve">
          <source>This variable holds the default input method for commands that choose an input method. Unlike &lt;code&gt;current-input-method&lt;/code&gt;, this variable is normally global.</source>
          <target state="translated">이 변수는 입력 방법을 선택하는 명령에 대한 기본 입력 방법을 보유합니다. &lt;code&gt;current-input-method&lt;/code&gt; 와 달리이 변수는 일반적으로 전역입니다.</target>
        </trans-unit>
        <trans-unit id="c18ab7020fe4b988f02d37bfa4ede4f52f31cc4f" translate="yes" xml:space="preserve">
          <source>This variable holds the default input stream&amp;mdash;the stream that &lt;code&gt;read&lt;/code&gt; uses when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;, meaning use the minibuffer.</source>
          <target state="translated">이 변수는 기본 입력 스트림 스트림 보유 &lt;code&gt;read&lt;/code&gt; 때 사용을 &lt;var&gt;stream&lt;/var&gt; 인수가 &lt;code&gt;nil&lt;/code&gt; . 기본값은 &lt;code&gt;t&lt;/code&gt; 이며 미니 버퍼 사용을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="de7e4cb0ec2d8d47f0102bb97612d107a65d1c40" translate="yes" xml:space="preserve">
          <source>This variable holds the directory in which the Emacs executable was located when it was run, or &lt;code&gt;nil&lt;/code&gt; if that directory cannot be determined.</source>
          <target state="translated">이 변수는 실행될 때 Emacs 실행 파일이 있던 디렉토리를 보유합니다. 해당 디렉토리를 결정할 수 없으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c455202da051f3ef291d0eee22f8c132d61fc324" translate="yes" xml:space="preserve">
          <source>This variable holds the erase character that was selected in the system&amp;rsquo;s terminal driver, before Emacs was started.</source>
          <target state="translated">이 변수는 Emacs가 시작되기 전에 시스템의 터미널 드라이버에서 선택된 지우기 문자를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="b114475c947fc394c0e8313bb8050389d142aae8" translate="yes" xml:space="preserve">
          <source>This variable holds the last input event read as part of a key sequence, not counting events resulting from mouse menus.</source>
          <target state="translated">이 변수는 마우스 메뉴로 인한 이벤트를 계산하지 않고 키 시퀀스의 일부로 읽은 마지막 입력 이벤트를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="db576e55004516d9773f1a3a339c3d8e134cf2f8" translate="yes" xml:space="preserve">
          <source>This variable holds the list of environment variables Emacs inherited from its parent process when Emacs started.</source>
          <target state="translated">이 변수는 Emacs가 시작될 때 부모 프로세스에서 상속 된 환경 변수 Emacs의 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="1463352f694104f674d13094544ffbddd5ca61ef" translate="yes" xml:space="preserve">
          <source>This variable holds the list of killed text sequences, most recently killed first.</source>
          <target state="translated">이 변수는 가장 최근에 먼저 종료 된 종료 된 텍스트 시퀀스 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="7f1502c6bf20a05a12fd6941180204001da754ef" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the Emacs default directory. It defaults to</source>
          <target state="translated">이 변수는 Emacs 기본 디렉토리의 이름을 보유합니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="23bb178224a3d419452e5059d88d71c25405975a" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory in which Emacs finds certain documentation and text files that come with Emacs.</source>
          <target state="translated">이 변수는 Emacs가 Emacs와 함께 제공되는 특정 문서 및 텍스트 파일을 찾는 디렉토리의 이름을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="c9f0175743a7dfe6c220146fc87b9f51c89f1569" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory which should contain the file &lt;code&gt;&quot;DOC&quot;&lt;/code&gt; that contains documentation strings for built-in and preloaded functions and variables.</source>
          <target state="translated">이 변수는 내장 및 사전로드 된 함수 및 변수에 대한 문서 문자열을 포함하는 &lt;code&gt;&quot;DOC&quot;&lt;/code&gt; 파일을 포함해야하는 디렉토리의 이름을 보유합니다 .</target>
        </trans-unit>
        <trans-unit id="77d539bc690d78b070e77ecc5d587508f7810036" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the input method now active in the current buffer. (It automatically becomes local in each buffer when set in any fashion.) It is &lt;code&gt;nil&lt;/code&gt; if no input method is active in the buffer now.</source>
          <target state="translated">이 변수는 현재 버퍼에서 현재 활성화 된 입력 방법의 이름을 보유합니다. (어떤 방식 으로든 설정하면 각 버퍼에서 자동으로 로컬이됩니다.) 현재 버퍼에 활성화 된 입력 방법이 없으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="51d42a153c502ad4ca8a2564f9ea1e4a88087a97" translate="yes" xml:space="preserve">
          <source>This variable holds the program name under which Emacs was invoked. The value is a string, and does not include a directory name.</source>
          <target state="translated">이 변수는 Emacs가 호출 된 프로그램 이름을 보유합니다. 값은 문자열이며 디렉토리 이름을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd30ea6e8a624b9b928d0444fa4de07fcf9d2be9" translate="yes" xml:space="preserve">
          <source>This variable holds the raw prefix argument for the &lt;em&gt;current&lt;/em&gt; command. Commands may examine it directly, but the usual method for accessing it is with &lt;code&gt;(interactive &quot;P&quot;)&lt;/code&gt;.</source>
          <target state="translated">이 변수는 &lt;em&gt;현재&lt;/em&gt; 명령에 대한 원시 접두사 인수를 보유합니다 . 명령으로 직접 검사 할 수 있지만 일반적인 액세스 방법은 &lt;code&gt;(interactive &quot;P&quot;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c2228b9f862753c70e303ec4badcaa1e473beca6" translate="yes" xml:space="preserve">
          <source>This variable holds the standard GNU configuration name for the hardware/software configuration of your system, as a string. For example, a typical value for a 64-bit GNU/Linux system is &amp;lsquo;</source>
          <target state="translated">이 변수는 시스템의 하드웨어 / 소프트웨어 구성에 대한 표준 GNU 구성 이름을 문자열로 보유합니다. 예를 들어, 64 비트 GNU / Linux 시스템의 일반적인 값은 '</target>
        </trans-unit>
        <trans-unit id="c419e4b6ad8620a603b0b2c42f92b1e629d65d10" translate="yes" xml:space="preserve">
          <source>This variable holds the string to display to call attention to a particular line, or &lt;code&gt;nil&lt;/code&gt; if the arrow feature is not in use. On a graphical display the contents of the string are ignored; instead a glyph is displayed in the fringe area to the left of the display area.</source>
          <target state="translated">이 변수는 특정 행에주의를 환기시키기 위해 표시 할 문자열을 보유하고 있으며 화살표 기능이 사용되지 않는 경우 &lt;code&gt;nil&lt;/code&gt; 을 보유합니다. 그래픽 디스플레이에서 문자열의 내용은 무시됩니다. 대신 표시 영역 왼쪽의 가장자리 영역에 글리프가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="81e67f6a532f93dac31cd045964834d6fdfed067" translate="yes" xml:space="preserve">
          <source>This variable holds the syntax table to use for fontification of comments and strings. It is normally set by Font Lock mode based on the &lt;var&gt;syntax-alist&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. If this value is &lt;code&gt;nil&lt;/code&gt;, syntactic fontification uses the buffer&amp;rsquo;s syntax table (the value returned by the function &lt;code&gt;syntax-table&lt;/code&gt;; see &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Syntax Table Functions&lt;/a&gt;).</source>
          <target state="translated">이 변수는 주석 및 문자열의 글꼴 화에 사용할 구문 테이블을 보유합니다. 일반적으로 &lt;code&gt;font-lock-defaults&lt;/code&gt; 의 &lt;var&gt;syntax-alist&lt;/var&gt; 요소를 기반으로 글꼴 잠금 모드에 의해 설정됩니다 . 이 값이 &lt;code&gt;nil&lt;/code&gt; 이면 구문 글꼴 화는 버퍼의 구문 테이블을 사용합니다 (함수 &lt;code&gt;syntax-table&lt;/code&gt; 에서 반환 된 값 ; &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;구문 테이블 함수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e15a7227d43de41555c9e1d25dc1664f812412f1" translate="yes" xml:space="preserve">
          <source>This variable holds the system-dependent value of the file-name extension of the module files. Its value is</source>
          <target state="translated">이 변수는 모듈 파일의 파일 이름 확장자의 시스템 종속 값을 보유합니다. 그 가치는</target>
        </trans-unit>
        <trans-unit id="c2f9f6eb303cdf33dba48f246b5c950f6cf7a5a8" translate="yes" xml:space="preserve">
          <source>This variable holds the total number of input events received so far from the terminal&amp;mdash;not counting those generated by keyboard macros.</source>
          <target state="translated">이 변수는 키보드 매크로에 의해 생성 된 이벤트를 계산하지 않고 터미널에서 지금까지 수신 된 총 입력 이벤트 수를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="f6d2e595e4de0a9a555a6943813249af150ddc15" translate="yes" xml:space="preserve">
          <source>This variable holds the value of &lt;code&gt;window-system&lt;/code&gt; used for the first frame created by Emacs during startup. (When Emacs is invoked as a daemon, it does not create any initial frames, so &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, except on MS-Windows, where it is still &lt;code&gt;w32&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;daemon&lt;/a&gt; in</source>
          <target state="translated">이 변수는 시작하는 동안 Emacs가 만든 첫 번째 프레임에 사용되는 &lt;code&gt;window-system&lt;/code&gt; 의 값을 보유합니다 . 이맥스는 데몬으로 호출 될 때 (그렇게, 어떤 초기 프레임을 생성하지 않습니다 &lt;code&gt;initial-window-system&lt;/code&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 이 여전히 MS-윈도우, 제외, &lt;code&gt;w32&lt;/code&gt; . 참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;데몬&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="1691d1e658b7f8009e3be0401f3dd6bdc3950312" translate="yes" xml:space="preserve">
          <source>This variable holds the value of &lt;code&gt;window-system&lt;/code&gt; used for the first frame created by Emacs during startup. (When Emacs is invoked as a daemon, it does not create any initial frames, so &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, except on MS-Windows, where it is still &lt;code&gt;w32&lt;/code&gt;. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;daemon&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6659bea196a72c1ed60f39d4d02f3a69d7a3316b" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the mode line construct that displays information about the language environment, buffer coding system, and current input method. See &lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;Non-ASCII Characters&lt;/a&gt;.</source>
          <target state="translated">이 변수는 언어 환경, 버퍼 코딩 시스템 및 현재 입력 방법에 대한 정보를 표시하는 모드 라인 구성의 값을 보유합니다. &lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;비 ASCII 문자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="865ab5f439f010d5038e5c2f6bd8d5328cf2eee0" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the mode line construct that displays whether the current buffer is modified. Its default value displays &amp;lsquo;</source>
          <target state="translated">이 변수는 현재 버퍼가 수정되었는지 여부를 표시하는 모드 라인 구성의 값을 보유합니다. 기본값은 '</target>
        </trans-unit>
        <trans-unit id="bcbda22dd3d867b0b17321627e60172591c001fd" translate="yes" xml:space="preserve">
          <source>This variable identifies the buffer being displayed in the window. Its default value displays the buffer name, padded with spaces to at least 12 columns.</source>
          <target state="translated">이 변수는 창에 표시되는 버퍼를 식별합니다. 기본값은 최소 12 개 열까지 공백으로 채워진 버퍼 이름을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f18ef3fa8d1cc594172be55851eb657c47e6c250" translate="yes" xml:space="preserve">
          <source>This variable identifies the current frame. Its default value displays &lt;code&gt;&quot; &quot;&lt;/code&gt; if you are using a window system which can show multiple frames, or &lt;code&gt;&quot;-%F &quot;&lt;/code&gt; on an ordinary terminal which shows only one frame at a time.</source>
          <target state="translated">이 변수는 현재 프레임을 식별합니다. 여러 프레임을 표시 할 수있는 윈도우 시스템을 사용하는 경우 기본값 은 &lt;code&gt;&quot; &quot;&lt;/code&gt; , 한 번에 한 프레임 만 표시하는 일반 터미널에서는 &lt;code&gt;&quot;-%F &quot;&lt;/code&gt; 를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="ace1bdce23e62b3a59d6cb4caceefebf39a10b6f" translate="yes" xml:space="preserve">
          <source>This variable indicates the position in the buffer. Its default value displays the buffer percentage and, optionally, the buffer size, the line number and the column number.</source>
          <target state="translated">이 변수는 버퍼의 위치를 ​​나타냅니다. 기본값은 버퍼 백분율과 선택적으로 버퍼 크기, 행 번호 및 열 번호를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="671b82f00a9a8576ccf6f84946da4d3ff9fac8dc" translate="yes" xml:space="preserve">
          <source>This variable indicates whether a call of &lt;code&gt;process-file&lt;/code&gt; changes remote files.</source>
          <target state="translated">이 변수는 &lt;code&gt;process-file&lt;/code&gt; 호출이 원격 파일을 변경 하는지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c5ca8a1815d706760193424f27cfc780af9e0726" translate="yes" xml:space="preserve">
          <source>This variable is &lt;code&gt;t&lt;/code&gt; by default. Instead of customizing it to &lt;code&gt;nil&lt;/code&gt; and thus telling &lt;code&gt;display-buffer&lt;/code&gt; what not to do, it&amp;rsquo;s much better to list in &lt;code&gt;display-buffer-base-action&lt;/code&gt; the action functions it should try instead as, for example:</source>
          <target state="translated">이 변수는 기본적으로 &lt;code&gt;t&lt;/code&gt; 입니다. 이를 &lt;code&gt;nil&lt;/code&gt; 로 사용자 지정하여 &lt;code&gt;display-buffer&lt;/code&gt; 에하지 말아야 할 작업 을 알리는 대신 다음과 같이 대신 시도해야하는 작업 함수 를 &lt;code&gt;display-buffer-base-action&lt;/code&gt; 에 나열하는 것이 훨씬 낫습니다 .</target>
        </trans-unit>
        <trans-unit id="64d84c91e24c06852beaf523c2628b072cd44f30" translate="yes" xml:space="preserve">
          <source>This variable is &lt;code&gt;t&lt;/code&gt; if Emacs is nearly out of memory for Lisp objects, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 변수는 Emacs가 Lisp 객체의 메모리가 거의 부족하면 &lt;code&gt;t&lt;/code&gt; 이고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a29a7f36bac714cd1390c2bea5038a184550e3a2" translate="yes" xml:space="preserve">
          <source>This variable is a list of functions to be called for &lt;code&gt;interrupt-process&lt;/code&gt;. The arguments of the functions are the same as for &lt;code&gt;interrupt-process&lt;/code&gt;. These functions are called in the order of the list, until one of them returns non-&lt;code&gt;nil&lt;/code&gt;. The default function, which shall always be the last in this list, is &lt;code&gt;internal-default-interrupt-process&lt;/code&gt;.</source>
          <target state="translated">이 변수는 &lt;code&gt;interrupt-process&lt;/code&gt; 대해 호출되는 함수 목록입니다 . 함수의 인수는 &lt;code&gt;interrupt-process&lt;/code&gt; 와 동일 합니다 . 이들 함수 중 하나가 non- &lt;code&gt;nil&lt;/code&gt; 을 반환 할 때까지 목록 순서대로 호출됩니다 . 이 목록에서 항상 마지막이되는 기본 함수는 &lt;code&gt;internal-default-interrupt-process&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ad928e450478c2ee2f972890b7f476fec9518899" translate="yes" xml:space="preserve">
          <source>This variable is a list of strings, each describing one environment variable. The functions &lt;code&gt;getenv&lt;/code&gt; and &lt;code&gt;setenv&lt;/code&gt; work by means of this variable.</source>
          <target state="translated">이 변수는 각각 하나의 환경 변수를 설명하는 문자열 목록입니다. &lt;code&gt;getenv&lt;/code&gt; 및 &lt;code&gt;setenv&lt;/code&gt; 함수 는이 변수를 통해 작동합니다.</target>
        </trans-unit>
        <trans-unit id="019729030d7f528fa882520193abfe0636ac6ef2" translate="yes" xml:space="preserve">
          <source>This variable is a list of suffixes (strings) to try adding to the specified program file name. The list should include &lt;code&gt;&quot;&quot;&lt;/code&gt; if you want the name to be tried exactly as specified. The default value is system-dependent.</source>
          <target state="translated">이 변수는 지정된 프로그램 파일 이름에 추가 할 접미사 (문자열) 목록입니다. 이름이 지정된대로 정확하게 시도되도록하려면 목록에 &lt;code&gt;&quot;&quot;&lt;/code&gt; 가 포함되어야 합니다. 기본값은 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="71e6e9699e598953ad68f45834b68438c1678d93" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs after initializing a new text terminal. (This applies when Emacs starts up in non-windowed mode, and when making a tty &lt;code&gt;emacsclient&lt;/code&gt; connection.) The hook runs after loading your init file (if applicable) and the terminal-specific Lisp file, so you can use it to adjust the definitions made by that file.</source>
          <target state="translated">이 변수는 새 텍스트 터미널을 초기화 한 후 Emacs가 실행하는 일반적인 후크입니다. (이는 Emacs가 비창 모드에서 시작될 때와 tty &lt;code&gt;emacsclient&lt;/code&gt; 연결을 만들 때 적용됩니다 .) 후크는 init 파일 (해당되는 경우) 및 터미널 별 Lisp 파일을로드 한 후에 실행되므로이를 사용하여 조정할 수 있습니다. 그 파일에 의해 만들어진 정의.</target>
        </trans-unit>
        <trans-unit id="cc94f282c9a33b6d17eb327be833789be53f4e80" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs before suspending.</source>
          <target state="translated">이 변수는 Emacs가 일시 중단하기 전에 실행하는 일반적인 후크입니다.</target>
        </trans-unit>
        <trans-unit id="161804933a898b6ce3815d927143897231ca924e" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs on resuming after a suspension.</source>
          <target state="translated">이 변수는 Emacs가 일시 중단 후 재개 할 때 실행하는 일반적인 후크입니다.</target>
        </trans-unit>
        <trans-unit id="067a9793a37e5b13d1fa26a6240ed27801da0d83" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that is run whenever a buffer is changed that was previously in the unmodified state.</source>
          <target state="translated">이 변수는 이전에 수정되지 않은 상태였던 버퍼가 변경 될 때마다 실행되는 일반 후크입니다.</target>
        </trans-unit>
        <trans-unit id="dc8a1a6e522c3155d706b319dc60d360ef84bf69" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">이 변수는 일반 후크입니다. &lt;a href=&quot;hooks#Hooks&quot;&gt;후크를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="055b47c6f182f3895741b93e0453e248a18dc3f4" translate="yes" xml:space="preserve">
          <source>This variable is also the threshold for motion of the mouse to count as a drag.</source>
          <target state="translated">이 변수는 마우스 움직임이 드래그로 계산되는 임계 값이기도합니다.</target>
        </trans-unit>
        <trans-unit id="0775e11bc47c6c9aa391629165fd13f07f7886a9" translate="yes" xml:space="preserve">
          <source>This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">이 변수는 항상 현재 터미널에 로컬이며 버퍼 로컬 일 수 없습니다. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;다중 터미널을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c1f7c6b398e0096b95fd38063ff445df4e85135" translate="yes" xml:space="preserve">
          <source>This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;. It is used to implement incremental search mode.</source>
          <target state="translated">이 변수는 항상 현재 터미널에 로컬이며 버퍼 로컬 일 수 없습니다. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;다중 터미널을&lt;/a&gt; 참고하십시오 . 증분 검색 모드를 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="aff1906dcbd5538dbdd5f4b77127483d16fc81fd" translate="yes" xml:space="preserve">
          <source>This variable is an alist describing keymaps that may or may not be active according to the values of certain variables. Its elements look like this:</source>
          <target state="translated">이 변수는 특정 변수의 값에 따라 활성화되거나 활성화되지 않을 수있는 키맵을 설명하는 목록입니다. 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9bf8a251cb783050ddc345f638dd7b108ad2b16a" translate="yes" xml:space="preserve">
          <source>This variable is an alist mapping image types to file name extensions. Emacs uses this in conjunction with the &lt;code&gt;:format&lt;/code&gt; image property (see below) to give a hint to the ImageMagick library as to the type of an image. Each element has the form &lt;code&gt;(&lt;var&gt;type&lt;/var&gt;
&lt;var&gt;extension&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;type&lt;/var&gt; is a symbol specifying an image content-type, and &lt;var&gt;extension&lt;/var&gt; is a string that specifies the associated file name extension.</source>
          <target state="translated">이 변수는 이미지 유형을 파일 이름 확장자에 매핑하는 목록입니다. Emacs는 이것을 &lt;code&gt;:format&lt;/code&gt; 이미지 속성 (아래 참조) 과 함께 사용 하여 이미지 유형에 대한 힌트를 ImageMagick 라이브러리에 제공합니다. 각 요소의 형식은 &lt;code&gt;(&lt;var&gt;type&lt;/var&gt; &lt;var&gt;extension&lt;/var&gt;)&lt;/code&gt; . 여기서 &lt;var&gt;type&lt;/var&gt; 은 이미지 콘텐츠 유형을 지정하는 기호이고 &lt;var&gt;extension&lt;/var&gt; 은 연관된 파일 이름 확장명을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="6c7441610c3a78b915a4e35eb1c09eb17fc914f8" translate="yes" xml:space="preserve">
          <source>This variable is an alist of elements of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; .
&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt;. Normally, there is one element for each Emacs register that has been used.</source>
          <target state="translated">이 변수는 형식 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt; 의 요소 목록입니다 . 일반적으로 사용 된 각 Emacs 레지스터에 대해 하나의 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c005dccb280eafc5942f145355e725dae803dbb5" translate="yes" xml:space="preserve">
          <source>This variable is an alist of syntax table modifiers to use while processing &lt;code&gt;imenu-generic-expression&lt;/code&gt;, to override the syntax table of the current buffer. Each element should have this form:</source>
          <target state="translated">이 변수는 현재 버퍼의 구문 테이블을 재정의하기 위해 &lt;code&gt;imenu-generic-expression&lt;/code&gt; 을 처리하는 동안 사용할 구문 테이블 수정 자 목록입니다. 각 요소는 다음 형식을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="667451d1cd5450086c893e0dd92a52214569dd62" translate="yes" xml:space="preserve">
          <source>This variable is an alist of text patterns and corresponding coding systems. Each element has the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt;
. &lt;var&gt;coding-system&lt;/var&gt;)&lt;/code&gt;; a file whose first few kilobytes match &lt;var&gt;regexp&lt;/var&gt; is decoded with &lt;var&gt;coding-system&lt;/var&gt; when its contents are read into a buffer. The settings in this alist take priority over &lt;code&gt;coding:&lt;/code&gt; tags in the files and the contents of &lt;code&gt;file-coding-system-alist&lt;/code&gt; (see below). The default value is set so that Emacs automatically recognizes mail files in Babyl format and reads them with no code conversions.</source>
          <target state="translated">이 변수는 텍스트 패턴 및 해당 코딩 시스템의 목록입니다. 각 요소의 형식은 &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;coding-system&lt;/var&gt;)&lt;/code&gt; ; 처음 몇 킬로바이트가 &lt;var&gt;regexp&lt;/var&gt; 와 일치하는 파일 은 내용을 버퍼로 읽을 때 &lt;var&gt;coding-system&lt;/var&gt; 디코딩됩니다 . 이 목록의 설정은 &lt;code&gt;coding:&lt;/code&gt; 보다 우선합니다 : 파일의 태그 및 &lt;code&gt;file-coding-system-alist&lt;/code&gt; (아래 참조). 기본값은 Emacs가 Babyl 형식의 메일 파일을 자동으로 인식하고 코드 변환없이 읽도록 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="94a29e4805ccc22e16f51eeab593167416353c0a" translate="yes" xml:space="preserve">
          <source>This variable is an alist of user-defined command-line options and associated handler functions. By default it is empty, but you can add elements if you wish.</source>
          <target state="translated">이 변수는 사용자 정의 명령 줄 옵션 및 관련 처리기 함수의 목록입니다. 기본적으로 비어 있지만 원하는 경우 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cab6b86ef5216fa5fc8c63a4d0ac1605f26a69b" translate="yes" xml:space="preserve">
          <source>This variable is an alist specifying which coding systems to use for a subprocess, depending on which program is running in the subprocess. It works like &lt;code&gt;file-coding-system-alist&lt;/code&gt;, except that &lt;var&gt;pattern&lt;/var&gt; is matched against the program name used to start the subprocess. The coding system or systems specified in this alist are used to initialize the coding systems used for I/O to the subprocess, but you can specify other coding systems later using &lt;code&gt;set-process-coding-system&lt;/code&gt;.</source>
          <target state="translated">이 변수는 하위 프로세스에서 실행중인 프로그램에 따라 하위 프로세스에 사용할 코딩 시스템을 지정하는 목록입니다. &lt;var&gt;pattern&lt;/var&gt; 이 하위 프로세스를 시작하는 데 사용되는 프로그램 이름과 일치 한다는 점을 제외하면 &lt;code&gt;file-coding-system-alist&lt;/code&gt; 처럼 작동 합니다 . 이 목록에 지정된 코딩 시스템은 하위 프로세스에 대한 I / O에 사용되는 코딩 시스템을 초기화하는 데 사용되지만 나중에 &lt;code&gt;set-process-coding-system&lt;/code&gt; 을 사용하여 다른 코딩 시스템을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="373e9dce11ae976d1e778d4eafe0d3a69feb2897" translate="yes" xml:space="preserve">
          <source>This variable is an alist specifying which parameters get saved by &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt;, and subsequently restored by &lt;code&gt;set-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-put&lt;/code&gt;. See &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;.</source>
          <target state="translated">이 변수는 &lt;code&gt;current-window-configuration&lt;/code&gt; 및 &lt;code&gt;window-state-get&lt;/code&gt; 에 의해 저장되고 이후에 &lt;code&gt;set-window-configuration&lt;/code&gt; 및 &lt;code&gt;window-state-put&lt;/code&gt; 에 의해 복원 되는 매개 변수를 지정하는 목록 입니다. &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;창 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3f81404dfac1fe44b53204c180b72eb7545faed" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding system to use for network streams. It works much like &lt;code&gt;file-coding-system-alist&lt;/code&gt;, with the difference that the &lt;var&gt;pattern&lt;/var&gt; in an element may be either a port number or a regular expression. If it is a regular expression, it is matched against the network service name used to open the network stream.</source>
          <target state="translated">이 변수는 네트워크 스트림에 사용할 코딩 시스템을 지정하는 목록입니다. &lt;code&gt;file-coding-system-alist&lt;/code&gt; 와 매우 유사하게 작동하지만 요소 의 &lt;var&gt;pattern&lt;/var&gt; 이 포트 번호 또는 정규 표현식 일 수 있다는 차이점 이 있습니다. 정규식 인 경우 네트워크 스트림을 여는 데 사용되는 네트워크 서비스 이름과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3a959be21ff862cf002f86cdcaf3a543f74ddbe6" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding systems to use for reading and writing particular files. Each element has the form &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt; . &lt;var&gt;coding&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;pattern&lt;/var&gt; is a regular expression that matches certain file names. The element applies to file names that match &lt;var&gt;pattern&lt;/var&gt;.</source>
          <target state="translated">이 변수는 특정 파일을 읽고 쓰는 데 사용할 코딩 시스템을 지정하는 목록입니다. 각 요소의 형식은 &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt; . &lt;var&gt;coding&lt;/var&gt;)&lt;/code&gt; 여기서 &lt;var&gt;pattern&lt;/var&gt; 은 특정 파일 이름과 일치하는 정규식입니다. 이 요소는 &lt;var&gt;pattern&lt;/var&gt; 과 일치하는 파일 이름에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a7972cb56630206ee640b4248a3ccc058f94097b" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding systems to use for reading and writing particular files. Its form is like that of &lt;code&gt;file-coding-system-alist&lt;/code&gt;, but, unlike the latter, this variable takes priority over any &lt;code&gt;coding:&lt;/code&gt; tags in the file.</source>
          <target state="translated">이 변수는 특정 파일을 읽고 쓰는 데 사용할 코딩 시스템을 지정하는 목록입니다. 그 형식은 &lt;code&gt;file-coding-system-alist&lt;/code&gt; 와 비슷하지만 후자와 달리이 변수는 파일의 모든 &lt;code&gt;coding:&lt;/code&gt; 태그 보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="36c69cfbac56eab11877033b8b333faca3c9ecb2" translate="yes" xml:space="preserve">
          <source>This variable is an association list mapping terminal types to their aliases. For example, an element of the form &lt;code&gt;(&quot;vt102&quot;
. &quot;vt100&quot;)&lt;/code&gt; means to treat a terminal of type &amp;lsquo;</source>
          <target state="translated">이 변수는 터미널 유형을 별칭에 매핑하는 연결 목록입니다. 예를 들어, &lt;code&gt;(&quot;vt102&quot; . &quot;vt100&quot;)&lt;/code&gt; 형식의 요소는 '유형'의 터미널을 처리 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="124f6da8225ba9005cd78976d832a6444e2d5930" translate="yes" xml:space="preserve">
          <source>This variable is an older variant of &lt;code&gt;scroll-conservatively&lt;/code&gt;. The difference is that if its value is &lt;var&gt;n&lt;/var&gt;, that permits scrolling only by precisely &lt;var&gt;n&lt;/var&gt; lines, not a smaller number. This feature does not work with &lt;code&gt;scroll-margin&lt;/code&gt;. The default value is zero.</source>
          <target state="translated">이 변수는 &lt;code&gt;scroll-conservatively&lt;/code&gt; 의 이전 변형입니다 . 차이점은 값이 &lt;var&gt;n&lt;/var&gt; 이면 더 작은 수가 아닌 정확하게 &lt;var&gt;n&lt;/var&gt; 행만 스크롤 할 수 있다는 것입니다. 이 기능은 &lt;code&gt;scroll-margin&lt;/code&gt; 에서는 작동하지 않습니다 . 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="4e34486b85511f4c0616559a5644a62aeb9440a2" translate="yes" xml:space="preserve">
          <source>This variable is another keymap used just like &lt;code&gt;input-decode-map&lt;/code&gt; to translate input events into other events. It differs from &lt;code&gt;input-decode-map&lt;/code&gt; in that it goes to work after &lt;code&gt;local-function-key-map&lt;/code&gt; is finished rather than before; it receives the results of translation by &lt;code&gt;local-function-key-map&lt;/code&gt;.</source>
          <target state="translated">이 변수는 &lt;code&gt;input-decode-map&lt;/code&gt; 처럼 입력 이벤트를 다른 이벤트로 변환 하는 데 사용되는 또 다른 키맵 입니다. &lt;code&gt;input-decode-map&lt;/code&gt; 과는 다른 점에서 &lt;code&gt;local-function-key-map&lt;/code&gt; 이 끝나기 전이 아니라 완료된 후에 작동합니다 . &lt;code&gt;local-function-key-map&lt;/code&gt; 으로 번역 결과를받습니다 .</target>
        </trans-unit>
        <trans-unit id="5939ba0f237dde5ad4377992ce082070202f65ef" translate="yes" xml:space="preserve">
          <source>This variable is automatically buffer-local in all buffers; its value specifies the buffer&amp;rsquo;s display table. If it is &lt;code&gt;nil&lt;/code&gt;, there is no buffer display table.</source>
          <target state="translated">이 변수는 모든 버퍼에서 자동으로 버퍼 로컬입니다. 그 값은 버퍼의 디스플레이 테이블을 지정합니다. 이 경우 &lt;code&gt;nil&lt;/code&gt; , 더 버퍼 디스플레이 테이블이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c215a418df69d5bc5e4d0af22dcea97a5d9a31d1" translate="yes" xml:space="preserve">
          <source>This variable is displayed at the end of the mode line.</source>
          <target state="translated">이 변수는 모드 행 끝에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c848938c7b57cf6e780da020514fc4b9f3212981" translate="yes" xml:space="preserve">
          <source>This variable is displayed at the front of the mode line. By default, this construct is displayed right at the beginning of the mode line, except that if there is a memory-full message, it is displayed first.</source>
          <target state="translated">이 변수는 모드 라인의 맨 앞에 표시됩니다. 기본적으로이 구성은 모드 행의 시작 부분에 표시되지만 메모리가 가득 찬 메시지가있는 경우 먼저 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0bc313dc0a92d8a91dc86fe9988d07a6ce0408fa" translate="yes" xml:space="preserve">
          <source>This variable is ignored if the buffer is already displayed in the selected window or never appeared in it before, or if &lt;code&gt;switch-to-buffer&lt;/code&gt; calls &lt;code&gt;pop-to-buffer&lt;/code&gt; to display the buffer.</source>
          <target state="translated">버퍼가 선택된 창에 이미 표시되었거나 이전에 나타나지 않았거나 &lt;code&gt;switch-to-buffer&lt;/code&gt; &lt;code&gt;pop-to-buffer&lt;/code&gt; 를 표시하기 위해 버퍼 로 팝을 호출 하는 경우이 변수는 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="d35b4864af0de99a8d562e2ac965a573b15d48a2" translate="yes" xml:space="preserve">
          <source>This variable is ignored if the given &lt;var&gt;library&lt;/var&gt; is statically linked into Emacs.</source>
          <target state="translated">주어진 &lt;var&gt;library&lt;/var&gt; 가 Emacs에 정적으로 링크 된 경우이 변수는 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="797f256bf076b78b90391f0e757c3fdf9ac63473" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; if Emacs is in the process of loading a file, and it is &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 변수는 비이다 &lt;code&gt;nil&lt;/code&gt; 막스 파일을로드하는 과정에 있다면, 그것은 인 &lt;code&gt;nil&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="1eb3b35fd50500f504a0f75fdaa9b199fdad25b8" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; if and only if a keyboard macro is being defined. A command can test this variable so as to behave differently while a macro is being defined. The value is &lt;code&gt;append&lt;/code&gt; while appending to the definition of an existing macro. The commands &lt;code&gt;start-kbd-macro&lt;/code&gt;, &lt;code&gt;kmacro-start-macro&lt;/code&gt; and &lt;code&gt;end-kbd-macro&lt;/code&gt; set this variable&amp;mdash;do not set it yourself.</source>
          <target state="translated">이 변수는 키보드 매크로가 정의 된 경우에만 &lt;code&gt;nil&lt;/code&gt; 이 아닙니다. 명령은 매크로가 정의되는 동안 다르게 작동하도록이 변수를 테스트 할 수 있습니다. 값은 기존 매크로의 정의에 &lt;code&gt;append&lt;/code&gt; 하는 동안 추가됩니다. 명령 &lt;code&gt;start-kbd-macro&lt;/code&gt; , &lt;code&gt;kmacro-start-macro&lt;/code&gt; 및 &lt;code&gt;end-kbd-macro&lt;/code&gt; 이 변수가-않는 자신을 설정하지 세트.</target>
        </trans-unit>
        <trans-unit id="5afd9a3da466744d91ed051036855f1a242c35a6" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; when Emacs is running in batch mode.</source>
          <target state="translated">이 변수는 &lt;code&gt;nil&lt;/code&gt; Emacs가 배치 모드에서 실행될 때 nil 이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b71c63bce963e4462ce41aa1c838705cd629a347" translate="yes" xml:space="preserve">
          <source>This variable is normally &lt;code&gt;nil&lt;/code&gt;, but the undo commands bind it to &lt;code&gt;t&lt;/code&gt;. This is so that various kinds of change hooks can tell when they&amp;rsquo;re being called for the sake of undoing.</source>
          <target state="translated">이 변수는 일반적으로 &lt;code&gt;nil&lt;/code&gt; 입니다. 이지만 실행 취소 명령은이를 &lt;code&gt;t&lt;/code&gt; 에 바인딩합니다 . 이는 다양한 종류의 변경 후크가 실행 취소를 위해 호출되는시기를 알 수 있도록하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="d9bc765189a8bb5b379197dc9ae2ed38f4623384" translate="yes" xml:space="preserve">
          <source>This variable is normally set through the &amp;ldquo;other&amp;rdquo; elements in &lt;code&gt;font-lock-defaults&lt;/code&gt;:</source>
          <target state="translated">이 변수는 일반적으로 &quot;기타&quot;요소를 통해 설정됩니다. &lt;code&gt;font-lock-defaults&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27b670d7942c08834e5aa9a9568085b3f2bf3382" translate="yes" xml:space="preserve">
          <source>This variable is not a normal hook, because each function is called with two arguments: the window, and its new display-start position. At the time of the call, the display-start position of the argument window is already set to its new value, and the buffer to be displayed in the window is set as the current buffer.</source>
          <target state="translated">이 변수는 일반적인 후크가 아닙니다. 각 함수는 두 개의 인수 인 창과 새 표시 시작 위치로 호출되기 때문입니다. 호출시 인수 창의 표시 시작 위치는 이미 새 값으로 설정되어 있으며 창에 표시 될 버퍼는 현재 버퍼로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="376a0b2e857edf00ad857a5b0eb49dadd1cf62cb" translate="yes" xml:space="preserve">
          <source>This variable is obsolete and will be removed in future versions.</source>
          <target state="translated">이 변수는 더 이상 사용되지 않으며 향후 버전에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="caef5e927198433683f631964ab6349e7678f98b" translate="yes" xml:space="preserve">
          <source>This variable is provided for backward compatibility only. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt;, which calls the action function &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) when the value of this option is non-&lt;code&gt;nil&lt;/code&gt;. It is not consulted by &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</source>
          <target state="translated">이 변수는 이전 버전과의 호환성을 위해서만 제공됩니다. &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; 의 특수 메커니즘을 통해 &lt;code&gt;display-buffer&lt;/code&gt; 에 의해 준수되며 , 이 옵션의 값이 non- 일 때 작업 함수 &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; ( &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;버퍼 디스플레이 작업 함수&lt;/a&gt; 참조) 를 호출합니다. &lt;code&gt;nil&lt;/code&gt; . &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; 자체에 의해 참조되지 않으며 사용자가 &lt;code&gt;display-buffer-alist&lt;/code&gt; 에서 직접 지정할 수 있습니다. 등에서 .</target>
        </trans-unit>
        <trans-unit id="fe6ba336d942b6fcea77dc52d3523412d56064ec" translate="yes" xml:space="preserve">
          <source>This variable is provided mainly for backward compatibility. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt;, which calls the action function &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) if the value is non-&lt;code&gt;nil&lt;/code&gt;. (This is done before attempting to split a window.) This variable is not consulted by &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</source>
          <target state="translated">이 변수는 주로 이전 버전과의 호환성을 위해 제공됩니다. &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; 의 특수 메커니즘을 통해 &lt;code&gt;display-buffer&lt;/code&gt; 에 의해 준수되며 , 값이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 작업 함수 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; ( &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;버퍼 디스플레이 작업 함수&lt;/a&gt; 참조) 을 호출합니다 . (이는 창 분할을 시도하기 전에 수행됩니다.)이 변수는 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 자체에서 참조하지 않으며 사용자가 &lt;code&gt;display-buffer-alist&lt;/code&gt; 등에서 직접 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93e1ba20cdb5f38185724217a17fe96e960eda25" translate="yes" xml:space="preserve">
          <source>This variable is set automatically by Emacs. Its value is &lt;code&gt;t&lt;/code&gt; when there are two or more frames (not counting minibuffer-only frames or invisible frames). The default value of &lt;code&gt;frame-title-format&lt;/code&gt; uses &lt;code&gt;multiple-frames&lt;/code&gt; so as to put the buffer name in the frame title only when there is more than one frame.</source>
          <target state="translated">이 변수는 Emacs에 의해 자동으로 설정됩니다. 두 개 이상의 프레임이있는 경우 값은 &lt;code&gt;t&lt;/code&gt; 입니다 (미니 버퍼 전용 프레임 또는 보이지 않는 프레임은 계산하지 않음). &lt;code&gt;frame-title-format&lt;/code&gt; 의 기본값 은 &lt;code&gt;multiple-frames&lt;/code&gt; 이있을 때만 프레임 제목에 버퍼 이름을 넣도록 .</target>
        </trans-unit>
        <trans-unit id="0f6b0216548829286d841787d7fb6ac3ba4b4400" translate="yes" xml:space="preserve">
          <source>This variable is set by modes to specify how to fontify text in that mode. It automatically becomes buffer-local when set. If its value is &lt;code&gt;nil&lt;/code&gt;, Font Lock mode does no highlighting, and you can use the &amp;lsquo;</source>
          <target state="translated">이 변수는 해당 모드에서 텍스트 글꼴을 지정하는 방법을 지정하기 위해 모드별로 설정됩니다. 설정되면 자동으로 버퍼 로컬이됩니다. 값이 &lt;code&gt;nil&lt;/code&gt; 인 경우 이면 글꼴 잠금 모드가 강조 표시되지 않으며 '</target>
        </trans-unit>
        <trans-unit id="03be4af58c3aec1ad32af06e6b698351482d7eec" translate="yes" xml:space="preserve">
          <source>This variable is set non-&lt;code&gt;nil&lt;/code&gt; by defining or altering any abbrevs (except system abbrevs). This serves as a flag for various Emacs commands to offer to save your abbrevs.</source>
          <target state="translated">이 변수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값으로 설정됩니다. 약어를 정의하거나 변경하여 이 됩니다 (시스템 약어 제외). 이것은 약어를 저장하기 위해 제공하는 다양한 Emacs 명령에 대한 플래그 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="ca27bbac57654ccf2415ebe2c70b3ea90647ce9e" translate="yes" xml:space="preserve">
          <source>This variable is set to the last input event that was read by the command loop as part of a command. The principal use of this variable is in &lt;code&gt;self-insert-command&lt;/code&gt;, which uses it to decide which character to insert.</source>
          <target state="translated">이 변수는 명령의 일부로 명령 루프에서 읽은 마지막 입력 이벤트로 설정됩니다. 이 변수의 주요 용도는 &lt;code&gt;self-insert-command&lt;/code&gt; 할 문자를 결정하는 데 사용하는 입니다.</target>
        </trans-unit>
        <trans-unit id="f52560d9347e2a733b950594d1ee2bd1ee802fbb" translate="yes" xml:space="preserve">
          <source>This variable is set up by Emacs just like &lt;code&gt;last-command&lt;/code&gt;, but never altered by Lisp programs.</source>
          <target state="translated">이 변수는 &lt;code&gt;last-command&lt;/code&gt; 처럼 Emacs에 의해 설정 되지만 Lisp 프로그램에 의해 변경되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="76a29e52f85f2aa6242f6e4f58aafd9e372ad48e" translate="yes" xml:space="preserve">
          <source>This variable is significant only if &lt;code&gt;backup-by-copying&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, since copying is always used when that variable is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 변수는 해당 변수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 항상 복사가 사용되기 때문에 복사 &lt;code&gt;backup-by-copying&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 인 경우에만 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="02406f64c5cf3ddc50c8626b920a2fa095ddb8df" translate="yes" xml:space="preserve">
          <source>This variable is the definition of the most recently defined keyboard macro. Its value is a string or vector, or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 변수는 가장 최근에 정의 된 키보드 매크로의 정의입니다. 값은 문자열, 벡터 또는 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="50ab5da14852f23091c972692a46461ad3a9497e" translate="yes" xml:space="preserve">
          <source>This variable is the meta-prefix character code. It is used for translating a meta character to a two-character sequence so it can be looked up in a keymap. For useful results, the value should be a prefix event (see &lt;a href=&quot;prefix-keys#Prefix-Keys&quot;&gt;Prefix Keys&lt;/a&gt;). The default value is 27, which is the</source>
          <target state="translated">이 변수는 메타 접두어 문자 코드입니다. 메타 문자를 두 문자 시퀀스로 변환하는 데 사용되므로 키맵에서 찾을 수 있습니다. 유용한 결과를 얻으려면 값이 접두사 이벤트 여야합니다 ( &lt;a href=&quot;prefix-keys#Prefix-Keys&quot;&gt;접두사 키&lt;/a&gt; 참조 ). 기본값은 27입니다.</target>
        </trans-unit>
        <trans-unit id="376c5d142708b7d85e9e19b23ca69182f40d0fc1" translate="yes" xml:space="preserve">
          <source>This variable is the standard obarray for use by &lt;code&gt;intern&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">이 변수는 &lt;code&gt;intern&lt;/code&gt; 및 &lt;code&gt;read&lt;/code&gt; 가 사용하는 표준 obarray입니다 .</target>
        </trans-unit>
        <trans-unit id="1039647cd38f8bfd4258dddb552926ab6a4a4ed9" translate="yes" xml:space="preserve">
          <source>This variable is used by &lt;code&gt;read-file-name&lt;/code&gt;, and thus, indirectly, by most commands reading file names. (This includes all commands that use the code letters &amp;lsquo;</source>
          <target state="translated">이 변수는 &lt;code&gt;read-file-name&lt;/code&gt; 에서 사용하므로 대부분의 명령에서 파일 이름을 읽는 간접적으로 사용됩니다. (여기에는 코드 문자 '</target>
        </trans-unit>
        <trans-unit id="aedb0bf79b146af9682aaaed6462ef9188293a47" translate="yes" xml:space="preserve">
          <source>This variable is used by passing it as an argument to the function &lt;code&gt;replace-match&lt;/code&gt;. See &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;Replacing Match&lt;/a&gt;.</source>
          <target state="translated">이 변수는 &lt;code&gt;replace-match&lt;/code&gt; 함수에 인수로 전달하여 사용됩니다 . &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;일치 바꾸기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="66315d01aad0af584ac9d069327490c6bab486f4" translate="yes" xml:space="preserve">
          <source>This variable is used by the function &lt;code&gt;delete-auto-save-file-if-necessary&lt;/code&gt;. If it is non-&lt;code&gt;nil&lt;/code&gt;, Emacs deletes auto-save files when a true save is done (in the visited file). This saves disk space and unclutters your directory.</source>
          <target state="translated">이 변수는 &lt;code&gt;delete-auto-save-file-if-necessary&lt;/code&gt; 함수에서 사용됩니다 . &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 Emacs는 실제 저장이 완료 될 때 (방문한 파일에서) 자동 저장 파일을 삭제합니다. 이것은 디스크 공간을 절약하고 디렉토리를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="62db85ef23e40c3a7577d5236a43bea3d0b01cf4" translate="yes" xml:space="preserve">
          <source>This variable is used in conjunction with the &lt;code&gt;minor-mode-alist&lt;/code&gt; to display the minor mode name in the mode line. It also determines whether the minor mode keymap is active, via &lt;code&gt;minor-mode-map-alist&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;). Individual commands or hooks can also check its value.</source>
          <target state="translated">이 변수는 &lt;code&gt;minor-mode-alist&lt;/code&gt; 와 함께 사용되어 모드 행에 부 모드 이름을 표시합니다. 또한 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 를 통해 부 모드 키맵이 활성 상태인지 여부를 결정합니다 ( &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;활성 맵 제어&lt;/a&gt; 참조 ). 개별 명령 또는 후크도 해당 값을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f10f1b7d43a13da55ece7c54f425ba94153de2b3" translate="yes" xml:space="preserve">
          <source>This variable is used to define the maximum size of image that Emacs will load. Emacs will refuse to load (and display) any image that is larger than this limit.</source>
          <target state="translated">이 변수는 Emacs가로드 할 이미지의 최대 크기를 정의하는 데 사용됩니다. Emacs는이 제한보다 큰 이미지를로드 (및 표시)하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb63013f442736c9ce6a071ed8662141a1cace92" translate="yes" xml:space="preserve">
          <source>This variable is used to identify &lt;code&gt;emacsclient&lt;/code&gt; frames.</source>
          <target state="translated">이 변수는 &lt;code&gt;emacsclient&lt;/code&gt; 를 식별하는 데 사용됩니다. 프레임 .</target>
        </trans-unit>
        <trans-unit id="e87edcba6da84a8bebb299509ddb8ae3703fd740" translate="yes" xml:space="preserve">
          <source>This variable is used to show whether &lt;code&gt;default-directory&lt;/code&gt; for the current buffer is remote.</source>
          <target state="translated">이 변수는 현재 버퍼의 &lt;code&gt;default-directory&lt;/code&gt; 가 원격 인지 여부를 표시하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="84409f176efb2c42d215233ff2fae5d51b9502e8" translate="yes" xml:space="preserve">
          <source>This variable is used to specify extra properties of the current completion command. It is intended to be let-bound by specialized completion commands. Its value should be a list of property and value pairs. The following properties are supported:</source>
          <target state="translated">이 변수는 현재 완료 명령의 추가 속성을 지정하는 데 사용됩니다. 특수한 완료 명령에 의해 바인딩되도록되어 있습니다. 값은 속성 및 값 쌍의 목록이어야합니다. 다음 속성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c93b80661ff181348fe72f3b646d1db6a33626b1" translate="yes" xml:space="preserve">
          <source>This variable is useful for referring back to values of forms recently evaluated. It is generally a bad idea to print the value of &lt;code&gt;values&lt;/code&gt; itself, since this may be very long. Instead, examine particular elements, like this:</source>
          <target state="translated">이 변수는 최근 평가 된 양식의 값을 다시 참조하는 데 유용합니다. &lt;code&gt;values&lt;/code&gt; 이 매우 길 수 있으므로 일반적으로 값 자체 를 인쇄하는 것은 좋지 않습니다 . 대신 다음과 같은 특정 요소를 조사하십시오.</target>
        </trans-unit>
        <trans-unit id="436db1e43d4a73a88992fa12b3a5af3ca227c735" translate="yes" xml:space="preserve">
          <source>This variable keeps the main thread Emacs is running, or &lt;code&gt;nil&lt;/code&gt; if Emacs is compiled without thread support.</source>
          <target state="translated">이 변수는 Emacs가 실행중인 메인 스레드를 유지하거나 Emacs가 스레드 지원없이 컴파일 된 경우 &lt;code&gt;nil&lt;/code&gt; 을 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="0d4cd53aa022f27698b2e0664ef69eb65bd377c2" translate="yes" xml:space="preserve">
          <source>This variable lets Lisp programs &amp;ldquo;press&amp;rdquo; the modifier keys on the keyboard. The value is a character. Only the modifiers of the character matter. Each time the user types a keyboard key, it is altered as if those modifier keys were held down. For instance, if you bind &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to &lt;code&gt;?\C-\M-a&lt;/code&gt;, then all keyboard input characters typed during the scope of the binding will have the control and meta modifiers applied to them. The character &lt;code&gt;?\C-@&lt;/code&gt;, equivalent to the integer 0, does not count as a control character for this purpose, but as a character with no modifiers. Thus, setting &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to zero cancels any modification.</source>
          <target state="translated">이 변수를 사용하면 Lisp 프로그램이 키보드의 수정 자 키를 &quot;누를&quot;수 있습니다. 값은 문자입니다. 캐릭터의 수정 자만 중요합니다. 사용자가 키보드 키를 입력 할 때마다 해당 수정 자 키를 누른 것처럼 변경됩니다. 당신이 결합하는 경우 예를 들어, &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; 에 &lt;code&gt;?\C-\M-a&lt;/code&gt; , 다음 컨트롤을해야합니다 바인딩 및 메타 수정의 범위 동안 입력 된 모든 키보드 입력 문자가 적용된. 정수 0에 해당하는 문자 &lt;code&gt;?\C-@&lt;/code&gt; 는이 목적을위한 제어 문자로 간주되지 않지만 수정자가없는 문자로 간주됩니다. 따라서 &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; 를 0으로 설정 하면 모든 수정이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="01341c9aaa373d91702cb7e8ffda6a4c916f0625" translate="yes" xml:space="preserve">
          <source>This variable lets you specify alternative font registries to try, if a given registry is specified and doesn&amp;rsquo;t exist. Each element should have this form:</source>
          <target state="translated">이 변수를 사용하면 주어진 레지스트리가 지정되고 존재하지 않는 경우 시도 할 대체 글꼴 레지스트리를 지정할 수 있습니다. 각 요소는 다음 형식을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="d1c3d7e0c03db028ef7a807bfc918813c4fc5bca" translate="yes" xml:space="preserve">
          <source>This variable limits the effective value of &lt;code&gt;scroll-margin&lt;/code&gt; to a fraction of the current window line height. For example, if the current window has 20 lines and &lt;code&gt;maximum-scroll-margin&lt;/code&gt; is 0.1, then the scroll margins will never be larger than 2 lines, no matter how big &lt;code&gt;scroll-margin&lt;/code&gt; is.</source>
          <target state="translated">이 변수는 &lt;code&gt;scroll-margin&lt;/code&gt; 의 유효 값을 현재 창 행 높이의 일부로 제한합니다 . 예를 들어, 현재 창 20 개 라인을 가지고 있으며, &lt;code&gt;maximum-scroll-margin&lt;/code&gt; 0.1이며 다음 스크롤 여백보다 큰 2 선, 얼마나 큰 상관없이 없을 것 &lt;code&gt;scroll-margin&lt;/code&gt; 이다.</target>
        </trans-unit>
        <trans-unit id="4c7a4e958845ea40dde2dc0c25650bff2b222785" translate="yes" xml:space="preserve">
          <source>This variable names the function to be called to request the user to select a proper coding system for encoding text when the default coding system for an output operation cannot safely encode that text. The default value of this variable is &lt;code&gt;select-safe-coding-system&lt;/code&gt;. Emacs primitives that write text to files, such as &lt;code&gt;write-region&lt;/code&gt;, or send text to other processes, such as &lt;code&gt;process-send-region&lt;/code&gt;, normally call the value of this variable, unless &lt;code&gt;coding-system-for-write&lt;/code&gt; is bound to a non-&lt;code&gt;nil&lt;/code&gt; value (see &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;Specifying Coding Systems&lt;/a&gt;).</source>
          <target state="translated">이 변수는 출력 작업을위한 기본 코딩 시스템이 해당 텍스트를 안전하게 인코딩 할 수 없을 때 사용자에게 텍스트 인코딩을위한 적절한 코딩 시스템을 선택하도록 요청하기 위해 호출 할 함수의 이름을 지정합니다. 이 변수의 기본값은 &lt;code&gt;select-safe-coding-system&lt;/code&gt; 입니다. &lt;code&gt;write-region&lt;/code&gt; 과 같은 파일에 텍스트를 쓰거나 &lt;code&gt;process-send-region&lt;/code&gt; 과 같은 다른 프로세스에 텍스트를 보내는 Emacs 프리미티브는 일반적으로 &lt;code&gt;coding-system-for-write&lt;/code&gt; 가 non에 바인딩 되지 않는 한이 변수의 값을 호출합니다. - &lt;code&gt;nil&lt;/code&gt; 값 (참조 &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;지정이 시스템을 코딩&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c23531bf92c593cfc879e88f1976a1773f78275d" translate="yes" xml:space="preserve">
          <source>This variable provides a way of communicating killed text to other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of one required argument.</source>
          <target state="translated">이 변수는 윈도우 시스템을 사용할 때 다른 프로그램에 종료 된 텍스트를 전달하는 방법을 제공합니다. 값은 &lt;code&gt;nil&lt;/code&gt; 이거나 필수 인수 하나의 함수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e7e004520da68bebcdd98a02f42428be2f0ca64" translate="yes" xml:space="preserve">
          <source>This variable provides a way of transferring killed text from other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of no arguments.</source>
          <target state="translated">이 변수는 윈도우 시스템을 사용할 때 다른 프로그램에서 죽인 텍스트를 전송하는 방법을 제공합니다. 값은 &lt;code&gt;nil&lt;/code&gt; 이거나 인수가없는 함수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="030a51c56b05836f902d0059148131139d93e32f" translate="yes" xml:space="preserve">
          <source>This variable provides a way to override how the filling functions, such as &lt;code&gt;fill-region&lt;/code&gt; and &lt;code&gt;fill-paragraph&lt;/code&gt;, move forward to the next paragraph. Its value should be a function, which is called with a single argument &lt;var&gt;n&lt;/var&gt;, the number of paragraphs to move, and should return the difference between &lt;var&gt;n&lt;/var&gt; and the number of paragraphs actually moved. The default value of this variable is &lt;code&gt;forward-paragraph&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="translated">이 변수는 &lt;code&gt;fill-region&lt;/code&gt; 및 &lt;code&gt;fill-paragraph&lt;/code&gt; 와 같은 채우기 기능 이 다음 단락으로 이동 하는 방법을 재정의하는 방법을 제공합니다 . 그 값은 단일 인수 &lt;var&gt;n&lt;/var&gt; , 이동할 단락 수를 사용하여 호출되는 함수 여야하며 &lt;var&gt;n&lt;/var&gt; 과 실제로 이동 한 단락 수의 차이를 반환해야합니다 . 이 변수의 기본값은 &lt;code&gt;forward-paragraph&lt;/code&gt; 입니다. 참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;단락을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="4ab325bd391f407f8cfa8c5e2999c4c37f853fbe" translate="yes" xml:space="preserve">
          <source>This variable provides a way to override how the filling functions, such as &lt;code&gt;fill-region&lt;/code&gt; and &lt;code&gt;fill-paragraph&lt;/code&gt;, move forward to the next paragraph. Its value should be a function, which is called with a single argument &lt;var&gt;n&lt;/var&gt;, the number of paragraphs to move, and should return the difference between &lt;var&gt;n&lt;/var&gt; and the number of paragraphs actually moved. The default value of this variable is &lt;code&gt;forward-paragraph&lt;/code&gt;. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74277818ea9e0a2b5ede9f7b50a31147007f80c2" translate="yes" xml:space="preserve">
          <source>This variable provides a way to override the filling of paragraphs. If its value is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fill-paragraph&lt;/code&gt; calls this function to do the work. If the function returns a non-&lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;fill-paragraph&lt;/code&gt; assumes the job is done, and immediately returns that value.</source>
          <target state="translated">이 변수는 단락 채우기를 재정의하는 방법을 제공합니다. 그 값이 아닌 경우, &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;fill-paragraph&lt;/code&gt; 작업을 수행하기 위해이 함수를 호출합니다. 함수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환하면 &lt;code&gt;fill-paragraph&lt;/code&gt; 는 작업이 완료된 것으로 가정하고 즉시 해당 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3800af661db458dc57b43e12e3912a9d79acd6e2" translate="yes" xml:space="preserve">
          <source>This variable provides another way to mark some variable values as safe. It is a list of cons cells &lt;code&gt;(&lt;var&gt;var&lt;/var&gt; . &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;var&lt;/var&gt; is a variable name and &lt;var&gt;val&lt;/var&gt; is a value which is safe for that variable.</source>
          <target state="translated">이 변수는 일부 변수 값을 안전한 것으로 표시하는 또 다른 방법을 제공합니다. 이는 단점 셀 &lt;code&gt;(&lt;var&gt;var&lt;/var&gt; . &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt; 의 목록입니다 . 여기서 &lt;var&gt;var&lt;/var&gt; 는 변수 이름이고 &lt;var&gt;val&lt;/var&gt; 은 해당 변수에 안전한 값입니다.</target>
        </trans-unit>
        <trans-unit id="e9a7fa839145e25eab7f151fb8df4a357ebe5d83" translate="yes" xml:space="preserve">
          <source>This variable records the debugging status of the current interactive command. Each time a command is called interactively, this variable is bound to &lt;code&gt;nil&lt;/code&gt;. The debugger can set this variable to leave information for future debugger invocations during the same command invocation.</source>
          <target state="translated">이 변수는 현재 대화식 명령의 디버깅 상태를 기록합니다. 명령이 대화식으로 호출 될 때 &lt;code&gt;nil&lt;/code&gt; 변수는 nil에 바인딩됩니다 . 디버거는이 변수를 설정하여 동일한 명령 호출 중에 향후 디버거 호출을위한 정보를 남길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f873bc0862353ed3c8f1ba89acfe8e0c6ef90866" translate="yes" xml:space="preserve">
          <source>This variable records the last terminal input event read, whether as part of a command or explicitly by a Lisp program.</source>
          <target state="translated">이 변수는 명령의 일부로 또는 Lisp 프로그램에 의해 명시 적으로 읽은 마지막 터미널 입력 이벤트를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="869dca2c2f9e7f7334d4386ab6d41a8e06254e7c" translate="yes" xml:space="preserve">
          <source>This variable records the name of the command now being executed by the editor command loop. Like &lt;code&gt;last-command&lt;/code&gt;, it is normally a symbol with a function definition.</source>
          <target state="translated">이 변수는 편집기 명령 루프에서 현재 실행중인 명령의 이름을 기록합니다. &lt;code&gt;last-command&lt;/code&gt; 와 마찬가지로 일반적으로 함수 정의가있는 기호입니다.</target>
        </trans-unit>
        <trans-unit id="2d872a1f6d0665742d4676aabfb07f7d4c548912" translate="yes" xml:space="preserve">
          <source>This variable records the name of the previous command executed by the command loop (the one before the current command). Normally the value is a symbol with a function definition, but this is not guaranteed.</source>
          <target state="translated">이 변수는 명령 루프 (현재 명령 이전의 명령)에 의해 실행 된 이전 명령의 이름을 기록합니다. 일반적으로 값은 기능 정의가있는 기호이지만 보장되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="5918077a2c6da3ca401f27a49f212010561acad3" translate="yes" xml:space="preserve">
          <source>This variable records which frame the last input event was directed to. Usually this is the frame that was selected when the event was generated, but if that frame has redirected input focus to another frame, the value is the frame to which the event was redirected. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;.</source>
          <target state="translated">이 변수는 마지막 입력 이벤트가 전달 된 프레임을 기록합니다. 일반적으로 이것은 이벤트가 생성 될 때 선택한 프레임이지만 해당 프레임이 입력 포커스를 다른 프레임으로 리디렉션 한 경우 값은 이벤트가 리디렉션 된 프레임입니다. &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;입력 초점을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="838efdf98ab2d6a4103e8b325a314c7f102faafd" translate="yes" xml:space="preserve">
          <source>This variable says which user&amp;rsquo;s init files should be used by Emacs&amp;mdash;or &lt;code&gt;nil&lt;/code&gt; if none. &lt;code&gt;&quot;&quot;&lt;/code&gt; stands for the user who originally logged in. The value reflects command-line options such as &amp;lsquo;</source>
          <target state="translated">이 변수는 Emacs에서 어떤 사용자의 init 파일을 사용해야하는지 알려 줍니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다. &lt;code&gt;&quot;&quot;&lt;/code&gt; 는 원래 로그인 한 사용자를 나타냅니다. 값은 '와 같은 명령 줄 옵션을 반영합니다.</target>
        </trans-unit>
        <trans-unit id="b8cdae38282e80af0604a2e14d035922b435d21a" translate="yes" xml:space="preserve">
          <source>This variable specifies a function for creating a new frame, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; action function.</source>
          <target state="translated">이 변수는 버퍼를 표시하기위한 새 창을 만들기 위해 새 프레임을 만드는 기능을 지정합니다. 그것은에 의해 사용되는 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 동작 기능.</target>
        </trans-unit>
        <trans-unit id="5e4442ca5c7969783e4ca5795f2afb7427dd11bd" translate="yes" xml:space="preserve">
          <source>This variable specifies a function for splitting a window, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; action function to actually split the window.</source>
          <target state="translated">이 변수는 버퍼를 표시하기위한 새 창을 만들기 위해 창을 분할하는 기능을 지정합니다. &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; 액션 함수에서 실제로 창을 분할하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="65bbbcce82a2b180ed1f53c1c2a5225d601d52fe" translate="yes" xml:space="preserve">
          <source>This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next regexp to replace. Its default value is &lt;code&gt;re-search-forward&lt;/code&gt;. Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;re-search-forward&lt;/code&gt; (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;).</source>
          <target state="translated">이 변수는 &lt;code&gt;perform-replace&lt;/code&gt; 다음 정규식을 검색하기 위해 대체 호출을 수행 하는 함수를 지정합니다 . 기본값은 &lt;code&gt;re-search-forward&lt;/code&gt; 입니다. 다른 값은 3 개의 인수로 된 함수의 이름을 지정해야합니다. 즉, &lt;code&gt;re-search-forward&lt;/code&gt; 의 처음 3 개 인수입니다 ( &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp 검색&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b5c4a8558378e7897087c9a8964f5db5818d45af" translate="yes" xml:space="preserve">
          <source>This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next string to replace. Its default value is &lt;code&gt;search-forward&lt;/code&gt;. Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;search-forward&lt;/code&gt; (see &lt;a href=&quot;string-search#String-Search&quot;&gt;String Search&lt;/a&gt;).</source>
          <target state="translated">이 변수는 &lt;code&gt;perform-replace&lt;/code&gt; 다음 문자열을 검색하기 위해 대체 호출을 수행 하는 함수를 지정합니다 . 기본값은 &lt;code&gt;search-forward&lt;/code&gt; 입니다. 다른 모든 값은 3 개의 인수로 된 함수의 이름을 지정해야합니다. 즉, &lt;code&gt;search-forward&lt;/code&gt; 의 처음 3 개 인수입니다 ( &lt;a href=&quot;string-search#String-Search&quot;&gt;문자열 검색&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a45f554a4aa8212f2f21f28653b295cbf0e7b2bb" translate="yes" xml:space="preserve">
          <source>This variable specifies a list of directories for searching for bitmap files, for the &lt;code&gt;:stipple&lt;/code&gt; attribute.</source>
          <target state="translated">이 변수는 &lt;code&gt;:stipple&lt;/code&gt; 속성에 대해 비트 맵 파일을 검색하기위한 디렉토리 목록을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="8fba5ef4481ab8fcb184f7f33ecf0a7dd3cc3c3a" translate="yes" xml:space="preserve">
          <source>This variable specifies additional properties (other than &lt;code&gt;font-lock-face&lt;/code&gt;) that are being managed by Font Lock mode. It is used by &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt;, which normally only manages the &lt;code&gt;font-lock-face&lt;/code&gt; property. If you want Font Lock to manage other properties as well, you must specify them in a &lt;var&gt;facespec&lt;/var&gt; in &lt;code&gt;font-lock-keywords&lt;/code&gt; as well as add them to this list. See &lt;a href=&quot;search_002dbased-fontification#Search_002dbased-Fontification&quot;&gt;Search-based Fontification&lt;/a&gt;.</source>
          <target state="translated">이 변수 는 글꼴 잠금 모드에서 관리되는 추가 속성 ( &lt;code&gt;font-lock-face&lt;/code&gt; 제외)을 지정합니다. 그것은에 의해 사용되는 &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt; 일반적으로 단지 관리, &lt;code&gt;font-lock-face&lt;/code&gt; 속성을. Font Lock이 다른 속성도 관리하도록하려면 &lt;code&gt;font-lock-keywords&lt;/code&gt; 의 &lt;var&gt;facespec&lt;/var&gt; 에 지정 하고이 목록에 추가해야합니다. &lt;a href=&quot;search_002dbased-fontification#Search_002dbased-Fontification&quot;&gt;검색 기반 글꼴 화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="58b32be0616add930abcc0229a185014687618a3" translate="yes" xml:space="preserve">
          <source>This variable specifies an alternate expression-reading function for &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;eval-region&lt;/code&gt; to use instead of &lt;code&gt;read&lt;/code&gt;. The function should accept one argument, just as &lt;code&gt;read&lt;/code&gt; does.</source>
          <target state="translated">이 변수 는 &lt;code&gt;read&lt;/code&gt; 대신 사용할 &lt;code&gt;load&lt;/code&gt; 및 &lt;code&gt;eval-region&lt;/code&gt; 에 대한 대체 표현식 읽기 함수를 지정합니다 . 함수는 &lt;code&gt;read&lt;/code&gt; 처럼 하나의 인수를 받아야합니다 .</target>
        </trans-unit>
        <trans-unit id="47afa05a6ca15744c12c8cfb9ead083a585c8508" translate="yes" xml:space="preserve">
          <source>This variable specifies an extra margin to add around tool bar items. The value is an integer, a number of pixels. The default is 4.</source>
          <target state="translated">이 변수는 도구 모음 항목 주위에 추가 할 추가 여백을 지정합니다. 값은 정수, 픽셀 수입니다. 기본값은 4입니다.</target>
        </trans-unit>
        <trans-unit id="28a60e86db17f840ccf892abf60a57ce5b31694a" translate="yes" xml:space="preserve">
          <source>This variable specifies errors which should not enter the debugger, regardless of the value of &lt;code&gt;debug-on-error&lt;/code&gt;. Its value is a list of error condition symbols and/or regular expressions. If the error has any of those condition symbols, or if the error message matches any of the regular expressions, then that error does not enter the debugger.</source>
          <target state="translated">This variable specifies errors which should not enter the debugger, regardless of the value of &lt;code&gt;debug-on-error&lt;/code&gt; . Its value is a list of error condition symbols and/or regular expressions. If the error has any of those condition symbols, or if the error message matches any of the regular expressions, then that error does not enter the debugger.</target>
        </trans-unit>
        <trans-unit id="610d2f60484605ad3b25ae4464f4129aa59413bb" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when a window buffer or size change occurred or the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">This variable specifies functions called during redisplay when a window buffer or size change occurred or the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</target>
        </trans-unit>
        <trans-unit id="3d8e14aa00cc2e5390b451efdefaf901a24ade75" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when a window size change occurred. The value should be a list of functions that take one argument.</source>
          <target state="translated">This variable specifies functions called during redisplay when a window size change occurred. The value should be a list of functions that take one argument.</target>
        </trans-unit>
        <trans-unit id="ce5feb8199a3d98702bebba8d8e3973ea691970e" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when either the buffer or the size of a window has changed. The value should be a list of functions that take no argument.</source>
          <target state="translated">This variable specifies functions called during redisplay when either the buffer or the size of a window has changed. The value should be a list of functions that take no argument.</target>
        </trans-unit>
        <trans-unit id="7806002cf71bb7e163e4d092fb091325c48654cf" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">This variable specifies functions called during redisplay when the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</target>
        </trans-unit>
        <trans-unit id="f7833b0be19287045b397324f27aa2c7aab7bc4e" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when window buffers have changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">This variable specifies functions called during redisplay when window buffers have changed. The value should be a list of functions that take one argument.</target>
        </trans-unit>
        <trans-unit id="9c60b198dea33a3125eb0199ee5d70f221776b30" translate="yes" xml:space="preserve">
          <source>This variable specifies how many lines to keep in the</source>
          <target state="translated">This variable specifies how many lines to keep in the</target>
        </trans-unit>
        <trans-unit id="19eb12c9e520a401f4bc57afed37f4fb936151c2" translate="yes" xml:space="preserve">
          <source>This variable specifies how many of the newest backup versions to keep in the Dired command</source>
          <target state="translated">This variable specifies how many of the newest backup versions to keep in the Dired command</target>
        </trans-unit>
        <trans-unit id="5df2b7a09afcd7fb1b1eb2e48b42fd361b595d3a" translate="yes" xml:space="preserve">
          <source>This variable specifies how to blink the cursor. Each element has the form &lt;code&gt;(&lt;var&gt;on-state&lt;/var&gt; . &lt;var&gt;off-state&lt;/var&gt;)&lt;/code&gt;. Whenever the cursor type equals &lt;var&gt;on-state&lt;/var&gt; (comparing using &lt;code&gt;equal&lt;/code&gt;), the corresponding &lt;var&gt;off-state&lt;/var&gt; specifies what the cursor looks like when it blinks off. Both &lt;var&gt;on-state&lt;/var&gt; and &lt;var&gt;off-state&lt;/var&gt; should be suitable values for the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">This variable specifies how to blink the cursor. Each element has the form &lt;code&gt;(&lt;var&gt;on-state&lt;/var&gt; . &lt;var&gt;off-state&lt;/var&gt;)&lt;/code&gt; . Whenever the cursor type equals &lt;var&gt;on-state&lt;/var&gt; (comparing using &lt;code&gt;equal&lt;/code&gt; ), the corresponding &lt;var&gt;off-state&lt;/var&gt; specifies what the cursor looks like when it blinks off. Both &lt;var&gt;on-state&lt;/var&gt; and &lt;var&gt;off-state&lt;/var&gt; should be suitable values for the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</target>
        </trans-unit>
        <trans-unit id="a80bbc6a3b5bf0e978540d2a9ace58466f8031cd" translate="yes" xml:space="preserve">
          <source>This variable specifies how to compute a name for a frame when you have not explicitly specified one. The variable&amp;rsquo;s value is actually a mode line construct, just like &lt;code&gt;mode-line-format&lt;/code&gt;, except that the &amp;lsquo;</source>
          <target state="translated">This variable specifies how to compute a name for a frame when you have not explicitly specified one. The variable&amp;rsquo;s value is actually a mode line construct, just like &lt;code&gt;mode-line-format&lt;/code&gt; , except that the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="fc57b803d6d7feb0e149332857d8f86659f5aeeb" translate="yes" xml:space="preserve">
          <source>This variable specifies how to compute the name for an iconified frame, when you have not explicitly specified the frame title. This title appears in the icon itself.</source>
          <target state="translated">This variable specifies how to compute the name for an iconified frame, when you have not explicitly specified the frame title. This title appears in the icon itself.</target>
        </trans-unit>
        <trans-unit id="6f21c5f703b1d42ea73e3ce7b2318d579f34230f" translate="yes" xml:space="preserve">
          <source>This variable specifies how to print floating-point numbers. The default is &lt;code&gt;nil&lt;/code&gt;, meaning use the shortest output that represents the number without losing information.</source>
          <target state="translated">This variable specifies how to print floating-point numbers. The default is &lt;code&gt;nil&lt;/code&gt; , meaning use the shortest output that represents the number without losing information.</target>
        </trans-unit>
        <trans-unit id="4d85ac68025c7374662b52e6041af9d632761223" translate="yes" xml:space="preserve">
          <source>This variable specifies major modes to use for scripts that specify a command interpreter in a &amp;lsquo;</source>
          <target state="translated">This variable specifies major modes to use for scripts that specify a command interpreter in a &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="33a8cdb5288fc58856324af31431fd97f9dee42b" translate="yes" xml:space="preserve">
          <source>This variable specifies scaling for certain faces. Its value should be a list of elements of the form</source>
          <target state="translated">This variable specifies scaling for certain faces. Its value should be a list of elements of the form</target>
        </trans-unit>
        <trans-unit id="ad0b684e7b13be16e65d9022dd3b6342565c5b43" translate="yes" xml:space="preserve">
          <source>This variable specifies special completion styles and other completion behaviors to use when completing certain types of text. Its value should be an alist with elements of the form &lt;code&gt;(&lt;var&gt;category&lt;/var&gt;
. &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;category&lt;/var&gt; is a symbol describing what is being completed; currently, the &lt;code&gt;buffer&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, and &lt;code&gt;unicode-name&lt;/code&gt; categories are defined, but others can be defined via specialized completion functions (see &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;). &lt;var&gt;alist&lt;/var&gt; is an association list describing how completion should behave for the corresponding category. The following alist keys are supported:</source>
          <target state="translated">This variable specifies special completion styles and other completion behaviors to use when completing certain types of text. Its value should be an alist with elements of the form &lt;code&gt;(&lt;var&gt;category&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; . &lt;var&gt;category&lt;/var&gt; is a symbol describing what is being completed; currently, the &lt;code&gt;buffer&lt;/code&gt; , &lt;code&gt;file&lt;/code&gt; , and &lt;code&gt;unicode-name&lt;/code&gt; categories are defined, but others can be defined via specialized completion functions (see &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;). &lt;var&gt;alist&lt;/var&gt; is an association list describing how completion should behave for the corresponding category. The following alist keys are supported:</target>
        </trans-unit>
        <trans-unit id="201fe48697604b97fbb6e28322917a0c5c6923fc" translate="yes" xml:space="preserve">
          <source>This variable specifies special text property handling conditions for yanked text. It takes effect after the text has been inserted (either normally, or via the &lt;code&gt;yank-handler&lt;/code&gt; property), and prior to &lt;code&gt;yank-excluded-properties&lt;/code&gt; taking effect.</source>
          <target state="translated">This variable specifies special text property handling conditions for yanked text. It takes effect after the text has been inserted (either normally, or via the &lt;code&gt;yank-handler&lt;/code&gt; property), and prior to &lt;code&gt;yank-excluded-properties&lt;/code&gt; taking effect.</target>
        </trans-unit>
        <trans-unit id="9441cfaaf5b9a202d9dfacdc63307e6a8d043ca7" translate="yes" xml:space="preserve">
          <source>This variable specifies the application name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is &lt;code&gt;&quot;Emacs&quot;&lt;/code&gt;. You can examine X resources for other application names by binding this variable to some other string, around a call to &lt;code&gt;x-get-resource&lt;/code&gt;.</source>
          <target state="translated">This variable specifies the application name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is &lt;code&gt;&quot;Emacs&quot;&lt;/code&gt; . You can examine X resources for other application names by binding this variable to some other string, around a call to &lt;code&gt;x-get-resource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc683e48d553af20f144d383bf880d2a28d6ba52" translate="yes" xml:space="preserve">
          <source>This variable specifies the base left margin column. In Fundamental mode,</source>
          <target state="translated">This variable specifies the base left margin column. In Fundamental mode,</target>
        </trans-unit>
        <trans-unit id="1c8864e7cce633e7e1b197bed02481239c82db1f" translate="yes" xml:space="preserve">
          <source>This variable specifies the character to be used on GUI frames as an indication that the column is sorted in the ascending order.</source>
          <target state="translated">This variable specifies the character to be used on GUI frames as an indication that the column is sorted in the ascending order.</target>
        </trans-unit>
        <trans-unit id="fa51bf5fffabf0f819d44b04889de7f6858728a3" translate="yes" xml:space="preserve">
          <source>This variable specifies the character to use to ask to see the next line of a menu. Its initial value is 32, the code for</source>
          <target state="translated">This variable specifies the character to use to ask to see the next line of a menu. Its initial value is 32, the code for</target>
        </trans-unit>
        <trans-unit id="be2aa08dfc092a1c6bf9ab20d5cbfc2f275f4ea5" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system for saving the buffer (by overriding &lt;code&gt;buffer-file-coding-system&lt;/code&gt;). Note that it is not used for &lt;code&gt;write-region&lt;/code&gt;.</source>
          <target state="translated">This variable specifies the coding system for saving the buffer (by overriding &lt;code&gt;buffer-file-coding-system&lt;/code&gt; ). Note that it is not used for &lt;code&gt;write-region&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ca4ad8129f5074b342b9b1d7e2613ffa381d9f1" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system to use for decoding system error messages and&amp;mdash;on X Window system only&amp;mdash;keyboard input, for sending batch output to the standard output and error streams, for encoding the format argument to &lt;code&gt;format-time-string&lt;/code&gt;, and for decoding the return value of &lt;code&gt;format-time-string&lt;/code&gt;.</source>
          <target state="translated">This variable specifies the coding system to use for decoding system error messages and&amp;mdash;on X Window system only&amp;mdash;keyboard input, for sending batch output to the standard output and error streams, for encoding the format argument to &lt;code&gt;format-time-string&lt;/code&gt; , and for decoding the return value of &lt;code&gt;format-time-string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed9b5319052f4785f314a8827aaf6892ed10d740" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system to use when reading and writing selections or the clipboard. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;. The default is &lt;code&gt;compound-text-with-extensions&lt;/code&gt;, which converts to the text representation that X11 normally uses.</source>
          <target state="translated">This variable specifies the coding system to use when reading and writing selections or the clipboard. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;. The default is &lt;code&gt;compound-text-with-extensions&lt;/code&gt; , which converts to the text representation that X11 normally uses.</target>
        </trans-unit>
        <trans-unit id="378b9a5d350f9a9ad8ee132e85190d8db4f5a38f" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding systems to use for subprocess (and network stream) input and output, when nothing else specifies what to do.</source>
          <target state="translated">This variable specifies the coding systems to use for subprocess (and network stream) input and output, when nothing else specifies what to do.</target>
        </trans-unit>
        <trans-unit id="d20f5fdfae6e9e29472d33941477bfbb49f9c979" translate="yes" xml:space="preserve">
          <source>This variable specifies the current buffer&amp;rsquo;s text representation. If it is non-&lt;code&gt;nil&lt;/code&gt;, the buffer contains multibyte text; otherwise, it contains unibyte encoded text or binary non-text data.</source>
          <target state="translated">This variable specifies the current buffer&amp;rsquo;s text representation. If it is non- &lt;code&gt;nil&lt;/code&gt; , the buffer contains multibyte text; otherwise, it contains unibyte encoded text or binary non-text data.</target>
        </trans-unit>
        <trans-unit id="5d3980a91c0b6581e0fe9f29071be798902ea992" translate="yes" xml:space="preserve">
          <source>This variable specifies the default radix for &lt;code&gt;sort-numeric-fields&lt;/code&gt; to parse numbers.</source>
          <target state="translated">This variable specifies the default radix for &lt;code&gt;sort-numeric-fields&lt;/code&gt; to parse numbers.</target>
        </trans-unit>
        <trans-unit id="bfb2f574c8c4c28f9c49e5ab317eb6fdf3230549" translate="yes" xml:space="preserve">
          <source>This variable specifies the directory name for creating certain temporary files, which are likely to be small.</source>
          <target state="translated">This variable specifies the directory name for creating certain temporary files, which are likely to be small.</target>
        </trans-unit>
        <trans-unit id="a987d6d65258d6d9671e6bac8d806a9e1156dde3" translate="yes" xml:space="preserve">
          <source>This variable specifies the directory name for creating temporary files. Its value should be a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), but it is good for Lisp programs to cope if the value is a directory&amp;rsquo;s file name instead. Using the value as the second argument to &lt;code&gt;expand-file-name&lt;/code&gt; is a good way to achieve that.</source>
          <target state="translated">This variable specifies the directory name for creating temporary files. Its value should be a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), but it is good for Lisp programs to cope if the value is a directory&amp;rsquo;s file name instead. Using the value as the second argument to &lt;code&gt;expand-file-name&lt;/code&gt; is a good way to achieve that.</target>
        </trans-unit>
        <trans-unit id="1611a6b6c3693c0e75493a5f0497cd5f97a908bb" translate="yes" xml:space="preserve">
          <source>This variable specifies the format for displaying the warning type in the warning message. The result of formatting the type this way gets included in the message under the control of the string in the entry in &lt;code&gt;warning-levels&lt;/code&gt;. The default value is &lt;code&gt;&quot; (%s)&quot;&lt;/code&gt;. If you bind it to &lt;code&gt;&quot;&quot;&lt;/code&gt; then the warning type won&amp;rsquo;t appear at all.</source>
          <target state="translated">This variable specifies the format for displaying the warning type in the warning message. The result of formatting the type this way gets included in the message under the control of the string in the entry in &lt;code&gt;warning-levels&lt;/code&gt; . The default value is &lt;code&gt;&quot; (%s)&quot;&lt;/code&gt; . If you bind it to &lt;code&gt;&quot;&quot;&lt;/code&gt; then the warning type won&amp;rsquo;t appear at all.</target>
        </trans-unit>
        <trans-unit id="547c7ec8698eaa3947afe33c14120014564c9731" translate="yes" xml:space="preserve">
          <source>This variable specifies the format to use for auto-saving. Its value is a list of format names, just like the value of &lt;code&gt;buffer-file-format&lt;/code&gt;; however, it is used instead of &lt;code&gt;buffer-file-format&lt;/code&gt; for writing auto-save files. If the value is &lt;code&gt;t&lt;/code&gt;, the default, auto-saving uses the same format as a regular save in the same buffer. This variable is always buffer-local in all buffers.</source>
          <target state="translated">This variable specifies the format to use for auto-saving. Its value is a list of format names, just like the value of &lt;code&gt;buffer-file-format&lt;/code&gt; ; however, it is used instead of &lt;code&gt;buffer-file-format&lt;/code&gt; for writing auto-save files. If the value is &lt;code&gt;t&lt;/code&gt; , the default, auto-saving uses the same format as a regular save in the same buffer. This variable is always buffer-local in all buffers.</target>
        </trans-unit>
        <trans-unit id="b4dc5b5723ce3a0a28294a22f224b01267f52812" translate="yes" xml:space="preserve">
          <source>This variable specifies the frame to use for the minibuffer window, by default. It does not affect existing frames. It is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">This variable specifies the frame to use for the minibuffer window, by default. It does not affect existing frames. It is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1207c49d1658e5cddb3ac60c96b0abae0f872d43" translate="yes" xml:space="preserve">
          <source>This variable specifies the function to use for &lt;code&gt;auto-fill-function&lt;/code&gt;, if and when Auto Fill is turned on. Major modes can set buffer-local values for this variable to alter how Auto Fill works.</source>
          <target state="translated">This variable specifies the function to use for &lt;code&gt;auto-fill-function&lt;/code&gt; , if and when Auto Fill is turned on. Major modes can set buffer-local values for this variable to alter how Auto Fill works.</target>
        </trans-unit>
        <trans-unit id="90cff5f29e4dc76d1ef32bcfb9a2d7a7e447091d" translate="yes" xml:space="preserve">
          <source>This variable specifies the function to use for creating a buffer index. The function should take no arguments, and return an index alist for the current buffer. It is called within &lt;code&gt;save-excursion&lt;/code&gt;, so where it leaves point makes no difference.</source>
          <target state="translated">This variable specifies the function to use for creating a buffer index. The function should take no arguments, and return an index alist for the current buffer. It is called within &lt;code&gt;save-excursion&lt;/code&gt; , so where it leaves point makes no difference.</target>
        </trans-unit>
        <trans-unit id="bf7f6ea21193d6889f8633999c0158dad3dc1690" translate="yes" xml:space="preserve">
          <source>This variable specifies the height of the border drawn below the tool bar area. An integer specifies height as a number of pixels. If the value is one of &lt;code&gt;internal-border-width&lt;/code&gt; (the default) or &lt;code&gt;border-width&lt;/code&gt;, the tool bar border height corresponds to the corresponding frame parameter.</source>
          <target state="translated">This variable specifies the height of the border drawn below the tool bar area. An integer specifies height as a number of pixels. If the value is one of &lt;code&gt;internal-border-width&lt;/code&gt; (the default) or &lt;code&gt;border-width&lt;/code&gt; , the tool bar border height corresponds to the corresponding frame parameter.</target>
        </trans-unit>
        <trans-unit id="47037cd622dfd389fb7e9867995dde974ec8a5ea" translate="yes" xml:space="preserve">
          <source>This variable specifies the height of the buffer&amp;rsquo;s horizontal scroll bar, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</source>
          <target state="translated">This variable specifies the height of the buffer&amp;rsquo;s horizontal scroll bar, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</target>
        </trans-unit>
        <trans-unit id="c3f89f4773cf5ef9dea1171ba5c6d7fa4f6ea06a" translate="yes" xml:space="preserve">
          <source>This variable specifies the instance name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is the name Emacs was invoked with, or the value specified with the &amp;lsquo;</source>
          <target state="translated">This variable specifies the instance name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is the name Emacs was invoked with, or the value specified with the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="364a24b2a4de2644ca246fb33bd538fb74192345" translate="yes" xml:space="preserve">
          <source>This variable specifies the list of frame parameters that a newly created frame inherits from the currently selected frame. For each parameter (a symbol) that is an element in this list and has not been assigned earlier when processing &lt;code&gt;make-frame&lt;/code&gt;, the function sets the value of that parameter in the created frame to its value in the selected frame.</source>
          <target state="translated">This variable specifies the list of frame parameters that a newly created frame inherits from the currently selected frame. For each parameter (a symbol) that is an element in this list and has not been assigned earlier when processing &lt;code&gt;make-frame&lt;/code&gt; , the function sets the value of that parameter in the created frame to its value in the selected frame.</target>
        </trans-unit>
        <trans-unit id="2d35dbd1f1cbbc9d29c269281b758b180f96fa72" translate="yes" xml:space="preserve">
          <source>This variable specifies the locale to use for formatting time values. Changing the locale can cause messages to appear according to the conventions of a different language. If the variable is &lt;code&gt;nil&lt;/code&gt;, the locale is specified by environment variables in the usual POSIX fashion.</source>
          <target state="translated">This variable specifies the locale to use for formatting time values. Changing the locale can cause messages to appear according to the conventions of a different language. If the variable is &lt;code&gt;nil&lt;/code&gt; , the locale is specified by environment variables in the usual POSIX fashion.</target>
        </trans-unit>
        <trans-unit id="ce1d2d8005b7ca34344c47676b32308fd49696c7" translate="yes" xml:space="preserve">
          <source>This variable specifies the locale to use for generating system error messages. Changing the locale can cause messages to come out in a different language or in a different orthography. If the variable is &lt;code&gt;nil&lt;/code&gt;, the locale is specified by environment variables in the usual POSIX fashion.</source>
          <target state="translated">This variable specifies the locale to use for generating system error messages. Changing the locale can cause messages to come out in a different language or in a different orthography. If the variable is &lt;code&gt;nil&lt;/code&gt; , the locale is specified by environment variables in the usual POSIX fashion.</target>
        </trans-unit>
        <trans-unit id="b7fba5cc3b98b6d29065924f8a9d4075b8157911" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of the horizontal scroll bar. The possible values are &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</source>
          <target state="translated">This variable specifies the location of the horizontal scroll bar. The possible values are &lt;code&gt;bottom&lt;/code&gt; , &lt;code&gt;t&lt;/code&gt; , which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</target>
        </trans-unit>
        <trans-unit id="ba2de9ee13d4031729d5a9ee43dc1e6311f3a892" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of the vertical scroll bar. The possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</source>
          <target state="translated">This variable specifies the location of the vertical scroll bar. The possible values are &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;t&lt;/code&gt; , which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</target>
        </trans-unit>
        <trans-unit id="69133e246175bfd5d0a22d3fe1be1c90479173b0" translate="yes" xml:space="preserve">
          <source>This variable specifies the mapping from logical cursor type to the actual fringe bitmaps displayed in the right fringe. The value is an alist where each element has the form &lt;code&gt;(&lt;var&gt;cursor-type&lt;/var&gt;
. &lt;var&gt;bitmap&lt;/var&gt;)&lt;/code&gt;, which means to use the fringe bitmap &lt;var&gt;bitmap&lt;/var&gt; to display cursors of type &lt;var&gt;cursor-type&lt;/var&gt;.</source>
          <target state="translated">This variable specifies the mapping from logical cursor type to the actual fringe bitmaps displayed in the right fringe. The value is an alist where each element has the form &lt;code&gt;(&lt;var&gt;cursor-type&lt;/var&gt; . &lt;var&gt;bitmap&lt;/var&gt;)&lt;/code&gt; , which means to use the fringe bitmap &lt;var&gt;bitmap&lt;/var&gt; to display cursors of type &lt;var&gt;cursor-type&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6c7d7911f4543d366f94621589ef0f22a2e59600" translate="yes" xml:space="preserve">
          <source>This variable specifies the marker insertion type (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;) of &lt;code&gt;window-point&lt;/code&gt;. The default is &lt;code&gt;nil&lt;/code&gt;, so &lt;code&gt;window-point&lt;/code&gt; will stay behind text inserted there.</source>
          <target state="translated">This variable specifies the marker insertion type (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;) of &lt;code&gt;window-point&lt;/code&gt; . The default is &lt;code&gt;nil&lt;/code&gt; , so &lt;code&gt;window-point&lt;/code&gt; will stay behind text inserted there.</target>
        </trans-unit>
        <trans-unit id="d547fc7b3e5daf8682664f7559fc4888275252b9" translate="yes" xml:space="preserve">
          <source>This variable specifies the maximum distance to scan for a matching parenthesis before giving up.</source>
          <target state="translated">This variable specifies the maximum distance to scan for a matching parenthesis before giving up.</target>
        </trans-unit>
        <trans-unit id="4331531e42e3cfd8b105fc413fe044b36cda9ed5" translate="yes" xml:space="preserve">
          <source>This variable specifies the minimum distance between the baseline and the underline, in pixels, when displaying underlined text.</source>
          <target state="translated">This variable specifies the minimum distance between the baseline and the underline, in pixels, when displaying underlined text.</target>
        </trans-unit>
        <trans-unit id="4ff2fab04b0a8a80990c4c2dc50157d5d0a5b14a" translate="yes" xml:space="preserve">
          <source>This variable specifies the mouse pointer style for void text areas. These include the areas after the end of a line or below the last line in the buffer. The default is to use the &lt;code&gt;arrow&lt;/code&gt; (non-text) pointer style.</source>
          <target state="translated">This variable specifies the mouse pointer style for void text areas. These include the areas after the end of a line or below the last line in the buffer. The default is to use the &lt;code&gt;arrow&lt;/code&gt; (non-text) pointer style.</target>
        </trans-unit>
        <trans-unit id="647b68f79271fb9a2bb273613105f8130038a3a3" translate="yes" xml:space="preserve">
          <source>This variable specifies the number of seconds an image can remain in the cache without being displayed. When an image is not displayed for this length of time, Emacs removes it from the image cache.</source>
          <target state="translated">This variable specifies the number of seconds an image can remain in the cache without being displayed. When an image is not displayed for this length of time, Emacs removes it from the image cache.</target>
        </trans-unit>
        <trans-unit id="3717e00be82f4280534f560bb48fdc135830758d" translate="yes" xml:space="preserve">
          <source>This variable specifies the number of seconds to keep indicating the matching parenthesis. A fraction of a second often gives good results, but the default is 1, which works on all systems.</source>
          <target state="translated">This variable specifies the number of seconds to keep indicating the matching parenthesis. A fraction of a second often gives good results, but the default is 1, which works on all systems.</target>
        </trans-unit>
        <trans-unit id="39d953edf710709c0a768c11e2dad4fd17e0bedd" translate="yes" xml:space="preserve">
          <source>This variable specifies the pointer shape to use ordinarily in the Emacs frame, for the &lt;code&gt;text&lt;/code&gt; pointer style.</source>
          <target state="translated">This variable specifies the pointer shape to use ordinarily in the Emacs frame, for the &lt;code&gt;text&lt;/code&gt; pointer style.</target>
        </trans-unit>
        <trans-unit id="3acb782e30c855540af87af7dfd6791f80e3c377" translate="yes" xml:space="preserve">
          <source>This variable specifies the pointer shape to use when the mouse is over mouse-sensitive text.</source>
          <target state="translated">This variable specifies the pointer shape to use when the mouse is over mouse-sensitive text.</target>
        </trans-unit>
        <trans-unit id="78daca2ffa4db7218ae8fa29709b23bb9b58f78b" translate="yes" xml:space="preserve">
          <source>This variable specifies the shadow width for tool bar items. The value is an integer, a number of pixels. The default is 1.</source>
          <target state="translated">This variable specifies the shadow width for tool bar items. The value is an integer, a number of pixels. The default is 1.</target>
        </trans-unit>
        <trans-unit id="02be399ab6eb5a97c78ec2b2537fe2b1697e3d85" translate="yes" xml:space="preserve">
          <source>This variable specifies the site-customization file to load before the user&amp;rsquo;s init file. Its normal value is &lt;code&gt;&quot;site-start&quot;&lt;/code&gt;. The only way you can change it with real effect is to do so before dumping Emacs.</source>
          <target state="translated">This variable specifies the site-customization file to load before the user&amp;rsquo;s init file. Its normal value is &lt;code&gt;&quot;site-start&quot;&lt;/code&gt; . The only way you can change it with real effect is to do so before dumping Emacs.</target>
        </trans-unit>
        <trans-unit id="37d4e059ccdb3e6de1f300dc91e0dd83ce69c04a" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the buffer&amp;rsquo;s vertical scroll bars, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</source>
          <target state="translated">This variable specifies the width of the buffer&amp;rsquo;s vertical scroll bars, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</target>
        </trans-unit>
        <trans-unit id="c2154eb8d82062df0ff1bc0af13a3b298023129e" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the left margin, in character cell (a.k.a. &amp;ldquo;column&amp;rdquo;) units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no left marginal area.</source>
          <target state="translated">This variable specifies the width of the left margin, in character cell (a.k.a. &amp;ldquo;column&amp;rdquo;) units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no left marginal area.</target>
        </trans-unit>
        <trans-unit id="6dbf7925fed5e555d32215115c54c9040fc53829" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the right margin, in character cell units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no right marginal area.</source>
          <target state="translated">This variable specifies the width of the right margin, in character cell units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no right marginal area.</target>
        </trans-unit>
        <trans-unit id="a9f9625a4db9d9be5024c43270ebd62ab0007def" translate="yes" xml:space="preserve">
          <source>This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window below. If it is an integer, that means to split only if the original window has at least that many lines. If it is &lt;code&gt;nil&lt;/code&gt;, that means not to split this way.</source>
          <target state="translated">This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window below. If it is an integer, that means to split only if the original window has at least that many lines. If it is &lt;code&gt;nil&lt;/code&gt; , that means not to split this way.</target>
        </trans-unit>
        <trans-unit id="b41a83fecf2ea8718c1d075ec448219f4d5c2e06" translate="yes" xml:space="preserve">
          <source>This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window to the right. If the value is an integer, that means to split only if the original window has at least that many columns. If the value is &lt;code&gt;nil&lt;/code&gt;, that means not to split this way.</source>
          <target state="translated">This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window to the right. If the value is an integer, that means to split only if the original window has at least that many columns. If the value is &lt;code&gt;nil&lt;/code&gt; , that means not to split this way.</target>
        </trans-unit>
        <trans-unit id="d9bb07b24457bfa0b74b8767f09ff0c6316a8090" translate="yes" xml:space="preserve">
          <source>This variable specifies which kinds of &lt;code&gt;invisible&lt;/code&gt; properties actually make a character invisible. Setting this variable makes it buffer-local.</source>
          <target state="translated">This variable specifies which kinds of &lt;code&gt;invisible&lt;/code&gt; properties actually make a character invisible. Setting this variable makes it buffer-local.</target>
        </trans-unit>
        <trans-unit id="17c813cb9033d42c0b8cf5d747a7b6085a942dbc" translate="yes" xml:space="preserve">
          <source>This variable states the format of the visited file. More precisely, this is a list of the file format names that were decoded in the course of visiting the current buffer&amp;rsquo;s file. It is always buffer-local in all buffers.</source>
          <target state="translated">This variable states the format of the visited file. More precisely, this is a list of the file format names that were decoded in the course of visiting the current buffer&amp;rsquo;s file. It is always buffer-local in all buffers.</target>
        </trans-unit>
        <trans-unit id="da7cafbff2b38383440d584757fd82a9de8eba44" translate="yes" xml:space="preserve">
          <source>This variable stores a list of available completion styles. Each element in the list has the form</source>
          <target state="translated">This variable stores a list of available completion styles. Each element in the list has the form</target>
        </trans-unit>
        <trans-unit id="17f83d8de294ef2cecc9630aaa2beb375107806f" translate="yes" xml:space="preserve">
          <source>This variable stores the most recently executed command that was not part of an input event. This is the command &lt;code&gt;repeat&lt;/code&gt; will try to repeat, See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repeating.html#Repeating&quot;&gt;Repeating&lt;/a&gt; in</source>
          <target state="translated">This variable stores the most recently executed command that was not part of an input event. This is the command &lt;code&gt;repeat&lt;/code&gt; will try to repeat, See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repeating.html#Repeating&quot;&gt;Repeating&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="45cc6d1dee91474ccbc033a58239e9f841087bb8" translate="yes" xml:space="preserve">
          <source>This variable stores the most recently executed command that was not part of an input event. This is the command &lt;code&gt;repeat&lt;/code&gt; will try to repeat, See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Repeating.html#Repeating&quot;&gt;Repeating&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a115d98ecd06b867ba0d6d5fb383d4bc9e081148" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value indicates which element of the kill ring is at the front of the ring for yanking. More precisely, the value is a tail of the value of &lt;code&gt;kill-ring&lt;/code&gt;, and its &lt;small&gt;CAR&lt;/small&gt; is the kill string that</source>
          <target state="translated">This variable&amp;rsquo;s value indicates which element of the kill ring is at the front of the ring for yanking. More precisely, the value is a tail of the value of &lt;code&gt;kill-ring&lt;/code&gt; , and its &lt;small&gt;CAR&lt;/small&gt; is the kill string that</target>
        </trans-unit>
        <trans-unit id="28b449eebc7d7edfda6a70d0dbffa98c0835bd0a" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a function to be called on certain occasions to decide whether a file should have backup files. The function receives one argument, an absolute file name to consider. If the function returns &lt;code&gt;nil&lt;/code&gt;, backups are disabled for that file. Otherwise, the other variables in this section say whether and how to make backups.</source>
          <target state="translated">This variable&amp;rsquo;s value is a function to be called on certain occasions to decide whether a file should have backup files. The function receives one argument, an absolute file name to consider. If the function returns &lt;code&gt;nil&lt;/code&gt; , backups are disabled for that file. Otherwise, the other variables in this section say whether and how to make backups.</target>
        </trans-unit>
        <trans-unit id="dc8b8ca7c391cc44d3a365f8f9dc794435dbf006" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a function to use for making backup file names. The function &lt;code&gt;make-backup-file-name&lt;/code&gt; calls it. See &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Naming Backup Files&lt;/a&gt;.</source>
          <target state="translated">This variable&amp;rsquo;s value is a function to use for making backup file names. The function &lt;code&gt;make-backup-file-name&lt;/code&gt; calls it. See &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Naming Backup Files&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="893a2fc55e2e2153c2af5f0618b49c99f500ff40" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of functions for handling an unrecognized command-line argument. Each time the next argument to be processed has no special meaning, the functions in this list are called, in order of appearance, until one of them returns a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">This variable&amp;rsquo;s value is a list of functions for handling an unrecognized command-line argument. Each time the next argument to be processed has no special meaning, the functions in this list are called, in order of appearance, until one of them returns a non- &lt;code&gt;nil&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="bc2e266e96128e3a14fb9923a805d9d2b37dcd1d" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of locations in which to search for image files. If an element is a string or a variable symbol whose value is a string, the string is taken to be the name of a directory to search. If an element is a variable symbol whose value is a list, that is taken to be a list of directories to search.</source>
          <target state="translated">This variable&amp;rsquo;s value is a list of locations in which to search for image files. If an element is a string or a variable symbol whose value is a string, the string is taken to be the name of a directory to search. If an element is a variable symbol whose value is a list, that is taken to be a list of directories to search.</target>
        </trans-unit>
        <trans-unit id="d741a57be79a7cf4500ec42da9b736aabe51fab0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of recent complex commands, each represented as a form to evaluate. It continues to accumulate all complex commands for the duration of the editing session, but when it reaches the maximum size (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), the oldest elements are deleted as new ones are added.</source>
          <target state="translated">This variable&amp;rsquo;s value is a list of recent complex commands, each represented as a form to evaluate. It continues to accumulate all complex commands for the duration of the editing session, but when it reaches the maximum size (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), the oldest elements are deleted as new ones are added.</target>
        </trans-unit>
        <trans-unit id="5058e0ab7f62d94f45af0797e7839b3845294923" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of variables, each of which specifies the position of an overlay arrow. The variable &lt;code&gt;overlay-arrow-position&lt;/code&gt; has its normal meaning because it is on this list.</source>
          <target state="translated">This variable&amp;rsquo;s value is a list of variables, each of which specifies the position of an overlay arrow. The variable &lt;code&gt;overlay-arrow-position&lt;/code&gt; has its normal meaning because it is on this list.</target>
        </trans-unit>
        <trans-unit id="44a929b2e08b8f6aa70b439f4cd1fa6273927793" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of filename patterns and backup directories. Each element looks like</source>
          <target state="translated">This variable&amp;rsquo;s value is an alist of filename patterns and backup directories. Each element looks like</target>
        </trans-unit>
        <trans-unit id="7aacd20b1436c5de4bc8e223a38bdc9776f8de89" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of parameter values used when creating an initial minibuffer-only frame (i.e., the minibuffer-only frame that Emacs creates if &lt;code&gt;initial-frame-alist&lt;/code&gt; specifies a frame with no minibuffer).</source>
          <target state="translated">This variable&amp;rsquo;s value is an alist of parameter values used when creating an initial minibuffer-only frame (i.e., the minibuffer-only frame that Emacs creates if &lt;code&gt;initial-frame-alist&lt;/code&gt; specifies a frame with no minibuffer).</target>
        </trans-unit>
        <trans-unit id="b2c83351d05a84fa1f3bb0c43c7d6af151d1760a" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of parameter values used when creating the initial frame. You can set this variable to specify the appearance of the initial frame without altering subsequent frames. Each element has the form:</source>
          <target state="translated">This variable&amp;rsquo;s value is an alist of parameter values used when creating the initial frame. You can set this variable to specify the appearance of the initial frame without altering subsequent frames. Each element has the form:</target>
        </trans-unit>
        <trans-unit id="cab3f21a743ebbf42fa83ec406c102cb55344245" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist with elements of the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; .  &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;regexp&lt;/var&gt; is a regular expression and &lt;var&gt;function&lt;/var&gt; is a function or &lt;code&gt;nil&lt;/code&gt;. After visiting a file, &lt;code&gt;set-auto-mode&lt;/code&gt; calls &lt;var&gt;function&lt;/var&gt; if the text at the beginning of the buffer matches &lt;var&gt;regexp&lt;/var&gt; and &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; if &lt;var&gt;function&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;auto-mode-alist&lt;/code&gt; gets to decide the mode.</source>
          <target state="translated">This variable&amp;rsquo;s value is an alist with elements of the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;regexp&lt;/var&gt; is a regular expression and &lt;var&gt;function&lt;/var&gt; is a function or &lt;code&gt;nil&lt;/code&gt; . After visiting a file, &lt;code&gt;set-auto-mode&lt;/code&gt; calls &lt;var&gt;function&lt;/var&gt; if the text at the beginning of the buffer matches &lt;var&gt;regexp&lt;/var&gt; and &lt;var&gt;function&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; ; if &lt;var&gt;function&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;auto-mode-alist&lt;/code&gt; gets to decide the mode.</target>
        </trans-unit>
        <trans-unit id="3f326fd22cbf929b5ae168b7956962ea68f9c7f7" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the function to be used by &lt;code&gt;indent-for-tab-command&lt;/code&gt;, and various other indentation commands, to indent the current line. It is usually assigned by the major mode; for instance, Lisp mode sets it to &lt;code&gt;lisp-indent-line&lt;/code&gt;, C mode sets it to &lt;code&gt;c-indent-line&lt;/code&gt;, and so on. The default value is &lt;code&gt;indent-relative&lt;/code&gt;. See &lt;a href=&quot;auto_002dindentation#Auto_002dIndentation&quot;&gt;Auto-Indentation&lt;/a&gt;.</source>
          <target state="translated">This variable&amp;rsquo;s value is the function to be used by &lt;code&gt;indent-for-tab-command&lt;/code&gt; , and various other indentation commands, to indent the current line. It is usually assigned by the major mode; for instance, Lisp mode sets it to &lt;code&gt;lisp-indent-line&lt;/code&gt; , C mode sets it to &lt;code&gt;c-indent-line&lt;/code&gt; , and so on. The default value is &lt;code&gt;indent-relative&lt;/code&gt; . See &lt;a href=&quot;auto_002dindentation#Auto_002dIndentation&quot;&gt;Auto-Indentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5b1717e39c9de4078e75fab7be060140bc30fa8d" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the number of key sequences processed so far in this Emacs session. This includes key sequences read from the terminal and key sequences read from keyboard macros being executed.</source>
          <target state="translated">This variable&amp;rsquo;s value is the number of key sequences processed so far in this Emacs session. This includes key sequences read from the terminal and key sequences read from keyboard macros being executed.</target>
        </trans-unit>
        <trans-unit id="68ad74c4f3dafbd6aefc18a3730afb39bc2299f0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the output speed of the terminal, as far as Emacs knows. Setting this variable does not change the speed of actual data transmission, but the value is used for calculations such as padding.</source>
          <target state="translated">This variable&amp;rsquo;s value is the output speed of the terminal, as far as Emacs knows. Setting this variable does not change the speed of actual data transmission, but the value is used for calculations such as padding.</target>
        </trans-unit>
        <trans-unit id="25a355f8c549766b983dc094b814383e58efa960" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the predicate that &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt;. The variable is also used by the other minibuffer completion functions.</source>
          <target state="translated">This variable&amp;rsquo;s value is the predicate that &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt; . The variable is also used by the other minibuffer completion functions.</target>
        </trans-unit>
        <trans-unit id="0366e444cde45f86f09a3bbed79660866c2f0b03" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the program to run to generate a directory listing for the function &lt;code&gt;insert-directory&lt;/code&gt;. It is ignored on systems which generate the listing with Lisp code.</source>
          <target state="translated">This variable&amp;rsquo;s value is the program to run to generate a directory listing for the function &lt;code&gt;insert-directory&lt;/code&gt; . It is ignored on systems which generate the listing with Lisp code.</target>
        </trans-unit>
        <trans-unit id="05ac9fc7fe9e7e22ea7861eab678db85ccb75987" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value should be an alist with one element for each system-specific keysym. Each element has the form &lt;code&gt;(&lt;var&gt;code&lt;/var&gt;
. &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;code&lt;/var&gt; is the numeric keysym code (not including the vendor-specific bit, -2**28), and &lt;var&gt;symbol&lt;/var&gt; is the name for the function key.</source>
          <target state="translated">This variable&amp;rsquo;s value should be an alist with one element for each system-specific keysym. Each element has the form &lt;code&gt;(&lt;var&gt;code&lt;/var&gt; . &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;code&lt;/var&gt; is the numeric keysym code (not including the vendor-specific bit, -2**28), and &lt;var&gt;symbol&lt;/var&gt; is the name for the function key.</target>
        </trans-unit>
        <trans-unit id="00d207a37cf68558f0ae1947fa541f4ac10e6b8f" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value specifies the maximum number of times to repeat calling a timer function in a row, when many previously scheduled calls were unavoidably delayed.</source>
          <target state="translated">This variable&amp;rsquo;s value specifies the maximum number of times to repeat calling a timer function in a row, when many previously scheduled calls were unavoidably delayed.</target>
        </trans-unit>
        <trans-unit id="e2832fa12a34cf1d4e0a14fa96a7eb9dc98670d0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value specifies the style of justification to use for text that doesn&amp;rsquo;t specify a style with a text property. The possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. The default value is &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">This variable&amp;rsquo;s value specifies the style of justification to use for text that doesn&amp;rsquo;t specify a style with a text property. The possible values are &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;full&lt;/code&gt; , &lt;code&gt;center&lt;/code&gt; , or &lt;code&gt;none&lt;/code&gt; . The default value is &lt;code&gt;left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff2f4fbe63a94436db535b4b05b9f7b38cec3050" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; to save this buffer (if it&amp;rsquo;s modified) without asking the user. The variable automatically becomes buffer-local when set for any reason.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; to save this buffer (if it&amp;rsquo;s modified) without asking the user. The variable automatically becomes buffer-local when set for any reason.</target>
        </trans-unit>
        <trans-unit id="dac46863aa288d219a8e7c62c0f8c133144fd14a" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; to offer to save that buffer, just as it offers to save file-visiting buffers. If &lt;code&gt;save-some-buffers&lt;/code&gt; is called with the second optional argument set to &lt;code&gt;t&lt;/code&gt;, it will also offer to save the buffer. Lastly, if this variable is set to the symbol &lt;code&gt;always&lt;/code&gt;, both &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; will always offer to save. See &lt;a href=&quot;saving-buffers#Definition-of-save_002dsome_002dbuffers&quot;&gt;Definition of save-some-buffers&lt;/a&gt;. The variable &lt;code&gt;buffer-offer-save&lt;/code&gt; automatically becomes buffer-local when set for any reason. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; to offer to save that buffer, just as it offers to save file-visiting buffers. If &lt;code&gt;save-some-buffers&lt;/code&gt; is called with the second optional argument set to &lt;code&gt;t&lt;/code&gt; , it will also offer to save the buffer. Lastly, if this variable is set to the symbol &lt;code&gt;always&lt;/code&gt; , both &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; will always offer to save. See &lt;a href=&quot;saving-buffers#Definition-of-save_002dsome_002dbuffers&quot;&gt;Definition of save-some-buffers&lt;/a&gt;. The variable &lt;code&gt;buffer-offer-save&lt;/code&gt; automatically becomes buffer-local when set for any reason. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="71b0adc72c4f43c008ef56251f584004a240f38e" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, causes &lt;code&gt;display-buffer&lt;/code&gt; to even window sizes whenever it reuses an existing window, and that window is adjacent to the selected one.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , causes &lt;code&gt;display-buffer&lt;/code&gt; to even window sizes whenever it reuses an existing window, and that window is adjacent to the selected one.</target>
        </trans-unit>
        <trans-unit id="44260951edaebc7923ae2a34e5e6222d10e7b053" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, enables Transient Mark mode. In Transient Mark mode, every buffer-modifying primitive sets &lt;code&gt;deactivate-mark&lt;/code&gt;. As a consequence, most commands that modify the buffer also deactivate the mark.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , enables Transient Mark mode. In Transient Mark mode, every buffer-modifying primitive sets &lt;code&gt;deactivate-mark&lt;/code&gt; . As a consequence, most commands that modify the buffer also deactivate the mark.</target>
        </trans-unit>
        <trans-unit id="81de96b0a50b5ec8926b2434801de8b58f91d03c" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, inhibits the startup screen. In that case, Emacs typically displays the</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , inhibits the startup screen. In that case, Emacs typically displays the</target>
        </trans-unit>
        <trans-unit id="29394b9a6c26348ba3a0840f9e17074c7d8b78ed" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, is a list that specifies regular expressions for finding definitions for Imenu. Simple elements of &lt;code&gt;imenu-generic-expression&lt;/code&gt; look like this:</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , is a list that specifies regular expressions for finding definitions for Imenu. Simple elements of &lt;code&gt;imenu-generic-expression&lt;/code&gt; look like this:</target>
        </trans-unit>
        <trans-unit id="69febab3127d1c990867cf5a06a84f24c63faf38" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, means to fill lines automatically within comments only. More precisely, this means that if a comment syntax was defined for the current buffer, then self-inserting a character outside of a comment will not call &lt;code&gt;auto-fill-function&lt;/code&gt;.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , means to fill lines automatically within comments only. More precisely, this means that if a comment syntax was defined for the current buffer, then self-inserting a character outside of a comment will not call &lt;code&gt;auto-fill-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c9c36d3064cde17874cb26e2bc8d25c8bf942fb" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, should be a string, which is treated as documentation to be inserted into the</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , should be a string, which is treated as documentation to be inserted into the</target>
        </trans-unit>
        <trans-unit id="a93a98bbc3986c45dac57d05f848ebecbbba3d70" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, should store a function for applying &lt;code&gt;syntax-table&lt;/code&gt; properties to a specified stretch of text. It is intended to be used by major modes to install a function which applies &lt;code&gt;syntax-table&lt;/code&gt; properties in some mode-appropriate way.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , should store a function for applying &lt;code&gt;syntax-table&lt;/code&gt; properties to a specified stretch of text. It is intended to be used by major modes to install a function which applies &lt;code&gt;syntax-table&lt;/code&gt; properties in some mode-appropriate way.</target>
        </trans-unit>
        <trans-unit id="76b7cefce0231098ecd5bcd17d59eb7fdb7ac572" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function for reading buffer names. &lt;code&gt;read-buffer&lt;/code&gt; calls this function instead of doing its usual work, with the same arguments passed to &lt;code&gt;read-buffer&lt;/code&gt;.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , specifies a function for reading buffer names. &lt;code&gt;read-buffer&lt;/code&gt; calls this function instead of doing its usual work, with the same arguments passed to &lt;code&gt;read-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ec5a7d27c1eecead5422d97b4733c20bd9e3484" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function to use to handle errors that return control to the Emacs command loop. The function should take three arguments: &lt;var&gt;data&lt;/var&gt;, a list of the same form that &lt;code&gt;condition-case&lt;/code&gt; would bind to its variable; &lt;var&gt;context&lt;/var&gt;, a string describing the situation in which the error occurred, or (more often) &lt;code&gt;nil&lt;/code&gt;; and &lt;var&gt;caller&lt;/var&gt;, the Lisp function which called the primitive that signaled the error.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , specifies a function to use to handle errors that return control to the Emacs command loop. The function should take three arguments: &lt;var&gt;data&lt;/var&gt; , a list of the same form that &lt;code&gt;condition-case&lt;/code&gt; would bind to its variable; &lt;var&gt;context&lt;/var&gt; , a string describing the situation in which the error occurred, or (more often) &lt;code&gt;nil&lt;/code&gt; ; and &lt;var&gt;caller&lt;/var&gt; , the Lisp function which called the primitive that signaled the error.</target>
        </trans-unit>
        <trans-unit id="b9a0a58683d1cf19dd34cad61e9676296dd976ca" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the same behavior as &lt;code&gt;backup-by-copying-when-mismatch&lt;/code&gt;, but only for certain user-id and group-id values: namely, those less than or equal to a certain number. You set this variable to that number.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , specifies the same behavior as &lt;code&gt;backup-by-copying-when-mismatch&lt;/code&gt; , but only for certain user-id and group-id values: namely, those less than or equal to a certain number. You set this variable to that number.</target>
        </trans-unit>
        <trans-unit id="5f6a746698d95522f516d4e175ca6390e3cfa935" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the width of the left fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the left fringe width from the window&amp;rsquo;s frame.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , specifies the width of the left fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the left fringe width from the window&amp;rsquo;s frame.</target>
        </trans-unit>
        <trans-unit id="356cb002c64df66fecef3293a4c115bad25376cf" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the width of the right fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the right fringe width from the window&amp;rsquo;s frame.</source>
          <target state="translated">This variable, if non- &lt;code&gt;nil&lt;/code&gt; , specifies the width of the right fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the right fringe width from the window&amp;rsquo;s frame.</target>
        </trans-unit>
        <trans-unit id="e9c73e97a3e79bcc6d33d68e1025d6274af6d54d" translate="yes" xml:space="preserve">
          <source>This variable, local in every buffer, specifies how to display the header line, for windows displaying the buffer. The format of the value is the same as for &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). It is normally &lt;code&gt;nil&lt;/code&gt;, so that ordinary buffers have no header line.</source>
          <target state="translated">This variable, local in every buffer, specifies how to display the header line, for windows displaying the buffer. The format of the value is the same as for &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). It is normally &lt;code&gt;nil&lt;/code&gt; , so that ordinary buffers have no header line.</target>
        </trans-unit>
        <trans-unit id="7d93c24dd60cfdaa139c07413f57005f6064007b" translate="yes" xml:space="preserve">
          <source>This variable, when non-&lt;code&gt;nil&lt;/code&gt;, holds the indentation context for the sub-mode&amp;rsquo;s indentation engine provided by the superior major mode. The value should be a list of the form &lt;code&gt;(&lt;var&gt;first-column&lt;/var&gt; . &lt;var&gt;rest&lt;/var&gt;&lt;/code&gt;. The members of the list have the following meaning:</source>
          <target state="translated">This variable, when non- &lt;code&gt;nil&lt;/code&gt; , holds the indentation context for the sub-mode&amp;rsquo;s indentation engine provided by the superior major mode. The value should be a list of the form &lt;code&gt;(&lt;var&gt;first-column&lt;/var&gt; . &lt;var&gt;rest&lt;/var&gt;&lt;/code&gt; . The members of the list have the following meaning:</target>
        </trans-unit>
        <trans-unit id="b7189abae835d29da6383960806b6b5548521784" translate="yes" xml:space="preserve">
          <source>This way you can explicitly specify all aspects of the box. The value &lt;var&gt;width&lt;/var&gt; specifies the width of the lines to draw; it defaults to 1. A negative width -&lt;var&gt;n&lt;/var&gt; means to draw a line of width &lt;var&gt;n&lt;/var&gt; whose top and bottom parts occupy the space of the underlying text, thus avoiding any increase in the character height.</source>
          <target state="translated">This way you can explicitly specify all aspects of the box. The value &lt;var&gt;width&lt;/var&gt; specifies the width of the lines to draw; it defaults to 1. A negative width - &lt;var&gt;n&lt;/var&gt; means to draw a line of width &lt;var&gt;n&lt;/var&gt; whose top and bottom parts occupy the space of the underlying text, thus avoiding any increase in the character height.</target>
        </trans-unit>
        <trans-unit id="d9a477f071d07508b96e42ce0279e953c7a59081" translate="yes" xml:space="preserve">
          <source>This way, the special value &lt;code&gt;nil&lt;/code&gt; is not treated like other symbols, and symbols are not treated like other Lisp expressions.</source>
          <target state="translated">This way, the special value &lt;code&gt;nil&lt;/code&gt; is not treated like other symbols, and symbols are not treated like other Lisp expressions.</target>
        </trans-unit>
        <trans-unit id="2dfb87f5811617605a6219af108230f85b2f65e3" translate="yes" xml:space="preserve">
          <source>This will block until this thread acquires &lt;var&gt;mutex&lt;/var&gt;, or until this thread is signaled using &lt;code&gt;thread-signal&lt;/code&gt;. If &lt;var&gt;mutex&lt;/var&gt; is already owned by this thread, this simply returns.</source>
          <target state="translated">This will block until this thread acquires &lt;var&gt;mutex&lt;/var&gt; , or until this thread is signaled using &lt;code&gt;thread-signal&lt;/code&gt; . If &lt;var&gt;mutex&lt;/var&gt; is already owned by this thread, this simply returns.</target>
        </trans-unit>
        <trans-unit id="4e4f051a810187de0f991c0ad754ba4546c36eca" translate="yes" xml:space="preserve">
          <source>This will cause the process&amp;rsquo;s output to be passed to &lt;code&gt;my-tracing-function&lt;/code&gt; before being passed to the original process filter. &lt;code&gt;my-tracing-function&lt;/code&gt; receives the same arguments as the original function. When you&amp;rsquo;re done with it, you can revert to the untraced behavior with:</source>
          <target state="translated">This will cause the process&amp;rsquo;s output to be passed to &lt;code&gt;my-tracing-function&lt;/code&gt; before being passed to the original process filter. &lt;code&gt;my-tracing-function&lt;/code&gt; receives the same arguments as the original function. When you&amp;rsquo;re done with it, you can revert to the untraced behavior with:</target>
        </trans-unit>
        <trans-unit id="5b4dc9c49dcad06de6342a899c3f5d137405b88d" translate="yes" xml:space="preserve">
          <source>This will generate an IV (Initialization Vector) of the specified length using the GnuTLS &lt;code&gt;GNUTLS_RND_NONCE&lt;/code&gt; generator and pass it to the function. This ensures that the IV is unpredictable and unlikely to be reused in the same session. The actual value of the IV is returned by the function as described below.</source>
          <target state="translated">GnuTLS &lt;code&gt;GNUTLS_RND_NONCE&lt;/code&gt; 생성기를 사용하여 지정된 길이의 IV (초기화 벡터)를 생성하고이를 함수에 전달합니다. 이렇게하면 IV가 예측할 수없고 동일한 세션에서 재사용 될 가능성이 없습니다. IV의 실제 값은 아래 설명 된대로 함수에 의해 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a9a9c24a32da079d5ccc449519a4a85f6209bb0e" translate="yes" xml:space="preserve">
          <source>This will give a new frame full height after typing in it</source>
          <target state="translated">입력 후 새 프레임 전체 높이를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="900bf9b9596c5a6eb6a451eaa4e23722c6fd06e1" translate="yes" xml:space="preserve">
          <source>This will give you a list of all those URLs.</source>
          <target state="translated">이렇게하면 모든 URL 목록이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="160566e21dfbd4c02d91bb4dcfc5f49576d9dc4a" translate="yes" xml:space="preserve">
          <source>This will not only extract &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; but will additionally test that &lt;code&gt;my-list&lt;/code&gt; is a list containing exactly 3 elements and whose first element is the symbol &lt;code&gt;add&lt;/code&gt;. If any of those tests fail, &lt;code&gt;pcase&lt;/code&gt; will immediately return &lt;code&gt;nil&lt;/code&gt; without calling &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 를 추출 할뿐만 아니라 &lt;code&gt;my-list&lt;/code&gt; 가 정확히 3 개의 요소를 포함하는 목록이고 첫 번째 요소가 &lt;code&gt;add&lt;/code&gt; 기호인지 추가로 테스트합니다 . 이러한 테스트 중 하나라도 실패하면 &lt;code&gt;pcase&lt;/code&gt; 는 &lt;code&gt;message&lt;/code&gt; 를 호출 &lt;code&gt;nil&lt;/code&gt; 않고 즉시 nil 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f19ac812850c506ef6806f98037a06ed420056d9" translate="yes" xml:space="preserve">
          <source>This will pick out all the bits that have no face properties, which will result in the list &amp;lsquo;</source>
          <target state="translated">그러면 얼굴 속성이없는 모든 비트가 선택되어 '목록'이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="7a26b8094858b8581da56dc0cbee2d620a5e3979" translate="yes" xml:space="preserve">
          <source>This will pick out all the regions where &lt;code&gt;face&lt;/code&gt; is set to something, but this is split up into where the properties change, so the result here will be &amp;lsquo;</source>
          <target state="translated">이것은 &lt;code&gt;face&lt;/code&gt; 이 무언가로 설정된 모든 영역을 선택 하지만 이것은 속성이 변경되는 곳으로 분할되므로 여기의 결과는 '</target>
        </trans-unit>
        <trans-unit id="daad30c58fe7378790b30fb0f086e9dd290fafe0" translate="yes" xml:space="preserve">
          <source>This will pick out all the words that use the &lt;code&gt;bold&lt;/code&gt; face.</source>
          <target state="translated">이것은 &lt;code&gt;bold&lt;/code&gt; 얼굴 을 사용하는 모든 단어를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="f308a6f1f3e09b044ee5edae541ccb89d09e0ae1" translate="yes" xml:space="preserve">
          <source>This window&amp;rsquo;s combination limit, meaningful only for a parent window. If this is &lt;code&gt;t&lt;/code&gt;, then it is not allowed to delete this window and recombine its child windows with other siblings of this window.</source>
          <target state="translated">이 창의 조합 제한은 상위 창에 대해서만 의미가 있습니다. 이것이 &lt;code&gt;t&lt;/code&gt; 이면이 창을 삭제하고 자식 창을이 창의 다른 형제와 재결합 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9d971e58411e18d438570cc649a8eb36f0ec6c71" translate="yes" xml:space="preserve">
          <source>This works because &lt;code&gt;toggle-debug-on-error&lt;/code&gt; is defined as a command which toggles the variable &lt;code&gt;debug-on-error&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;toggle-debug-on-error&lt;/code&gt; 가 &lt;code&gt;debug-on-error&lt;/code&gt; 변수를 토글하는 명령으로 정의 되기 때문에 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="817693394b86befd10ceb05ff052a7149c1da178" translate="yes" xml:space="preserve">
          <source>This works because later Emacs versions always &lt;em&gt;add&lt;/em&gt; members to the environment, never &lt;em&gt;remove&lt;/em&gt; any members, so the size can only grow with new Emacs releases. Given the version of Emacs, the module can use only the parts of the module</source>
          <target state="translated">이것은 이후의 Emacs 버전이 항상 환경 &lt;em&gt;에&lt;/em&gt; 구성원을 &lt;em&gt;추가&lt;/em&gt; 하고 &lt;em&gt;제거&lt;/em&gt; 하지 않기 때문에 작동 &lt;em&gt;합니다.&lt;/em&gt; 하지 크기는 새로운 Emacs 릴리스에서만 증가 할 수 있습니다. Emacs 버전이 주어지면 모듈은 모듈의 일부만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44ff78eff6b3f3cbc3b63aa1a08744007c5eed93" translate="yes" xml:space="preserve">
          <source>This works just like &lt;code&gt;write-file-functions&lt;/code&gt;, but it is intended for hooks that pertain to the buffer&amp;rsquo;s contents, not to the particular visited file or its location, and can be used to create arbitrary save processes for buffers that aren&amp;rsquo;t visiting files at all. Such hooks are usually set up by major modes, as buffer-local bindings for this variable. This variable automatically becomes buffer-local whenever it is set; switching to a new major mode always resets this variable, but calling &lt;code&gt;set-visited-file-name&lt;/code&gt; does not.</source>
          <target state="translated">이것은 &lt;code&gt;write-file-functions&lt;/code&gt; 처럼 작동 하지만, 특정 방문 파일이나 그 위치가 아닌 버퍼의 내용과 관련된 후크를위한 것이며, 파일을 방문하지 않는 버퍼에 대한 임의의 저장 프로세스를 만드는 데 사용할 수 있습니다. 조금도. 이러한 후크는 일반적으로이 변수에 대한 버퍼 로컬 바인딩과 같은 주요 모드에 의해 설정됩니다. 이 변수는 설정 될 때마다 자동으로 버퍼 로컬이됩니다. 새 주 모드로 전환하면 항상이 변수가 재설정되지만 &lt;code&gt;set-visited-file-name&lt;/code&gt; 호출 은 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7aea3b4688113352cc4351e7c399bbe6a0038551" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;func-arity&lt;/code&gt;, but only for built-in functions and without symbol indirection. It signals an error for non-built-in functions. We recommend to use &lt;code&gt;func-arity&lt;/code&gt; instead.</source>
          <target state="translated">이것은 &lt;code&gt;func-arity&lt;/code&gt; 처럼 작동 하지만 내장 함수에 대해서만 심볼 간접 지정없이 작동합니다. 내장되지 않은 함수에 대한 오류를 나타냅니다. 대신 &lt;code&gt;func-arity&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="2222791c63562b777cf74014b1491b79d36a4a47" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;list&lt;/code&gt; except for the formatting of text in the Custom buffer. &lt;code&gt;list&lt;/code&gt; labels each element value with its tag; &lt;code&gt;group&lt;/code&gt; does not.</source>
          <target state="translated">이것은 사용자 지정 버퍼의 텍스트 서식을 제외하고 &lt;code&gt;list&lt;/code&gt; 과 같이 작동합니다 . &lt;code&gt;list&lt;/code&gt; 각 요소 값에 태그를 지정합니다. &lt;code&gt;group&lt;/code&gt; 은하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b607ec78848fecf526dafc21738c8f9a1d3ecf5" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;magic-mode-alist&lt;/code&gt;, except that it is handled only if &lt;code&gt;auto-mode-alist&lt;/code&gt; does not specify a mode for this file.</source>
          <target state="translated">이것은 &lt;code&gt;auto-mode-alist&lt;/code&gt; 가이 파일에 대한 모드를 지정하지 않는 경우에만 처리된다는 점을 제외하면 &lt;code&gt;magic-mode-alist&lt;/code&gt; 와 유사하게 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="42271ccc9f11ca5afafc41968821ce04459e7f5f" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;substring&lt;/code&gt; but discards all text properties from the value. Also, &lt;var&gt;start&lt;/var&gt; may be omitted or &lt;code&gt;nil&lt;/code&gt;, which is equivalent to 0. Thus, &lt;code&gt;(substring-no-properties&amp;nbsp;&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; returns a copy of &lt;var&gt;string&lt;/var&gt;, with all text properties removed.</source>
          <target state="translated">이것은 &lt;code&gt;substring&lt;/code&gt; 처럼 작동 하지만 값에서 모든 텍스트 속성을 버립니다. 또한 &lt;var&gt;start&lt;/var&gt; 는 생략되거나 &lt;code&gt;nil&lt;/code&gt; 에 해당하는 nil 일 수 있습니다. 따라서 &lt;code&gt;(substring-no-properties&amp;nbsp;&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 은 모든 텍스트 속성이 제거 된 &lt;var&gt;string&lt;/var&gt; 의 복사본을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ed187f77f38a5b16068509086961c75b92666f79" translate="yes" xml:space="preserve">
          <source>This works much like &lt;code&gt;coding-system-for-read&lt;/code&gt;, except that it applies to output rather than input. It affects writing to files, as well as sending output to subprocesses and net connections. It also applies to encoding command-line arguments with which Emacs invokes subprocesses.</source>
          <target state="translated">이것은 입력이 아닌 출력에 적용된다는 점을 제외하고는 &lt;code&gt;coding-system-for-read&lt;/code&gt; 와 매우 유사 합니다. 이는 파일 쓰기와 하위 프로세스 및 네트워크 연결에 출력을 보내는 데 영향을줍니다. 또한 Emacs가 하위 프로세스를 호출하는 데 사용되는 인코딩 명령 줄 인수에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="59003b84c07559474d31fd804eb8f75a70284b77" translate="yes" xml:space="preserve">
          <source>Those functions also use backslash sequences for multibyte non-</source>
          <target state="translated">이러한 함수는 또한 멀티 바이트가 아닌 경우 백 슬래시 시퀀스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b95f15bef4206fcd326264dee199cb267ce225d6" translate="yes" xml:space="preserve">
          <source>Those functions also use backslash sequences for unibyte non-</source>
          <target state="translated">이러한 함수는 또한 유니 바이트가 아닌 경우 백 슬래시 시퀀스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5856f5777b6dc484b1eb665793fb948525751099" translate="yes" xml:space="preserve">
          <source>Though many windows may exist simultaneously, at any time one window is designated the &lt;em&gt;selected window&lt;/em&gt;. This is the window where the cursor is (usually) displayed when Emacs is ready for a command. The selected window usually displays the current buffer (see &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;), but this is not necessarily the case.</source>
          <target state="translated">여러 개의 창이 동시에 존재할 수 있지만 언제든지 하나의 창이 &lt;em&gt;선택된 창으로&lt;/em&gt; 지정 됩니다. 이것은 Emacs가 명령을받을 준비가되었을 때 (보통) 커서가 표시되는 창입니다. 선택한 창은 일반적으로 현재 버퍼를 표시 하지만 ( &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;현재 버퍼&lt;/a&gt; 참조 ) 반드시 그런 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6ab521570bbcdbefcba29a6661b03914c0b32d52" translate="yes" xml:space="preserve">
          <source>Thread Type</source>
          <target state="translated">스레드 유형</target>
        </trans-unit>
        <trans-unit id="2d269b4a5c1f8bab25480b97386aa237fb44ff03" translate="yes" xml:space="preserve">
          <source>Thread objects have no read syntax. They print in hash notation, giving the name of the thread (if it has been given a name) or its address in core:</source>
          <target state="translated">스레드 개체에는 읽기 구문이 없습니다. 해시 표기법으로 인쇄하여 스레드 이름 (이름이 지정된 경우) 또는 코어의 주소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bb12e8aaaecc434fd51e448fe7669bced1bdd107" translate="yes" xml:space="preserve">
          <source>Threads</source>
          <target state="translated">Threads</target>
        </trans-unit>
        <trans-unit id="8d53a0e9f60f19ac58e4e30827894f674de690b7" translate="yes" xml:space="preserve">
          <source>Threads can be created and waited for. A thread cannot be exited directly, but the current thread can be exited implicitly, and other threads can be signaled.</source>
          <target state="translated">스레드를 만들고 기다릴 수 있습니다. 스레드는 직접 종료 될 수 없지만 현재 스레드는 암시 적으로 종료 될 수 있으며 다른 스레드는 신호를받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c401881f263de09614480a519f56aa18cabc74e" translate="yes" xml:space="preserve">
          <source>Throughout this chapter, &amp;ldquo;text&amp;rdquo; refers to the characters in the buffer, together with their properties (when relevant). Keep in mind that point is always between two characters, and the cursor appears on the character after point.</source>
          <target state="translated">이 장에서 &quot;텍스트&quot;는 해당 속성 (관련된 경우)과 함께 버퍼의 문자를 나타냅니다. 포인트는 항상 두 문자 사이에 있으며 커서는 포인트 이후의 문자에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="4b8288563d76af911e25930716d0cac92968d4b5" translate="yes" xml:space="preserve">
          <source>Throughout this manual, the phrases &amp;ldquo;the Lisp reader&amp;rdquo; and &amp;ldquo;the Lisp printer&amp;rdquo; refer to those routines in Lisp that convert textual representations of Lisp objects into actual Lisp objects, and vice versa. See &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt;, for more details. You, the person reading this manual, are thought of as the programmer and are addressed as &amp;ldquo;you&amp;rdquo;. The user is the person who uses Lisp programs, including those you write.</source>
          <target state="translated">이 설명서에서 &quot;Lisp 판독기&quot;및 &quot;Lisp 프린터&quot;라는 문구는 Lisp 개체의 텍스트 표현을 실제 Lisp 개체로 또는 그 반대로 변환하는 Lisp의 루틴을 나타냅니다. 자세한 내용은 &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt; 을 참조하십시오. 이 매뉴얼을 읽는 당신은 프로그래머로 생각되며&amp;ldquo;당신&amp;rdquo;이라고 불립니다. 사용자는 작성하는 프로그램을 포함하여 Lisp 프로그램을 사용하는 사람입니다.</target>
        </trans-unit>
        <trans-unit id="9d333b3edb2142ed227358d10eac5e32f293c1d8" translate="yes" xml:space="preserve">
          <source>Thus if &lt;var&gt;fontpattern&lt;/var&gt; is this,</source>
          <target state="translated">따라서 &lt;var&gt;fontpattern&lt;/var&gt; 이 이것이면</target>
        </trans-unit>
        <trans-unit id="a2c87b537d1224b2a6ad61d086a4d629e1722be2" translate="yes" xml:space="preserve">
          <source>Thus, &amp;lsquo;</source>
          <target state="translated">따라서 '</target>
        </trans-unit>
        <trans-unit id="3ac50cff3cdf79feac987887f115c6c4551c8556" translate="yes" xml:space="preserve">
          <source>Thus, a function in &lt;code&gt;write-region-annotate-functions&lt;/code&gt; can create a buffer, give this variable the local value of &lt;code&gt;kill-buffer&lt;/code&gt; in that buffer, set up the buffer with altered text, and make the buffer current. The buffer will be killed after &lt;code&gt;write-region&lt;/code&gt; is done.</source>
          <target state="translated">따라서 &lt;code&gt;write-region-annotate-functions&lt;/code&gt; 의 함수 는 버퍼를 만들고,이 변수 에 해당 버퍼 의 &lt;code&gt;kill-buffer&lt;/code&gt; 로컬 값을 제공 하고, 변경된 텍스트로 버퍼를 설정하고, 버퍼를 현재로 만들 수 있습니다. &lt;code&gt;write-region&lt;/code&gt; 이 완료된 후 버퍼가 종료 됩니다.</target>
        </trans-unit>
        <trans-unit id="9cd7c0f20cc4962292b3c8c8d99ff59cb2ddb404" translate="yes" xml:space="preserve">
          <source>Thus, any valid height spec determines the height in pixels, one way or another. If the line contents&amp;rsquo; height is less than that, Emacs adds extra vertical space above the line to achieve the specified total height.</source>
          <target state="translated">따라서 유효한 높이 사양은 픽셀 단위로 높이를 결정합니다. 줄 내용의 높이가 그보다 작 으면 Emacs는 지정된 총 높이를 얻기 위해 줄 위에 추가 수직 공간을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="03ab585299ede210bc4090198332814b205ee5dc" translate="yes" xml:space="preserve">
          <source>Thus, if the command moved point back to an invisible range (with the usual stickiness), Emacs moves point back to the beginning of that range. If the command moved point forward into an invisible range, Emacs moves point forward to the first visible character that follows the invisible text and then forward one more character.</source>
          <target state="translated">따라서 명령이 보이지 않는 범위 (일반적인 고정 상태)로 지점을 다시 이동하면 Emacs는 해당 범위의 시작 지점으로 다시 지점을 이동합니다. 명령이 보이지 않는 범위로 포인트를 앞으로 이동하면 Emacs는 보이지 않는 텍스트를 따르는 첫 번째 보이는 문자로 포인트를 이동 한 다음 한 문자 더 앞으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="0b885fa081e5f6faf147ce71fc2eb228505921a4" translate="yes" xml:space="preserve">
          <source>Thus, if the original item was defined this way,</source>
          <target state="translated">따라서 원래 항목이 이렇게 정의 된 경우</target>
        </trans-unit>
        <trans-unit id="141bd126a24d1137b98f80ec3bb8e786c1abf288" translate="yes" xml:space="preserve">
          <source>Thus, if you set &lt;code&gt;backup-by-copying-when-privileged-mismatch&lt;/code&gt; to 0, backup by copying is done for the superuser and group 0 only, when necessary to prevent a change in the owner of the file.</source>
          <target state="translated">따라서 &lt;code&gt;backup-by-copying-when-privileged-mismatch&lt;/code&gt; 백업을 0으로 설정하면 파일 소유자 변경을 방지하기 위해 필요한 경우 수퍼 유저 및 그룹 0에 대해서만 복사 별 백업이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="eb0dbc223d80bf436cf99b6c0585d13e872fd662" translate="yes" xml:space="preserve">
          <source>Thus, the complete syntax for an argument list is as follows:</source>
          <target state="translated">따라서 인수 목록의 전체 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="514aac49d5a6574eb2e045497dae93d9caaf5dbc" translate="yes" xml:space="preserve">
          <source>Thus, the function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the file name ends with a &amp;lsquo;</source>
          <target state="translated">따라서 파일 이름이 '로 끝나는 경우 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c0bc68ad07460d16a6c86f2eaa3e27e454505a8" translate="yes" xml:space="preserve">
          <source>Thus, the symbol for the key</source>
          <target state="translated">따라서 키의 기호는</target>
        </trans-unit>
        <trans-unit id="e6f6a15eeba5458c2cd39ecf32d429566249933e" translate="yes" xml:space="preserve">
          <source>Thus, to define a new method of key lookup, you need to specify both a function to compute the hash code from a key, and a function to compare two keys directly. The two functions should be consistent with each other: that is, two keys&amp;rsquo; hash codes should be the same if the keys compare as equal. Also, since the two functions can be called at any time (such as by the garbage collector), the functions should be free of side effects and should return quickly, and their behavior should depend on only on properties of the keys that do not change.</source>
          <target state="translated">따라서 새로운 키 조회 방법을 정의하려면 키에서 해시 코드를 계산하는 함수와 두 키를 직접 비교하는 함수를 모두 지정해야합니다. 두 함수는 서로 일치해야합니다. 즉, 키가 같은 것으로 비교되면 두 키의 해시 코드가 동일해야합니다. 또한 두 함수는 언제든지 (예 : 가비지 수집기) 호출 할 수 있으므로 함수는 부작용이 없어야하며 빠르게 반환되어야하며 동작은 변경되지 않는 키의 속성에만 의존해야합니다. .</target>
        </trans-unit>
        <trans-unit id="582a7c3d69fa69b60f2db20237cefec358cfad85" translate="yes" xml:space="preserve">
          <source>Time Calculations</source>
          <target state="translated">시간 계산</target>
        </trans-unit>
        <trans-unit id="ec024476e8910d25ad39c9ff8458ef285476a847" translate="yes" xml:space="preserve">
          <source>Time Conversion</source>
          <target state="translated">시간 변환</target>
        </trans-unit>
        <trans-unit id="44a7822891d1caaed18bfbde79f248fc78fb3fc0" translate="yes" xml:space="preserve">
          <source>Time Zone Rules</source>
          <target state="translated">시간대 규칙</target>
        </trans-unit>
        <trans-unit id="677503965fb8fe8cd0f6c09959e0be5d258e9807" translate="yes" xml:space="preserve">
          <source>Time of Day</source>
          <target state="translated">시간</target>
        </trans-unit>
        <trans-unit id="ca3b3626cd602840bd2ccae454814427a6f70af2" translate="yes" xml:space="preserve">
          <source>Time spent by the process in the system (kernel) context, for processing system calls. The corresponding &lt;var&gt;value&lt;/var&gt; is a Lisp timestamp.</source>
          <target state="translated">시스템 호출을 처리하기 위해 시스템 (커널) 컨텍스트에서 프로세스가 소비 한 시간입니다. 해당 &lt;var&gt;value&lt;/var&gt; 은 Lisp 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="baaeeba37e2ea7675f434f23ea6bcc350d2a5a33" translate="yes" xml:space="preserve">
          <source>Time spent by the process in the user context, for running the application&amp;rsquo;s code. The corresponding &lt;var&gt;value&lt;/var&gt; is a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">애플리케이션의 코드를 실행하기 위해 사용자 컨텍스트에서 프로세스가 소비 한 시간입니다. 해당 &lt;var&gt;value&lt;/var&gt; 은 Lisp 타임 스탬프입니다 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="575376bef4c5fc7318a81bb14ff601241ffe1cbe" translate="yes" xml:space="preserve">
          <source>Time values can be converted to and from calendrical and other forms. Some of these conversions rely on operating system functions that limit the range of possible time values, and signal an error such as &amp;lsquo;</source>
          <target state="translated">시간 값은 달력 및 기타 형식간에 변환 할 수 있습니다. 이러한 변환 중 일부는 가능한 시간 값의 범위를 제한하는 운영 체제 함수에 의존하고 '</target>
        </trans-unit>
        <trans-unit id="aa7e7755c39803e493e24923003524919122f3e5" translate="yes" xml:space="preserve">
          <source>Timer functions should also avoid calling functions that cause Emacs to wait, such as &lt;code&gt;sit-for&lt;/code&gt; (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;). This can lead to unpredictable effects, since other timers (or even the same timer) can run while waiting. If a timer function needs to perform an action after a certain time has elapsed, it can do this by scheduling a new timer.</source>
          <target state="translated">타이머 함수는 또한 &lt;code&gt;sit-for&lt;/code&gt; ( &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt; 참조 ) 와 같이 Emacs가 대기하도록하는 함수 호출을 피해야 합니다. 대기하는 동안 다른 타이머 (또는 동일한 타이머)가 실행될 수 있기 때문에 예상치 못한 결과가 발생할 수 있습니다. 타이머 기능이 일정 시간이 지난 후 작업을 수행해야하는 경우 새 타이머를 예약하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b459f04ff70d0b0dda739bf607d8d33495315e0" translate="yes" xml:space="preserve">
          <source>Timers for Delayed Execution</source>
          <target state="translated">지연된 실행을위한 타이머</target>
        </trans-unit>
        <trans-unit id="4cf1b54b003a59c279d1ba0b615a8a5f3459ca8c" translate="yes" xml:space="preserve">
          <source>Tips</source>
          <target state="translated">Tips</target>
        </trans-unit>
        <trans-unit id="ed9a57f848ca80c6e25752c6419f6e56c70f77f5" translate="yes" xml:space="preserve">
          <source>Tips for Defining Variables Robustly</source>
          <target state="translated">변수를 강력하게 정의하기위한 팁</target>
        </trans-unit>
        <trans-unit id="4175dfb6345a6ed8c49c58bdfd8f88fb7b64b67e" translate="yes" xml:space="preserve">
          <source>Tips for writing a minor mode.</source>
          <target state="translated">부 모드 작성을위한 팁.</target>
        </trans-unit>
        <trans-unit id="bdca972c5ffd1202222bd6267a51a55f1b7c6823" translate="yes" xml:space="preserve">
          <source>Title Bar</source>
          <target state="translated">제목 표시 줄</target>
        </trans-unit>
        <trans-unit id="792bab7e740af3866f1dd9c4450679179194ed82" translate="yes" xml:space="preserve">
          <source>To access (or alter) the elements in the time value, the &lt;code&gt;decoded-time-second&lt;/code&gt;, &lt;code&gt;decoded-time-minute&lt;/code&gt;, &lt;code&gt;decoded-time-hour&lt;/code&gt;, &lt;code&gt;decoded-time-day&lt;/code&gt;, &lt;code&gt;decoded-time-month&lt;/code&gt;, &lt;code&gt;decoded-time-year&lt;/code&gt;, &lt;code&gt;decoded-time-weekday&lt;/code&gt;, &lt;code&gt;decoded-time-dst&lt;/code&gt; and &lt;code&gt;decoded-time-zone&lt;/code&gt; accessors can be used.</source>
          <target state="translated">시간 값의 요소에 액세스 (또는 변경)하려면, &lt;code&gt;decoded-time-second&lt;/code&gt; , &lt;code&gt;decoded-time-minute&lt;/code&gt; , &lt;code&gt;decoded-time-hour&lt;/code&gt; , &lt;code&gt;decoded-time-day&lt;/code&gt; , &lt;code&gt;decoded-time-month&lt;/code&gt; , &lt;code&gt;decoded-time-year&lt;/code&gt; , &lt;code&gt;decoded-time-weekday&lt;/code&gt; , &lt;code&gt;decoded-time-dst&lt;/code&gt; 및 &lt;code&gt;decoded-time-zone&lt;/code&gt; 접근 자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43dc195b9080250f519540998a2c5a8f5d041ac2" translate="yes" xml:space="preserve">
          <source>To access the contents of a mouse position list in the &lt;var&gt;position&lt;/var&gt; slot of a click event, you should typically use the functions documented in &lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;Accessing Mouse&lt;/a&gt;. The explicit format of the list depends on where the click occurred. For clicks in the text area, mode line, header line, tab line, or in the fringe or marginal areas, the mouse position list has the form</source>
          <target state="translated">클릭 이벤트 의 &lt;var&gt;position&lt;/var&gt; 슬롯 에있는 마우스 위치 목록의 내용에 액세스하려면 일반적으로 &lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;마우스 액세스에&lt;/a&gt; 설명 된 함수를 사용해야합니다 . 목록의 명시적인 형식은 클릭이 발생한 위치에 따라 다릅니다. 텍스트 영역, 모드 라인, 헤더 라인, 탭 라인 또는 가장자리 또는 주변 영역을 클릭하는 경우 마우스 위치 목록은 다음과 같은 형식을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="235f6e020ed5d69d374e18e26adf50fdd8a9afa1" translate="yes" xml:space="preserve">
          <source>To add a customization for a second buffer one would then write:</source>
          <target state="translated">두 번째 버퍼에 대한 사용자 정의를 추가하려면 다음을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="b53ee005115d4bc799a117e118afae627f87c915" translate="yes" xml:space="preserve">
          <source>To add an item to the menu bar, invent a fake function key of your own (let&amp;rsquo;s call it &lt;var&gt;key&lt;/var&gt;), and make a binding for the key sequence &lt;code&gt;[menu-bar &lt;var&gt;key&lt;/var&gt;]&lt;/code&gt;. Most often, the binding is a menu keymap, so that pressing a button on the menu bar item leads to another menu.</source>
          <target state="translated">메뉴 모음에 항목을 추가하려면 자신의 가짜 기능 키를 만들고 ( &lt;var&gt;key&lt;/var&gt; 라고 부르겠습니다 ) 키 시퀀스 &lt;code&gt;[menu-bar &lt;var&gt;key&lt;/var&gt;]&lt;/code&gt; 대한 바인딩을 만듭니다 . 대부분의 경우 바인딩은 메뉴 키맵이므로 메뉴 표시 줄 항목의 버튼을 누르면 다른 메뉴로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="cd9a1dafd9b8a49df125d2b55de23e028c238bb2" translate="yes" xml:space="preserve">
          <source>To allow its users to initiate JSONRPC contacts (notifications or requests) or reply to endpoint requests, the subclass must have an implementation of the &lt;code&gt;jsonrpc-connection-send&lt;/code&gt; method.</source>
          <target state="translated">사용자가 JSONRPC 연락처 (알림 또는 요청)를 시작하거나 끝점 요청에 응답 할 수 있도록하려면 하위 클래스에 &lt;code&gt;jsonrpc-connection-send&lt;/code&gt; 메서드 구현이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="55ca7463ded90201daa87e4d482f14eb3f606801" translate="yes" xml:space="preserve">
          <source>To automatically display a message in the echo area or in a pop-buffer, depending on its size, use &lt;code&gt;display-message-or-buffer&lt;/code&gt; (see below).</source>
          <target state="translated">크기에 따라 에코 영역 또는 팝 버퍼에 메시지를 자동으로 표시하려면 &lt;code&gt;display-message-or-buffer&lt;/code&gt; 를 사용 하십시오 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="04b0e0265887990aa01de0d92bd3a351a40d12f1" translate="yes" xml:space="preserve">
          <source>To avoid conflict, cooperative conversions do not modify the buffer, but instead specify &lt;em&gt;annotations&lt;/em&gt;, a list of elements of the form &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;, sorted in order of increasing &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">피하기 충돌, 협력 변환이 버퍼를 수정하지 않는 대신 지정 &lt;em&gt;주석&lt;/em&gt; , 양식의 요소 목록 &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; , 증가하는 순서로 정렬 &lt;var&gt;position&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d09fba6f6abb0ce78ff8127847eea2de7a0bba7d" translate="yes" xml:space="preserve">
          <source>To avoid conflicts with other type names, Lisp programs that define new types of records should normally use the naming conventions of the package where these record types are introduced for the names of the types. Note that the names of the types which could possibly conflict might not be known at the time the package defining a record type is loaded; they could be loaded at some future point in time.</source>
          <target state="translated">다른 유형 이름과의 충돌을 피하기 위해 새로운 유형의 레코드를 정의하는 Lisp 프로그램은 일반적으로 이러한 레코드 유형이 유형 이름에 도입되는 패키지의 명명 규칙을 사용해야합니다. 충돌 가능성이있는 유형의 이름은 레코드 유형을 정의하는 패키지가로드 될 때 알려지지 않았을 수 있습니다. 미래의 특정 시점에로드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2a50b76a162337325e7276fa43ccd9804b2eb9e" translate="yes" xml:space="preserve">
          <source>To avoid confusion, we usually store the result of &lt;code&gt;nreverse&lt;/code&gt; back in the same variable which held the original list:</source>
          <target state="translated">혼동을 피하기 위해 일반적으로 &lt;code&gt;nreverse&lt;/code&gt; 의 결과를 원래 목록을 보유한 동일한 변수에 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="5b3904b394b86a2eacb65f3b29df5181abd20d8e" translate="yes" xml:space="preserve">
          <source>To avoid such problems, you should call &lt;code&gt;save-excursion&lt;/code&gt; only after setting the desired current buffer, as in the following example:</source>
          <target state="translated">이러한 문제를 방지하려면 다음 예제와 같이 원하는 현재 버퍼를 설정 한 후에 만 &lt;code&gt;save-excursion&lt;/code&gt; 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2228eb3abc6eabfc0c09c3dba568ac339a975006" translate="yes" xml:space="preserve">
          <source>To avoid that dragging moves a frame completely out of its parent&amp;rsquo;s native frame, something which might happen when the mouse cursor overshoots and makes the frame difficult to retrieve once the mouse button has been released, it is advisable to set the frame&amp;rsquo;s &lt;code&gt;top-visible&lt;/code&gt; or &lt;code&gt;bottom-visible&lt;/code&gt; parameter correspondingly.</source>
          <target state="translated">드래그하면 프레임이 부모의 기본 프레임 밖으로 완전히 이동하는 것을 방지하기 위해 마우스 커서가 오버 슛 할 때 발생할 수있는 일이 발생하여 마우스 버튼을 놓은 후 프레임을 검색하기 어렵게 만드는 것을 방지하려면 프레임의 &lt;code&gt;top-visible&lt;/code&gt; 또는 &lt;code&gt;bottom-visible&lt;/code&gt; 매개 변수.</target>
        </trans-unit>
        <trans-unit id="7280b19374f8217c16ade18f1e59c63667eb03e5" translate="yes" xml:space="preserve">
          <source>To avoid the issues mentioned above, or if the &lt;var&gt;dirname&lt;/var&gt; value might be &lt;code&gt;nil&lt;/code&gt; (for example, from an element of &lt;code&gt;load-path&lt;/code&gt;), use:</source>
          <target state="translated">위에서 언급 한 문제를 방지하거나 &lt;var&gt;dirname&lt;/var&gt; 값이 &lt;code&gt;nil&lt;/code&gt; 일 수있는 경우 (예 : &lt;code&gt;load-path&lt;/code&gt; 의 요소에서 ) 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="06b328352984f5866b5037561b1c5f12a0cc560f" translate="yes" xml:space="preserve">
          <source>To avoid these problems, &lt;strong&gt;don&amp;rsquo;t evaluate an argument expression while computing the macro expansion&lt;/strong&gt;. Instead, substitute the expression into the macro expansion, so that its value will be computed as part of executing the expansion. This is how the other examples in this chapter work.</source>
          <target state="translated">이러한 문제를 방지하려면 &lt;strong&gt;매크로 확장을 계산하는 동안 인수 표현식을 평가하지 마십시오&lt;/strong&gt; . 대신 표현식을 매크로 확장으로 대체하여 해당 값이 확장 실행의 일부로 계산되도록합니다. 이것이이 장의 다른 예제가 작동하는 방식입니다.</target>
        </trans-unit>
        <trans-unit id="151a4e1d6be0d40ecf6f500b522ca57880aee748" translate="yes" xml:space="preserve">
          <source>To avoid this, a character must first be converted into a string, using &lt;code&gt;string&lt;/code&gt; function, before being passed to one of the casing functions. Of course, no assumptions on the length of the result may be made.</source>
          <target state="translated">이를 방지하려면 문자를 대 / 소문자 구분 함수 중 하나로 전달하기 전에 먼저 &lt;code&gt;string&lt;/code&gt; 함수를 사용하여 문자열 로 변환해야합니다 . 물론 결과의 길이에 대한 가정은 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c08d14ae870dedecf552e1f86aa6eea63bd9fd99" translate="yes" xml:space="preserve">
          <source>To catch a user signal, bind the corresponding event to an interactive command in the &lt;code&gt;special-event-map&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;). The command is called with no arguments, and the specific signal event is available in &lt;code&gt;last-input-event&lt;/code&gt; (see &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Event Input Misc&lt;/a&gt;. For example:</source>
          <target state="translated">사용자 신호를 포착하려면 해당 이벤트를 &lt;code&gt;special-event-map&lt;/code&gt; 의 대화 형 명령에 바인딩합니다 ( &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;활성 맵 제어&lt;/a&gt; 참조 ). 이 명령은 인수없이 호출되며 특정 신호 이벤트는 &lt;code&gt;last-input-event&lt;/code&gt; 에서 사용할 수 있습니다 ( &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;이벤트 입력 기타&lt;/a&gt; 참조 . 예 :</target>
        </trans-unit>
        <trans-unit id="b60cc1ba860cf61e455af88cf8feaed4e8e7146b" translate="yes" xml:space="preserve">
          <source>To change the order or value of a specific frame&amp;rsquo;s buffer list, set that frame&amp;rsquo;s &lt;code&gt;buffer-list&lt;/code&gt; parameter with &lt;code&gt;modify-frame-parameters&lt;/code&gt; (see &lt;a href=&quot;parameter-access#Parameter-Access&quot;&gt;Parameter Access&lt;/a&gt;).</source>
          <target state="translated">특정 프레임의 버퍼 목록 순서 또는 값을 변경하려면 &lt;code&gt;modify-frame-parameters&lt;/code&gt; 를 사용 하여 해당 프레임의 &lt;code&gt;buffer-list&lt;/code&gt; 매개 변수를 설정 하십시오 ( &lt;a href=&quot;parameter-access#Parameter-Access&quot;&gt;매개 변수 액세스&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="48997c06dd2af5aa4bd2669c1f8ee166bf8f313c" translate="yes" xml:space="preserve">
          <source>To check for ImageMagick support, use the following:</source>
          <target state="translated">ImageMagick 지원을 확인하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2debbc20ba57a4693461659f109833cc9f2eef69" translate="yes" xml:space="preserve">
          <source>To clear out a string that contained a password, use &lt;code&gt;clear-string&lt;/code&gt;:</source>
          <target state="translated">암호가 포함 된 문자열을 지우려면 clear &lt;code&gt;clear-string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="826939281f100c5ead46cd93ab44c37cdfc70201" translate="yes" xml:space="preserve">
          <source>To clear the frequency count and coverage data for a definition, simply reinstrument it with &lt;code&gt;eval-defun&lt;/code&gt;.</source>
          <target state="translated">정의에 대한 빈도 수 및 커버리지 데이터를 지우려면 &lt;code&gt;eval-defun&lt;/code&gt; 으로 다시 계측하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="9ea85c9d57b9612ecf213929c1439272e19b49bc" translate="yes" xml:space="preserve">
          <source>To conserve memory, Emacs does not hold fixed-length 22-bit numbers that are codepoints of text characters within buffers and strings. Rather, Emacs uses a variable-length internal representation of characters, that stores each character as a sequence of 1 to 5 8-bit bytes, depending on the magnitude of its codepoint&lt;a href=&quot;#FOOT17&quot; name=&quot;DOCF17&quot;&gt;&lt;sup&gt;17&lt;/sup&gt;&lt;/a&gt;. For example, any</source>
          <target state="translated">메모리를 절약하기 위해 Emacs는 버퍼 및 문자열 내에서 텍스트 문자의 코드 포인트 인 고정 길이 22 비트 숫자를 보유하지 않습니다. 오히려 Emacs는 코드 포인트 &lt;a href=&quot;#FOOT17&quot; name=&quot;DOCF17&quot;&gt;&lt;sup&gt;17&lt;/sup&gt;&lt;/a&gt; 의 크기에 따라 각 문자를 1-5 개의 8 비트 바이트 시퀀스로 저장하는 가변 길이 내부 문자 표현을 사용합니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="62bee7c8192286adfd0c7acee5e1574b082e60da" translate="yes" xml:space="preserve">
          <source>To control output format more precisely, you can put a string in this variable. The string should hold a &amp;lsquo;</source>
          <target state="translated">출력 형식을보다 정확하게 제어하려면이 변수에 문자열을 넣을 수 있습니다. 문자열에는 '</target>
        </trans-unit>
        <trans-unit id="ba9870e4247d169ea559ccaf09840adafed3981a" translate="yes" xml:space="preserve">
          <source>To control unpacking and packing, you write a &lt;em&gt;data layout specification&lt;/em&gt;, a special nested list describing named and typed &lt;em&gt;fields&lt;/em&gt;. This specification controls the length of each field to be processed, and how to pack or unpack it. We normally keep bindat specs in variables whose names end in &amp;lsquo;</source>
          <target state="translated">압축 풀기 및 압축을 제어하려면 이름이 지정된 &lt;em&gt;필드&lt;/em&gt; 와 유형이 지정된 &lt;em&gt;필드를&lt;/em&gt; 설명하는 특수 중첩 목록 인 &lt;em&gt;데이터 레이아웃 사양&lt;/em&gt; 을 작성 &lt;em&gt;합니다&lt;/em&gt; . 이 사양은 처리 할 각 필드의 길이와 압축 또는 압축 해제 방법을 제어합니다. 우리는 일반적으로 이름이 '로 끝나는 변수에 bindat 사양을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="0f9397e2a68037dd11d8ba74c654a18dd8898ef6" translate="yes" xml:space="preserve">
          <source>To convert a directory name to its abbreviation, use this function:</source>
          <target state="translated">디렉토리 이름을 약어로 변환하려면 다음 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ec062d3d87c3e3508835c86383da0aff25d9dc46" translate="yes" xml:space="preserve">
          <source>To convert an integer to floating point, use the function &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">정수를 부동 소수점으로 변환하려면 &lt;code&gt;float&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb0887b6e6ad7546bf3ba790c69350aac035c76f" translate="yes" xml:space="preserve">
          <source>To copy the contents of a file into a buffer, use the function &lt;code&gt;insert-file-contents&lt;/code&gt;. (Don&amp;rsquo;t use the command &lt;code&gt;insert-file&lt;/code&gt; in a Lisp program, as that sets the mark.)</source>
          <target state="translated">파일의 내용을 버퍼에 복사하려면 &lt;code&gt;insert-file-contents&lt;/code&gt; 함수를 사용하십시오 . ( Lisp 프로그램에서 &lt;code&gt;insert-file&lt;/code&gt; 명령을 사용하지 마십시오 . 표시가 설정됩니다.)</target>
        </trans-unit>
        <trans-unit id="133d24c64118311f91ce8dc247810f556ae14153" translate="yes" xml:space="preserve">
          <source>To create a new atomic window from an existing live window or to add a new window to an existing atomic window, the following buffer display action function (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) can be used:</source>
          <target state="translated">기존의 라이브 창에서 새 원자 창을 만들거나 기존 원자 창에 새 창을 추가하려면 다음 버퍼 디스플레이 액션 기능 (참조 &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;버퍼 표시 작업 기능을&lt;/a&gt; 사용할 수 있습니다)</target>
        </trans-unit>
        <trans-unit id="29ff3e80f60dfd08ff1b5590946bd89af0abab17" translate="yes" xml:space="preserve">
          <source>To create a new child frame or to convert a normal frame into a child frame, set that frame&amp;rsquo;s &lt;code&gt;parent-frame&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) to that of an already existing frame. The frame specified by that parameter will then be the frame&amp;rsquo;s parent frame as long as the parameter is not changed or reset. Technically, this makes the child frame&amp;rsquo;s window-system window a child window of the parent frame&amp;rsquo;s window-system window.</source>
          <target state="translated">새 자식 프레임을 만들거나 일반 프레임을 자식 프레임으로 변환하려면 해당 프레임의 &lt;code&gt;parent-frame&lt;/code&gt; 매개 변수 ( &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;프레임 상호 작용 매개 변수&lt;/a&gt; 참조 )를 기존 프레임의 매개 변수 로 설정합니다. 매개 변수가 변경되거나 재설정되지 않는 한 해당 매개 변수로 지정된 프레임은 프레임의 상위 프레임이됩니다. 기술적으로 이것은 자식 프레임의 창 시스템 창을 부모 프레임의 창 시스템 창의 자식 창으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ab5f54acfa8eddfb20c7033fd6db4713b5307cdb" translate="yes" xml:space="preserve">
          <source>To create a new frame, call the function &lt;code&gt;make-frame&lt;/code&gt;.</source>
          <target state="translated">새 프레임을 만들려면 &lt;code&gt;make-frame&lt;/code&gt; 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="520e6d95fc677b710393ae409ecfe311056a233b" translate="yes" xml:space="preserve">
          <source>To deal with an excess close parenthesis, first go to the beginning of the file, then type</source>
          <target state="translated">초과 닫는 괄호를 처리하려면 먼저 파일의 시작 부분으로 이동 한 다음</target>
        </trans-unit>
        <trans-unit id="adff80d0afc108dda2cc35897c7b315aedf5b28c" translate="yes" xml:space="preserve">
          <source>To debug a Lisp program with Edebug, you must first &lt;em&gt;instrument&lt;/em&gt; the Lisp code that you want to debug. A simple way to do this is to first move point into the definition of a function or macro and then do</source>
          <target state="translated">Edebug로 Lisp 프로그램을 디버깅하려면 먼저 디버깅 할 Lisp 코드를 &lt;em&gt;계측&lt;/em&gt; 해야합니다 . 이를 수행하는 간단한 방법은 먼저 포인트를 함수 또는 매크로의 정의로 이동 한 다음</target>
        </trans-unit>
        <trans-unit id="915d1eaa14aa3e00e6bcaad57665857bb7499f4f" translate="yes" xml:space="preserve">
          <source>To debug an error that happens during loading of the init file, use the option &amp;lsquo;</source>
          <target state="translated">init 파일을로드하는 동안 발생하는 오류를 디버깅하려면 '</target>
        </trans-unit>
        <trans-unit id="3bdad9168cc7c8303d260876d234b4ac3a92a4ea" translate="yes" xml:space="preserve">
          <source>To define</source>
          <target state="translated">정의하려면</target>
        </trans-unit>
        <trans-unit id="47b1b0291e0b6e36ef353b4609dc3200dd5e719a" translate="yes" xml:space="preserve">
          <source>To define a customizable variable, you should use &lt;code&gt;defcustom&lt;/code&gt; (which calls &lt;code&gt;defvar&lt;/code&gt; as a subroutine). See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 가능한 변수를 정의하려면 &lt;code&gt;defcustom&lt;/code&gt; ( &lt;code&gt;defvar&lt;/code&gt; 을 서브 루틴으로 호출)을 사용해야 합니다. &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;변수 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da089848c03f8ce3f8980943a85c2ada002c9db8" translate="yes" xml:space="preserve">
          <source>To define a kind of magic file name, you must supply a regular expression to define the class of names (all those that match the regular expression), plus a handler that implements all the primitive Emacs file operations for file names that match.</source>
          <target state="translated">일종의 매직 파일 이름을 정의하려면 이름 클래스 (정규 표현식과 일치하는 모든 이름)를 정의하는 정규 표현식과 일치하는 파일 이름에 대한 모든 기본 Emacs 파일 작업을 구현하는 핸들러를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="be46e3ea1fad3493a5c2d659f71c451b37468aba" translate="yes" xml:space="preserve">
          <source>To define a real menu item which can be selected, the extended format binding looks like this:</source>
          <target state="translated">선택할 수있는 실제 메뉴 항목을 정의하려면 확장 형식 바인딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="242173ab3939d3e25ee7d06573de8c62f25e018d" translate="yes" xml:space="preserve">
          <source>To define items in some local map, bind &lt;code&gt;tool-bar-map&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt; around calls of this function:</source>
          <target state="translated">일부 로컬 맵에서 항목을 정의하려면 이 함수의 &lt;code&gt;let&lt;/code&gt; around 호출을 사용 하여 &lt;code&gt;tool-bar-map&lt;/code&gt; 을 바인딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b51a95034fae70a0f906d327a9971bc4d4ef1ce" translate="yes" xml:space="preserve">
          <source>To define system-specific X11 keysyms, set the variable &lt;code&gt;system-key-alist&lt;/code&gt;.</source>
          <target state="translated">시스템 별 X11 키 심을 정의하려면 &lt;code&gt;system-key-alist&lt;/code&gt; 변수를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="73c67c5491a375c80d720438c106b29de8cdb852" translate="yes" xml:space="preserve">
          <source>To delete a group, move point into it and type</source>
          <target state="translated">그룹을 삭제하려면 해당 그룹으로 포인트를 이동하고</target>
        </trans-unit>
        <trans-unit id="8e96ef9ec0fc817e8f29201278b2f3e54af7b1ea" translate="yes" xml:space="preserve">
          <source>To describe the lexing rules of your language to SMIE, you need 2 functions, one to fetch the next token, and another to fetch the previous token. Those functions will usually first skip whitespace and comments and then look at the next chunk of text to see if it is a special token. If so it should skip the token and return a description of this token. Usually this is simply the string extracted from the buffer, but it can be anything you want. For example:</source>
          <target state="translated">SMIE에 대한 언어의 어휘 규칙을 설명하려면 다음 토큰을 가져 오는 함수와 이전 토큰을 가져 오는 함수의 두 가지가 필요합니다. 이러한 함수는 일반적으로 먼저 공백과 주석을 건너 뛴 다음 다음 텍스트 청크를보고 특수 토큰인지 확인합니다. 그렇다면 토큰을 건너 뛰고이 토큰에 대한 설명을 반환해야합니다. 일반적으로 이것은 단순히 버퍼에서 추출 된 문자열이지만 원하는 모든 것이 될 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="4cb372b3c447b50febee755be839e76e33054af7" translate="yes" xml:space="preserve">
          <source>To determine whether a given subprocess actually got a pipe or a pty, use the function &lt;code&gt;process-tty-name&lt;/code&gt; (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;).</source>
          <target state="translated">주어진 하위 프로세스가 실제로 파이프 또는 pty를 얻었는지 확인하려면 &lt;code&gt;process-tty-name&lt;/code&gt; 함수를 사용 하십시오 ( &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7f0898334262efad40a7b01e832830958d6ea6b2" translate="yes" xml:space="preserve">
          <source>To disable the dynamic loading feature for a specific file, set this option to &lt;code&gt;nil&lt;/code&gt; in its header line (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;Local Variables in Files&lt;/a&gt; in</source>
          <target state="translated">특정 파일에 대한 동적 로딩 기능을 비활성화하려면 헤더 행 에서이 옵션을 &lt;code&gt;nil&lt;/code&gt; 로 설정 하십시오 ( &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;파일의 로컬 변수&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="e464e43a1960f2df438fefbe2cedebd117f89275" translate="yes" xml:space="preserve">
          <source>To disable the dynamic loading feature for a specific file, set this option to &lt;code&gt;nil&lt;/code&gt; in its header line (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;Local Variables in Files&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5e3874fad54b27ff6edfe7772adf4f6fbd2b49" translate="yes" xml:space="preserve">
          <source>To display a space of specified width and/or height, use a display specification of the form &lt;code&gt;(space . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;props&lt;/var&gt; is a property list (a list of alternating properties and values). You can put this property on one or more consecutive characters; a space of the specified height and width is displayed in place of &lt;em&gt;all&lt;/em&gt; of those characters. These are the properties you can use in &lt;var&gt;props&lt;/var&gt; to specify the weight of the space:</source>
          <target state="translated">지정된 너비 및 / 또는 높이의 공간을 표시하려면 &lt;code&gt;(space . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt; 형식의 표시 사양을 사용합니다 . 여기서 &lt;var&gt;props&lt;/var&gt; 는 속성 목록 (교대 속성 및 값 목록)입니다. 이 속성을 하나 이상의 연속 문자에 넣을 수 있습니다. 지정된 높이와 너비의 공백이 &lt;em&gt;모든&lt;/em&gt; 문자 대신 표시됩니다 . 다음은 공간의 가중치를 지정하기 위해 &lt;var&gt;props&lt;/var&gt; 에서 사용할 수있는 속성입니다 .</target>
        </trans-unit>
        <trans-unit id="4ffc4ba1a6de109bae00ebf9c118c0264731234e" translate="yes" xml:space="preserve">
          <source>To display an embedded widget in a buffer, you must first create an xwidget object, and then use that object as the display specifier in a &lt;code&gt;display&lt;/code&gt; text or overlay property (see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;).</source>
          <target state="translated">버퍼에 포함 된 위젯을 표시하려면 먼저 xwidget 객체를 만든 다음 해당 객체를 &lt;code&gt;display&lt;/code&gt; 텍스트 또는 오버레이 속성 에서 표시 지정자로 사용해야합니다 ( &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="612e166b28872c3a8d06d7757780349cd9e9885d" translate="yes" xml:space="preserve">
          <source>To display an image in an Emacs buffer, you must first create an image descriptor, then use it as a display specifier in the &lt;code&gt;display&lt;/code&gt; property of text that is displayed (see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;).</source>
          <target state="translated">Emacs 버퍼에 이미지를 표시하려면 먼저 이미지 설명자를 만든 다음 &lt;code&gt;display&lt;/code&gt; 되는 텍스트 의 표시 속성 에서 표시 지정자로 사용해야합니다 ( &lt;a href=&quot;display-property#Display-Property&quot;&gt;표시 속성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a8ab40d8502bb236444d4c748c84422d49084ce2" translate="yes" xml:space="preserve">
          <source>To display something in the margin &lt;em&gt;in association with&lt;/em&gt; certain buffer text, without altering or preventing the display of that text, put a &lt;code&gt;before-string&lt;/code&gt; property on the text and put the margin display specification on the contents of the before-string.</source>
          <target state="translated">해당 텍스트의 표시를 변경하거나 방지하지 않고 특정 버퍼 텍스트 &lt;em&gt;와 관련&lt;/em&gt; 하여 여백 &lt;em&gt;에&lt;/em&gt; 무언가를 표시하려면 텍스트에 &lt;code&gt;before-string&lt;/code&gt; 속성을 넣고 before-string 의 내용에 여백 표시 사양을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2ac1a88bca0cfc132b292a9580511ca77f20d1c7" translate="yes" xml:space="preserve">
          <source>To distinguish the different types of processes, the &lt;code&gt;process-type&lt;/code&gt; function returns the symbol &lt;code&gt;network&lt;/code&gt; for a network connection or server, &lt;code&gt;serial&lt;/code&gt; for a serial port connection, &lt;code&gt;pipe&lt;/code&gt; for a pipe connection, or &lt;code&gt;real&lt;/code&gt; for a real subprocess.</source>
          <target state="translated">프로세스의 종류를 구별하기 위해, &lt;code&gt;process-type&lt;/code&gt; 함수는 심볼 리턴 &lt;code&gt;network&lt;/code&gt; 네트워크 연결 또는 서버에 대한 &lt;code&gt;serial&lt;/code&gt; 직렬 포트 연결 용 &lt;code&gt;pipe&lt;/code&gt; 또는 파이프 연결을위한 &lt;code&gt;real&lt;/code&gt; 실제 서브 프로세스를.</target>
        </trans-unit>
        <trans-unit id="05d5c1daa8d28f63fa48996b94da05d2812ba71a" translate="yes" xml:space="preserve">
          <source>To do this for one buffer, the one already current, simply write a call to &lt;code&gt;atomic-change-group&lt;/code&gt; around the code that makes the changes, like this:</source>
          <target state="translated">하나의 버퍼 (이미 현재 버퍼)에 대해 이렇게하려면 다음 과 같이 변경을 수행하는 코드 주위 에 &lt;code&gt;atomic-change-group&lt;/code&gt; 에 대한 호출을 작성 하면됩니다.</target>
        </trans-unit>
        <trans-unit id="eb94ca63ae89215346ca01eaf463c0cfab2f34ae" translate="yes" xml:space="preserve">
          <source>To do this, write one or more &lt;em&gt;evaluation list groups&lt;/em&gt; in the evaluation list buffer. An evaluation list group consists of one or more Lisp expressions. Groups are separated by comment lines.</source>
          <target state="translated">이렇게하려면 평가 목록 버퍼에 하나 이상의 &lt;em&gt;평가 목록 그룹&lt;/em&gt; 을 작성합니다. 평가 목록 그룹은 하나 이상의 Lisp 식으로 구성됩니다. 그룹은 주석 줄로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="6a44041b6bf383ffe5217b5f44c2750ab46451e4" translate="yes" xml:space="preserve">
          <source>To edit a particular file in unibyte representation, visit it using &lt;code&gt;find-file-literally&lt;/code&gt;. See &lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;Visiting Functions&lt;/a&gt;. You can convert a multibyte buffer to unibyte by saving it to a file, killing the buffer, and visiting the file again with &lt;code&gt;find-file-literally&lt;/code&gt;. Alternatively, you can use</source>
          <target state="translated">유니 바이트 표현으로 특정 파일을 편집하려면 &lt;code&gt;find-file-literally&lt;/code&gt; 를 사용하여 방문하십시오 . &lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;방문 기능을&lt;/a&gt; 참조하십시오 . 멀티 바이트 버퍼를 파일에 저장하고 버퍼를 종료 한 다음 &lt;code&gt;find-file-literally&lt;/code&gt; 로 파일을 다시 방문하여 멀티 바이트 버퍼를 유니 바이트로 변환 할 수 있습니다 . 또는 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe5e6c27a8f59ef290015d6ac8f824d9b7ff9b2e" translate="yes" xml:space="preserve">
          <source>To emulate Unicode-compliant collation on MS-Windows systems, bind &lt;code&gt;w32-collate-ignore-punctuation&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value, since the codeset part of the locale cannot be &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; on MS-Windows.</source>
          <target state="translated">MS-Windows 시스템에서 유니 코드 호환 데이터 정렬을 에뮬레이트하려면 &lt;code&gt;w32-collate-ignore-punctuation&lt;/code&gt; 을 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값으로 바인드 하십시오. 로케일의 코드 세트 부분이 MS-Windows에서 &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; 이 될 수 없기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="bb22ac9aa97cf59701dbd87a30f14a83e31dc830" translate="yes" xml:space="preserve">
          <source>To enclose a complicated expression for the postfix operators &amp;lsquo;</source>
          <target state="translated">접미사 연산자 '에 대한 복잡한 표현식을 묶으려면</target>
        </trans-unit>
        <trans-unit id="5bb9a33127055a186c9841f0be6edc07e148df56" translate="yes" xml:space="preserve">
          <source>To enclose a set of &amp;lsquo;</source>
          <target state="translated">'의 집합을 묶으려면</target>
        </trans-unit>
        <trans-unit id="aad4f7e11ac2c1007d79990475b1ffc586453615" translate="yes" xml:space="preserve">
          <source>To ensure that the return value is always specified and absolute, use a value of &lt;code&gt;default&lt;/code&gt; for &lt;var&gt;inherit&lt;/var&gt;; this will resolve any unspecified or relative values by merging with the &lt;code&gt;default&lt;/code&gt; face (which is always completely specified).</source>
          <target state="translated">반환 값이 항상 지정되고 절대적으로 지정되도록하려면 &lt;var&gt;inherit&lt;/var&gt; 에 대해 &lt;code&gt;default&lt;/code&gt; 값을 사용하십시오 . 이것은 &lt;code&gt;default&lt;/code&gt; 면 (항상 완전히 지정됨) 과 병합하여 지정되지 않은 값이나 상대 값을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="e0c126d62e13c91e026ad9e86846f8ad4de3d634" translate="yes" xml:space="preserve">
          <source>To execute a command, Emacs first reads its arguments by calling &lt;code&gt;command-execute&lt;/code&gt; (see &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;). For commands written in Lisp, the &lt;code&gt;interactive&lt;/code&gt; specification says how to read the arguments. This may use the prefix argument (see &lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt;) or may read with prompting in the minibuffer (see &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minibuffers&lt;/a&gt;). For example, the command &lt;code&gt;find-file&lt;/code&gt; has an &lt;code&gt;interactive&lt;/code&gt; specification which says to read a file name using the minibuffer. The function body of &lt;code&gt;find-file&lt;/code&gt; does not use the minibuffer, so if you call &lt;code&gt;find-file&lt;/code&gt; as a function from Lisp code, you must supply the file name string as an ordinary Lisp function argument.</source>
          <target state="translated">명령을 실행하기 위해 Emacs는 먼저 &lt;code&gt;command-execute&lt;/code&gt; 를 호출하여 인수를 읽습니다 ( &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt; 참조 ). Lisp로 작성된 명령의 경우 &lt;code&gt;interactive&lt;/code&gt; 사양에 인수를 읽는 방법이 나와 있습니다. 이것은 접두사 인수를 사용하거나 ( &lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt; 참조) &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;미니 버퍼&lt;/a&gt; 에서 프롬프트로 읽을 수 있습니다 ( Minibuffers 참조 ). 예를 들어, 명령 &lt;code&gt;find-file&lt;/code&gt; 이 &lt;code&gt;interactive&lt;/code&gt; 미니 버퍼를 사용하여 파일 이름을 읽을 말한다 사양. &lt;code&gt;find-file&lt;/code&gt; 의 함수 본문은 미니 버퍼를 사용하지 않으므로 &lt;code&gt;find-file&lt;/code&gt; 을 호출하면Lisp 코드의 함수로 파일 이름 문자열을 일반 Lisp 함수 인수로 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="6566806b47a3aa9b7f3de92a2db0b971d64f96a5" translate="yes" xml:space="preserve">
          <source>To facilitate handling plists, this library makes liberal use of &lt;code&gt;cl-lib&lt;/code&gt; library (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/index.html#Top&quot;&gt;cl-lib&lt;/a&gt; in</source>
          <target state="translated">plist 처리를 용이하게하기 위해이 라이브러리는 &lt;code&gt;cl-lib&lt;/code&gt; 라이브러리를 자유롭게 사용합니다.&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/index.html#Top&quot;&gt; CL-LIB&lt;/a&gt; 의를</target>
        </trans-unit>
        <trans-unit id="998208339001fcc9501f4850da81e985257621f3" translate="yes" xml:space="preserve">
          <source>To facilitate handling plists, this library makes liberal use of &lt;code&gt;cl-lib&lt;/code&gt; library (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/cl/index.html#Top&quot;&gt;cl-lib&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943b21f8b9590e90a090aea3ca4bdaf4332a1e92" translate="yes" xml:space="preserve">
          <source>To facilitate support for window systems that support multiple selections, this function may also return a list of strings. In that case, the first string is used as the most recent kill, and all the other strings are pushed onto the kill ring, for easy access by &lt;code&gt;yank-pop&lt;/code&gt;.</source>
          <target state="translated">다중 선택을 지원하는 윈도우 시스템에 대한 지원을 용이하게하기 위해이 함수는 문자열 목록을 반환 할 수도 있습니다. 이 경우 첫 번째 문자열이 가장 최근의 킬로 사용되고 다른 모든 문자열은 킬 링으로 푸시되어 쉽게 액세스 할 수 있습니다. &lt;code&gt;yank-pop&lt;/code&gt; 으로 .</target>
        </trans-unit>
        <trans-unit id="c2d6ad27ab1b6fc479f12591a36ec3f7865428c9" translate="yes" xml:space="preserve">
          <source>To find multiline constructs reliably, you must either manually place the &lt;code&gt;font-lock-multiline&lt;/code&gt; property on the text before Font Lock mode looks at it, or use &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt;.</source>
          <target state="translated">여러 줄 구조를 안정적으로 찾으려면 글꼴 잠금 모드에서 텍스트를보기 전에 수동으로 &lt;code&gt;font-lock-multiline&lt;/code&gt; 속성을 텍스트에 배치하거나 &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="736c0fcb8de5bb8353a063e5781898cc0450f96a" translate="yes" xml:space="preserve">
          <source>To find out where your breakpoints are, use the</source>
          <target state="translated">중단 점이 어디에 있는지 확인하려면</target>
        </trans-unit>
        <trans-unit id="f460081de818da04e5a9cff694d9ecde40a8ee4d" translate="yes" xml:space="preserve">
          <source>To find the file, &lt;code&gt;load&lt;/code&gt; first looks for a file named</source>
          <target state="translated">파일, 찾으려면 &lt;code&gt;load&lt;/code&gt; 먼저 라는 이름의 파일을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="da338d47b276994da0478e188dcbe079feaf3afe" translate="yes" xml:space="preserve">
          <source>To force point to the end of the new output, no matter where it was previously, eliminate the variable &lt;code&gt;moving&lt;/code&gt; from the example and call &lt;code&gt;goto-char&lt;/code&gt; unconditionally. Note that this doesn&amp;rsquo;t necessarily move the window point. The default filter actually uses &lt;code&gt;insert-before-markers&lt;/code&gt; which moves all markers, including the window point. This may move unrelated markers, so it&amp;rsquo;s generally better to move the window point explicitly, or set its insertion type to &lt;code&gt;t&lt;/code&gt; (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;).</source>
          <target state="translated">이전에 있던 위치에 관계없이 새 출력의 끝을 강제로 가리 키려면 예제에서 &lt;code&gt;moving&lt;/code&gt; 하는 변수를 제거하고 무조건 &lt;code&gt;goto-char&lt;/code&gt; 를 호출 합니다. 이것이 반드시 창 지점을 이동시키는 것은 아닙니다. 기본 필터는 실제로 창 지점을 포함한 모든 마커를 이동 하는 &lt;code&gt;insert-before-markers&lt;/code&gt; 를 사용합니다. 관련없는 마커를 이동할 수 있으므로 일반적으로 창 지점을 명시 적으로 이동하거나 삽입 유형을 &lt;code&gt;t&lt;/code&gt; 로 설정하는 것이 좋습니다 ( &lt;a href=&quot;window-point#Window-Point&quot;&gt;창 지점&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4288c93e20156dd07221471369ed083de2003c77" translate="yes" xml:space="preserve">
          <source>To generate repeat events, successive mouse button presses must be at approximately the same screen position. The value of &lt;code&gt;double-click-fuzz&lt;/code&gt; specifies the maximum number of pixels the mouse may be moved (horizontally or vertically) between two successive clicks to make a double-click.</source>
          <target state="translated">반복 이벤트를 생성하려면 연속적인 마우스 버튼 누름이 거의 동일한 화면 위치에 있어야합니다. &lt;code&gt;double-click-fuzz&lt;/code&gt; 의 가치 번의 연속 클릭 사이에서 마우스를 이동 (수평 또는 수직)하여 두 번 클릭 할 수있는 최대 픽셀 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="780f4821e6554fc54824a572b385fa0fc600c6df" translate="yes" xml:space="preserve">
          <source>To generate repeat events, the number of milliseconds between successive button presses must be less than the value of &lt;code&gt;double-click-time&lt;/code&gt;. Setting &lt;code&gt;double-click-time&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; disables multi-click detection entirely. Setting it to &lt;code&gt;t&lt;/code&gt; removes the time limit; Emacs then detects multi-clicks by position only.</source>
          <target state="translated">반복 이벤트를 생성하려면 연속 버튼을 누르는 간격 (밀리 초)이 &lt;code&gt;double-click-time&lt;/code&gt; 값보다 작아야합니다 . 설정 &lt;code&gt;double-click-time&lt;/code&gt; 에 &lt;code&gt;nil&lt;/code&gt; 완전히 비활성화 멀티 클릭 감지. &lt;code&gt;t&lt;/code&gt; 로 설정 하면 시간 제한이 제거됩니다. 그러면 Emacs는 위치별로 만 다중 클릭을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="19d088bf54b936cef160191c2cebeed8a1d1ed35" translate="yes" xml:space="preserve">
          <source>To handle a SIGUSR1 signal, define an interactive function, and bind it to the &lt;code&gt;signal usr1&lt;/code&gt; event sequence:</source>
          <target state="translated">SIGUSR1 신호를 처리하려면 대화 형 함수를 정의하고 &lt;code&gt;signal usr1&lt;/code&gt; 이벤트 시퀀스에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="c32006c4ff4c766228037b6b2afe06d3f3a145af" translate="yes" xml:space="preserve">
          <source>To help debug programs, unrecognized &amp;lsquo;</source>
          <target state="translated">프로그램 디버그를 돕기 위해 인식 할 수없는 '</target>
        </trans-unit>
        <trans-unit id="3849d18d8fabe966dd35742de30de88b9eae3d6b" translate="yes" xml:space="preserve">
          <source>To help describe one form, we sometimes show another form that produces identical results. The exact equivalence of two forms is indicated with &amp;lsquo;</source>
          <target state="translated">한 양식을 설명하는 데 도움이되도록 동일한 결과를 생성하는 다른 양식을 표시하기도합니다. 두 형식의 정확한 등가는 '로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="fe6c6111fdf3fec951dcd98ca0836d457ab405fa" translate="yes" xml:space="preserve">
          <source>To help understand specifications.</source>
          <target state="translated">사양 이해를 돕기 위해.</target>
        </trans-unit>
        <trans-unit id="e7576433676549c25899233eb67d4f87d1a704bb" translate="yes" xml:space="preserve">
          <source>To illustrate some of the above, suppose that you have the line:</source>
          <target state="translated">위의 일부를 설명하기 위해 다음 줄이 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d9955b25ef22660ce84067f31b4afc415a9b0964" translate="yes" xml:space="preserve">
          <source>To illustrate the difference between &lt;code&gt;file-chase-links&lt;/code&gt; and &lt;code&gt;file-truename&lt;/code&gt;, suppose that</source>
          <target state="translated">&lt;code&gt;file-chase-links&lt;/code&gt; 와 &lt;code&gt;file-truename&lt;/code&gt; 의 차이점을 설명하기 위해 다음 과 같이 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d22f5aae492a50a5ddf46999ea08278e96a32b03" translate="yes" xml:space="preserve">
          <source>To illustrate the effect of &lt;code&gt;window-combination-resize&lt;/code&gt;, consider the following frame layout.</source>
          <target state="translated">&lt;code&gt;window-combination-resize&lt;/code&gt; 의 효과를 설명하려면 다음 프레임 레이아웃을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="090fd0dd48cab6913fa6cc0fdbb3061886ab5e87" translate="yes" xml:space="preserve">
          <source>To illustrate usage, here is a Lisp function that returns a list of the overlays that specify property &lt;var&gt;prop&lt;/var&gt; for the character at point:</source>
          <target state="translated">사용법을 설명하기 위해 다음은 캐릭터의 속성 &lt;var&gt;prop&lt;/var&gt; 을 지정하는 오버레이 목록을 반환하는 Lisp 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="9aa3dbb1b5573770c3cda95ee5fd660e4b6f1d60" translate="yes" xml:space="preserve">
          <source>To indicate clickability, add the &lt;code&gt;mouse-face&lt;/code&gt; text property to the text of the link; then Emacs will highlight the link when the mouse moves over it. In addition, you should define a tooltip or echo area message, using the &lt;code&gt;help-echo&lt;/code&gt; text property. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;. For instance, here is how Dired indicates that file names are clickable:</source>
          <target state="translated">클릭 가능성을 나타내려면 링크 텍스트에 &lt;code&gt;mouse-face&lt;/code&gt; 텍스트 속성을 추가합니다 . 그러면 Emacs는 마우스가 그 위로 이동할 때 링크를 강조 표시합니다. 또한 &lt;code&gt;help-echo&lt;/code&gt; text 속성을 사용하여 도구 설명 또는 에코 영역 메시지를 정의해야 합니다. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;특수 속성을&lt;/a&gt; 참조하십시오 . 예를 들어, Dired가 파일 이름을 클릭 할 수 있음을 나타내는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3a1dbfb3a0e34748a91329934ecf56b22e833a24" translate="yes" xml:space="preserve">
          <source>To inspect or modify Edebug&amp;rsquo;s instrumentation before it is used, set this variable to a function which takes one argument, an instrumented top-level form, and returns either the same or a replacement form, which Edebug will then use as the final result of instrumentation.</source>
          <target state="translated">Edebug의 계측을 사용하기 전에 검사하거나 수정하려면이 변수를 하나의 인수 인 계측 된 최상위 형식을 취하고 동일한 또는 대체 형식을 반환하는 함수로 설정하십시오. 그러면 Edebug가 계측의 최종 결과로 사용할 것입니다. .</target>
        </trans-unit>
        <trans-unit id="171f3d4271e887f0b4d6bc8015659001762bbfdf" translate="yes" xml:space="preserve">
          <source>To investigate a problem that happens in the middle of a program, one useful technique is to enter the debugger whenever a certain function is called. You can do this to the function in which the problem occurs, and then step through the function, or you can do this to a function called shortly before the problem, step quickly over the call to that function, and then step through its caller.</source>
          <target state="translated">프로그램 중간에서 발생하는 문제를 조사하기 위해 유용한 기술 중 하나는 특정 함수가 호출 될 때마다 디버거에 들어가는 것입니다. 문제가 발생한 함수에 대해이 작업을 수행 한 다음 함수를 단계별로 수행하거나 문제 직전에 호출 된 함수에 대해이 작업을 수행하고 해당 함수에 대한 호출을 빠르게 건너 뛴 다음 호출자를 단계별로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9c5055a6610fc9a3afc3c681376560eea1c90af" translate="yes" xml:space="preserve">
          <source>To invoke a recursive editing level, call the function &lt;code&gt;recursive-edit&lt;/code&gt;. This function contains the command loop; it also contains a call to &lt;code&gt;catch&lt;/code&gt; with tag &lt;code&gt;exit&lt;/code&gt;, which makes it possible to exit the recursive editing level by throwing to &lt;code&gt;exit&lt;/code&gt; (see &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt;). If you throw a value other than &lt;code&gt;t&lt;/code&gt;, then &lt;code&gt;recursive-edit&lt;/code&gt; returns normally to the function that called it. The command</source>
          <target state="translated">재귀 편집 레벨을 호출하려면 &lt;code&gt;recursive-edit&lt;/code&gt; 함수를 호출하십시오 . 이 함수는 명령 루프를 포함합니다. 또한 &lt;code&gt;exit&lt;/code&gt; 태그 를 사용하여 &lt;code&gt;catch&lt;/code&gt; 에 대한 호출이 포함되어있어 종료를 던져 재귀 편집 수준을 &lt;code&gt;exit&lt;/code&gt; ( &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt; 참조 ). 당신은 이외의 값 던질 경우 &lt;code&gt;t&lt;/code&gt; 다음, &lt;code&gt;recursive-edit&lt;/code&gt; 을 호출 한 함수에 일반적으로 반환합니다. 명령</target>
        </trans-unit>
        <trans-unit id="57679f9ec522a25d4f3a4eff83a4c6bab4a13c8e" translate="yes" xml:space="preserve">
          <source>To make</source>
          <target state="translated">만들다</target>
        </trans-unit>
        <trans-unit id="b28b8c078d49d61565091491fb61c804021a5b9f" translate="yes" xml:space="preserve">
          <source>To make Edebug properly instrument expressions that call macros, some extra care is needed. This subsection explains the details.</source>
          <target state="translated">Edebug가 매크로를 호출하는 표현식을 적절하게 계측하도록하려면 약간의주의가 필요합니다. 이 하위 섹션에서는 세부 정보를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e110967bcc187afa87061918c1137868844ccda5" translate="yes" xml:space="preserve">
          <source>To make a buffer-local binding for an Emacs customization variable, use &lt;code&gt;make-local-variable&lt;/code&gt; in the major mode command, not &lt;code&gt;make-variable-buffer-local&lt;/code&gt;. The latter function would make the variable local to every buffer in which it is subsequently set, which would affect buffers that do not use this mode. It is undesirable for a mode to have such global effects. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">Emacs 사용자 정의 변수에 대한 버퍼-로컬 바인딩을 &lt;code&gt;make-local-variable&lt;/code&gt; 려면 메이저 모드 명령에서 &lt;code&gt;make-variable-buffer-local&lt;/code&gt; 이 아닌 make- local-variable 을 사용하십시오 . 후자의 함수는 변수를 이후에 설정되는 모든 버퍼에 로컬로 만들어이 모드를 사용하지 않는 버퍼에 영향을줍니다. 모드가 이러한 전역 효과를 갖는 것은 바람직하지 않습니다. &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;버퍼 로컬 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54b4d66a91658eb38ae8d3816f21e38f37d89312" translate="yes" xml:space="preserve">
          <source>To make a multibuffer change group, call &lt;code&gt;prepare-change-group&lt;/code&gt; once for each buffer you want to cover, then use &lt;code&gt;nconc&lt;/code&gt; to combine the returned values, like this:</source>
          <target state="translated">&lt;code&gt;prepare-change-group&lt;/code&gt; 버퍼 변경 그룹을 만들 려면 처리하려는 각 버퍼에 대해 prepare-change-group을 한 번 호출 한 다음 &lt;code&gt;nconc&lt;/code&gt; 를 사용 하여 다음 과 같이 반환 된 값을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="42dd4afbb0436d09e3eed3fd88ecae2967293889" translate="yes" xml:space="preserve">
          <source>To make just a few elements optional, followed by non-optional elements, use &lt;code&gt;[&amp;amp;optional &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. To specify that several elements must all match or none, use &lt;code&gt;&amp;amp;optional
[&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">몇 가지 요소 만 선택적으로 만들고 비 선택적 요소로 만들려면 &lt;code&gt;[&amp;amp;optional &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; 하세요. 여러 요소가 모두 일치하거나 전혀 일치하지 않도록 지정하려면 &lt;code&gt;&amp;amp;optional [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; . &lt;code&gt;defun&lt;/code&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d823ee2f72dacdbb4f2dba2de9e92b6f561495a" translate="yes" xml:space="preserve">
          <source>To make the filter force the process buffer to be visible whenever new text arrives, you could insert a line like the following just before the &lt;code&gt;with-current-buffer&lt;/code&gt; construct:</source>
          <target state="translated">필터가 새 텍스트가 도착할 때마다 프로세스 버퍼가 보이도록 강제하려면 &lt;code&gt;with-current-buffer&lt;/code&gt; 구문 바로 앞에 다음과 같은 줄을 삽입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cde27adc42d5ce2a917b7e5753117c5b2eb6d70d" translate="yes" xml:space="preserve">
          <source>To make the link clickable, bind</source>
          <target state="translated">링크를 클릭 가능하게 만들려면</target>
        </trans-unit>
        <trans-unit id="eebdd90143c4ee3d9ff5ef4a53378de662d0d3f1" translate="yes" xml:space="preserve">
          <source>To model this agnosticism, the &lt;code&gt;jsonrpc&lt;/code&gt; library uses objects of a &lt;code&gt;jsonrpc-connection&lt;/code&gt; class, which represent a connection to a remote JSON endpoint (for details on Emacs&amp;rsquo;s object system, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/eieio/index.html#Top&quot;&gt;EIEIO&lt;/a&gt; in</source>
          <target state="translated">이 불가지론을 모델링하기 위해 &lt;code&gt;jsonrpc&lt;/code&gt; 라이브러리는 원격 JSON 엔드 포인트에 대한 연결을 나타내는 &lt;code&gt;jsonrpc-connection&lt;/code&gt; 클래스의 객체를 사용합니다 (Emacs의 객체 시스템에 대한 자세한 내용은 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/eieio/index.html#Top&quot;&gt;EIEIO&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="7c88235cf5465d829293a23c2825bc2add9e365c" translate="yes" xml:space="preserve">
          <source>To model this agnosticism, the &lt;code&gt;jsonrpc&lt;/code&gt; library uses objects of a &lt;code&gt;jsonrpc-connection&lt;/code&gt; class, which represent a connection to a remote JSON endpoint (for details on Emacs&amp;rsquo;s object system, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/eieio/index.html#Top&quot;&gt;EIEIO&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ee4e3a63fd1b81d7b8fceb19ec1049f1405ece" translate="yes" xml:space="preserve">
          <source>To move forward over all comments and whitespace following point, use &lt;code&gt;(forward-comment (buffer-size))&lt;/code&gt;. &lt;code&gt;(buffer-size)&lt;/code&gt; is a good argument to use, because the number of comments in the buffer cannot exceed that many.</source>
          <target state="translated">포인트 뒤의 모든 주석과 공백을 앞으로 이동하려면 &lt;code&gt;(forward-comment (buffer-size))&lt;/code&gt; 를 사용하십시오 . &lt;code&gt;(buffer-size)&lt;/code&gt; 는 사용하기에 좋은 인수입니다. 버퍼의 주석 수는 그 수를 초과 할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="3a64c88e283e2c164b1c2e9cd45b6b01b9a7ce69" translate="yes" xml:space="preserve">
          <source>To move point to the beginning of the buffer, write:</source>
          <target state="translated">포인트를 버퍼의 시작 부분으로 이동하려면 다음을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="0a7d809abf99f50235c3ecafab33d06be35faaf2" translate="yes" xml:space="preserve">
          <source>To operate temporarily on another buffer, put the &lt;code&gt;set-buffer&lt;/code&gt; within a &lt;code&gt;save-current-buffer&lt;/code&gt; form. Here, as an example, is a simplified version of the command &lt;code&gt;append-to-buffer&lt;/code&gt;:</source>
          <target state="translated">다른 버퍼에서 임시로 작동하려면 &lt;code&gt;set-buffer&lt;/code&gt; 를 &lt;code&gt;save-current-buffer&lt;/code&gt; 형식에 넣으십시오 . 다음은 &lt;code&gt;append-to-buffer&lt;/code&gt; 하는 명령의 단순화 된 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="840d374dedfec04c1cd90fbe525bf0978f4444a0" translate="yes" xml:space="preserve">
          <source>To perform the actual binding:</source>
          <target state="translated">실제 바인딩을 수행하려면 :</target>
        </trans-unit>
        <trans-unit id="644d37c71966a7999a7bcd75d495874fdf040fc1" translate="yes" xml:space="preserve">
          <source>To play sound using Emacs, use the function &lt;code&gt;play-sound&lt;/code&gt;. Only certain systems are supported; if you call &lt;code&gt;play-sound&lt;/code&gt; on a system which cannot really do the job, it gives an error.</source>
          <target state="translated">Emacs를 사용하여 사운드를 재생하려면 play &lt;code&gt;play-sound&lt;/code&gt; 함수를 사용하십시오 . 특정 시스템 만 지원됩니다. 실제로 작업을 수행 할 수없는 시스템에서 &lt;code&gt;play-sound&lt;/code&gt; 을 호출 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fd6aefb60a528939aa2c87de8c1c8c9781ea9512" translate="yes" xml:space="preserve">
          <source>To position the frame above or below a specific other frame use the function &lt;code&gt;frame-restack&lt;/code&gt; (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;).</source>
          <target state="translated">상기 기능 또는 특정의 다른 프레임을 사용 다음 프레임 위치 시키도록 &lt;code&gt;frame-restack&lt;/code&gt; (참조 &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;올리는 및 내림&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="438bfd54a1d9648a75ddbf6e0255651657c4562b" translate="yes" xml:space="preserve">
          <source>To present a consistent environment (see &lt;a href=&quot;intro-eval#Intro-Eval&quot;&gt;Intro Eval&lt;/a&gt;) to &lt;var&gt;body-forms&lt;/var&gt; (thus avoiding an evaluation error on match), if any of the sub-patterns let-binds a set of symbols, they &lt;em&gt;must&lt;/em&gt; all bind the same set of symbols.</source>
          <target state="translated">&lt;var&gt;body-forms&lt;/var&gt; 일관된 환경 ( &lt;a href=&quot;intro-eval#Intro-Eval&quot;&gt;Intro Eval&lt;/a&gt; 참조 )을 제공하려면 (따라서 일치시 평가 오류를 방지) 하위 패턴 중 하나가 기호 집합을 바인딩하는 경우 모두 동일한 기호 집합을 바인딩 &lt;em&gt;해야합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a13738b26455ab39383ce4949493d6c3c45ea8a7" translate="yes" xml:space="preserve">
          <source>To prevent conflicts among different libraries running in the same Emacs, each Lisp program that uses &lt;code&gt;make-temp-file&lt;/code&gt; should have its own &lt;var&gt;prefix&lt;/var&gt;. The number added to the end of &lt;var&gt;prefix&lt;/var&gt; distinguishes between the same application running in different Emacs jobs. Additional added characters permit a large number of distinct names even in one Emacs job.</source>
          <target state="translated">동일한 Emacs에서 실행되는 서로 다른 라이브러리 간의 충돌을 방지하려면 &lt;code&gt;make-temp-file&lt;/code&gt; 을 사용 하는 각 Lisp 프로그램에 자체 &lt;var&gt;prefix&lt;/var&gt; 가 있어야 합니다 . &lt;var&gt;prefix&lt;/var&gt; 끝에 추가 된 번호 는 서로 다른 Emacs 작업에서 실행중인 동일한 응용 프로그램을 구분합니다. 추가 된 문자는 하나의 Emacs 작업에서도 많은 고유 이름을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a8aa3b83dc8758c1842c778a847e228296a9a60d" translate="yes" xml:space="preserve">
          <source>To prevent the frame from disappearing completely from view, the variable &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; defines a lower opacity limit. If the value of the frame parameter is less than the value of this variable, Emacs uses the latter. By default, &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; is 20.</source>
          <target state="translated">프레임이보기에서 완전히 사라지는 것을 방지하기 위해 변수 &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; 는 낮은 불투명도 제한을 정의합니다. 프레임 매개 변수의 값이이 변수의 값보다 작 으면 Emacs는 후자를 사용합니다. 기본적으로 &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; 는 20입니다.</target>
        </trans-unit>
        <trans-unit id="77cb35a44c69e8ef332d334e39083a29ea134122" translate="yes" xml:space="preserve">
          <source>To process input events in addition to checking whether the user wants to quit, use the following function, which is available since Emacs 27.1.</source>
          <target state="translated">사용자가 종료를 원하는지 확인하는 것 외에 입력 이벤트를 처리하려면 Emacs 27.1부터 사용할 수있는 다음 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a3226813c7f19af25b5f4262861b3e27ad0d9e76" translate="yes" xml:space="preserve">
          <source>To produce a window configuration displaying multiple buffers (or different views of one and the same buffer) in one and the same display cycle, Lisp programmers will unavoidably have to write their own action functions. A few tricks listed below might help in this regard.</source>
          <target state="translated">하나의 동일한 디스플레이주기에서 여러 버퍼 (또는 하나와 동일한 버퍼의 다른보기)를 표시하는 창 구성을 생성하려면 Lisp 프로그래머는 불가피하게 자체 작업 함수를 작성해야합니다. 이와 관련하여 아래 나열된 몇 가지 트릭이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c48bec204f9101905ceec67fe17a3a4024809876" translate="yes" xml:space="preserve">
          <source>To profile Emacs at the level of its C code, you can build it using the</source>
          <target state="translated">C 코드 수준에서 Emacs를 프로파일 링하려면 다음을 사용하여 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f61369d2bd521bd23a19d33542ecfd86cf3a53cd" translate="yes" xml:space="preserve">
          <source>To put different properties on various parts of a string, you can construct each part with &lt;code&gt;propertize&lt;/code&gt; and then combine them with &lt;code&gt;concat&lt;/code&gt;:</source>
          <target state="translated">문자열의 여러 부분에 서로 다른 속성을 넣어, 당신은 각 부분을 구성 할 수 &lt;code&gt;propertize&lt;/code&gt; 을 한 후와 조합 &lt;code&gt;concat&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e6208b4ca41ece824897f98f3082d113ccbb91c6" translate="yes" xml:space="preserve">
          <source>To read a password to pass to another program, you can use the function &lt;code&gt;read-passwd&lt;/code&gt;.</source>
          <target state="translated">다른 프로그램에 전달할 암호를 읽으려면 read &lt;code&gt;read-passwd&lt;/code&gt; 함수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8cb9f4387c5f024af6136108f7794122d41c3c1f" translate="yes" xml:space="preserve">
          <source>To read user input of color names with completion, use &lt;code&gt;read-color&lt;/code&gt; (see &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;read-color&lt;/a&gt;).</source>
          <target state="translated">완성 된 색상 이름의 사용자 입력을 읽으려면 read &lt;code&gt;read-color&lt;/code&gt; 사용 하십시오 ( &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;read-color&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="212468440ed19612efe97b9dd5daacce36a0b01d" translate="yes" xml:space="preserve">
          <source>To record a matched substring for future reference with &amp;lsquo;</source>
          <target state="translated">'로 나중에 참조 할 수 있도록 일치하는 하위 문자열을 기록하려면</target>
        </trans-unit>
        <trans-unit id="0bdd9cdabe498c9fa805f2b32f8896d98542b23f" translate="yes" xml:space="preserve">
          <source>To remove all text properties from certain text, use &lt;code&gt;set-text-properties&lt;/code&gt; and specify &lt;code&gt;nil&lt;/code&gt; for the new property list.</source>
          <target state="translated">특정 텍스트에서 모든 텍스트 속성을 제거하려면 &lt;code&gt;set-text-properties&lt;/code&gt; 를 사용 하고 새 속성 목록에 &lt;code&gt;nil&lt;/code&gt; 을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="262aee16099c1d6f975de082cdad4bf0207b4131" translate="yes" xml:space="preserve">
          <source>To remove instrumentation from a definition, simply re-evaluate its definition in a way that does not instrument. There are two ways of evaluating forms that never instrument them: from a file with &lt;code&gt;load&lt;/code&gt;, and from the minibuffer with &lt;code&gt;eval-expression&lt;/code&gt; (</source>
          <target state="translated">정의에서 계측을 제거하려면 계측하지 않는 방식으로 정의를 다시 평가하면됩니다. 양식을 계측하지 않는 양식을 평가하는 방법에는 &lt;code&gt;load&lt;/code&gt; 가있는 파일 과 &lt;code&gt;eval-expression&lt;/code&gt; (</target>
        </trans-unit>
        <trans-unit id="518b3a6ff4b1dd998472452e5862d09ea2071bec" translate="yes" xml:space="preserve">
          <source>To remove the notification and its icon from the taskbar, use the following function:</source>
          <target state="translated">작업 표시 줄에서 알림 및 해당 아이콘을 제거하려면 다음 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="986e7ba4dae55e936ed49639ef1308a69784776e" translate="yes" xml:space="preserve">
          <source>To repeat only a few elements, use &lt;code&gt;[&amp;amp;rest &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. To specify several elements that must all match on every repetition, use &lt;code&gt;&amp;amp;rest [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;.</source>
          <target state="translated">몇 가지 요소 만 반복하려면 &lt;code&gt;[&amp;amp;rest &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; . 모든 반복에서 모두 일치해야하는 여러 요소를 지정하려면 &lt;code&gt;&amp;amp;rest [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f37d0de2b374a7d3098277c92a2faad3f25e2d4c" translate="yes" xml:space="preserve">
          <source>To replace a buffer in all the windows that display it, use &lt;code&gt;replace-buffer-in-windows&lt;/code&gt;, See &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;.</source>
          <target state="translated">버퍼를 표시하는 모든 창에서 버퍼를 교체하려면 replace &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; 하고 &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;버퍼 및 Windows를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b71ced9d558b0dec657ab6166aa5589e85ee2ed8" translate="yes" xml:space="preserve">
          <source>To represent shared or circular structures within a complex of Lisp objects, you can use the reader constructs &amp;lsquo;</source>
          <target state="translated">Lisp 객체의 복합체 내에서 공유 또는 순환 구조를 나타내려면 판독기 구성 '</target>
        </trans-unit>
        <trans-unit id="9ccbc7e730e6c305ddd9fa94c9a50e27baae42bd" translate="yes" xml:space="preserve">
          <source>To require the presence of a feature, call &lt;code&gt;require&lt;/code&gt; with the feature name as argument. &lt;code&gt;require&lt;/code&gt; looks in the global variable &lt;code&gt;features&lt;/code&gt; to see whether the desired feature has been provided already. If not, it loads the feature from the appropriate file. This file should call &lt;code&gt;provide&lt;/code&gt; at the top level to add the feature to &lt;code&gt;features&lt;/code&gt;; if it fails to do so, &lt;code&gt;require&lt;/code&gt; signals an error.</source>
          <target state="translated">기능의 존재를 요구하려면 기능 이름을 인수 &lt;code&gt;require&lt;/code&gt; 사용하여 require 를 호출 하십시오. &lt;code&gt;require&lt;/code&gt; 전역 변수의 외모 &lt;code&gt;features&lt;/code&gt; 원하는 기능을 이미 제공되었는지 여부를 확인합니다. 그렇지 않은 경우 해당 파일에서 기능을로드합니다. 이 파일은 기능에 &lt;code&gt;features&lt;/code&gt; 을 추가하기 위해 최상위 레벨에서 &lt;code&gt;provide&lt;/code&gt; 를 호출해야 합니다 . 그렇게하지 않으면 오류 신호를 &lt;code&gt;require&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="b49c5ac92d06c25038dd0041f112cb2235ef45cb" translate="yes" xml:space="preserve">
          <source>To resize or move an undecorated child frame with the mouse, special frame parameters (see &lt;a href=&quot;mouse-dragging-parameters#Mouse-Dragging-Parameters&quot;&gt;Mouse Dragging Parameters&lt;/a&gt;) have to be used. The internal border of a child frame, if present, can be used to resize the frame with the mouse, provided that frame has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-internal-border&lt;/code&gt; parameter. If set, the &lt;code&gt;snap-width&lt;/code&gt; parameter indicates the number of pixels where the frame &lt;em&gt;snaps&lt;/em&gt; at the respective edge or corner of its parent frame.</source>
          <target state="translated">마우스로 데코 레이팅되지 않은 자식 프레임의 크기를 조정하거나 이동하려면 특수 프레임 매개 변수 ( &lt;a href=&quot;mouse-dragging-parameters#Mouse-Dragging-Parameters&quot;&gt;마우스 끌기 매개 변수&lt;/a&gt; 참조 )를 사용해야합니다. 프레임에 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;code&gt;drag-internal-border&lt;/code&gt; 매개 변수 가있는 경우 자식 프레임의 내부 테두리 (있는 경우)를 사용하여 마우스로 프레임의 크기를 조정할 수 있습니다 . 설정된 경우 &lt;code&gt;snap-width&lt;/code&gt; 매개 변수는 프레임 이 상위 프레임의 각 가장자리 또는 모서리에서 &lt;em&gt;스냅&lt;/em&gt; 되는 픽셀 수를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="18a7f6aed1914a5b6307ab63f1dc2fc9de165b16" translate="yes" xml:space="preserve">
          <source>To restrict which files can trigger the evaluation, include a directory or an extension or both in &lt;var&gt;library&lt;/var&gt;. Only a file whose absolute true name (i.e., the name with all symbolic links chased out) matches all the given name components will match. In the following example,</source>
          <target state="translated">평가를 트리거 할 수있는 파일을 제한하려면 &lt;var&gt;library&lt;/var&gt; 디렉토리 나 확장자 또는 둘 다를 포함하십시오 . 절대 실제 이름 (즉, 모든 심볼릭 링크가 쫓겨 난 이름)이 주어진 이름 구성 요소와 일치하는 파일 만 일치합니다. 다음 예에서</target>
        </trans-unit>
        <trans-unit id="e5efed6dcee2953bf863d21107d285d0ef594649" translate="yes" xml:space="preserve">
          <source>To search for a user-specific configuration file, See &lt;a href=&quot;standard-file-names#Standard-File-Names&quot;&gt;Standard File Names&lt;/a&gt;, for the &lt;code&gt;locate-user-emacs-file&lt;/code&gt; function.</source>
          <target state="translated">사용자 별 구성 파일을 검색하려면 &lt;code&gt;locate-user-emacs-file&lt;/code&gt; 함수에 대한 &lt;a href=&quot;standard-file-names#Standard-File-Names&quot;&gt;표준 파일 이름을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cd663ab539881f4feaf727f97346e7999fc925c" translate="yes" xml:space="preserve">
          <source>To set up the link so that it obeys &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt;, you must either (1) apply a &lt;code&gt;follow-link&lt;/code&gt; text or overlay property to the link text, or (2) bind the &lt;code&gt;follow-link&lt;/code&gt; event to a keymap (which can be a major mode keymap or a local keymap specified via the &lt;code&gt;keymap&lt;/code&gt; text property). The value of the &lt;code&gt;follow-link&lt;/code&gt; property, or the binding for the &lt;code&gt;follow-link&lt;/code&gt; event, acts as a condition for the link action. This condition tells Emacs two things: the circumstances under which a</source>
          <target state="translated">그래서 링크를 설정하려면 그것이 순종 &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; , 당신이 중 하나 (1)가 적용해야 &lt;code&gt;follow-link&lt;/code&gt; 텍스트 또는 오버레이 재산 링크 텍스트, 또는 (2) 바인드 &lt;code&gt;follow-link&lt;/code&gt; 이벤트를 키맵 (주 모드 키맵 또는 &lt;code&gt;keymap&lt;/code&gt; 텍스트 속성을 통해 지정된 로컬 키맵 일 수 있음 ) &lt;code&gt;follow-link&lt;/code&gt; 속성 의 값 또는 &lt;code&gt;follow-link&lt;/code&gt; 이벤트에 대한 바인딩 은 링크 동작에 대한 조건으로 작동합니다. 이 조건은 Emacs에게 두 가지를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="a806bd89d05e5ed99e180df488566decb6e80bdf" translate="yes" xml:space="preserve">
          <source>To specify a preference for showing an arbitrary buffer, users should customize &lt;code&gt;display-buffer-base-action&lt;/code&gt;. An example of how users who prefer working with multiple frames would do that was given in the previous subsection. &lt;code&gt;display-buffer-alist&lt;/code&gt; should be reserved for displaying specific buffers in a specific way.</source>
          <target state="translated">임의의 버퍼를 표시하기위한 환경 설정을 지정하려면 사용자는 &lt;code&gt;display-buffer-base-action&lt;/code&gt; 을 사용자 정의해야 합니다 . 여러 프레임 작업을 선호하는 사용자가이를 수행하는 방법에 대한 예는 이전 하위 섹션에 나와 있습니다. &lt;code&gt;display-buffer-alist&lt;/code&gt; 는 특정 버퍼를 특정 방식으로 표시하기 위해 예약되어야합니다.</target>
        </trans-unit>
        <trans-unit id="31661002e5719518c1266de217cfbbc4e81acd41" translate="yes" xml:space="preserve">
          <source>To specify a relative time as a string, use numbers followed by units. For example:</source>
          <target state="translated">상대 시간을 문자열로 지정하려면 숫자 뒤에 단위를 사용하십시오. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="8e4cde9036cb2179b40c67210e0c1af5d8a06068" translate="yes" xml:space="preserve">
          <source>To specify optional arguments that may be omitted when a function is called, simply include the keyword &lt;code&gt;&amp;amp;optional&lt;/code&gt; before the optional arguments. To specify a list of zero or more extra arguments, include the keyword &lt;code&gt;&amp;amp;rest&lt;/code&gt; before one final argument.</source>
          <target state="translated">함수가 호출 될 때 생략 될 수있는 선택적 인수를 지정하려면 선택적 인수 앞에 &lt;code&gt;&amp;amp;optional&lt;/code&gt; 키워드를 포함하기 만하면됩니다 . 0 개 이상의 추가 인수 목록을 지정하려면 마지막 인수 하나 앞에 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 키워드를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="2bbf15b6662b15fa335d60b1b3abc35346beaeb7" translate="yes" xml:space="preserve">
          <source>To sum up, it&amp;rsquo;s best to avoid side-effecting references to &lt;var&gt;symbol&lt;/var&gt; patterns entirely, not only in &lt;var&gt;boolean-expression&lt;/var&gt; (in &lt;code&gt;guard&lt;/code&gt;), but also in &lt;var&gt;expr&lt;/var&gt; (in &lt;code&gt;let&lt;/code&gt;) and &lt;var&gt;function&lt;/var&gt; (in &lt;code&gt;pred&lt;/code&gt; and &lt;code&gt;app&lt;/code&gt;).</source>
          <target state="translated">요약하면 &lt;var&gt;boolean-expression&lt;/var&gt; ( &lt;code&gt;guard&lt;/code&gt; )뿐만 아니라 &lt;var&gt;expr&lt;/var&gt; (in &lt;code&gt;let&lt;/code&gt; ) 및 &lt;var&gt;function&lt;/var&gt; ( &lt;code&gt;pred&lt;/code&gt; 및 &lt;code&gt;app&lt;/code&gt; ) 에서도 &lt;var&gt;symbol&lt;/var&gt; 패턴에 대한 부작용 참조를 완전히 피하는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="eaa50c326ee36f629d6843a550096a8a4fb28140" translate="yes" xml:space="preserve">
          <source>To summarize, &lt;code&gt;load&lt;/code&gt; normally first tries the suffixes in the value of &lt;code&gt;(get-load-suffixes)&lt;/code&gt; and then those in &lt;code&gt;load-file-rep-suffixes&lt;/code&gt;. If &lt;var&gt;nosuffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it skips the former group, and if &lt;var&gt;must-suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it skips the latter group.</source>
          <target state="translated">요약하면 &lt;code&gt;load&lt;/code&gt; 는 일반적으로 먼저 &lt;code&gt;(get-load-suffixes)&lt;/code&gt; 값의 접미사를 시도한 다음 &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; 의 접미사를 시도합니다 . 경우 &lt;var&gt;nosuffix&lt;/var&gt; 가 비이다 &lt;code&gt;nil&lt;/code&gt; , 상기 전기를 생략 한 경우 &lt;var&gt;must-suffix&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; ,이 후자의 그룹을 건너.</target>
        </trans-unit>
        <trans-unit id="22c4f6949c89bada70cd6b6e7099ad9bd8af7b67" translate="yes" xml:space="preserve">
          <source>To summarize, when you click a button and then press it again right away, Emacs generates a down event and a click event for the first click, a double-down event when you press the button again, and finally either a double-click or a double-drag event.</source>
          <target state="translated">요약하면, 버튼을 클릭 한 다음 바로 다시 누르면 Emacs는 첫 번째 클릭에 대해 다운 이벤트와 클릭 이벤트를 생성하고, 버튼을 다시 누를 때 더블 다운 이벤트를 생성하고, 마지막으로 더블 클릭 또는 더블 드래그 이벤트.</target>
        </trans-unit>
        <trans-unit id="0259b7bf163bae7c35ad46edb62016a8f2722fab" translate="yes" xml:space="preserve">
          <source>To support programs with &amp;lsquo;</source>
          <target state="translated">'로 프로그램을 지원하려면</target>
        </trans-unit>
        <trans-unit id="bb43ee21f37f25de0e7c358b02b65048d8082204" translate="yes" xml:space="preserve">
          <source>To support this multitude of characters and scripts, Emacs closely follows the &lt;em&gt;Unicode Standard&lt;/em&gt;. The Unicode Standard assigns a unique number, called a &lt;em&gt;codepoint&lt;/em&gt;, to each and every character. The range of codepoints defined by Unicode, or the Unicode &lt;em&gt;codespace&lt;/em&gt;, is &lt;code&gt;0..#x10FFFF&lt;/code&gt; (in hexadecimal notation), inclusive. Emacs extends this range with codepoints in the range &lt;code&gt;#x110000..#x3FFFFF&lt;/code&gt;, which it uses for representing characters that are not unified with Unicode and &lt;em&gt;raw 8-bit bytes&lt;/em&gt; that cannot be interpreted as characters. Thus, a character codepoint in Emacs is a 22-bit integer.</source>
          <target state="translated">이 많은 문자와 스크립트를 지원하기 위해 Emacs는 &lt;em&gt;유니 코드 표준을&lt;/em&gt; 밀접하게 따릅니다 . 유니 코드 표준은 모든 문자에 &lt;em&gt;코드 포인트&lt;/em&gt; 라는 고유 번호를 할당합니다 . Unicode 또는 Unicode &lt;em&gt;codespace로&lt;/em&gt; 정의 된 코드 포인트의 범위 는 &lt;code&gt;0..#x10FFFF&lt;/code&gt; (16 진수 표기법)입니다. Emacs는 &lt;code&gt;#x110000..#x3FFFFF&lt;/code&gt; 범위의 코드 포인트로이 범위를 확장합니다.이 범위는 유니 코드로 통합 되지 않은 문자와 문자로 해석 할 수없는 &lt;em&gt;원시 8 비트 바이트&lt;/em&gt; 를 나타내는 데 사용됩니다. 따라서 Emacs의 문자 코드 포인트는 22 비트 정수입니다.</target>
        </trans-unit>
        <trans-unit id="16458f1bebc24520bce10ea3f0c1902c0ee010b9" translate="yes" xml:space="preserve">
          <source>To test for the availability of a given network feature, use &lt;code&gt;featurep&lt;/code&gt; like this:</source>
          <target state="translated">주어진 네트워크 기능의 가용성을 테스트하려면 다음 과 같이 &lt;code&gt;featurep&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="75c4c410d0f0be17ecc87dce7c1e6fb544adff14" translate="yes" xml:space="preserve">
          <source>To test for the availability of a given network option, use &lt;code&gt;featurep&lt;/code&gt; like this:</source>
          <target state="translated">주어진 네트워크 옵션의 가용성을 테스트하려면 다음 과 같은 &lt;code&gt;featurep&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="79622a3cda2b3ecf6d318ecb9e2c46b512eaa7c4" translate="yes" xml:space="preserve">
          <source>To test numbers for numerical equality, you should normally use &lt;code&gt;=&lt;/code&gt; instead of non-numeric comparison predicates like &lt;code&gt;eq&lt;/code&gt;, &lt;code&gt;eql&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt;. Distinct floating-point and large integer objects can be numerically equal. If you use &lt;code&gt;eq&lt;/code&gt; to compare them, you test whether they are the same &lt;em&gt;object&lt;/em&gt;; if you use &lt;code&gt;eql&lt;/code&gt; or &lt;code&gt;equal&lt;/code&gt;, you test whether their values are &lt;em&gt;indistinguishable&lt;/em&gt;. In contrast, &lt;code&gt;=&lt;/code&gt; uses numeric comparison, and sometimes returns &lt;code&gt;t&lt;/code&gt; when a non-numeric comparison would return &lt;code&gt;nil&lt;/code&gt; and vice versa. See &lt;a href=&quot;float-basics#Float-Basics&quot;&gt;Float Basics&lt;/a&gt;.</source>
          <target state="translated">수치 어떤지 테스트 번호에, 당신은 일반적으로 사용한다 &lt;code&gt;=&lt;/code&gt; 대신에 같은 숫자가 아닌 비교 술어의 &lt;code&gt;eq&lt;/code&gt; , &lt;code&gt;eql&lt;/code&gt; 과 &lt;code&gt;equal&lt;/code&gt; . 고유 한 부동 소수점 및 큰 정수 개체는 수치 적으로 동일 할 수 있습니다. &lt;code&gt;eq&lt;/code&gt; 를 사용 하여 비교하는 경우 동일한 &lt;em&gt;객체&lt;/em&gt; 인지 테스트합니다 . 당신이 사용하는 경우 &lt;code&gt;eql&lt;/code&gt; 또는 &lt;code&gt;equal&lt;/code&gt; 그 값이 있는지 여부, 당신은 테스트 &lt;em&gt;구별&lt;/em&gt; . 반대로 &lt;code&gt;=&lt;/code&gt; 는 숫자 비교를 사용하고 숫자 가 아닌 비교가 &lt;code&gt;nil&lt;/code&gt; 을 반환 할 때 &lt;code&gt;t&lt;/code&gt; 를 반환 하고 그 반대의 경우도 마찬가지입니다. &lt;a href=&quot;float-basics#Float-Basics&quot;&gt;Float 기초를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="58c9724eaae0dddeafa1103e3839ab337720bf8a" translate="yes" xml:space="preserve">
          <source>To test the signal handler, you can make Emacs send a signal to itself:</source>
          <target state="translated">시그널 핸들러를 테스트하기 위해 Emacs가 자신에게 시그널을 보내도록 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d541fd2770557362118e5f6c07a70dded650d464" translate="yes" xml:space="preserve">
          <source>To undefine a function name, use &lt;code&gt;fmakunbound&lt;/code&gt;. See &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;Function Cells&lt;/a&gt;.</source>
          <target state="translated">함수 이름을 정의 해제하려면 &lt;code&gt;fmakunbound&lt;/code&gt; 를 사용 하십시오 . &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;기능 셀을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da06ea0a734ee2c2a7864dbf4ddd97a92368e782" translate="yes" xml:space="preserve">
          <source>To understand how &lt;code&gt;sort-subr&lt;/code&gt; works, consider the whole accessible portion of the buffer as being divided into disjoint pieces called &lt;em&gt;sort records&lt;/em&gt;. The records may or may not be contiguous, but they must not overlap. A portion of each sort record (perhaps all of it) is designated as the sort key. Sorting rearranges the records in order by their sort keys.</source>
          <target state="translated">&lt;code&gt;sort-subr&lt;/code&gt; 의 작동 방식을 이해하려면 버퍼의 액세스 가능한 전체 부분을 &lt;em&gt;정렬 레코드&lt;/em&gt; 라는 분리 된 조각으로 나눈 것으로 간주하십시오 . 레코드는 연속적 일 수도 있고 아닐 수도 있지만 겹치지 않아야합니다. 각 정렬 레코드의 일부 (아마도 전부)가 정렬 키로 지정됩니다. 정렬은 정렬 키를 기준으로 레코드를 다시 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="2369e9a9d2001c0a7353eb74acfb8413016b4bf3" translate="yes" xml:space="preserve">
          <source>To understand how symbols are created in GNU Emacs Lisp, you must know how Lisp reads them. Lisp must ensure that it finds the same symbol every time it reads the same set of characters. Failure to do so would cause complete confusion.</source>
          <target state="translated">GNU Emacs Lisp에서 심볼이 어떻게 생성되는지 이해하려면 Lisp가 심볼을 읽는 방법을 알아야합니다. Lisp는 동일한 문자 집합을 읽을 때마다 동일한 기호를 찾도록해야합니다. 그렇게하지 않으면 완전히 혼동 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e55e6461cd675fc80b5fee01f1ae446554533bf" translate="yes" xml:space="preserve">
          <source>To understand how various functions work on integers, especially the bitwise operators (see &lt;a href=&quot;bitwise-operations#Bitwise-Operations&quot;&gt;Bitwise Operations&lt;/a&gt;), it is often helpful to view the numbers in their binary form.</source>
          <target state="translated">(참조 특히 비트 연산자, 정수에 작동하는 방법에 다양한 기능을 이해하기 위해 &lt;a href=&quot;bitwise-operations#Bitwise-Operations&quot;&gt;비트 연산을&lt;/a&gt; ), 그들의 바이너리 형식의 숫자를 볼 종종 도움이된다.</target>
        </trans-unit>
        <trans-unit id="fc079681c4b65e6d90dd1e389536549bc9a768a7" translate="yes" xml:space="preserve">
          <source>To undo the remapping of a command, remap it to &lt;code&gt;nil&lt;/code&gt;; e.g.,</source>
          <target state="translated">명령 다시 매핑을 취소하려면 명령을 &lt;code&gt;nil&lt;/code&gt; 로 다시 매핑하십시오 . 예 :</target>
        </trans-unit>
        <trans-unit id="29530c6c2dd76c8f54f545055dd1fd60f3663441" translate="yes" xml:space="preserve">
          <source>To use XBM format, specify &lt;code&gt;xbm&lt;/code&gt; as the image type. This image format doesn&amp;rsquo;t require an external library, so images of this type are always supported.</source>
          <target state="translated">XBM 형식을 사용하려면 &lt;code&gt;xbm&lt;/code&gt; 을 이미지 유형으로 지정 하십시오. 이 이미지 형식에는 외부 라이브러리가 필요하지 않으므로이 유형의 이미지는 항상 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c90e5b4b810c083c043fa42260d8d7b68463ffba" translate="yes" xml:space="preserve">
          <source>To use XPM format, specify &lt;code&gt;xpm&lt;/code&gt; as the image type. The additional image property &lt;code&gt;:color-symbols&lt;/code&gt; is also meaningful with the &lt;code&gt;xpm&lt;/code&gt; image type:</source>
          <target state="translated">XPM 형식을 사용하려면 &lt;code&gt;xpm&lt;/code&gt; 을 이미지 유형으로 지정 하십시오 . 추가 이미지 속성 &lt;code&gt;:color-symbols&lt;/code&gt; 는 &lt;code&gt;xpm&lt;/code&gt; 이미지 유형 에서도 의미가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c24abd143422a8b29a6b56bb2ea32cea6354b1c" translate="yes" xml:space="preserve">
          <source>To use a generator function, first call it normally, producing a &lt;em&gt;iterator&lt;/em&gt; object. An iterator is a specific instance of a generator. Then use &lt;code&gt;iter-next&lt;/code&gt; to retrieve values from this iterator. When there are no more values to pull from an iterator, &lt;code&gt;iter-next&lt;/code&gt; raises an &lt;code&gt;iter-end-of-sequence&lt;/code&gt; condition with the iterator&amp;rsquo;s final value.</source>
          <target state="translated">생성기 함수를 사용하려면 먼저 정상적으로 호출하여 &lt;em&gt;반복기&lt;/em&gt; 객체를 생성 합니다. 반복기는 생성기의 특정 인스턴스입니다. 그런 다음 &lt;code&gt;iter-next&lt;/code&gt; 를 사용 하여이 반복기에서 값을 검색합니다. 손잡이에 더 값이 반복자가 없으면, &lt;code&gt;iter-next&lt;/code&gt; 레이즈 &lt;code&gt;iter-end-of-sequence&lt;/code&gt; 반복기의 최종 값을 가진 상태.</target>
        </trans-unit>
        <trans-unit id="ea4124b3da5c67731463ccf1b3e77511f2d6c4b3" translate="yes" xml:space="preserve">
          <source>To use the change group, you must &lt;em&gt;activate&lt;/em&gt; it. You must do this before making any changes in the text of &lt;var&gt;buffer&lt;/var&gt;.</source>
          <target state="translated">변경 그룹을 사용하려면 &lt;em&gt;활성화&lt;/em&gt; 해야 합니다. &lt;var&gt;buffer&lt;/var&gt; 의 텍스트를 변경하기 전에이 작업을 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="366f54e2165c598704a8f316a19a801859e54301" translate="yes" xml:space="preserve">
          <source>To use this feature, pass a function as the &lt;var&gt;collection&lt;/var&gt; argument to &lt;code&gt;completing-read&lt;/code&gt;. The function &lt;code&gt;completing-read&lt;/code&gt; arranges to pass your completion function along to &lt;code&gt;try-completion&lt;/code&gt;, &lt;code&gt;all-completions&lt;/code&gt;, and other basic completion functions, which will then let your function do all the work.</source>
          <target state="translated">이 기능을 사용하려면 &lt;code&gt;completing-read&lt;/code&gt; 대한 &lt;var&gt;collection&lt;/var&gt; 인수로 함수를 전달합니다. . 함수 &lt;code&gt;completing-read&lt;/code&gt; 는 &lt;code&gt;try-completion&lt;/code&gt; , &lt;code&gt;all-completions&lt;/code&gt; 및 기타 기본 완료 함수에 완료 함수를 전달하도록 정렬 하여 함수가 모든 작업을 수행하도록합니다.</target>
        </trans-unit>
        <trans-unit id="2630b830cf5b0fb707be5f7aed3659fadcd107a1" translate="yes" xml:space="preserve">
          <source>To verify that these functions really are declared where &lt;code&gt;declare-function&lt;/code&gt; says they are, use &lt;code&gt;check-declare-file&lt;/code&gt; to check all &lt;code&gt;declare-function&lt;/code&gt; calls in one source file, or use &lt;code&gt;check-declare-directory&lt;/code&gt; check all the files in and under a certain directory.</source>
          <target state="translated">이러한 함수가 실제로 선언 된 위치에서 &lt;code&gt;declare-function&lt;/code&gt; 되었는지 확인하려면 다음을 사용하십시오. &lt;code&gt;check-declare-file&lt;/code&gt; 모두 확인하는 &lt;code&gt;declare-function&lt;/code&gt; 하나 개의 소스 파일에서 호출 또는 사용의 &lt;code&gt;check-declare-directory&lt;/code&gt; 와 일정에 따라 모든 파일을 확인 예배 규칙서.</target>
        </trans-unit>
        <trans-unit id="c4710a8005674ec4cd23bafc0b4ef95b67bdfe13" translate="yes" xml:space="preserve">
          <source>To write Lisp code that modifies the buffer without causing deactivation of the mark at the end of the command, bind &lt;code&gt;deactivate-mark&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; around the code that does the modification. For example:</source>
          <target state="translated">명령 끝에서 마크를 비활성화하지 않고 버퍼를 수정하는 Lisp 코드를 작성하려면 수정 을 수행하는 코드 주위에 &lt;code&gt;deactivate-mark&lt;/code&gt; 를 &lt;code&gt;nil&lt;/code&gt; 에 바인딩 합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="cd2f963109c7e2979bbf2eb19a4b013eb5c8a86d" translate="yes" xml:space="preserve">
          <source>To write a repeat-until loop, which will execute something on each iteration and then do the end-test, put the body followed by the end-test in a &lt;code&gt;progn&lt;/code&gt; as the first argument of &lt;code&gt;while&lt;/code&gt;, as shown here:</source>
          <target state="translated">반복 할 때마다 무언가를 실행 한 다음 최종 테스트를 수행하는 repeat-until 루프를 작성하려면 본문 다음에 end-test를 입력합니다. &lt;code&gt;progn&lt;/code&gt; 여기에 표시된대로 &lt;code&gt;while&lt;/code&gt; 의 첫 번째 인수로 progn .</target>
        </trans-unit>
        <trans-unit id="1ae25fb46929690898f12d07fcafa4a05f668f8b" translate="yes" xml:space="preserve">
          <source>Together with &lt;code&gt;funcall&lt;/code&gt;, described below, this function provides a means for invoking any Lisp-callable Emacs function, provided that its name is a pure</source>
          <target state="translated">아래에 설명 된 &lt;code&gt;funcall&lt;/code&gt; 과 함께이 함수는 Lisp 호출 가능 Emacs 함수를 호출하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6a4f61ffb13cdb137768f45464d2daf99cde6986" translate="yes" xml:space="preserve">
          <source>Together, the argument &lt;var&gt;writable&lt;/var&gt; and the variable &lt;code&gt;window-persistent-parameters&lt;/code&gt; specify which window parameters are saved by this function. See &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;.</source>
          <target state="translated">함께, &lt;var&gt;writable&lt;/var&gt; 인수 와 변수 &lt;code&gt;window-persistent-parameters&lt;/code&gt; parameters는 함께이 함수에 의해 저장되는 창 매개 지정합니다. &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;창 매개 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7605fce452fda76551ca8d398b1c77bfc7a07642" translate="yes" xml:space="preserve">
          <source>Toggle &lt;code&gt;print-circle&lt;/code&gt; for the frame at point.</source>
          <target state="translated">비녀장 &lt;code&gt;print-circle&lt;/code&gt; 지점에서 프레임의 인쇄 원 을 합니다.</target>
        </trans-unit>
        <trans-unit id="7c55ef57de1f86b340adc1ae9978aed2694c6f99" translate="yes" xml:space="preserve">
          <source>Toggle &lt;code&gt;print-gensym&lt;/code&gt; for the frame at point.</source>
          <target state="translated">비녀장 &lt;code&gt;print-gensym&lt;/code&gt; 지점에서 프레임에 대한 print-gensym 을 합니다.</target>
        </trans-unit>
        <trans-unit id="9bb33058d124e0b4f5e2ec57ad52470200037bf6" translate="yes" xml:space="preserve">
          <source>Toggle the display of local variables of the current stack frame.</source>
          <target state="translated">현재 스택 프레임의 로컬 변수 표시를 토글합니다.</target>
        </trans-unit>
        <trans-unit id="834b5ba59f87addb15585289c12709f144fa44fe" translate="yes" xml:space="preserve">
          <source>Toggle whether Edebug saves and restores the outside window configuration (&lt;code&gt;edebug-toggle-save-windows&lt;/code&gt;).</source>
          <target state="translated">Edebug가 외부 창 구성을 저장하고 복원할지 여부를 전환합니다 ( &lt;code&gt;edebug-toggle-save-windows&lt;/code&gt; )을 .</target>
        </trans-unit>
        <trans-unit id="c597b48773c11ca5b60e2e19b4de6ca7d28619e4" translate="yes" xml:space="preserve">
          <source>Toggle whether to disable the breakpoint near point (&lt;code&gt;edebug-toggle-disable-breakpoint&lt;/code&gt;). This command is mostly useful if the breakpoint is conditional and it would take some work to recreate the condition.</source>
          <target state="translated">중단 점 근처 지점을 비활성화할지 여부를 전환합니다 ( &lt;code&gt;edebug-toggle-disable-breakpoint&lt;/code&gt; ). 이 명령은 중단 점이 조건부이고 조건을 다시 만드는 데 약간의 작업이 필요한 경우에 주로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8cdb0b32730b410b96d6ace4a6845b0d689513ad" translate="yes" xml:space="preserve">
          <source>Tool Bar</source>
          <target state="translated">도구 모음</target>
        </trans-unit>
        <trans-unit id="a30c5a75556e7266b6a7a7426676a7295fee6d4e" translate="yes" xml:space="preserve">
          <source>Tool bars</source>
          <target state="translated">도구 모음</target>
        </trans-unit>
        <trans-unit id="f9b2611afc5ea6219aed5d32674f355502583ebc" translate="yes" xml:space="preserve">
          <source>Tools and tips for debugging Lisp programs.</source>
          <target state="translated">Lisp 프로그램 디버깅을위한 도구 및 팁.</target>
        </trans-unit>
        <trans-unit id="3b0bb3d1bfe1457152fb66a5bb31635d4f18e66e" translate="yes" xml:space="preserve">
          <source>Tooltip Mode is a minor mode that enables display of tooltips. Turning off this mode causes the tooltips be displayed in the echo area. On text-mode (a.k.a. &amp;ldquo;TTY&amp;rdquo;) frames, tooltips are always displayed in the echo area.</source>
          <target state="translated">도구 설명 모드는 도구 설명을 표시 할 수있는 보조 모드입니다. 이 모드를 끄면 툴팁이 에코 영역에 표시됩니다. 텍스트 모드 ( &quot;TTY&quot;라고도 함) 프레임에서 툴팁은 항상 에코 영역에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a70afb07bb2c328f7ecbd8aac33d2f8f158ba719" translate="yes" xml:space="preserve">
          <source>Tooltip display in Emacs.</source>
          <target state="translated">Emacs의 툴팁 표시.</target>
        </trans-unit>
        <trans-unit id="45a025dbf80367ecabf2143f1cd73cb481a93960" translate="yes" xml:space="preserve">
          <source>Tooltips</source>
          <target state="translated">Tooltips</target>
        </trans-unit>
        <trans-unit id="6131f75d59fc6314da7da55138ad69d66f13396d" translate="yes" xml:space="preserve">
          <source>Tooltips are displayed in special frames called tooltip frames, which have their own frame parameters (see &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;). Unlike other frames, the default parameters for tooltip frames are stored in a special variable.</source>
          <target state="translated">툴팁은 자신의 프레임 매개 변수를 (참조가 툴팁 프레임이라는 특별한 프레임에 표시되는 &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;프레임 매개 변수&lt;/a&gt; ). 다른 프레임과 달리 툴팁 프레임의 기본 매개 변수는 특수 변수에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="translated">Top</target>
        </trans-unit>
        <trans-unit id="4522bd3f0018af8e5af764927a8ad9045a9902bf" translate="yes" xml:space="preserve">
          <source>Total heap size, in &lt;var&gt;unit-size&lt;/var&gt; units.</source>
          <target state="translated">단위 &lt;var&gt;unit-size&lt;/var&gt; 단위의 총 힙 크기 입니다.</target>
        </trans-unit>
        <trans-unit id="3b454aaf9f48c5b83a0068be2bee977587791c2e" translate="yes" xml:space="preserve">
          <source>Trace Buffer</source>
          <target state="translated">추적 버퍼</target>
        </trans-unit>
        <trans-unit id="1965e014d48fda9cda201912038356860300b1e4" translate="yes" xml:space="preserve">
          <source>Trace slow or fast, stopping briefly at each stop point, or at each breakpoint.</source>
          <target state="translated">느리거나 빠르게 추적하고 각 중지 지점 또는 각 중단 점에서 잠시 중지합니다.</target>
        </trans-unit>
        <trans-unit id="f0221846a6146b35e28b360caa4f87ee111c61da" translate="yes" xml:space="preserve">
          <source>Trace: pause (normally one second) at each Edebug stop point (&lt;code&gt;edebug-trace-mode&lt;/code&gt;).</source>
          <target state="translated">추적 : 각 Edebug 중지 지점 ( &lt;code&gt;edebug-trace-mode&lt;/code&gt; ) 에서 일시 중지 (일반적으로 1 초) 합니다 .</target>
        </trans-unit>
        <trans-unit id="fd5b66d78a9aaf43b4e20b383511da4abfe465e6" translate="yes" xml:space="preserve">
          <source>Trailing garbage following expression</source>
          <target state="translated">표현식에 따른 후행 쓰레기</target>
        </trans-unit>
        <trans-unit id="b73db9e59eef72b8f146fa16407441bdbe6661b9" translate="yes" xml:space="preserve">
          <source>Transaction Queues</source>
          <target state="translated">트랜잭션 대기열</target>
        </trans-unit>
        <trans-unit id="9025315f1f26097cf9461da7a71d143959b8ada8" translate="yes" xml:space="preserve">
          <source>Transaction queues are implemented by means of a filter function. See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;.</source>
          <target state="translated">트랜잭션 큐는 필터 기능을 통해 구현됩니다. &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;필터 함수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc8e0d8b57a0330d7f87c52c4f7b798a0ffbf9fd" translate="yes" xml:space="preserve">
          <source>Transaction-based communication with subprocesses.</source>
          <target state="translated">Transaction-based communication with subprocesses.</target>
        </trans-unit>
        <trans-unit id="5358cdd26e65ec3d1c3846e60fc713ece9e8add2" translate="yes" xml:space="preserve">
          <source>Transferring focus from a child frame to an ancestor that is not its parent by clicking with the mouse in a visible part of that ancestor&amp;rsquo;s window may fail with some window-systems. You may have to click into the direct parent&amp;rsquo;s window-system window first.</source>
          <target state="translated">Transferring focus from a child frame to an ancestor that is not its parent by clicking with the mouse in a visible part of that ancestor&amp;rsquo;s window may fail with some window-systems. You may have to click into the direct parent&amp;rsquo;s window-system window first.</target>
        </trans-unit>
        <trans-unit id="f74140f05c439601037d62694ac18544a05778f6" translate="yes" xml:space="preserve">
          <source>Transferring text to and from other X clients.</source>
          <target state="translated">Transferring text to and from other X clients.</target>
        </trans-unit>
        <trans-unit id="e00a921183307d4af50564690b4a2589a590ab0f" translate="yes" xml:space="preserve">
          <source>Translate &lt;var&gt;rx-expr&lt;/var&gt; to a string regexp which is returned. If &lt;var&gt;no-group&lt;/var&gt; is absent or nil, bracket the result in a non-capturing group, &amp;lsquo;</source>
          <target state="translated">Translate &lt;var&gt;rx-expr&lt;/var&gt; to a string regexp which is returned. If &lt;var&gt;no-group&lt;/var&gt; is absent or nil, bracket the result in a non-capturing group, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="dec78bb5fcd9d91b9206fcdbcd067bc1dcd27453" translate="yes" xml:space="preserve">
          <source>Translate the &lt;var&gt;rx-expr&lt;/var&gt;s to a string regexp, as if they were the body of a &lt;code&gt;(seq &amp;hellip;)&lt;/code&gt; form. The &lt;code&gt;rx&lt;/code&gt; macro expands to a string constant, or, if &lt;code&gt;literal&lt;/code&gt; or &lt;code&gt;regexp&lt;/code&gt; forms are used, a Lisp expression that evaluates to a string.</source>
          <target state="translated">Translate the &lt;var&gt;rx-expr&lt;/var&gt; s to a string regexp, as if they were the body of a &lt;code&gt;(seq &amp;hellip;)&lt;/code&gt; form. The &lt;code&gt;rx&lt;/code&gt; macro expands to a string constant, or, if &lt;code&gt;literal&lt;/code&gt; or &lt;code&gt;regexp&lt;/code&gt; forms are used, a Lisp expression that evaluates to a string.</target>
        </trans-unit>
        <trans-unit id="939fecf7f46173f3030b9d459d3e82dd172f6277" translate="yes" xml:space="preserve">
          <source>Translation keymaps have the same structure as other keymaps, but are used differently: they specify translations to make while reading key sequences, rather than bindings for complete key sequences. As each key sequence is read, it is checked against each translation keymap. If one of the translation keymaps binds &lt;var&gt;k&lt;/var&gt; to a vector &lt;var&gt;v&lt;/var&gt;, then whenever &lt;var&gt;k&lt;/var&gt; appears as a sub-sequence &lt;em&gt;anywhere&lt;/em&gt; in a key sequence, that sub-sequence is replaced with the events in &lt;var&gt;v&lt;/var&gt;.</source>
          <target state="translated">Translation keymaps have the same structure as other keymaps, but are used differently: they specify translations to make while reading key sequences, rather than bindings for complete key sequences. As each key sequence is read, it is checked against each translation keymap. If one of the translation keymaps binds &lt;var&gt;k&lt;/var&gt; to a vector &lt;var&gt;v&lt;/var&gt; , then whenever &lt;var&gt;k&lt;/var&gt; appears as a sub-sequence &lt;em&gt;anywhere&lt;/em&gt; in a key sequence, that sub-sequence is replaced with the events in &lt;var&gt;v&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="44f128eb05a4342acee3e0ccfddac11b3f06bbdf" translate="yes" xml:space="preserve">
          <source>Translation keymaps take effect only after Emacs has decoded the keyboard input (via the input coding system specified by &lt;code&gt;keyboard-coding-system&lt;/code&gt;). See &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Terminal I/O Encoding&lt;/a&gt;.</source>
          <target state="translated">Translation keymaps take effect only after Emacs has decoded the keyboard input (via the input coding system specified by &lt;code&gt;keyboard-coding-system&lt;/code&gt; ). See &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Terminal I/O Encoding&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bde9fd0ecd53c93a87e48d5606241921a50aebf9" translate="yes" xml:space="preserve">
          <source>Translation of Characters</source>
          <target state="translated">Translation of Characters</target>
        </trans-unit>
        <trans-unit id="476faea9dbdcc537fe988fec82715790ec252000" translate="yes" xml:space="preserve">
          <source>Translation tables are used for conversion.</source>
          <target state="translated">Translation tables are used for conversion.</target>
        </trans-unit>
        <trans-unit id="77714c800f2a0d01cd00c46410503f6e7f5c222d" translate="yes" xml:space="preserve">
          <source>Transposition of Text</source>
          <target state="translated">Transposition of Text</target>
        </trans-unit>
        <trans-unit id="57baf272fcdf7e6813d05a0d4525ee0ba9c934ad" translate="yes" xml:space="preserve">
          <source>Trapping Errors</source>
          <target state="translated">Trapping Errors</target>
        </trans-unit>
        <trans-unit id="8432711a6287d81e6dc0107d33da390800119952" translate="yes" xml:space="preserve">
          <source>Trapping errors with Edebug.</source>
          <target state="translated">Trapping errors with Edebug.</target>
        </trans-unit>
        <trans-unit id="3f6e9a5cb83002b8d8e4f89b225b1358f0baee53" translate="yes" xml:space="preserve">
          <source>Treat each other with respect</source>
          <target state="translated">Treat each other with respect</target>
        </trans-unit>
        <trans-unit id="0d94209a1de787a06dc2b518db5a26e50a92924c" translate="yes" xml:space="preserve">
          <source>Treating a byte sequence as unibyte or multi.</source>
          <target state="translated">Treating a byte sequence as unibyte or multi.</target>
        </trans-unit>
        <trans-unit id="f68bae276652515d4de24b004e58e392d961d7b9" translate="yes" xml:space="preserve">
          <source>Trig, exponential and logarithmic functions.</source>
          <target state="translated">Trig, exponential and logarithmic functions.</target>
        </trans-unit>
        <trans-unit id="bae275226ca95f5a2e345e5ae0bf461938409bba" translate="yes" xml:space="preserve">
          <source>Truenames</source>
          <target state="translated">Truenames</target>
        </trans-unit>
        <trans-unit id="59f6a9fc2fffb15b78c0b81473cdfd56174958cf" translate="yes" xml:space="preserve">
          <source>Truncation</source>
          <target state="translated">Truncation</target>
        </trans-unit>
        <trans-unit id="4f4ba6582c51838bdd028085a979c4e9964d63d8" translate="yes" xml:space="preserve">
          <source>Trying this with the new, modified form above in a configuration that does not show</source>
          <target state="translated">Trying this with the new, modified form above in a configuration that does not show</target>
        </trans-unit>
        <trans-unit id="87a8b6ec68b23732e7a1115a2e3fe743debb751e" translate="yes" xml:space="preserve">
          <source>Two Lisp objects are the same, as keys, if they are equal according to &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">Two Lisp objects are the same, as keys, if they are equal according to &lt;code&gt;equal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e3b64e804122785994f06558cf886f5f08edf64" translate="yes" xml:space="preserve">
          <source>Two alternatives: renaming the old file or copying it.</source>
          <target state="translated">Two alternatives: renaming the old file or copying it.</target>
        </trans-unit>
        <trans-unit id="900115902bb3ee3eacd450cde6022ead295d4b57" translate="yes" xml:space="preserve">
          <source>Two dashed lines with a 3D raised appearance.</source>
          <target state="translated">Two dashed lines with a 3D raised appearance.</target>
        </trans-unit>
        <trans-unit id="078c40a10f9782638729ef5c4fa93a5a757baf2c" translate="yes" xml:space="preserve">
          <source>Two dashed lines with a 3D sunken appearance.</source>
          <target state="translated">Two dashed lines with a 3D sunken appearance.</target>
        </trans-unit>
        <trans-unit id="276e80b5a218e2e63286157ede2fef9ed3f62b00" translate="yes" xml:space="preserve">
          <source>Two distinct markers are considered &lt;code&gt;equal&lt;/code&gt; (even though not &lt;code&gt;eq&lt;/code&gt;) to each other if they have the same position and buffer, or if they both point nowhere.</source>
          <target state="translated">Two distinct markers are considered &lt;code&gt;equal&lt;/code&gt; (even though not &lt;code&gt;eq&lt;/code&gt; ) to each other if they have the same position and buffer, or if they both point nowhere.</target>
        </trans-unit>
        <trans-unit id="d1f7d0d088985dc7d823ec171ca809b396c7a10a" translate="yes" xml:space="preserve">
          <source>Two events of the same type are equivalent where key bindings are concerned; thus, they always run the same command. That does not necessarily mean they do the same things, however, as some commands look at the whole event to decide what to do. For example, some commands use the location of a mouse event to decide where in the buffer to act.</source>
          <target state="translated">Two events of the same type are equivalent where key bindings are concerned; thus, they always run the same command. That does not necessarily mean they do the same things, however, as some commands look at the whole event to decide what to do. For example, some commands use the location of a mouse event to decide where in the buffer to act.</target>
        </trans-unit>
        <trans-unit id="b4781945d76820f5582c1252f5928ec31da5e039" translate="yes" xml:space="preserve">
          <source>Two functions are specifically provided for adding elements to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; and removing elements from it.</source>
          <target state="translated">Two functions are specifically provided for adding elements to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; and removing elements from it.</target>
        </trans-unit>
        <trans-unit id="09c677640ac11fca59db4aeaf6a01fa851a98022" translate="yes" xml:space="preserve">
          <source>Two functions modify lists that are the values of variables.</source>
          <target state="translated">Two functions modify lists that are the values of variables.</target>
        </trans-unit>
        <trans-unit id="64b110ffe33ad523c38c09aea216906feb5f0461" translate="yes" xml:space="preserve">
          <source>Two lines with a 3D raised appearance.</source>
          <target state="translated">Two lines with a 3D raised appearance.</target>
        </trans-unit>
        <trans-unit id="a2d7be84e660c9fc4b82fde08bacf6b24faadb5f" translate="yes" xml:space="preserve">
          <source>Two lines with a 3D sunken appearance.</source>
          <target state="translated">Two lines with a 3D sunken appearance.</target>
        </trans-unit>
        <trans-unit id="c06e2850d5b49bddb3395c2341d9d3e3816b11e2" translate="yes" xml:space="preserve">
          <source>Two other action functions are described in their proper sections&amp;mdash;&lt;code&gt;display-buffer-in-side-window&lt;/code&gt; (see &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Displaying Buffers in Side Windows&lt;/a&gt;) and &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">Two other action functions are described in their proper sections&amp;mdash; &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; (see &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Displaying Buffers in Side Windows&lt;/a&gt;) and &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="95a90e7310bb1b6e635f813931f512d86ab08031" translate="yes" xml:space="preserve">
          <source>Two other constructs likewise evaluate a series of forms but return different values:</source>
          <target state="translated">Two other constructs likewise evaluate a series of forms but return different values:</target>
        </trans-unit>
        <trans-unit id="bdd6d7f1d69bc7abceb42a042e581e1002b8ba55" translate="yes" xml:space="preserve">
          <source>Two special theme names are disallowed (using them causes an error): &lt;code&gt;user&lt;/code&gt; is a dummy theme that stores the user&amp;rsquo;s direct customization settings, and &lt;code&gt;changed&lt;/code&gt; is a dummy theme that stores changes made outside of the Customize system.</source>
          <target state="translated">Two special theme names are disallowed (using them causes an error): &lt;code&gt;user&lt;/code&gt; is a dummy theme that stores the user&amp;rsquo;s direct customization settings, and &lt;code&gt;changed&lt;/code&gt; is a dummy theme that stores changes made outside of the Customize system.</target>
        </trans-unit>
        <trans-unit id="f6b8d7a1f84068dcc928473f4bb4df2868788137" translate="yes" xml:space="preserve">
          <source>Two structures (see</source>
          <target state="translated">Two structures (see</target>
        </trans-unit>
        <trans-unit id="4c02ddd9ae4a5e67609618883fb3b0c4bbb927de" translate="yes" xml:space="preserve">
          <source>Two symbols to avoid are &lt;code&gt;t&lt;/code&gt;, which behaves like &lt;code&gt;_&lt;/code&gt; (above) and is deprecated, and &lt;code&gt;nil&lt;/code&gt;, which signals an error. Likewise, it makes no sense to bind keyword symbols (see &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;).</source>
          <target state="translated">Two symbols to avoid are &lt;code&gt;t&lt;/code&gt; , which behaves like &lt;code&gt;_&lt;/code&gt; (above) and is deprecated, and &lt;code&gt;nil&lt;/code&gt; , which signals an error. Likewise, it makes no sense to bind keyword symbols (see &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="16985e22324ae4be5cd933afda373600250e566f" translate="yes" xml:space="preserve">
          <source>Two variables, &lt;code&gt;kept-old-versions&lt;/code&gt; and &lt;code&gt;kept-new-versions&lt;/code&gt;, determine which backup versions should be kept. This function keeps those versions by excluding them from the &lt;small&gt;CDR&lt;/small&gt; of the value. See &lt;a href=&quot;numbered-backups#Numbered-Backups&quot;&gt;Numbered Backups&lt;/a&gt;.</source>
          <target state="translated">Two variables, &lt;code&gt;kept-old-versions&lt;/code&gt; and &lt;code&gt;kept-new-versions&lt;/code&gt; , determine which backup versions should be kept. This function keeps those versions by excluding them from the &lt;small&gt;CDR&lt;/small&gt; of the value. See &lt;a href=&quot;numbered-backups#Numbered-Backups&quot;&gt;Numbered Backups&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fd2d7ad2a3cce3a9b95cfd11a8bcd35c7023c0f3" translate="yes" xml:space="preserve">
          <source>Two ways a marker can relocate when you insert where it points.</source>
          <target state="translated">Two ways a marker can relocate when you insert where it points.</target>
        </trans-unit>
        <trans-unit id="a59d7b7ab83add791ccaa6844d61e665eb13b934" translate="yes" xml:space="preserve">
          <source>Type Descriptors</source>
          <target state="translated">Type Descriptors</target>
        </trans-unit>
        <trans-unit id="115fb513abcf93f79ab99094dfb28657b17a527a" translate="yes" xml:space="preserve">
          <source>Type Keywords</source>
          <target state="translated">Type Keywords</target>
        </trans-unit>
        <trans-unit id="871ed8af7087eb9d57bbb752007d4585dcd2cca0" translate="yes" xml:space="preserve">
          <source>Type Predicates</source>
          <target state="translated">Type Predicates</target>
        </trans-unit>
        <trans-unit id="b6bbb849584fc733097de838d310739c3cdb7cd2" translate="yes" xml:space="preserve">
          <source>Type Predicates for Numbers</source>
          <target state="translated">Type Predicates for Numbers</target>
        </trans-unit>
        <trans-unit id="048b7bb2912e3402740f919c5dfbbdfb7a4761cb" translate="yes" xml:space="preserve">
          <source>Type alias: &lt;strong&gt;emacs_limb_t&lt;/strong&gt;</source>
          <target state="translated">Type alias: &lt;strong&gt;emacs_limb_t&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2bca6250f5a4bae7d8d26caddc5f558438c3e69" translate="yes" xml:space="preserve">
          <source>Types found in all Lisp systems.</source>
          <target state="translated">Types found in all Lisp systems.</target>
        </trans-unit>
        <trans-unit id="592fd9a1b2a71f0d04b169ff7f60f6f55ae838dd" translate="yes" xml:space="preserve">
          <source>Types specific to Emacs.</source>
          <target state="translated">Types specific to Emacs.</target>
        </trans-unit>
        <trans-unit id="d0833b0f443685c0ed11621e61c9b07b86c24e54" translate="yes" xml:space="preserve">
          <source>Typical values for &lt;var&gt;path&lt;/var&gt; are &lt;code&gt;exec-path&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;) when looking for executable programs, or &lt;code&gt;load-path&lt;/code&gt; (see &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;) when looking for Lisp files. If &lt;var&gt;filename&lt;/var&gt; is absolute, &lt;var&gt;path&lt;/var&gt; has no effect, but the suffixes in &lt;var&gt;suffixes&lt;/var&gt; are still tried.</source>
          <target state="translated">Typical values for &lt;var&gt;path&lt;/var&gt; are &lt;code&gt;exec-path&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;) when looking for executable programs, or &lt;code&gt;load-path&lt;/code&gt; (see &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;) when looking for Lisp files. If &lt;var&gt;filename&lt;/var&gt; is absolute, &lt;var&gt;path&lt;/var&gt; has no effect, but the suffixes in &lt;var&gt;suffixes&lt;/var&gt; are still tried.</target>
        </trans-unit>
        <trans-unit id="f5458a15564f1c431c22949b2b4273c2314398c0" translate="yes" xml:space="preserve">
          <source>Typically grave accent and apostrophe in the format translate to matching curved quotes, e.g.,</source>
          <target state="translated">Typically grave accent and apostrophe in the format translate to matching curved quotes, e.g.,</target>
        </trans-unit>
        <trans-unit id="d914284cca0cf58ff03339bd63ddccef1dba0681" translate="yes" xml:space="preserve">
          <source>Typically, &lt;var&gt;body&lt;/var&gt; rewrites the invoked pattern to use more basic patterns. Although all patterns eventually reduce to core patterns, &lt;code&gt;body&lt;/code&gt; need not use core patterns straight away. The following example defines two patterns, named &lt;code&gt;less-than&lt;/code&gt; and &lt;code&gt;integer-less-than&lt;/code&gt;.</source>
          <target state="translated">Typically, &lt;var&gt;body&lt;/var&gt; rewrites the invoked pattern to use more basic patterns. Although all patterns eventually reduce to core patterns, &lt;code&gt;body&lt;/code&gt; need not use core patterns straight away. The following example defines two patterns, named &lt;code&gt;less-than&lt;/code&gt; and &lt;code&gt;integer-less-than&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f86e865bcb97dcef7ef8622e26dcb3c0900725b1" translate="yes" xml:space="preserve">
          <source>Typically, grave accents and apostrophes are treated specially in documentation strings and diagnostic messages, and translate to matching single quotation marks (also called &amp;ldquo;curved quotes&amp;rdquo;). For example, the documentation string</source>
          <target state="translated">Typically, grave accents and apostrophes are treated specially in documentation strings and diagnostic messages, and translate to matching single quotation marks (also called &amp;ldquo;curved quotes&amp;rdquo;). For example, the documentation string</target>
        </trans-unit>
        <trans-unit id="46ca480785d69ee167efc4e08e708904c7e9a5cd" translate="yes" xml:space="preserve">
          <source>Typically, the display routines run by &lt;code&gt;display-buffer&lt;/code&gt; will set the &lt;code&gt;quit-restore&lt;/code&gt; window parameter correctly. It&amp;rsquo;s also possible to set it manually, using the following code for displaying &lt;var&gt;buffer&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;:</source>
          <target state="translated">Typically, the display routines run by &lt;code&gt;display-buffer&lt;/code&gt; will set the &lt;code&gt;quit-restore&lt;/code&gt; window parameter correctly. It&amp;rsquo;s also possible to set it manually, using the following code for displaying &lt;var&gt;buffer&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="bc066e01c03d97313b8c0f88f2923124a6ca0222" translate="yes" xml:space="preserve">
          <source>Typically, when you invoke &lt;code&gt;delq&lt;/code&gt;, you should use the return value by assigning it to the variable which held the original list. The reason for this is explained below.</source>
          <target state="translated">Typically, when you invoke &lt;code&gt;delq&lt;/code&gt; , you should use the return value by assigning it to the variable which held the original list. The reason for this is explained below.</target>
        </trans-unit>
        <trans-unit id="68436902c83b43b911b94e78cef30b2a838179e9" translate="yes" xml:space="preserve">
          <source>Typically, you define an ewoc with &lt;code&gt;ewoc-create&lt;/code&gt;, and then pass the resulting ewoc structure to other functions in the Ewoc package to build nodes within it, and display it in the buffer. Once it is displayed in the buffer, other functions determine the correspondence between buffer positions and nodes, move point from one node&amp;rsquo;s textual representation to another, and so forth. See &lt;a href=&quot;abstract-display-functions#Abstract-Display-Functions&quot;&gt;Abstract Display Functions&lt;/a&gt;.</source>
          <target state="translated">Typically, you define an ewoc with &lt;code&gt;ewoc-create&lt;/code&gt; , and then pass the resulting ewoc structure to other functions in the Ewoc package to build nodes within it, and display it in the buffer. Once it is displayed in the buffer, other functions determine the correspondence between buffer positions and nodes, move point from one node&amp;rsquo;s textual representation to another, and so forth. See &lt;a href=&quot;abstract-display-functions#Abstract-Display-Functions&quot;&gt;Abstract Display Functions&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5614fd83d7c12176ea9d23d0a9a55af15cb1297f" translate="yes" xml:space="preserve">
          <source>Typing</source>
          <target state="translated">Typing</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="d5bbff0823236d5bac754929f8481e9cb4c8d098" translate="yes" xml:space="preserve">
          <source>U+&lt;var&gt;10ffff&lt;/var&gt;</source>
          <target state="translated">U+&lt;var&gt;10ffff&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e91bef77f8609fb9bf50d4fbfdf4276ec072a927" translate="yes" xml:space="preserve">
          <source>UBA</source>
          <target state="translated">UBA</target>
        </trans-unit>
        <trans-unit id="d3fc3161813ba3f0de61150b594950ca9e11b667" translate="yes" xml:space="preserve">
          <source>UCD</source>
          <target state="translated">UCD</target>
        </trans-unit>
        <trans-unit id="8118daf9c86a705bf6c301c185dc8d3b5d7d605a" translate="yes" xml:space="preserve">
          <source>UDP network connections.</source>
          <target state="translated">UDP network connections.</target>
        </trans-unit>
        <trans-unit id="d946adf52a4783929f122d341b29ac0fe188371c" translate="yes" xml:space="preserve">
          <source>UID</source>
          <target state="translated">UID</target>
        </trans-unit>
        <trans-unit id="11a66854c0ed7fd7fbaf5a561663c5dc867c9f19" translate="yes" xml:space="preserve">
          <source>UP</source>
          <target state="translated">UP</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="29d0b50fb5f46ed9e73d295c4368c7e33419a958" translate="yes" xml:space="preserve">
          <source>Undefined color</source>
          <target state="translated">Undefined color</target>
        </trans-unit>
        <trans-unit id="9ebb1b34bc4bd2e2a22ba2788411fe72f978b3d9" translate="yes" xml:space="preserve">
          <source>Under Emacs Lisp&amp;rsquo;s default dynamic scoping rule (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;), the value cell stores the variable&amp;rsquo;s current (local or global) value. Note that an unassigned value cell is &lt;em&gt;not&lt;/em&gt; the same as having &lt;code&gt;nil&lt;/code&gt; in the value cell. The symbol &lt;code&gt;nil&lt;/code&gt; is a Lisp object and can be the value of a variable, just as any other object can be; but it is still a value. If a variable is void, trying to evaluate the variable signals a &lt;code&gt;void-variable&lt;/code&gt; error, instead of returning a value.</source>
          <target state="translated">Under Emacs Lisp&amp;rsquo;s default dynamic scoping rule (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;), the value cell stores the variable&amp;rsquo;s current (local or global) value. Note that an unassigned value cell is &lt;em&gt;not&lt;/em&gt; the same as having &lt;code&gt;nil&lt;/code&gt; in the value cell. The symbol &lt;code&gt;nil&lt;/code&gt; is a Lisp object and can be the value of a variable, just as any other object can be; but it is still a value. If a variable is void, trying to evaluate the variable signals a &lt;code&gt;void-variable&lt;/code&gt; error, instead of returning a value.</target>
        </trans-unit>
        <trans-unit id="0ec307772aa57918876ae8b715b7f379621b832f" translate="yes" xml:space="preserve">
          <source>Under X, Emacs uses the Motif window manager hints to turn off decorations. Some window managers may not honor these hints.</source>
          <target state="translated">Under X, Emacs uses the Motif window manager hints to turn off decorations. Some window managers may not honor these hints.</target>
        </trans-unit>
        <trans-unit id="ed8dca9e818d8bcbdcca4662863fb8e87cf60ce5" translate="yes" xml:space="preserve">
          <source>Under dynamic binding, this macro effectively makes &lt;code&gt;lambda&lt;/code&gt; forms self-quoting: evaluating a form whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;lambda&lt;/code&gt; yields the form itself:</source>
          <target state="translated">Under dynamic binding, this macro effectively makes &lt;code&gt;lambda&lt;/code&gt; forms self-quoting: evaluating a form whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;lambda&lt;/code&gt; yields the form itself:</target>
        </trans-unit>
        <trans-unit id="ba85f5add6b67e44d47f7751fb0f3c82778ea03f" translate="yes" xml:space="preserve">
          <source>Under some circumstances, a command can use a minibuffer even if there is an active minibuffer; such a minibuffer is called a &lt;em&gt;recursive minibuffer&lt;/em&gt;. The first minibuffer is named &amp;lsquo;</source>
          <target state="translated">Under some circumstances, a command can use a minibuffer even if there is an active minibuffer; such a minibuffer is called a &lt;em&gt;recursive minibuffer&lt;/em&gt;. The first minibuffer is named &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="11b91dc369c91068c73dea6e6dc80ebad323e8f7" translate="yes" xml:space="preserve">
          <source>Under some circumstances, if the number of images in the cache grows too large, the actual eviction delay may be shorter than this.</source>
          <target state="translated">Under some circumstances, if the number of images in the cache grows too large, the actual eviction delay may be shorter than this.</target>
        </trans-unit>
        <trans-unit id="11eded0aaaba20c27a228c4aa613b3399f7491e9" translate="yes" xml:space="preserve">
          <source>Under the hood, there are two kinds of integers&amp;mdash;small integers, called &lt;em&gt;fixnums&lt;/em&gt;, and large integers, called &lt;em&gt;bignums&lt;/em&gt;.</source>
          <target state="translated">Under the hood, there are two kinds of integers&amp;mdash;small integers, called &lt;em&gt;fixnums&lt;/em&gt;, and large integers, called &lt;em&gt;bignums&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="c9739fdf443679c0e0ff4f5e723c1c33accba182" translate="yes" xml:space="preserve">
          <source>Under the optional lexical scoping rule, the value cell only holds the variable&amp;rsquo;s global value&amp;mdash;the value outside of any lexical binding construct. When a variable is lexically bound, the local value is determined by the lexical environment; hence, variables can have local values even if their symbols&amp;rsquo; value cells are unassigned.</source>
          <target state="translated">Under the optional lexical scoping rule, the value cell only holds the variable&amp;rsquo;s global value&amp;mdash;the value outside of any lexical binding construct. When a variable is lexically bound, the local value is determined by the lexical environment; hence, variables can have local values even if their symbols&amp;rsquo; value cells are unassigned.</target>
        </trans-unit>
        <trans-unit id="1a644237b01fa721b77c11c234b4a6fc40fe1486" translate="yes" xml:space="preserve">
          <source>Under very special circumstances, you may want to disable multibyte character support, for a specific buffer. When multibyte characters are disabled in a buffer, we call that &lt;em&gt;unibyte mode&lt;/em&gt;. In unibyte mode, each character in the buffer has a character code ranging from 0 through 255 (0377 octal); 0 through 127 (0177 octal) represent</source>
          <target state="translated">Under very special circumstances, you may want to disable multibyte character support, for a specific buffer. When multibyte characters are disabled in a buffer, we call that &lt;em&gt;unibyte mode&lt;/em&gt;. In unibyte mode, each character in the buffer has a character code ranging from 0 through 255 (0377 octal); 0 through 127 (0177 octal) represent</target>
        </trans-unit>
        <trans-unit id="b47a9ddd69070e836e8773962db03c7cf5ab2f52" translate="yes" xml:space="preserve">
          <source>Underline in color &lt;var&gt;color&lt;/var&gt;, a string specifying a color.</source>
          <target state="translated">Underline in color &lt;var&gt;color&lt;/var&gt; , a string specifying a color.</target>
        </trans-unit>
        <trans-unit id="816d0b4131241274c853cf7d9142c8a9aae7d264" translate="yes" xml:space="preserve">
          <source>Underline with the foreground color of the face.</source>
          <target state="translated">Underline with the foreground color of the face.</target>
        </trans-unit>
        <trans-unit id="39fc72124884d6573e4f9f89585f071ed0782696" translate="yes" xml:space="preserve">
          <source>Undo</source>
          <target state="translated">Undo</target>
        </trans-unit>
        <trans-unit id="281d39d3bc1033bb4c97a2b3ba9b214c5be68783" translate="yes" xml:space="preserve">
          <source>Undo all replacements and move back to the place where the first replacement was performed.</source>
          <target state="translated">Undo all replacements and move back to the place where the first replacement was performed.</target>
        </trans-unit>
        <trans-unit id="7b894fcdc32b3ad81a6057bebf7ecb31dc5b3a0c" translate="yes" xml:space="preserve">
          <source>Undo last replacement and move back to the place where that replacement was performed.</source>
          <target state="translated">Undo last replacement and move back to the place where that replacement was performed.</target>
        </trans-unit>
        <trans-unit id="d2d0acddfb8713f6b7ec382e14a11ccf344c2f5d" translate="yes" xml:space="preserve">
          <source>Undoing changes to the text of a buffer.</source>
          <target state="translated">Undoing changes to the text of a buffer.</target>
        </trans-unit>
        <trans-unit id="e0bee459f00570042ea5b5eaadd4bbcfcbf90743" translate="yes" xml:space="preserve">
          <source>Unfortunately, this fix introduces another problem, described in the following section.</source>
          <target state="translated">Unfortunately, this fix introduces another problem, described in the following section.</target>
        </trans-unit>
        <trans-unit id="e31b09d65668ba63cf629464412a4848c6cd08d8" translate="yes" xml:space="preserve">
          <source>Unfortunately, this sometimes causes confusion, because some people tend to think in terms of the opposite convention: they imagine the window moving over text that remains in place, so that &amp;ldquo;down&amp;rdquo; commands take you to the end of the buffer. This convention is consistent with fact that such a command is bound to a key named</source>
          <target state="translated">Unfortunately, this sometimes causes confusion, because some people tend to think in terms of the opposite convention: they imagine the window moving over text that remains in place, so that &amp;ldquo;down&amp;rdquo; commands take you to the end of the buffer. This convention is consistent with fact that such a command is bound to a key named</target>
        </trans-unit>
        <trans-unit id="6d237f1ecdfe656324056d6b62508d4bf63e1755" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function only deletes the file if it was written by the current Emacs session since the last true save.</source>
          <target state="translated">Unless &lt;var&gt;force&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , this function only deletes the file if it was written by the current Emacs session since the last true save.</target>
        </trans-unit>
        <trans-unit id="5826c784a9257af0c0f1eb6514a59ac26452a236" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function refuses to make &lt;var&gt;frame&lt;/var&gt; invisible if all other frames are invisible.</source>
          <target state="translated">Unless &lt;var&gt;force&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , this function refuses to make &lt;var&gt;frame&lt;/var&gt; invisible if all other frames are invisible.</target>
        </trans-unit>
        <trans-unit id="ed50acf3c1d6d3ce1772be7e3dbd15d882d5dd0a" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;symbol&lt;/var&gt; is marked as risky (i.e., it has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;risky-local-variable&lt;/code&gt; property), all text properties specified in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value are ignored. This includes the text properties of strings in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value, as well as all &lt;code&gt;:eval&lt;/code&gt; and &lt;code&gt;:propertize&lt;/code&gt; forms in it. (The reason for this is security: non-risky variables could be set automatically from file variables without prompting the user.)</source>
          <target state="translated">Unless &lt;var&gt;symbol&lt;/var&gt; is marked as risky (i.e., it has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;risky-local-variable&lt;/code&gt; property), all text properties specified in &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s value are ignored. This includes the text properties of strings in &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s value, as well as all &lt;code&gt;:eval&lt;/code&gt; and &lt;code&gt;:propertize&lt;/code&gt; forms in it. (The reason for this is security: non-risky variables could be set automatically from file variables without prompting the user.)</target>
        </trans-unit>
        <trans-unit id="c3f7337161f1704f9af17cc57bd41d608e24679e" translate="yes" xml:space="preserve">
          <source>Unless there is a very good reason to prefer &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;, it is usually preferable to mark operators as associative, using &lt;code&gt;assoc&lt;/code&gt;. For that reason &lt;code&gt;&quot;+&quot;&lt;/code&gt; and &lt;code&gt;&quot;*&quot;&lt;/code&gt; are defined above as &lt;code&gt;assoc&lt;/code&gt;, although the language defines them formally as left associative.</source>
          <target state="translated">Unless there is a very good reason to prefer &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; , it is usually preferable to mark operators as associative, using &lt;code&gt;assoc&lt;/code&gt; . For that reason &lt;code&gt;&quot;+&quot;&lt;/code&gt; and &lt;code&gt;&quot;*&quot;&lt;/code&gt; are defined above as &lt;code&gt;assoc&lt;/code&gt; , although the language defines them formally as left associative.</target>
        </trans-unit>
        <trans-unit id="cd3fc851b5c5995784a99ba41df02359a405266e" translate="yes" xml:space="preserve">
          <source>Unless you start Emacs with the</source>
          <target state="translated">Unless you start Emacs with the</target>
        </trans-unit>
        <trans-unit id="0d6a87b2e11856ded731eaa5449bda0617f91c77" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;mod&lt;/code&gt; permits floating-point arguments; it rounds the quotient downward (towards minus infinity) to an integer, and uses that quotient to compute the remainder.</source>
          <target state="translated">Unlike &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;mod&lt;/code&gt; permits floating-point arguments; it rounds the quotient downward (towards minus infinity) to an integer, and uses that quotient to compute the remainder.</target>
        </trans-unit>
        <trans-unit id="d8bb808b59c029dcccf366b325ed96c4c8aa345d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;format&lt;/code&gt;, which assigns specific meanings to a fixed set of specification characters, &lt;code&gt;format-spec&lt;/code&gt; accepts arbitrary specification characters and treats them all equally. For example:</source>
          <target state="translated">Unlike &lt;code&gt;format&lt;/code&gt; , which assigns specific meanings to a fixed set of specification characters, &lt;code&gt;format-spec&lt;/code&gt; accepts arbitrary specification characters and treats them all equally. For example:</target>
        </trans-unit>
        <trans-unit id="a6cf67239e5b30fc7b19173ff18498cd7ce1c68a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;functionp&lt;/code&gt;, the next three functions do &lt;em&gt;not&lt;/em&gt; treat a symbol as its function definition.</source>
          <target state="translated">Unlike &lt;code&gt;functionp&lt;/code&gt; , the next three functions do &lt;em&gt;not&lt;/em&gt; treat a symbol as its function definition.</target>
        </trans-unit>
        <trans-unit id="fbe5ba18622c8386029b3b94e1482dcf799ecf8e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;module-load&lt;/code&gt; doesn&amp;rsquo;t record the module in &lt;code&gt;load-history&lt;/code&gt;, doesn&amp;rsquo;t print any messages, and doesn&amp;rsquo;t protect against recursive loads. Most users should therefore use &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;load-file&lt;/code&gt;, &lt;code&gt;load-library&lt;/code&gt;, or &lt;code&gt;require&lt;/code&gt; instead of &lt;code&gt;module-load&lt;/code&gt;.</source>
          <target state="translated">Unlike &lt;code&gt;load&lt;/code&gt; , &lt;code&gt;module-load&lt;/code&gt; doesn&amp;rsquo;t record the module in &lt;code&gt;load-history&lt;/code&gt; , doesn&amp;rsquo;t print any messages, and doesn&amp;rsquo;t protect against recursive loads. Most users should therefore use &lt;code&gt;load&lt;/code&gt; , &lt;code&gt;load-file&lt;/code&gt; , &lt;code&gt;load-library&lt;/code&gt; , or &lt;code&gt;require&lt;/code&gt; instead of &lt;code&gt;module-load&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="050d0f6ebf1d3c5888f57236e32c18d5f3ebd92e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;pcase-let&lt;/code&gt;, but similarly to &lt;code&gt;let*&lt;/code&gt;, each &lt;var&gt;exp&lt;/var&gt; is matched against its corresponding &lt;var&gt;pattern&lt;/var&gt; before processing the next element of &lt;var&gt;bindings&lt;/var&gt;, so the variable bindings introduced in each one of the &lt;var&gt;bindings&lt;/var&gt; are available in the &lt;var&gt;exp&lt;/var&gt;s of the &lt;var&gt;bindings&lt;/var&gt; that follow it, additionally to being available in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">Unlike &lt;code&gt;pcase-let&lt;/code&gt; , but similarly to &lt;code&gt;let*&lt;/code&gt; , each &lt;var&gt;exp&lt;/var&gt; is matched against its corresponding &lt;var&gt;pattern&lt;/var&gt; before processing the next element of &lt;var&gt;bindings&lt;/var&gt; , so the variable bindings introduced in each one of the &lt;var&gt;bindings&lt;/var&gt; are available in the &lt;var&gt;exp&lt;/var&gt; s of the &lt;var&gt;bindings&lt;/var&gt; that follow it, additionally to being available in &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3bf0d69557efdc7fd270f0f047fffdb2efe2201b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;read-key-sequence&lt;/code&gt;, this function does not modify the specified events in ways that discard information (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;). In particular, it does not convert letters to lower case and it does not change drag events to clicks.</source>
          <target state="translated">Unlike &lt;code&gt;read-key-sequence&lt;/code&gt; , this function does not modify the specified events in ways that discard information (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;). In particular, it does not convert letters to lower case and it does not change drag events to clicks.</target>
        </trans-unit>
        <trans-unit id="40ee735c829abf5224229748444b930045adae65" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;window-body-width&lt;/code&gt;, this function accounts for the actual size of &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s font, instead of working in units of the canonical character width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). It also accounts for space used by the continuation glyph, if &lt;var&gt;window&lt;/var&gt; lacks one or both of its fringes.</source>
          <target state="translated">Unlike &lt;code&gt;window-body-width&lt;/code&gt; , this function accounts for the actual size of &lt;var&gt;face&lt;/var&gt; &amp;rsquo;s font, instead of working in units of the canonical character width of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). It also accounts for space used by the continuation glyph, if &lt;var&gt;window&lt;/var&gt; lacks one or both of its fringes.</target>
        </trans-unit>
        <trans-unit id="e59462d4b500be2d6de3f19f9797422c88586dfe" translate="yes" xml:space="preserve">
          <source>Unlike X windows, Emacs windows are &lt;em&gt;tiled&lt;/em&gt;; they never overlap within the area of the frame. When a window is created, resized, or deleted, the change in window space is taken from or given to the adjacent windows, so that the total area of the frame is unchanged.</source>
          <target state="translated">Unlike X windows, Emacs windows are &lt;em&gt;tiled&lt;/em&gt;; they never overlap within the area of the frame. When a window is created, resized, or deleted, the change in window space is taken from or given to the adjacent windows, so that the total area of the frame is unchanged.</target>
        </trans-unit>
        <trans-unit id="bfbfd1f29164e78b4210b38e600ffb42ab7d02bf" translate="yes" xml:space="preserve">
          <source>Unlike most minor modes, there is no &lt;code&gt;auto-save-mode&lt;/code&gt; variable. Auto Save mode is enabled if &lt;code&gt;buffer-auto-save-file-name&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;buffer-saved-size&lt;/code&gt; (see below) is non-zero.</source>
          <target state="translated">Unlike most minor modes, there is no &lt;code&gt;auto-save-mode&lt;/code&gt; variable. Auto Save mode is enabled if &lt;code&gt;buffer-auto-save-file-name&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;buffer-saved-size&lt;/code&gt; (see below) is non-zero.</target>
        </trans-unit>
        <trans-unit id="ae59e03f00d2a8a0d7adc3d6f352735a53eb1ba0" translate="yes" xml:space="preserve">
          <source>Unlike with other similar hooks, when Emacs calls these functions, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; get bound to non-&lt;code&gt;nil&lt;/code&gt;. If the functions modify the buffer, you should consider binding this variable to non-&lt;code&gt;nil&lt;/code&gt; to prevent any buffer changes running the change hooks. Otherwise, you must be prepared for recursive calls. See &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;.</source>
          <target state="translated">Unlike with other similar hooks, when Emacs calls these functions, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; get bound to non- &lt;code&gt;nil&lt;/code&gt; . If the functions modify the buffer, you should consider binding this variable to non- &lt;code&gt;nil&lt;/code&gt; to prevent any buffer changes running the change hooks. Otherwise, you must be prepared for recursive calls. See &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b0dd9a8036a712c8a1d9b9ebb330912c29faad7f" translate="yes" xml:space="preserve">
          <source>Unloading</source>
          <target state="translated">Unloading</target>
        </trans-unit>
        <trans-unit id="169daf44b90db9844104deace7c2d65b96ca84a7" translate="yes" xml:space="preserve">
          <source>Unpack/pack this field according to the type specification &lt;var&gt;type&lt;/var&gt;.</source>
          <target state="translated">Unpack/pack this field according to the type specification &lt;var&gt;type&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5944c4e306b00ce4acba6e0c05e4d28fb5eccbaf" translate="yes" xml:space="preserve">
          <source>Unset any breakpoints in the current form (&lt;code&gt;edebug-unset-breakpoints&lt;/code&gt;).</source>
          <target state="translated">Unset any breakpoints in the current form ( &lt;code&gt;edebug-unset-breakpoints&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="42357abaaff65af9bf691adce20cfa004bd2fbd6" translate="yes" xml:space="preserve">
          <source>Unset the breakpoint (if any) at the stop point at or after point (&lt;code&gt;edebug-unset-breakpoint&lt;/code&gt;).</source>
          <target state="translated">Unset the breakpoint (if any) at the stop point at or after point ( &lt;code&gt;edebug-unset-breakpoint&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1abd54e069ad62b6a851c7507133d2798043f0cc" translate="yes" xml:space="preserve">
          <source>Unsigned byte, with length 1.</source>
          <target state="translated">Unsigned byte, with length 1.</target>
        </trans-unit>
        <trans-unit id="7a58f2c59f09e32940adaa60f399e8f16efaca5d" translate="yes" xml:space="preserve">
          <source>Unsigned integer in little endian order, with length 2, 3 and 4, respectively.</source>
          <target state="translated">Unsigned integer in little endian order, with length 2, 3 and 4, respectively.</target>
        </trans-unit>
        <trans-unit id="efce86b9c675e2105ba635bfd05c044cd1416dfc" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 2.</source>
          <target state="translated">Unsigned integer in network byte order, with length 2.</target>
        </trans-unit>
        <trans-unit id="cdc58b621424ac5c9f159d2a34ccb08ff1c15724" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 3.</source>
          <target state="translated">Unsigned integer in network byte order, with length 3.</target>
        </trans-unit>
        <trans-unit id="fa42938e718c4e082432b53be6b2d37849b80c45" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 4. Note: These values may be limited by Emacs&amp;rsquo;s integer implementation limits.</source>
          <target state="translated">Unsigned integer in network byte order, with length 4. Note: These values may be limited by Emacs&amp;rsquo;s integer implementation limits.</target>
        </trans-unit>
        <trans-unit id="6de3a7bbeb0d0f3a3acd1346d1f7d9a305cda13c" translate="yes" xml:space="preserve">
          <source>Up to reordering, the resulting regexp of &lt;code&gt;regexp-opt&lt;/code&gt; is equivalent to but usually more efficient than that of a simplified version:</source>
          <target state="translated">Up to reordering, the resulting regexp of &lt;code&gt;regexp-opt&lt;/code&gt; is equivalent to but usually more efficient than that of a simplified version:</target>
        </trans-unit>
        <trans-unit id="8247becf9ac6653a02a39777ce74cbe014920503" translate="yes" xml:space="preserve">
          <source>Update the list of threads and their statuses.</source>
          <target state="translated">Update the list of threads and their statuses.</target>
        </trans-unit>
        <trans-unit id="0611993c1afe354549b1d86771c424e02f72189c" translate="yes" xml:space="preserve">
          <source>Upon reading, each object inside the parentheses becomes an element of the list. That is, a cons cell is made for each element. The &lt;small&gt;CAR&lt;/small&gt; slot of the cons cell holds the element, and its &lt;small&gt;CDR&lt;/small&gt; slot refers to the next cons cell of the list, which holds the next element in the list. The &lt;small&gt;CDR&lt;/small&gt; slot of the last cons cell is set to hold &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Upon reading, each object inside the parentheses becomes an element of the list. That is, a cons cell is made for each element. The &lt;small&gt;CAR&lt;/small&gt; slot of the cons cell holds the element, and its &lt;small&gt;CDR&lt;/small&gt; slot refers to the next cons cell of the list, which holds the next element in the list. The &lt;small&gt;CDR&lt;/small&gt; slot of the last cons cell is set to hold &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d144995a54b686ad33ed928d9139095bb3a1b891" translate="yes" xml:space="preserve">
          <source>Upper-case format sequences produce the units in addition to the numbers, lower-case formats produce only the numbers.</source>
          <target state="translated">Upper-case format sequences produce the units in addition to the numbers, lower-case formats produce only the numbers.</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="dce40f834de5af3d15d079c90384193566a0f882" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;=&lt;/code&gt; before an object to label it for later reference; subsequently, you can use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;#&lt;/code&gt; to refer the same object in another place. Here, &lt;var&gt;n&lt;/var&gt; is some integer. For example, here is how to make a list in which the first element recurs as the third element:</source>
          <target state="translated">Use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;=&lt;/code&gt; before an object to label it for later reference; subsequently, you can use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;#&lt;/code&gt; to refer the same object in another place. Here, &lt;var&gt;n&lt;/var&gt; is some integer. For example, here is how to make a list in which the first element recurs as the third element:</target>
        </trans-unit>
        <trans-unit id="ccffc72e351b0553a988e650238e8c1469d03ca7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:group &lt;var&gt;group&lt;/var&gt;&lt;/code&gt; in &lt;var&gt;keyword-args&lt;/var&gt; to specify the custom group for the mode variable of the global minor mode.</source>
          <target state="translated">Use &lt;code&gt;:group &lt;var&gt;group&lt;/var&gt;&lt;/code&gt; in &lt;var&gt;keyword-args&lt;/var&gt; to specify the custom group for the mode variable of the global minor mode.</target>
        </trans-unit>
        <trans-unit id="7fd388e2d50e3c627cb73d3dd1f0e9147989998b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) to get the raw syntax descriptor of a character, e.g. &lt;code&gt;(aref&amp;nbsp;(syntax-table)&amp;nbsp;ch)&lt;/code&gt;.</source>
          <target state="translated">Use &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) to get the raw syntax descriptor of a character, e.g. &lt;code&gt;(aref&amp;nbsp;(syntax-table)&amp;nbsp;ch)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97f5bc88905c68246d63968fb55583b4c0401b5b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nil&lt;/code&gt; as the first of the &lt;var&gt;debugger-args&lt;/var&gt; when you want to enter the debugger explicitly. The rest of the &lt;var&gt;debugger-args&lt;/var&gt; are printed on the top line of the buffer. You can use this feature to display messages&amp;mdash;for example, to remind yourself of the conditions under which &lt;code&gt;debug&lt;/code&gt; is called.</source>
          <target state="translated">Use &lt;code&gt;nil&lt;/code&gt; as the first of the &lt;var&gt;debugger-args&lt;/var&gt; when you want to enter the debugger explicitly. The rest of the &lt;var&gt;debugger-args&lt;/var&gt; are printed on the top line of the buffer. You can use this feature to display messages&amp;mdash;for example, to remind yourself of the conditions under which &lt;code&gt;debug&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="0956088b61a3b050e1ce95a50a000de591b2a084" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sleep-for&lt;/code&gt; when you wish to guarantee a delay.</source>
          <target state="translated">Use &lt;code&gt;sleep-for&lt;/code&gt; when you wish to guarantee a delay.</target>
        </trans-unit>
        <trans-unit id="95289ce6217988d0cb02f420011f6eb1c1819184" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer.</source>
          <target state="translated">Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer.</target>
        </trans-unit>
        <trans-unit id="b4d4613860b33fc7e36026b575b43d5abf76f8ad" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer. If the value is &lt;code&gt;nil&lt;/code&gt;, the subprocess is not associated with any buffer.</source>
          <target state="translated">Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer. If the value is &lt;code&gt;nil&lt;/code&gt; , the subprocess is not associated with any buffer.</target>
        </trans-unit>
        <trans-unit id="ae0796dcc8e3e6384925cf1d83afc1011c2029ac" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;coding&lt;/var&gt; as the coding system for this process. To specify different coding systems for decoding data from the connection and for encoding data sent to it, specify &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; .
&lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; for &lt;var&gt;coding&lt;/var&gt;.</source>
          <target state="translated">Use &lt;var&gt;coding&lt;/var&gt; as the coding system for this process. To specify different coding systems for decoding data from the connection and for encoding data sent to it, specify &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; . &lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; for &lt;var&gt;coding&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5de94f1a819715bbebc572fc610f1b1589d72d68" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;command&lt;/var&gt; as the command line of the process. The value should be a list starting with the program&amp;rsquo;s executable file name, followed by strings to give to the program as its arguments. If the first element of the list is &lt;code&gt;nil&lt;/code&gt;, Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer&lt;/var&gt;, without actually running any program; the rest of the list elements are ignored in that case.</source>
          <target state="translated">Use &lt;var&gt;command&lt;/var&gt; as the command line of the process. The value should be a list starting with the program&amp;rsquo;s executable file name, followed by strings to give to the program as its arguments. If the first element of the list is &lt;code&gt;nil&lt;/code&gt; , Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer&lt;/var&gt; , without actually running any program; the rest of the list elements are ignored in that case.</target>
        </trans-unit>
        <trans-unit id="18aee7a37cad775c5df86383a5963752bd15dbd0" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;criteria&lt;/var&gt; to match possible values. This is used only in &lt;code&gt;restricted-sexp&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;criteria&lt;/var&gt; 을 사용 하여 가능한 값을 일치 시키십시오. 이것은 &lt;code&gt;restricted-sexp&lt;/code&gt; 에서만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d6302eef993c5fd4313ae0b3049c27cc8e3bc78" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;doc&lt;/var&gt; as the documentation string for this value (or part of the value) that corresponds to this type. In order for this to work, you must specify a value for &lt;code&gt;:format&lt;/code&gt;, and use &amp;lsquo;</source>
          <target state="translated">이 유형에 해당하는이 값 (또는 값의 일부)에 대한 문서 문자열로 &lt;var&gt;doc&lt;/var&gt; 를 사용하십시오 . 이 작업을 수행하려면 &lt;code&gt;:format&lt;/code&gt; 값을 지정하고 '</target>
        </trans-unit>
        <trans-unit id="38a0a6267f5c5df6416398696c8987a607fb2de2" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;label&lt;/var&gt;, a string, instead of the item&amp;rsquo;s name, to label the item in customization menus and buffers. &lt;strong&gt;Don&amp;rsquo;t use a tag which is substantially different from the item&amp;rsquo;s real name; that would cause confusion.&lt;/strong&gt;</source>
          <target state="translated">항목 이름 대신 문자열 인 &lt;var&gt;label&lt;/var&gt; 을 사용 하여 사용자 정의 메뉴 및 버퍼에서 항목에 레이블을 지정합니다. &lt;strong&gt;항목의 실제 이름과 상당히 다른 태그를 사용하지 마십시오. 그것은 혼란을 야기 할 것입니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a14e6a2fe2d56471b74b10a9d37a3f1cf80fff5" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tag&lt;/var&gt; (a string) as the tag for the value (or part of the value) that corresponds to this type.</source>
          <target state="translated">이 유형에 해당하는 값 (또는 값의 일부)에 대한 태그로 &lt;var&gt;tag&lt;/var&gt; (문자열)를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="37fb399c005854ea1a1f14512c0a9f758ca0982a" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tag&lt;/var&gt; as the name of this alternative, for user communication purposes. This is useful for a type that appears inside of a &lt;code&gt;choice&lt;/code&gt;.</source>
          <target state="translated">사용자 통신을 위해이 대안의 이름으로 &lt;var&gt;tag&lt;/var&gt; 를 사용하십시오 . 이것은 &lt;code&gt;choice&lt;/code&gt; 안에 나타나는 유형에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="c1a19b4f2d1b6bed331d284fa9f2181ea3e87908" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tip&lt;/var&gt; as the tooltip for the notification. If &lt;var&gt;tip&lt;/var&gt; is a string, this is the text of a tooltip that will be shown when the mouse pointer hovers over the tray icon added by the notification. If &lt;var&gt;tip&lt;/var&gt; is not a string, or if this parameter is not specified, the default tooltip text is &amp;lsquo;</source>
          <target state="translated">알림의 도구 설명으로 &lt;var&gt;tip&lt;/var&gt; 을 사용하십시오 . 경우 &lt;var&gt;tip&lt;/var&gt; 문자열이며,이 트레이 아이콘에 마우스 포인터 마우스를 올렸을 알림으로 추가 할 때 표시됩니다 툴팁의 텍스트입니다. 경우 &lt;var&gt;tip&lt;/var&gt; 문자열이 아닌이 매개 변수가 지정되지 않은 경우, 또는, 기본 도구 설명 텍스트 '입니다</target>
        </trans-unit>
        <trans-unit id="fbca07f69bbb0a518ed4235913b478f281e538dc" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;type&lt;/var&gt; as the data type for this option. It specifies which values are legitimate, and how to display the value (see &lt;a href=&quot;customization-types#Customization-Types&quot;&gt;Customization Types&lt;/a&gt;). Every &lt;code&gt;defcustom&lt;/code&gt; should specify a value for this keyword.</source>
          <target state="translated">사용 &lt;var&gt;type&lt;/var&gt; 이 옵션의 데이터 유형으로. 합법적 인 값과 값을 표시하는 방법을 &lt;a href=&quot;customization-types#Customization-Types&quot;&gt;지정&lt;/a&gt; 합니다 ( 사용자 지정 유형 참조 ). 모든 &lt;code&gt;defcustom&lt;/code&gt; 은이 키워드에 대한 값을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="8347ef3a24625aac52e35d187706fdf7865b09d9" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;variable&lt;/var&gt; (a symbol) as the history list, and assume that the initial history position is &lt;var&gt;startpos&lt;/var&gt; (a nonnegative integer).</source>
          <target state="translated">사용 &lt;var&gt;variable&lt;/var&gt; 기록 목록 등 (기호)를 초기 역사 위치가 있다고 가정 &lt;var&gt;startpos&lt;/var&gt; (음수가 아닌 정수).</target>
        </trans-unit>
        <trans-unit id="f9ea11ecb24ac51a9fd9a1426a3f575f2b9af5eb" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;variable&lt;/var&gt; (a symbol) as the history list.</source>
          <target state="translated">사용 &lt;var&gt;variable&lt;/var&gt; 기록 목록 등 (기호).</target>
        </trans-unit>
        <trans-unit id="56a94bf7f718cdf3377f1e36d09002168c3e86e8" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;(:propertize &lt;var&gt;elt&lt;/var&gt; &lt;var&gt;props&lt;/var&gt;&amp;hellip;)&lt;/code&gt; construct to give &lt;var&gt;elt&lt;/var&gt; a text property specified by &lt;var&gt;props&lt;/var&gt;.</source>
          <target state="translated">용도 &lt;code&gt;(:propertize &lt;var&gt;elt&lt;/var&gt; &lt;var&gt;props&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 제공하는 구조를 &lt;var&gt;elt&lt;/var&gt; 에 의해 지정된 텍스트 속성 &lt;var&gt;props&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d327ac5f8db2005904ae2fe386ee6bf398215ced" translate="yes" xml:space="preserve">
          <source>Use a list containing &lt;code&gt;:eval &lt;var&gt;form&lt;/var&gt;&lt;/code&gt; in the mode line data structure, and make &lt;var&gt;form&lt;/var&gt; evaluate to a string that has a text property.</source>
          <target state="translated">모드 행 데이터 구조에서 &lt;code&gt;:eval &lt;var&gt;form&lt;/var&gt;&lt;/code&gt; 을 포함하는 목록을 사용하고 &lt;var&gt;form&lt;/var&gt; 이 텍스트 속성이있는 문자열 로 평가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="89e4e5ba0adc2e1f1eb81797d1aaf2efa1fc3014" translate="yes" xml:space="preserve">
          <source>Use of &lt;var&gt;initial&lt;/var&gt; is mostly deprecated; we recommend using a non-&lt;code&gt;nil&lt;/code&gt; value only in conjunction with specifying a cons cell for &lt;var&gt;history&lt;/var&gt;. See &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;initial&lt;/var&gt; 사용 은 대부분 더 이상 사용되지 않습니다. &lt;var&gt;history&lt;/var&gt; 대한 cons 셀을 지정하는 경우에만 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 사용하는 것이 좋습니다 . &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;초기 입력을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d29d21b34e96e2c562ed13312bc737a094a646d2" translate="yes" xml:space="preserve">
          <source>Use of a cons cell as the value for &lt;var&gt;initial&lt;/var&gt; arguments is deprecated.</source>
          <target state="translated">cons 셀을 &lt;var&gt;initial&lt;/var&gt; 인수 값 으로 사용하는 것은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9e43930964ad425cf199261b9f37fee68dd1457a" translate="yes" xml:space="preserve">
          <source>Use of encoding for terminal I/O.</source>
          <target state="translated">터미널 I / O에 인코딩 사용.</target>
        </trans-unit>
        <trans-unit id="d270630ab107723a28dcfa4dcdbf3420a9e423fb" translate="yes" xml:space="preserve">
          <source>Use of the minibuffer reads input events, and that alters the values of variables such as &lt;code&gt;this-command&lt;/code&gt; and &lt;code&gt;last-command&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;). Your program should bind them around the code that uses the minibuffer, if you do not want that to change them.</source>
          <target state="translated">미니 버퍼를 사용하면 입력 이벤트를 읽고 &lt;code&gt;this-command&lt;/code&gt; 및 &lt;code&gt;last-command&lt;/code&gt; 와 같은 변수 값을 변경합니다 ( &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt; 참조 ). 미니 버퍼를 사용하는 코드를 변경하지 않으려면 프로그램에서이를 바인딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="5347ff425a354417e9a1d6637d256e051dba9bee" translate="yes" xml:space="preserve">
          <source>Use overlays to highlight parts of the buffer.</source>
          <target state="translated">오버레이를 사용하여 버퍼의 일부를 강조 표시합니다.</target>
        </trans-unit>
        <trans-unit id="fc53c16cff054002cb490fb1d90b039f3094274b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:set&lt;/code&gt; function to initialize the variable, if it is already set or has been customized; otherwise, just use &lt;code&gt;set-default&lt;/code&gt;.</source>
          <target state="translated">변수가 이미 설정되었거나 사용자 정의 된 경우 &lt;code&gt;:set&lt;/code&gt; 함수를 사용하여 변수를 초기화하십시오. 그렇지 않으면 &lt;code&gt;set-default&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="924756e5be9d1baf0a3599f7c292dd2e27c179ce" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; hook similarly to extend the scan so that the scanned text never starts or ends in the middle of a multiline construct.</source>
          <target state="translated">사용 &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; 스캔 한 텍스트가 여러 구조의 중간에서 시작하거나 끝 결코 스캔 정도 연장 유사 훅을.</target>
        </trans-unit>
        <trans-unit id="591db228b5d39738df1ff275555b37fe6f05e83c" translate="yes" xml:space="preserve">
          <source>Use the command</source>
          <target state="translated">명령 사용</target>
        </trans-unit>
        <trans-unit id="5ebe07c9360bde756d125a996dff0141df0191e1" translate="yes" xml:space="preserve">
          <source>Use the elements of &lt;var&gt;argument-list&lt;/var&gt; as the arguments of the type construct. For instance, &lt;code&gt;(const :args (foo))&lt;/code&gt; is equivalent to &lt;code&gt;(const foo)&lt;/code&gt;. You rarely need to write &lt;code&gt;:args&lt;/code&gt; explicitly, because normally the arguments are recognized automatically as whatever follows the last keyword-value pair.</source>
          <target state="translated">&lt;var&gt;argument-list&lt;/var&gt; 의 요소를 유형 구성의 인수로 사용하십시오. 예를 들어, &lt;code&gt;(const :args (foo))&lt;/code&gt; 는 &lt;code&gt;(const foo)&lt;/code&gt; 와 같습니다 . 일반적으로 인수는 마지막 키워드-값 쌍 다음에 오는 것으로 자동으로 인식되기 때문에 &lt;code&gt;:args&lt;/code&gt; 를 명시 적으로 작성할 필요가 거의 없습니다 .</target>
        </trans-unit>
        <trans-unit id="bcb154cf5a3a53ca3d408af20c24cb5e6ad4d8bc" translate="yes" xml:space="preserve">
          <source>Use the face &lt;var&gt;face&lt;/var&gt; (a face name or a list of face names) for button text displayed with &amp;lsquo;</source>
          <target state="translated">얼굴 사용하여 &lt;var&gt;face&lt;/var&gt; '로 표시 버튼 텍스트 (얼굴 이름이나 얼굴 이름의 목록을)</target>
        </trans-unit>
        <trans-unit id="77283a6ddab4699e1e393d2d33775cd38ddabb0d" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name. As with &lt;code&gt;make-process&lt;/code&gt;, it is modified if necessary to make it unique.</source>
          <target state="translated">프로세스 이름으로 문자열 &lt;var&gt;name&lt;/var&gt; 을 사용하십시오 . &lt;code&gt;make-process&lt;/code&gt; 와 마찬가지로 필요한 경우 고유하게 만들기 위해 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="f6bb25da68a52ad5e36645a8fc9c911e2d5c2b06" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name. It is modified if necessary to make it unique.</source>
          <target state="translated">프로세스 이름으로 문자열 &lt;var&gt;name&lt;/var&gt; 을 사용하십시오 . 고유하게 만들기 위해 필요한 경우 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="8db9c19cb7d83234e6a5adedbe26edfea639a5a7" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name; if a process with this name already exists, then &lt;var&gt;name&lt;/var&gt; is modified (by appending &amp;lsquo;</source>
          <target state="translated">프로세스 이름으로 문자열 &lt;var&gt;name&lt;/var&gt; 을 사용하십시오 . 이 이름의 프로세스가 이미 존재하면 &lt;var&gt;name&lt;/var&gt; 이 수정됩니다 ( '</target>
        </trans-unit>
        <trans-unit id="43724c02820653276c4e926ae11aa9da78260343" translate="yes" xml:space="preserve">
          <source>Use the variable&amp;rsquo;s &lt;code&gt;:set&lt;/code&gt; function to initialize the variable, but do not reinitialize it if it is already non-void.</source>
          <target state="translated">변수의 &lt;code&gt;:set&lt;/code&gt; 함수를 사용하여 변수 를 초기화하지만 이미 무효가 아닌 경우 다시 초기화하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="32e078501df17012ea8d38101904d103fdf84f68" translate="yes" xml:space="preserve">
          <source>Use vectors instead of strings for key sequences, when you plan to use them for anything other than as arguments to &lt;code&gt;lookup-key&lt;/code&gt; and &lt;code&gt;define-key&lt;/code&gt;. For example, you can use &lt;code&gt;read-key-sequence-vector&lt;/code&gt; instead of &lt;code&gt;read-key-sequence&lt;/code&gt;, and &lt;code&gt;this-command-keys-vector&lt;/code&gt; instead of &lt;code&gt;this-command-keys&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lookup-key&lt;/code&gt; 및 &lt;code&gt;define-key&lt;/code&gt; 에 대한 인수가 아닌 다른 용도로 사용하려는 경우 키 시퀀스에 문자열 대신 벡터를 사용합니다 . 예를 들어, 당신이 사용할 수있는 &lt;code&gt;read-key-sequence-vector&lt;/code&gt; 대신에 &lt;code&gt;read-key-sequence&lt;/code&gt; , 그리고 &lt;code&gt;this-command-keys-vector&lt;/code&gt; 대신 &lt;code&gt;this-command-keys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d437051055eedcc2ca89645536d3211050f05cd" translate="yes" xml:space="preserve">
          <source>Use vectors to write key sequence constants containing meta characters, even when passing them directly to &lt;code&gt;define-key&lt;/code&gt;.</source>
          <target state="translated">벡터를 사용하여 메타 문자를 포함하는 키 시퀀스 상수를 작성하십시오 . 이는 &lt;code&gt;define-key&lt;/code&gt; 에 직접 전달하는 경우에도 마찬가지 입니다.</target>
        </trans-unit>
        <trans-unit id="db3eece4ecc1dc6e264461d6ea4ffad9165b70f4" translate="yes" xml:space="preserve">
          <source>Used for different types of fringe cursors.</source>
          <target state="translated">다양한 유형의 프린지 커서에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b538c7641de65de254e5145946df36d16687694a" translate="yes" xml:space="preserve">
          <source>Used for overlay arrows (see &lt;a href=&quot;overlay-arrow#Overlay-Arrow&quot;&gt;Overlay Arrow&lt;/a&gt;).</source>
          <target state="translated">오버레이 화살표에 사용합니다 ( &lt;a href=&quot;overlay-arrow#Overlay-Arrow&quot;&gt;오버레이 화살표&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="abe7fe50c254613f17b49fa29988afb4159cdd9e" translate="yes" xml:space="preserve">
          <source>Used for truncation and continuation lines.</source>
          <target state="translated">잘림 및 연속 줄에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="77f8f0d4453cf80de6dff56b7d9173f1602790f6" translate="yes" xml:space="preserve">
          <source>Used in keymaps to undefine keys. It calls &lt;code&gt;ding&lt;/code&gt;, but does not cause an error.</source>
          <target state="translated">키를 정의 해제하기 위해 키맵에서 사용됩니다. &lt;code&gt;ding&lt;/code&gt; 을 호출 하지만 오류는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6259ffefea40662abbcdbf789a1ab4e77db1cd41" translate="yes" xml:space="preserve">
          <source>Used only in one-line paragraphs, this regular expression acts as an additional check of the validity of the one available candidate fill prefix: the candidate must match this regular expression, or match &lt;code&gt;comment-start-skip&lt;/code&gt;. If it doesn&amp;rsquo;t, &lt;code&gt;fill-context-prefix&lt;/code&gt; replaces the candidate with a string of spaces of the same width as it.</source>
          <target state="translated">한 줄 단락에서만 사용되는이 정규식은 사용 가능한 하나의 후보 채우기 접두사의 유효성에 대한 추가 검사 역할을합니다. 후보는이 정규식과 일치하거나 &lt;code&gt;comment-start-skip&lt;/code&gt; 과 일치해야합니다 . 그렇지 않은 경우 &lt;code&gt;fill-context-prefix&lt;/code&gt; 는 후보를 동일한 너비의 공백 문자열로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="d7d4536b2c038c53d4bc30e470e42275f3c0eba8" translate="yes" xml:space="preserve">
          <source>Used to indicate buffer boundaries.</source>
          <target state="translated">버퍼 경계를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="af215d27954516e94b0fc99a63a8235a6bf5c96c" translate="yes" xml:space="preserve">
          <source>Used to indicate continued lines.</source>
          <target state="translated">연속 된 줄을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4ba8160bf81bfb699940005e7f1da16ade203e5a" translate="yes" xml:space="preserve">
          <source>Used to indicate empty lines after the buffer end when &lt;code&gt;indicate-empty-lines&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">빈 줄 &lt;code&gt;indicate-empty-lines&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닐 때 버퍼 종료 후 빈 줄을 나타내는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="8cffa0b7c31156b9dba3c8dad5ce97e043b0874c" translate="yes" xml:space="preserve">
          <source>Used to indicate truncated lines.</source>
          <target state="translated">잘린 선을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ff41ba79407155df83a875106517da53820bd804" translate="yes" xml:space="preserve">
          <source>Used when &lt;code&gt;indicate-buffer-boundaries&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;: &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; indicate a buffer boundary lying above or below the window edge; &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; indicate the topmost and bottommost buffer text line; and &lt;code&gt;top-bottom&lt;/code&gt; indicates where there is just one line of text in the buffer.</source>
          <target state="translated">때 사용 &lt;code&gt;indicate-buffer-boundaries&lt;/code&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; : &lt;code&gt;up&lt;/code&gt; 및 &lt;code&gt;down&lt;/code&gt; 위 또는 창 가장자리 아래에 누워 버퍼 경계를 나타냅니다; &lt;code&gt;top&lt;/code&gt; 및 &lt;code&gt;bottom&lt;/code&gt; 은 상단 및 하단 버퍼 텍스트 행을 나타냅니다. 그리고 &lt;code&gt;top-bottom&lt;/code&gt; 은 버퍼에 한 줄의 텍스트 만있는 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fca1c34ecbffa5469b5a1e0d47bb759b17462bcf" translate="yes" xml:space="preserve">
          <source>Used when the item is disabled and deselected.</source>
          <target state="translated">항목이 비활성화되고 선택 취소되었을 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="aed513916b82a279df7cdecb65133e5f6fe7d296" translate="yes" xml:space="preserve">
          <source>Used when the item is disabled and selected.</source>
          <target state="translated">항목이 비활성화되고 선택되었을 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f6403844c6cde23b98f83024612325ae4911a2a6" translate="yes" xml:space="preserve">
          <source>Used when the item is enabled and deselected.</source>
          <target state="translated">항목이 활성화 및 선택 취소 될 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="124314249d1e4d88e4cacc25deaaa5077fe2391e" translate="yes" xml:space="preserve">
          <source>Used when the item is enabled and selected.</source>
          <target state="translated">항목이 활성화되고 선택되었을 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="834a5fa19a43c628e3bddc071bf0ab0ee64a69f7" translate="yes" xml:space="preserve">
          <source>Used when turning Font Lock off to remove the fontification. Calls the function specified by &lt;code&gt;font-lock-unfontify-buffer-function&lt;/code&gt;.</source>
          <target state="translated">글꼴 잠금을 해제하여 글꼴을 제거 할 때 사용됩니다. &lt;code&gt;font-lock-unfontify-buffer-function&lt;/code&gt; 에 지정된 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ec441e9bcf6082e0f12c028ed5408f4c649408df" translate="yes" xml:space="preserve">
          <source>Useful regexps for finding sentences, pages,...</source>
          <target state="translated">문장, 페이지 등을 찾는 데 유용한 정규 표현식</target>
        </trans-unit>
        <trans-unit id="52f4c119180f7fb6d994831c0aa80b1b6a041349" translate="yes" xml:space="preserve">
          <source>User Identification</source>
          <target state="translated">사용자 식별</target>
        </trans-unit>
        <trans-unit id="5a7b6cb49093de47e45197faf6e8bbc9f056a153" translate="yes" xml:space="preserve">
          <source>User Option</source>
          <target state="translated">사용자 옵션</target>
        </trans-unit>
        <trans-unit id="28410b3350e06e2fa0834b6176e4cb723f59e7b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;abbrev-all-caps&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;abbrev-all-caps&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c45451d8667cdacc66dcb7f0e140a293f2fb3bf8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;abbrev-file-name&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;abbrev-file-name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60aa454e39d066188f3ff75cb2e9493dc35bc275" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-first-line-regexp&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;adaptive-fill-first-line-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d694ff0e9c14523131210ba897964e19fd01df3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;적응 형 채우기 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d96a6b8d06266741a89dee11401eefd36c906f8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-mode&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;적응 형 채우기 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd5c48e6f2a40efd885a7618a979cc59191f6ed8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-regexp&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;adaptive-fill-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0519fc23bdcce5847aea01f46c05e70db8068c52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;after-save-hook&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;저장 후 후크&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4080f0497ae605a17b7190584d5ec5eab44a8dc9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;auto-coding-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61975c3318294654e4c94d9ae0cf9748a82c50f6" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-functions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;자동 코딩 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf59cb635bf51812802fec80c30da74401d09860" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-regexp-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;auto-coding-regexp-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e9f634e0f06e18d0ed86c4e77f2073c2c29fe52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-default&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;auto-save-default&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dff66dd30cb605c076ac4b7974bbd03800d5e7d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-interval&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;자동 저장 간격&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81fe1cba1aca838d9ffab4c92390d32941938180" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-list-file-prefix&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;자동 저장 목록 파일 접두사&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d41eecb34f774743aa33d910bb2482bbe8d7b08d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-timeout&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;자동 저장 시간 초과&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee44287d38d58aa51397e6b5f77d1e1ce9de482c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-visited-file-name&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;방문한 파일 이름 자동 저장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43c78be3ab642be9eaa09629ede811c760c6a138" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-linked&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;연결시 복사 별 백업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5549944d7a5d28ea7a8f478850bc195b871f485" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-mismatch&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;불일치시 복사 별 백업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fb5dc7296fc13b00cc23d92851fbd86bd3daa0c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-privileged-mismatch&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;권한 불일치시 복사 별 백업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2bb38b721f2987be672b0e32883be2a89c3f5a3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;복사 별 백업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="068ebf8f246d83e3287693a52b81ddf0df139288" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-directory-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;backup-directory-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7dd50b1792ca4c59e2de6a85c7ca152163979cf4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backward-delete-char-untabify-method&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;backward-delete-char-untabify-method&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0987b9376cf2fba178df47557cd44071b2eb9d08" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;baud-rate&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;전송 속도&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18a82c1ea00820f4a6aeef167526e2b576c3f55e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;before-save-hook&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;사전 저장 후크&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54f40b17677608cda6fd1d1438fee7cb980f1033" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;bidi-paragraph-direction&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;bidi-paragraph-direction&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4a6f814c8c2b1865428cbda24dbf918afdd08b5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-cursor-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;깜박임 커서 앨리스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="942ec96b08b66980d026d6e83ffcf2d1ec5ac5d1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-delay&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;깜박임 일치 지연&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59f0be597b7dd3de8707aa48930bbc461a712b59" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-paren-distance&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;깜박임 일치 괄호 거리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67a927bfb1e5a8be0cfec3ad5c591e9ce927dbfd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-paren&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;깜박임 일치 괄호&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71eaeb40dc971950168818607db8107cb4187c47" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;buffer-offer-save&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;buffer-offer-save&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d4a580632797b1bda9861a878dc05466615df30" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;byte-compile-dynamic-docstrings&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;byte-compile-dynamic-docstrings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="debb05e40a6fa5093a02bba3803e975707c8293c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;case-fold-search&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;대소 문자 구분 검색&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56715016a0005a087c8a35ad721614698a2b2419" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;case-replace&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;대소 문자 교체&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e58693ea6b4f3f236b558781b3a55bb24653a8a2" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;comment-auto-fill-only-comments&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;주석 자동 채우기 전용 주석&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac64b79e5a59c1b8198d4fe48e0c34d0c5570018" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-auto-help&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;완료 자동 도움말&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a47db07e11abf1f50adb341656b449a12b4014e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-category-overrides&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;완료 카테고리 재정의&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="019cb06c6610b9eaefe7708ae5720e9c61df03cb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-ignored-extensions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;완료 무시 된 확장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa86f8a5833c3ce711530f7d6ef7e2e1c20b55bb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-styles&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;완성 스타일&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ca7d363a3f633e276a62a94a10da754812b9ab9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;confirm-kill-processes&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;프로세스 종료 확인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6d4698def969239e463ce8e42ae32f53cab7817" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;create-lockfiles&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;create-lockfiles&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77f653c4b6ca3c51c3cca338e9717ef5d8f8624d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;ctl-arrow&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;ctl-arrow&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39e31e0ab66d8a337176cad0fa35d47ee3fd7c01" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;cursor-in-non-selected-windows&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;선택되지 않은 창에서 커서&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cb1fe87b665317df0d675bb75fe2ac38710def8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;cursor-type&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;커서 유형&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77bd2e9a6697fb282bd386990eb75fe48aebd7b5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;custom-unlispify-remove-prefixes&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;custom-unlispify-remove-prefixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d70d4ba47d6348ece539fbd747dc36e46bc5cfec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-ignored-errors&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;디버그 무시 오류&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="548882c7a49849867858ebf7746b18faa6000816" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-error&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;오류시 디버그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1848194d9301ab230c13dc307b370e0e76d24c28" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-event&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;이벤트시 디버그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0eed717db04ca79fbd57a3f401a695218a4c554f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-quit&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;종료시 디버그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7232a912da22413ed88cc62966ba07cc8752fdd0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-signal&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;신호시 디버그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1baaa1bb2d209ad48121ae80943ac95b2d2468f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debugger-stack-frame-as-list&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;debugger-stack-frame-as-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d67c241963cac07a06266d63f47f294b34e5847" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-frame-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;default-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbebe0bea42dce97f53c087415df69731a795deb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-input-method&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;default-input-method&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="543b2906eb8b7a4acebccd293e7073a63569a08f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-justification&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;기본 정렬&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="197c838a71c037d112684867e942dc7780ee661d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;defun-prompt-regexp&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;defun-prompt-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac69d6bcdb703ebe65de4a21cc58a51dbaa0815e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-auto-save-files&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;자동 저장 파일 삭제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="388af63f3b488811465b3062df76529e7b0dd296" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-exited-processes&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;종료 된 프로세스 삭제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a03740ce1a6df96f98f48614c03da0b736a18eb4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-old-versions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;이전 버전 삭제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff016dcf9a811096087bbba666af3917f8d2a8ee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;dired-kept-versions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;dired-kept-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8fa38053ad0888dad7f17f056754526f812fb7c1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-buffer-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;display-buffer-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cf586172da0be30837f695db0f1fcf6a803ee02" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-buffer-base-action&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;display-buffer-base-action&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c73a613d3529e7651d979c7e4a0099850441f928" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-mm-dimensions-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;display-mm-dimensions-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2980bfcf14802254ac335a74b4b2db6370f4cdee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;double-click-fuzz&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;더블 클릭 퍼즈&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="341f6df01a33fc02281615ffa6ee36224ecd01d7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;double-click-time&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;두 번 클릭 시간&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="123762ef824474c41f1c0f4d1e3a2940b0d2d019" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;echo-keystrokes&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;에코 키 입력&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef61939f118de9c19c891322a73c56a9929946" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-after-instrumentation-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-after-instrumentation-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7fc0e752e3d1beaaaccb8455b26f7b3e6a329154" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-all-defs&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-all-defs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0d4b66353ae6c69fc4661f1289de0dd9b1b194" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-all-forms&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-all-forms&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c34e59ff5902febe9b95bd014c4342e32041acf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-behavior-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-behavior-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72ce7a9c1de8193687b4d371208fbc38e1233302" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-continue-kbd-macro&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-continue-kbd-macro&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfd786966cf2a5c18a859ac996a5d19d7f4fb780" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-eval-macro-args&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-eval-macro-args&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6735a79edc4ae8c5f23236d37c93782fa99d8887" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-global-break-condition&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-global-break-condition&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe26f4b7c0b79567431d424c0fffb5f10f9283f1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-initial-mode&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-initial-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38cfbb1acf52f668fb58e70a6c3df4be9d4f3f92" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-new-definition-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-new-definition-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="692de54118fb891d07ae0f4985d43aca8240c00d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-on-error&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-on-error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c12b0ad09144463d7cf0e0dd44e2830eb38b800" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-on-quit&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-on-quit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df81c24fdf2875bf92629e60520d6eaf968a71de" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-circle&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-print-circle&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bca6364b556ead9206a512cf9865c5242983304" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-length&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-print-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5784fa9b4442a645004169046f8f0304378c6ccf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-level&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-print-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce966e94cc5d17473dfc3fb637caf72fb7199db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-save-displayed-buffer-points&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-save-displayed-buffer-points&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdac976c66e24961b4ddff9d6cb8460cb93cacb5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-save-windows&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-save-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33837f4a4affd2fe34be38e8c4aaca84fe6c7232" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-setup-hook&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-setup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce8d963e8463660c8b777b5b52c5856b95d9932a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-sit-for-seconds&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-sit-for-seconds&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="038959d942095d75d2e4f361297cdce77eb03df5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-sit-on-break&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-sit-on-break&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9dfa9a444494ac62f042daca8e31203b7f72cac" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-test-coverage&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-test-coverage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="584b272777efaa57abcff8499652dfa418ae5fc9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-trace&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-trace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2791b0ce480428c68fd2e24dc11b41dd85bb0836" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-unwrap-results&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;edebug-unwrap-results&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f9cd2f4e2d257196158387bed354c1b66e67c03" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-local-eval&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;enable-local-eval&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71abbe6d97f0261108857870ec0a047dea8ff237" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-local-variables&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;로컬 변수 활성화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a17823be327f79d2c722dffee8644b2ce5301d3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-recursive-minibuffers&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;재귀 미니 버퍼 활성화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94e40a86fcdbcd7d22b05b03a23213843940c14e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-debug-on-error&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;eval-expression-debug-on-error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="656244de2111b64747b02ab4cf26a9cc518da92d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-print-length&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;eval-expression-print-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11852a0e87a20c1096f0644dbc38fffc64868da4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-print-level&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;eval-expression-print-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffc8ec6ecee44f93ff57a5499c51a6b9a84a05d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;even-window-sizes&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;짝수 창 크기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46450ebf2cc5dd66d1315e675c8e67a4cd0f1993" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;exec-path&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;exec-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97b456163b050acacc1d377b86cdf0d53400aace" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;exec-suffixes&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;exec-suffixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3861d0808e25a889177909c888e3020027f9692a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-family-alternatives&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;face-font-family-alternatives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4d2fd778814dc8bbf7b7318d5d34c015a2529ec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-registry-alternatives&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;face-font-registry-alternatives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5a1bd2a380815524fc65568aa6b01913c8f7e80" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-selection-order&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;얼굴 글꼴 선택 순서&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="582368ed33dfd2e843f6049e190f685fd208f6ca" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;file-coding-system-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;파일 코딩 시스템 앨리스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59ed3f64b1f8ebefdf60592c3f3ec0a1c60f2f0b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;file-precious-flag&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;file-precious-flag&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="079a1c55a8e0aba2709f556603ba9156dfd38d6f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-column&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;열 채우기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbc900155982949e130a936b1b85b78d3996a8fb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-individual-varying-indent&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;채우기 개별 가변 들여 쓰기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="484ef66c2840584ab2d1ec87e7f4575b492f0fa9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-nobreak-predicate&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;fill-nobreak-predicate&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac221d5a8a96cd7f0777149ece8d090543237655" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-prefix&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;fill-prefix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34e5b860aa2c643a982017a5ebc7a8694764cf9d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-separate-heterogeneous-words-with-space&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;별도의 이기종 단어를 공백으로 채우기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f994b01781e67140eef2838152e3b79e8063d5ea" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;find-file-hook&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;파일 후크 찾기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2eee2502312c71ccd1f25552d84cad62c3ff10e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;find-file-wildcards&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;파일 찾기 와일드 카드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f786a7e0c9b0a709e86cd918f6fd8a81c7ddb08" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer-margins&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;프레임-버퍼-마진 맞추기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9459b4e10392fbf7ae08150b2ab9839fb285818b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer-sizes&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;프레임-버퍼 크기 맞추기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49f27d043403426bbcb0c42c88443cb657bd91b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;프레임에 버퍼 맞추기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4810a1cb5472fc0c094cf0ef99331ad34866fcf3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-window-to-buffer-horizontally&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;창을 버퍼에 수평으로 맞추기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="322afabcf85694a7c8ac9bf4eb4832aacc2501da" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;focus-follows-mouse&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;focus-follows-mouse&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ff9d479a9c8993b0937c8435d198febce31f376" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-auto-hide-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;프레임 자동 숨기기 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9744b7fa5d91df7537cfb44c5b2f3a94dc6686c5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-inhibit-implied-resize&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;frame-inhibit-implied-resize&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08ecf2f14805a04a4dd96f781b8ac10d22b89677" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-resize-pixelwise&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;프레임 크기 조정 픽셀 단위&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f39c798fea2c6435a50a1cb0fdc648cba270803" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;garbage-collection-messages&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;가비지 컬렉션 메시지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17a531e0c306e100a3962a7e05b567a373f14ecb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;gc-cons-percentage&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;gc-cons-percentage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb157ce410eafa6a67e87afaba4c2fc5485da687" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;gc-cons-threshold&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;gc-cons-threshold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30bad75ed48273e169c41ea96840ae0eb7ffa5a9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;glyphless-char-display-control&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;glyphless-char-display-control&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63e0a17e6aefe87e369ca7880810ac8649b175cf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;help-char&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;help-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8977384f31f8d0f3d5d46fc68c96f50dd1d4ad9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;help-event-list&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;help-event-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="165d6c2e081ca11cff49e6fb65c220d7c955c535" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;history-delete-duplicates&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;기록 삭제 중복&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55cf165385612cd4121eb3f50f945b4df2dd327e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;history-length&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;역사 길이&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0d27372f683802a4a4e72b3312d58fd1364bc67" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;horizontal-scroll-bar-mode&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;가로 스크롤바 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eeec319582766a863b72eb767f46ba6ac4316bda" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;iconify-child-frame&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;iconify-child-frame&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c1b22b16c91c7126d42e1cf134d32fbbec481ec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;image-load-path&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;이미지로드 경로&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a6c6b047f7ca1cec00d7abc10155d2941513ff0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;imagemagick-enabled-types&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;imagemagick 지원 유형&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee56d5cd797f61829fdf983385a2f9701a2abe19" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;imagemagick-types-inhibit&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;imagemagick-types-inhibit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8c830199288cee63c3d58ae25523278267ab32b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indent-tabs-mode&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;들여 쓰기 탭 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bdcac469ff1b1d6819856fad89f48365208ff15" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indicate-buffer-boundaries&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;버퍼 경계 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="837acd4c4348a48941615e6b876ae12e9d4920f0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indicate-empty-lines&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;빈 줄 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ddd9c1a1f72ee9817c7c32c732aed967f392218" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-default-init&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;금지-기본-초기화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07ee4d6cbaaef8d228b264b06692e5585e8a0fb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-eol-conversion&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;억제 -eol- 변환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab10a55ffed759066103340443e65b954e1960af" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-startup-echo-area-message&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;금지-시작-에코-영역-메시지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be628ed715e60502d42231888b4c7ca4620a8838" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-startup-screen&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;금지 시작 화면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa2d025e15c4e51110800fc5901e83076b11b997" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-buffer-choice&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;초기 버퍼 선택&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="293febdb54eb561e30ef3288cfc814fbc417e433" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-frame-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;초기 프레임 앨리스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93302d21017c5104e5850f272e9e318d67c184c1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-major-mode&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;초기 주 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="074e13b8f4d8258a672514bee4c412708bb9d0f7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-scratch-message&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;초기 스크래치 메시지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95c4066e90e17aa5eb769e379fd7e1caf45cfdda" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;insert-default-directory&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;insert-default-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7f3ea4fb1875733b99668a0da9ee6c56244fb12" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kept-new-versions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;새 버전 유지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1898e46db12f091c72ed6975f33dc62df8a7874e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kept-old-versions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;보관 된 이전 버전&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41e072b67a02f47751c787fc6d6172fb05e0aa1e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-emacs-query-functions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;kill-emacs-query-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f644e2b33573cd4de36a63c99b9a3e8bdd4ef022" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-read-only-ok&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;kill-read-only-ok&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ddeca8678f5ad171a611c9d0d8d23b0f17ca2a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-ring-max&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;kill-ring-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c847d6d0f149a1f240d0cf38375643a2ed401c31" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;left-margin&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;왼쪽 여백&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3298ddabdbc62bf7e05d97d6422eebff6be6ac45" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;load-prefer-newer&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;load-prefer-newer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3963a3eb14253ac0ccea60b221c1260d525f01dd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mail-host-address&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;메일 호스트 주소&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f06fd63b93a8fa4fcf1e1082d8116fb99df55347" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;major-mode&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;주 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcebd7f372cd54dcf3d243db099cfbbde056d6fe" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;make-backup-file-name-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;make-backup-file-name-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37afdb68b7b57ad2fd4f950251ac180c069bd60f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;make-backup-files&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;백업 파일&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b97ab1598e8545c434f69ce7312ade87f3bf54df" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mark-even-if-inactive&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;비활성 인 경우에도 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29b548438ecc23999bb6af8e8cd5e3381527734d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mark-ring-max&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;mark-ring-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba640261d0635ced3f01b7cf76e99ff0ee821aef" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-lisp-eval-depth&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;max-lisp-eval-depth&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d70d60ad71a8596a7e00b971ff692df9e02b9bb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-mini-window-height&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;max-mini-window-height&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e100be4f93f5791cd49c58800512ff373fd93b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-specpdl-size&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;max-specpdl-size&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b842b2ed6ef3bab321a961a302ac916290e80e6b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;maximum-scroll-margin&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;최대 스크롤 마진&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afe2bb33beb852c77e9b756a4eeb3758a1a3deae" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;message-log-max&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;message-log-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="648dfdd3beb7f82d417e28af5d4cb6bc1047219c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;meta-prefix-char&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;meta-prefix-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f7062214fbe519baf6a2b422a9089498c686612" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;minibuffer-auto-raise&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;minibuffer-auto-raise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae608d5b35861b079b534bbfed4424d7e080aacd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;minibuffer-frame-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;minibuffer-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="435307e8b87f1b7d420f2a031d6389c44d421d7b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mode-line-format&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;mode-line-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f01ec468ac8d0cec2fa49ed0ab5e1e3778ccfe95" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mode-line-percent-position&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;mode-line-percent-position&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="107d8e9642da4ab0c9f0ba9330a618be2787aba0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mouse-autoselect-window&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;mouse-autoselect-window&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b00f64fb4c1ba156cc9027add8f100fe21153b64" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;next-screen-context-lines&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;다음 화면 컨텍스트 라인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a984c944e9211ac9e362f336ce2c95414abc4e0d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;no-redraw-on-reenter&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;재 기입시 다시 그리기 금지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42cfe6a1ec84264664b7bb4f6516c2bca8120d2a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;only-global-abbrevs&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;only-global-abbrevs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9189f6cbb4af201ac8d9c3c832b90f38c1b818b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;open-paren-in-column-0-is-defun-start&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;open-paren-in-column-0-is-defun-start&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1b533afe7aa23d666b931ee348c84efc2ff2695" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;overflow-newline-into-fringe&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;overflow-newline-into-fringe&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4277c81cc256986b3e5fbcae86c78c3d7e81d101" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;package-archives&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;패키지 아카이브&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abd3f45a2d6f1e46bdf412d5df4e1c9bb4151852" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;page-delimiter&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;페이지 구분 기호&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c868cfc194bf8e2f63b0921a49cb365562f136ab" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;paragraph-separate&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;단락으로 구분&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9fe1dae9cc26592d3b04439f592c2d92226b29a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;paragraph-start&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;단락 시작&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="215e019db282235c2f3291e6ab749c9615898555" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;parse-sexp-ignore-comments&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;parse-sexp-ignore-comments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ea235bbefe36faf62f02fd53105c489d9762d45" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frame-alist&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;팝업 프레임 앨리스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fff3d4a073e1b0f2c3d480b174b469a6261fca0f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frame-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;팝업 프레임 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1c4ea7edbd60b9bfcdc53c764cf88e6b72fbe91" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frames&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;팝업 프레임&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="146fc74ea723498ebd2b91c166cc4fd730f4feb9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-windows&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;팝업 창&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a5f0bbea5af962bc637e5721a1a67e4833ee0cc" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-buffer-completion-ignore-case&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;read-buffer-completion-ignore-case&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98fb75b07a5e3735455bf954c55376f8d390b26b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-buffer-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;읽기 버퍼 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22d5089b62007482b5348fa86b16e7ac8154b33e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-file-name-completion-ignore-case&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;read-file-name-completion-ignore-case&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b415a87fe83a8a974b0729bb7b5bbd626af05de" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-regexp-defaults-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;read-regexp-defaults-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9b32c965d073876adcf0c5afd895de8c2bff4f1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;recenter-positions&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : 최근 &lt;strong&gt;위치&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b9dae85338c4fd1cad1e36c317590539e44f777" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;recenter-redisplay&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : 최근 &lt;strong&gt;재표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9dc9594acb063584b5168d2dc47449e01cefeff4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;remote-file-name-inhibit-cache&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;원격 파일 이름 금지 캐시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2202b433e382bc61f939ea30c615d522198fddb1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;require-final-newline&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;require-final-newline&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c1e4c32fd28670113589d36c283eaccd26f7959" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;resize-mini-frames&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;크기 조정-미니 프레임&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2b4da97e84b2053107eea0e3e322971222e9008" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;resize-mini-windows&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;resize-mini-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4285a1385d7de52902a8aba6f4f1b36604df7970" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;revert-without-query&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;쿼리없이 되돌리기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07269d8d5663468257f7d330f18554727864a5ac" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;ring-bell-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;벨소리 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e869aab0065eea20bbd08c9d11b1bc8562582d81" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;safe-local-eval-forms&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;safe-local-eval-forms&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13a90cb7715959ebba083904ce2c1cd0dbd1a88c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;safe-local-variable-values&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;안전한 로컬 변수 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b293bc47fee2108c9d1a1b6d50913c8c321f82a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;save-abbrevs&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;save-abbrevs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69107dbd3903c8b02e3cd58d96bf1340d87a283" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scalable-fonts-allowed&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;확장 가능한 글꼴 허용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdd4fc021be16dc348456acf0556a6199d99b0fd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-bar-mode&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;스크롤바 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a628269f18dcce0eebf684334042e7c548235a16" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-conservatively&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;스크롤-보수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab5e0522ea630c192cca09006fd2287f77df520b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-down-aggressively&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;공격적으로 스크롤 다운&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9207ad18698d00baabac3dac3857a8e24a2b005b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-error-top-bottom&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;scroll-error-top-bottom&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4673c50748e2ffc639022e36426cb7fc04f51dbd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-margin&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;스크롤 여백&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24f3b5732086cd9ed909aab52296d30ba7c026ee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-preserve-screen-position&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;스크롤 유지 화면 위치&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="751af27c85e64122a8b18d15d25fdeaac5136a89" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-step&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;스크롤 단계&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed80e549ad0063462daa02267106df62d69dba8c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-up-aggressively&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;공격적으로 위로 스크롤&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b721261228369f123dac405285b1b2ccce90f95e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;selection-coding-system&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;선택 코딩 시스템&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5172be8c5a2198cededa723d7659c7ffafd1846" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;selective-display-ellipses&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;선택적 디스플레이 타원&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9181a2d8ef519c53398451122675253216bc24f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-double-space&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;문장 끝 이중 공백&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c82e39aa4d5dfe5f48821ea26be8c3c044acff1c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-without-period&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;마침표없이 문장 끝&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8af8bb3173b0b80e4e695ac8d858849a2546ec5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-without-space&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;공백없이 문장 끝&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29a5fbf9a48439ece48a6a2af628e7df22bd1dae" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;문장 끝&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a660e4a9ba6b509854a50125772c26d1d7131b04" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;server-after-make-frame-hook&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;서버 후 메이크 프레임 후크&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f036be396cfee6b169535fa5d2f7b00d7c2dbe50" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;site-run-file&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;사이트 실행 파일&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b30ed7c6921d901f572bc75513d72c4a9e4d19d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;small-temporary-file-directory&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;작은 임시 파일 디렉터리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="decfe30396e3a040072434ba95176d407cfd68a4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;smie-config&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;smie-config&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e80e4168dfd09e4d8585aa2c08d5e201649c6db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sort-fold-case&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;sort-fold-case&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b6369c4f9fa4713c763b0c6bb4106994040a780" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sort-numeric-base&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;sort-numeric-base&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d04e59beff571d6768b99ddd1b26fcd0e5fd0b81" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-height-threshold&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;분할 높이 임계 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9feb3596d3d8fadf098cd91902e8d2bff7d1f56" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-width-threshold&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;분할 너비 임계 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39f61f71631d3a8fcda108d48a846a6430155101" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-window-keep-point&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;분할 창 유지 지점&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12ae0eb93d05094e6b130af385cad3b2e934e420" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-window-preferred-function&lt;/strong&gt;</source>
          <target state="translated">사용자 옵션 : &lt;strong&gt;분할 창 선호 기능&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
