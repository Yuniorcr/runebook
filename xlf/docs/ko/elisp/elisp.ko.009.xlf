<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="3abc151a4c3968d2a6c63971643886b0b2cadccb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-mouse-position&lt;/strong&gt;&lt;em&gt;frame x y&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-mouse-position &lt;/strong&gt;&lt;em&gt;frame xy&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38b03f996f05e5623196246f4df9832314de8f2c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-network-process-option&lt;/strong&gt;&lt;em&gt;process option value &amp;amp;optional no-error&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-network-process-option &lt;/strong&gt;&lt;em&gt;프로세스 옵션 값 및 옵션 no-error&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0210f808c56f5c4658a9f5081773250c1d6d9dc9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-buffer&lt;/strong&gt;&lt;em&gt;process buffer&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-process-buffer &lt;/strong&gt;&lt;em&gt;프로세스 버퍼&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2893919679e3b05f5827825ab0a1ab22bda43ceb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-coding-system&lt;/strong&gt;&lt;em&gt;process &amp;amp;optional decoding-system encoding-system&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-process-coding-system &lt;/strong&gt;&lt;em&gt;프로세스 및 선택적 디코딩 시스템 인코딩 시스템&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89337c6b0fde26cefec1747b4056fda5200af35d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-datagram-address&lt;/strong&gt;&lt;em&gt;process address&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-process-datagram-address &lt;/strong&gt;&lt;em&gt;프로세스 주소&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad0e734afffb3e938f1f28e663cf92c17cf8a6c3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-filter&lt;/strong&gt;&lt;em&gt;process filter&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-process-filter &lt;/strong&gt;&lt;em&gt;프로세스 필터&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b79a47c57f72f89b0d422bbc7e64a47c403c5f97" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-plist&lt;/strong&gt;&lt;em&gt;process plist&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;set-process-plist &lt;/strong&gt;&lt;em&gt;프로세스 plist&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8a24c1963efd262ff03cdbb508d22eaed1db2909" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-query-on-exit-flag&lt;/strong&gt;&lt;em&gt;process flag&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;set-process-query-on-exit-flag &lt;/strong&gt;&lt;em&gt;프로세스 플래그&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19817cb34a248518172389721199af759a3eb790" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-sentinel&lt;/strong&gt;&lt;em&gt;process sentinel&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-process-sentinel &lt;/strong&gt;&lt;em&gt;process sentinel&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbfa271bd24d396d77365a6f785587782c2dbeef" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-thread&lt;/strong&gt;&lt;em&gt;process thread&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-process-thread &lt;/strong&gt;&lt;em&gt;프로세스 스레드&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51f60a51158b0d054e40a01a6635feee1c8fbfe6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-process-window-size&lt;/strong&gt;&lt;em&gt;process height width&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;set-process-window-size &lt;/strong&gt;&lt;em&gt;프로세스 높이 너비&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="737230e5b6ab015c7965d6cac1958f1f5d2a6d0b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-register&lt;/strong&gt;&lt;em&gt;reg value&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;등록 &lt;/strong&gt;&lt;em&gt;등록 값&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="132ba922538bc55495144997c835950625d1cf7e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-standard-case-table&lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-standard-case-table &lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7afc77e07d27bb5075d3da003c5183a89d1a2b55" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-syntax-table&lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;set-syntax-table &lt;/strong&gt;&lt;em&gt;테이블&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3bbb993b7f15fafc3ff28ef47084f28557cb9e80" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-terminal-parameter&lt;/strong&gt;&lt;em&gt;terminal parameter value&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-terminal-parameter &lt;/strong&gt;&lt;em&gt;터미널 매개 변수 값&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46edd143b0285c8a0e5c964608ab212669b285d0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-text-properties&lt;/strong&gt;&lt;em&gt;start end props &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-text-properties &lt;/strong&gt;&lt;em&gt;시작 끝 소품 및 선택적 개체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf64e4bc3b508233dfe9274eb9f08cd6257d17ee" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-transient-map&lt;/strong&gt;&lt;em&gt;keymap &amp;amp;optional keep-pred on-exit&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;임시지도 &lt;/strong&gt;&lt;em&gt;키맵 설정 및 종료시 유지 준비 옵션&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0abf62c5012c50173640e879275cbd4e810f16e7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-visited-file-modtime&lt;/strong&gt;&lt;em&gt;&amp;amp;optional time&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;방문한 파일 modtime 설정 &lt;/strong&gt;&lt;em&gt;및 선택적인 시간&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0797ff4d15cb8907ac4b32f31abfcbbcb589f44" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-buffer&lt;/strong&gt;&lt;em&gt;window buffer-or-name &amp;amp;optional keep-margins&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-buffer &lt;/strong&gt;&lt;em&gt;window buffer-or-name &amp;amp; optional keep-margins&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="084f6de1dc0606d5ef4d55f9419eeab2fa893694" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-combination-limit&lt;/strong&gt;&lt;em&gt;window limit&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;설정 창 조합 제한 &lt;/strong&gt;&lt;em&gt;창 제한&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07907c05cfc2c8e1068f17800bf13d725f0aef89" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-configuration&lt;/strong&gt;&lt;em&gt;configuration&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;설정 창 구성 &lt;/strong&gt;&lt;em&gt;구성&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c16d2df55ae508513c468554ef4feeeadf5758c4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-dedicated-p&lt;/strong&gt;&lt;em&gt;window flag&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-dedicated-p &lt;/strong&gt;&lt;em&gt;창 플래그&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92d18d9a9767c657abef294e4f0235fa0d5ac5a4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-display-table&lt;/strong&gt;&lt;em&gt;window table&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;설정 창 표시 테이블 &lt;/strong&gt;&lt;em&gt;창 테이블&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d71362e57c8d646328b6b46895eac8f64ced2ac3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-fringes&lt;/strong&gt;&lt;em&gt;window left &amp;amp;optional right outside-margins persistent&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-fringes &lt;/strong&gt;&lt;em&gt;창 왼쪽 및 옵션 오른쪽 외부 여백 지속&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7882f4b2bd3e72033a1a16f8b5ceff6ec9af802c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-group-start&lt;/strong&gt;&lt;em&gt;window position &amp;amp;optional noforce&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;설정 창 그룹 시작 &lt;/strong&gt;&lt;em&gt;창 위치 및 옵션 noforce&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a93f5b87c23472dc60d88e452a634c1b7fe46a26" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-hscroll&lt;/strong&gt;&lt;em&gt;window columns&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;set-window-hscroll &lt;/strong&gt;&lt;em&gt;창 열&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9caeb55800d1e6adcdb89bbf943b62fe28b3d725" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-margins&lt;/strong&gt;&lt;em&gt;window left &amp;amp;optional right&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-margins &lt;/strong&gt;&lt;em&gt;window left &amp;amp; optional right&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da5d56830602448fd9e43a98f676858edeea9db1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-next-buffers&lt;/strong&gt;&lt;em&gt;window next-buffers&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-next-buffers &lt;/strong&gt;&lt;em&gt;창 다음 버퍼&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89872ae8869c15f8af7459031a5dc583a811c665" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-parameter&lt;/strong&gt;&lt;em&gt;window parameter value&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-parameter &lt;/strong&gt;&lt;em&gt;창 매개 변수 값&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8865c8ba402b52c1e1e8e2da79dab78490086f6e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-point&lt;/strong&gt;&lt;em&gt;window position&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;em&gt;창 위치 &lt;/em&gt;&lt;strong&gt;설정 &lt;/strong&gt;&lt;em&gt;창 위치&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="747adaaaefcca2f753bccc0ccf5dce127ca456cf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-prev-buffers&lt;/strong&gt;&lt;em&gt;window prev-buffers&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-prev-buffers &lt;/strong&gt;&lt;em&gt;window prev-buffers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1bb039822e514873096da374ea88ed7343a85c7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-scroll-bars&lt;/strong&gt;&lt;em&gt;window &amp;amp;optional width vertical-type height horizontal-type persistent&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-scroll-bars &lt;/strong&gt;&lt;em&gt;창 및 옵션 너비 수직 유형 높이 수평 유형 지속&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c778e2089441359ff65bde760e607370109a5d9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-start&lt;/strong&gt;&lt;em&gt;window position &amp;amp;optional noforce&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;설정 창 시작 &lt;/strong&gt;&lt;em&gt;창 위치 및 옵션 noforce&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e1ae202c6090e71db6d41c49c46afbf8508c510" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-window-vscroll&lt;/strong&gt;&lt;em&gt;window lines &amp;amp;optional pixels-p&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-window-vscroll &lt;/strong&gt;&lt;em&gt;창 행 및 선택적 픽셀 -p&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="208bd0a84ce9aad18bebcd64d97db90edc72430e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-xwidget-plist&lt;/strong&gt;&lt;em&gt;xwidget plist&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;set-xwidget-plist &lt;/strong&gt;&lt;em&gt;xwidget plist&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b02f74e344d458f5f655eb2f2e1327005711d77c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set-xwidget-query-on-exit-flag&lt;/strong&gt;&lt;em&gt;xwidget flag&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;set-xwidget-query-on-exit-flag &lt;/strong&gt;&lt;em&gt;xwidget 플래그&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="391619dc6d83ab3cabb80aaae5d1341d90245276" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;set&lt;/strong&gt;&lt;em&gt;symbol value&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;em&gt;기호 값 &lt;/em&gt;&lt;strong&gt;설정&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afc9265405cc38d25061cfea77903434dfcefba2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;setcar&lt;/strong&gt;&lt;em&gt;cons object&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;setcar &lt;/strong&gt;&lt;em&gt;cons object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c3ecfc1239884901fed541879b0baee8430d342" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;setcdr&lt;/strong&gt;&lt;em&gt;cons object&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;setcdr &lt;/strong&gt;&lt;em&gt;cons 개체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a51685985fe9fd1c4f1f6acad4ad3d0f346c48c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;setplist&lt;/strong&gt;&lt;em&gt;symbol plist&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;setplist &lt;/strong&gt;&lt;em&gt;기호 plist&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faf10fa1f60739c8da8a322c87b0c89521c32d56" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;shell-command-to-string&lt;/strong&gt;&lt;em&gt;command&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;shell-command-to-string &lt;/strong&gt;&lt;em&gt;명령&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dda6d99bbf89f65f1884f31f8cc811def6032ded" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;shell-quote-argument&lt;/strong&gt;&lt;em&gt;argument&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;쉘 인용 인수 &lt;/strong&gt;&lt;em&gt;인수&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e688ee4261ea16c1c3b88b0bc6d261b5c3a67fa0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;shr-insert-document&lt;/strong&gt;&lt;em&gt;dom&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;shr-insert-document &lt;/strong&gt;&lt;em&gt;dom&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b682b0bc51db45a085de3148ae1d3fdbef9bad16" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;signal&lt;/strong&gt;&lt;em&gt;error-symbol data&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;신호 &lt;/strong&gt;&lt;em&gt;오류 기호 데이터&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="285da8505c8cb5f1a3da787585f7d798503d725e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sin&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;sin &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd67144b8399cbf61197e3dbae967239a607e37e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;single-key-description&lt;/strong&gt;&lt;em&gt;event &amp;amp;optional no-angles&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;단일 키 설명 &lt;/strong&gt;&lt;em&gt;이벤트 및 선택적 각도 없음&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b8c23cc5d7e251ddc44a664b18258c5723c14e7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sit-for&lt;/strong&gt;&lt;em&gt;seconds &amp;amp;optional nodisp&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;em&gt;초 및 선택적 nodisp &lt;/em&gt;&lt;strong&gt;앉아&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c04d12779d10db8cf71d89882efb29c0d1c0c49" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;skip-chars-backward&lt;/strong&gt;&lt;em&gt;character-set &amp;amp;optional limit&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;건너 뛰기 문자 뒤로 &lt;/strong&gt;&lt;em&gt;문자 세트 및 옵션 제한&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="400e46248185561365059a722e7933fec5842926" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;skip-chars-forward&lt;/strong&gt;&lt;em&gt;character-set &amp;amp;optional limit&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;문자 &lt;/strong&gt;&lt;em&gt;세트 &lt;/em&gt;&lt;strong&gt;건너 뛰기 &lt;/strong&gt;&lt;em&gt;및 선택적 제한&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad5ee5310573ef1c27f5f9b59f3c9b24c57716c8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;skip-syntax-backward&lt;/strong&gt;&lt;em&gt;syntaxes &amp;amp;optional limit&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;구문 뒤로 건너 뛰기 &lt;/strong&gt;&lt;em&gt;구문 및 선택적 제한&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a2ce6395e406442e7cbc354e781ad2b5ed524a4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;skip-syntax-forward&lt;/strong&gt;&lt;em&gt;syntaxes &amp;amp;optional limit&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;구문 건너 뛰기 &lt;/strong&gt;&lt;em&gt;구문 및 선택적 제한&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c84f00454a1aa0f676bee5e65f7809b60eb9a3c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sleep-for&lt;/strong&gt;&lt;em&gt;seconds &amp;amp;optional millisec&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;수면- &lt;/strong&gt;&lt;em&gt;초 및 선택적 millisec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57704eef35e6d514158716f93041286be747f9cc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-bnf-&amp;gt;prec2&lt;/strong&gt;&lt;em&gt;bnf &amp;amp;rest resolvers&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-bnf-&amp;gt; prec2 &lt;/strong&gt;&lt;em&gt;bnf &amp;amp; rest resolvers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="feaaa6ce14377f039f531540d530cdca06e0235f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-config-local&lt;/strong&gt;&lt;em&gt;rules&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-config-local &lt;/strong&gt;&lt;em&gt;규칙&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d51dd6289574c861ca76c5bb128b05904b4e9a95" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-merge-prec2s&lt;/strong&gt;&lt;em&gt;&amp;amp;rest tables&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-merge-prec2s &lt;/strong&gt;&lt;em&gt;&amp;amp; rest 테이블&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45d91409d4c92173e9b6b9acb551b21da4e542f9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-prec2-&amp;gt;grammar&lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-prec2-&amp;gt; grammar &lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72f245bd6083d22c794ab4ca1e3ec308e6eca5b4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-precs-&amp;gt;prec2&lt;/strong&gt;&lt;em&gt;precs&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-precs-&amp;gt; prec2 &lt;/strong&gt;&lt;em&gt;precs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2eed0dacfd0735923903de94759b13fab6430fbb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-bolp&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-bolp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="325d229f7906618fc303eb1257251f6238f990b9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-hanging-p&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-hanging-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57fd3b99c89cac9b015ac961b28c9cf44c0be4ce" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-next-p&lt;/strong&gt;&lt;em&gt;&amp;amp;rest tokens&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-next-p &lt;/strong&gt;&lt;em&gt;&amp;amp; rest 토큰&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="576da7eb86008d3d58a3527e4728f627216e70d9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-parent-p&lt;/strong&gt;&lt;em&gt;&amp;amp;rest parents&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-parent-p &lt;/strong&gt;&lt;em&gt;&amp;amp; rest 부모님&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d55df3f4a89a791af1edfba5e43983786f3f0bc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-parent&lt;/strong&gt;&lt;em&gt;&amp;amp;optional offset&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-parent &lt;/strong&gt;&lt;em&gt;및 옵션 오프셋&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="931d392a055184403f0fa27020296ce9e14481d3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-prev-p&lt;/strong&gt;&lt;em&gt;&amp;amp;rest tokens&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-prev-p &lt;/strong&gt;&lt;em&gt;&amp;amp; rest 토큰&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f77d79c3cb8eb196f0e8d3e14a4601835d745b57" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-separator&lt;/strong&gt;&lt;em&gt;method&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-separator &lt;/strong&gt;&lt;em&gt;방법&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bab1a0d0c96b452a6482a86a3bad99109d88007d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-sibling-p&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-rule-sibling-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74087efbdea0102aba8deb87707895661a297899" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-setup&lt;/strong&gt;&lt;em&gt;grammar rules-function &amp;amp;rest keywords&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;smie-setup &lt;/strong&gt;&lt;em&gt;문법 규칙-기능 및 휴식 키워드&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="793caede0616ac66a8456a922c0b899fae20c1f0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sort-subr&lt;/strong&gt;&lt;em&gt;reverse nextrecfun endrecfun &amp;amp;optional startkeyfun endkeyfun predicate&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;sort-subr &lt;/strong&gt;&lt;em&gt;reverse nextrecfun endrecfun &amp;amp; optional startkeyfun endkeyfun 술어&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65014cdb10106fe65a4668873cfdb09eb5c057f6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sort&lt;/strong&gt;&lt;em&gt;sequence predicate&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;정렬 &lt;/strong&gt;&lt;em&gt;순서 술어&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5013c25748ea8edbc14eb14a0669adf7c8951945" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;special-form-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;special-form-p &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2e3717b5d5109756011171fefed759af70e0ade" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;special-variable-p&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;특수 변수 p &lt;/strong&gt;&lt;em&gt;기호&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3f4435780cad3137c817ca5a642c32bb3faad6d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-string-and-unquote&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional separators&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;분할 &lt;/strong&gt;&lt;em&gt;문자열 및 &lt;/em&gt;&lt;strong&gt;인용 해제 &lt;/strong&gt;&lt;em&gt;문자열 및 선택적 구분 기호&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcc31163d06d23c9c806b26cdd4a6ea8bf056c99" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional separators omit-nulls trim&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;분할 문자열 &lt;/strong&gt;&lt;em&gt;문자열 및 선택적 구분 기호 생략 널 트림&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38f034881c5b4e93360bc2e6d24baa72853e9518" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-window-sensibly&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;분할 창-현명하게 &lt;/strong&gt;&lt;em&gt;&amp;amp; optional 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df5362778cd663c68d3ae7d9c3d2cab399ad9049" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window size side pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;분할 창 &lt;/strong&gt;&lt;em&gt;및 선택적인 창 크기 측 픽셀 단위&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08a81adfd49b06ff73aa3bae2c0f331d987323a1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sqrt&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;sqrt &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="821a8918c4b9b1928861a865cd3062c5ee19f319" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;standard-case-table&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;표준 케이스 테이블&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf18aa5c30a12fbe4e10918c2e0caa651c2a0331" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;standard-category-table&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;표준 카테고리 테이블&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fbfc2a4a7d543e26c435812da2906006f12e1de" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;standard-syntax-table&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;표준 구문 테이블&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="183bc9322dfc3146ee9ea555545ad8d5dcb74253" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-file-process-shell-command&lt;/strong&gt;&lt;em&gt;name buffer-or-name command&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;start-file-process-shell-command &lt;/strong&gt;&lt;em&gt;name buffer-or-name 명령&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd7b2379eb364a905d20f1d39964c17d208fc055" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-file-process&lt;/strong&gt;&lt;em&gt;name buffer-or-name program &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;시작 파일 프로세스 &lt;/strong&gt;&lt;em&gt;이름 버퍼 또는 이름 프로그램 &amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c9a35caafdb4f18dbf99a36b80e14fc1cdc8d63" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-process-shell-command&lt;/strong&gt;&lt;em&gt;name buffer-or-name command&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;start-process-shell-command &lt;/strong&gt;&lt;em&gt;name buffer-or-name 명령&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c07e986506e272f875456977830a7cf299fd5e63" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-process&lt;/strong&gt;&lt;em&gt;name buffer-or-name program &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;시작 프로세스 &lt;/strong&gt;&lt;em&gt;이름 버퍼 또는 이름 프로그램 &amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe50e8c2e6ad4a228e46c4f3e6ad7a7bb0072718" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;stop-process&lt;/strong&gt;&lt;em&gt;&amp;amp;optional process current-group&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;중지 프로세스 &lt;/strong&gt;&lt;em&gt;및 옵션 프로세스 현재 그룹&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4edd90f2358dd6fb67a3fac316a3bdd090fbdc17" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;store-substring&lt;/strong&gt;&lt;em&gt;string idx obj&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;store-substring &lt;/strong&gt;&lt;em&gt;문자열 idx obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1330a3dc3eab19e1789ac14fc8f0f03e29ed994" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string&amp;lt;&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;string &amp;lt; &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09e2ccd1ecc348737ed9cd456a4517248e55d497" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-as-multibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;멀티 바이트 &lt;/strong&gt;&lt;em&gt;문자열로 문자열&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49bccbdcce6624072ab9e4d642f26eab8184f8c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-as-unibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;유니 바이트 &lt;/strong&gt;&lt;em&gt;문자열로 문자열&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="770e8134569c458e95d2934d68561ed2737a5ca0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-bytes&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;문자열 바이트 &lt;/strong&gt;&lt;em&gt;문자열&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc7e67f962be71d58130f4a720d8c2ab5642342a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-collate-equalp&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional locale ignore-case&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;string-collate-equalp &lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp; optional locale ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67f95b7540c3939dddd48fb0d77b8a965d41ac82" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-collate-lessp&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional locale ignore-case&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;string-collate-lessp &lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp; optional locale ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7cd11a5e434cda056aaf9c9da374cab065a6a6c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-distance&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional bytecompare&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;string-distance &lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp; optional bytecompare&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ea5710993adb8175ead17afb02f7a0cf940a998" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-equal&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;문자열 동일 &lt;/strong&gt;&lt;em&gt;문자열 1 문자열 2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01cb96e8b6a32a45a61cf97599d7cea365f9e4c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-greaterp&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;string-greaterp &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56c941a710f6bc66390a41bdb086d11aaf35522c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-lessp&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;string-lessp &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac5527fc8de07f9372daae93998033c564b0c42d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-match-p&lt;/strong&gt;&lt;em&gt;regexp string &amp;amp;optional start&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;string-match-p &lt;/strong&gt;&lt;em&gt;regexp string &amp;amp; optional start&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa3c17ab9bc075c89c21b3dc3b12983626884885" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-match&lt;/strong&gt;&lt;em&gt;regexp string &amp;amp;optional start&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;문자열 일치 &lt;/strong&gt;&lt;em&gt;정규식 문자열 및 선택적 시작&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe0d77ce49383006dfa70f37d54436eb5f67b117" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-or-null-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;string-or-null-p &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b121bdf258803ca6e77ffa5f841a000e0d114762" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-prefix-p&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;string-prefix-p &lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp; optional ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df936c61ad70bef5478d7d029c35fd24816e9746" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-suffix-p&lt;/strong&gt;&lt;em&gt;suffix string &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;string-suffix-p &lt;/strong&gt;&lt;em&gt;접미사 문자열 및 선택 사항 인 ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46810f0169f2fb4d29f5a2eb4bfdb7935bf16861" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-char&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;문자열 대 문자 &lt;/strong&gt;&lt;em&gt;문자열&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a682003e5d7dfa988e0c8ada135408b001f52b0a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-multibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;문자열에서 멀티 바이트 &lt;/strong&gt;&lt;em&gt;문자열로&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2685a342007322e10f4bbbb3a7acdf6f06ee48f5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-number&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional base&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;string-to-number &lt;/strong&gt;&lt;em&gt;문자열 및 옵션 기반&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c03d4db2bb05e0f1cfab14fb30f51641fdd92f8e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-syntax&lt;/strong&gt;&lt;em&gt;desc&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;문자열에서 구문으로 &lt;/strong&gt;&lt;em&gt;desc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47db59ea8ac12fe9f587caec2e6b7c5c0432fafc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-unibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;문자열에서 유니 바이트 &lt;/strong&gt;&lt;em&gt;문자열로&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="461464bf7d25349b796fdd4810a2f0a7d22c0801" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-version-lessp&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;string-version-lessp &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1b32a0d6d8cbaf3d99e550bbcaf9a1102e16fb6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-width&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;문자열 너비 &lt;/strong&gt;&lt;em&gt;문자열&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="352a59fafc41167fc081c02c319dd9a08f8a852e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string&lt;/strong&gt;&lt;em&gt;&amp;amp;rest characters&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;문자열 &lt;/strong&gt;&lt;em&gt;및 나머지 문자&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1a88579ba19d7ff1d43ef424ae70d6467c71ad7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string=&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;string = &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e92e7cbc4802a96339c9982551a039742c98b7f6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;stringp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;stringp &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0df16dc9d07d6a73b94d130eb96178b0531b886d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;subr-arity&lt;/strong&gt;&lt;em&gt;subr&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;subr-arity &lt;/strong&gt;&lt;em&gt;subr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42e82398542a79998f55d0f976fc4ed4cd280147" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;subrp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;subrp &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d6b47cdad3df088fc2ff441ad0b9cb509724310" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;subst-char-in-region&lt;/strong&gt;&lt;em&gt;start end old-char new-char &amp;amp;optional noundo&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;subst-char-in-region &lt;/strong&gt;&lt;em&gt;시작 끝 old-char new-char &amp;amp; optional noundo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d132f6a71b144ba7841ea007e3a8a423da2547c3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substitute-command-keys&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;대체 명령 키 &lt;/strong&gt;&lt;em&gt;문자열&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f1c5bcfeaf4528a950d4ed26da1a144bb76187e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substitute-in-file-name&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;파일 이름 대체 파일 &lt;/strong&gt;&lt;em&gt;이름&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf6dcef9d93ca652873680f02762b098337c19ca" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substitute-key-definition&lt;/strong&gt;&lt;em&gt;olddef newdef keymap &amp;amp;optional oldmap&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;대체 키 정의 &lt;/strong&gt;&lt;em&gt;olddef newdef 키맵 및 옵션 oldmap&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11022a60326c965b74c05098e2d5c07d2fce4365" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substring-no-properties&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional start end&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;하위 문자열-속성 없음 &lt;/strong&gt;&lt;em&gt;문자열 및 선택적인 시작 끝&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="991b0a2b8bb216409c3d753969bc59b684ac75dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substring&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional start end&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;하위 &lt;/strong&gt;&lt;em&gt;문자열 문자열 및 선택적 시작 끝&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f855b1526fece8e9bb6f220588a096367090011" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;suppress-keymap&lt;/strong&gt;&lt;em&gt;keymap &amp;amp;optional nodigits&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;억제-키맵 &lt;/strong&gt;&lt;em&gt;키맵 및 옵션 nodigits&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68b18929214970a70d297c2b273d3d65d9f5f7e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;suspend-tty&lt;/strong&gt;&lt;em&gt;&amp;amp;optional tty&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;suspend-tty &lt;/strong&gt;&lt;em&gt;및 optional tty&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db233700f7d83075922254cdba5211d3dd416f07" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-circle&lt;/strong&gt;&lt;em&gt;svg x y radius &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;svg-circle &lt;/strong&gt;&lt;em&gt;svg xy radius &amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b937d9c6e9267a5dcc5ada70a1592282ce38372f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-clip-path&lt;/strong&gt;&lt;em&gt;svg &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;svg-clip-path &lt;/strong&gt;&lt;em&gt;svg &amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a3384a2990b209fe0957df5149acbc511d20923" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-create&lt;/strong&gt;&lt;em&gt;width height &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-create&lt;/strong&gt;&lt;em&gt;width height &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c788692d891336fddd3e053923c31c6e2099ea0c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-ellipse&lt;/strong&gt;&lt;em&gt;svg x y x-radius y-radius &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-ellipse&lt;/strong&gt;&lt;em&gt;svg x y x-radius y-radius &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d6359ccd605b6da5a9cf85fa2d7004901257787" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-embed&lt;/strong&gt;&lt;em&gt;svg image image-type datap &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-embed&lt;/strong&gt;&lt;em&gt;svg image image-type datap &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c5b6883ac8dd7b887d7829db68871c329f3e348" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-gradient&lt;/strong&gt;&lt;em&gt;svg id type stops&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-gradient&lt;/strong&gt;&lt;em&gt;svg id type stops&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1ac4ad0c3989da0255197a17344b1391fcf0c7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-image&lt;/strong&gt;&lt;em&gt;svg&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-image&lt;/strong&gt;&lt;em&gt;svg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3ef83d3549b0d10d3794e6de24a9f350afcdc5e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-line&lt;/strong&gt;&lt;em&gt;svg x1 y1 x2 y2 &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-line&lt;/strong&gt;&lt;em&gt;svg x1 y1 x2 y2 &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4d7f0b746114c094a89d3843df93c64cd1d302a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-node&lt;/strong&gt;&lt;em&gt;svg tag &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-node&lt;/strong&gt;&lt;em&gt;svg tag &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d74c03fa33ef6cbeebdc3ce8eee823a8fba6d4aa" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-path&lt;/strong&gt;&lt;em&gt;svg commands &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-path&lt;/strong&gt;&lt;em&gt;svg commands &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa4c8e6f24acbcf589c0f19b38440f08e6289056" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-polygon&lt;/strong&gt;&lt;em&gt;svg points &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-polygon&lt;/strong&gt;&lt;em&gt;svg points &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be9bd41b7b2275a863e1ee27c62a2db89b484e29" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-polyline&lt;/strong&gt;&lt;em&gt;svg points &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-polyline&lt;/strong&gt;&lt;em&gt;svg points &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00ced8e9ac1369ca868181bda3d6ee1a4422d8f8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-rectangle&lt;/strong&gt;&lt;em&gt;svg x y width height &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-rectangle&lt;/strong&gt;&lt;em&gt;svg x y width height &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa29403fb272db7db4b63a6be3bd13f32041b778" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-remove&lt;/strong&gt;&lt;em&gt;svg id&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-remove&lt;/strong&gt;&lt;em&gt;svg id&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb5f35709c5457b057432a82e7ba40112b2ef325" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-text&lt;/strong&gt;&lt;em&gt;svg text &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;svg-text&lt;/strong&gt;&lt;em&gt;svg text &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2a277b02b0fbcf6919360b5d3b7b7247b0bd1e3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sxhash-eq&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;sxhash-eq&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="356c4be403278116fae295ef6e12965d8e7caab7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sxhash-eql&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;sxhash-eql&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef6abe80b92418038028633dd5b7abd8299867b4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sxhash-equal&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;sxhash-equal&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0af25972888a173e6b9a585dcaf377c653fddaa0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-file&lt;/strong&gt;&lt;em&gt;symbol &amp;amp;optional type&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;symbol-file&lt;/strong&gt;&lt;em&gt;symbol &amp;amp;optional type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5ee5cfc69a252acc6a93f97caf0294ab75348ed" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-function&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;symbol-function&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef9c73059c26fd08a4528a9a5918451b2ac0f7aa" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-name&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;symbol-name&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31cc9d5b106279f364fe2aa12cafa9865674d8f7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-plist&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;symbol-plist&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bde7ad5a7622b738d05dca511494dd1648c67eac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-value&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;symbol-value&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ece1c06207095d32a4bf43af9815ed2d3efc6b1d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbolp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;symbolp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d99b7b689eb68a05c6b91a83147b4625d8b529c8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-after&lt;/strong&gt;&lt;em&gt;pos&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-after&lt;/strong&gt;&lt;em&gt;pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bd5eaac2863c9c0139f655a6542809c0c7b0836" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-class&lt;/strong&gt;&lt;em&gt;syntax&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-class&lt;/strong&gt;&lt;em&gt;syntax&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="049f02e358a763490a1b710d6fa8dd65cf226254" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss-context&lt;/strong&gt;&lt;em&gt;state&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-ppss-context&lt;/strong&gt;&lt;em&gt;state&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="734555132f355be3ef39856d22ce237312f7f579" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss-flush-cache&lt;/strong&gt;&lt;em&gt;beg &amp;amp;rest ignored-args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-ppss-flush-cache&lt;/strong&gt;&lt;em&gt;beg &amp;amp;rest ignored-args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="749e3dd5abc997bee83273ff66977aca26ac94e3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss-toplevel-pos&lt;/strong&gt;&lt;em&gt;state&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-ppss-toplevel-pos&lt;/strong&gt;&lt;em&gt;state&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf8dc3ee4f3de1d33156bff9e9be637d6b16073e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-ppss&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="347abddde6c9b57488696e10daffe6c6e2bbed7b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec3d9a1c194ab6f1f2f940b2a528d54333da6132" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-table&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;syntax-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="000b879b3b0248ae117f17c694d1a7398d484e56" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;system-groups&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;system-groups&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e35d2381b502c4ee6626ce1fd63fbb5db9d575c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;system-name&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;system-name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aad91ccb1e2b61d228b9dd7fae275d07b2f66267" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;system-users&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;system-users&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6098fb2a7709ab7eff5ba589c9af83051bdd2f8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-clear-all-tags&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-clear-all-tags&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51b7a3dc38315716ac213d1dc1763321eccdcb26" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-delete-entry&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-delete-entry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28614f43667ef0da739c23a6eaba789903a68d17" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-get-entry&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-get-entry&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e86f5cb8ec9f55c60c811ac7a4a19624217c6c4e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-get-id&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-get-id&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce4d1dbbd1b6cdf70fd9c8a0d4452af4db086ad2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-header-overlay-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional POS&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-header-overlay-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional POS&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adfe6f1ac4f1169af7f5c97dd41d793e55453215" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-init-header&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-init-header&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40b949767d49073761469f6a82ecb3a7b1b2a9ea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-print&lt;/strong&gt;&lt;em&gt;&amp;amp;optional remember-pos update&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-print&lt;/strong&gt;&lt;em&gt;&amp;amp;optional remember-pos update&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6547bb774400bca8935f35ed1fb95fe2fa474f9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-put-tag&lt;/strong&gt;&lt;em&gt;tag &amp;amp;optional advance&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-put-tag&lt;/strong&gt;&lt;em&gt;tag &amp;amp;optional advance&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="024a3e0e06fbdf7267c06e6ba03cbed24d990122" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-set-col&lt;/strong&gt;&lt;em&gt;col desc &amp;amp;optional change-entry-data&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tabulated-list-set-col&lt;/strong&gt;&lt;em&gt;col desc &amp;amp;optional change-entry-data&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e90d31a0542e70383ea31c92ce7c2eaa821b077b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tan&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tan&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f859dd6a09cd632fa23cfad67d45dff8983bd413" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;temporary-file-directory&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;temporary-file-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffd0dda0b05a5a6681b5aa5051fa2bc73428cd0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-coding-system&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;terminal-coding-system&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ebffcf0f17b68796843dae599e1e512f5545222" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-list&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;terminal-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76e2db443bc7442b2a2ea0ac4cd5f44da07a9a47" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;terminal-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cf20dff17a85531d07fb4c60cf444682a04d555" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;terminal-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="936c4dbdc0234eb59c267836a47dcb14c217c8e8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-parameter&lt;/strong&gt;&lt;em&gt;terminal parameter&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;terminal-parameter&lt;/strong&gt;&lt;em&gt;terminal parameter&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e33519a133c002a4a26f258714f4d29f38ea2006" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-parameters&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;terminal-parameters&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="116ca99a50fa47897734d3d55c9fc864004a0607" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terpri&lt;/strong&gt;&lt;em&gt;&amp;amp;optional stream ensure&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;terpri&lt;/strong&gt;&lt;em&gt;&amp;amp;optional stream ensure&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce3e3f3135b49115d611a6b5b83cb8d7bd73db15" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;test-completion&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;test-completion&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39e36528777a8a24178b7a3f5f26e2cd001ccd76" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-char-description&lt;/strong&gt;&lt;em&gt;character&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;text-char-description&lt;/strong&gt;&lt;em&gt;character&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4440a43d1d3f5504d516266e091d5d69c1e625e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-properties-at&lt;/strong&gt;&lt;em&gt;position &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;text-properties-at&lt;/strong&gt;&lt;em&gt;position &amp;amp;optional object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c06f60d0ac2b3365c254f08252ca6b6d6d45a1a6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-any&lt;/strong&gt;&lt;em&gt;start end prop value &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;text-property-any&lt;/strong&gt;&lt;em&gt;start end prop value &amp;amp;optional object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5cfc0748b921ee7f6a97797595fd7e5167387ad" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-not-all&lt;/strong&gt;&lt;em&gt;start end prop value &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;text-property-not-all&lt;/strong&gt;&lt;em&gt;start end prop value &amp;amp;optional object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4a011b8b86bb545d57af1ca333e03eeaf8fce20" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-search-backward&lt;/strong&gt;&lt;em&gt;prop &amp;amp;optional value predicate not-current&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;text-property-search-backward&lt;/strong&gt;&lt;em&gt;prop &amp;amp;optional value predicate not-current&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87375f813b499e13b0f132db237c0b7dd8e969fd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-search-forward&lt;/strong&gt;&lt;em&gt;prop &amp;amp;optional value predicate not-current&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;text-property-search-forward&lt;/strong&gt;&lt;em&gt;prop &amp;amp;optional value predicate not-current&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bdc4aed27e2b19aacd17d1af152860dc9bec9af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thing-at-point&lt;/strong&gt;&lt;em&gt;thing &amp;amp;optional no-properties&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thing-at-point&lt;/strong&gt;&lt;em&gt;thing &amp;amp;optional no-properties&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f675d128837e01702ba8833bc230b92e1d9acec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;this-command-keys-vector&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;this-command-keys-vector&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20e8791016c3db0bb20252ce623cbcbcf2513ce6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;this-command-keys&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;this-command-keys&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aea6136a633538b94fc10a3eb918373aedddffd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread--blocker&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thread--blocker&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e29e850ef6ded11b848b0fae3e582017051818dc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-join&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thread-join&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3b646478d20a177b35809aaa4a40fb7da71a2003" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-last-error&lt;/strong&gt;&lt;em&gt;&amp;amp;optional cleanup&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thread-last-error&lt;/strong&gt;&lt;em&gt;&amp;amp;optional cleanup&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b607af40c1df513df3ce7dd24351a21cf81c03a3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-live-p&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thread-live-p&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c4ad7f02b50a6c412cc413b2c75ff2f958856e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-name&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thread-name&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d51ac1e87c3f0ea9d5dfff20e77847df401efd6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-signal&lt;/strong&gt;&lt;em&gt;thread error-symbol data&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thread-signal&lt;/strong&gt;&lt;em&gt;thread error-symbol data&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="223f8761f827893d083be3a5f89286b3da40deac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-yield&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thread-yield&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aef5f30c6ed42144e47327be04e1f13bc7deee95" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;threadp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;threadp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00a9a6621e0bf1a606c3e34c37c16ff26e8c5a20" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;throw&lt;/strong&gt;&lt;em&gt;tag value&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;throw&lt;/strong&gt;&lt;em&gt;tag value&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f05ce7d1b219bc2400460168ca872d427af2ad9d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thunk-force&lt;/strong&gt;&lt;em&gt;thunk&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;thunk-force&lt;/strong&gt;&lt;em&gt;thunk&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce3cdc0f9e518b06a9085ddf26165322976fd478" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-add&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;time-add&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f34759dcef5aa6e8140615c627c77af38e089647" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-convert&lt;/strong&gt;&lt;em&gt;time &amp;amp;optional form&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;time-convert&lt;/strong&gt;&lt;em&gt;time &amp;amp;optional form&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0b523e1c291791c3944241e6342fc2dd0ff8be2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-equal-p&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;time-equal-p&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbed692f34b8ab40753cff8a6bc94e8753a0f6cf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-less-p&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;time-less-p&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a89c202b29d42a8a04ee34bbab735de5cd3b2bb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-subtract&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;time-subtract&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db42f98e4fb277bfa96ff4fe74d06f1f5a3702ee" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-to-day-in-year&lt;/strong&gt;&lt;em&gt;time-value&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;time-to-day-in-year&lt;/strong&gt;&lt;em&gt;time-value&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a209c7b1adb1949d8917bf0568f355d14d799f8a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-to-days&lt;/strong&gt;&lt;em&gt;time-value&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;time-to-days&lt;/strong&gt;&lt;em&gt;time-value&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4ef3f1c1386f6b1530b4800a696d1af0cc81b63" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;timerp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;timerp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7412f6f4139342308ceb177db6e795c66a676750" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tool-bar-add-item-from-menu&lt;/strong&gt;&lt;em&gt;command icon &amp;amp;optional map &amp;amp;rest props&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tool-bar-add-item-from-menu&lt;/strong&gt;&lt;em&gt;command icon &amp;amp;optional map &amp;amp;rest props&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6eb2bd4c421c208922f149fcdf8748648b44ddb7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tool-bar-add-item&lt;/strong&gt;&lt;em&gt;icon def key &amp;amp;rest props&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tool-bar-add-item&lt;/strong&gt;&lt;em&gt;icon def key &amp;amp;rest props&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acb98a30cf56d3f0024c29319961641d2163ab1f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tool-bar-local-item-from-menu&lt;/strong&gt;&lt;em&gt;command icon in-map &amp;amp;optional from-map &amp;amp;rest props&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tool-bar-local-item-from-menu&lt;/strong&gt;&lt;em&gt;command icon in-map &amp;amp;optional from-map &amp;amp;rest props&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4aea0f8be381bc84dad65ecea59364b3c5b10b4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tooltip-event-buffer&lt;/strong&gt;&lt;em&gt;event&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tooltip-event-buffer&lt;/strong&gt;&lt;em&gt;event&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="659d3aa848158f2002baac9924fd6261656497e8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tooltip-mode&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tooltip-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80c256be5ad24972104cf08094160b284e56a161" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tq-close&lt;/strong&gt;&lt;em&gt;queue&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tq-close&lt;/strong&gt;&lt;em&gt;queue&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84842fabbade0fd5cad6ac8d4d6eaed2c05d3d55" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tq-create&lt;/strong&gt;&lt;em&gt;process&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tq-create&lt;/strong&gt;&lt;em&gt;process&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5022b3ff4c6e8c8a6839113b6fd765cc40382971" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tq-enqueue&lt;/strong&gt;&lt;em&gt;queue question regexp closure fn &amp;amp;optional delay-question&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tq-enqueue&lt;/strong&gt;&lt;em&gt;queue question regexp closure fn &amp;amp;optional delay-question&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80b0ac80203dfdb08cce998f6eca02843f602bc0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;transpose-regions&lt;/strong&gt;&lt;em&gt;start1 end1 start2 end2 &amp;amp;optional leave-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;transpose-regions&lt;/strong&gt;&lt;em&gt;start1 end1 start2 end2 &amp;amp;optional leave-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11d2c4e935f9081f6f25b4d85999607695024f1e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;truncate-string-to-width&lt;/strong&gt;&lt;em&gt;string width &amp;amp;optional start-column padding ellipsis&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;truncate-string-to-width&lt;/strong&gt;&lt;em&gt;string width &amp;amp;optional start-column padding ellipsis&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="796afd4e7fdf6c51beece5e663559989acc6276f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;truncate&lt;/strong&gt;&lt;em&gt;number &amp;amp;optional divisor&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;truncate&lt;/strong&gt;&lt;em&gt;number &amp;amp;optional divisor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22645d3077dce6038529eb885135720f8cbbdf2a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;try-completion&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;try-completion&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="275ee990b31ba319aa4582babaafb905f7084aba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-alist&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tty-color-alist&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a48ac75637e55be805a5fe7ee587bf2eeaa1a88" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-approximate&lt;/strong&gt;&lt;em&gt;rgb &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tty-color-approximate&lt;/strong&gt;&lt;em&gt;rgb &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b002c9f49127ca5f9213d8142c267da208d3f1a5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-clear&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tty-color-clear&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d15ed934c6b390461e2bb6656a5ade2158d08526" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-define&lt;/strong&gt;&lt;em&gt;name number &amp;amp;optional rgb frame&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tty-color-define&lt;/strong&gt;&lt;em&gt;name number &amp;amp;optional rgb frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bcc5eb1be018d1548e68b876863e936fad7e0fb4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-translate&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tty-color-translate&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e446b528bca857af5614f88a9e05ee902f7f198" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-top-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;tty-top-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5209dec7bf9d63652df31d8116156026920bd4bc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;type-of&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;type-of&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e178cc125be8c88fd4bacf079a6deef2b3207a4d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;undo-auto-amalgamate&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;undo-auto-amalgamate&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ecaae5e3265a48f9c6401a49b65f5c4b2918d11f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;undo-boundary&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;undo-boundary&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7339cb1dafd4953f8c1ace0c04e8fc08d7e0c68" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unhandled-file-name-directory&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;처리되지 않은 파일 이름 디렉토리 &lt;/strong&gt;&lt;em&gt;파일 이름&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd2da7f72b7fb99a202499e01e4a2da5e603659e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unibyte-char-to-multibyte&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;unibyte-char-to-multibyte &lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac283f3a5b70af98289e879e6c50e2726440d914" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unibyte-string&lt;/strong&gt;&lt;em&gt;&amp;amp;rest bytes&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;유니 &lt;/strong&gt;&lt;em&gt;바이트 &lt;/em&gt;&lt;strong&gt;문자열 &lt;/strong&gt;&lt;em&gt;및 나머지 바이트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5a5409c9a7834c2a611f77df8d0a113069708671" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unintern&lt;/strong&gt;&lt;em&gt;symbol obarray&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;unintern &lt;/strong&gt;&lt;em&gt;기호 obarray&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63b3c1cedafaf98aa9feb5c608a4a71d391a80ee" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unlock-buffer&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;잠금 해제 버퍼&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00ca9df6d0d61d2b116299c3f42f3f36e5e77dd6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unsafep&lt;/strong&gt;&lt;em&gt;form &amp;amp;optional unsafep-vars&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;unsafep &lt;/strong&gt;&lt;em&gt;양식 및 선택적 unsafep-vars&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4e9f5b39c79c48fcbc4f4ad0712b8029ce7493c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;upcase-initials&lt;/strong&gt;&lt;em&gt;string-or-char&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;대문자 이니셜 &lt;/strong&gt;&lt;em&gt;문자열 또는 문자&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="612d491c7d934ad85c45272e7cd836526774f28e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;upcase&lt;/strong&gt;&lt;em&gt;string-or-char&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;대문자 &lt;/strong&gt;&lt;em&gt;문자열 또는 문자&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51e05c710d70f58fefb21ffe5e51d8611f9875ce" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;use-global-map&lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;use-global-map &lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3195c501b2c8f60bdc2f0c3106b629a3c4129a6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;use-local-map&lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;use-local-map &lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50390f31f81b9d427fae8e74dd7c19278aa39b4c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;use-region-p&lt;/strong&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;use-region-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23a7240765b9589bbd78d57dbf22c9352ff2fd61" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-error&lt;/strong&gt;&lt;em&gt;format-string &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;사용자 오류 &lt;/strong&gt;&lt;em&gt;형식 문자열 및 나머지 인수&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5188422fbbb8efb69e01b3e00a6d66a27921da05" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-full-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional uid&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;사용자 전체 이름 &lt;/strong&gt;&lt;em&gt;및 선택적 uid&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa3028fd1926f71a08c2dc49a9916f1612be9574" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-login-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional uid&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;사용자 로그인 이름 &lt;/strong&gt;&lt;em&gt;및 선택적 uid&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="194b3d60f93a917f0e297e78df3f161c2525ccde" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-ptrp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;user-ptrp &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd8318b6a8f2ec6da13764a64acaaf148cedd4fb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-real-login-name&lt;/strong&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;사용자 실제 로그인 이름&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="50e34f3bdbf5b63e46c07b103084d91d8dece7ec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-real-uid&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;사용자 실제 UI&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d6c7aa369acfe0b33dda1c25e55c42596b850e5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-uid&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;사용자 UI&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4916f4818ae01b61066a61b8faf91091745c3b2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vc-responsible-backend&lt;/strong&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;vc-responsible-backend &lt;/strong&gt;&lt;em&gt;파일&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd0443be97e0f772b0c7693136b365004ddd1458" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vconcat&lt;/strong&gt;&lt;em&gt;&amp;amp;rest sequences&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;vconcat &lt;/strong&gt;&lt;em&gt;및 나머지 시퀀스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4349d551d7309567d1a995c05e692383a8e1eba4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vector&lt;/strong&gt;&lt;em&gt;&amp;amp;rest objects&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;벡터 &lt;/strong&gt;&lt;em&gt;및 나머지 개체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be21dcf05de75f4f959717429558f7c13a241446" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vectorp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;vectorp &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59e015a7ada00d4a0c51ef073c85389877979cb8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;verify-visited-file-modtime&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;확인-방문-파일 -modtime &lt;/strong&gt;&lt;em&gt;및 옵션 버퍼&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da0a663c6643ddbb774322b2ed11b57bfac77335" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vertical-motion&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional window cur-col&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;수직 모션 &lt;/strong&gt;&lt;em&gt;카운트 및 옵션 창 cur-col&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01ec81c35e513e7319f46d511ff86ab6accb9f6a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;visible-frame-list&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;보이는 프레임 목록&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7cee9ef5542e5f16d647457aae181a3a9302646" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;visited-file-modtime&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;방문 파일 모드 타임&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e53b398bd003662cda12cab5cd00fb6e59d9810" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;w32-notification-close&lt;/strong&gt;&lt;em&gt;id&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;w32-notification-close &lt;/strong&gt;&lt;em&gt;id&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e761292d96f707f38f5f244dc3a917be4c283e92" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;w32-notification-notify&lt;/strong&gt;&lt;em&gt;&amp;amp;rest params&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;w32-notification-notify &lt;/strong&gt;&lt;em&gt;&amp;amp; rest params&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e22072f5423bc08430120757ceafeff4bfb7a05" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;waiting-for-user-input-p&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;사용자 입력 대기 중&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f27c2074a4b5e3511c6602b7c96641fe90fb45e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;walk-windows&lt;/strong&gt;&lt;em&gt;fun &amp;amp;optional minibuf all-frames&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;워크 윈도우 &lt;/strong&gt;&lt;em&gt;재미 및 옵션 minibuf 모든 프레임&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdc495d5d4f15b87e264d1f07e7999a0e0064cfd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;warn&lt;/strong&gt;&lt;em&gt;message &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;경고 &lt;/strong&gt;&lt;em&gt;메시지 및 나머지 인수&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="effa99492cc5022e4ac5fd45653293f6aacca9d4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;where-is-internal&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional keymap firstonly noindirect no-remap&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;where-is-internal &lt;/strong&gt;&lt;em&gt;명령 및 선택적 keymap firstonly noindirect no-remap&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4fabf32a800c28d286fb6803d13260a98ce4975" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-absolute-body-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-absolute-body-pixel-edges &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4446ad81beeef5af1d3d102c7450c6ae31e7e037" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-absolute-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 절대 픽셀 가장자리 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="644e4a58c0f056ff5944b101a05b2f2e4aab69af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-absolute-pixel-position&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 절대 픽셀 위치 &lt;/strong&gt;&lt;em&gt;및 옵션 위치 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bf86508282a4288b9731275e483dab243f70391" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-at-side-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window side&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-at-side-p &lt;/strong&gt;&lt;em&gt;및 optional window side&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ef3385a5963d59e65e68bba090b16043c483a48" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-at&lt;/strong&gt;&lt;em&gt;x y &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;em&gt;x y 및 옵션 프레임 &lt;/em&gt;&lt;strong&gt;에서 창&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="790f770959ee16706581fcb02fb0191a849932f1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-atom-root&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 원자 루트 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9be5987f8adb0ab452a25563aee99150dfff425" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 바디 가장자리 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c50a25fac5e4a5bfdead4ee7fef84cc6e0d94adb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-body-height &lt;/strong&gt;&lt;em&gt;및 optional window pixelwise&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24ea0bec5d30f4ad2f81e3687c6f273422052003" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-body-pixel-edges &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="76991d2120017eb7399d575260c123d9eba3ff43" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-body-size &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window horizontal pixelwise&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07d64902cd7b65b468d097a6a14491910bbb193f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-body-width &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window pixelwise&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9fa1cc475ed944d06d107e56eb7d43b52b7bd3ac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-bottom-divider-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-bottom-divider-width &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47825452027ed1c6185785802b455393a5154ded" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 버퍼 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ee17a4c19dc8c7851ed2b17d63f4399391c6530" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-child&lt;/strong&gt;&lt;em&gt;window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 자식 &lt;/strong&gt;&lt;em&gt;창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="020541d4b2e6194ade2c9b658794492dd8f862f0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-combination-limit&lt;/strong&gt;&lt;em&gt;window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 조합 제한 &lt;/strong&gt;&lt;em&gt;창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2e1f55749f64d4426a8c26da971d1de846f9af5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-combined-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 결합 p &lt;/strong&gt;&lt;em&gt;및 선택적 창 수평&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="677b0a7f737eaa56e437f2c3dfd6ab6ec59adc25" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-configuration-frame&lt;/strong&gt;&lt;em&gt;config&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 구성 프레임 &lt;/strong&gt;&lt;em&gt;구성&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d0f406907619ac7f4269f4e9d1e00530ebfbe96" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-configuration-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-configuration-p &lt;/strong&gt;&lt;em&gt;개체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b062c2c1fc3d6daddb1c1a5044081a3974786c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-current-scroll-bars&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-current-scroll-bars &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd4965d098ddc41f7a1eb04e4564768114e3a741" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-dedicated-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 전용 p &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="564e8de20c60e78eed234d0b557dad00c2d95c7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-display-table&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 디스플레이 테이블 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e5e5c490c8a3d27e817570928cf7f157f268949" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window body absolute pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 가장자리 &lt;/strong&gt;&lt;em&gt;및 선택적인 창 본문 절대 픽셀 단위&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09e857a410ad803b5db229c55ca1e5e33a91345d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-end&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window update&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 끝 &lt;/strong&gt;&lt;em&gt;및 옵션 창 업데이트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bfe412f2a740e1ddd69e32158a5c89689d388f7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-font-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window face&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 글꼴 높이 &lt;/strong&gt;&lt;em&gt;및 옵션 창 얼굴&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86c260ad476c51815ba4730fb819fe7c3d544b17" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-font-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window face&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 글꼴 너비 &lt;/strong&gt;&lt;em&gt;및 옵션 창 얼굴&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f26981f8d996b31aa4ecef85690c40406df98f60" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 프레임 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53f767c43ae054b2bf8baacb393155f669be14df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-fringes&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 가장자리 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad97ff5cf9365d0972f7e527f24e74430532704f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-full-height-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 전체 높이 p &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7efad29b4fd8c34926283bd49f31b62efa3ddf5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-full-width-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-full-width-p &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c0a981fe0adfcd148d21c7ad63ac1cf75f35704" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-group-end&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window update&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 그룹 끝 &lt;/strong&gt;&lt;em&gt;및 선택적 창 업데이트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ac3c9915dbe5344eb753d1058dd98e8083fb1ea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-group-start&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 그룹 시작 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="363f1c6e757dff471e63978bbaf4812926952cc9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-header-line-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-header-line-height &lt;/strong&gt;&lt;em&gt;및 optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09164adb1009aa487769c11a130a00c7b4c42656" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-hscroll&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 -hscroll &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="274834900addd0345d1bbfc2fb619fa1cff8207b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-in-direction&lt;/strong&gt;&lt;em&gt;direction &amp;amp;optional window ignore sign wrap mini&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 방향 &lt;/strong&gt;&lt;em&gt;방향 및 옵션 창 무시 기호 랩 미니&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7033feb293e6c006adf2181871649003a6106c1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-largest-empty-rectangle&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window count min-width min-height positions left&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 최대 빈 직사각형 &lt;/strong&gt;&lt;em&gt;및 옵션 창 수 최소 너비 최소 높이 왼쪽 위치&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="878000dc38b151b5f92f291594cae2de0e90fc8a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-left-child&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 왼쪽 자식 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="306cde53b431a3849e0756e058b94e1e79ed825f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-line-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional line window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 라인 높이 &lt;/strong&gt;&lt;em&gt;및 옵션 라인 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b70624c99ada1286938484581530474a78d82788" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-lines-pixel-dimensions&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window first last body inverse left&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-lines-pixel-dimensions &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window first last body inverse left&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="910d0a99832b573b8acab344668ac5abb3d65f9c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame minibuffer window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 목록 &lt;/strong&gt;&lt;em&gt;및 옵션 프레임 미니 버퍼 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97d109bd983313b37bffb6bdaabd9605e2f373d6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-live-p &lt;/strong&gt;&lt;em&gt;개체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="086726fdbc87acfc943575c7fc752cb83a19f7f3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-main-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 주 창 &lt;/strong&gt;&lt;em&gt;및 옵션 프레임&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfb70d9cd6360386f65f428e1301d7516141a40d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-make-atom&lt;/strong&gt;&lt;em&gt;window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 만들기 원자 &lt;/strong&gt;&lt;em&gt;창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e254805489bf48537b180c6e927eb235e1b89ba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-margins&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 여백 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b32aeedacf5f773637bdb8c9cb3ced62058137a3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-max-chars-per-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window face&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-max-chars-per-line &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window face&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2f48147e0a3d254dea3471cf78ee84cb5292ca1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-min-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal ignore pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 최소 크기 &lt;/strong&gt;&lt;em&gt;및 선택적 창 수평 무시 픽셀 단위&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50358253a98bf62593be3c59b75f9dfee6431518" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-minibuffer-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-minibuffer-p &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b8a2dbd5ab2146c03722f5527e81fec9a3ca965" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-mode-line-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 모드 라인 높이 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c28cbf1737b94c31889d836938ac4c1bad1460e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-next-buffers&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 다음 버퍼 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6181fc6036e4b35f2dfd79d131e39d626b5d45c9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-next-sibling&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 다음 형제 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eee1180b6a7d98c645e38d1ddabf31c5b299ad52" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-body-pixel-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-old-body-pixel-height &lt;/strong&gt;&lt;em&gt;및 optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7537e1e431ffaffa58f007651bb9674edc491cb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-body-pixel-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-old-body-pixel-width &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d038bf39d79a7fc8863d226c995e96681f8fd8b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-old-buffer &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aff8c5b7886c1979a285be1695a988022a689151" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-pixel-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-old-pixel-height &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8af78c76d0b374dbada2d267fba005041f66276d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-pixel-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-old-pixel-width &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="170b42a00aa0e4b864533a660dbbb48fecfa2b9c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-parameter&lt;/strong&gt;&lt;em&gt;window parameter&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 매개 변수 &lt;/strong&gt;&lt;em&gt;창 매개 변수&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3a8a018e68afb432e3e152f49379b28614bdeca" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-parameters&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 매개 변수 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2cf46d0613aceba550e80e8160f438381ee8c4fe" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-parent&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 부모 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eff5242c8da0cf2f9da2cbf4ac5c755a2ddfa86e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 픽셀 가장자리 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90a312cf7fa6e6c2af841aa2b1082604851d12f5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-pixel-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 픽셀 높이 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f5d121c7ce1bc038dbfa2c794aca816b1bb2fde" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-pixel-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 픽셀 너비 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ca44ecdb78dfbb42f43a1c11158354270a3a2fc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-point&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 포인트 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e07b41374ac0b60f55de84059965e7f04c3ea979" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-preserve-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal preserve&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 보존 크기 &lt;/strong&gt;&lt;em&gt;및 옵션 창 수평 보존&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faa500f3de859d915f6cc90120a578b21e1cb757" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-preserved-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 보존 크기 &lt;/strong&gt;&lt;em&gt;및 옵션 창 수평&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8554a94e02fe738fe12743332207e26eef489f4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-prev-buffers&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-prev-buffers &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c69c006307e6b81d1235a52462fa43463538e084" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-prev-sibling&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-prev-sibling &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d01047c627af25d6bae9b18e2f5e6271bea13cfd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-resizable&lt;/strong&gt;&lt;em&gt;window delta &amp;amp;optional horizontal ignore pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 크기 조정이 가능한 &lt;/strong&gt;&lt;em&gt;창 델타 및 선택적 수평 무시 픽셀 단위&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98a9e7fb5561f750728841952b38ab13de1d4076" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-resize&lt;/strong&gt;&lt;em&gt;window delta &amp;amp;optional horizontal ignore pixelwise&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 크기 조정 &lt;/strong&gt;&lt;em&gt;창 델타 및 선택적 수평 무시 픽셀 단위&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c3c1f8a82c1167aba8033cd343d5c2cf84a3349" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-right-divider-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 오른쪽 분할기 너비 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7e7df5f2b7188f441bfc3a3132164aa3256a598c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-scroll-bar-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 스크롤 막대 높이 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb715a076d48ccf7791640d4842fc770d0ea6005" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-scroll-bar-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 스크롤 막대 너비 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2227dcbaf057fe090a30032a15e83ba22b9c4ced" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-scroll-bars&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 스크롤 막대 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a134a54ddcb0493beb678f187ebf4355f821e9a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-start&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 시작 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a6104fb60c8c7390e28ee32cce7241d1ef10a31" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-state-get&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window writable&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-state-get &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window 쓰기 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="175f1d078b1ead3eb8e94460736ba2f35ce4385b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-state-put&lt;/strong&gt;&lt;em&gt;state &amp;amp;optional window ignore&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 상태 입력 &lt;/strong&gt;&lt;em&gt;상태 및 옵션 창 무시&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec60ab06fcfee24f442429f8e00dfae52d78af78" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-system&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 시스템 &lt;/strong&gt;&lt;em&gt;및 옵션 프레임&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2b1ff8d200c6cfe69d5bd4278c06bebc9afba00" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-text-pixel-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window from to x-limit y-limit mode-and-header-line&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 텍스트 픽셀 크기 &lt;/strong&gt;&lt;em&gt;및 옵션 창에서 x 제한 y 제한 모드 및 헤더 행까지&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b5e7f925331fced31814bb0474a1a3ff0662eb5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-top-child&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 상단 자식 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf547f07ba02a82ac1d4251430d21bae14857227" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-total-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window round&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 총 높이 &lt;/strong&gt;&lt;em&gt;및 옵션 창 라운드&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25216fbfa32843692899b0898ffe0bb8628b8c29" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-total-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal round&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 총 크기 &lt;/strong&gt;&lt;em&gt;및 옵션 창 수평 라운드&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac20aec039125e0f0ea72839db9ba1b83acfc3ce" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-total-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window round&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 총 너비 &lt;/strong&gt;&lt;em&gt;및 옵션 창 라운드&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd6c1a0a0ec443bf6a8f5d5fa121a6a53a8e3125" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-tree&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 트리 &lt;/strong&gt;&lt;em&gt;및 옵션 프레임&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2514d95985d052bb4e0f71c2ccd0c68d354ba5e9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-use-time&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;창 사용 시간 &lt;/strong&gt;&lt;em&gt;및 옵션 창&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27d6018ff3c390aefda76b95ca369035e12212ec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-valid-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;window-valid-p &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="421480287ede76ebb4f4c704c435450228798c7b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-vscroll&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window pixels-p&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;window-vscroll &lt;/strong&gt;&lt;em&gt;&amp;amp; optional window pixels-p&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f5a652d29d57a628af63f4ddacbbc12288f43dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;windowp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;windowp &lt;/strong&gt;&lt;em&gt;개체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0ef2730ea18b8350ca1196dc3a845b5ef849634" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;write-char&lt;/strong&gt;&lt;em&gt;character &amp;amp;optional stream&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;em&gt;문자 &lt;/em&gt;&lt;strong&gt;쓰기 &lt;/strong&gt;&lt;em&gt;및 옵션 스트림&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91fddda4017a6e3e81e1fe9f557a7ba90950daf0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-close-connection&lt;/strong&gt;&lt;em&gt;display&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-close-connection &lt;/strong&gt;&lt;em&gt;디스플레이&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1466d18c7ec87e58cad4cf0f462312aba9bbb8f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-display-list&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-display-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a7c89bc52481d7041be910fc982542b13e94a84" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-double-buffered-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-double-buffered-p &lt;/strong&gt;&lt;em&gt;&amp;amp; optional 프레임&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a051713e3f019168c6ce92f718f2a2e416fe58f2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-family-fonts&lt;/strong&gt;&lt;em&gt;&amp;amp;optional family frame&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-family-fonts &lt;/strong&gt;&lt;em&gt;및 optional family frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b6b92922c76cda529545c680fc8fca586045562" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-focus-frame&lt;/strong&gt;&lt;em&gt;frame &amp;amp;optional noactivate&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x 초점 프레임 &lt;/strong&gt;&lt;em&gt;프레임 및 옵션 noactivate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37dc7f2f9a0dbf6745fc6c3f94eabcab415f016c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-get-resource&lt;/strong&gt;&lt;em&gt;attribute class &amp;amp;optional component subclass&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-get-resource &lt;/strong&gt;&lt;em&gt;속성 클래스 및 선택적 구성 요소 하위 클래스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="574c14eab363838e882ef0854ccb55e344b0ead6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-list-fonts&lt;/strong&gt;&lt;em&gt;name &amp;amp;optional reference-face frame maximum width&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-list-fonts &lt;/strong&gt;&lt;em&gt;이름 및 옵션 참조면 프레임 최대 너비&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1de9ff0264ee36733e8b9a6116ae67df1037f3c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-open-connection&lt;/strong&gt;&lt;em&gt;display &amp;amp;optional xrm-string must-succeed&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-open-connection &lt;/strong&gt;&lt;em&gt;디스플레이 및 선택적인 xrm-string must-succeed&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2931574591b9a73386a7769f0163de3836998a81" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-parse-geometry&lt;/strong&gt;&lt;em&gt;geom&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;X-구문 분석 기하 &lt;/strong&gt;&lt;em&gt;기하 구조&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6cc69a9ddc6208c1a021bd98c54c71992c2dc738" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-popup-dialog&lt;/strong&gt;&lt;em&gt;position contents &amp;amp;optional header&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-popup-dialog &lt;/strong&gt;&lt;em&gt;위치 내용 및 옵션 헤더&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="657707167d061e778f16934087f760413d37e90b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-popup-menu&lt;/strong&gt;&lt;em&gt;position menu&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-popup-menu &lt;/strong&gt;&lt;em&gt;위치 메뉴&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ad2b58e8c8f897d4daef347175ce58623244d9e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-server-vendor&lt;/strong&gt;&lt;em&gt;&amp;amp;optional display&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x-server-vendor &lt;/strong&gt;&lt;em&gt;및 옵션 디스플레이&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9d0faea795c6243bbdb5a6d55b629b043a63af2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-server-version&lt;/strong&gt;&lt;em&gt;&amp;amp;optional display&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;x- 서버 버전 &lt;/strong&gt;&lt;em&gt;및 옵션 디스플레이&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4231b265fbafad5e2088c9b19f0d33c302e655a7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xor&lt;/strong&gt;&lt;em&gt;condition1 condition2&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;xor &lt;/strong&gt;&lt;em&gt;condition1 condition2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f28ecbef98d586be37b5762b738a1814197485dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-buffer&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-buffer &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d552ce6483728054dc381aad91c527c042a44839" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-info&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-info &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2f265f6cb8391cf48e201af30640901fb6ee95b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-plist&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-plist &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="567d02f9215a4b41b6f509b1f2eb8965d4d3fcc7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-query-on-exit-flag&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-query-on-exit-flag &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b75f5f0e3b44466ab5fe61fd9cc40846a6360fba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-resize&lt;/strong&gt;&lt;em&gt;xwidget width height&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-resize &lt;/strong&gt;&lt;em&gt;xwidget 너비 높이&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4c170048cc1c16145bb683616dfad185859ed06" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-size-request&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-size-request &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7642ec1f8d645021f62d7b72507769be5743e5c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-execute-script-rv&lt;/strong&gt;&lt;em&gt;xwidget script &amp;amp;optional default&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-webkit-execute-script-rv &lt;/strong&gt;&lt;em&gt;xwidget 스크립트 및 옵션 기본값&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50b93bc712102e195a07661aa6a3717ad82cddab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-execute-script&lt;/strong&gt;&lt;em&gt;xwidget script&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-webkit-execute-script &lt;/strong&gt;&lt;em&gt;xwidget 스크립트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c995922ec5796753cbde8ca8a1ddbb441616bf67" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-get-title&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;xwidget-webkit-get-title &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f38b62cbed1e0b3779050ff24a193445fb3e83b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-goto-uri&lt;/strong&gt;&lt;em&gt;xwidget uri&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;xwidget-webkit-goto-uri &lt;/strong&gt;&lt;em&gt;xwidget uri&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7e7c11e28f2ffeb2c29ab67bb2a37a708405080" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidgetp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">함수 : &lt;strong&gt;xwidgetp &lt;/strong&gt;&lt;em&gt;객체&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a81e88b7d08049a4a74f026bd2cb1470e4b2444" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;y-or-n-p-with-timeout&lt;/strong&gt;&lt;em&gt;prompt seconds default&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;y-or-np-with-timeout &lt;/strong&gt;&lt;em&gt;프롬프트 초 기본값&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3224f3316be355fffa77fa77612d79e20e4a9f2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;y-or-n-p&lt;/strong&gt;&lt;em&gt;prompt&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;y-or-np &lt;/strong&gt;&lt;em&gt;프롬프트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd639d612d172cb6304981eddb2227c73443e96f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;yes-or-no-p&lt;/strong&gt;&lt;em&gt;prompt&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;예-아니요 -p &lt;/strong&gt;&lt;em&gt;프롬프트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9782bc7bace59ae952d9d5518de1d59f82ff942" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;zerop&lt;/strong&gt;&lt;em&gt;number&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;zerop &lt;/strong&gt;&lt;em&gt;번호&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0dff4cd06472c1d6220497f2dbb7daa752896667" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;zlib-available-p&lt;/strong&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;zlib-available-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13df82c296e92922f18f9b101f3080a72169f013" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;zlib-decompress-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional allow-partial&lt;/em&gt;</source>
          <target state="translated">기능 : &lt;strong&gt;zlib-decompress-region &lt;/strong&gt;&lt;em&gt;시작 종료 및 선택적 허용 부분&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="17e49430d385434c560ab18e0afe812eac6c9c3d" translate="yes" xml:space="preserve">
          <source>Functions and macros that use rx forms.</source>
          <target state="translated">rx 형식을 사용하는 함수 및 매크로.</target>
        </trans-unit>
        <trans-unit id="e985fc070b38d0219dea4dc72f64e8ee148cbc29" translate="yes" xml:space="preserve">
          <source>Functions and macros using rx regexps</source>
          <target state="translated">rx regexps를 사용하는 함수 및 매크로</target>
        </trans-unit>
        <trans-unit id="a3f17c084c9be9048d3cedfd8a2095dd80997fea" translate="yes" xml:space="preserve">
          <source>Functions and variables for kill ring access.</source>
          <target state="translated">킬 링 액세스를위한 함수 및 변수.</target>
        </trans-unit>
        <trans-unit id="7932dd56d16faf7e955a24c3240332285c7602b6" translate="yes" xml:space="preserve">
          <source>Functions defined using &lt;code&gt;cl-defmethod&lt;/code&gt; cannot be made interactive, i.e. commands (see &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;), by adding the &lt;code&gt;interactive&lt;/code&gt; form to them. If you need a polymorphic command, we recommend defining a normal command that calls a polymorphic function defined via &lt;code&gt;cl-defgeneric&lt;/code&gt; and &lt;code&gt;cl-defmethod&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cl-defmethod&lt;/code&gt; 를 사용하여 정의 된 함수 는 &lt;code&gt;interactive&lt;/code&gt; 양식을 추가하여 대화식 으로 만들 수 없습니다 (예 : 명령 ( &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;명령 정의&lt;/a&gt; 참조 )) . 다형성 명령이 필요한 경우 &lt;code&gt;cl-defgeneric&lt;/code&gt; 및 &lt;code&gt;cl-defmethod&lt;/code&gt; 를 통해 정의 된 다형성 함수를 호출하는 일반 명령을 정의하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="33a33099709948ce81e215f6e51dff2404cc61e5" translate="yes" xml:space="preserve">
          <source>Functions defined using &lt;code&gt;defun&lt;/code&gt; have a hard-coded set of assumptions about the types and expected values of their arguments. For example, a function that was designed to handle values of its argument that are either numbers or lists of numbers will fail or signal an error if called with a value of any other type, such as a vector or a string. This happens because the implementation of the function is not prepared to deal with types other than those assumed during the design.</source>
          <target state="translated">&lt;code&gt;defun&lt;/code&gt; 을 사용하여 정의 된 함수 에는 인수의 유형 및 예상 값에 대해 하드 코딩 된 가정이 있습니다. 예를 들어, 숫자 또는 숫자 목록 인 인수의 값을 처리하도록 설계된 함수는 벡터 또는 문자열과 같은 다른 유형의 값으로 호출 될 경우 실패하거나 오류 신호를 보냅니다. 이것은 함수의 구현이 설계 중에 가정 된 유형 이외의 유형을 처리 할 준비가되어 있지 않기 때문에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="64d123daf526eab41cdc3facaf061f89275d0e7c" translate="yes" xml:space="preserve">
          <source>Functions defined via &lt;code&gt;define-inline&lt;/code&gt; have several advantages with respect to macros defined by &lt;code&gt;defsubst&lt;/code&gt; or &lt;code&gt;defmacro&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;define-inline&lt;/code&gt; 을 통해 정의 된 함수 는 &lt;code&gt;defsubst&lt;/code&gt; 또는 &lt;code&gt;defmacro&lt;/code&gt; 로 정의 된 매크로와 관련하여 몇 가지 장점이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b9edad7626fced928fd0f66178e6b0042ec3e5a" translate="yes" xml:space="preserve">
          <source>Functions for Key Lookup</source>
          <target state="translated">키 조회 기능</target>
        </trans-unit>
        <trans-unit id="c48e9d042008699b99b46a56d001d8caa2e6a029" translate="yes" xml:space="preserve">
          <source>Functions for Killing</source>
          <target state="translated">살해 기능</target>
        </trans-unit>
        <trans-unit id="f23851edd43ece67d06850b7a2766a9d90644f29" translate="yes" xml:space="preserve">
          <source>Functions for Vectors</source>
          <target state="translated">벡터에 대한 함수</target>
        </trans-unit>
        <trans-unit id="30d19083c9b802f1b40f1818519b3bafa3939c59" translate="yes" xml:space="preserve">
          <source>Functions for Visiting Files</source>
          <target state="translated">파일 방문 기능</target>
        </trans-unit>
        <trans-unit id="5f70e2f0ca2964c2c9ce77abd21c41e619d583d6" translate="yes" xml:space="preserve">
          <source>Functions for Working with Faces</source>
          <target state="translated">얼굴 작업을위한 함수</target>
        </trans-unit>
        <trans-unit id="d94b7f67a7255149e8bbda84a704038e6fc1ee70" translate="yes" xml:space="preserve">
          <source>Functions for Yanking</source>
          <target state="translated">양킹 기능</target>
        </trans-unit>
        <trans-unit id="e098656af6a0fb96e659a33854766e9f7121079c" translate="yes" xml:space="preserve">
          <source>Functions for displaying a buffer can be told to not use specific windows by marking these windows as &lt;em&gt;dedicated&lt;/em&gt; to their buffers. &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) never uses a dedicated window for displaying another buffer in it. &lt;code&gt;get-lru-window&lt;/code&gt; and &lt;code&gt;get-largest-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;) do not consider dedicated windows as candidates when their &lt;var&gt;dedicated&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;. The behavior of &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) with respect to dedicated windows is slightly different, see below.</source>
          <target state="translated">버퍼를 표시하는 기능은 이러한 창 을 해당 버퍼 &lt;em&gt;전용&lt;/em&gt; 으로 표시하여 특정 창을 사용하지 않도록 지시 할 수 있습니다 . &lt;code&gt;display-buffer&lt;/code&gt; ( &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;창 선택&lt;/a&gt; 참조 )는 다른 버퍼를 표시하기 위해 전용 창을 사용하지 않습니다. &lt;code&gt;get-lru-window&lt;/code&gt; 및 &lt;code&gt;get-largest-window&lt;/code&gt; ( &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;순환 창 순서&lt;/a&gt; 참조 )는 &lt;var&gt;dedicated&lt;/var&gt; 인수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 전용 창을 후보로 간주하지 않습니다 . 전용 창에 대한 &lt;code&gt;set-window-buffer&lt;/code&gt; ( &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;버퍼 및 Windows&lt;/a&gt; 참조) 의 동작 은 약간 다릅니다. 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55fdd5d7db124180399d931fc1d42f549fa627d2" translate="yes" xml:space="preserve">
          <source>Functions for explicit filling.</source>
          <target state="translated">명시 적 채우기를위한 함수.</target>
        </trans-unit>
        <trans-unit id="66376e0b74f9c79d192649ebbdad50ff67bd65ed" translate="yes" xml:space="preserve">
          <source>Functions for operating on regular expressions.</source>
          <target state="translated">정규식에서 작동하는 함수.</target>
        </trans-unit>
        <trans-unit id="0d09a2bf9ef6730b5071282225aa8c10c88aa2a9" translate="yes" xml:space="preserve">
          <source>Functions for records.</source>
          <target state="translated">레코드 기능.</target>
        </trans-unit>
        <trans-unit id="5bf9cc881ecbe1ce5df25364d81f1ec2efd884fa" translate="yes" xml:space="preserve">
          <source>Functions for retrieving the height and/or width of window dividers (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;), fringes (see &lt;a href=&quot;fringes#Fringes&quot;&gt;Fringes&lt;/a&gt;), scroll bars (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;), and display margins (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;) are described in the corresponding sections.</source>
          <target state="translated">높이 및 / 또는 윈도우 분배기의 폭을 검색하기위한 함수 (참조 &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;창 분배기&lt;/a&gt; 프린지 (참조) &lt;a href=&quot;fringes#Fringes&quot;&gt;프린지&lt;/a&gt; ), 스크롤 바 (참조 &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;스크롤 바를&lt;/a&gt; ) 및 디스플레이 마진 (참조 &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;디스플레이 여백&lt;/a&gt; )의 해당 부분에서 설명한다.</target>
        </trans-unit>
        <trans-unit id="b9bb5e9911944d5a30c4fbfb4b5aca566bf017e6" translate="yes" xml:space="preserve">
          <source>Functions for sorting parts of the buffer.</source>
          <target state="translated">버퍼의 일부를 정렬하는 기능.</target>
        </trans-unit>
        <trans-unit id="fe9e779b64d115d5ef6ae0821423cc2c8757e95d" translate="yes" xml:space="preserve">
          <source>Functions in the Ewoc package.</source>
          <target state="translated">Ewoc 패키지의 기능.</target>
        </trans-unit>
        <trans-unit id="3a3123e19434fae2e4a9ebf9b81753bd5943b4d6" translate="yes" xml:space="preserve">
          <source>Functions run by this hook should avoid calling &lt;code&gt;select-window&lt;/code&gt; with a nil &lt;var&gt;norecord&lt;/var&gt; argument or &lt;code&gt;with-temp-buffer&lt;/code&gt; since either may lead to infinite recursion.</source>
          <target state="translated">이 후크에 의해 실행되는 함수는 무한 재귀로 이어질 수 있으므로 nil &lt;var&gt;norecord&lt;/var&gt; 인수 또는 &lt;code&gt;with-temp-buffer&lt;/code&gt; 사용하여 &lt;code&gt;select-window&lt;/code&gt; 를 호출 하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="f19b2906ad93af7b231a3cf540015ff3414b6782" translate="yes" xml:space="preserve">
          <source>Functions set up to load files containing their real definitions.</source>
          <target state="translated">실제 정의를 포함하는 파일을로드하도록 설정된 함수.</target>
        </trans-unit>
        <trans-unit id="397cb760a8d42673b95050672dfe9882d84429c6" translate="yes" xml:space="preserve">
          <source>Functions specifically for arrays.</source>
          <target state="translated">특히 배열을위한 기능.</target>
        </trans-unit>
        <trans-unit id="bdb43fb549a2620e04415871c6287a42e67a809f" translate="yes" xml:space="preserve">
          <source>Functions specifically for vectors.</source>
          <target state="translated">벡터를위한 기능.</target>
        </trans-unit>
        <trans-unit id="031db2d13f7ad53080afda1be16d788b6c73999a" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if at least one window on that frame has been added, deleted or assigned another buffer or changed its total or body size since the last time window change functions were run. Each call is performed with the window showing the buffer temporarily selected and its buffer current.</source>
          <target state="translated">해당 프레임에서 하나 이상의 창이 추가, 삭제 또는 다른 버퍼에 할당되었거나 마지막 창 변경 기능이 실행 된 이후 전체 또는 본문 크기가 변경된 경우 버퍼 로컬로 지정된 함수가 해당 버퍼를 보여주는 모든 창에 대해 호출됩니다. 각 호출은 임시로 선택된 버퍼와 해당 버퍼 전류를 보여주는 창에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="429d6e144d10d7c4525f1ad1420c26ec5e578883" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been added or assigned another buffer or changed its total or body size since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">해당 창이 추가되거나 다른 버퍼가 할당되었거나 창 변경 기능이 마지막으로 실행 된 이후 전체 또는 본문 크기가 변경된 경우 해당 버퍼를 표시하는 모든 창에 대해 버퍼 로컬로 지정된 함수가 호출됩니다. 이 경우 창은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="33eed22ccb8c68683a6cff0a57d30cf647ebcfcb" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been added or assigned another buffer, changed its total or body size or has been selected or deselected (among all windows or among all windows on its frame) since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">해당 창이 추가되거나 다른 버퍼가 할당되거나 전체 또는 본문 크기가 변경되었거나 선택 또는 선택 취소 된 경우 (모든 창에서 또는 프레임의 모든 창에서) 해당 버퍼를 표시하는 모든 창에 대해 버퍼 로컬로 지정된 함수가 호출됩니다. 마지막으로 창 변경 기능이 실행되었습니다. 이 경우 창은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="40c37d8c15326a7117bf83263645646aa479bd58" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been created or assigned that buffer since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">버퍼 로컬로 지정된 함수는 창 변경 기능이 마지막으로 실행 된 이후 해당 창이 생성되었거나 해당 버퍼가 할당 된 경우 해당 버퍼를 보여주는 모든 창에 대해 호출됩니다. 이 경우 창은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f01d852fa63856ea57df09dc3683ae2ff8ba936c" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been selected or deselected (among all windows or among all windows on its frame) since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">버퍼 로컬로 지정된 함수는 창 변경 기능이 마지막으로 실행 된 이후 해당 창이 선택되거나 선택 취소 된 경우 (모든 창 또는 해당 프레임의 모든 창에서) 해당 버퍼를 보여주는 모든 창에 대해 호출됩니다. 이 경우 창은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="65092bb036e837d95b317e5ae25f274c1d51222e" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are also run for a frame when that frame&amp;rsquo;s window state change flag (see below) has been set since last redisplay.</source>
          <target state="translated">기본값으로 지정된 함수는 프레임의 창 상태 변경 플래그 (아래 참조)가 마지막 다시 표시 이후 설정된 경우에도 프레임에 대해 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="477a6405f412f8471c5ca40a02a46c46fb0f5aaf" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if at least one window on that frame has been added or assigned another buffer or changed its total or body size since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">해당 프레임에서 하나 이상의 창이 추가되거나 다른 버퍼가 할당되거나 마지막 창 변경 기능이 실행 된 이후 전체 또는 본문 크기가 변경된 경우 기본값으로 지정된 함수가 프레임에 대해 호출됩니다. 이 경우 프레임은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="349d72bfb82dbb8ca6c0bc171637ef7c54f2e56c" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if at least one window on that frame has been added, deleted or assigned another buffer since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">마지막 시간 창 변경 기능이 실행 된 이후 해당 프레임에서 하나 이상의 창이 추가, 삭제 또는 다른 버퍼에 할당 된 경우 기본값으로 지정된 함수가 프레임에 대해 호출됩니다. 이 경우 프레임은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="7c5477b2c5c088714cbd9c48c9cd5d1fc8066e00" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if at least one window on that frame has been added, deleted or assigned another buffer, changed its total or body size or that frame has been selected or deselected or the frame&amp;rsquo;s selected window has changed since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">해당 프레임에서 하나 이상의 창이 추가, 삭제 또는 다른 버퍼에 할당되거나, 전체 또는 본문 크기가 변경되었거나, 해당 프레임이 선택 또는 선택 취소되었거나, 프레임의 선택한 창이 변경된 경우 기본값으로 지정된 함수가 프레임에 대해 호출됩니다. 창 변경 기능이 마지막으로 실행 된 이후입니다. 이 경우 프레임은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f0244e1f79592261987871c87bf9faf4e95d1113" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if that frame has been selected or deselected or the frame&amp;rsquo;s selected window has changed since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">해당 프레임이 선택 또는 선택 취소되었거나 마지막 창 변경 기능이 실행 된 이후 프레임의 선택된 창이 변경된 경우 기본값으로 지정된 함수가 프레임에 대해 호출됩니다. 이 경우 프레임은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="ea83a0ba4f250cb0b5c6fe530188703b9ba2ccae" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for each frame if at least one window on that frame has been added, deleted or assigned another buffer or changed its total or body size since the last time window change functions were run. Each call is performed with the frame temporarily selected and the selected window&amp;rsquo;s buffer current.</source>
          <target state="translated">해당 프레임에있는 하나 이상의 창이 추가, 삭제 또는 다른 버퍼에 할당되거나 마지막 창 변경 기능이 실행 된 이후 전체 또는 본문 크기가 변경된 경우 기본값으로 지정된 함수가 각 프레임에 대해 호출됩니다. 각 호출은 임시로 선택된 프레임과 선택된 창의 버퍼 전류로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="16aa9be2f756a78c23c4002999b9109f0616b2ce" translate="yes" xml:space="preserve">
          <source>Functions such as &lt;code&gt;read-key-sequence&lt;/code&gt; that construct strings of keyboard input characters follow these rules: they construct vectors instead of strings, when the events won&amp;rsquo;t fit in a string.</source>
          <target state="translated">키보드 입력 문자의 문자열을 구성하는 &lt;code&gt;read-key-sequence&lt;/code&gt; 와 같은 함수는 다음 규칙을 따릅니다. 이벤트가 문자열에 맞지 않을 때 문자열 대신 벡터를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3a8d02b47233f0ff6a298c2ba8bd4819e887d2b1" translate="yes" xml:space="preserve">
          <source>Functions supposed to remove a buffer from a window or a window from a frame can behave specially when a window they operate on is dedicated. We will distinguish three basic cases, namely where (1) the window is not the only window on its frame, (2) the window is the only window on its frame but there are other frames on the same terminal left, and (3) the window is the only window on the only frame on the same terminal.</source>
          <target state="translated">창에서 버퍼를 제거하거나 프레임에서 창을 제거하는 기능은 작동하는 창이 전용 일 때 특별히 동작 할 수 있습니다. 세 가지 기본 사례를 구분할 것입니다. 즉, (1) 창이 프레임의 유일한 창이 아닌 경우, (2) 창이 해당 프레임의 유일한 창이지만 왼쪽 동일한 터미널에 다른 프레임이있는 경우, (3) 창은 동일한 터미널의 유일한 프레임에있는 유일한 창입니다.</target>
        </trans-unit>
        <trans-unit id="09f185f012c9fc1b3bbe85eb3c92873005eb9f06" translate="yes" xml:space="preserve">
          <source>Functions that Create Markers</source>
          <target state="translated">마커를 생성하는 기능</target>
        </trans-unit>
        <trans-unit id="c292474caaca7cc23d2177c5672b2736cb1b3534" translate="yes" xml:space="preserve">
          <source>Functions that Create Subprocesses</source>
          <target state="translated">하위 프로세스를 생성하는 함수</target>
        </trans-unit>
        <trans-unit id="9658d6fb43e8c0287ac5885704e77796a1a908d2" translate="yes" xml:space="preserve">
          <source>Functions that Expand Filenames</source>
          <target state="translated">파일 이름을 확장하는 기능</target>
        </trans-unit>
        <trans-unit id="7322f4a28bf556ca185d676f7248234c2aac6178" translate="yes" xml:space="preserve">
          <source>Functions that Operate on Arrays</source>
          <target state="translated">배열에서 작동하는 함수</target>
        </trans-unit>
        <trans-unit id="0b9b3045c03bf792e26e487ff91a6051b449b899" translate="yes" xml:space="preserve">
          <source>Functions that Rearrange Lists</source>
          <target state="translated">목록을 재정렬하는 기능</target>
        </trans-unit>
        <trans-unit id="4fa762080d73364e3a69ee0ce1c6184966e562f9" translate="yes" xml:space="preserve">
          <source>Functions that accept any kind of sequence.</source>
          <target state="translated">모든 종류의 시퀀스를 허용하는 함수.</target>
        </trans-unit>
        <trans-unit id="caf7dec299e1f38799b711747ff1bd3af55a6c19" translate="yes" xml:space="preserve">
          <source>Functions that convert to and from local time accept an optional &lt;em&gt;time zone rule&lt;/em&gt; argument, which specifies the conversion&amp;rsquo;s time zone and daylight saving time history. If the time zone rule is omitted or &lt;code&gt;nil&lt;/code&gt;, the conversion uses Emacs&amp;rsquo;s default time zone. If it is &lt;code&gt;t&lt;/code&gt;, the conversion uses Universal Time. If it is &lt;code&gt;wall&lt;/code&gt;, the conversion uses the system wall clock time. If it is a string, the conversion uses the time zone rule equivalent to setting &lt;code&gt;TZ&lt;/code&gt; to that string. If it is a list (&lt;var&gt;offset&lt;/var&gt;&lt;var&gt;abbr&lt;/var&gt;), where &lt;var&gt;offset&lt;/var&gt; is an integer number of seconds east of Universal Time and &lt;var&gt;abbr&lt;/var&gt; is a string, the conversion uses a fixed time zone with the given offset and abbreviation. An integer &lt;var&gt;offset&lt;/var&gt; is treated as if it were (&lt;var&gt;offset&lt;/var&gt;&lt;var&gt;abbr&lt;/var&gt;), where &lt;var&gt;abbr&lt;/var&gt; is a numeric abbreviation on POSIX-compatible platforms and is unspecified on MS-Windows.</source>
          <target state="translated">현지 시간으로 변환하는 함수 는 변환의 시간대 및 일광 절약 시간 기록을 지정 하는 선택적 &lt;em&gt;시간대 규칙&lt;/em&gt; 인수를 허용합니다 . 시간대 규칙이 생략되거나 &lt;code&gt;nil&lt;/code&gt; 이면 변환은 Emacs의 기본 시간대를 사용합니다. 이 경우 &lt;code&gt;t&lt;/code&gt; 을 , 변환은 세계시를 사용합니다. 이 경우 &lt;code&gt;wall&lt;/code&gt; , 변환 시스템 벽 시계 시간을 사용합니다. 문자열 인 경우 변환은 &lt;code&gt;TZ&lt;/code&gt; 를 해당 문자열 로 설정하는 것과 동일한 시간대 규칙 을 사용합니다. 목록 ( &lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt; ) 인 경우 &lt;var&gt;offset&lt;/var&gt; 은 세계시 동쪽의 정수 초이며 &lt;var&gt;abbr&lt;/var&gt; 입니다.문자열 인 경우 변환은 주어진 오프셋 및 약어가있는 고정 시간대를 사용합니다. 정수 &lt;var&gt;offset&lt;/var&gt; 은 마치 ( &lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt; ) 처럼 처리됩니다 . 여기서 &lt;var&gt;abbr&lt;/var&gt; 은 POSIX 호환 플랫폼의 숫자 약어이며 MS-Windows에서는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dc2f9bde3b84d70d5c0a98fe6c8340e56885252e" translate="yes" xml:space="preserve">
          <source>Functions that create buffers.</source>
          <target state="translated">버퍼를 생성하는 함수.</target>
        </trans-unit>
        <trans-unit id="f93bdb368841c9ff14ce695dcfc4943839623bad" translate="yes" xml:space="preserve">
          <source>Functions that enclose a lexical environment.</source>
          <target state="translated">어휘 환경을 포함하는 함수.</target>
        </trans-unit>
        <trans-unit id="e236dab72a27840a70d010ab0eb2f299e7fd313d" translate="yes" xml:space="preserve">
          <source>Functions that kill text.</source>
          <target state="translated">텍스트를 죽이는 함수.</target>
        </trans-unit>
        <trans-unit id="b80d174dad443398f135c18f08693e8b67ed6be0" translate="yes" xml:space="preserve">
          <source>Functions that load Emacs Lisp packages can also load dynamic modules. They recognize dynamic modules by looking at their file-name extension, a.k.a. &amp;ldquo;suffix&amp;rdquo;. This suffix is platform-dependent.</source>
          <target state="translated">Emacs Lisp 패키지를로드하는 함수는 동적 모듈도로드 할 수 있습니다. 그들은 파일 이름 확장자 인 &quot;접미사&quot;를보고 동적 모듈을 인식합니다. 이 접미사는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="efe5615ef277c7d21f2a452bc42126761e02a88e" translate="yes" xml:space="preserve">
          <source>Functions that start subprocesses.</source>
          <target state="translated">하위 프로세스를 시작하는 함수.</target>
        </trans-unit>
        <trans-unit id="a81ae5069ff939ab2a095be146ccb7480a1d143b" translate="yes" xml:space="preserve">
          <source>Functions that the compiler will expand inline.</source>
          <target state="translated">컴파일러가 인라인으로 확장하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1e5dc8e3bd462212743edd796dc3e69c09b913d9" translate="yes" xml:space="preserve">
          <source>Functions to Unpack and Pack Bytes</source>
          <target state="translated">바이트 압축 해제 및 압축 기능</target>
        </trans-unit>
        <trans-unit id="acf939d708d4b38671cfd4b2c0a14af8ee063597" translate="yes" xml:space="preserve">
          <source>Functions to allocate new strings.</source>
          <target state="translated">새 문자열을 할당하는 기능.</target>
        </trans-unit>
        <trans-unit id="0a3b52c2c8318d76b264bb5a80c0c9705ee4033f" translate="yes" xml:space="preserve">
          <source>Functions to apply customization settings.</source>
          <target state="translated">사용자 정의 설정을 적용하는 기능.</target>
        </trans-unit>
        <trans-unit id="dd66cde79714217a2e072ca91147461f29be70be" translate="yes" xml:space="preserve">
          <source>Functions to call before Edebug is used. Each time it is set to a new value, Edebug will call those functions once and then reset &lt;code&gt;edebug-setup-hook&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. You could use this to load up Edebug specifications associated with a package you are using, but only when you also use Edebug. See &lt;a href=&quot;instrumenting#Instrumenting&quot;&gt;Instrumenting&lt;/a&gt;.</source>
          <target state="translated">Edebug를 사용하기 전에 호출 할 함수입니다. 새 값으로 설정 될 때마다 Edebug는 해당 함수를 한 번 호출 한 다음 &lt;code&gt;edebug-setup-hook&lt;/code&gt; 을 &lt;code&gt;nil&lt;/code&gt; 로 재설정 합니다. 이것을 사용하여 사용중인 패키지와 관련된 Edebug 사양을로드 할 수 있지만 Edebug도 사용할 때만 가능합니다. &lt;a href=&quot;instrumenting#Instrumenting&quot;&gt;계측을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a642467450189b1b4a6b31582b7dc83004a8bf1" translate="yes" xml:space="preserve">
          <source>Functions to create and copy keymaps.</source>
          <target state="translated">키맵을 만들고 복사하는 기능.</target>
        </trans-unit>
        <trans-unit id="2c47d13c2cc54d3100ed5e103448564750d99ac8" translate="yes" xml:space="preserve">
          <source>Functions to create hash tables.</source>
          <target state="translated">해시 테이블을 생성하는 함수.</target>
        </trans-unit>
        <trans-unit id="edf668fd2d1d446837053f0d58930d2d591c689c" translate="yes" xml:space="preserve">
          <source>Functions to examine and set face attributes.</source>
          <target state="translated">얼굴 속성을 검사하고 설정하는 기능.</target>
        </trans-unit>
        <trans-unit id="03618e6d238f97707b322ebf914b567b65950cba" translate="yes" xml:space="preserve">
          <source>Functions to extract info from mouse events.</source>
          <target state="translated">마우스 이벤트에서 정보를 추출하는 기능.</target>
        </trans-unit>
        <trans-unit id="b49017a265b0f3bf6ca55c4bd9d6ba61f2532043" translate="yes" xml:space="preserve">
          <source>Functions to get info from scroll bar events.</source>
          <target state="translated">스크롤바 이벤트에서 정보를 얻는 기능.</target>
        </trans-unit>
        <trans-unit id="ee5780e6ec1abfb3b33aae9b86ac4ed506250bd5" translate="yes" xml:space="preserve">
          <source>Functions to insert or adjust indentation.</source>
          <target state="translated">들여 쓰기를 삽입하거나 조정하는 기능.</target>
        </trans-unit>
        <trans-unit id="5fd556fd7932e0ab4fcbfc00eb1d10bdc4ebabf0" translate="yes" xml:space="preserve">
          <source>Functions to operate on coding system names.</source>
          <target state="translated">코딩 시스템 이름에 대해 작동하는 기능.</target>
        </trans-unit>
        <trans-unit id="28292fb828f5ee00010554a8677a5643f2bfe90d" translate="yes" xml:space="preserve">
          <source>Functions to print Lisp objects as text.</source>
          <target state="translated">Lisp 개체를 텍스트로 인쇄하는 기능.</target>
        </trans-unit>
        <trans-unit id="231d8e499c1b42e8a43567edd9e1715f9a74624d" translate="yes" xml:space="preserve">
          <source>Functions to read Lisp objects from text.</source>
          <target state="translated">텍스트에서 Lisp 개체를 읽는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="4452d4be433ea03d933bc31a8e5b9ff90544210d" translate="yes" xml:space="preserve">
          <source>Functions used to count and insert indentation.</source>
          <target state="translated">들여 쓰기를 계산하고 삽입하는 데 사용되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="7786cf7d679354ab042a40f3b579751508e4ca9d" translate="yes" xml:space="preserve">
          <source>Functions, variables, macros, commands, user options, and special forms are described in this manual in a uniform format. The first line of a description contains the name of the item followed by its arguments, if any. The category&amp;mdash;function, variable, or whatever&amp;mdash;appears at the beginning of the line. The description follows on succeeding lines, sometimes with examples.</source>
          <target state="translated">함수, 변수, 매크로, 명령, 사용자 옵션 및 특수 형식은이 설명서에서 동일한 형식으로 설명됩니다. 설명의 첫 번째 줄에는 항목 이름과 인수 (있는 경우)가 포함됩니다. 범주 (함수, 변수 또는 기타 항목)는 행 시작 부분에 나타납니다. 설명은 다음 줄에 이어지며 때로는 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f177e8243dc3d7af82298b042c624be80fdc42ea" translate="yes" xml:space="preserve">
          <source>Further control over network connections.</source>
          <target state="translated">네트워크 연결에 대한 추가 제어.</target>
        </trans-unit>
        <trans-unit id="80e175f49a31064e7e0f004b3931296051e97c64" translate="yes" xml:space="preserve">
          <source>Further tuning of side windows.</source>
          <target state="translated">사이드 윈도우의 추가 조정.</target>
        </trans-unit>
        <trans-unit id="dd769b7c90aec0b6fac4faceb7a7c7effe0a96b9" translate="yes" xml:space="preserve">
          <source>Further vendor-specific caps start with &lt;code&gt;:x-vendor&lt;/code&gt;, like &lt;code&gt;:x-gnome-foo-cap&lt;/code&gt;.</source>
          <target state="translated">추가 벤더별 제한 은 &lt;code&gt;:x-gnome-foo-cap&lt;/code&gt; 과 같이 : x- &lt;code&gt;:x-vendor&lt;/code&gt; 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="38fcb1688e09c732b908e16b9869d904b88e7d33" translate="yes" xml:space="preserve">
          <source>Furthermore, if you build Emacs with ImageMagick (&lt;code&gt;libMagickWand&lt;/code&gt;) support, Emacs can display any image format that ImageMagick can. See &lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Images&lt;/a&gt;. All images displayed via ImageMagick have type symbol &lt;code&gt;imagemagick&lt;/code&gt;.</source>
          <target state="translated">또한 ImageMagick ( &lt;code&gt;libMagickWand&lt;/code&gt; ) 지원으로 Emacs 를 빌드하는 경우 Emacs는 ImageMagick이 할 수있는 모든 이미지 형식을 표시 할 수 있습니다. &lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick 이미지를&lt;/a&gt; 참조하십시오 . ImageMagick을 통해 표시되는 모든 이미지에는 유형 기호 &lt;code&gt;imagemagick&lt;/code&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="d3ab0d37a5570c2a63b16ca617fa7f37aa9c811f" translate="yes" xml:space="preserve">
          <source>GID</source>
          <target state="translated">GID</target>
        </trans-unit>
        <trans-unit id="758f6c9347b91091c38ad698a8eba6aeac47b9c4" translate="yes" xml:space="preserve">
          <source>GIF</source>
          <target state="translated">GIF</target>
        </trans-unit>
        <trans-unit id="b1d04b7353f342b3fc0e138dd448e6d3d2a270b7" translate="yes" xml:space="preserve">
          <source>GNU Emacs Internals</source>
          <target state="translated">GNU Emacs 내부</target>
        </trans-unit>
        <trans-unit id="14bfe5c12f7749ed07408ca85f24a1934bf6aa27" translate="yes" xml:space="preserve">
          <source>GNU Emacs Lisp Reference Manual</source>
          <target state="translated">GNU Emacs Lisp 참조 매뉴얼</target>
        </trans-unit>
        <trans-unit id="6b7ca1de2621b353948cc136cf63a45e8c2a7488" translate="yes" xml:space="preserve">
          <source>GNU Emacs Lisp is largely inspired by Maclisp, and a little by Common Lisp. If you know Common Lisp, you will notice many similarities. However, many features of Common Lisp have been omitted or simplified in order to reduce the memory requirements of GNU Emacs. Sometimes the simplifications are so drastic that a Common Lisp user might be very confused. We will occasionally point out how GNU Emacs Lisp differs from Common Lisp. If you don&amp;rsquo;t know Common Lisp, don&amp;rsquo;t worry about it; this manual is self-contained.</source>
          <target state="translated">GNU Emacs Lisp는 대부분 Maclisp에서 영감을 얻었으며 Common Lisp에서 약간 영감을 받았습니다. Common Lisp를 알고 있다면 많은 유사점을 발견 할 것입니다. 그러나 GNU Emacs의 메모리 요구 사항을 줄이기 위해 Common Lisp의 많은 기능이 생략되거나 단순화되었습니다. 때로는 단순화가 너무 과감해서 Common Lisp 사용자가 매우 혼란 스러울 수 있습니다. GNU Emacs Lisp가 Common Lisp와 어떻게 다른지 때때로 지적 할 것입니다. Common Lisp를 모르더라도 걱정하지 마십시오. 이 설명서는 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="1624112f8e7208e6275b3c1c19938103ec6a0d70" translate="yes" xml:space="preserve">
          <source>GNU Emacs Manual</source>
          <target state="translated">GNU Emacs 매뉴얼</target>
        </trans-unit>
        <trans-unit id="5a69d404ab2cc0f949da504d77f240952b515504" translate="yes" xml:space="preserve">
          <source>GNU Emacs has convenient built-in help facilities, most of which derive their information from documentation strings associated with functions and variables. This chapter describes how to access documentation strings in Lisp programs.</source>
          <target state="translated">GNU Emacs에는 편리한 내장 도움말 기능이 있으며, 대부분은 함수 및 변수와 관련된 문서 문자열에서 정보를 가져옵니다. 이 장에서는 Lisp 프로그램에서 문서 문자열에 액세스하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="4618ab4bd7d71d093e513abd54ab028d951cda4f" translate="yes" xml:space="preserve">
          <source>GNU Emacs provides two ways to search through a buffer for specified text: exact string searches and regular expression searches. After a regular expression search, you can examine the &lt;em&gt;match data&lt;/em&gt; to determine which text matched the whole regular expression or various portions of it.</source>
          <target state="translated">GNU Emacs는 버퍼를 통해 지정된 텍스트를 검색하는 두 가지 방법, 즉 정확한 문자열 검색과 정규식 검색을 제공합니다. 정규식 검색 후 &lt;em&gt;일치 데이터&lt;/em&gt; 를 검사 하여 전체 정규식 또는 그 일부와 일치하는 텍스트를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75d3dab0c6ec9b6214031068e696841594386a33" translate="yes" xml:space="preserve">
          <source>GNU Emacs supports two numeric data types: &lt;em&gt;integers&lt;/em&gt; and &lt;em&gt;floating-point numbers&lt;/em&gt;. Integers are whole numbers such as -3, 0, 7, 13, and 511. Floating-point numbers are numbers with fractional parts, such as -4.5, 0.0, and 2.71828. They can also be expressed in exponential notation: &amp;lsquo;</source>
          <target state="translated">GNU Emacs는 &lt;em&gt;정수&lt;/em&gt; 와 &lt;em&gt;부동 소수점&lt;/em&gt; 숫자의 두 가지 숫자 데이터 유형을 지원 &lt;em&gt;합니다&lt;/em&gt; . 정수는 -3, 0, 7, 13 및 511과 같은 정수입니다. 부동 소수점 숫자는 -4.5, 0.0 및 2.71828과 같이 소수 부분이있는 숫자입니다. 지수 표기법으로도 표현할 수 있습니다. '</target>
        </trans-unit>
        <trans-unit id="0e4ec8a54cfff9c2845fa38842cb6cd1bdea197d" translate="yes" xml:space="preserve">
          <source>GNU Free Documentation License</source>
          <target state="translated">GNU 자유 문서 라이센스</target>
        </trans-unit>
        <trans-unit id="31fe0bd96e05d07216701ff457b8adaf6462379b" translate="yes" xml:space="preserve">
          <source>GPL</source>
          <target state="translated">GPL</target>
        </trans-unit>
        <trans-unit id="5b32b8542e4c8854b05455c0b114c2bdced713ad" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="translated">가비지 콜렉션</target>
        </trans-unit>
        <trans-unit id="d674677a434a2e3575c77dfb46bfbee4d7060c68" translate="yes" xml:space="preserve">
          <source>General Escape Syntax</source>
          <target state="translated">일반 이스케이프 구문</target>
        </trans-unit>
        <trans-unit id="701c7ea4f3592c8bc6c19272368508c9df5de196" translate="yes" xml:space="preserve">
          <source>General rules for &lt;code&gt;interactive&lt;/code&gt;.</source>
          <target state="translated">일반 규칙 &lt;code&gt;interactive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48fe18b8ba83244d204eb141c298982a8060a124" translate="yes" xml:space="preserve">
          <source>Generalized Variables</source>
          <target state="translated">일반화 변수</target>
        </trans-unit>
        <trans-unit id="030419782f2a733612cc396ed0c3545800e732d8" translate="yes" xml:space="preserve">
          <source>Generalized variables are analogous to lvalues in the C language, where &amp;lsquo;</source>
          <target state="translated">일반화 된 변수는 C 언어의 lvalue와 유사합니다. 여기서 '</target>
        </trans-unit>
        <trans-unit id="496918d17db6ffea3a60600cfa121b42a6514811" translate="yes" xml:space="preserve">
          <source>Generally speaking, when you define a globalized minor mode, you should also define a non-globalized version, so that people can use (or disable) it in individual buffers. This also allows them to disable a globally enabled minor mode in a specific major mode, by using that mode&amp;rsquo;s hook.</source>
          <target state="translated">일반적으로 글로벌화 된 부 모드를 정의 할 때 사람들이 개별 버퍼에서이를 사용 (또는 비활성화) 할 수 있도록 글로벌화되지 않은 버전도 정의해야합니다. 또한 특정 주 모드에서 해당 모드의 후크를 사용하여 전역 적으로 활성화 된 부 모드를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7a4fa64846c3dbb9cb99780ca819530b39f1dfc" translate="yes" xml:space="preserve">
          <source>Generally, it&amp;rsquo;s always a good idea for users and Lisp programmers to be prepared for the case that a window already shows the buffer in question and to reuse that window. In the preceding subsection we have shown that failing to do so properly may cause &lt;code&gt;display-buffer&lt;/code&gt; to continuously pop up a new frame although a frame showing that buffer existed already. In a few cases only, it might be undesirable to reuse a window, for example, when a different portion of the buffer should be shown in that window.</source>
          <target state="translated">일반적으로 사용자와 Lisp 프로그래머는 창이 이미 해당 버퍼를 표시하는 경우에 대비하고 해당 창을 다시 사용하는 것이 좋습니다. 앞의 하위 섹션에서 제대로 수행하지 않으면 해당 버퍼를 보여주는 프레임이 이미 존재하더라도 &lt;code&gt;display-buffer&lt;/code&gt; 가 계속해서 새 프레임을 팝업 할 수 있음을 보여주었습니다. 일부 경우에만 창을 재사용하는 것이 바람직하지 않을 수 있습니다 (예 : 해당 창에 버퍼의 다른 부분이 표시되어야하는 경우).</target>
        </trans-unit>
        <trans-unit id="574618e2ddb4515808c47847cae9efbf4a779681" translate="yes" xml:space="preserve">
          <source>Generally, you should not modify &lt;code&gt;exec-path&lt;/code&gt; directly. Instead, ensure that your &lt;code&gt;PATH&lt;/code&gt; environment variable is set appropriately before starting Emacs. Trying to modify &lt;code&gt;exec-path&lt;/code&gt; independently of &lt;code&gt;PATH&lt;/code&gt; can lead to confusing results.</source>
          <target state="translated">일반적으로 &lt;code&gt;exec-path&lt;/code&gt; 를 직접 수정해서는 안됩니다 . 대신 Emacs를 시작하기 전에 &lt;code&gt;PATH&lt;/code&gt; 환경 변수가 적절하게 설정 되었는지 확인하십시오 . &lt;code&gt;PATH&lt;/code&gt; 와 독립적으로 &lt;code&gt;exec-path&lt;/code&gt; 를 수정하려고하면 혼란스러운 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f02c218f33c7eba628218756088bc02c1777bca2" translate="yes" xml:space="preserve">
          <source>Generating Unique File Names</source>
          <target state="translated">고유 한 파일 이름 생성</target>
        </trans-unit>
        <trans-unit id="f339cdb02c5864e2baa89460c01991fd5a3c6ef1" translate="yes" xml:space="preserve">
          <source>Generating names for temporary files.</source>
          <target state="translated">임시 파일의 이름 생성.</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="83082f46072d254fd933bf6e78414552f2b12960" translate="yes" xml:space="preserve">
          <source>Generic Functions</source>
          <target state="translated">일반 함수</target>
        </trans-unit>
        <trans-unit id="5f50f6b153771364ca39f783ae9d640205b67a5b" translate="yes" xml:space="preserve">
          <source>Generic Modes</source>
          <target state="translated">일반 모드</target>
        </trans-unit>
        <trans-unit id="b88bfefd0e466ecfaeaddeb2533f86c3d2ec6a83" translate="yes" xml:space="preserve">
          <source>Generic comment delimiters: &amp;lsquo;</source>
          <target state="translated">일반 주석 구분 기호 : '</target>
        </trans-unit>
        <trans-unit id="7d9c2e77016bbfb6f675ef530c30b1b6b5bb842c" translate="yes" xml:space="preserve">
          <source>Generic functions (see &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Generic Functions&lt;/a&gt;) cannot be turned into commands by adding the &lt;code&gt;interactive&lt;/code&gt; form to them.</source>
          <target state="translated">일반 기능 (참조 &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;일반 기능&lt;/a&gt; )을 추가하여 명령어로 전환 할 수없는 &lt;code&gt;interactive&lt;/code&gt; 그들에게 양식을.</target>
        </trans-unit>
        <trans-unit id="9c4041b323dd98d1002d8fa0298ef239450e028b" translate="yes" xml:space="preserve">
          <source>Generic sequences and coroutines.</source>
          <target state="translated">일반 시퀀스 및 코 루틴.</target>
        </trans-unit>
        <trans-unit id="a400a070b91967359f7d6f2c3139143218239285" translate="yes" xml:space="preserve">
          <source>Generic string delimiters: &amp;lsquo;</source>
          <target state="translated">일반 문자열 구분 기호 : '</target>
        </trans-unit>
        <trans-unit id="aa81eb34e68cc623a70757c80ef211f86b74fa4e" translate="yes" xml:space="preserve">
          <source>Geometric properties of frames.</source>
          <target state="translated">프레임의 기하학적 속성.</target>
        </trans-unit>
        <trans-unit id="9d1226717c2fc305626512b0a1ae618fddfee0b9" translate="yes" xml:space="preserve">
          <source>Geometry</source>
          <target state="translated">Geometry</target>
        </trans-unit>
        <trans-unit id="331f110504f685e70d4805561ba7bb9b1257ebaa" translate="yes" xml:space="preserve">
          <source>Get the property of button &lt;var&gt;button&lt;/var&gt; named &lt;var&gt;prop&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;prop&lt;/var&gt; 이라는 버튼 &lt;var&gt;button&lt;/var&gt; 의 속성을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6f29e98bffec95c0716b44aa0ff24d95f35e85d8" translate="yes" xml:space="preserve">
          <source>Get the property of button-type &lt;var&gt;type&lt;/var&gt; named &lt;var&gt;prop&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;prop&lt;/var&gt; 이라는 버튼 유형 &lt;var&gt;type&lt;/var&gt; 의 속성을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="1300375e6b68edaa6c9f48f364532b48587457c1" translate="yes" xml:space="preserve">
          <source>Getting Help about a Major Mode</source>
          <target state="translated">주요 모드에 대한 도움말 얻기</target>
        </trans-unit>
        <trans-unit id="e8c30a115e708d9217f0f8cc494653cfd0fd1e8d" translate="yes" xml:space="preserve">
          <source>Getting Out of Emacs</source>
          <target state="translated">Emacs에서 벗어나기</target>
        </trans-unit>
        <trans-unit id="d05810aa7a877af6d6d557a016e80237324d6245" translate="yes" xml:space="preserve">
          <source>Getting a list of the files in a directory.</source>
          <target state="translated">디렉토리에있는 파일 목록 가져 오기.</target>
        </trans-unit>
        <trans-unit id="dccbae42f56e432919881cd1370d677166e8d171" translate="yes" xml:space="preserve">
          <source>Getting and setting properties of buttons.</source>
          <target state="translated">버튼 속성 가져 오기 및 설정.</target>
        </trans-unit>
        <trans-unit id="5a1a6921621184d5b2f8f89cc717ecd8b9a4c5e6" translate="yes" xml:space="preserve">
          <source>Getting events that say when the mouse moves.</source>
          <target state="translated">마우스가 움직일 때 알려주는 이벤트를받습니다.</target>
        </trans-unit>
        <trans-unit id="85cac9116f0607b577f8d8eeffa321543d0619ab" translate="yes" xml:space="preserve">
          <source>Getting resource values from the server.</source>
          <target state="translated">서버에서 리소스 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5d49eedfc0c13be4fcbd69c57b1a390cf43ea3e0" translate="yes" xml:space="preserve">
          <source>Getting the current time.</source>
          <target state="translated">현재 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ab85d34d75a00e57918cfafc749c7632c211454b" translate="yes" xml:space="preserve">
          <source>Getting the definitions of color names.</source>
          <target state="translated">색상 이름의 정의 얻기.</target>
        </trans-unit>
        <trans-unit id="946d19f23a33cb351289cfb8681252cf5f6a7369" translate="yes" xml:space="preserve">
          <source>Getting the run time used by Emacs.</source>
          <target state="translated">Emacs에서 사용하는 런타임 가져 오기.</target>
        </trans-unit>
        <trans-unit id="e734df2a071a77f50b0f83b4cdcc755167f315f0" translate="yes" xml:space="preserve">
          <source>Getting the user id, system type, environment variables, and other such things.</source>
          <target state="translated">사용자 ID, 시스템 유형, 환경 변수 및 기타 사항을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="f79da25e922286c5950fac82d11d13650d06d624" translate="yes" xml:space="preserve">
          <source>Give your type a name.</source>
          <target state="translated">유형에 이름을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b23c8b9bb8e3d40e4b62661cea0e852296d05ab8" translate="yes" xml:space="preserve">
          <source>Given a directory name, you can combine it with a relative file name using &lt;code&gt;concat&lt;/code&gt;:</source>
          <target state="translated">디렉토리 이름이 주어지면 &lt;code&gt;concat&lt;/code&gt; 을 사용하여 상대 파일 이름과 결합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="03eee537a386700e1b67cbf9c43d9deb0ffd4beb" translate="yes" xml:space="preserve">
          <source>Given a numeric significand &lt;var&gt;s&lt;/var&gt; and an integer exponent &lt;var&gt;e&lt;/var&gt;, this function returns the floating point number &lt;var&gt;s&lt;/var&gt; * 2**&lt;var&gt;e&lt;/var&gt;.</source>
          <target state="translated">숫자 &lt;var&gt;s&lt;/var&gt; 와 정수 지수 &lt;var&gt;e&lt;/var&gt; 가 주어지면 이 함수는 부동 소수점 숫자 &lt;var&gt;s&lt;/var&gt; * 2 ** &lt;var&gt;e&lt;/var&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="68cb20ec878c99ef2d7414d7433fa3b590d895ca" translate="yes" xml:space="preserve">
          <source>Given a possibly relative file name, you can expand any leading &amp;lsquo;</source>
          <target state="translated">상대적인 파일 이름이 주어지면 선행 '</target>
        </trans-unit>
        <trans-unit id="95fd4f822d202e3ef15de8810d2413dc0253a40b" translate="yes" xml:space="preserve">
          <source>Given a syntax descriptor &lt;var&gt;desc&lt;/var&gt; (a string), this function returns the corresponding raw syntax descriptor.</source>
          <target state="translated">구문 설명자 &lt;var&gt;desc&lt;/var&gt; (문자열)가 주어지면 이 함수는 해당 원시 구문 설명자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a7b92c8dc41c0b326d3d5eab48c3e0ffc3cb251a" translate="yes" xml:space="preserve">
          <source>Global Break Condition</source>
          <target state="translated">글로벌 중단 조건</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">글로벌 변수</target>
        </trans-unit>
        <trans-unit id="b9f99ed058cdfb8caf27e052b046dc7e06cc8e42" translate="yes" xml:space="preserve">
          <source>Global and local variable bindings are found in most programming languages in one form or another. Emacs, however, also supports additional, unusual kinds of variable binding, such as &lt;em&gt;buffer-local&lt;/em&gt; bindings, which apply only in one buffer. Having different values for a variable in different buffers is an important customization method. (Variables can also have bindings that are local to each terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.)</source>
          <target state="translated">전역 및 지역 변수 바인딩은 대부분의 프로그래밍 언어에서 어떤 형태로든 발견됩니다. 그러나 Emacs는 또한 하나의 버퍼에만 적용되는 &lt;em&gt;버퍼-로컬&lt;/em&gt; 바인딩 과 같은 추가적이고 비정상적인 종류의 변수 바인딩 을 지원합니다. 다른 버퍼의 변수에 대해 다른 값을 갖는 것은 중요한 사용자 정의 방법입니다. (변수는 각 터미널에 로컬 인 바인딩을 가질 수도 있습니다. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;다중 터미널을&lt;/a&gt; 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="3d2db2a2d338fcb074c79ae872a80351dd31e921" translate="yes" xml:space="preserve">
          <source>Global variables have values that last until explicitly superseded with new values. Sometimes it is useful to give a variable a &lt;em&gt;local value&lt;/em&gt;&amp;mdash;a value that takes effect only within a certain part of a Lisp program. When a variable has a local value, we say that it is &lt;em&gt;locally bound&lt;/em&gt; to that value, and that it is a &lt;em&gt;local variable&lt;/em&gt;.</source>
          <target state="translated">전역 변수에는 새 값으로 명시 적으로 대체 될 때까지 지속되는 값이 있습니다. 때로는 변수에 &lt;em&gt;지역 값 (&lt;/em&gt; Lisp 프로그램의 특정 부분에서만 적용되는 &lt;em&gt;값)&lt;/em&gt; 을 제공하는 것이 유용합니다 . 변수에 로컬 값이 있으면 해당 값에 &lt;em&gt;로컬로 바인딩&lt;/em&gt; 되고 &lt;em&gt;로컬 변수&lt;/em&gt; 라고 말합니다 .</target>
        </trans-unit>
        <trans-unit id="bb66713e6aa8c404db85a93a71c3a289ce4f0a1b" translate="yes" xml:space="preserve">
          <source>Globally enabling the mode also affects buffers subsequently created by visiting files, and buffers that use a major mode other than Fundamental mode; but it does not detect the creation of a new buffer in Fundamental mode.</source>
          <target state="translated">모드를 전역 적으로 활성화하면 이후에 파일을 방문하여 생성되는 버퍼와 기본 모드 이외의 주 모드를 사용하는 버퍼에도 영향을줍니다. 그러나 기본 모드에서 새 버퍼 생성을 감지하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="3b03f6e25770704fd7572875ba7ab707169c405d" translate="yes" xml:space="preserve">
          <source>Glyph matrices describing the current and desired display of this window.</source>
          <target state="translated">이 창의 현재 및 원하는 표시를 설명하는 글리프 행렬입니다.</target>
        </trans-unit>
        <trans-unit id="6f2a41f0c50f68185e74d8fd8b047928278c851b" translate="yes" xml:space="preserve">
          <source>Glyphless Character Display</source>
          <target state="translated">문양없는 문자 표시</target>
        </trans-unit>
        <trans-unit id="34899bb5363519f7fab6c0fcd14f61f65bf8e8f4" translate="yes" xml:space="preserve">
          <source>Glyphs</source>
          <target state="translated">Glyphs</target>
        </trans-unit>
        <trans-unit id="363c5e8f2bfc9456faf0e86453ba4fe84f19d6d6" translate="yes" xml:space="preserve">
          <source>GnuTLS Cryptographic Functions</source>
          <target state="translated">GnuTLS 암호화 기능</target>
        </trans-unit>
        <trans-unit id="4ed6064f1c767d2780770d64cd8150bc5f5f64ec" translate="yes" xml:space="preserve">
          <source>GnuTLS Cryptography</source>
          <target state="translated">GnuTLS 암호화</target>
        </trans-unit>
        <trans-unit id="822ec426f1b627d84ee00c1aa2bd77f7cc4d26cd" translate="yes" xml:space="preserve">
          <source>Go non-stop: ignore breakpoints (&lt;code&gt;edebug-Go-nonstop-mode&lt;/code&gt;). You can still stop the program by typing</source>
          <target state="translated">&lt;code&gt;edebug-Go-nonstop-mode&lt;/code&gt; : 중단 점 무시 ( edebug-Go-nonstop-mode ). 다음을 입력하여 프로그램을 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfd637a5fbe2a922596a4eb3f26c79909240e5a3" translate="yes" xml:space="preserve">
          <source>Go: run until the next breakpoint (&lt;code&gt;edebug-go-mode&lt;/code&gt;). See &lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;Breakpoints&lt;/a&gt;.</source>
          <target state="translated">Go : 다음 중단 점까지 실행합니다 ( &lt;code&gt;edebug-go-mode&lt;/code&gt; ). &lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;중단 점을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="933d88fbffde17125081175103d1989c33bc3029" translate="yes" xml:space="preserve">
          <source>Good maintainable indentation functions usually fall into two categories: either parsing forward from some safe starting point until the position of interest, or parsing backward from the position of interest. Neither of the two is a clearly better choice than the other: parsing backward is often more difficult than parsing forward because programming languages are designed to be parsed forward, but for the purpose of indentation it has the advantage of not needing to guess a safe starting point, and it generally enjoys the property that only a minimum of text will be analyzed to decide the indentation of a line, so indentation will tend to be less affected by syntax errors in some earlier unrelated piece of code. Parsing forward on the other hand is usually easier and has the advantage of making it possible to reindent efficiently a whole region at a time, with a single parse.</source>
          <target state="translated">유지 관리 가능한 들여 쓰기 기능은 일반적으로 안전한 시작점에서 관심 위치까지 앞으로 구문 분석하거나 관심 위치에서 뒤로 구문 분석하는 두 가지 범주로 나뉩니다. 두 가지 중 어느 것도 다른 것보다 분명히 더 나은 선택은 아닙니다. 프로그래밍 언어는 앞으로 파싱되도록 ​​설계 되었기 때문에 뒤로 파싱하는 것이 앞으로 파싱하는 것보다 더 어렵지만 들여 쓰기를 위해 안전한 시작을 추측 할 필요가 없다는 이점이 있습니다. 일반적으로 최소한의 텍스트 만 분석하여 줄의 들여 쓰기를 결정하는 속성을 누리므로 들여 쓰기는 이전의 관련되지 않은 일부 코드에서 구문 오류의 영향을 덜받는 경향이 있습니다.반면에 정방향 구문 분석은 일반적으로 더 쉽고 단일 구문 분석으로 한 번에 전체 영역을 효율적으로 다시 들여 쓰기 할 수 있다는 장점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c02c99bb49b14aee53dd10cd6270712867ff2a5b" translate="yes" xml:space="preserve">
          <source>Google Native Client (</source>
          <target state="translated">Google Native Client (</target>
        </trans-unit>
        <trans-unit id="42ee360434cc6e02e51843f90e45c43f5cd8222b" translate="yes" xml:space="preserve">
          <source>Group name corresponding to the effective user&amp;rsquo;s group ID, a string.</source>
          <target state="translated">유효 사용자의 그룹 ID, 문자열에 해당하는 그룹 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a9219e179a17e42dafd277588fede5e068604888" translate="yes" xml:space="preserve">
          <source>H-</source>
          <target state="translated">H-</target>
        </trans-unit>
        <trans-unit id="b65c5617339d2ad05f65cebd963d5db8109a36f4" translate="yes" xml:space="preserve">
          <source>H-a</source>
          <target state="translated">H-a</target>
        </trans-unit>
        <trans-unit id="98cfefccd41326df1c019bd2134961149cb4c122" translate="yes" xml:space="preserve">
          <source>HYPER</source>
          <target state="translated">HYPER</target>
        </trans-unit>
        <trans-unit id="b313e317f3321c8db221f164577ede4d314070a1" translate="yes" xml:space="preserve">
          <source>Handle subsequent invocations of &lt;code&gt;display-buffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;display-buffer&lt;/code&gt; 의 후속 호출 처리</target>
        </trans-unit>
        <trans-unit id="ba2c9ae953de0391c94c416ac5efdfc059df4186" translate="yes" xml:space="preserve">
          <source>Handle this function like a &amp;lsquo;</source>
          <target state="translated">이 함수를 '</target>
        </trans-unit>
        <trans-unit id="14e12a854e3f2af5a1f810404b3e215e1050bb55" translate="yes" xml:space="preserve">
          <source>Handlers for &lt;code&gt;insert-file-contents&lt;/code&gt; typically need to clear the buffer&amp;rsquo;s modified flag, with &lt;code&gt;(set-buffer-modified-p nil)&lt;/code&gt;, if the &lt;var&gt;visit&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;. This also has the effect of unlocking the buffer if it is locked.</source>
          <target state="translated">&lt;code&gt;insert-file-contents&lt;/code&gt; 에 대한 핸들러는 일반적으로 &lt;var&gt;visit&lt;/var&gt; 인수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 &lt;code&gt;(set-buffer-modified-p nil)&lt;/code&gt; 을 사용 하여 버퍼의 수정 된 플래그를 지워야합니다 . 이것은 또한 버퍼가 잠겨있는 경우 잠금을 해제하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c84cfd00d4c080dbeef3d2d78b20b84c8af76b1" translate="yes" xml:space="preserve">
          <source>Handlers that don&amp;rsquo;t really do anything special for actual access to the file&amp;mdash;such as the ones that implement completion of host names for remote file names&amp;mdash;should have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;safe-magic&lt;/code&gt; property. For instance, Emacs normally protects directory names it finds in &lt;code&gt;PATH&lt;/code&gt; from becoming magic, if they look like magic file names, by prefixing them with &amp;lsquo;</source>
          <target state="translated">원격 파일 이름에 대한 호스트 이름의 완성을 구현하는 것과 같이 파일에 대한 실제 액세스를 위해 특별한 작업을 수행하지 않는 핸들러는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;code&gt;safe-magic&lt;/code&gt; 속성을 가져야 합니다. 예를 들어, Emacs는 일반적으로 &lt;code&gt;PATH&lt;/code&gt; 에서 찾은 디렉토리 이름이 마법 파일 이름처럼 보이는 경우 '</target>
        </trans-unit>
        <trans-unit id="f035c8210f7349018c80c3f6159806e178588805" translate="yes" xml:space="preserve">
          <source>Handling compiler error messages.</source>
          <target state="translated">컴파일러 오류 메시지 처리.</target>
        </trans-unit>
        <trans-unit id="3a65fc8af4ac6fce99cb0874e341518313404719" translate="yes" xml:space="preserve">
          <source>Handling local variable lists in files.</source>
          <target state="translated">파일에서 지역 변수 목록 처리.</target>
        </trans-unit>
        <trans-unit id="5cb83b7b7a273c443024f4b6f41a5c3403668a57" translate="yes" xml:space="preserve">
          <source>Handling of error conditions and nonlocal exits.</source>
          <target state="translated">오류 조건 및 비 로컬 종료 처리.</target>
        </trans-unit>
        <trans-unit id="796b9f791899bac6cd9e5366029a14642d9992c8" translate="yes" xml:space="preserve">
          <source>Hash Table Access</source>
          <target state="translated">해시 테이블 액세스</target>
        </trans-unit>
        <trans-unit id="3d79b9ba79bbb39f306c206356dcef4d216b4993" translate="yes" xml:space="preserve">
          <source>Hash Table Type</source>
          <target state="translated">해시 테이블 유형</target>
        </trans-unit>
        <trans-unit id="d5b36413b8512c07b9d877c706ab0ef1b552f2e1" translate="yes" xml:space="preserve">
          <source>Hash Tables</source>
          <target state="translated">해시 테이블</target>
        </trans-unit>
        <trans-unit id="16239c9e52703715588a3938d66eb705195e0da6" translate="yes" xml:space="preserve">
          <source>Hash notation cannot be read at all, so the Lisp reader signals the error &lt;code&gt;invalid-read-syntax&lt;/code&gt; whenever it encounters &amp;lsquo;</source>
          <target state="translated">해시 표기법은 전혀 읽을 수 없으므로 Lisp 판독기 는 '를 만날 때마다 &lt;code&gt;invalid-read-syntax&lt;/code&gt; 오류 신호를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="5132b811914bd7b45510a577c90507eca7f92695" translate="yes" xml:space="preserve">
          <source>Having obtained the arguments, Lisp invokes the macro definition just as a function is invoked. The argument variables of the macro are bound to the argument values from the macro call, or to a list of them in the case of a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument. And the macro body executes and returns its value just as a function body does.</source>
          <target state="translated">인수를 얻은 Lisp는 함수가 호출되는 것처럼 매크로 정의를 호출합니다. 매크로의 인수 변수는 매크로 호출의 인수 값 또는 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 인수 의 경우 목록에 바인딩됩니다 . 그리고 매크로 본문은 함수 본문과 마찬가지로 실행되고 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d00e152da53b1b2080b0df81972b9d02bae3c8f" translate="yes" xml:space="preserve">
          <source>Heap space which is not currently used, in &lt;var&gt;unit-size&lt;/var&gt; units.</source>
          <target state="translated">현재 사용되지 않는 힙 공간 &lt;var&gt;unit-size&lt;/var&gt; 단위)입니다.</target>
        </trans-unit>
        <trans-unit id="c47ae15370cfe1ed2781eedc1dc2547d12d9e972" translate="yes" xml:space="preserve">
          <source>Help</source>
          <target state="translated">Help</target>
        </trans-unit>
        <trans-unit id="d2dd00589d7b674fe976ce005e954ea6b9f27564" translate="yes" xml:space="preserve">
          <source>Help (Type ? for further options)</source>
          <target state="translated">도움말 (추가 옵션을 보려면? 입력)</target>
        </trans-unit>
        <trans-unit id="8be3aecf7753313deb6195b6d9f2b528895f2b61" translate="yes" xml:space="preserve">
          <source>Help Functions</source>
          <target state="translated">도움말 기능</target>
        </trans-unit>
        <trans-unit id="1e7eebdb08c9dbf27c7668e2badd51e667707d3c" translate="yes" xml:space="preserve">
          <source>Helper</source>
          <target state="translated">Helper</target>
        </trans-unit>
        <trans-unit id="6c3d9ab10018fd04a5ba7e022a1b72c3f569abac" translate="yes" xml:space="preserve">
          <source>Helper Functions for Indentation Rules</source>
          <target state="translated">들여 쓰기 규칙을위한 도우미 함수</target>
        </trans-unit>
        <trans-unit id="99da0ca420fedeb5f771b5ca0616eb2690de4991" translate="yes" xml:space="preserve">
          <source>Helper functions for indentation rules.</source>
          <target state="translated">들여 쓰기 규칙을위한 도우미 기능.</target>
        </trans-unit>
        <trans-unit id="8118c060ea873f0458b1d35aae85b10c878c1f1d" translate="yes" xml:space="preserve">
          <source>Helper-describe-bindings</source>
          <target state="translated">Helper-describe-bindings</target>
        </trans-unit>
        <trans-unit id="bffb261f2d07fa5e9ebc770f1470184479a186f2" translate="yes" xml:space="preserve">
          <source>Helper-help</source>
          <target state="translated">Helper-help</target>
        </trans-unit>
        <trans-unit id="2c9302396ef66992baa089e464952f8271b0c3f0" translate="yes" xml:space="preserve">
          <source>Hence, &lt;code&gt;display-buffer-reuse-window&lt;/code&gt; is one action function that should be used as often as possible, both in &lt;var&gt;action&lt;/var&gt; arguments and customizations. An &lt;code&gt;inhibit-same-window&lt;/code&gt; entry in the &lt;var&gt;action&lt;/var&gt; argument usually takes care of the most common case where reusing a window showing the buffer should be avoided&amp;mdash;that where the window in question is the selected one.</source>
          <target state="translated">따라서 &lt;code&gt;display-buffer-reuse-window&lt;/code&gt; 는 &lt;var&gt;action&lt;/var&gt; 인수와 사용자 지정 모두에서 가능한 한 자주 사용해야하는 하나의 작업 함수입니다 . &lt;var&gt;action&lt;/var&gt; 인수 에 있는 &lt;code&gt;inhibit-same-window&lt;/code&gt; 항목은 일반적으로 버퍼를 표시하는 창을 재사용하지 않아야하는 가장 일반적인 경우 (문제의 창이 선택된 창인 경우)를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="9b2f5084dbbffb48e2183c0e79949c5eb114b2c9" translate="yes" xml:space="preserve">
          <source>Hence, if &lt;var&gt;size&lt;/var&gt; is specified, it&amp;rsquo;s the caller&amp;rsquo;s responsibility to check whether the emanating windows are large enough to encompass all areas like a mode line or a scroll bar. The function &lt;code&gt;window-min-size&lt;/code&gt; (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;) can be used to determine the minimum requirements of &lt;var&gt;window&lt;/var&gt; in this regard. Since the new window usually inherits areas like the mode line or the scroll bar from &lt;var&gt;window&lt;/var&gt;, that function is also a good guess for the minimum size of the new window. The caller should specify a smaller size only if it correspondingly removes an inherited area before the next redisplay.</source>
          <target state="translated">따라서 &lt;var&gt;size&lt;/var&gt; 가 지정되면 발신하는 창이 모드 라인이나 스크롤 막대와 같은 모든 영역을 포함 할 수있을만큼 충분히 큰지 확인하는 것은 호출자의 책임입니다. &lt;code&gt;window-min-size&lt;/code&gt; 함수 ( &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt; 참조 )는 이와 관련하여 &lt;var&gt;window&lt;/var&gt; 최소 요구 사항을 결정하는 데 사용할 수 있습니다 . 새로운 윈도우가 보통 모드 라인 또는에서 스크롤 막대 같은 분야 상속 때문에 &lt;var&gt;window&lt;/var&gt; , 그 기능은 새로운 윈도우의 최소 크기에 대한 좋은 추측이다. 호출자는 다음에 다시 표시하기 전에 상속 된 영역을 적절하게 제거하는 경우에만 더 작은 크기를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="3ca67392e6dc778f2b858f89193a1bfb58e87895" translate="yes" xml:space="preserve">
          <source>Hence, the &lt;small&gt;CDR&lt;/small&gt; of a proper list is always a proper list. The &lt;small&gt;CDR&lt;/small&gt; of a nonempty proper list is a proper list containing all the elements except the first.</source>
          <target state="translated">따라서 적절한 목록 의 &lt;small&gt;CDR&lt;/small&gt; 은 항상 적절한 목록입니다. 비어 있지 않은 고유 목록 의 &lt;small&gt;CDR&lt;/small&gt; 은 첫 번째 항목을 제외한 모든 요소를 ​​포함하는 고유 목록입니다.</target>
        </trans-unit>
        <trans-unit id="27e61c02dadbcea427a5b4f6cac0501bc791e679" translate="yes" xml:space="preserve">
          <source>Hence, users should set up a &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; action alist entry in &lt;code&gt;display-buffer-alist&lt;/code&gt; instead of customizing &lt;code&gt;pop-up-frame-alist&lt;/code&gt;. Only this will guarantee that the value of a parameter specified by the user overrides the value of that parameter specified by the caller of &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">따라서, 사용자가 설정해야 &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; 액션 alist 항목 &lt;code&gt;display-buffer-alist&lt;/code&gt; 대신 커스터마이즈 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; . 이것 만이 사용자가 지정한 매개 변수의 값이 &lt;code&gt;display-buffer&lt;/code&gt; 호출자가 지정한 매개 변수의 값을 재정의한다는 것을 보장합니다 .</target>
        </trans-unit>
        <trans-unit id="6a93030d55ba5b4985811ad4a7c7050d8f4754ad" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;forward-line&lt;/code&gt; moves point to the start of the next record, and &lt;code&gt;end-of-line&lt;/code&gt; moves point to the end of record. We do not pass the arguments &lt;var&gt;startkeyfun&lt;/var&gt; and &lt;var&gt;endkeyfun&lt;/var&gt;, because the entire record is used as the sort key.</source>
          <target state="translated">여기서 &lt;code&gt;forward-line&lt;/code&gt; 이동은 다음 레코드의 시작을 가리키고 &lt;code&gt;end-of-line&lt;/code&gt; 끝 이동은 레코드 끝을 가리 킵니다. 전체 레코드가 정렬 키로 사용되기 때문에 &lt;var&gt;startkeyfun&lt;/var&gt; 및 &lt;var&gt;endkeyfun&lt;/var&gt; 인수는 전달하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d1336b7750a17f1153fb7f8ae95fb0b8da6a2bc9" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;form&lt;/var&gt; is an expression to be evaluated the first time this value of &lt;code&gt;font-lock-keywords&lt;/code&gt; is used in a buffer. Its value should have one of the forms described in this table.</source>
          <target state="translated">여기서 &lt;var&gt;form&lt;/var&gt; 은 &lt;code&gt;font-lock-keywords&lt;/code&gt; 값이 버퍼에서 처음 사용될 때 평가되는 표현식 입니다. 값은이 표에 설명 된 형식 중 하나를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="f76f0e6bf0a1474f237d5cced9a1ba5f285b6d65" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;frame&lt;/var&gt; is the frame which was current when the input language changed; &lt;var&gt;codepage&lt;/var&gt; is the new codepage number; and &lt;var&gt;language-id&lt;/var&gt; is the numerical ID of the new input language. The coding-system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;) that corresponds to &lt;var&gt;codepage&lt;/var&gt; is &lt;code&gt;cp&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;windows-&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt;. To convert &lt;var&gt;language-id&lt;/var&gt; to a string (e.g., to use it for various language-dependent features, such as &lt;code&gt;set-language-environment&lt;/code&gt;), use the &lt;code&gt;w32-get-locale-info&lt;/code&gt; function, like this:</source>
          <target state="translated">여기서 &lt;var&gt;frame&lt;/var&gt; 은 입력 언어가 변경되었을 때 현재의 프레임입니다. &lt;var&gt;codepage&lt;/var&gt; 는 새 코드 페이지 번호입니다. 및 &lt;var&gt;language-id&lt;/var&gt; 새로운 입력 언어의 숫자 ID이다. &lt;var&gt;codepage&lt;/var&gt; 해당하는 &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;코딩&lt;/a&gt; 시스템 ( 코딩 시스템 참조 ) 은 &lt;code&gt;cp&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt; &lt;var&gt;codepage&lt;/var&gt; 또는 &lt;code&gt;windows-&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt; &lt;var&gt;codepage&lt;/var&gt; 입니다. &lt;var&gt;language-id&lt;/var&gt; 를 문자열 로 변환하려면 (예 : &lt;code&gt;set-language-environment&lt;/code&gt; 와 같은 다양한 언어 종속 기능 에 사용하려면) 다음과 같이 &lt;code&gt;w32-get-locale-info&lt;/code&gt; 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="98a14b41b9816825deb746b14a625abfad8575b1" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;input-method&lt;/var&gt; is the input method name, a string; &lt;var&gt;language-env&lt;/var&gt; is another string, the name of the language environment this input method is recommended for. (That serves only for documentation purposes.)</source>
          <target state="translated">여기서 &lt;var&gt;input-method&lt;/var&gt; 는 입력 메소드 이름, 문자열입니다. &lt;var&gt;language-env&lt;/var&gt; 는 다른 문자열 이며이 입력 방법이 권장되는 언어 환경의 이름입니다. (문서화 목적으로 만 사용됩니다.)</target>
        </trans-unit>
        <trans-unit id="e84277320459e0c2431f3d0481ba514e93bb3fab" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;mode-variable&lt;/var&gt; is the variable that controls enabling of the minor mode, and &lt;var&gt;string&lt;/var&gt; is a short string, starting with a space, to represent the mode in the mode line. These strings must be short so that there is room for several of them at once.</source>
          <target state="translated">여기서 &lt;var&gt;mode-variable&lt;/var&gt; 은 보조 모드의 활성화를 제어하는 ​​변수이고 &lt;var&gt;string&lt;/var&gt; 은 모드 행에서 모드를 나타내는 공백으로 시작하는 짧은 문자열입니다. 이 문자열은 한 번에 여러 개를위한 공간이 있도록 짧아야합니다.</target>
        </trans-unit>
        <trans-unit id="3a60fbe5ebc43250e6a84d96ec7b90e00eda5326" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;pos&lt;/var&gt; is the buffer position where the scan stopped, &lt;var&gt;vpos&lt;/var&gt; is the vertical screen position, and &lt;var&gt;hpos&lt;/var&gt; is the horizontal screen position.</source>
          <target state="translated">여기서 &lt;var&gt;pos&lt;/var&gt; 는 스캔이 중지 된 버퍼 위치, &lt;var&gt;vpos&lt;/var&gt; 는 수직 화면 위치, &lt;var&gt;hpos&lt;/var&gt; 는 수평 화면 위치입니다.</target>
        </trans-unit>
        <trans-unit id="0a0961570e60b97df202b02f8105c4e3cd5adc0f" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;sname&lt;/var&gt; is the name you used as the third argument to &lt;code&gt;DEFUN&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;var&gt;sname&lt;/var&gt; 은 &lt;code&gt;DEFUN&lt;/code&gt; 에 대한 세 번째 인수로 사용한 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="5a392afa53cdbf3ff0c4a970c9f61a388883a17c" translate="yes" xml:space="preserve">
          <source>Here are a few examples of using this function:</source>
          <target state="translated">다음은이 기능을 사용하는 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="00dc8a771598ebd39d719a5249f7192adfa7abd6" translate="yes" xml:space="preserve">
          <source>Here are a few special cases in the symbol-naming convention for function keys:</source>
          <target state="translated">다음은 기능 키에 대한 기호 명명 규칙의 몇 가지 특별한 경우입니다.</target>
        </trans-unit>
        <trans-unit id="1617531679f620aa954fbbe3cfaf6025eb9aff51" translate="yes" xml:space="preserve">
          <source>Here are additional functions for creating and working with faces.</source>
          <target state="translated">다음은 얼굴을 만들고 작업하기위한 추가 기능입니다.</target>
        </trans-unit>
        <trans-unit id="b5cb75399fbf3a9a6bde0650bb034b6723eda5e9" translate="yes" xml:space="preserve">
          <source>Here are examples illustrating these principles:</source>
          <target state="translated">다음은 이러한 원칙을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="6f6e55ed07f8e4b2a2fd41e0e3e2008283bd14b7" translate="yes" xml:space="preserve">
          <source>Here are examples of &lt;code&gt;ash&lt;/code&gt;, shifting a pattern of bits one place to the left and to the right. These examples show only the low-order bits of the binary pattern; leading bits all agree with the highest-order bit shown. As you can see, shifting left by one is equivalent to multiplying by two, whereas shifting right by one is equivalent to dividing by two and then rounding toward minus infinity.</source>
          <target state="translated">다음은 &lt;code&gt;ash&lt;/code&gt; 의 예입니다. 비트 패턴을 왼쪽과 오른쪽으로 한 단계 이동합니다. 이 예제는 바이너리 패턴의 하위 비트 만 보여줍니다. 선행 비트는 모두 표시된 최상위 비트와 일치합니다. 보시다시피 왼쪽으로 1을 이동하는 것은 2를 곱하는 것과 같고 오른쪽으로 1을 이동하는 것은 2로 나눈 다음 마이너스 무한대로 반올림하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="137be5cd363eeacaf9134569353b6ffbe9769501" translate="yes" xml:space="preserve">
          <source>Here are examples of creating markers, setting markers, and moving point to markers:</source>
          <target state="translated">다음은 마커 만들기, 마커 설정 및 마커로 포인트 이동의 예입니다.</target>
        </trans-unit>
        <trans-unit id="4d0f160094e8084d0b542e0ad3832bd9e2a51c15" translate="yes" xml:space="preserve">
          <source>Here are examples of shifting left or right by two bits:</source>
          <target state="translated">다음은 왼쪽 또는 오른쪽으로 2 비트 이동하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="8a89bb8173b69c16b50ee0063d5f921a8c999342" translate="yes" xml:space="preserve">
          <source>Here are examples of the special sequences:</source>
          <target state="translated">다음은 특수 시퀀스의 예입니다.</target>
        </trans-unit>
        <trans-unit id="cecbedaa4784f6b28b5221e9a91c48761a8d659b" translate="yes" xml:space="preserve">
          <source>Here are examples of this function and &lt;code&gt;point-min-marker&lt;/code&gt;, shown in a buffer containing a version of the source file for the text of this chapter.</source>
          <target state="translated">다음은 이 장의 텍스트에 대한 소스 파일 버전이 포함 된 버퍼에 표시된 이 함수 및 &lt;code&gt;point-min-marker&lt;/code&gt; 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="81316090a9e475c51c45e63a6fa3b07c04ea527c" translate="yes" xml:space="preserve">
          <source>Here are functions you can use to do this. They use &lt;code&gt;eq&lt;/code&gt; for comparing property values. In all cases, &lt;var&gt;object&lt;/var&gt; defaults to the current buffer.</source>
          <target state="translated">이를 위해 사용할 수있는 기능은 다음과 같습니다. 그들은 속성 값을 비교 하기 위해 &lt;code&gt;eq&lt;/code&gt; 를 사용 합니다. 모든 경우에 &lt;var&gt;object&lt;/var&gt; 기본값은 현재 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="06499340cfbcc2e40ec198bcd18d7c13c979dc86" translate="yes" xml:space="preserve">
          <source>Here are important terms for functions and function-like objects:</source>
          <target state="translated">다음은 함수 및 함수와 유사한 객체에 대한 중요한 용어입니다.</target>
        </trans-unit>
        <trans-unit id="ef60819367469431645003b5c4099276c33be12b" translate="yes" xml:space="preserve">
          <source>Here are read syntaxes for these special floating-point values:</source>
          <target state="translated">다음은 이러한 특수 부동 소수점 값에 대한 읽기 구문입니다.</target>
        </trans-unit>
        <trans-unit id="639232f04f02162315ea68715b78daa740f40bb3" translate="yes" xml:space="preserve">
          <source>Here are several examples of symbol names. Note that the &amp;lsquo;</source>
          <target state="translated">다음은 기호 이름의 몇 가지 예입니다. '</target>
        </trans-unit>
        <trans-unit id="bba68344a933b71c6208ead1de8a2ab5e79790f7" translate="yes" xml:space="preserve">
          <source>Here are several examples, which assume the typical &lt;code&gt;text-quoting-style&lt;/code&gt; settings:</source>
          <target state="translated">다음은 일반적인 &lt;code&gt;text-quoting-style&lt;/code&gt; 설정 을 가정하는 몇 가지 예 입니다 .</target>
        </trans-unit>
        <trans-unit id="bd4cf0b1a247964beb166424793dd3eef042abf9" translate="yes" xml:space="preserve">
          <source>Here are several functions concerned with balanced-parenthesis expressions (also called &lt;em&gt;sexps&lt;/em&gt; in connection with moving across them in Emacs). The syntax table controls how these functions interpret various characters; see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;. See &lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;Parsing Expressions&lt;/a&gt;, for lower-level primitives for scanning sexps or parts of sexps. For user-level commands, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Parentheses.html#Parentheses&quot;&gt;Commands for Editing with Parentheses&lt;/a&gt; in</source>
          <target state="translated">다음은 균형 잡힌 괄호 표현과 관련된 몇 가지 함수입니다 ( Emacs에서 이동과 관련하여 &lt;em&gt;sexps&lt;/em&gt; 라고도 함 ). 구문 테이블은 이러한 함수가 다양한 문자를 해석하는 방법을 제어합니다. &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;구문 테이블을&lt;/a&gt; 참조하십시오 . sexps 또는 sexps의 일부를 스캔하기위한 하위 레벨 프리미티브는 &lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;구문 분석 표현식을&lt;/a&gt; 참조하십시오 . 사용자 수준 명령 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Parentheses.html#Parentheses&quot;&gt;은 괄호&lt;/a&gt; 로 편집하기위한 명령을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0777ec199f1637615fd275c16be17520356b09d9" translate="yes" xml:space="preserve">
          <source>Here are several functions concerned with balanced-parenthesis expressions (also called &lt;em&gt;sexps&lt;/em&gt; in connection with moving across them in Emacs). The syntax table controls how these functions interpret various characters; see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;. See &lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;Parsing Expressions&lt;/a&gt;, for lower-level primitives for scanning sexps or parts of sexps. For user-level commands, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Parentheses.html#Parentheses&quot;&gt;Commands for Editing with Parentheses&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e88d5016e05e6dd463bda1a4a0f7b8ec7949644" translate="yes" xml:space="preserve">
          <source>Here are some examples (assuming dynamic binding is in effect):</source>
          <target state="translated">다음은 몇 가지 예입니다 (동적 바인딩이 유효하다고 가정).</target>
        </trans-unit>
        <trans-unit id="f84fa4910c4099f139d75904015531ce710604bf" translate="yes" xml:space="preserve">
          <source>Here are some examples of &lt;code&gt;interactive&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;interactive&lt;/code&gt; 몇 가지 예입니다 .</target>
        </trans-unit>
        <trans-unit id="ff77fd09f0784ef851674d2e1915d4269d34ce80" translate="yes" xml:space="preserve">
          <source>Here are some examples of argument lists and proper calls:</source>
          <target state="translated">다음은 인수 목록 및 적절한 호출의 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="ddcda280324ee4a6967a5f968cd3950c403c4108" translate="yes" xml:space="preserve">
          <source>Here are some examples of elements of this kind, and what they do:</source>
          <target state="translated">다음은 이러한 종류의 요소와 그 기능의 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="d57ef96ba65f97020756c78d439f23a3f7b44ac8" translate="yes" xml:space="preserve">
          <source>Here are some examples of expressions that use &lt;code&gt;quote&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;quote&lt;/code&gt; 를 사용하는 표현식의 몇 가지 예입니다 .</target>
        </trans-unit>
        <trans-unit id="063f8ca4a26036639902e8d6e1f8d82daa6761ac" translate="yes" xml:space="preserve">
          <source>Here are some examples where the final argument is not a list:</source>
          <target state="translated">다음은 최종 인수가 목록이 아닌 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="8f417879437689d4a9a02fcf7a14bf70386ed44c" translate="yes" xml:space="preserve">
          <source>Here are some examples. This form defines &lt;code&gt;foo&lt;/code&gt; but does not initialize it:</source>
          <target state="translated">여기 예시들이 있습니다. 이 형식은 &lt;code&gt;foo&lt;/code&gt; 를 정의 하지만 초기화하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">여기 몇 가지 예가 있어요.</target>
        </trans-unit>
        <trans-unit id="86e9ed7298c17e817f468344c85791439ea71311" translate="yes" xml:space="preserve">
          <source>Here are some functions that rearrange lists destructively by modifying the &lt;small&gt;CDR&lt;/small&gt;s of their component cons cells. These functions are destructive because they chew up the original lists passed to them as arguments, relinking their cons cells to form a new list that is the returned value.</source>
          <target state="translated">다음은 구성 요소 cons 셀 의 &lt;small&gt;CDR&lt;/small&gt; 을 수정하여 목록을 파괴적으로 재정렬하는 몇 가지 기능입니다 . 이러한 함수는 인수로 전달 된 원래 목록을 씹어 서 반환 된 값인 새 목록을 형성하기 위해 cons 셀을 다시 연결하기 때문에 파괴적입니다.</target>
        </trans-unit>
        <trans-unit id="4dc1cb899829ad639af67d05bbc8b90a9ee8d518" translate="yes" xml:space="preserve">
          <source>Here are some functions that relate to vectors:</source>
          <target state="translated">벡터와 관련된 몇 가지 함수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2606a57d06a34bc11ef95d9600b08616d1e79bc3" translate="yes" xml:space="preserve">
          <source>Here are some guidelines for use of integer types in the Emacs C source code. These guidelines sometimes give competing advice; common sense is advised.</source>
          <target state="translated">다음은 Emacs C 소스 코드에서 정수 유형 사용에 대한 몇 가지 지침입니다. 이러한 지침은 때때로 경쟁적인 조언을 제공합니다. 상식이 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="8a2f601ac00765c945d1d141194f3f1f67233057" translate="yes" xml:space="preserve">
          <source>Here are some of the fields in &lt;code&gt;struct buffer_text&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;struct buffer_text&lt;/code&gt; 의 일부 필드입니다 .</target>
        </trans-unit>
        <trans-unit id="408dfbd718530128a5fcf9328a69a3bdbbed6263" translate="yes" xml:space="preserve">
          <source>Here are some of the standard minibuffer history list variables:</source>
          <target state="translated">다음은 몇 가지 표준 미니 버퍼 히스토리 목록 변수입니다.</target>
        </trans-unit>
        <trans-unit id="80b1b8a51a4536353943812a5257ba6519df398b" translate="yes" xml:space="preserve">
          <source>Here are some other functions for working with hash tables.</source>
          <target state="translated">다음은 해시 테이블 작업을위한 몇 가지 다른 기능입니다.</target>
        </trans-unit>
        <trans-unit id="1f1c7b2052fa8c088a9bfffb139b47bfbead1338" translate="yes" xml:space="preserve">
          <source>Here are some other functions that can convert to or from a string:</source>
          <target state="translated">다음은 문자열로 또는 문자열로 변환 할 수있는 몇 가지 다른 함수입니다.</target>
        </trans-unit>
        <trans-unit id="8d57a58bf24124dd6eacf13f3bc12d9c39aa6b41" translate="yes" xml:space="preserve">
          <source>Here are some sample programs in this small language, including their evaluation results:</source>
          <target state="translated">다음은 평가 결과를 포함하여이 작은 언어로 된 몇 가지 샘플 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="3e6bfbb0d6f1343aa40712dc29c3fe8413233a02" translate="yes" xml:space="preserve">
          <source>Here are some variables that can be used to alter the default completion behavior.</source>
          <target state="translated">다음은 기본 완료 동작을 변경하는 데 사용할 수있는 몇 가지 변수입니다.</target>
        </trans-unit>
        <trans-unit id="4b60364ba45dfb996488db317f7bdf0b520b34cb" translate="yes" xml:space="preserve">
          <source>Here are the Lisp facilities for working with coding systems:</source>
          <target state="translated">다음은 코딩 시스템 작업을위한 Lisp 기능입니다.</target>
        </trans-unit>
        <trans-unit id="eddf13195ff83e0650e651fb86d9df8b243a50a9" translate="yes" xml:space="preserve">
          <source>Here are the code character descriptions for use with &lt;code&gt;interactive&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;interactive&lt;/code&gt; 사용을위한 코드 문자 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="5cf7f3097b76335b093258f884f35ba3efd99f46" translate="yes" xml:space="preserve">
          <source>Here are the commands available in the thread list buffer:</source>
          <target state="translated">스레드 목록 버퍼에서 사용할 수있는 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="16af31b0c509efd73310129915b656a1d62086e4" translate="yes" xml:space="preserve">
          <source>Here are the conventions for displaying each character code (in the absence of a display table, which can override these conventions; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">(이 규칙을 재정의 할 수 있습니다 디스플레이 테이블의 부재에서, 참조 다음은 각 문자 코드를 표시하기위한 규칙은 &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;표시 테이블&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="dbb83ef93267822964caca02bd6405a79c7cd2a6" translate="yes" xml:space="preserve">
          <source>Here are the conventions for how to define the levels of fontification:</source>
          <target state="translated">글꼴 수준을 정의하는 방법에 대한 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5f96d38cddf32c5fbe612cf9fbffcbcf2206e0b3" translate="yes" xml:space="preserve">
          <source>Here are the different possible values for the &lt;var&gt;where&lt;/var&gt; argument of &lt;code&gt;add-function&lt;/code&gt; and &lt;code&gt;advice-add&lt;/code&gt;, specifying how the advice &lt;var&gt;function&lt;/var&gt; and the original function should be composed.</source>
          <target state="translated">다음은 advice &lt;var&gt;function&lt;/var&gt; 와 원래 함수가 어떻게 구성되어야 하는지 지정하는 &lt;code&gt;add-function&lt;/code&gt; 및 &lt;code&gt;advice-add&lt;/code&gt; 의 &lt;var&gt;where&lt;/var&gt; 인수에 대해 가능한 다른 값입니다 .</target>
        </trans-unit>
        <trans-unit id="6c09d16d485d736950593cc1224ab217b508b8f1" translate="yes" xml:space="preserve">
          <source>Here are the functions and variables pertaining to key lookup.</source>
          <target state="translated">다음은 키 조회와 관련된 함수 및 변수입니다.</target>
        </trans-unit>
        <trans-unit id="8062721030578e70cdc1899551c4f45efb57b08e" translate="yes" xml:space="preserve">
          <source>Here are the functions for working with case tables:</source>
          <target state="translated">다음은 케이스 테이블 작업을위한 함수입니다.</target>
        </trans-unit>
        <trans-unit id="87378c02f37fe2e0247907313670ecd662edc946" translate="yes" xml:space="preserve">
          <source>Here are the functions that insert text with inheritance of properties:</source>
          <target state="translated">속성 상속과 함께 텍스트를 삽입하는 함수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e9f24ba91c1b2a714337332d8cebd3a447c4757" translate="yes" xml:space="preserve">
          <source>Here are the functions to perform explicit encoding or decoding. The encoding functions produce sequences of bytes; the decoding functions are meant to operate on sequences of bytes. All of these functions discard text properties. They also set &lt;code&gt;last-coding-system-used&lt;/code&gt; to the precise coding system they used.</source>
          <target state="translated">다음은 명시 적 인코딩 또는 디코딩을 수행하는 기능입니다. 인코딩 함수는 바이트 시퀀스를 생성합니다. 디코딩 기능은 바이트 시퀀스에서 작동합니다. 이러한 모든 함수는 텍스트 속성을 삭제합니다. 또한 &lt;code&gt;last-coding-system-used&lt;/code&gt; 을 사용한 정확한 코딩 시스템으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="28eaa8cb1aade679b5fe5e00cce8764b851a51ae" translate="yes" xml:space="preserve">
          <source>Here are the kinds of elements an undo list can have:</source>
          <target state="translated">실행 취소 목록에 포함 할 수있는 요소의 종류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4375f7c405abbf0783beb19e0f9eb45733fb0193" translate="yes" xml:space="preserve">
          <source>Here are the meaningful bindings for &lt;code&gt;query-replace-map&lt;/code&gt;. Several of them are meaningful only for &lt;code&gt;query-replace&lt;/code&gt; and friends.</source>
          <target state="translated">다음은 &lt;code&gt;query-replace-map&lt;/code&gt; 의 의미있는 바인딩입니다 . 그들 중 일부는 &lt;code&gt;query-replace&lt;/code&gt; 및 친구 에게만 의미가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ca7d4b16a95005d82503a0fef3765241e740851" translate="yes" xml:space="preserve">
          <source>Here are the meaningful keywords:</source>
          <target state="translated">의미있는 키워드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="52c8f55727b89f72bc0b652ec57b7252b56faa57" translate="yes" xml:space="preserve">
          <source>Here are the meanings of the elements of the parser state:</source>
          <target state="translated">다음은 파서 상태 요소의 의미입니다.</target>
        </trans-unit>
        <trans-unit id="d94aaee89255e78138d313a6f1d7ad7890afd344" translate="yes" xml:space="preserve">
          <source>Here are the meanings of various data types as mode line constructs:</source>
          <target state="translated">다음은 모드 라인 구성으로서 다양한 데이터 유형의 의미입니다.</target>
        </trans-unit>
        <trans-unit id="c48dc0afa8b6f3b554e1361bfe5452cee2690533" translate="yes" xml:space="preserve">
          <source>Here are the operations that a magic file name handler gets to handle:</source>
          <target state="translated">다음은 매직 파일 이름 처리기가 처리하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="8dc9de53ca0b1774673c6e514bf1ac2c841e3be3" translate="yes" xml:space="preserve">
          <source>Here are the other sorts of display specifications that you can use in the &lt;code&gt;display&lt;/code&gt; text property.</source>
          <target state="translated">다음은 &lt;code&gt;display&lt;/code&gt; 텍스트 속성 에서 사용할 수있는 다른 종류의 표시 사양입니다 .</target>
        </trans-unit>
        <trans-unit id="fc52f666e265ae0c9f56da53fb64e3f7962cd27e" translate="yes" xml:space="preserve">
          <source>Here are the possibilities for &lt;var&gt;indent-spec&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;indent-spec&lt;/var&gt; 의 가능성은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="bd8f927182baeadf22304b1787b869388c462e0d" translate="yes" xml:space="preserve">
          <source>Here are the possible values of a raw prefix argument:</source>
          <target state="translated">다음은 원시 접두사 인수의 가능한 값입니다.</target>
        </trans-unit>
        <trans-unit id="5ce8af3326f43219d0b796ae363fcc6fb5290d76" translate="yes" xml:space="preserve">
          <source>Here are the results of calling &lt;code&gt;display-prefix&lt;/code&gt; with various raw prefix arguments:</source>
          <target state="translated">다음은 다양한 원시 접두사 인수를 &lt;code&gt;display-prefix&lt;/code&gt; 하여 display-prefix 를 호출 한 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="f8bd0dff50fa0bc6f8b7d41502a3ce0666433fd5" translate="yes" xml:space="preserve">
          <source>Here are the syntax codes corresponding to the various syntax classes:</source>
          <target state="translated">다음은 다양한 구문 클래스에 해당하는 구문 코드입니다.</target>
        </trans-unit>
        <trans-unit id="02419c54e9641319e2657b7a171e5f19a59d1820" translate="yes" xml:space="preserve">
          <source>Here are two commands that users use to do these things. They are documented here to warn you not to use them in Lisp programs, because they set the mark and display messages in the echo area.</source>
          <target state="translated">다음은 사용자가 이러한 작업을 수행하는 데 사용하는 두 가지 명령입니다. 에코 영역에 마크를 설정하고 메시지를 표시하기 때문에 Lisp 프로그램에서 사용하지 않도록 경고하기 위해 여기에 문서화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d456ebb039ab244fe5dae1e00aa97b11fbc4c412" translate="yes" xml:space="preserve">
          <source>Here are two examples of using the &lt;code&gt;disassemble&lt;/code&gt; function. We have added explanatory comments to help you relate the byte-code to the Lisp source; these do not appear in the output of &lt;code&gt;disassemble&lt;/code&gt;.</source>
          <target state="translated">다음은 &lt;code&gt;disassemble&lt;/code&gt; 기능 을 사용하는 두 가지 예입니다 . 바이트 코드를 Lisp 소스에 연결하는 데 도움이되는 설명을 추가했습니다. 이들은 &lt;code&gt;disassemble&lt;/code&gt; 의 출력에 나타나지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9edfa8e5875009b929968ddbe402225f8162f1d6" translate="yes" xml:space="preserve">
          <source>Here are two functions you can use to let the user specify a coding system, with completion. See &lt;a href=&quot;completion#Completion&quot;&gt;Completion&lt;/a&gt;.</source>
          <target state="translated">다음은 사용자가 완성과 함께 코딩 시스템을 지정하는 데 사용할 수있는 두 가지 기능입니다. &lt;a href=&quot;completion#Completion&quot;&gt;완료를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c83740577306ed45ac274b900bd7f3b5ba73e86" translate="yes" xml:space="preserve">
          <source>Here are two tricky examples, slightly different, showing two return points at once. First, two return points with the same tag, &lt;code&gt;hack&lt;/code&gt;:</source>
          <target state="translated">한 번에 두 개의 반환 지점을 보여주는 약간 다른 두 가지 까다로운 예가 있습니다. 먼저, 동일한 태그를 가진 두 개의 리턴 포인트, &lt;code&gt;hack&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="092b131d90381ba124eed988566772c2a6456cf4" translate="yes" xml:space="preserve">
          <source>Here as an example is the local keymap for Lisp mode, a sparse keymap. It defines bindings for</source>
          <target state="translated">다음은 희소 키맵 인 Lisp 모드에 대한 로컬 키맵입니다. 바인딩을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d64a1eb3e58d49ebe21bfb389f9ddc298d5f7e47" translate="yes" xml:space="preserve">
          <source>Here is a &lt;code&gt;condition-case&lt;/code&gt; that catches all kinds of errors, including those from &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">여기입니다 &lt;code&gt;condition-case&lt;/code&gt; 에서 포함하여 모든 종류의 오류, 잡는다 &lt;code&gt;error&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1bbfadfecc0b352b761dbc46fc706a61713e65f5" translate="yes" xml:space="preserve">
          <source>Here is a complete example of defining a menu keymap. It is the definition of the &amp;lsquo;</source>
          <target state="translated">다음은 메뉴 키맵을 정의하는 완전한 예입니다. 그것은 '의 정의입니다</target>
        </trans-unit>
        <trans-unit id="c81928a7986c29a35e3a430e7c9b93d221171bc7" translate="yes" xml:space="preserve">
          <source>Here is a complete list of the other facilities that create local bindings:</source>
          <target state="translated">다음은 로컬 바인딩을 만드는 다른 기능의 전체 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a0b74d5a4d19e17a1b933a541c61a251a7d7dcc2" translate="yes" xml:space="preserve">
          <source>Here is a complicated regexp which was formerly used by Emacs to recognize the end of a sentence together with any whitespace that follows. (Nowadays Emacs uses a similar but more complex default regexp constructed by the function &lt;code&gt;sentence-end&lt;/code&gt;. See &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;.)</source>
          <target state="translated">다음은 이전에 Emacs에서 뒤에 오는 공백과 함께 문장의 끝을 인식하기 위해 사용했던 복잡한 정규식입니다. (요즘 Emacs는 &lt;code&gt;sentence-end&lt;/code&gt; &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;-end&lt;/a&gt; 함수에 의해 생성 된 유사하지만 더 복잡한 기본 정규식을 사용합니다 . 표준 정규식을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="68a62b3887d5a1953d69b473c527423dff9a1f02" translate="yes" xml:space="preserve">
          <source>Here is a description of an imaginary function &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">다음은 가상 함수 &lt;code&gt;foo&lt;/code&gt; 에 대한 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="2f46c1b7c1d2de04e6d5b9719e04342c93a0f898" translate="yes" xml:space="preserve">
          <source>Here is a description of the imaginary &lt;code&gt;electric-future-map&lt;/code&gt; variable.</source>
          <target state="translated">다음은 가상의 &lt;code&gt;electric-future-map&lt;/code&gt; 변수에 대한 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="916f8753aed4924ef34d156c6bba72ba53312983" translate="yes" xml:space="preserve">
          <source>Here is a diagram that shows the variable &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; pointing to the second entry in the kill ring &lt;code&gt;(&quot;some text&quot; &quot;a
different piece of text&quot; &quot;yet older text&quot;)&lt;/code&gt;.</source>
          <target state="translated">다음은 &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; 의 두 번째 항목을 가리키는 변수 kill-ring-yank-pointer 를 보여주는 다이어그램입니다 &lt;code&gt;(&quot;some text&quot; &quot;a different piece of text&quot; &quot;yet older text&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33bd9b0ba1a7304928238acd8f4c4598a6c0eec8" translate="yes" xml:space="preserve">
          <source>Here is a graphical depiction of the shared structure of the two lists in the variables &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;, showing why replacing &lt;code&gt;b&lt;/code&gt; changes them both:</source>
          <target state="translated">다음은 변수 &lt;code&gt;x1&lt;/code&gt; 및 &lt;code&gt;x2&lt;/code&gt; 에있는 두 목록의 공유 구조를 그래픽으로 나타낸 것입니다. &lt;code&gt;b&lt;/code&gt; 를 바꾸면 두 목록이 모두 변경되는 이유를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc1791fc3f5bb15b88e532189ac78686747d1a5f" translate="yes" xml:space="preserve">
          <source>Here is a hypothetical example of a &lt;code&gt;mode-line-format&lt;/code&gt; that might be useful for Shell mode (in reality, Shell mode does not set &lt;code&gt;mode-line-format&lt;/code&gt;):</source>
          <target state="translated">다음은 Shell 모드에 유용 할 수 있는 &lt;code&gt;mode-line-format&lt;/code&gt; 의 가상 예입니다 (실제로 Shell 모드는 &lt;code&gt;mode-line-format&lt;/code&gt; 을 설정하지 않습니다 ).</target>
        </trans-unit>
        <trans-unit id="3d15abff95dc8163f745f384fe891b686aa58739" translate="yes" xml:space="preserve">
          <source>Here is a hypothetical example:</source>
          <target state="translated">다음은 가상의 예입니다.</target>
        </trans-unit>
        <trans-unit id="4d651f57e09cfcd20265a834c68092a2d788a136" translate="yes" xml:space="preserve">
          <source>Here is a list of Debugger mode commands:</source>
          <target state="translated">다음은 디버거 모드 명령 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6fa50994432ab5b07cddcf9ec07572c0474ff42b" translate="yes" xml:space="preserve">
          <source>Here is a list of additional specifications that may appear only after &lt;code&gt;&amp;amp;define&lt;/code&gt;. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">다음은 &lt;code&gt;&amp;amp;define&lt;/code&gt; 이후에만 나타날 수있는 추가 사양 목록입니다 . &lt;code&gt;defun&lt;/code&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fb270bb583b1d781a38c0fbd9e1a306fd83758a" translate="yes" xml:space="preserve">
          <source>Here is a list of commands for navigating and viewing backtraces:</source>
          <target state="translated">다음은 역 추적을 탐색하고보기위한 명령 목록입니다.</target>
        </trans-unit>
        <trans-unit id="ae115ab933bf031ad672f92db2d7a03acbbd55b0" translate="yes" xml:space="preserve">
          <source>Here is a list of the characters that are special in a regular expression.</source>
          <target state="translated">다음은 정규식에서 특수한 문자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="97a9610dc317adee664c6c0f5be148db4e5ba6d9" translate="yes" xml:space="preserve">
          <source>Here is a list of the more important error symbols in standard Emacs, grouped by concept. The list includes each symbol&amp;rsquo;s message and a cross reference to a description of how the error can occur.</source>
          <target state="translated">다음은 개념별로 그룹화 된 표준 Emacs의 더 중요한 오류 기호 목록입니다. 목록에는 각 기호의 메시지와 오류 발생 방법에 대한 설명에 대한 상호 참조가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="647a3a50d44a7c44404a8e6f0f3f19a3267316b3" translate="yes" xml:space="preserve">
          <source>Here is a list of the special sequences and what they mean:</source>
          <target state="translated">다음은 특수 시퀀스 목록과 그 의미입니다.</target>
        </trans-unit>
        <trans-unit id="fbd35d90dd59e4f40b6348053f9b417b84fc179e" translate="yes" xml:space="preserve">
          <source>Here is a list of the standard fringe bitmaps defined in Emacs, and how they are currently used in Emacs (via &lt;code&gt;fringe-indicator-alist&lt;/code&gt; and &lt;code&gt;fringe-cursor-alist&lt;/code&gt;):</source>
          <target state="translated">다음은 Emacs에 정의 된 표준 프린지 비트 맵 목록과 Emacs에서 현재 사용되는 방식입니다 ( &lt;code&gt;fringe-indicator-alist&lt;/code&gt; 및 &lt;code&gt;fringe-cursor-alist&lt;/code&gt; 를 통해 ) :</target>
        </trans-unit>
        <trans-unit id="43d1f4e24171d3ee7eabed794219acc79d758f40" translate="yes" xml:space="preserve">
          <source>Here is a list, in alphabetical order, of all of the special forms in Emacs Lisp with a reference to where each is described.</source>
          <target state="translated">다음은 Emacs Lisp의 모든 특수 형식을 알파벳순으로 나열한 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3656710e08488c24fab0f132131291fc3a3fba64" translate="yes" xml:space="preserve">
          <source>Here is a macro definition that creates this expansion:</source>
          <target state="translated">이 확장을 만드는 매크로 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f835c8a36c0132345eb0adb7c252b2a201016e44" translate="yes" xml:space="preserve">
          <source>Here is a more complex illustration, showing the three-element list, &lt;code&gt;((pine needles) oak maple)&lt;/code&gt;, the first element of which is a two-element list:</source>
          <target state="translated">다음은 3 개 요소 목록 인 &lt;code&gt;((pine needles) oak maple)&lt;/code&gt; 보여주는보다 복잡한 그림입니다 . 첫 번째 요소는 2 개 요소 목록입니다.</target>
        </trans-unit>
        <trans-unit id="7e2581c576f1c1477124a42e19f67c781eba0061" translate="yes" xml:space="preserve">
          <source>Here is a more complicated example that combines several aforementioned features:</source>
          <target state="translated">다음은 앞서 언급 한 여러 기능을 결합한 더 복잡한 예입니다.</target>
        </trans-unit>
        <trans-unit id="e8e9ff760511437efff764dc24f55ee6e0392aea" translate="yes" xml:space="preserve">
          <source>Here is a more realistic example of using &lt;code&gt;and&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;and&lt;/code&gt; 사용에 대한보다 현실적인 예입니다 .</target>
        </trans-unit>
        <trans-unit id="dea64f52060af0b6a6fb878a92467f21c110c033" translate="yes" xml:space="preserve">
          <source>Here is a pseudo-Lisp summary of how Emacs searches the active keymaps:</source>
          <target state="translated">다음은 Emacs가 활성 키맵을 검색하는 방법에 대한 의사 Lisp 요약입니다.</target>
        </trans-unit>
        <trans-unit id="3773ec9da4023cf8fa5fa83972f01da702ab4cbd" translate="yes" xml:space="preserve">
          <source>Here is a simple example of correct use of &lt;code&gt;save-restriction&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;save-restriction&lt;/code&gt; 을 올바르게 사용하는 간단한 예입니다 .</target>
        </trans-unit>
        <trans-unit id="3c52ae7a844b360ae053120b9b3deb9f08a17c19" translate="yes" xml:space="preserve">
          <source>Here is a simple example using functions of the ewoc package to implement a &lt;em&gt;color components&lt;/em&gt; display, an area in a buffer that represents a vector of three integers (itself representing a 24-bit RGB value) in various ways.</source>
          <target state="translated">다음은 ewoc 패키지의 함수를 사용하여 다양한 방식으로 3 개의 정수 (자체가 24 비트 RGB 값을 나타내는) 벡터를 나타내는 버퍼의 영역 인 &lt;em&gt;색상 구성 요소&lt;/em&gt; 디스플레이 를 구현하는 간단한 예제 입니다.</target>
        </trans-unit>
        <trans-unit id="da58a4e18eecb366990aa6865ef0649ffa163de7" translate="yes" xml:space="preserve">
          <source>Here is a simplified version of the default value of &lt;code&gt;mode-line-format&lt;/code&gt;. The real default value also specifies addition of text properties.</source>
          <target state="translated">다음은 &lt;code&gt;mode-line-format&lt;/code&gt; 기본값의 단순화 된 버전입니다 . 실제 기본값은 텍스트 속성 추가도 지정합니다.</target>
        </trans-unit>
        <trans-unit id="318fd25157a7a54cc54514dad19143f1b5cb6a17" translate="yes" xml:space="preserve">
          <source>Here is a simplified version of the standard definition of this function:</source>
          <target state="translated">다음은이 함수의 표준 정의를 단순화 한 버전입니다.</target>
        </trans-unit>
        <trans-unit id="fe46c407075c04d2c2bf25778bb7932beee81b33" translate="yes" xml:space="preserve">
          <source>Here is a table of constructors and how to use them to write composite types:</source>
          <target state="translated">다음은 생성자 표와이를 사용하여 복합 유형을 작성하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="59e9a4e221140c59f1ed4abe816ce09f90028590" translate="yes" xml:space="preserve">
          <source>Here is a table of predefined type predicates, in alphabetical order, with references to further information.</source>
          <target state="translated">다음은 추가 정보에 대한 참조와 함께 사전 정의 된 유형 술어의 표입니다.</target>
        </trans-unit>
        <trans-unit id="469b56ff0b9c3104db637c701bbdd90f313fefeb" translate="yes" xml:space="preserve">
          <source>Here is a table of several functions that do things related to function calling and function definitions. They are documented elsewhere, but we provide cross references here.</source>
          <target state="translated">다음은 함수 호출 및 함수 정의와 관련된 작업을 수행하는 여러 함수의 표입니다. 다른 곳에서 문서화되어 있지만 여기서는 상호 참조를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ffc909362735d9e0bad79baab5dbcaa76ac01b82" translate="yes" xml:space="preserve">
          <source>Here is a table of syntax classes, the characters that designate them, their meanings, and examples of their use.</source>
          <target state="translated">다음은 구문 클래스,이를 지정하는 문자, 의미 및 사용 예에 ​​대한 표입니다.</target>
        </trans-unit>
        <trans-unit id="43a31c971557501d2a192b352b875b95c80368e7" translate="yes" xml:space="preserve">
          <source>Here is a table of text property names that have special built-in meanings. The following sections list a few additional special property names that control filling and property inheritance. All other names have no standard meaning, and you can use them as you like.</source>
          <target state="translated">다음은 특별한 기본 제공 의미가있는 텍스트 속성 이름 표입니다. 다음 섹션에서는 채우기 및 속성 상속을 제어하는 ​​몇 가지 추가 특수 속성 이름을 나열합니다. 다른 모든 이름에는 표준적인 의미가 없으며 원하는대로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b273c10d4f3c7f341e9ff0b1f358e1304545b3d1" translate="yes" xml:space="preserve">
          <source>Here is a table of the keywords that are currently meaningful in &lt;var&gt;sound&lt;/var&gt;, and their meanings:</source>
          <target state="translated">다음은 현재 &lt;var&gt;sound&lt;/var&gt; 에서 의미있는 키워드 와 그 의미에 대한 표입니다 .</target>
        </trans-unit>
        <trans-unit id="15f3f94bfa2a25b49562ef01c515038c6b6e0c1e" translate="yes" xml:space="preserve">
          <source>Here is a table of the keywords you can use in keyword-value pairs in a composite type:</source>
          <target state="translated">다음은 복합 유형의 키워드-값 쌍에서 사용할 수있는 키워드 표입니다.</target>
        </trans-unit>
        <trans-unit id="b71c5f04bb031787dd30f5c83601bbbebda25ddb" translate="yes" xml:space="preserve">
          <source>Here is a table of the possibilities for &lt;var&gt;specification&lt;/var&gt; and how each directs processing of arguments.</source>
          <target state="translated">다음은 &lt;var&gt;specification&lt;/var&gt; 에 대한 가능성 과 각각이 인수 처리를 지시하는 방법에 대한 표입니다 .</target>
        </trans-unit>
        <trans-unit id="95831131b384a2b21e4c0b8c5022c442f687a653" translate="yes" xml:space="preserve">
          <source>Here is a table of the possible flags for a character &lt;var&gt;c&lt;/var&gt;, and what they mean:</source>
          <target state="translated">다음은 문자 &lt;var&gt;c&lt;/var&gt; 에 대해 가능한 플래그 와 그 의미에 대한 표입니다 .</target>
        </trans-unit>
        <trans-unit id="2c43a6789fdaf3f9f0a10d31de842cab32220ac2" translate="yes" xml:space="preserve">
          <source>Here is a table of the properties that are supported:</source>
          <target state="translated">다음은 지원되는 속성 표입니다.</target>
        </trans-unit>
        <trans-unit id="6a4844f0bdbbb2087add8ab2d2ddeae5af01c6f5" translate="yes" xml:space="preserve">
          <source>Here is a table of valid format specifications:</source>
          <target state="translated">다음은 유효한 형식 사양의 표입니다.</target>
        </trans-unit>
        <trans-unit id="162f01c8064dc8140a9185449b539a67fd6a7185" translate="yes" xml:space="preserve">
          <source>Here is a way of using this function to get the same effect as &lt;code&gt;save-window-excursion&lt;/code&gt;:</source>
          <target state="translated">이 함수를 사용하여 &lt;code&gt;save-window-excursion&lt;/code&gt; 과 동일한 효과를 얻는 방법은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="744d7c83201116cf26504fabdf581d91728c15f5" translate="yes" xml:space="preserve">
          <source>Here is a way to remove the first element from a list in the variable &lt;code&gt;x&lt;/code&gt;, then return the value of that former element:</source>
          <target state="translated">다음은 변수 &lt;code&gt;x&lt;/code&gt; 의 목록에서 첫 번째 요소를 제거한 다음 이전 요소의 값을 반환하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="8314306c5662ec954e95355d957dc09e43065ff2" translate="yes" xml:space="preserve">
          <source>Here is a working example that does nothing useful:</source>
          <target state="translated">다음은 유용하지 않은 작업 예제입니다.</target>
        </trans-unit>
        <trans-unit id="99ac11664a626a3bf23df90364701afffc78f1c0" translate="yes" xml:space="preserve">
          <source>Here is an &lt;code&gt;rx&lt;/code&gt; regexp&lt;a href=&quot;#FOOT19&quot; name=&quot;DOCF19&quot;&gt;&lt;sup&gt;19&lt;/sup&gt;&lt;/a&gt; that matches a block comment in the C programming language:</source>
          <target state="translated">다음은 C 프로그래밍 언어의 블록 주석과 일치 하는 &lt;code&gt;rx&lt;/code&gt; regexp &lt;a href=&quot;#FOOT19&quot; name=&quot;DOCF19&quot;&gt;&lt;sup&gt;19&lt;/sup&gt;&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bd4912b0008836ebe4c4d6a5f214785bc64807af" translate="yes" xml:space="preserve">
          <source>Here is an actual example derived from an FTP package. It creates a process (see &lt;a href=&quot;processes#Processes&quot;&gt;Processes&lt;/a&gt;) to try to establish a connection to a remote machine. As the function &lt;code&gt;ftp-login&lt;/code&gt; is highly susceptible to numerous problems that the writer of the function cannot anticipate, it is protected with a form that guarantees deletion of the process in the event of failure. Otherwise, Emacs might fill up with useless subprocesses.</source>
          <target state="translated">다음은 FTP 패키지에서 파생 된 실제 예제입니다. 원격 시스템에 대한 연결 설정을 시도 하는 프로세스 ( &lt;a href=&quot;processes#Processes&quot;&gt;프로세스&lt;/a&gt; 참조 )를 생성합니다 . &lt;code&gt;ftp-login&lt;/code&gt; 함수는 함수 작성자가 예상 할 수없는 수많은 문제에 매우 취약하기 때문에 실패시 프로세스 삭제를 보장하는 형식으로 보호됩니다. 그렇지 않으면 Emacs는 쓸모없는 하위 프로세스로 채워질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c6c545bff6edc8de86f5029834d4a83dfd207f8" translate="yes" xml:space="preserve">
          <source>Here is an alternative form of box diagram, showing the same relationship:</source>
          <target state="translated">다음은 동일한 관계를 보여주는 다른 형태의 상자 다이어그램입니다.</target>
        </trans-unit>
        <trans-unit id="c31e8fe1e11610a32d5d5ba11267b69aa3fd55fd" translate="yes" xml:space="preserve">
          <source>Here is an example in which we supply the string &lt;code&gt;&quot;(testing)&quot;&lt;/code&gt; as initial input:</source>
          <target state="translated">다음은 초기 입력으로 문자열 &lt;code&gt;&quot;(testing)&quot;&lt;/code&gt; 을 제공하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="b86bce27a19e9f4648331aac6e64bbf62c755859" translate="yes" xml:space="preserve">
          <source>Here is an example of a buffer used as an output stream. Point is initially located as shown immediately before the &amp;lsquo;</source>
          <target state="translated">다음은 출력 스트림으로 사용되는 버퍼의 예입니다. 포인트는 처음에 '</target>
        </trans-unit>
        <trans-unit id="53438c03b4a323d58857a792c0542b1dd07ab7b0" translate="yes" xml:space="preserve">
          <source>Here is an example of an alist. The key &lt;code&gt;pine&lt;/code&gt; is associated with the value &lt;code&gt;cones&lt;/code&gt;; the key &lt;code&gt;oak&lt;/code&gt; is associated with &lt;code&gt;acorns&lt;/code&gt;; and the key &lt;code&gt;maple&lt;/code&gt; is associated with &lt;code&gt;seeds&lt;/code&gt;.</source>
          <target state="translated">다음은 alist의 예입니다. 키 &lt;code&gt;pine&lt;/code&gt; 는 값 &lt;code&gt;cones&lt;/code&gt; 과 연관됩니다 . 핵심 &lt;code&gt;oak&lt;/code&gt; 는 &lt;code&gt;acorns&lt;/code&gt; 와 관련이 있습니다 . 주요 &lt;code&gt;maple&lt;/code&gt; 는 &lt;code&gt;seeds&lt;/code&gt; 과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="70ef28e8dd5308942ad08bb3d40d77f00ac988aa" translate="yes" xml:space="preserve">
          <source>Here is an example of an indentation function:</source>
          <target state="translated">Here is an example of an indentation function:</target>
        </trans-unit>
        <trans-unit id="779f7067a330e8986505e09ac582b68d864e98fe" translate="yes" xml:space="preserve">
          <source>Here is an example of calling this function explicitly.</source>
          <target state="translated">Here is an example of calling this function explicitly.</target>
        </trans-unit>
        <trans-unit id="5fcdc8a458b478674add3a28b36d76dfce247f8e" translate="yes" xml:space="preserve">
          <source>Here is an example of code that creates a circular structure:</source>
          <target state="translated">Here is an example of code that creates a circular structure:</target>
        </trans-unit>
        <trans-unit id="8e674610220ca661dcfb5249f926dce24baae49b" translate="yes" xml:space="preserve">
          <source>Here is an example of how to prepend several pattern pairs to &lt;code&gt;auto-mode-alist&lt;/code&gt;. (You might use this sort of expression in your init file.)</source>
          <target state="translated">Here is an example of how to prepend several pattern pairs to &lt;code&gt;auto-mode-alist&lt;/code&gt; . (You might use this sort of expression in your init file.)</target>
        </trans-unit>
        <trans-unit id="e56919ec39808d10990921a81c1dc9d83d00164f" translate="yes" xml:space="preserve">
          <source>Here is an example of how to scan the buffer by chunks of text within which all properties are constant:</source>
          <target state="translated">Here is an example of how to scan the buffer by chunks of text within which all properties are constant:</target>
        </trans-unit>
        <trans-unit id="18942237e1d3391835ef9c18950661211b133070" translate="yes" xml:space="preserve">
          <source>Here is an example of how you could use these hooks:</source>
          <target state="translated">Here is an example of how you could use these hooks:</target>
        </trans-unit>
        <trans-unit id="0198ddb5a6b6ba6514d1e2ed0aa15f5788ab242f" translate="yes" xml:space="preserve">
          <source>Here is an example of reading from a stream that is a buffer, showing where point is located before and after:</source>
          <target state="translated">Here is an example of reading from a stream that is a buffer, showing where point is located before and after:</target>
        </trans-unit>
        <trans-unit id="f568b2f16ed58e552e6a40ea4f5c9fc59d1a63a1" translate="yes" xml:space="preserve">
          <source>Here is an example of reading from a stream that is a marker, initially positioned at the beginning of the buffer shown. The value read is the symbol &lt;code&gt;This&lt;/code&gt;.</source>
          <target state="translated">Here is an example of reading from a stream that is a marker, initially positioned at the beginning of the buffer shown. The value read is the symbol &lt;code&gt;This&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0f40e737fc8729eddfa8ceefca55d842b78581e" translate="yes" xml:space="preserve">
          <source>Here is an example of replacing the &lt;small&gt;CDR&lt;/small&gt; of a list with a different list. All but the first element of the list are removed in favor of a different sequence of elements. The first element is unchanged, because it resides in the &lt;small&gt;CAR&lt;/small&gt; of the list, and is not reached via the &lt;small&gt;CDR&lt;/small&gt;.</source>
          <target state="translated">Here is an example of replacing the &lt;small&gt;CDR&lt;/small&gt; of a list with a different list. All but the first element of the list are removed in favor of a different sequence of elements. The first element is unchanged, because it resides in the &lt;small&gt;CAR&lt;/small&gt; of the list, and is not reached via the &lt;small&gt;CDR&lt;/small&gt;.</target>
        </trans-unit>
        <trans-unit id="091103fe621d16b03529fe9dd9c2d79361aee85d" translate="yes" xml:space="preserve">
          <source>Here is an example of the use of &lt;code&gt;call-process&lt;/code&gt;, as used to be found in the definition of the &lt;code&gt;insert-directory&lt;/code&gt; function:</source>
          <target state="translated">Here is an example of the use of &lt;code&gt;call-process&lt;/code&gt; , as used to be found in the definition of the &lt;code&gt;insert-directory&lt;/code&gt; function:</target>
        </trans-unit>
        <trans-unit id="1499f217e74e57e46dfbccb31f593542ac49e209" translate="yes" xml:space="preserve">
          <source>Here is an example of the use of a filter function:</source>
          <target state="translated">Here is an example of the use of a filter function:</target>
        </trans-unit>
        <trans-unit id="dab019c7f022f57bcd229f98491fc22c61bc3e48" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;append&lt;/code&gt;:</source>
          <target state="translated">Here is an example of using &lt;code&gt;append&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8a238289db2dfcaa0496780041a9df54809ae2f8" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;called-interactively-p&lt;/code&gt;:</source>
          <target state="translated">Here is an example of using &lt;code&gt;called-interactively-p&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a81f1a4896a4aae90f18dc82a957a568796e09b4" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;condition-case&lt;/code&gt; to handle the error that results from dividing by zero. The handler displays the error message (but without a beep), then returns a very large number.</source>
          <target state="translated">Here is an example of using &lt;code&gt;condition-case&lt;/code&gt; to handle the error that results from dividing by zero. The handler displays the error message (but without a beep), then returns a very large number.</target>
        </trans-unit>
        <trans-unit id="e26dc47e83dc453396d344fd29e85f7ddd2347a9" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;define-minor-mode&lt;/code&gt;:</source>
          <target state="translated">Here is an example of using &lt;code&gt;define-minor-mode&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="39ef4075ee61f191dbbb2065e1ed751957357262" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;easy-menu-define&lt;/code&gt; to define a menu similar to the one defined in the example in &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;:</source>
          <target state="translated">Here is an example of using &lt;code&gt;easy-menu-define&lt;/code&gt; to define a menu similar to the one defined in the example in &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="e4ebaaa49a428e162911447bfa5549bef4a7227b" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;image-load-path-for-library&lt;/code&gt;:</source>
          <target state="translated">Here is an example of using &lt;code&gt;image-load-path-for-library&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b519ff35d8489f0c46cc90f5772917f1c398a581" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;pcase&lt;/code&gt; to implement a simple interpreter for a little expression language (note that this requires lexical binding for the lambda expression in the &lt;code&gt;fn&lt;/code&gt; clause to properly capture &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt; (see &lt;a href=&quot;lexical-binding#Lexical-Binding&quot;&gt;Lexical Binding&lt;/a&gt;):</source>
          <target state="translated">Here is an example of using &lt;code&gt;pcase&lt;/code&gt; to implement a simple interpreter for a little expression language (note that this requires lexical binding for the lambda expression in the &lt;code&gt;fn&lt;/code&gt; clause to properly capture &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt; (see &lt;a href=&quot;lexical-binding#Lexical-Binding&quot;&gt;Lexical Binding&lt;/a&gt;):</target>
        </trans-unit>
        <trans-unit id="11e83b56365b8fa74ba19c8c025aeb08fcfc3b0b" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;read-file-name&lt;/code&gt;:</source>
          <target state="translated">Here is an example of using &lt;code&gt;read-file-name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0153d60da811e6ff65004567fed4cc2802a03cca" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;set-process-query-on-exit-flag&lt;/code&gt; on a shell process to avoid querying:</source>
          <target state="translated">Here is an example of using &lt;code&gt;set-process-query-on-exit-flag&lt;/code&gt; on a shell process to avoid querying:</target>
        </trans-unit>
        <trans-unit id="4e30643770804e938cbaafb3043cbe5b27f906a9" translate="yes" xml:space="preserve">
          <source>Here is an example of using the match data, with a comment showing the positions within the text:</source>
          <target state="translated">Here is an example of using the match data, with a comment showing the positions within the text:</target>
        </trans-unit>
        <trans-unit id="06e6e206b2610ebf74cb71d81076218801ba782a" translate="yes" xml:space="preserve">
          <source>Here is an example of using the two functions, &lt;code&gt;documentation&lt;/code&gt; and &lt;code&gt;documentation-property&lt;/code&gt;, to display the documentation strings for several symbols in a</source>
          <target state="translated">Here is an example of using the two functions, &lt;code&gt;documentation&lt;/code&gt; and &lt;code&gt;documentation-property&lt;/code&gt; , to display the documentation strings for several symbols in a</target>
        </trans-unit>
        <trans-unit id="7333a24f61245f75d1cf3e767e59662e3864cdf6" translate="yes" xml:space="preserve">
          <source>Here is an example of using this function:</source>
          <target state="translated">Here is an example of using this function:</target>
        </trans-unit>
        <trans-unit id="ed0d0e4770b0d93c3cfff914f5ac1db3fc8b8d0c" translate="yes" xml:space="preserve">
          <source>Here is an example of what the evaluation list window looks like after several expressions have been added to it:</source>
          <target state="translated">Here is an example of what the evaluation list window looks like after several expressions have been added to it:</target>
        </trans-unit>
        <trans-unit id="be5286fdd0ae9f92686e8e9bc91e4ffc06377571" translate="yes" xml:space="preserve">
          <source>Here is an example showing a keymap before and after substitution:</source>
          <target state="translated">Here is an example showing a keymap before and after substitution:</target>
        </trans-unit>
        <trans-unit id="59122977b2355be69df328d005699ccb9ff2b482" translate="yes" xml:space="preserve">
          <source>Here is an example showing how to make a keymap that inherits from &lt;code&gt;text-mode-map&lt;/code&gt;:</source>
          <target state="translated">Here is an example showing how to make a keymap that inherits from &lt;code&gt;text-mode-map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b6e6f825d9c519d74c186cb009651964da31b06e" translate="yes" xml:space="preserve">
          <source>Here is an example that just inserts some text into</source>
          <target state="translated">Here is an example that just inserts some text into</target>
        </trans-unit>
        <trans-unit id="ec46a5dde5ea0a07c86bfbb291f74208f141dcaf" translate="yes" xml:space="preserve">
          <source>Here is an example which illustrates this point. A string serves as a replacing display specification, which replaces the text that has the property with the specified string (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;). Consider the following function:</source>
          <target state="translated">Here is an example which illustrates this point. A string serves as a replacing display specification, which replaces the text that has the property with the specified string (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;). Consider the following function:</target>
        </trans-unit>
        <trans-unit id="5e301ef8b882cbdd4fa7fd0759418b909b85d813" translate="yes" xml:space="preserve">
          <source>Here is an example which uses the predicates &lt;code&gt;listp&lt;/code&gt; to check for a list and &lt;code&gt;symbolp&lt;/code&gt; to check for a symbol.</source>
          <target state="translated">Here is an example which uses the predicates &lt;code&gt;listp&lt;/code&gt; to check for a list and &lt;code&gt;symbolp&lt;/code&gt; to check for a symbol.</target>
        </trans-unit>
        <trans-unit id="5d24ca8395423089b6025dfe97286774905923b8" translate="yes" xml:space="preserve">
          <source>Here is an example, using the function &lt;code&gt;test&lt;/code&gt; shown in the example for &lt;code&gt;try-completion&lt;/code&gt;:</source>
          <target state="translated">Here is an example, using the function &lt;code&gt;test&lt;/code&gt; shown in the example for &lt;code&gt;try-completion&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="410861a827009bfe04137708043dffcd0ea11e0c" translate="yes" xml:space="preserve">
          <source>Here is an example. The first condition returns the integer 1, which is not &lt;code&gt;nil&lt;/code&gt;. Similarly, the second condition returns the integer 2, which is not &lt;code&gt;nil&lt;/code&gt;. The third condition is &lt;code&gt;nil&lt;/code&gt;, so the remaining condition is never evaluated.</source>
          <target state="translated">Here is an example. The first condition returns the integer 1, which is not &lt;code&gt;nil&lt;/code&gt; . Similarly, the second condition returns the integer 2, which is not &lt;code&gt;nil&lt;/code&gt; . The third condition is &lt;code&gt;nil&lt;/code&gt; , so the remaining condition is never evaluated.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d616e6f33b5793e4424f01717c571300ee5813bb" translate="yes" xml:space="preserve">
          <source>Here is another diagram of the same list, &lt;code&gt;(rose violet
buttercup)&lt;/code&gt;, sketched in a different manner:</source>
          <target state="translated">Here is another diagram of the same list, &lt;code&gt;(rose violet buttercup)&lt;/code&gt; , sketched in a different manner:</target>
        </trans-unit>
        <trans-unit id="d166e1a3cc1b3c9792f17af4d7c78865f34a0bc5" translate="yes" xml:space="preserve">
          <source>Here is another example function, with more complicated arguments. This comes from the code in</source>
          <target state="translated">Here is another example function, with more complicated arguments. This comes from the code in</target>
        </trans-unit>
        <trans-unit id="f84493d6a5cb2718ac0378fb3f0268d00c795bf3" translate="yes" xml:space="preserve">
          <source>Here is another example of creating, examining, and updating a bool-vector:</source>
          <target state="translated">Here is another example of creating, examining, and updating a bool-vector:</target>
        </trans-unit>
        <trans-unit id="0ac5fdde4723107740b0a61efbb91b44f740be70" translate="yes" xml:space="preserve">
          <source>Here is another example that contrasts direct and indirect calls to &lt;code&gt;called-interactively-p&lt;/code&gt;.</source>
          <target state="translated">Here is another example that contrasts direct and indirect calls to &lt;code&gt;called-interactively-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcf0da0cdbb1a62fa4a7457f558ad951fb2eb882" translate="yes" xml:space="preserve">
          <source>Here is another example that shows how to reformulate a simple matching task from its traditional implementation (function &lt;code&gt;grok/traditional&lt;/code&gt;) to one using &lt;code&gt;pcase&lt;/code&gt; (function &lt;code&gt;grok/pcase&lt;/code&gt;). The docstring for both these functions is: &amp;ldquo;If OBJ is a string of the form &quot;key:NUMBER&quot;, return NUMBER (a string). Otherwise, return the list (&quot;149&quot; default).&amp;rdquo; First, the traditional implementation (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;):</source>
          <target state="translated">Here is another example that shows how to reformulate a simple matching task from its traditional implementation (function &lt;code&gt;grok/traditional&lt;/code&gt; ) to one using &lt;code&gt;pcase&lt;/code&gt; (function &lt;code&gt;grok/pcase&lt;/code&gt; ). The docstring for both these functions is: &amp;ldquo;If OBJ is a string of the form &quot;key:NUMBER&quot;, return NUMBER (a string). Otherwise, return the list (&quot;149&quot; default).&amp;rdquo; First, the traditional implementation (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;):</target>
        </trans-unit>
        <trans-unit id="aa3ca317e0fe521a2857d002a7c735add2ab267d" translate="yes" xml:space="preserve">
          <source>Here is another example, in which the keys and values are not symbols:</source>
          <target state="translated">Here is another example, in which the keys and values are not symbols:</target>
        </trans-unit>
        <trans-unit id="94f76f0f147e0ae1a79f92ffdad3303970e71a42" translate="yes" xml:space="preserve">
          <source>Here is another example, which illustrates setting a dynamically bound variable using &lt;code&gt;setq&lt;/code&gt;:</source>
          <target state="translated">Here is another example, which illustrates setting a dynamically bound variable using &lt;code&gt;setq&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3c6ce8daf11cbd2ce09eb8625e1b4ab36c91b7bb" translate="yes" xml:space="preserve">
          <source>Here is another example. Point is initially located at the beginning of the line. Searching moves point to between the space and the word &amp;lsquo;</source>
          <target state="translated">Here is another example. Point is initially located at the beginning of the line. Searching moves point to between the space and the word &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c96e0949bd86302f12b469864644efef00c1e00b" translate="yes" xml:space="preserve">
          <source>Here is how lexical binding works. Each binding construct defines a &lt;em&gt;lexical environment&lt;/em&gt;, specifying the variables that are bound within the construct and their local values. When the Lisp evaluator wants the current value of a variable, it looks first in the lexical environment; if the variable is not specified in there, it looks in the symbol&amp;rsquo;s value cell, where the dynamic value is stored.</source>
          <target state="translated">Here is how lexical binding works. Each binding construct defines a &lt;em&gt;lexical environment&lt;/em&gt;, specifying the variables that are bound within the construct and their local values. When the Lisp evaluator wants the current value of a variable, it looks first in the lexical environment; if the variable is not specified in there, it looks in the symbol&amp;rsquo;s value cell, where the dynamic value is stored.</target>
        </trans-unit>
        <trans-unit id="c865effa2ab105ca8b1ced7058910223439a298c" translate="yes" xml:space="preserve">
          <source>Here is how the Lisp mode syntax and abbrev tables are defined:</source>
          <target state="translated">Here is how the Lisp mode syntax and abbrev tables are defined:</target>
        </trans-unit>
        <trans-unit id="c77a29dfcca39f5712e504d404cc60bc93f8ddd6" translate="yes" xml:space="preserve">
          <source>Here is how the actual mode command is defined now:</source>
          <target state="translated">Here is how the actual mode command is defined now:</target>
        </trans-unit>
        <trans-unit id="c3f9cb95a933ebbfa89306ab4cad10a54fed251e" translate="yes" xml:space="preserve">
          <source>Here is how to insert an item called &amp;lsquo;</source>
          <target state="translated">Here is how to insert an item called &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f32f97a28a3df3542cba50e134781a211a8a8b8f" translate="yes" xml:space="preserve">
          <source>Here is how to set up a timer that runs when Emacs is idle for a certain length of time. Aside from how to set them up, idle timers work just like ordinary timers.</source>
          <target state="translated">Here is how to set up a timer that runs when Emacs is idle for a certain length of time. Aside from how to set them up, idle timers work just like ordinary timers.</target>
        </trans-unit>
        <trans-unit id="73b336151b89dfa57fd5a3116bf103c85cacd3d7" translate="yes" xml:space="preserve">
          <source>Here is how we define a new error symbol, &lt;code&gt;new-error&lt;/code&gt;:</source>
          <target state="translated">Here is how we define a new error symbol, &lt;code&gt;new-error&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="278159de2ac0eea6740d85026aa356f593bfec23" translate="yes" xml:space="preserve">
          <source>Here is how we make this menu appear as an item in the parent menu:</source>
          <target state="translated">Here is how we make this menu appear as an item in the parent menu:</target>
        </trans-unit>
        <trans-unit id="8c21fffb9118efefe9955cda89cb3a598c567ffb" translate="yes" xml:space="preserve">
          <source>Here is how you can determine whether a given position &lt;var&gt;position&lt;/var&gt; is off the screen due to horizontal scrolling:</source>
          <target state="translated">Here is how you can determine whether a given position &lt;var&gt;position&lt;/var&gt; is off the screen due to horizontal scrolling:</target>
        </trans-unit>
        <trans-unit id="c74f249585edbbe21b50d14f4f6db617a524b4f4" translate="yes" xml:space="preserve">
          <source>Here is how you could define &lt;code&gt;indirect-function&lt;/code&gt; in Lisp:</source>
          <target state="translated">Here is how you could define &lt;code&gt;indirect-function&lt;/code&gt; in Lisp:</target>
        </trans-unit>
        <trans-unit id="4b58880b182e875e4ffd43024735888dcb0b1141" translate="yes" xml:space="preserve">
          <source>Here is how you could define a hash table test equivalent to the predefined test value &lt;code&gt;equal&lt;/code&gt;. The keys can be any Lisp object, and equal-looking objects are considered the same key.</source>
          <target state="translated">Here is how you could define a hash table test equivalent to the predefined test value &lt;code&gt;equal&lt;/code&gt; . The keys can be any Lisp object, and equal-looking objects are considered the same key.</target>
        </trans-unit>
        <trans-unit id="72d58a73bcb1a0aaaaa75916e4aff066b20cda8e" translate="yes" xml:space="preserve">
          <source>Here is the &lt;code&gt;nreverse&lt;/code&gt; of our favorite example, &lt;code&gt;(a b c)&lt;/code&gt;, presented graphically:</source>
          <target state="translated">Here is the &lt;code&gt;nreverse&lt;/code&gt; of our favorite example, &lt;code&gt;(a b c)&lt;/code&gt; , presented graphically:</target>
        </trans-unit>
        <trans-unit id="52dad43ecdffec7ede8fe242d6e268ade98c1217" translate="yes" xml:space="preserve">
          <source>Here is the full list of value types for all the character properties that Emacs knows about:</source>
          <target state="translated">Here is the full list of value types for all the character properties that Emacs knows about:</target>
        </trans-unit>
        <trans-unit id="165874cadba17d5d3677e2dd1ff17703831bb43e" translate="yes" xml:space="preserve">
          <source>Here is the list &lt;code&gt;(A ())&lt;/code&gt;, or equivalently &lt;code&gt;(A nil)&lt;/code&gt;, depicted with boxes and arrows:</source>
          <target state="translated">Here is the list &lt;code&gt;(A ())&lt;/code&gt; , or equivalently &lt;code&gt;(A nil)&lt;/code&gt; , depicted with boxes and arrows:</target>
        </trans-unit>
        <trans-unit id="63473693fbf5f0b5f414ef4b5e769c68e4b4cc8a" translate="yes" xml:space="preserve">
          <source>Here is the result in box notation:</source>
          <target state="translated">Here is the result in box notation:</target>
        </trans-unit>
        <trans-unit id="b58cd804ad37268f76450c142797d95ddcd3b2e1" translate="yes" xml:space="preserve">
          <source>Here is this result in box notation:</source>
          <target state="translated">Here is this result in box notation:</target>
        </trans-unit>
        <trans-unit id="d8db3f5678d4881c9659299a2c52678ef3c34f78" translate="yes" xml:space="preserve">
          <source>Here is what happens if you call &lt;code&gt;read-event&lt;/code&gt; and then press the right-arrow function key:</source>
          <target state="translated">Here is what happens if you call &lt;code&gt;read-event&lt;/code&gt; and then press the right-arrow function key:</target>
        </trans-unit>
        <trans-unit id="bbc82272ce24b80fbfe653ba2048f726ecc3a213" translate="yes" xml:space="preserve">
          <source>Here is what it does:</source>
          <target state="translated">Here is what it does:</target>
        </trans-unit>
        <trans-unit id="d8a64dd987725c95c697cdc701e2cf346b5d21a1" translate="yes" xml:space="preserve">
          <source>Here is what the elements do:</source>
          <target state="translated">Here is what the elements do:</target>
        </trans-unit>
        <trans-unit id="92381fa1dee4b9ab71de83aa818691da5023b408" translate="yes" xml:space="preserve">
          <source>Here is what the elements in a format definition mean:</source>
          <target state="translated">Here is what the elements in a format definition mean:</target>
        </trans-unit>
        <trans-unit id="7316f9a5d190d55fb62de679758bd848f2561f53" translate="yes" xml:space="preserve">
          <source>Here is what the elements mean:</source>
          <target state="translated">Here is what the elements mean:</target>
        </trans-unit>
        <trans-unit id="44f6b6d7bc6b1056cbce48daac68b7c3fd953483" translate="yes" xml:space="preserve">
          <source>Here is what you would see upon evaluating &lt;code&gt;(suspend-emacs &quot;pwd&quot;)&lt;/code&gt;:</source>
          <target state="translated">Here is what you would see upon evaluating &lt;code&gt;(suspend-emacs &quot;pwd&quot;)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b71b9ff4a43b85addd63fd704cc696b06d2b86ea" translate="yes" xml:space="preserve">
          <source>Here we assume that the environment variable &lt;code&gt;HOME&lt;/code&gt;, which holds the user&amp;rsquo;s home directory, has value &amp;lsquo;</source>
          <target state="translated">Here we assume that the environment variable &lt;code&gt;HOME&lt;/code&gt; , which holds the user&amp;rsquo;s home directory, has value &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="078f0f8281f11549a79c2080907286c26c800bd1" translate="yes" xml:space="preserve">
          <source>Here we describe functions that test for equality between two objects. Other functions test equality of contents between objects of specific types, e.g., strings. For these predicates, see the appropriate chapter describing the data type.</source>
          <target state="translated">Here we describe functions that test for equality between two objects. Other functions test equality of contents between objects of specific types, e.g., strings. For these predicates, see the appropriate chapter describing the data type.</target>
        </trans-unit>
        <trans-unit id="15bcd4993d3497b5f327778b30c758aee49bf596" translate="yes" xml:space="preserve">
          <source>Here we describe in full detail the function &lt;code&gt;debug&lt;/code&gt; that is used to invoke the debugger.</source>
          <target state="translated">Here we describe in full detail the function &lt;code&gt;debug&lt;/code&gt; that is used to invoke the debugger.</target>
        </trans-unit>
        <trans-unit id="446f009f2318dc525b4b61051ba41b2877f17238" translate="yes" xml:space="preserve">
          <source>Here we describe the functions for creating keymaps.</source>
          <target state="translated">Here we describe the functions for creating keymaps.</target>
        </trans-unit>
        <trans-unit id="6dec84dad4da4a5ee7664542c17eeb4ff6f81103" translate="yes" xml:space="preserve">
          <source>Here we list the variables that hold the abbrev tables for the preloaded major modes of Emacs.</source>
          <target state="translated">Here we list the variables that hold the abbrev tables for the preloaded major modes of Emacs.</target>
        </trans-unit>
        <trans-unit id="01f8e72f46daa28c926074e72dff286c0b0dfec0" translate="yes" xml:space="preserve">
          <source>Here we read from the contents of a string:</source>
          <target state="translated">Here we read from the contents of a string:</target>
        </trans-unit>
        <trans-unit id="28af53b18c8716f35bf567ed69cee7a4383d37ed" translate="yes" xml:space="preserve">
          <source>Here we regard &lt;code&gt;red&lt;/code&gt; as the value associated with &lt;code&gt;rose&lt;/code&gt;. One advantage of this kind of alist is that you can store other related information&amp;mdash;even a list of other items&amp;mdash;in the &lt;small&gt;CDR&lt;/small&gt; of the &lt;small&gt;CDR&lt;/small&gt;. One disadvantage is that you cannot use &lt;code&gt;rassq&lt;/code&gt; (see below) to find the element containing a given value. When neither of these considerations is important, the choice is a matter of taste, as long as you are consistent about it for any given alist.</source>
          <target state="translated">Here we regard &lt;code&gt;red&lt;/code&gt; as the value associated with &lt;code&gt;rose&lt;/code&gt; . One advantage of this kind of alist is that you can store other related information&amp;mdash;even a list of other items&amp;mdash;in the &lt;small&gt;CDR&lt;/small&gt; of the &lt;small&gt;CDR&lt;/small&gt;. One disadvantage is that you cannot use &lt;code&gt;rassq&lt;/code&gt; (see below) to find the element containing a given value. When neither of these considerations is important, the choice is a matter of taste, as long as you are consistent about it for any given alist.</target>
        </trans-unit>
        <trans-unit id="dd7973c64daa73f9bd93caa3101082dbba8fc7d2" translate="yes" xml:space="preserve">
          <source>Here we show the use of vectors and strings as arguments to &lt;code&gt;append&lt;/code&gt;:</source>
          <target state="translated">Here we show the use of vectors and strings as arguments to &lt;code&gt;append&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="194444ef1d6702d0caa4d985ff8a0038869cf567" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a complete example that creates and inserts an image with a circle:</source>
          <target state="translated">Here&amp;rsquo;s a complete example that creates and inserts an image with a circle:</target>
        </trans-unit>
        <trans-unit id="e41a119faaee67049f9d292edabb3a05ff9ea822" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a list of a few terminal parameters that have a special meaning:</source>
          <target state="translated">Here&amp;rsquo;s a list of a few terminal parameters that have a special meaning:</target>
        </trans-unit>
        <trans-unit id="8ebe199680feee9aa28292ee6abbd78e4e187f7c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a scenario showing how to use &lt;code&gt;add-to-list&lt;/code&gt;:</source>
          <target state="translated">Here&amp;rsquo;s a scenario showing how to use &lt;code&gt;add-to-list&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d5f18ca01e7c7012d44a2db77f434a51fe310f12" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a scenario showing how to use &lt;code&gt;add-to-ordered-list&lt;/code&gt;:</source>
          <target state="translated">Here&amp;rsquo;s a scenario showing how to use &lt;code&gt;add-to-ordered-list&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c687d4efe39bb50c5bd3d2e5c5a8f4c6d8712516" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a table of the possible elements of a specification list, with their meanings (see &lt;a href=&quot;specification-examples#Specification-Examples&quot;&gt;Specification Examples&lt;/a&gt;, for the referenced examples):</source>
          <target state="translated">Here&amp;rsquo;s a table of the possible elements of a specification list, with their meanings (see &lt;a href=&quot;specification-examples#Specification-Examples&quot;&gt;Specification Examples&lt;/a&gt;, for the referenced examples):</target>
        </trans-unit>
        <trans-unit id="1dfd553b4b856d959b4aa4b7aec56cb9b738cafb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an equivalent definition simplified through use of backquote:</source>
          <target state="translated">Here&amp;rsquo;s an equivalent definition simplified through use of backquote:</target>
        </trans-unit>
        <trans-unit id="03294699440d63c624892ed37549524f6c40bc39" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an equivalent way to write it:</source>
          <target state="translated">Here&amp;rsquo;s an equivalent way to write it:</target>
        </trans-unit>
        <trans-unit id="7d19e01d3afa0c5abe9ee03dedb7c89cfa6e2dd8" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a byte-code function object, in printed representation. It is the definition of the command &lt;code&gt;backward-sexp&lt;/code&gt;.</source>
          <target state="translated">Here&amp;rsquo;s an example of a byte-code function object, in printed representation. It is the definition of the command &lt;code&gt;backward-sexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cae75adf99d8d8fa92a9bfb2fe27353aba95dce" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of defining a new category for characters that have strong right-to-left directionality (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;) and using it in a special category table. To obtain the information about the directionality of characters, the example code uses the &amp;lsquo;</source>
          <target state="translated">Here&amp;rsquo;s an example of defining a new category for characters that have strong right-to-left directionality (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;) and using it in a special category table. To obtain the information about the directionality of characters, the example code uses the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e30905e3f10c47003f204da0e5fce1266ba4d62b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of setting up a menu bar item:</source>
          <target state="translated">Here&amp;rsquo;s an example of setting up a menu bar item:</target>
        </trans-unit>
        <trans-unit id="d2470c6344f893ee78e988bf79737a8e708e2080" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of the data produced by this function on a 2-monitor display:</source>
          <target state="translated">Here&amp;rsquo;s an example of the data produced by this function on a 2-monitor display:</target>
        </trans-unit>
        <trans-unit id="6aa1e7a94e70d3153e4cd2549894eae7faf1eb5b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using &lt;code&gt;completing-read&lt;/code&gt;:</source>
          <target state="translated">Here&amp;rsquo;s an example of using &lt;code&gt;completing-read&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ad175307c534899ae290bc148ed7a2ae41b2205b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using &lt;code&gt;define-inline&lt;/code&gt;:</source>
          <target state="translated">Here&amp;rsquo;s an example of using &lt;code&gt;define-inline&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2a2fb1bf8d9fa38adc8239edf8bef43ad67ad912" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using &lt;code&gt;shell-quote-argument&lt;/code&gt; to construct a shell command:</source>
          <target state="translated">Here&amp;rsquo;s an example of using &lt;code&gt;shell-quote-argument&lt;/code&gt; to construct a shell command:</target>
        </trans-unit>
        <trans-unit id="921b0bd8c88ffd94a6bd112934274daa34d38c49" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using the &lt;code&gt;keyboard-translate-table&lt;/code&gt; to make</source>
          <target state="translated">Here&amp;rsquo;s an example of using the &lt;code&gt;keyboard-translate-table&lt;/code&gt; to make</target>
        </trans-unit>
        <trans-unit id="45081af269ab136cfd20f4ef3f527efc3e8110b7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of what &lt;em&gt;not&lt;/em&gt; to do:</source>
          <target state="translated">Here&amp;rsquo;s an example of what &lt;em&gt;not&lt;/em&gt; to do:</target>
        </trans-unit>
        <trans-unit id="b965366404937ad4f05104afb1af9f02483b582a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that adds a function to a mode hook to turn on Auto Fill mode when in Lisp Interaction mode:</source>
          <target state="translated">Here&amp;rsquo;s an example that adds a function to a mode hook to turn on Auto Fill mode when in Lisp Interaction mode:</target>
        </trans-unit>
        <trans-unit id="36c163ed03ed7f3d63180c8cc7ad38ead8f3f0ce" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that highlights some advantages &lt;code&gt;pcase&lt;/code&gt; has over &lt;code&gt;cl-case&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;Conditionals&lt;/a&gt; in</source>
          <target state="translated">Here&amp;rsquo;s an example that highlights some advantages &lt;code&gt;pcase&lt;/code&gt; has over &lt;code&gt;cl-case&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;Conditionals&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="a9c60551e5cbd1731567ae7dd6c5fc39b0de6789" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that highlights some advantages &lt;code&gt;pcase&lt;/code&gt; has over &lt;code&gt;cl-case&lt;/code&gt; (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;Conditionals&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4345897b100740a6cf51c97f93a6eb09ebfc7ffe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example to illustrate use of this function:</source>
          <target state="translated">Here&amp;rsquo;s an example to illustrate use of this function:</target>
        </trans-unit>
        <trans-unit id="1650f93164a148f60b8bb84a30e5493101892e4d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using boxes to illustrate dotted pair notation. This example shows the pair &lt;code&gt;(rose . violet)&lt;/code&gt;:</source>
          <target state="translated">Here&amp;rsquo;s an example using boxes to illustrate dotted pair notation. This example shows the pair &lt;code&gt;(rose . violet)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3dcb94616c206b262c069981593dfcc791d7727c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example which assumes Font-Lock mode is not enabled:</source>
          <target state="translated">Here&amp;rsquo;s an example which assumes Font-Lock mode is not enabled:</target>
        </trans-unit>
        <trans-unit id="f925021c85579d991c73fc2d9a75bae119de77ab" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to avoid the problem, by examining point and the mark after reading the keyboard input:</source>
          <target state="translated">Here&amp;rsquo;s how to avoid the problem, by examining point and the mark after reading the keyboard input:</target>
        </trans-unit>
        <trans-unit id="fda598e1b620ab50332164a5479782347c875fda" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to do partial application in Emacs Lisp:</source>
          <target state="translated">Here&amp;rsquo;s how to do partial application in Emacs Lisp:</target>
        </trans-unit>
        <trans-unit id="1e0f1fa26dca63562a6e9cb1c9e8f6bd1f3fed79" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to examine the data in an X-style window geometry specification:</source>
          <target state="translated">Here&amp;rsquo;s how to examine the data in an X-style window geometry specification:</target>
        </trans-unit>
        <trans-unit id="3ecfa2e9b8ba9fe6d6aaa14266c9febdc60db3e6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how we could define the built-in function &lt;code&gt;1+&lt;/code&gt;, if it didn&amp;rsquo;t exist, using &lt;code&gt;apply-partially&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt;, another built-in function:</source>
          <target state="translated">Here&amp;rsquo;s how we could define the built-in function &lt;code&gt;1+&lt;/code&gt; , if it didn&amp;rsquo;t exist, using &lt;code&gt;apply-partially&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt; , another built-in function:</target>
        </trans-unit>
        <trans-unit id="2c62d8149cf85b2bfd8ccdd1e986aa2df7982fd5" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the example at the beginning of this subsection rewritten using &lt;code&gt;ignore-errors&lt;/code&gt;:</source>
          <target state="translated">Here&amp;rsquo;s the example at the beginning of this subsection rewritten using &lt;code&gt;ignore-errors&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="625001b287a97f0983de9ef13b2be8d872058fdb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what that produces in</source>
          <target state="translated">Here&amp;rsquo;s what that produces in</target>
        </trans-unit>
        <trans-unit id="e14ff05fa1690931ca98b57a70fa39bd10068642" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;edit&lt;/code&gt; is the symbol produced by a fake function key, it is used by the global map for the &amp;lsquo;</source>
          <target state="translated">Here, &lt;code&gt;edit&lt;/code&gt; is the symbol produced by a fake function key, it is used by the global map for the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="2959d44f3e9ba30ae049fe04f7150eda605be7b8" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;his-tracing-function&lt;/code&gt; is called instead of the original function and receives the original function (additionally to that function&amp;rsquo;s arguments) as argument, so it can call it if and when it needs to. When you&amp;rsquo;re tired of seeing this output, you can revert to the untraced behavior with:</source>
          <target state="translated">Here, &lt;code&gt;his-tracing-function&lt;/code&gt; is called instead of the original function and receives the original function (additionally to that function&amp;rsquo;s arguments) as argument, so it can call it if and when it needs to. When you&amp;rsquo;re tired of seeing this output, you can revert to the untraced behavior with:</target>
        </trans-unit>
        <trans-unit id="b65cde67e2f5b727a21f69be6b3ed1b78a713cfe" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;anchored-matcher&lt;/var&gt;, like &lt;var&gt;matcher&lt;/var&gt;, is either a regular expression or a function. After a match of &lt;var&gt;matcher&lt;/var&gt; is found, point is at the end of the match. Now, Font Lock evaluates the form &lt;var&gt;pre-form&lt;/var&gt;. Then it searches for matches of &lt;var&gt;anchored-matcher&lt;/var&gt; and uses &lt;var&gt;subexp-highlighters&lt;/var&gt; to highlight these. A &lt;var&gt;subexp-highlighter&lt;/var&gt; is as described above. Finally, Font Lock evaluates &lt;var&gt;post-form&lt;/var&gt;.</source>
          <target state="translated">Here, &lt;var&gt;anchored-matcher&lt;/var&gt; , like &lt;var&gt;matcher&lt;/var&gt; , is either a regular expression or a function. After a match of &lt;var&gt;matcher&lt;/var&gt; is found, point is at the end of the match. Now, Font Lock evaluates the form &lt;var&gt;pre-form&lt;/var&gt; . Then it searches for matches of &lt;var&gt;anchored-matcher&lt;/var&gt; and uses &lt;var&gt;subexp-highlighters&lt;/var&gt; to highlight these. A &lt;var&gt;subexp-highlighter&lt;/var&gt; is as described above. Finally, Font Lock evaluates &lt;var&gt;post-form&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="1576a01f0244fcfc5fc4030522d06e88d083cae4" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;find-in&lt;/var&gt; and &lt;var&gt;find-in-any&lt;/var&gt; are pseudo functions that search in one keymap and in an alist of keymaps, respectively. Note that the &lt;code&gt;set-transient-map&lt;/code&gt; function works by setting &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;).</source>
          <target state="translated">Here, &lt;var&gt;find-in&lt;/var&gt; and &lt;var&gt;find-in-any&lt;/var&gt; are pseudo functions that search in one keymap and in an alist of keymaps, respectively. Note that the &lt;code&gt;set-transient-map&lt;/code&gt; function works by setting &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="39352705efc6ada42c53b3d022d40ec648bf917c" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;item-name&lt;/var&gt; is an expression which evaluates to the menu item string. Thus, the string need not be a constant.</source>
          <target state="translated">Here, &lt;var&gt;item-name&lt;/var&gt; is an expression which evaluates to the menu item string. Thus, the string need not be a constant.</target>
        </trans-unit>
        <trans-unit id="5f9ed2116320470859fcdd5b982b49e03881c791" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;pre-form&lt;/var&gt; and &lt;var&gt;post-form&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;. Therefore searching for &amp;lsquo;</source>
          <target state="translated">여기서, &lt;var&gt;pre-form&lt;/var&gt; 과 &lt;var&gt;post-form&lt;/var&gt; 은 &lt;code&gt;nil&lt;/code&gt; 입니다. 따라서 '</target>
        </trans-unit>
        <trans-unit id="c749009a00bb2e2a9af48b6aa791e75a6049b94a" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;score&lt;/var&gt; is an integer measure of how important the symbol seems to be as a match. Each of the remaining elements is a documentation string, or &lt;code&gt;nil&lt;/code&gt;, for &lt;var&gt;symbol&lt;/var&gt; as a function, variable, etc.</source>
          <target state="translated">여기서 &lt;var&gt;score&lt;/var&gt; 는 기호가 일치하는 것처럼 보이는 정도의 정수 척도입니다. 나머지 각 요소는 함수, 변수 등의 &lt;var&gt;symbol&lt;/var&gt; 에 대한 문서 문자열 또는 &lt;code&gt;nil&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="a301b22272d385eb41e4d01dad68cbec73bb295c" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;style&lt;/var&gt; is the name of the completion style (a symbol), which may be used in the &lt;code&gt;completion-styles&lt;/code&gt; variable to refer to this style; &lt;var&gt;try-completion&lt;/var&gt; is the function that does the completion; &lt;var&gt;all-completions&lt;/var&gt; is the function that lists the completions; and &lt;var&gt;doc&lt;/var&gt; is a string describing the completion style.</source>
          <target state="translated">여기서 &lt;var&gt;style&lt;/var&gt; 은 완성 스타일 (기호)의 이름이며, 이 스타일을 참조하기 위해 &lt;code&gt;completion-styles&lt;/code&gt; 변수 에서 사용할 수 있습니다 . &lt;var&gt;try-completion&lt;/var&gt; 은 완료 를 수행하는 기능입니다. &lt;var&gt;all-completions&lt;/var&gt; 는 완료 를 나열하는 기능입니다. 그리고 &lt;var&gt;doc&lt;/var&gt; 완성 스타일을 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e86ab2395af76a007cb1a2de0284943a6f1c7efc" translate="yes" xml:space="preserve">
          <source>Here, although</source>
          <target state="translated">여기 있지만</target>
        </trans-unit>
        <trans-unit id="498e1fa7d5d722fc7bbdbd9b2ee1d0478902b16c" translate="yes" xml:space="preserve">
          <source>Here, if &lt;var&gt;menu-title&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it says that the matches for this element should go in a submenu of the buffer index; &lt;var&gt;menu-title&lt;/var&gt; itself specifies the name for the submenu. If &lt;var&gt;menu-title&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the matches for this element go directly in the top level of the buffer index.</source>
          <target state="translated">여기서 &lt;var&gt;menu-title&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면이 요소에 대한 일치 항목이 버퍼 인덱스의 하위 메뉴에 있어야 함을 나타냅니다. &lt;var&gt;menu-title&lt;/var&gt; 자체는 하위 메뉴의 이름을 지정합니다. 경우 &lt;var&gt;menu-title&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; ,이 요소의 일치 버퍼 인덱스의 최상위에 직접 이동합니다.</target>
        </trans-unit>
        <trans-unit id="f77613f257d815d6ac563a262bfa29d3c6bfa924" translate="yes" xml:space="preserve">
          <source>Here, the purpose is to inform the user that editing the buffer with the aim of saving it in the file may be futile or undesirable. The user who wants to change the buffer text despite this can do so after clearing the read-only flag with</source>
          <target state="translated">여기서 목적은 파일에 저장하려는 목적으로 버퍼를 편집하는 것이 무익하거나 바람직하지 않을 수 있음을 사용자에게 알리는 것입니다. 이것에도 불구하고 버퍼 텍스트를 변경하려는 사용자는 다음을 사용하여 읽기 전용 플래그를 지운 후에 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b74fbd95615088e7e786de83f8c4d2bd52ba63c" translate="yes" xml:space="preserve">
          <source>Here, the variable &lt;code&gt;x&lt;/code&gt; has no global value. When it is lexically bound within a &lt;code&gt;let&lt;/code&gt; form, it can be used in the textual confines of that &lt;code&gt;let&lt;/code&gt; form. But it can &lt;em&gt;not&lt;/em&gt; be used from within a &lt;code&gt;getx&lt;/code&gt; function called from the &lt;code&gt;let&lt;/code&gt; form, since the function definition of &lt;code&gt;getx&lt;/code&gt; occurs outside the &lt;code&gt;let&lt;/code&gt; form itself.</source>
          <target state="translated">여기서 변수 &lt;code&gt;x&lt;/code&gt; 에는 전역 값이 없습니다. 이 어휘 내에서 결합 될 때 &lt;code&gt;let&lt;/code&gt; 형태, 그것은 그의 텍스트 경계에서 사용할 수있는 &lt;code&gt;let&lt;/code&gt; 형태. 그러나 그것은 할 수 &lt;em&gt;없는&lt;/em&gt; 내에서 사용할 수 &lt;code&gt;getx&lt;/code&gt; 의 로부터 호출 된 함수 &lt;code&gt;let&lt;/code&gt; 의 함수 정의하기 때문에, 형태 &lt;code&gt;getx&lt;/code&gt; 이 (가) 외부에서 발생하는 &lt;code&gt;let&lt;/code&gt; 자체를 형성한다.</target>
        </trans-unit>
        <trans-unit id="d62359856af6a1dd77a70afcc341f43d97d22879" translate="yes" xml:space="preserve">
          <source>Here, we bind a local variable to record the current buffer, and then &lt;code&gt;save-current-buffer&lt;/code&gt; arranges to make it current again later. Next, &lt;code&gt;set-buffer&lt;/code&gt; makes the specified buffer current, and &lt;code&gt;insert-buffer-substring&lt;/code&gt; copies the string from the original buffer to the specified (and now current) buffer.</source>
          <target state="translated">여기서는 로컬 변수를 바인딩하여 현재 버퍼를 기록한 다음 &lt;code&gt;save-current-buffer&lt;/code&gt; 가 나중에 다시 현재 버퍼 로 만들도록 정렬합니다. 다음으로 &lt;code&gt;set-buffer&lt;/code&gt; 는 지정된 버퍼를 현재로 만들고 &lt;code&gt;insert-buffer-substring&lt;/code&gt; 은 원래 버퍼의 문자열을 지정된 (현재 현재) 버퍼로 복사합니다.</target>
        </trans-unit>
        <trans-unit id="f418719441cdc28217531e3aa11a5ceffed76b22" translate="yes" xml:space="preserve">
          <source>Here, we list the symbol properties which are used for special purposes in Emacs. In the following table, whenever we say &amp;ldquo;the named function&amp;rdquo;, that means the function whose name is the relevant symbol; similarly for &amp;ldquo;the named variable&amp;rdquo; etc.</source>
          <target state="translated">여기에서는 Emacs에서 특수 목적으로 사용되는 심볼 속성을 나열합니다. 다음 표에서 &quot;명명 된 함수&quot;라고 말할 때마다 이는 이름이 관련 기호 인 함수를 의미합니다. &quot;명명 된 변수&quot;등과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="5dff4be05031090362214882b6beb05668c3ef6c" translate="yes" xml:space="preserve">
          <source>Hewlett-Packard HPUX operating system.</source>
          <target state="translated">Hewlett-Packard HPUX 운영 체제.</target>
        </trans-unit>
        <trans-unit id="52044fc2617df4e7777ebd0eda1460a6cada2876" translate="yes" xml:space="preserve">
          <source>Hiding part of the buffer text (the old way).</source>
          <target state="translated">버퍼 텍스트의 일부를 숨 깁니다 (이전 방식).</target>
        </trans-unit>
        <trans-unit id="a20c39452d5f8ac23e8e4ebbe809794cc855efe4" translate="yes" xml:space="preserve">
          <source>Hiding part of the buffer text.</source>
          <target state="translated">버퍼 텍스트의 일부를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="da9e6337871a585fb43de87ba2662d40c9b7c264" translate="yes" xml:space="preserve">
          <source>High-Level Completion Functions</source>
          <target state="translated">고급 완성 기능</target>
        </trans-unit>
        <trans-unit id="d500a7d2fe9db57d85c473ab68a4782cd14bfc53" translate="yes" xml:space="preserve">
          <source>Higher-level functions for switching to a buffer.</source>
          <target state="translated">버퍼로 전환하기위한 상위 레벨 기능.</target>
        </trans-unit>
        <trans-unit id="87d9a466b82e403bc424a90dc19bd2b45a7832df" translate="yes" xml:space="preserve">
          <source>Highlight all matches for &lt;var&gt;regexp&lt;/var&gt; using &lt;code&gt;font-lock-keyword-face&lt;/code&gt;. For example,</source>
          <target state="translated">&lt;code&gt;font-lock-keyword-face&lt;/code&gt; 를 사용하여 &lt;var&gt;regexp&lt;/var&gt; 과 일치하는 모든 항목을 강조 표시합니다 . 예를 들면</target>
        </trans-unit>
        <trans-unit id="17fd9c1b95a3a0dbac118cae13033f5377a3fb91" translate="yes" xml:space="preserve">
          <source>Hook for automatic face assignment.</source>
          <target state="translated">자동 얼굴 할당을위한 후크.</target>
        </trans-unit>
        <trans-unit id="a2e37946619969b6a5169633d442076a66d5c852" translate="yes" xml:space="preserve">
          <source>Hook run after a frame&amp;rsquo;s font changes.</source>
          <target state="translated">프레임의 글꼴이 변경된 후 후크가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="79eecf90a76c504f312ce3ece16f14a234473873" translate="yes" xml:space="preserve">
          <source>Hook run in each window just before redisplaying it. See &lt;a href=&quot;forcing-redisplay#Forcing-Redisplay&quot;&gt;Forcing Redisplay&lt;/a&gt;.</source>
          <target state="translated">후크를 다시 표시하기 직전에 각 창에서 실행됩니다. &lt;a href=&quot;forcing-redisplay#Forcing-Redisplay&quot;&gt;강제 다시 표시를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c4b657fa9b71c1e2fdbbf51aa1e7279f5b1b593" translate="yes" xml:space="preserve">
          <source>Hook run when a prefix command needs to preserve the prefix by passing the current prefix command state to the next command. For example,</source>
          <target state="translated">접두사 명령이 현재 접두사 명령 상태를 다음 명령에 전달하여 접두사를 보존해야 할 때 후크가 실행됩니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="af5e168a7b1a893f006931ba2a264880902860cc" translate="yes" xml:space="preserve">
          <source>Hook run when about to switch windows with a mouse command.</source>
          <target state="translated">마우스 명령으로 창을 전환하려고 할 때 후크가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="599a026ddc806032d8b0cad13cf7114d9b52a3d0" translate="yes" xml:space="preserve">
          <source>Hook run when the buffer list changes (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">버퍼 목록이 변경되면 후크가 실행됩니다 ( &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;버퍼 목록&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="905236119d4bae6aa580384bd76e41bfcad6fedc" translate="yes" xml:space="preserve">
          <source>Hooks for Loading</source>
          <target state="translated">적재 용 후크</target>
        </trans-unit>
        <trans-unit id="55fa86096d9e891408187fe0c6edb599398bae91" translate="yes" xml:space="preserve">
          <source>Hooks for Window Scrolling and Changes</source>
          <target state="translated">창 스크롤 및 변경을위한 후크</target>
        </trans-unit>
        <trans-unit id="36e1091503d42fff1551e9d69a988a817d72e698" translate="yes" xml:space="preserve">
          <source>Hooks for scrolling, window size changes, redisplay going past a certain point, or window configuration changes.</source>
          <target state="translated">스크롤, 창 크기 변경, 특정 지점을지나 다시 표시하거나 창 구성 변경을위한 후크.</target>
        </trans-unit>
        <trans-unit id="cea58c21b18c52dadef4333f88314d5eabce3408" translate="yes" xml:space="preserve">
          <source>Hooks run at the end of major mode functions.</source>
          <target state="translated">후크는 주요 모드 기능이 끝날 때 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="437d6443c80ea6fdc9d224a4b93f14952517f8de" translate="yes" xml:space="preserve">
          <source>Horizontal Scrolling</source>
          <target state="translated">수평 스크롤</target>
        </trans-unit>
        <trans-unit id="5ae2a2ea9e6b8c19b46fe640a33cf043697ad15b" translate="yes" xml:space="preserve">
          <source>Horizontal scroll bars are not available on all platforms. The function &lt;code&gt;horizontal-scroll-bars-available-p&lt;/code&gt; which takes no argument returns non-&lt;code&gt;nil&lt;/code&gt; if they are available on your system.</source>
          <target state="translated">일부 플랫폼에서는 가로 스크롤 막대를 사용할 수 없습니다. 기능 &lt;code&gt;horizontal-scroll-bars-available-p&lt;/code&gt; 인수없이 반환 비 취 &lt;code&gt;nil&lt;/code&gt; 그들은 당신의 시스템에서 사용할 수있는 경우.</target>
        </trans-unit>
        <trans-unit id="0c81abc87bdc5538df96766fcae6d44438449d0a" translate="yes" xml:space="preserve">
          <source>How</source>
          <target state="translated">How</target>
        </trans-unit>
        <trans-unit id="ca55c03f6a42b83fa9eaededf809b17e04172808" translate="yes" xml:space="preserve">
          <source>How Abbrev mode works, and its data structures.</source>
          <target state="translated">Abbrev 모드의 작동 방식 및 데이터 구조.</target>
        </trans-unit>
        <trans-unit id="424728aefa8b5c3e18cf4f1a3fcfc57fb5c940c0" translate="yes" xml:space="preserve">
          <source>How C integer types are used inside Emacs.</source>
          <target state="translated">Emacs에서 C 정수 유형이 사용되는 방법.</target>
        </trans-unit>
        <trans-unit id="73455db4440abe5141ca24f22ed0359d457dd6ee" translate="yes" xml:space="preserve">
          <source>How Emacs Chooses a Major Mode</source>
          <target state="translated">Emacs가 주요 모드를 선택하는 방법</target>
        </trans-unit>
        <trans-unit id="c64e5a470e25ae36e8718f9edaeda563ccee8bf6" translate="yes" xml:space="preserve">
          <source>How Emacs Processes Errors</source>
          <target state="translated">Emacs가 오류를 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="2d8f941da2deb1b9d9faa33dcd7fe9b7f4068dd7" translate="yes" xml:space="preserve">
          <source>How Emacs chooses the major mode automatically.</source>
          <target state="translated">Emacs가 주 모드를 자동으로 선택하는 방법.</target>
        </trans-unit>
        <trans-unit id="c8f98665afb6d797a12b846d875829ff07a98414" translate="yes" xml:space="preserve">
          <source>How Emacs combines the faces specified for a character.</source>
          <target state="translated">Emacs가 캐릭터에 지정된 얼굴을 결합하는 방법.</target>
        </trans-unit>
        <trans-unit id="7c1329a8372ebc6bb20659d406cae8a1ccf559e7" translate="yes" xml:space="preserve">
          <source>How Emacs displays individual characters.</source>
          <target state="translated">Emacs가 개별 문자를 표시하는 방법.</target>
        </trans-unit>
        <trans-unit id="d6a4957c45721935c4eacc744c13d6d3849b6983" translate="yes" xml:space="preserve">
          <source>How Emacs makes backup files, and when.</source>
          <target state="translated">Emacs가 백업 파일을 만드는 방법과시기.</target>
        </trans-unit>
        <trans-unit id="7e37f8cb70c0d5a907f84ce6fe7fc0c44dac0b6c" translate="yes" xml:space="preserve">
          <source>How Emacs modifies events as they are read.</source>
          <target state="translated">Emacs가 이벤트를 읽을 때 수정하는 방법.</target>
        </trans-unit>
        <trans-unit id="a41da7339116d96fc155f50d0e55588c91dba4cd" translate="yes" xml:space="preserve">
          <source>How Emacs represents a syntactic state.</source>
          <target state="translated">Emacs가 구문 상태를 나타내는 방법.</target>
        </trans-unit>
        <trans-unit id="bfd386c2ea524e6fd76b8d59c4329236be84642e" translate="yes" xml:space="preserve">
          <source>How Emacs represents text.</source>
          <target state="translated">Emacs가 텍스트를 나타내는 방법.</target>
        </trans-unit>
        <trans-unit id="88b2901cabaa46b34ea7ac49c84333db845b2798" translate="yes" xml:space="preserve">
          <source>How Emacs searches the active keymaps for a key binding.</source>
          <target state="translated">Emacs가 키 바인딩을 위해 활성 키맵을 검색하는 방법.</target>
        </trans-unit>
        <trans-unit id="e0642c3a194855a09b27e1f8072a0b89ad321288" translate="yes" xml:space="preserve">
          <source>How Emacs selects a display table to use.</source>
          <target state="translated">Emacs가 사용할 디스플레이 테이블을 선택하는 방법.</target>
        </trans-unit>
        <trans-unit id="039c9a91251d2f4de444f4c547dfd8099e3ff514" translate="yes" xml:space="preserve">
          <source>How Emacs shows the matching open parenthesis.</source>
          <target state="translated">Emacs가 일치하는 여는 괄호를 표시하는 방법.</target>
        </trans-unit>
        <trans-unit id="380e0e65ee7c9b33a3a9973573f7a481d3221798" translate="yes" xml:space="preserve">
          <source>How Lisp chooses among local and global values.</source>
          <target state="translated">Lisp가 지역 및 글로벌 가치 중에서 선택하는 방법.</target>
        </trans-unit>
        <trans-unit id="e7c3ac1ce3c120c98c707e6ec97b0148965795df" translate="yes" xml:space="preserve">
          <source>How Lisp expressions are evaluated.</source>
          <target state="translated">Lisp 표현식이 평가되는 방법.</target>
        </trans-unit>
        <trans-unit id="54694456311324833b0d2778ba9d175e3834d16e" translate="yes" xml:space="preserve">
          <source>How Lisp objects are represented as text.</source>
          <target state="translated">Lisp 개체가 텍스트로 표현되는 방식.</target>
        </trans-unit>
        <trans-unit id="1276ad6fec455c6f792b7076f5b144eb2a972ea4" translate="yes" xml:space="preserve">
          <source>How Lisp programs can access doc strings.</source>
          <target state="translated">Lisp 프로그램이 문서 문자열에 액세스하는 방법.</target>
        </trans-unit>
        <trans-unit id="875d90ae56d0cb6fff586ac27659c7b7c961d464" translate="yes" xml:space="preserve">
          <source>How Lisp programs that produce the buffer contents can also specify how to fontify it.</source>
          <target state="translated">버퍼 내용을 생성하는 Lisp 프로그램이 어떻게 글꼴을 지정하는지 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76d1158f6da7afb3897eae1012abc518825bfab5" translate="yes" xml:space="preserve">
          <source>How Many Times is the Macro Expanded?</source>
          <target state="translated">매크로는 몇 번 확장됩니까?</target>
        </trans-unit>
        <trans-unit id="46dd5eecd75a00aa746a1e82f857d1771d78c53c" translate="yes" xml:space="preserve">
          <source>How Programs Do Loading</source>
          <target state="translated">프로그램로드 방법</target>
        </trans-unit>
        <trans-unit id="20e1cad0da33d268f73c19c14c87622dda733544" translate="yes" xml:space="preserve">
          <source>How a frame finds the minibuffer to use.</source>
          <target state="translated">프레임이 사용할 미니 버퍼를 찾는 방법.</target>
        </trans-unit>
        <trans-unit id="8329c5c2849e79168b3c04e28e1760e2e56d2704" translate="yes" xml:space="preserve">
          <source>How a minor mode can have its own keymap.</source>
          <target state="translated">부 모드가 자체 키맵을 가질 수있는 방법.</target>
        </trans-unit>
        <trans-unit id="8cb4537d8d445cf7b7e956e26b0afad50374ce03" translate="yes" xml:space="preserve">
          <source>How an overlay is represented.</source>
          <target state="translated">오버레이 표시 방법.</target>
        </trans-unit>
        <trans-unit id="e006e40be02272210385671c86e1cabb2d191298" translate="yes" xml:space="preserve">
          <source>How auto-fill mode is implemented to break lines.</source>
          <target state="translated">줄을 끊기 위해 자동 채우기 모드를 구현하는 방법.</target>
        </trans-unit>
        <trans-unit id="9012bdc0553f929b4a96e7a3a221a12b3f2f2d4a" translate="yes" xml:space="preserve">
          <source>How auto-save files are made; how their names are chosen.</source>
          <target state="translated">자동 저장 파일이 만들어지는 방법 그들의 이름이 어떻게 선택되는지.</target>
        </trans-unit>
        <trans-unit id="19b47519682252ee1fe1c0da369d9c625bca873d" translate="yes" xml:space="preserve">
          <source>How backup file names are computed; customization.</source>
          <target state="translated">백업 파일 이름이 계산되는 방법 맞춤화.</target>
        </trans-unit>
        <trans-unit id="0c91a3d9bd17b18ee7ce9c669f1504e5e417b662" translate="yes" xml:space="preserve">
          <source>How backup files are made; how their names are chosen.</source>
          <target state="translated">백업 파일을 만드는 방법 그들의 이름이 어떻게 선택되는지.</target>
        </trans-unit>
        <trans-unit id="f06b6f2af20599395965a809e336fb9ea24a0277" translate="yes" xml:space="preserve">
          <source>How characters are classified.</source>
          <target state="translated">캐릭터 분류 방법.</target>
        </trans-unit>
        <trans-unit id="911878bf88471d8466c56679c11480d4f05c4a1a" translate="yes" xml:space="preserve">
          <source>How command-line arguments are processed, and how you can customize them.</source>
          <target state="translated">명령 줄 인수가 처리되는 방법과이를 사용자 지정하는 방법.</target>
        </trans-unit>
        <trans-unit id="c3b53a662da8d449648c34d2aa4c948902559be4" translate="yes" xml:space="preserve">
          <source>How errors are classified for trapping them.</source>
          <target state="translated">오류를 트래핑하기 위해 오류를 분류하는 방법.</target>
        </trans-unit>
        <trans-unit id="0a38f032b696d076d8b68a655c1a25ca7eebbc45" translate="yes" xml:space="preserve">
          <source>How errors are signaled and handled.</source>
          <target state="translated">오류 신호 및 처리 방법.</target>
        </trans-unit>
        <trans-unit id="cce731acfa687f07c8f4db919d457062c98f66d6" translate="yes" xml:space="preserve">
          <source>How exiting works (permanent or temporary).</source>
          <target state="translated">종료 작동 방식 (영구적 또는 임시적).</target>
        </trans-unit>
        <trans-unit id="3dfd1c954b5570fb6538a7aaaf5dad3ed3d3322f" translate="yes" xml:space="preserve">
          <source>How file I/O functions handle coding systems.</source>
          <target state="translated">파일 I / O 함수가 코딩 시스템을 처리하는 방법.</target>
        </trans-unit>
        <trans-unit id="3eafa734a3277fc013d15120983c57ea33996f00" translate="yes" xml:space="preserve">
          <source>How functions are expressed as Lisp objects.</source>
          <target state="translated">함수가 Lisp 객체로 표현되는 방식.</target>
        </trans-unit>
        <trans-unit id="a9460171ea1f14a9ebd08bfd9f7738dbf76717b4" translate="yes" xml:space="preserve">
          <source>How glyphless characters are drawn.</source>
          <target state="translated">글리프없는 문자를 그리는 방법.</target>
        </trans-unit>
        <trans-unit id="d72eec1426b7faeaed9323930c07dee408af2e79" translate="yes" xml:space="preserve">
          <source>How inserted text gets properties from neighboring text.</source>
          <target state="translated">삽입 된 텍스트가 인접한 텍스트에서 속성을 가져 오는 방법.</target>
        </trans-unit>
        <trans-unit id="3f4015407a40e50be2cde63f2794a460c0d48c1e" translate="yes" xml:space="preserve">
          <source>How keyboard macros are implemented.</source>
          <target state="translated">키보드 매크로가 구현되는 방법.</target>
        </trans-unit>
        <trans-unit id="eb129e00edeb3399921850a331e8478ebceaf56a" translate="yes" xml:space="preserve">
          <source>How large displayed text is.</source>
          <target state="translated">표시되는 텍스트의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="b3afbf6ff2acc03e7c81882009a449b388164513" translate="yes" xml:space="preserve">
          <source>How lists are made out of cons cells.</source>
          <target state="translated">단점 셀로 목록을 만드는 방법.</target>
        </trans-unit>
        <trans-unit id="83a2051f17a03d488ddb9c4789bb2d3e03ae3e3d" translate="yes" xml:space="preserve">
          <source>How macros are expanded by the compiler.</source>
          <target state="translated">컴파일러가 매크로를 확장하는 방법.</target>
        </trans-unit>
        <trans-unit id="0e90df76b8c9882f371d3c2ecfa0adc94105e22e" translate="yes" xml:space="preserve">
          <source>How modes can have buffer state saved between Emacs sessions.</source>
          <target state="translated">모드가 Emacs 세션 사이에 버퍼 상태를 저장하는 방법.</target>
        </trans-unit>
        <trans-unit id="a3b851160ca439424e212f77f2ab97ea581f8bc1" translate="yes" xml:space="preserve">
          <source>How modes can highlight text according to syntax.</source>
          <target state="translated">모드가 구문에 따라 텍스트를 강조하는 방법.</target>
        </trans-unit>
        <trans-unit id="ea757377c2e3eb5e61db46483b85b18f70d7e8a1" translate="yes" xml:space="preserve">
          <source>How one keymap can inherit the bindings of another keymap.</source>
          <target state="translated">하나의 키맵이 다른 키맵의 바인딩을 상속하는 방법.</target>
        </trans-unit>
        <trans-unit id="d73ce1802c896d458f105e9764eda3a0ae17b71c" translate="yes" xml:space="preserve">
          <source>How processes and threads interact.</source>
          <target state="translated">프로세스와 스레드가 상호 작용하는 방식.</target>
        </trans-unit>
        <trans-unit id="943be7c63ffdac714498a5552a43c91fd1f31ad9" translate="yes" xml:space="preserve">
          <source>How reading an event uses the input method.</source>
          <target state="translated">이벤트 읽기에서 입력 방법을 사용하는 방법.</target>
        </trans-unit>
        <trans-unit id="85606317869c4f375cc627f820063269ee22674b" translate="yes" xml:space="preserve">
          <source>How registers are implemented. Accessing the text or position stored in a register.</source>
          <target state="translated">레지스터 구현 방법. 레지스터에 저장된 텍스트 또는 위치에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="b5d083d590eb3795fd2c0494823ab6871d69743d" translate="yes" xml:space="preserve">
          <source>How such commands access the minibuffer text.</source>
          <target state="translated">이러한 명령이 미니 버퍼 텍스트에 액세스하는 방법.</target>
        </trans-unit>
        <trans-unit id="e367d992826c4b7f32659c02c5ca7f8ca7c0a67d" translate="yes" xml:space="preserve">
          <source>How symbols are kept unique.</source>
          <target state="translated">기호가 고유하게 유지되는 방법.</target>
        </trans-unit>
        <trans-unit id="431acda916ce9bcc9004326cc21b8a3717115f3a" translate="yes" xml:space="preserve">
          <source>How syntax table information is stored.</source>
          <target state="translated">구문 테이블 정보가 저장되는 방법.</target>
        </trans-unit>
        <trans-unit id="315f1888746c644271380d742b7599a886f5fde3" translate="yes" xml:space="preserve">
          <source>How the command history is set up, and how accessed.</source>
          <target state="translated">명령 내역이 설정되는 방법 및 액세스 방법.</target>
        </trans-unit>
        <trans-unit id="246769fcb127a15ca0605886dbf4b03b171b6779" translate="yes" xml:space="preserve">
          <source>How the command loop handles disabled commands.</source>
          <target state="translated">명령 루프가 비활성화 된 명령을 처리하는 방법.</target>
        </trans-unit>
        <trans-unit id="5fd15974c17152aef7f997f78970a0ba8df9b1e7" translate="yes" xml:space="preserve">
          <source>How the command loop reads commands.</source>
          <target state="translated">명령 루프가 명령을 읽는 방법.</target>
        </trans-unit>
        <trans-unit id="bf05fc1c194e6e2c2a633e008a7a6e3f6c6f496c" translate="yes" xml:space="preserve">
          <source>How the commands to set prefix args work.</source>
          <target state="translated">접두사 인수를 설정하는 명령이 작동하는 방식.</target>
        </trans-unit>
        <trans-unit id="91b4635751cc57d63446319cd4799b8788dc6c3f" translate="yes" xml:space="preserve">
          <source>How the dumped Emacs is made.</source>
          <target state="translated">덤프 된 Emacs가 만들어지는 방법.</target>
        </trans-unit>
        <trans-unit id="11b61f8ba4e524da829402c71693d4881e7a0c61" translate="yes" xml:space="preserve">
          <source>How the editor command loop works, and how you can call its subroutines.</source>
          <target state="translated">편집기 명령 루프가 작동하는 방법과 서브 루틴을 호출하는 방법.</target>
        </trans-unit>
        <trans-unit id="9698565b3002bf4e4f46750c3a685ca1337bccdf" translate="yes" xml:space="preserve">
          <source>How the mark is implemented with a marker.</source>
          <target state="translated">마커로 마크를 구현하는 방법.</target>
        </trans-unit>
        <trans-unit id="2f38bd22734607fe3cae8b8392d5889c6cbc92b8" translate="yes" xml:space="preserve">
          <source>How the symbols &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; are used.</source>
          <target state="translated">기호 &lt;code&gt;nil&lt;/code&gt; 및 &lt;code&gt;t&lt;/code&gt; 가 사용되는 방법.</target>
        </trans-unit>
        <trans-unit id="05b78c93f5fe9e0865913a69d7d57592c8731ce2" translate="yes" xml:space="preserve">
          <source>How the terminal-specific Lisp file is read.</source>
          <target state="translated">터미널 별 Lisp 파일을 읽는 방법.</target>
        </trans-unit>
        <trans-unit id="d07b14367ed4ac2515a0e599d2dbc84e143a0567" translate="yes" xml:space="preserve">
          <source>How to Signal an Error</source>
          <target state="translated">오류 신호를 보내는 방법</target>
        </trans-unit>
        <trans-unit id="3a31adaf08318a4966b4b88702a5b6e5e5af51f7" translate="yes" xml:space="preserve">
          <source>How to access the region.</source>
          <target state="translated">지역에 접근하는 방법.</target>
        </trans-unit>
        <trans-unit id="25c796afcb5aaa97b3b52ecebdeff8fe97007f17" translate="yes" xml:space="preserve">
          <source>How to add new items to a menu.</source>
          <target state="translated">메뉴에 새 항목을 추가하는 방법.</target>
        </trans-unit>
        <trans-unit id="6de44fd5549373e8e9c00b85fc04c92a03d83d38" translate="yes" xml:space="preserve">
          <source>How to add, subtract, multiply and divide.</source>
          <target state="translated">더하기, 빼기, 곱하기 및 나누기.</target>
        </trans-unit>
        <trans-unit id="afa7a81e4159b28e1b4b41ae69718ad986731c93" translate="yes" xml:space="preserve">
          <source>How to avoid displaying another buffer in a specific window.</source>
          <target state="translated">특정 창에 다른 버퍼를 표시하지 않는 방법.</target>
        </trans-unit>
        <trans-unit id="aa8546661ae1f57744974a6c605f0dea7a376d19" translate="yes" xml:space="preserve">
          <source>How to avoid that buffers get lost in between windows.</source>
          <target state="translated">창 사이에서 버퍼가 손실되는 것을 방지하는 방법.</target>
        </trans-unit>
        <trans-unit id="95b188b2dae487fa73362229e7d945da70e3c392" translate="yes" xml:space="preserve">
          <source>How to call the function &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt; 함수를 호출하는 방법 .</target>
        </trans-unit>
        <trans-unit id="98eba38c05fa88b9c30ad0dfb13950962ae5ed2d" translate="yes" xml:space="preserve">
          <source>How to change a frame&amp;rsquo;s parameters.</source>
          <target state="translated">프레임의 매개 변수를 변경하는 방법.</target>
        </trans-unit>
        <trans-unit id="584d283ee202b0a7afd45a5153a4ef8b5cf2e74e" translate="yes" xml:space="preserve">
          <source>How to choose a window for displaying a buffer.</source>
          <target state="translated">버퍼를 표시 할 창을 선택하는 방법.</target>
        </trans-unit>
        <trans-unit id="889a3f666af4c61de2d0629af5121c441bb5decf" translate="yes" xml:space="preserve">
          <source>How to coerce Font Lock into properly highlighting multiline constructs.</source>
          <target state="translated">글꼴 잠금을 강제로 여러 줄 구성을 적절하게 강조하는 방법.</target>
        </trans-unit>
        <trans-unit id="c6e972dc0a66030144b054cad1a5fcd75dcee8d5" translate="yes" xml:space="preserve">
          <source>How to create, examine and alter syntax tables.</source>
          <target state="translated">구문 테이블을 생성, 검사 및 변경하는 방법.</target>
        </trans-unit>
        <trans-unit id="7a791a4e001a6ac9ea4279a3a77ed0c51442423e" translate="yes" xml:space="preserve">
          <source>How to customize the menu bar.</source>
          <target state="translated">메뉴 표시 줄을 사용자 정의하는 방법.</target>
        </trans-unit>
        <trans-unit id="58a90a2d964bdc73a4edf5b8a45d5b1cecdd234a" translate="yes" xml:space="preserve">
          <source>How to define a coding system is an arcane matter, and is not documented here.</source>
          <target state="translated">코딩 시스템을 정의하는 방법은 난해한 문제이며 여기에 문서화되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0830c9813b6a38032206e8dceae014f437aa7fe" translate="yes" xml:space="preserve">
          <source>How to define a face.</source>
          <target state="translated">얼굴을 정의하는 방법.</target>
        </trans-unit>
        <trans-unit id="963f454b3e02a674e70674f8079ea290a486b06b" translate="yes" xml:space="preserve">
          <source>How to define a glyph, and what glyphs mean.</source>
          <target state="translated">글리프를 정의하는 방법 및 글리프의 의미.</target>
        </trans-unit>
        <trans-unit id="bffa5d1adff8569497dea41136c9588c5389b005" translate="yes" xml:space="preserve">
          <source>How to define and examine faces.</source>
          <target state="translated">얼굴을 정의하고 검사하는 방법.</target>
        </trans-unit>
        <trans-unit id="1831635dc9eadce3f4799bcd9062d3a05e656dad" translate="yes" xml:space="preserve">
          <source>How to define your own rx forms.</source>
          <target state="translated">자신의 rx 양식을 정의하는 방법.</target>
        </trans-unit>
        <trans-unit id="43bb8620d83e28db5e68aaf5c7cf9fdb0b8e09e6" translate="yes" xml:space="preserve">
          <source>How to display the cursor. Legitimate values are:</source>
          <target state="translated">커서를 표시하는 방법. 합법적 인 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e1e722dc555e0eba92871029eaa26bfc5ffcb35" translate="yes" xml:space="preserve">
          <source>How to distinguish various sorts of list forms.</source>
          <target state="translated">다양한 종류의 목록 양식을 구별하는 방법.</target>
        </trans-unit>
        <trans-unit id="0ce21d9b92903a59aca05b3b1552b2b08463a2e9" translate="yes" xml:space="preserve">
          <source>How to enable and disable undo information. How to control how much information is kept.</source>
          <target state="translated">실행 취소 정보를 활성화 및 비활성화하는 방법. 보관되는 정보의 양을 제어하는 ​​방법.</target>
        </trans-unit>
        <trans-unit id="02a7c5fa566cfc647af09f294de23fa71d709ee5" translate="yes" xml:space="preserve">
          <source>How to enable lexical binding.</source>
          <target state="translated">어휘 바인딩을 활성화하는 방법.</target>
        </trans-unit>
        <trans-unit id="e02986b18d513ea22722b980555a66fd9903de73" translate="yes" xml:space="preserve">
          <source>How to examine all existing frames.</source>
          <target state="translated">모든 기존 프레임을 검사하는 방법.</target>
        </trans-unit>
        <trans-unit id="2477e5d3553fcc6700cc0b69d229d28489401db4" translate="yes" xml:space="preserve">
          <source>How to find a file in standard places.</source>
          <target state="translated">표준 위치에서 파일을 찾는 방법.</target>
        </trans-unit>
        <trans-unit id="6fdaa01098d58394f8c8a5ccc0e44755601e354b" translate="yes" xml:space="preserve">
          <source>How to find a spurious close paren or missing open.</source>
          <target state="translated">가짜 닫는 괄호 또는 누락 된 열림을 찾는 방법.</target>
        </trans-unit>
        <trans-unit id="546322a22b8767e18ea0312bd5734d59f3d4d892" translate="yes" xml:space="preserve">
          <source>How to find a spurious open paren or missing close.</source>
          <target state="translated">허위 열린 괄호 또는 누락 된 닫기를 찾는 방법.</target>
        </trans-unit>
        <trans-unit id="4508e9cb53ed5fecb01557cb9f9fe44bbc369263" translate="yes" xml:space="preserve">
          <source>How to find syntax errors.</source>
          <target state="translated">구문 오류를 찾는 방법.</target>
        </trans-unit>
        <trans-unit id="acccfe1e2eedd45b7498bd909391c965814563f6" translate="yes" xml:space="preserve">
          <source>How to invoke and customize completion.</source>
          <target state="translated">완성을 호출하고 사용자 정의하는 방법.</target>
        </trans-unit>
        <trans-unit id="7fff9f7cff02ebf6de7010bb23e0dfef97e7dbd8" translate="yes" xml:space="preserve">
          <source>How to invoke the Lisp interpreter explicitly.</source>
          <target state="translated">Lisp 인터프리터를 명시 적으로 호출하는 방법.</target>
        </trans-unit>
        <trans-unit id="b1b9e2940cf245b51808121c7d6f61585c662db7" translate="yes" xml:space="preserve">
          <source>How to look at all the existing buffers.</source>
          <target state="translated">모든 기존 버퍼를 보는 방법.</target>
        </trans-unit>
        <trans-unit id="34ec9fe9a56502c4f930d94f883c460d15f9c68d" translate="yes" xml:space="preserve">
          <source>How to make a keymap that defines a menu.</source>
          <target state="translated">메뉴를 정의하는 키맵을 만드는 방법.</target>
        </trans-unit>
        <trans-unit id="a2bc9dfabedfac860e672276bbd3d66b9c84751e" translate="yes" xml:space="preserve">
          <source>How to package a single .el file.</source>
          <target state="translated">단일 .el 파일을 패키징하는 방법.</target>
        </trans-unit>
        <trans-unit id="f4b8c19c329b5bc56446536360857c69c68a896f" translate="yes" xml:space="preserve">
          <source>How to package multiple files.</source>
          <target state="translated">여러 파일을 패키징하는 방법.</target>
        </trans-unit>
        <trans-unit id="af653ef8f4ff00959d4b6219fde22206384903a6" translate="yes" xml:space="preserve">
          <source>How to produce trace output in a buffer.</source>
          <target state="translated">버퍼에서 추적 출력을 생성하는 방법.</target>
        </trans-unit>
        <trans-unit id="9e5a558e3ec24a2347966c1329d3ee02e34f495b" translate="yes" xml:space="preserve">
          <source>How to put documentation in a function.</source>
          <target state="translated">함수에 문서를 넣는 방법.</target>
        </trans-unit>
        <trans-unit id="e5d5fefb1b58087d7078d369bb3663d7ac94d5ca" translate="yes" xml:space="preserve">
          <source>How to put functions on a hook, or remove them.</source>
          <target state="translated">후크에 함수를 넣거나 제거하는 방법.</target>
        </trans-unit>
        <trans-unit id="21673b685715f7818c84d129e8e31e8f33f35b07" translate="yes" xml:space="preserve">
          <source>How to read a Lisp object or expression.</source>
          <target state="translated">Lisp 객체 또는 표현식을 읽는 방법.</target>
        </trans-unit>
        <trans-unit id="76b8dbb93659061cda4f1c058522cc96f5c78568" translate="yes" xml:space="preserve">
          <source>How to read a straight text string.</source>
          <target state="translated">직선 텍스트 문자열을 읽는 방법.</target>
        </trans-unit>
        <trans-unit id="1d44481861a0b27922b9fbe396d05c57e1f7608e" translate="yes" xml:space="preserve">
          <source>How to read and set abbrev properties. Which properties have which effect.</source>
          <target state="translated">약어 속성을 읽고 설정하는 방법. 어떤 속성이 어떤 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="4982e640e83f9a33b20109133078a1d0cd550c5c" translate="yes" xml:space="preserve">
          <source>How to read and set abbrev table properties. Which properties have which effect.</source>
          <target state="translated">약어 테이블 속성을 읽고 설정하는 방법. 어떤 속성이 어떤 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="fc129106eeffa3a79dddd98e2bd0fbe84ba96460" translate="yes" xml:space="preserve">
          <source>How to read and set properties. What properties do to the screen display.</source>
          <target state="translated">속성을 읽고 설정하는 방법. 화면 표시에 어떤 속성이 적용됩니까?</target>
        </trans-unit>
        <trans-unit id="06bbb932d66cdf4cef87ff0a5a0e26da5fe306f8" translate="yes" xml:space="preserve">
          <source>How to read input events from the keyboard or mouse.</source>
          <target state="translated">키보드 또는 마우스에서 입력 이벤트를 읽는 방법.</target>
        </trans-unit>
        <trans-unit id="006de7d43da6bac230f0a8e3e188777fea185278" translate="yes" xml:space="preserve">
          <source>How to read just one event.</source>
          <target state="translated">하나의 이벤트 만 읽는 방법.</target>
        </trans-unit>
        <trans-unit id="084ce719b3d66bab7fcdb292d62649f87e3aa377" translate="yes" xml:space="preserve">
          <source>How to read one key sequence.</source>
          <target state="translated">하나의 키 시퀀스를 읽는 방법.</target>
        </trans-unit>
        <trans-unit id="da7e78b38de5635099259fb05116f8a0f84bacef" translate="yes" xml:space="preserve">
          <source>How to report an error.</source>
          <target state="translated">오류를보고하는 방법.</target>
        </trans-unit>
        <trans-unit id="54dc9f697a823b124ee9914dbd0ff3b8567601a0" translate="yes" xml:space="preserve">
          <source>How to request key lookup.</source>
          <target state="translated">키 조회를 요청하는 방법.</target>
        </trans-unit>
        <trans-unit id="9e910cb2d0cc6b121e240abcc195ff5cb145f16b" translate="yes" xml:space="preserve">
          <source>How to reread or throw away input events.</source>
          <target state="translated">입력 이벤트를 다시 읽거나 버리는 방법.</target>
        </trans-unit>
        <trans-unit id="1f92efa5ad42e9cdbaef14a012c71a1706d76c68" translate="yes" xml:space="preserve">
          <source>How to restore the state prior to displaying a buffer.</source>
          <target state="translated">버퍼를 표시하기 전에 상태를 복원하는 방법.</target>
        </trans-unit>
        <trans-unit id="2bd60b7bf14ec2d6b95feff3282cf5814b49de80" translate="yes" xml:space="preserve">
          <source>How to run a hook.</source>
          <target state="translated">후크를 실행하는 방법.</target>
        </trans-unit>
        <trans-unit id="c996fa30158f4274ebb47865a320f076e4763bd8" translate="yes" xml:space="preserve">
          <source>How to specify Lisp strings.</source>
          <target state="translated">Lisp 문자열을 지정하는 방법.</target>
        </trans-unit>
        <trans-unit id="08410822c3a2ba93603db144c7356fde9ba7377b" translate="yes" xml:space="preserve">
          <source>How to specify an image for use in &lt;code&gt;:display&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:display&lt;/code&gt; 에서 사용할 이미지를 지정하는 방법 .</target>
        </trans-unit>
        <trans-unit id="93a021b4f614ad8f528308affeb7fb1734a14088" translate="yes" xml:space="preserve">
          <source>How to specify characters by their codes.</source>
          <target state="translated">코드로 문자를 지정하는 방법.</target>
        </trans-unit>
        <trans-unit id="89d64245365e5868434353c1c18fe79f30b28b42" translate="yes" xml:space="preserve">
          <source>How to specify complex patterns of evaluation.</source>
          <target state="translated">복잡한 평가 패턴을 지정하는 방법.</target>
        </trans-unit>
        <trans-unit id="22a42034aac1180d73f83fff38dbd567a6232e7c" translate="yes" xml:space="preserve">
          <source>How to specify margins for filling commands.</source>
          <target state="translated">채우기 명령에 여백을 지정하는 방법.</target>
        </trans-unit>
        <trans-unit id="58794ee5be37801b138025b720bc3ca48ac5a93d" translate="yes" xml:space="preserve">
          <source>How to teach Emacs to indent for a major mode.</source>
          <target state="translated">Emacs가 주요 모드를 들여 쓰도록 가르치는 방법.</target>
        </trans-unit>
        <trans-unit id="7fd2bd6342dae1eb68613b0e709d5a675535ca09" translate="yes" xml:space="preserve">
          <source>How to test evaluation coverage.</source>
          <target state="translated">평가 범위를 테스트하는 방법.</target>
        </trans-unit>
        <trans-unit id="cabd761d617b5357fad25d66f4ebbc1681c32def" translate="yes" xml:space="preserve">
          <source>How to unload a library that was loaded.</source>
          <target state="translated">로드 된 라이브러리를 언로드하는 방법.</target>
        </trans-unit>
        <trans-unit id="0d55e3212d08896ceeeaa77d19c87444cc23f9c9" translate="yes" xml:space="preserve">
          <source>How to use &lt;code&gt;pcase&lt;/code&gt; and friends.</source>
          <target state="translated">&lt;code&gt;pcase&lt;/code&gt; 및 친구들 을 사용하는 방법 .</target>
        </trans-unit>
        <trans-unit id="20b574c8a165d8a10848cad0a4919d5912131959" translate="yes" xml:space="preserve">
          <source>How to use an existing function.</source>
          <target state="translated">기존 기능을 사용하는 방법.</target>
        </trans-unit>
        <trans-unit id="b1d8549ec9446bbed5459f275a5ffbe6e2e8e3f6" translate="yes" xml:space="preserve">
          <source>How to use hooks; how to write code that provides hooks.</source>
          <target state="translated">후크 사용 방법; 후크를 제공하는 코드를 작성하는 방법.</target>
        </trans-unit>
        <trans-unit id="397c70b5aa7958abf3bbd4291d0b1e795a6db2de" translate="yes" xml:space="preserve">
          <source>How to wait until process output arrives.</source>
          <target state="translated">프로세스 출력이 도착할 때까지 기다리는 방법.</target>
        </trans-unit>
        <trans-unit id="1c30e9666fd6c327731ef484a3a909772e16b583" translate="yes" xml:space="preserve">
          <source>How to work with bool-vectors.</source>
          <target state="translated">부울 벡터로 작업하는 방법.</target>
        </trans-unit>
        <trans-unit id="dcb3cc4dba44c005cbdc12b32a6e9c3409b31fef" translate="yes" xml:space="preserve">
          <source>How to work with char-tables.</source>
          <target state="translated">char-tables로 작업하는 방법.</target>
        </trans-unit>
        <trans-unit id="50e14026cd301cbc7c15888338d8006b6117ac06" translate="yes" xml:space="preserve">
          <source>How to write a macro definition.</source>
          <target state="translated">매크로 정의를 작성하는 방법.</target>
        </trans-unit>
        <trans-unit id="f2626db4c8972f5298b8bd23108422f3ae4d0b31" translate="yes" xml:space="preserve">
          <source>How unibyte and multibyte relate to codes of individual characters.</source>
          <target state="translated">유니 바이트 및 멀티 바이트와 개별 문자 코드의 관계</target>
        </trans-unit>
        <trans-unit id="9c3a6d6fb888a93f9b13417e4714435f08d1f37d" translate="yes" xml:space="preserve">
          <source>How users actuate the menu with the keyboard.</source>
          <target state="translated">사용자가 키보드로 메뉴를 작동하는 방법.</target>
        </trans-unit>
        <trans-unit id="5f52510e53837c8871c96a8a4ce4e4b3f7e357a7" translate="yes" xml:space="preserve">
          <source>How users actuate the menu with the mouse.</source>
          <target state="translated">사용자가 마우스로 메뉴를 작동하는 방법.</target>
        </trans-unit>
        <trans-unit id="b84e7b6373cd543c2668923674fbfb3bd6c1af3c" translate="yes" xml:space="preserve">
          <source>How various sorts of objects are evaluated.</source>
          <target state="translated">다양한 종류의 개체를 평가하는 방법.</target>
        </trans-unit>
        <trans-unit id="1bc7e4b9fd61439b8a59d378697564a244418612" translate="yes" xml:space="preserve">
          <source>How yanking is done.</source>
          <target state="translated">잡아 당기는 방법.</target>
        </trans-unit>
        <trans-unit id="0db990b5ad8fd1a0ad4e10e1fa4cee2eb3f386ff" translate="yes" xml:space="preserve">
          <source>How you can trap errors and continue execution.</source>
          <target state="translated">오류를 트랩하고 계속 실행하는 방법.</target>
        </trans-unit>
        <trans-unit id="c34f30d62a19f9bd568b81a72a6017a9cc032b6f" translate="yes" xml:space="preserve">
          <source>How, when and why macros are expanded.</source>
          <target state="translated">매크로가 확장되는 방법,시기 및 이유.</target>
        </trans-unit>
        <trans-unit id="d712cc7071561b25bbf69d3a36de2812fe0afaa1" translate="yes" xml:space="preserve">
          <source>However,</source>
          <target state="translated">However,</target>
        </trans-unit>
        <trans-unit id="cf847965f03e83065a0d6e8915b249c6821cc6da" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;expand-file-name&lt;/code&gt; expands leading &amp;lsquo;</source>
          <target state="translated">그러나 &lt;code&gt;expand-file-name&lt;/code&gt; 은 선행 '</target>
        </trans-unit>
        <trans-unit id="b1c6040b74d9c73c473c84f549e1915ecc95fde5" translate="yes" xml:space="preserve">
          <source>However, &lt;var&gt;facespec&lt;/var&gt; can also evaluate to a list of this form:</source>
          <target state="translated">그러나 &lt;var&gt;facespec&lt;/var&gt; 은 다음 형식의 목록으로 평가할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="18dc73a045eaa93f274aa0ea125775bec0b459d8" translate="yes" xml:space="preserve">
          <source>However, association lists have their own advantages. Depending on your application, it may be faster to add an association to the front of an association list than to update a property. All properties for a symbol are stored in the same property list, so there is a possibility of a conflict between different uses of a property name. (For this reason, it is a good idea to choose property names that are probably unique, such as by beginning the property name with the program&amp;rsquo;s usual name-prefix for variables and functions.) An association list may be used like a stack where associations are pushed on the front of the list and later discarded; this is not possible with a property list.</source>
          <target state="translated">그러나 연관 목록에는 고유 한 장점이 있습니다. 애플리케이션에 따라 속성을 업데이트하는 것보다 연결 목록 앞에 연결을 추가하는 것이 더 빠를 수 있습니다. 심볼의 모든 속성은 동일한 속성 목록에 저장되므로 속성 이름의 다른 사용간에 충돌이 발생할 가능성이 있습니다. (이러한 이유로 변수 및 함수에 대한 프로그램의 일반적인 이름 접두사로 속성 이름을 시작하는 것과 같이 고유 한 속성 이름을 선택하는 것이 좋습니다.) 연관 목록은 연관이있는 스택처럼 사용될 수 있습니다. 목록의 맨 앞으로 밀고 나중에 버립니다. 이것은 속성 목록으로는 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="6fdb019f402056aff1f54c3fbe10ac44d0751b68" translate="yes" xml:space="preserve">
          <source>However, calling &lt;code&gt;sit-for&lt;/code&gt; this way is considered obsolete (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;). The old calling convention is deprecated like this:</source>
          <target state="translated">그러나 이러한 방식으로 &lt;code&gt;sit-for&lt;/code&gt; 를 호출 하는 것은 쓸모없는 것으로 간주됩니다 ( &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt; 참조 ). 이전 호출 규칙은 다음과 같이 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89bbfb09d0be7d93668a28799c5e28192794bf66" translate="yes" xml:space="preserve">
          <source>However, certain values for first argument to &lt;code&gt;debug&lt;/code&gt; have a special significance. (Normally, these values are used only by the internals of Emacs, and not by programmers calling &lt;code&gt;debug&lt;/code&gt;.) Here is a table of these special values:</source>
          <target state="translated">그러나 &lt;code&gt;debug&lt;/code&gt; 할 첫 번째 인수의 특정 값 은 특별한 의미를 갖습니다. (일반적으로이 값은 &lt;code&gt;debug&lt;/code&gt; 를 호출하는 프로그래머가 아니라 Emacs의 내부에서만 사용됩니다 .) 다음은 이러한 특수 값의 표입니다.</target>
        </trans-unit>
        <trans-unit id="8de178e11bbaacc8760ca159034380712879380b" translate="yes" xml:space="preserve">
          <source>However, empty input is always permitted, regardless of the value of &lt;var&gt;require-match&lt;/var&gt;; in that case, &lt;code&gt;completing-read&lt;/code&gt; returns the first element of &lt;var&gt;default&lt;/var&gt;, if it is a list; &lt;code&gt;&quot;&quot;&lt;/code&gt;, if &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;; or &lt;var&gt;default&lt;/var&gt;. The string or strings in &lt;var&gt;default&lt;/var&gt; are also available to the user through the history commands.</source>
          <target state="translated">그러나 &lt;var&gt;require-match&lt;/var&gt; 값에 관계없이 빈 입력은 항상 허용됩니다 . 이 경우 &lt;code&gt;completing-read&lt;/code&gt; 는 목록 인 경우 &lt;var&gt;default&lt;/var&gt; 의 첫 번째 요소를 반환 합니다. &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;var&gt;default&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 인 경우 ; 또는 &lt;var&gt;default&lt;/var&gt; . 히스토리 명령을 통해 사용자가 &lt;var&gt;default&lt;/var&gt; 문자열을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="792aa444c031c2fa64190182ed2af2de4e7b4dbe" translate="yes" xml:space="preserve">
          <source>However, entry to the debugger is not a normal consequence of an error. Many commands signal Lisp errors when invoked inappropriately, and during ordinary editing it would be very inconvenient to enter the debugger each time this happens. So if you want errors to enter the debugger, set the variable &lt;code&gt;debug-on-error&lt;/code&gt; to non-&lt;code&gt;nil&lt;/code&gt;. (The command &lt;code&gt;toggle-debug-on-error&lt;/code&gt; provides an easy way to do this.)</source>
          <target state="translated">그러나 디버거에 대한 항목은 오류의 정상적인 결과가 아닙니다. 많은 명령이 부적절하게 호출 될 때 Lisp 오류를 알리며 일반적인 편집 중에는 이러한 일이 발생할 때마다 디버거를 입력하는 것이 매우 불편합니다. 따라서 오류가 디버거에 들어가도록하려면 &lt;code&gt;debug-on-error&lt;/code&gt; 변수 를 non - &lt;code&gt;nil&lt;/code&gt; 로 설정하십시오 . ( &lt;code&gt;toggle-debug-on-error&lt;/code&gt; 명령을 사용하면이 작업을 쉽게 수행 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="a371da1f5e52f9fc85ed5b003d28727395a3da17" translate="yes" xml:space="preserve">
          <source>However, if Emacs is compiled without X toolkit support, or on text terminals, submenus are not supported. Each nested keymap is shown as a menu item, but clicking on it does not automatically pop up the submenu. If you wish to imitate the effect of submenus, you can do that by giving a nested keymap an item string which starts with &amp;lsquo;</source>
          <target state="translated">그러나 Emacs가 X 툴킷 지원없이 또는 텍스트 터미널에서 컴파일 된 경우 하위 메뉴는 지원되지 않습니다. 중첩 된 각 키맵은 메뉴 항목으로 표시되지만 클릭해도 하위 메뉴가 자동으로 팝업되지는 않습니다. 하위 메뉴의 효과를 모방하려면 중첩 된 키맵에 '로 시작하는 항목 문자열을 제공하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4c65a0739e555f939cffbe68b6ffcca06a140399" translate="yes" xml:space="preserve">
          <source>However, if the command has called &lt;code&gt;read-key-sequence&lt;/code&gt;, it returns the last read key sequence. See &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;. The value is a string if all events in the sequence were characters that fit in a string. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;.</source>
          <target state="translated">그러나 명령이 &lt;code&gt;read-key-sequence&lt;/code&gt; 를 호출 한 경우 마지막으로 읽은 키 시퀀스를 반환합니다. &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;키 시퀀스 입력을&lt;/a&gt; 참조하십시오 . 시퀀스의 모든 이벤트가 문자열에 맞는 문자 인 경우 값은 문자열입니다. &lt;a href=&quot;input-events#Input-Events&quot;&gt;입력 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c595b60168d6767424ea95918ae571bacc6c180" translate="yes" xml:space="preserve">
          <source>However, it is easy to arrange for editing to behave consistently for questions of the form, &amp;ldquo;What are the properties of text at this buffer or string position?&amp;rdquo; So we have decided these are the only questions that make sense; we have not implemented asking questions about where intervals start or end.</source>
          <target state="translated">그러나 &quot;이 버퍼 또는 문자열 위치에있는 텍스트의 속성은 무엇입니까?&quot;라는 형식의 질문에 대해 일관되게 편집하도록 정렬하는 것은 쉽습니다. 그래서 우리는 이것들이 의미가있는 유일한 질문이라고 결정했습니다. 간격이 시작되거나 끝나는 위치에 대한 질문을 구현하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="51b804270cee73a96e1897e1269c9ad3c0f552cc" translate="yes" xml:space="preserve">
          <source>However, most programs would do well to avoid these issues by following the recommendations at the beginning of this section.</source>
          <target state="translated">그러나 대부분의 프로그램은이 섹션의 시작 부분에있는 권장 사항을 따르면 이러한 문제를 방지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="dc207c4dbd9c7949ec4c7488ed32fae11dd5b968" translate="yes" xml:space="preserve">
          <source>However, not all of the characters you can write with backslash escape-sequences are valid in strings. The only control characters that a string can hold are the</source>
          <target state="translated">그러나 백 슬래시 이스케이프 시퀀스로 쓸 수있는 모든 문자가 문자열에서 유효한 것은 아닙니다. 문자열에 담을 수있는 유일한 제어 문자는</target>
        </trans-unit>
        <trans-unit id="ff06e550d91036d4357bc0ebb36365ccd29010ec" translate="yes" xml:space="preserve">
          <source>However, refraining from using buffer display functions and falling back on a split &amp;amp; delete windows metaphor is not a good idea either. Buffer display functions give Lisp programs and users a framework to reconcile their different needs; no comparable framework exists for splitting and deleting windows. Buffer display functions also allow to at least partially restore the layout of a frame when removing a buffer from it later (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;).</source>
          <target state="translated">그러나 버퍼 표시 기능 사용을 자제하고 분할 및 삭제 창 메타포로 대체하는 것도 좋은 생각이 아닙니다. 버퍼 표시 기능은 Lisp 프로그램과 사용자에게 서로 다른 요구 사항을 조정할 수있는 프레임 워크를 제공합니다. 창 분할 및 삭제를위한 유사한 프레임 워크가 없습니다. 버퍼 표시 기능을 사용하면 나중에 버퍼를 제거 할 때 프레임 레이아웃을 적어도 부분적으로 복원 할 수 있습니다 ( &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Windows 종료&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0708109dffd2408086ea747748000aad57a60fb4" translate="yes" xml:space="preserve">
          <source>However, replacing matches in a string is more complex, especially if you want to do it efficiently. So Emacs provides a function to do this.</source>
          <target state="translated">그러나 문자열에서 일치 항목을 바꾸는 것은 특히 효율적으로 수행하려는 경우 더 복잡합니다. 따라서 Emacs는이를 수행하는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9de554e12d95bd1680f448d39b8be6b09f245cd7" translate="yes" xml:space="preserve">
          <source>However, the fact that the internal structure of a closure is exposed to the rest of the Lisp world is considered an internal implementation detail. For this reason, we recommend against directly examining or altering the structure of closure objects.</source>
          <target state="translated">그러나 클로저의 내부 구조가 나머지 Lisp 세계에 노출된다는 사실은 내부 구현 세부 사항으로 간주됩니다. 따라서 클로저 객체의 구조를 직접 검사하거나 변경하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ce0a58a92b64459bc9f8e7f781f04d28663d42b0" translate="yes" xml:space="preserve">
          <source>However, the other arguments (all but the last) should be mutable lists.</source>
          <target state="translated">그러나 다른 인수 (마지막 인수를 제외하고 모두)는 변경 가능한 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="688020fba4783bbaacee756d3edcaac100fedf38" translate="yes" xml:space="preserve">
          <source>However, these two operations are not precisely inverse to each other. There are three kinds of exceptions:</source>
          <target state="translated">그러나이 두 연산은 서로 정확히 반대가 아닙니다. 세 가지 종류의 예외가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f359488fd7eea11470821fd3884427bf508d78fd" translate="yes" xml:space="preserve">
          <source>However, this is not very commonly done.</source>
          <target state="translated">그러나 이것은 일반적으로 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d77eec705a1ec091eb7e408fd698817be403ec6a" translate="yes" xml:space="preserve">
          <source>However, two distinct buffers are never considered &lt;code&gt;equal&lt;/code&gt;, even if their textual contents are the same.</source>
          <target state="translated">그러나 두 개의 서로 다른 버퍼는 텍스트 내용이 동일하더라도 &lt;code&gt;equal&lt;/code&gt; 것으로 간주되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cc55cc0b2759b9b581d764617f1a907123fc2d78" translate="yes" xml:space="preserve">
          <source>However, unibyte display and overlay strings &lt;em&gt;are&lt;/em&gt; reordered if their parent buffer is reordered. This is because plain-&lt;small&gt;ASCII&lt;/small&gt; strings are stored by Emacs as unibyte strings. If a unibyte display or overlay string includes non-&lt;small&gt;ASCII&lt;/small&gt; characters, these characters are assumed to have left-to-right direction.</source>
          <target state="translated">그러나 상위 버퍼가 재정렬되면 유니 바이트 표시 및 오버레이 문자열 &lt;em&gt;이&lt;/em&gt; 재정렬됩니다. 이것은 일반 &lt;small&gt;ASCII&lt;/small&gt; 문자열이 Emacs에 의해 유니 &lt;small&gt;바이트&lt;/small&gt; 문자열로 저장 되기 때문 입니다. 유니 바이트 디스플레이 또는 오버레이 문자열에 &lt;small&gt;ASCII&lt;/small&gt; 가 아닌 문자가 포함 된 경우 이러한 문자는 왼쪽에서 오른쪽 방향으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="d5f0c936454766aae72845ba282e7e98b80d8110" translate="yes" xml:space="preserve">
          <source>However, unmatched parentheses are the most common syntax errors in Lisp, and we can give further advice for those cases. (In addition, just moving point through the code with Show Paren mode enabled might find the mismatch.)</source>
          <target state="translated">그러나 일치하지 않는 괄호는 Lisp에서 가장 일반적인 구문 오류이며 이러한 경우에 대한 추가 조언을 제공 할 수 있습니다. (또한, Show Paren 모드가 활성화 된 상태에서 코드를 이동하는 것만으로도 불일치를 찾을 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="03b455b2c17a57d8e9d5c211f72b346e400cc0d9" translate="yes" xml:space="preserve">
          <source>However, when &lt;var&gt;separators&lt;/var&gt; can match the empty string, &lt;var&gt;omit-nulls&lt;/var&gt; is usually &lt;code&gt;t&lt;/code&gt;, so that the subtleties in the three previous examples are rarely relevant:</source>
          <target state="translated">그러나 &lt;var&gt;separators&lt;/var&gt; 가 빈 문자열과 일치 할 수있는 경우 &lt;var&gt;omit-nulls&lt;/var&gt; 는 일반적으로 &lt;code&gt;t&lt;/code&gt; 이므로 이전 세 가지 예의 미묘함은 거의 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="718ecf2826f15e8efa1c8dac7c4b3cccda20b651" translate="yes" xml:space="preserve">
          <source>However, when its &lt;var&gt;norecord&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;select-window&lt;/code&gt; updates the buffer list and thus indirectly runs the normal hook &lt;code&gt;buffer-list-update-hook&lt;/code&gt; (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;). Consequently, that hook provides one way to run a function whenever a window gets selected more &amp;ldquo;permanently&amp;rdquo;.</source>
          <target state="translated">그러나 &lt;var&gt;norecord&lt;/var&gt; 인수가 &lt;code&gt;nil&lt;/code&gt; 일 때 &lt;code&gt;select-window&lt;/code&gt; 는 버퍼 목록을 업데이트하므로 간접적으로 일반 후크 &lt;code&gt;buffer-list-update-hook&lt;/code&gt; 을 실행합니다 ( &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;버퍼 목록&lt;/a&gt; 참조 ). 결과적으로이 후크는 창이 더 &quot;영구적으로&quot;선택 될 때마다 함수를 실행하는 한 가지 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="79271087883810661a9b09557e9e03c0a21596a1" translate="yes" xml:space="preserve">
          <source>However, you can also create a frame without a minibuffer. Such a frame must use the minibuffer window of some other frame. That other frame will serve as &lt;em&gt;surrogate minibuffer frame&lt;/em&gt; for this frame and cannot be deleted via &lt;code&gt;delete-frame&lt;/code&gt; (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;) as long as this frame is live.</source>
          <target state="translated">그러나 미니 버퍼없이 프레임을 만들 수도 있습니다. 이러한 프레임은 다른 프레임의 미니 버퍼 창을 사용해야합니다. 다른 프레임은 이 &lt;em&gt;프레임에&lt;/em&gt; 대한 &lt;em&gt;대리 미니 버퍼 프레임&lt;/em&gt; 역할을 &lt;em&gt;하며이&lt;/em&gt; 프레임이 라이브 상태 인 한 프레임 &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;삭제 (프레임 삭제&lt;/a&gt; 참조) 를 통해 &lt;code&gt;delete-frame&lt;/code&gt; 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f14b8455423cc843b907f295eced2a775dd065fc" translate="yes" xml:space="preserve">
          <source>Human text has no string quote characters. We do not want quotation marks to turn off the usual syntactic properties of other characters in the quotation.</source>
          <target state="translated">휴먼 텍스트에는 문자열 따옴표가 없습니다. 인용 부호가 인용에서 다른 문자의 일반적인 구문 속성을 끄는 것을 원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="9f67560836cacb4e2524b4b90afead28109e8bc3" translate="yes" xml:space="preserve">
          <source>I/O operations for files and subprocesses set this variable to the coding system name that was used. The explicit encoding and decoding functions (see &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;) set it too.</source>
          <target state="translated">파일 및 하위 프로세스에 대한 I / O 작업은이 변수를 사용 된 코딩 시스템 이름으로 설정합니다. 명시 적 인코딩 및 디코딩 기능 ( &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt; 참조) 도이를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="efdc5bf687d79d6ca141c8f8c956df39a5e454a1" translate="yes" xml:space="preserve">
          <source>IBM&amp;rsquo;s AIX.</source>
          <target state="translated">IBM의 AIX.</target>
        </trans-unit>
        <trans-unit id="89f89c02cf47e091e726a4e07b88af0966806897" translate="yes" xml:space="preserve">
          <source>ID</source>
          <target state="translated">ID</target>
        </trans-unit>
        <trans-unit id="91e003cabbbc52544795f505584d809fe4bf1cdc" translate="yes" xml:space="preserve">
          <source>IEEE</source>
          <target state="translated">IEEE</target>
        </trans-unit>
        <trans-unit id="271f9ef2ea16868dc1f492eb21741835493a94db" translate="yes" xml:space="preserve">
          <source>IMAP</source>
          <target state="translated">IMAP</target>
        </trans-unit>
        <trans-unit id="badba9bfa60a25ef45b318d3e6da210839e6ca9f" translate="yes" xml:space="preserve">
          <source>ISO8859-1</source>
          <target state="translated">ISO8859-1</target>
        </trans-unit>
        <trans-unit id="302e65332ce636117a1e1a3258eec970e6b4fa4a" translate="yes" xml:space="preserve">
          <source>Ideally, a minor mode should have its desired effect regardless of the other minor modes in effect. It should be possible to activate and deactivate minor modes in any order.</source>
          <target state="translated">이상적으로, 부 모드는 다른 부 모드에 관계없이 원하는 효과를 가져야합니다. 임의의 순서로 부 모드를 활성화 및 비활성화 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="29d04e3122abcc0a8fa90513b222c8fdfb97e976" translate="yes" xml:space="preserve">
          <source>Ideally, the function described next should focus a frame without also raising it above other frames. Unfortunately, many window-systems or window managers may refuse to comply.</source>
          <target state="translated">이상적으로 다음에 설명하는 함수는 프레임을 다른 프레임 위로 올리지 않고 프레임에 초점을 맞춰야합니다. 불행히도 많은 창 시스템 또는 창 관리자는 준수를 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71869b49217f0c538915793a7950d3d69b9b0ce5" translate="yes" xml:space="preserve">
          <source>Identifier of a clip path.</source>
          <target state="translated">클립 경로의 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="07786f4d523ed61d051da615f6d04399a077035f" translate="yes" xml:space="preserve">
          <source>Idle Timers</source>
          <target state="translated">유휴 타이머</target>
        </trans-unit>
        <trans-unit id="b94b85388613ff812132cfe4fbfdcb534fff787e" translate="yes" xml:space="preserve">
          <source>If &amp;lsquo;</source>
          <target state="translated">만약 '</target>
        </trans-unit>
        <trans-unit id="aad7c6884272d1e4dcc675b2f023d1cbbc05533e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;auto-hscroll-mode&lt;/code&gt; is set, redisplay automatically alters the horizontal scrolling of a window as necessary to ensure that point is always visible. However, you can still set the horizontal scrolling value explicitly. The value you specify serves as a lower bound for automatic scrolling, i.e., automatic scrolling will not scroll a window to a column less than the specified one.</source>
          <target state="translated">경우 &lt;code&gt;auto-hscroll-mode&lt;/code&gt; 설정되어, 그 시점은 항상 볼 수 있도록 필요에 따라 윈도우의 가로 스크롤 변경 자동으로 다시 표시. 그러나 여전히 가로 스크롤 값을 명시 적으로 설정할 수 있습니다. 지정한 값은 자동 스크롤의 하한 역할을합니다. 즉, 자동 스크롤은 지정된 열보다 작은 열로 창을 스크롤하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1fe0e580e717c10f8a759c1dd7f4eeb5704a80d7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;buffer-file-name&lt;/code&gt; is the name of a symbolic link, then both numbers refer to the recursive target.</source>
          <target state="translated">경우 &lt;code&gt;buffer-file-name&lt;/code&gt; 심볼릭 링크의 이름, 다음 두 숫자는 재귀 대상을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="829541a3ac61ebdfcc9db3375a2bc43fd84f7916" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;buffer-name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, it means that &lt;var&gt;buffer&lt;/var&gt; has been killed. See &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;buffer-name&lt;/code&gt; 반환 &lt;code&gt;nil&lt;/code&gt; 을 , 그 의미 &lt;var&gt;buffer&lt;/var&gt; 살해되었다. &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="46f447c162e799d05330a676bca5b0fcb295d636" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &amp;lsquo;</source>
          <target state="translated">대 / &lt;code&gt;case-fold-search&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 '</target>
        </trans-unit>
        <trans-unit id="a0b9960e130d96964b19241ad00eff41f9ce88b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;confirm-after-completion&lt;/code&gt;, the user can exit with any input, but is asked for confirmation if the preceding command was a completion command (i.e., one of the commands in &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt;) and the resulting input is not an element of &lt;var&gt;collection&lt;/var&gt;. See &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;confirm-after-completion&lt;/code&gt; , 사용자가 어떤 입력을 종료 할 수 있지만, 앞의 명령이 완료 명령이 있다면 확인을 요청합니다 (즉,에있는 명령 중 하나 &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt; ) 및 결과 입력하지 않습니다 &lt;var&gt;collection&lt;/var&gt; 의 요소 . &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;완료 명령을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5461efaad213f3eb605cb1b5fdb92b93dcdd14ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;confirm&lt;/code&gt;, the user can exit with any input, but is asked for confirmation if the input is not an element of &lt;var&gt;collection&lt;/var&gt;.</source>
          <target state="translated">경우 &lt;code&gt;confirm&lt;/code&gt; , 사용자는 어떤 입력을 종료 할 수 있지만, 입력의 요소가 아닌 경우 확인을 요청합니다 &lt;var&gt;collection&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="56a2e2b051fdd48e6f61becb8058096fbb89bed3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ctl-arrow&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, these characters are displayed as octal escapes (see below).</source>
          <target state="translated">경우 &lt;code&gt;ctl-arrow&lt;/code&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 이러한 문자를 8 진수 이스케이프 (아래 참조)로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3a3818b3c737a83ae8f9647a2324022e11fb3240" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cursor-in-echo-area&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-event&lt;/code&gt; moves the cursor temporarily to the echo area, to the end of any message displayed there. Otherwise &lt;code&gt;read-event&lt;/code&gt; does not move the cursor.</source>
          <target state="translated">경우 &lt;code&gt;cursor-in-echo-area&lt;/code&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 다음 &lt;code&gt;read-event&lt;/code&gt; 어떤 메시지 끝으로, 에코 영역에 일시적으로 커서를 이동이 표시. 그렇지 않으면 &lt;code&gt;read-event&lt;/code&gt; 가 커서를 이동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="29272f1a3239d180b66c3ca86f82f37d4b1a93e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;edebug-all-defs&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the commands &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-current-buffer&lt;/code&gt;, and &lt;code&gt;eval-buffer&lt;/code&gt; also instrument any definitions they evaluate. Similarly, &lt;code&gt;edebug-all-forms&lt;/code&gt; controls whether &lt;code&gt;eval-region&lt;/code&gt; should instrument &lt;em&gt;any&lt;/em&gt; form, even non-defining forms. This doesn&amp;rsquo;t apply to loading or evaluations in the minibuffer. The command</source>
          <target state="translated">경우 &lt;code&gt;edebug-all-defs&lt;/code&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 다음 명령 &lt;code&gt;eval-region&lt;/code&gt; , &lt;code&gt;eval-current-buffer&lt;/code&gt; 및 &lt;code&gt;eval-buffer&lt;/code&gt; 과 같은 기기들이 임의의 평가 정의. 마찬가지로 &lt;code&gt;edebug-all-forms&lt;/code&gt; 는 &lt;code&gt;eval-region&lt;/code&gt; 이 정의되지 않은 양식을 포함하여 &lt;em&gt;모든&lt;/em&gt; 양식을 계측 해야하는지 여부를 제어합니다 . 이것은 미니 버퍼의 로딩이나 평가에는 적용되지 않습니다. 명령</target>
        </trans-unit>
        <trans-unit id="70a0cd64673c1dc0e8322c4aec31a25356783f0a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, then the value of &lt;code&gt;debug-on-error&lt;/code&gt; is not changed during &lt;code&gt;eval-expression&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; 있다 &lt;code&gt;nil&lt;/code&gt; 의 다음 값 &lt;code&gt;debug-on-error&lt;/code&gt; 동안 변경되지 않습니다 &lt;code&gt;eval-expression&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e432450f2427a1b9005131e79358edb9cd012ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;face-remapping-alist&lt;/code&gt; is buffer-local, its local value takes effect only within that buffer. If &lt;code&gt;face-remapping-alist&lt;/code&gt; includes faces applicable only to certain windows, by using the &lt;code&gt;(:filtered&amp;nbsp;(:window&amp;nbsp;&lt;var&gt;param&lt;/var&gt;&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&amp;nbsp;&lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, that face takes effect only in windows that match the filter conditions (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). To turn off face filtering temporarily, bind &lt;code&gt;face-filters-always-match&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value, then all face filters will match any window.</source>
          <target state="translated">경우 &lt;code&gt;face-remapping-alist&lt;/code&gt; 버퍼 로컬, 로컬 값은 그 버퍼에서 시행한다. 경우 &lt;code&gt;face-remapping-alist&lt;/code&gt; 포함하는 사용하여, 특정 창에 적용 직면 &lt;code&gt;(:filtered&amp;nbsp;(:window&amp;nbsp;&lt;var&gt;param&lt;/var&gt;&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&amp;nbsp;&lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; , 그 얼굴은 필터 조건 (참조 일치 창에 적용됩니다 &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;특수 속성을&lt;/a&gt; ). 얼굴 필터링을 일시적으로 끄려면 &lt;code&gt;face-filters-always-match&lt;/code&gt; 를 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값에 바인딩 하면 모든 얼굴 필터가 모든 창과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9b1649a5b7a065e83379816410d80d87cebacd78" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;file-remote-p&lt;/code&gt; returns the same identifier for two different filenames, that means they are stored on the same file system and can be accessed locally with respect to each other. This means, for example, that it is possible to start a remote process accessing both files at the same time. Implementers of file name handlers need to ensure this principle is valid.</source>
          <target state="translated">경우 &lt;code&gt;file-remote-p&lt;/code&gt; 두 개의 다른 파일 이름에 대한 동일한 식별자가 동일한 파일 시스템에 저장되고 서로에 대하여 국부적으로 액세스 될 수 있다는 의미를 반환한다. 예를 들어 동시에 두 파일에 액세스하는 원격 프로세스를 시작할 수 있습니다. 파일 이름 처리기 구현자는이 원칙이 유효한지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="a2c637ab9601d46a392ea3a8b2632dd7d555d20f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;foo&lt;/code&gt; ever returns non-&lt;code&gt;nil&lt;/code&gt;, we stop immediately and return a list of &lt;var&gt;i&lt;/var&gt; and &lt;var&gt;j&lt;/var&gt;. If &lt;code&gt;foo&lt;/code&gt; always returns &lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;catch&lt;/code&gt; returns normally, and the value is &lt;code&gt;nil&lt;/code&gt;, since that is the result of the &lt;code&gt;while&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;foo&lt;/code&gt; 는이 이제까지 비 반환 &lt;code&gt;nil&lt;/code&gt; , 우리는 즉시 중지하고 목록을 반환 &lt;var&gt;i&lt;/var&gt; 하고 &lt;var&gt;j&lt;/var&gt; . 경우 &lt;code&gt;foo&lt;/code&gt; 는이 항상 반환 &lt;code&gt;nil&lt;/code&gt; 는 &lt;code&gt;catch&lt;/code&gt; 반환 일반적으로, 값은 &lt;code&gt;nil&lt;/code&gt; 그의 결과이기 때문에, &lt;code&gt;while&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a4e5486651ab7df7edadaca89bf4d93f09bf583" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;forward-line&lt;/code&gt; encounters the beginning or end of the buffer (or of the accessible portion) before finding that many lines, it sets point there. No error is signaled.</source>
          <target state="translated">경우 &lt;code&gt;forward-line&lt;/code&gt; 시작 또는 많은 라인을 발견하기 전에, 버퍼 (또는 액세스 부)의 단부가 발생하는, 그 포인트가 설정한다. 오류 신호가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5a2d827e470d5b406aef6074dfda99815a4dff0f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function ignores field boundaries.</source>
          <target state="translated">&lt;code&gt;inhibit-field-text-motion&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 이 함수는 필드 경계를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="51043c8efef0439b6507b16e43134a965d115d5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inhibit-quit&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; on entry to &lt;code&gt;with-local-quit&lt;/code&gt;, it only executes the &lt;var&gt;body&lt;/var&gt;, and setting &lt;code&gt;quit-flag&lt;/code&gt; causes a normal quit. However, if &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; so that ordinary quitting is delayed, a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;quit-flag&lt;/code&gt; triggers a special kind of local quit. This ends the execution of &lt;var&gt;body&lt;/var&gt; and exits the &lt;code&gt;with-local-quit&lt;/code&gt; body with &lt;code&gt;quit-flag&lt;/code&gt; still non-&lt;code&gt;nil&lt;/code&gt;, so that another (ordinary) quit will happen as soon as that is allowed. If &lt;code&gt;quit-flag&lt;/code&gt; is already non-&lt;code&gt;nil&lt;/code&gt; at the beginning of &lt;var&gt;body&lt;/var&gt;, the local quit happens immediately and the body doesn&amp;rsquo;t execute at all.</source>
          <target state="translated">경우 &lt;code&gt;inhibit-quit&lt;/code&gt; 인 &lt;code&gt;nil&lt;/code&gt; 입장에서 &lt;code&gt;with-local-quit&lt;/code&gt; 가 만 실행, &lt;var&gt;body&lt;/var&gt; 및 설정이 &lt;code&gt;quit-flag&lt;/code&gt; 정상 종료시킨다. 그러나 &lt;code&gt;inhibit-quit&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니 어서 일반 종료가 지연되면 non &lt;code&gt;quit-flag&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; quit-flag 는 특별한 종류의 로컬 종료를 트리거합니다. 이것은 &lt;var&gt;body&lt;/var&gt; 의 실행을 &lt;code&gt;quit-flag&lt;/code&gt; 여전히 non - &lt;code&gt;nil&lt;/code&gt; 로 &lt;code&gt;with-local-quit&lt;/code&gt; body를 빠져 나가기 때문에, 허용되는 즉시 또 다른 (일반적인) 종료가 일어날 것입니다. &lt;code&gt;quit-flag&lt;/code&gt; 가 이미 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 &lt;var&gt;body&lt;/var&gt; 의 시작 부분 에서 로컬 종료가 즉시 발생하고 본문이 전혀 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7f8c74035a8cb997496d0b611c7ea870cf10da8a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inhibit-read-only&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, all &lt;code&gt;read-only&lt;/code&gt; character properties have no effect. If &lt;code&gt;inhibit-read-only&lt;/code&gt; is a list, then &lt;code&gt;read-only&lt;/code&gt; character properties have no effect if they are members of the list (comparison is done with &lt;code&gt;eq&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;code&gt;inhibit-read-only&lt;/code&gt; 입니다 &lt;code&gt;t&lt;/code&gt; 는 모든 &lt;code&gt;read-only&lt;/code&gt; 문자 속성은 영향을주지 않습니다. 경우 &lt;code&gt;inhibit-read-only&lt;/code&gt; 목록입니다, 다음 &lt;code&gt;read-only&lt;/code&gt; 그들 (비교가 이루어집니다 목록의 구성원 인 경우 문자 속성이 적용되지 &lt;code&gt;eq&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c55cfdc2ceba604d0d2a19cee341d55451cc14e3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initial-buffer-choice&lt;/code&gt; is a string, it visits the file (or directory) with that name. If it is a function, it calls the function with no arguments and selects the buffer that it returns. If one file is given as a command line argument, that file is visited and its buffer displayed alongside &lt;code&gt;initial-buffer-choice&lt;/code&gt;. If more than one file is given, all of the files are visited and the</source>
          <target state="translated">경우 &lt;code&gt;initial-buffer-choice&lt;/code&gt; 문자열 인, 그 이름의 파일 (또는 디렉토리)를 방문한다. 함수 인 경우 인수없이 함수를 호출하고 반환 할 버퍼를 선택합니다. 하나의 파일이 명령 줄 인수로 제공되면 해당 파일이 방문되고 해당 버퍼가 &lt;code&gt;initial-buffer-choice&lt;/code&gt; 와 함께 표시됩니다 . 두 개 이상의 파일이 제공되면 모든 파일을 방문하고</target>
        </trans-unit>
        <trans-unit id="84f9cee38c1da88e0c1e0c6c21024290eeb74a02" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialize&lt;/code&gt; is interpreted, a new list &lt;code&gt;(nil)&lt;/code&gt; is constructed each time &lt;code&gt;initialize&lt;/code&gt; is called. Thus, no side effect survives between calls. If &lt;code&gt;initialize&lt;/code&gt; is compiled, then the macro &lt;code&gt;empty-object&lt;/code&gt; is expanded during compilation, producing a single constant &lt;code&gt;(nil)&lt;/code&gt; that is reused and altered each time &lt;code&gt;initialize&lt;/code&gt; is called.</source>
          <target state="translated">경우 &lt;code&gt;initialize&lt;/code&gt; 해석됩니다, 새 목록 &lt;code&gt;(nil)&lt;/code&gt; 때마다 구성되어 &lt;code&gt;initialize&lt;/code&gt; 호출됩니다. 따라서 호출 사이에 부작용이 없습니다. 경우 &lt;code&gt;initialize&lt;/code&gt; 컴파일 한 후 매크로 &lt;code&gt;empty-object&lt;/code&gt; 단일 상수 생성, 컴파일시 확장 &lt;code&gt;(nil)&lt;/code&gt; 재사용 및 변경할 때마다 &lt;code&gt;initialize&lt;/code&gt; 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="89d03bfa14a3a599ab9f3507a4557cb5f601f879" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keyboard-translate-table&lt;/code&gt; is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;), then each character read from the keyboard is looked up in this char-table. If the value found there is non-&lt;code&gt;nil&lt;/code&gt;, then it is used instead of the actual input character.</source>
          <target state="translated">경우 &lt;code&gt;keyboard-translate-table&lt;/code&gt; 숯불 테이블이다 ( &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;숯불 테이블&lt;/a&gt; ), 각 문자는 키보드에서 읽어 본 숯불 테이블에 조회됩니다. 발견 된 값이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 실제 입력 문자 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1725c27d3e93d3aa95bcc95ca06516787abfd6a9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;load&lt;/code&gt; can&amp;rsquo;t find the file to load, then normally it signals a &lt;code&gt;file-error&lt;/code&gt; (with &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 가 로드 할 파일을 찾을 수없는 경우 일반적으로 &lt;code&gt;file-error&lt;/code&gt; ( '</target>
        </trans-unit>
        <trans-unit id="499e59af9185ce89a3a1d0eded66faf420e4b84a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;logand&lt;/code&gt; is not passed any argument, it returns a value of -1. This number is an identity element for &lt;code&gt;logand&lt;/code&gt; because its binary representation consists entirely of ones. If &lt;code&gt;logand&lt;/code&gt; is passed just one argument, it returns that argument.</source>
          <target state="translated">경우 &lt;code&gt;logand&lt;/code&gt; 가 어떤 인수를 전달되지 않습니다, 그것은 -1의 값을 반환합니다. 이 숫자는 이진 표현이 전적으로 1로 구성되기 때문에 &lt;code&gt;logand&lt;/code&gt; 의 식별 요소 입니다. &lt;code&gt;logand&lt;/code&gt; 에 하나의 인수 만 전달 되면 해당 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="93d523e894576ecda8f58bfe39e7f8ce8e569887" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;map-y-or-n-p&lt;/code&gt; is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to ask the question. In this case, it does not use keyboard input or the echo area. You can force use either of the mouse or of keyboard input by binding &lt;code&gt;last-nonmenu-event&lt;/code&gt; to a suitable value around the call.</source>
          <target state="translated">경우 &lt;code&gt;map-y-or-n-p&lt;/code&gt; 명령에서 호출되는 경우 마우스가-더 정확하게 사용하여 호출 된 것을 &lt;code&gt;last-nonmenu-event&lt;/code&gt; (참조 &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;명령 루프 정보가&lt;/a&gt; ) 중 하나 인 &lt;code&gt;nil&lt;/code&gt; 또는 목록 - 다음이 대화 상자를 사용하거나 팝업 -업 메뉴에서 질문을합니다. 이 경우 키보드 입력이나 에코 영역을 사용하지 않습니다. &lt;code&gt;last-nonmenu-event&lt;/code&gt; 를 호출 주변의 적절한 값 에 바인딩하여 마우스 또는 키보드 입력을 강제로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8c296e21aa128d3c0f5c66d8dba7e532539e929" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt; appears in the list, it separates the left-hand items from the right-hand items; items that precede the &lt;code&gt;nil&lt;/code&gt; appear on the left, and items that follow the &lt;code&gt;nil&lt;/code&gt; appear on the right. If you don&amp;rsquo;t include a &lt;code&gt;nil&lt;/code&gt; in the list, then approximately half the items appear on each side.</source>
          <target state="translated">경우 &lt;code&gt;nil&lt;/code&gt; 목록에 나타납니다, 그것은 오른쪽 항목에서 왼쪽 항목을 구분; &lt;code&gt;nil&lt;/code&gt; 앞에 오는 항목 은 왼쪽에 표시되고 &lt;code&gt;nil&lt;/code&gt; 뒤에 오는 항목 은 오른쪽에 표시됩니다. 목록에 &lt;code&gt;nil&lt;/code&gt; 을 포함하지 않으면 항목의 약 절반이 각면에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="5515e6fd078c4efad5af2f66657ba62ae9a530b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt; is not a valid value for the alternative, then it is essential to specify a valid default with &lt;code&gt;:value&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;nil&lt;/code&gt; 대안에 대한 유효한 값이 아닙니다,있는 유효한 기본 지정하는 것이 필수적입니다 &lt;code&gt;:value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25ef9611d8559538ef93f907db7709b2ec8d4a9c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt;, connection-local variables are ignored. This variable shall be changed temporarily only in special modes.</source>
          <target state="translated">경우 &lt;code&gt;nil&lt;/code&gt; , 연결 로컬 변수는 무시됩니다. 이 변수는 특수 모드에서만 일시적으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="df8d7f12804cc1e9e78af17bced00f10cca6b517" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt;, directory-local variables are ignored. This variable may be useful for modes that want to ignore directory-locals while still respecting file-local variables (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;).</source>
          <target state="translated">경우 &lt;code&gt;nil&lt;/code&gt; , 디렉토리 로컬 변수는 무시됩니다. 이 변수는 파일 로컬 변수를 고려하면서 디렉토리 로컬을 무시하려는 모드에 유용 할 수 있습니다 ( &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;파일 로컬 변수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4230ba0cfc94e6df0cc531710a6014f6be93acbc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt;, the usual minibuffer exit commands work regardless of the input in the minibuffer.</source>
          <target state="translated">경우 &lt;code&gt;nil&lt;/code&gt; , 일반적인 미니 버퍼 종료 명령은 미니 버퍼의 입력에 관계없이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="45945d579cd4d0ee9fb57f6593154b8c0695e1b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;process-environment&lt;/code&gt; contains multiple elements that specify the same environment variable, the first of these elements specifies the variable, and the others are ignored.</source>
          <target state="translated">&lt;code&gt;process-environment&lt;/code&gt; 에 동일한 환경 변수를 지정하는 여러 요소가 포함 된 경우 이러한 요소 중 첫 번째 요소는 변수를 지정하고 나머지 요소는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="658e89416338bf46256f4560192964179bf3b56a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;read-event&lt;/code&gt; gets an event that is defined as a help character, then in some cases &lt;code&gt;read-event&lt;/code&gt; processes the event directly without returning. See &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;. Certain other events, called &lt;em&gt;special events&lt;/em&gt;, are also processed directly within &lt;code&gt;read-event&lt;/code&gt; (see &lt;a href=&quot;special-events#Special-Events&quot;&gt;Special Events&lt;/a&gt;).</source>
          <target state="translated">경우 &lt;code&gt;read-event&lt;/code&gt; 도움말 문자로 정의 된 이벤트를 가져, 다음 경우에 &lt;code&gt;read-event&lt;/code&gt; 반환하지 않고 이벤트를 직접 처리합니다. &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;도움말 기능을&lt;/a&gt; 참조하십시오 . &lt;em&gt;특별 이벤트&lt;/em&gt; 라고하는 특정 다른 이벤트 도 &lt;code&gt;read-event&lt;/code&gt; 내에서 직접 처리됩니다 ( &lt;a href=&quot;special-events#Special-Events&quot;&gt;특별 이벤트&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5d06f0e4d682a5f002456d54bb3256adfff73c15" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;read-key-sequence&lt;/code&gt; receives a drag event that has no key binding, and the corresponding click event does have a binding, it changes the drag event into a click event at the drag&amp;rsquo;s starting position. This means that you don&amp;rsquo;t have to distinguish between click and drag events unless you want to.</source>
          <target state="translated">경우 &lt;code&gt;read-key-sequence&lt;/code&gt; 바인딩에는 키가없는 끌기 이벤트를 수신하고 해당 클릭 이벤트가 바인딩을 가지고, 그것은 드래그의 시작 위치에 클릭 이벤트에 끌기 이벤트를 변경합니다. 즉, 원하지 않는 한 클릭 및 드래그 이벤트를 구분할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="28fc97f8044b3adc13b5e680b4ce0e7bd56344c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sequence&lt;/code&gt; is a vector or string, &lt;code&gt;delete&lt;/code&gt; returns a copy of &lt;code&gt;sequence&lt;/code&gt; with all elements &lt;code&gt;equal&lt;/code&gt; to &lt;code&gt;object&lt;/code&gt; removed.</source>
          <target state="translated">경우 &lt;code&gt;sequence&lt;/code&gt; 벡터 또는 문자열, &lt;code&gt;delete&lt;/code&gt; 반환의 사본이 &lt;code&gt;sequence&lt;/code&gt; 의 모든 요소가 &lt;code&gt;equal&lt;/code&gt; 에 &lt;code&gt;object&lt;/code&gt; 제거.</target>
        </trans-unit>
        <trans-unit id="298a11ee0b66bdcd79a658002f445e0b0094cc31" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shift-select-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the current command was invoked via shift translation (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;shift-translation&lt;/a&gt;), this function sets the mark and temporarily activates the region, unless the region was already temporarily activated in this way. Otherwise, if the region has been activated temporarily, it deactivates the mark and restores the variable &lt;code&gt;transient-mark-mode&lt;/code&gt; to its earlier value.</source>
          <target state="translated">경우 &lt;code&gt;shift-select-mode&lt;/code&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 현재 명령 (참조 시프트 변환을 통해 호출 된 &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;변속 번역&lt;/a&gt; )이 함수는 마크를 설정하고, 영역이 이미 일시 이러한 방식으로 활성화되지 않는 한 임시 영역을 활성화한다. 그렇지 않고 영역이 일시적으로 활성화 된 경우 마크를 비활성화하고 변수 &lt;code&gt;transient-mark-mode&lt;/code&gt; 를 이전 값으로 복원합니다 .</target>
        </trans-unit>
        <trans-unit id="a06308f1911ac30acacef0585da85d0b1bd73fab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt;, the usual minibuffer exit commands won&amp;rsquo;t exit unless the input completes to an element of &lt;var&gt;collection&lt;/var&gt;.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; , 보통 미니 버퍼 종료 명령의 요소에 대한 입력이 완료되지 않는 한 종료되지 않습니다 &lt;var&gt;collection&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="416953e1029905198c9875acb2a41ab2a373fb4e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unintern&lt;/code&gt; does delete a symbol, it returns &lt;code&gt;t&lt;/code&gt;. Otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;unintern&lt;/code&gt; 이 상징이 삭제, 그것은 반환 &lt;code&gt;t&lt;/code&gt; 을 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="99904379b7e94ef6e87179b145c37ee8f04eb2dc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;window-combination-limit&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, splitting &lt;var&gt;W2&lt;/var&gt; in the initial configuration of our scenario would have produced this:</source>
          <target state="translated">경우 &lt;code&gt;window-combination-limit&lt;/code&gt; 있다 &lt;code&gt;t&lt;/code&gt; 는 , 분할 &lt;var&gt;W2&lt;/var&gt; 시나리오의 초기 구성이 생산 한 것입니다 :</target>
        </trans-unit>
        <trans-unit id="87fe06563bc8cb77eb764ca481b895cf55f1d053" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;window-combination-resize&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, splitting window &lt;var&gt;W3&lt;/var&gt; leaves the size of &lt;var&gt;W2&lt;/var&gt; unchanged:</source>
          <target state="translated">경우 &lt;code&gt;window-combination-resize&lt;/code&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , 분할 창 &lt;var&gt;W3&lt;/var&gt; 는 크기 잎 &lt;var&gt;W2&lt;/var&gt; 변경을 :</target>
        </trans-unit>
        <trans-unit id="530e02fad58c9e59a8e4781a12a36578627ba60f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;window-combination-resize&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, splitting &lt;var&gt;W3&lt;/var&gt; instead leaves all three live windows with approximately the same height:</source>
          <target state="translated">경우 &lt;code&gt;window-combination-resize&lt;/code&gt; 있다 &lt;code&gt;t&lt;/code&gt; 는 , 분할 &lt;var&gt;W3&lt;/var&gt; 는 대신 거의 같은 높이 세 라이브 창을 잎 :</target>
        </trans-unit>
        <trans-unit id="a80fdc55c9afdffa2ef6fc18444834540f21ea51" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;accept-defaults&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;lookup-key&lt;/code&gt; considers default bindings as well as bindings for the specific events in &lt;var&gt;key&lt;/var&gt;. Otherwise, &lt;code&gt;lookup-key&lt;/code&gt; reports only bindings for the specific sequence &lt;var&gt;key&lt;/var&gt;, ignoring default bindings except when you explicitly ask about them. (To do this, supply &lt;code&gt;t&lt;/code&gt; as an element of &lt;var&gt;key&lt;/var&gt;; see &lt;a href=&quot;format-of-keymaps#Format-of-Keymaps&quot;&gt;Format of Keymaps&lt;/a&gt;.)</source>
          <target state="translated">경우 &lt;var&gt;accept-defaults&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , 다음 &lt;code&gt;lookup-key&lt;/code&gt; 의 특정 이벤트에 대한 기본 바인딩뿐 아니라 바인딩 간주 &lt;var&gt;key&lt;/var&gt; . 그렇지 않으면 &lt;code&gt;lookup-key&lt;/code&gt; 는 특정 시퀀스 &lt;var&gt;key&lt;/var&gt; 대한 바인딩 만보고하고 명시 적으로 요청할 때를 제외하고는 기본 바인딩을 무시합니다. (이렇게하려면 &lt;code&gt;t&lt;/code&gt; 를 &lt;var&gt;key&lt;/var&gt; 의 요소로 제공 하십시오 . &lt;a href=&quot;format-of-keymaps#Format-of-Keymaps&quot;&gt;키맵 형식을&lt;/a&gt; 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="eccc5343e553c8ea98b7f06f96b277d88506315c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;action&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a display action to pass to &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;). Alternatively, a non-&lt;code&gt;nil&lt;/code&gt;, non-list value means to pop to a window other than the selected one&amp;mdash;even if the buffer is already displayed in the selected window.</source>
          <target state="translated">&lt;var&gt;action&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 &lt;code&gt;display-buffer&lt;/code&gt; 에 전달할 표시 작업이어야합니다 ( &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;창 선택&lt;/a&gt; 참조 ). 또는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 비 목록 값은 선택한 창에 버퍼가 이미 표시되어 있더라도 선택한 창이 아닌 다른 창으로 팝업하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="5eff92c7085cf3a076a169c6eddb3f266b6428ed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;after-find-file-from-revert-buffer&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means this call was from &lt;code&gt;revert-buffer&lt;/code&gt;. This has no direct effect, but some mode functions and hook functions check the value of this variable.</source>
          <target state="translated">&lt;var&gt;after-find-file-from-revert-buffer&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니라면 이 호출이 &lt;code&gt;revert-buffer&lt;/code&gt; 에서 온 것임을 의미합니다 . 직접적인 영향은 없지만 일부 모드 함수와 후크 함수는이 변수의 값을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5d9e1513f9a0d483e7ac718b8c0d8ed27e7b235f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; also contains a &lt;code&gt;window&lt;/code&gt; entry, its value specifies a reference window. That value can be a special symbol like &lt;code&gt;main&lt;/code&gt; which stands for the selected frame&amp;rsquo;s main window (see &lt;a href=&quot;side-window-options-and-functions#Side-Window-Options-and-Functions&quot;&gt;Side Window Options and Functions&lt;/a&gt;) or &lt;code&gt;root&lt;/code&gt; standing for the selected frame&amp;rsquo;s root window (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). It can also specify an arbitrary valid window. Any other value (or omitting the &lt;code&gt;window&lt;/code&gt; entry entirely) means to use the selected window as reference window.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 는 또한 포함 &lt;code&gt;window&lt;/code&gt; 항목을, 그 값은 참조 창을 지정합니다. 이 값은 같은 특별한 상징이 될 수 &lt;code&gt;main&lt;/code&gt; 선택한 프레임의 메인 윈도우를 의미합니다 ( &lt;a href=&quot;side-window-options-and-functions#Side-Window-Options-and-Functions&quot;&gt;사이드 창 옵션 및 기능&lt;/a&gt; ) 또는 &lt;code&gt;root&lt;/code&gt; 선택된 프레임의 루트 창 (참조 서 &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;윈도우와 프레임을&lt;/a&gt; ). 임의의 유효한 창을 지정할 수도 있습니다. 다른 값 (또는 &lt;code&gt;window&lt;/code&gt; 항목을 완전히 생략 )은 선택한 창을 참조 창으로 사용함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="725fcd581a9446ad3b9a2e6d59fd55f8a35bcd2e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;mode&lt;/code&gt; entry, its value specifes a major mode (a symbol) or a list of major modes. If &lt;var&gt;alist&lt;/var&gt; contains no &lt;code&gt;mode&lt;/code&gt; entry, the current major mode of &lt;var&gt;buffer&lt;/var&gt; is used instead. A window is a candidate if it displays a buffer whose mode derives from one of the modes specified thusly.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 는 포함 &lt;code&gt;mode&lt;/code&gt; 항목을, 그 값은 주요 모드 (상징) 또는 주요 모드의 목록을 specifes. 경우 &lt;var&gt;alist&lt;/var&gt; 가 더 포함되어 있지 않습니다 &lt;code&gt;mode&lt;/code&gt; 항목의 현재 주요 모드 &lt;var&gt;buffer&lt;/var&gt; 대신 사용됩니다. 따라서 지정된 모드 중 하나에서 모드가 파생되는 버퍼를 표시하는 창이 후보입니다.</target>
        </trans-unit>
        <trans-unit id="56ee9592cb469b948fa327f04dabd6f070822801" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;reusable-frames&lt;/code&gt; entry (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;), its value determines which frames to search for a suitable window. If &lt;var&gt;alist&lt;/var&gt; contains no &lt;code&gt;reusable-frames&lt;/code&gt; entry, this function searches just the selected frame if &lt;code&gt;display-buffer-reuse-frames&lt;/code&gt; and &lt;code&gt;pop-up-frames&lt;/code&gt; are both &lt;code&gt;nil&lt;/code&gt;; it searches all frames on the current terminal if either of those variables is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 이 유효 성분으로서 단백질이나 &lt;code&gt;reusable-frames&lt;/code&gt; 엔트리 (참조 &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;버퍼 디스플레이 동작을 Alists&lt;/a&gt; 프레임은 적합한 창을 검색하는 그 값을 결정한다). 경우 &lt;var&gt;alist&lt;/var&gt; 가 전혀 포함되지 않은 &lt;code&gt;reusable-frames&lt;/code&gt; 항목이 검색 기능 단지 선택된 프레임의 경우 &lt;code&gt;display-buffer-reuse-frames&lt;/code&gt; 및 &lt;code&gt;pop-up-frames&lt;/code&gt; 모두 &lt;code&gt;nil&lt;/code&gt; ; 변수 중 하나가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 현재 터미널의 모든 프레임을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="10852a2d11b31a0dbce952a8e6e7973867256dee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;window-min-height&lt;/code&gt; entry, this function ensures that the window used is or can become at least as high as specified by that entry&amp;rsquo;s value. Note that this is only a guarantee. In order to actually resize the window used, &lt;var&gt;alist&lt;/var&gt; must also provide an appropriate &lt;code&gt;window-height&lt;/code&gt; entry.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 이 유효 성분으로서 단백질이나 &lt;code&gt;window-min-height&lt;/code&gt; 입력 윈도우가 사용되거나 그 항목의 값에 의해 지정된 높이로 적어도 될 수 있음이 함수를 보장하지만. 이는 보증 일뿐입니다. 사용 된 창 크기를 실제로 조정하려면 &lt;var&gt;alist&lt;/var&gt; 는 적절한 &lt;code&gt;window-height&lt;/code&gt; 항목 도 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6c28abdd4a6e44e09ed2f169546521564e174bdd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry, the selected window is not eligible for use. A dedicated window is usable only if it already shows &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;previous-window&lt;/code&gt; entry, the window specified by that entry is usable even if it never showed &lt;var&gt;buffer&lt;/var&gt; before.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 는 비 포함 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; 항목을 선택한 창 사용에 적합하지 않습니다. 전용 창은 이미 &lt;var&gt;buffer&lt;/var&gt; 가 표시된 경우에만 사용할 수 있습니다. 경우 &lt;var&gt;alist&lt;/var&gt; 는 포함 &lt;code&gt;previous-window&lt;/code&gt; 항목을 해당 항목에 의해 지정된 창은 보여주지 않을 경우에도 사용할 수 &lt;var&gt;buffer&lt;/var&gt; 하기 전에.</target>
        </trans-unit>
        <trans-unit id="f5b1257b6d1ae29bb71bb8238269e77d2901c6c5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;allow-no-window&lt;/code&gt; entry, then this function does not display &lt;var&gt;buffer&lt;/var&gt; and returns the symbol &lt;code&gt;fail&lt;/code&gt;. This constitutes the only exception to the convention that an action function returns either &lt;code&gt;nil&lt;/code&gt; or a window showing &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;alist&lt;/var&gt; has no such &lt;code&gt;allow-no-window&lt;/code&gt; entry, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 는 비가 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;allow-no-window&lt;/code&gt; 항목을,이 함수는 표시되지 않습니다 &lt;var&gt;buffer&lt;/var&gt; 및 반환 상징 &lt;code&gt;fail&lt;/code&gt; . 이것은 액션 함수가 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;var&gt;buffer&lt;/var&gt; 를 보여주는 창을 반환하는 규칙에 대한 유일한 예외를 구성합니다 . 경우 &lt;var&gt;alist&lt;/var&gt; 는 그런는이 &lt;code&gt;allow-no-window&lt;/code&gt; 항목을,이 함수가 반환는 &lt;code&gt;nil&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="3635ed42481c3086b85728f6223ec2571754c106" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;frame-predicate&lt;/code&gt; entry, its value is a function taking one argument (a frame), returning non-&lt;code&gt;nil&lt;/code&gt; if the frame is a candidate; this function replaces the default predicate.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 는 비 갖는 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;frame-predicate&lt;/code&gt; 엔트리를, 그 값은 비 복귀 한 인수 (프레임)를 취득하는 기능이다 &lt;code&gt;nil&lt;/code&gt; 상기 프레임 후보 인 경우; 이 함수는 기본 술어를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="b1d2c4d2032162e5b2a0313d933be86efef19ec2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry, the selected window is not eligible for reuse. The set of frames to search for a window already displaying &lt;var&gt;buffer&lt;/var&gt; can be specified with the help of the &lt;code&gt;reusable-frames&lt;/code&gt; action alist entry. If &lt;var&gt;alist&lt;/var&gt; contains no &lt;code&gt;reusable-frames&lt;/code&gt; entry, this function searches just the selected frame.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 는 비 갖는다 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; 항목을 선택 창이 재사용에 적합하지 않다. &lt;code&gt;reusable-frames&lt;/code&gt; action alist 항목을 사용하여 이미 &lt;var&gt;buffer&lt;/var&gt; 를 표시하고있는 창을 검색하기위한 프레임 세트를 지정할 수 있습니다 . 경우 &lt;var&gt;alist&lt;/var&gt; 는 전혀 포함하지 &lt;code&gt;reusable-frames&lt;/code&gt; 항목이 검색 기능 단지 선택된 프레임.</target>
        </trans-unit>
        <trans-unit id="5cb7f9d4b67ff68e7892acfa28fb819a212c07ab" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry, the selected window is not used; thus if the selected frame has a single window, it is not used.</source>
          <target state="translated">경우 &lt;var&gt;alist&lt;/var&gt; 는 비 갖는다 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; 항목, 선택된 창은 사용되지 않는다; 따라서 선택한 프레임에 단일 창이 있으면 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c0de7397591c376720ad6e08bbe5dbfcdf6663c9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;along-with-file&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to assume that the former visited file has been renamed to &lt;var&gt;filename&lt;/var&gt;. In this case, the command does not change the buffer&amp;rsquo;s modified flag, nor the buffer&amp;rsquo;s recorded last file modification time as reported by &lt;code&gt;visited-file-modtime&lt;/code&gt; (see &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;Modification Time&lt;/a&gt;). If &lt;var&gt;along-with-file&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function clears the recorded last file modification time, after which &lt;code&gt;visited-file-modtime&lt;/code&gt; returns zero.</source>
          <target state="translated">&lt;var&gt;along-with-file&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 이전에 방문한 파일의 이름이 &lt;var&gt;filename&lt;/var&gt; 으로 변경되었다고 가정합니다 . 이 경우, 명령은 버퍼의 수정 된 플래그를 변경하지 않으며, &lt;code&gt;visited-file-modtime&lt;/code&gt; 보고 한 버퍼의 마지막 파일 수정 시간도 변경하지 않습니다 ( &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;수정 시간&lt;/a&gt; 참조 ). 경우 &lt;var&gt;along-with-file&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; ,이 기능은 기록 된 마지막 파일의 수정 시간을 클리어 후 &lt;code&gt;visited-file-modtime&lt;/code&gt; 반환 제로.</target>
        </trans-unit>
        <trans-unit id="30bff7bbc4b4d504b4c4f0335aafbcd1c86f1727" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;append&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the specified text is appended to the existing file contents (if any). If &lt;var&gt;append&lt;/var&gt; is a number, &lt;code&gt;write-region&lt;/code&gt; seeks to that byte offset from the start of the file and writes the data from there.</source>
          <target state="translated">경우 &lt;var&gt;append&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; 후 지정된 텍스트가 기존 파일 내용 (있는 경우)에 추가됩니다. 경우 &lt;var&gt;append&lt;/var&gt; 숫자이며, &lt;code&gt;write-region&lt;/code&gt; 파일의 선두로부터의 오프셋 (offset) 그 바이트을 검색하고로부터 데이터가 기록합니다.</target>
        </trans-unit>
        <trans-unit id="357d4724bb98908fbf6106edd4a5dd56e6a47ad9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the replacement text is the previous element of the kill ring. If &lt;var&gt;arg&lt;/var&gt; is numeric, the replacement is the &lt;var&gt;arg&lt;/var&gt;th previous kill. If &lt;var&gt;arg&lt;/var&gt; is negative, a more recent kill is the replacement.</source>
          <target state="translated">경우 &lt;var&gt;arg&lt;/var&gt; 있습니다 &lt;code&gt;nil&lt;/code&gt; , 후 대체 텍스트는 킬 링의 이전 요소입니다. 경우 &lt;var&gt;arg&lt;/var&gt; 숫자 인, 교체는이다 &lt;var&gt;arg&lt;/var&gt; 이전 죽 일. 경우 &lt;var&gt;arg&lt;/var&gt; 부정적이며,보다 최근의 살인은 교체입니다.</target>
        </trans-unit>
        <trans-unit id="716ebd39a60d464c65ae89843a32d535f16a8ff7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is a non-&lt;code&gt;nil&lt;/code&gt; list (which occurs interactively when the user types</source>
          <target state="translated">경우 &lt;var&gt;arg&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 에서 대화식 때 사용자 유형 발생하는 (</target>
        </trans-unit>
        <trans-unit id="76d1e59bdc71eea56fe6bd2e5ce73b2d640d780f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is a number, then &lt;code&gt;yank&lt;/code&gt; inserts the &lt;var&gt;arg&lt;/var&gt;th most recently killed text&amp;mdash;the &lt;var&gt;arg&lt;/var&gt;th element of the kill ring list, counted cyclically from the front, which is considered the first element for this purpose.</source>
          <target state="translated">경우 &lt;var&gt;arg&lt;/var&gt; 숫자 인 다음 &lt;code&gt;yank&lt;/code&gt; 인서트 &lt;var&gt;arg&lt;/var&gt; 가장 최근에 살해 번째 텍스트를-(가) &lt;var&gt;arg&lt;/var&gt; 를 이 목적에 대한 첫 번째 요소로 간주됩니다 전면에서 주기적으로 계산 킬 (kill) 링리스트의 제 요소를.</target>
        </trans-unit>
        <trans-unit id="7ce96ea9cffa29463867b2524fd328bce2c60ceb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is positive, enable backward compatibility with old-style structs.</source>
          <target state="translated">경우 &lt;var&gt;arg&lt;/var&gt; 긍정적, 이전 스타일의 구조체와의 호환성을 가능하게한다.</target>
        </trans-unit>
        <trans-unit id="4f45dc822c7ed8081aeb8ceadb802788aa326da7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;argdesc&lt;/var&gt; is a list, the arguments will be dynamically bound before executing the byte code. If &lt;var&gt;argdesc&lt;/var&gt; is an integer, the arguments will be instead pushed onto the stack of the byte-code interpreter, before executing the code.</source>
          <target state="translated">경우 &lt;var&gt;argdesc&lt;/var&gt; 이 목록입니다, 인수 동적으로 바이트 코드를 실행하기 전에 바인딩됩니다. 경우 &lt;var&gt;argdesc&lt;/var&gt; 는 정수이고, 인수 대신 코드를 실행 전에 바이트 코드 인터프리터의 스택으로 푸시한다.</target>
        </trans-unit>
        <trans-unit id="eceeaa804b4bd82db12929224d66562d4251ec1b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arglist&lt;/var&gt; is present, it must be a list of zero or more argument names, and &lt;var&gt;name&lt;/var&gt; is then defined as a parameterized form. When used in an &lt;code&gt;rx&lt;/code&gt; expression as &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;arg&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, each &lt;var&gt;arg&lt;/var&gt; will replace the corresponding argument name inside &lt;var&gt;rx-form&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;arglist&lt;/var&gt; 가있는 경우 0 개 이상의 인수 이름 목록이어야하며 &lt;var&gt;name&lt;/var&gt; 은 매개 변수가있는 형식으로 정의됩니다. 에서 사용되는 경우, &lt;code&gt;rx&lt;/code&gt; 와 같은 식 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;arg&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 각각의 &lt;var&gt;arg&lt;/var&gt; 내부의 대응하는 인수 이름 대체 할 &lt;var&gt;rx-form&lt;/var&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
